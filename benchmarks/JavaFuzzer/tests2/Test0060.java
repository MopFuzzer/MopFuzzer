// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0060 {

    public static final int N = 400;

    public static long instanceCount=50669L;
    public static float fFld=16.522F;
    public static double dFld=100.57428;
    public static int iFld=-61786;
    public static byte byFld=93;
    public boolean[] bArrFld =new boolean[N];

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i9, long l2, long l3) {

        double d=117.46586;
        int i10=-36668;
        int i12=-11;
        int i13=-10;
        int i14=-1;
        int[] iArr1 =new int[N];
        long l4=-29950L;

        FuzzerUtils.init(iArr1, 4);

        for (d = 279; d > 16; d -= 2) {
            if (i10 != 0) {
                vMeth_check_sum += i9 + l2 + l3 + Double.doubleToLongBits(d) + i10 + i12 + i13 + l4 + i14 +
                    FuzzerUtils.checkSum(iArr1);
                return;
            }
            Test0060.instanceCount &= i10;
            iArr1[(i10 >>> 1) % N] = i10;
            Test0060.instanceCount *= Test0060.instanceCount;
            try {
                i9 = (24695 / i9);
                iArr1[(int)(d - 1)] = (i10 / 6220);
                iArr1[(int)(d)] = (121 % iArr1[(int)(d)]);
            } catch (ArithmeticException a_e) {}
            for (i12 = 1; i12 < 12; i12++) {
                i13 %= (int)(i9 | 1);
                Test0060.dFld += i13;
                for (l4 = 2; 1 < l4; l4--) {
                    i9 *= (int)l3;
                    l3 *= l2;
                    i10 = i13;
                    Test0060.fFld *= Test0060.fFld;
                }
                l2 = l3;
            }
        }
        vMeth_check_sum += i9 + l2 + l3 + Double.doubleToLongBits(d) + i10 + i12 + i13 + l4 + i14 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l, long l1, float f1) {

        int i15=230;
        int i16=25232;
        int i17=-10908;
        int[][] iArr2 =new int[N][N];
        float f2=0.259F;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr2, 42756);
        FuzzerUtils.init(fArr, 2.575F);

        vMeth(Test0060.iFld, l1, -8654749525973670040L);
        i15 = 1;
        while (++i15 < 290) {
            Test0060.iFld -= (int) l;
            i16 = 6;
            do {
                f1 += -449;
                Test0060.iFld += (i16 * Test0060.instanceCount);
                for (f2 = 1; f2 < 1; ++f2) {
                    i17 = i15;
                    i17 -= (int)5924276728129841781L;
                }
                try {
                    Test0060.iFld = (150 % i17);
                    i17 = (i17 % 58);
                    iArr2[i16 + 1][i15 + 1] = (iArr2[i15][i15] / i15);
                } catch (ArithmeticException a_e) {}
                fArr[i16 + 1] += l;
                Test0060.fFld = f2;
                i17 -= i16;
                Test0060.iFld = i15;
                iArr2[i16][i15] -= (int)l1;
            } while (--i16 > 0);
        }
        long meth_res = l + l1 + Float.floatToIntBits(f1) + i15 + i16 + Float.floatToIntBits(f2) + i17 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i1, float f, int i2) {

        int i3=50314;
        int i4=-49558;
        int i5=2;
        int i6=-2;
        int i7=8;
        int i8=-11;
        int[] iArr =new int[N];
        boolean b=false;
        byte[] byArr =new byte[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, 27);
        FuzzerUtils.init(byArr, (byte)-48);
        FuzzerUtils.init(dArr, 1.68);

        i3 = 1;
        while (++i3 < 330) {
            for (i4 = i3; i4 < 5; ++i4) {
                i6 = 1;
                do {
                    i5 += (int)(110.815F + (i6 * i6));
                } while (++i6 < 1);
                for (i7 = 1; i7 > i3; i7--) {
                    iArr[i4] -= (int)(((byArr[i7 - 1] *= (byte)i4) % ((iArr[i7 - 1] = i1) | 1)) / (((long)((-(f + -40))
                        + (i4 * i2))) | 1));
                    dArr[i3 + 1] = (iMeth(Test0060.instanceCount, Test0060.instanceCount, f) * Test0060.dFld);
                }
                Test0060.dFld = -14;
                i5 = i7;
                iArr[i3] <<= i8;
                i5 += i4;
                if (b) break;
                Test0060.instanceCount += Test0060.instanceCount;
                Test0060.instanceCount += (i4 * i4);
                Test0060.instanceCount = (long) 1.584F;
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-202;
        int i18=965;
        int i19=-59779;
        int i20=59762;
        int i22=181;
        int i23=-143;
        int i24=85;
        int i25=4;
        int i26=-12;
        int[] iArr3 =new int[N];
        long l5=-2229958674L;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr3, -3);
        FuzzerUtils.init(lArr, -990710875L);

        i = (int) ((--Test0060.fFld) * ((-31182 + (i - i)) * lMeth(i, Test0060.fFld, Test0060.iFld)));
        for (i18 = 5; i18 < 377; i18++) {
            i19 = (int) Test0060.fFld;
            Test0060.iFld -= i20;
            i19 -= i18;
            switch ((i18 % 6) + 32) {
            case 32:
                i19 += (int)37L;
                Test0060.fFld -= Test0060.byFld;
                break;
            case 33:
                i22 = 1;
                while (++i22 < 68) {
                    try {
                        i = (60241 % i19);
                        i = (i20 % i);
                        i19 = (iArr3[i18 - 1] % i);
                    } catch (ArithmeticException a_e) {}
                    for (i23 = i22; i23 < 1; ++i23) {
                        i += (i23 * i23);
                        Test0060.instanceCount = Test0060.instanceCount;
                        bArrFld = bArrFld;
                        Test0060.iFld += (25713 + (i23 * i23));
                        Test0060.instanceCount += i23;
                    }
                    i24 += i23;
                    Test0060.fFld += i22;
                    Test0060.iFld ^= i24;
                    for (i25 = 1; 1 > i25; i25++) {
                        i -= i18;
                        Test0060.dFld -= Test0060.instanceCount;
                        Test0060.byFld -= (byte) Test0060.dFld;
                        i26 = i18;
                        l5 *= i25;
                    }
                    Test0060.fFld = i25;
                    iArr3 = iArr3;
                }
                lArr[i18 + 1] >>= i20;
                i24 = i24;
                iArr3[i18 + 1] <<= i22;
                break;
            case 34:
                Test0060.iFld += (i18 + i25);
                break;
            case 35:
                l5 = l5;
                break;
            case 36:
                iArr3[i18 - 1] |= i26;
                break;
            case 37:
            }
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i22 i23 = " + i20 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("l5 iArr3 lArr = " + l5 + "," + FuzzerUtils.checkSum(iArr3) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0060.instanceCount Test0060.fFld Test0060.dFld = " + Test0060.instanceCount + "," +
                Float.floatToIntBits(Test0060.fFld) + "," + Double.doubleToLongBits(Test0060.dFld));
        FuzzerUtils.out.println("Test0060.iFld Test0060.byFld bArrFld = " + Test0060.iFld + "," + Test0060.byFld + "," +
            FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0060 _instance = new Test0060();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
