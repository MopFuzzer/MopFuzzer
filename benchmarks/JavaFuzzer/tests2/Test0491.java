// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0491 {

    public static final int N = 400;

    public static long instanceCount=-32320L;
    public int iFld=198;
    public static volatile double dFld=54.75495;
    public static int[] iArrFld =new int[N];
    public double[][] dArrFld =new double[N][N];

    static {
        FuzzerUtils.init(Test0491.iArrFld, 38);
    }

    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i12=-6599, i13=206, i14=-14, i15=-84, i16=-6812, i17=-235, i18=3;
        byte by2=74;
        float f1=2.1010F;
        double d1=81.33320;

        for (i12 = 7; i12 < 322; i12++) {
            Test0491.instanceCount += (((i12 * i12) + Test0491.instanceCount) - Test0491.instanceCount);
            i13 += i12;
            i14 <<= (int) Test0491.instanceCount;
            i13 *= i14;
            i14 += (((i12 * by2) + Test0491.instanceCount) - i12);
            f1 = -2;
            for (i15 = 1; i15 < 5; ++i15) {
                i13 *= i16;
                d1 = 57773;
                i16 += (int) Test0491.instanceCount;
                for (i17 = 1; i17 < 2; i17++) {
                    Test0491.iArrFld[i15 + 1] >>= i12;
                    i14 += (((i17 * f1) + i12) - i15);
                    i16 -= (int)f1;
                }
            }
        }
        long meth_res = i12 + i13 + i14 + by2 + Float.floatToIntBits(f1) + i15 + i16 + Double.doubleToLongBits(d1) +
            i17 + i18;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(short s2, long l, int i10) {

        double d=1.46699;
        int i11=32297, i19=-163, i20=32635, i21=-1, i22=-21, i23=1;
        byte by1=-115;
        float f2=1.656F;
        short[] sArr =new short[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(sArr, (short)14208);
        FuzzerUtils.init(lArr1, 224L);

        for (d = 4; d < 222; d++) {
            by1 = (byte)(i10 - (sArr[(int)(d)]++));
            i10 = (int)(89.458F - lMeth());
            for (i19 = 1; i19 < 7; ++i19) {
                i21 *= i20;
                sArr[i19 - 1] -= (short)l;
                i10 -= i22;
                Test0491.iArrFld[(i20 >>> 1) % N] = i10;
            }
            i23 = 1;
            do {
                f2 = 1;
                while (--f2 > 0) {
                    i22 = i20;
                    Test0491.iArrFld[(int) (d - 1)] = i11;
                    i22 = i10;
                    l = i19;
                    lArr1[(int) (d - 1)] *= Test0491.instanceCount;
                }
            } while (++i23 < 7);
        }
        long meth_res = s2 + l + i10 + Double.doubleToLongBits(d) + i11 + by1 + i19 + i20 + i21 + i22 + i23 +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static short sMeth(short s1, int i5, float f) {

        int i6=8;
        int i7=63176;
        int i8=52420;
        int i9=6316;
        int i24=199;
        int[] iArr =new int[N];
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(lArr2, -7228L);

        for (i6 = 9; 378 > i6; ++i6) {
            for (i8 = 1; i8 < 5; i8++) {
                iArr[i8] >>= (int) (Test0491.instanceCount = (iMeth(s1, Test0491.instanceCount, 223) + Test0491.instanceCount));
                i7 -= i5;
                switch ((((i9 >>> 1) % 10) * 5) + 115) {
                case 146:
                    i7 += i9;
                    i9 += (i8 * i8);
                    i9 += (i8 * i8);
                    break;
                case 155:
                    Test0491.instanceCount <<= i7;
                    i7 *= i6;
                    i7 += i5;
                case 132:
                    f += (((i8 * f) + Test0491.instanceCount) - i9);
                    i7 += (int)(-9L + (i8 * i8));
                    break;
                case 133:
                    iArr[i6 - 1] &= i8;
                    try {
                        i5 = (i9 / i8);
                        i24 = (i7 / i24);
                        iArr[i6] = (i9 % Test0491.iArrFld[i6]);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 138:
                    lArr2[i8 - 1] = i24;
                    break;
                case 117:
                    s1 <<= (short)i8;
                    break;
                case 142:
                    Test0491.instanceCount >>= Test0491.instanceCount;
                    break;
                case 164:
                    Test0491.instanceCount = (long) Test0491.dFld;
                    break;
                case 163:
                    i9 = i8;
                    break;
                case 140:
                    f /= 2;
                    break;
                }
            }
        }
        long meth_res = s1 + i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i24 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr2);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=-50;
        int i=-40780, i1=-165, i2=-40874, i3=0, i4=10, i25=-119, i26=45461, i27=-12, i28=-61264;
        float f3=2.791F;
        boolean b=false;
        short s3=12623;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 8L);

        iFld = (int)((lArr[(iFld >>> 1) % N]--) * ((++lArr[(34865 >>> 1) % N]) + by));
        i = (int) (++Test0491.instanceCount);
        for (i1 = 129; i1 > 4; --i1) {
            for (i3 = i1; i3 < 201; ++i3) {
                short s=-4050;
                s += (short)(((iFld++) + (i + i2)) - sMeth(s, i1, f3));
                Test0491.instanceCount = i4;
                i2 -= (int)52239L;
                dArrFld = dArrFld;
                for (i25 = 1; i25 > 1; i25--) {
                    i26 <<= i2;
                    i += (int) Test0491.instanceCount;
                    Test0491.instanceCount = -7;
                    Test0491.instanceCount >>>= i3;
                    Test0491.instanceCount += (i25 | i26);
                    i2 += i25;
                    f3 += i25;
                    b = b;
                }
                for (i27 = 1; i27 < 1; ++i27) {
                    i -= (int)f3;
                    b = true;
                    Test0491.iArrFld[i1] = i25;
                    Test0491.instanceCount = by;
                    try {
                        i2 = (-63 % i27);
                        i26 = (43 % Test0491.iArrFld[i27]);
                        i2 = (i1 / i27);
                    } catch (ArithmeticException a_e) {}
                    i -= i28;
                    Test0491.dFld = Test0491.instanceCount;
                    i28 += i27;
                    f3 = i2;
                    b = true;
                }
            }
            Test0491.iArrFld[i1 + 1] = s3;
            iFld += (219 + (i1 * i1));
        }

        FuzzerUtils.out.println("by i i1 = " + by + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("f3 i25 i26 = " + Float.floatToIntBits(f3) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("b i27 i28 = " + (b ? 1 : 0) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("s3 lArr = " + s3 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0491.instanceCount iFld Test0491.dFld = " + Test0491.instanceCount + "," + iFld + "," +
                Double.doubleToLongBits(Test0491.dFld));
        FuzzerUtils.out.println("Test0491.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test0491.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0491 _instance = new Test0491();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
