// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0298 {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static long lFld=-3357207551L;
    public static float fFld=1.325F;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, int i3) {

        byte by=76;

        by = (byte)i3;
        vMeth1_check_sum += i2 + i3 + by;
    }

    public static int iMeth(long l, double d1, int i1) {

        float f=1.398F;
        byte by1=75;
        int i4=-7740, i5=-237, i6=37629, i7=-5, i8=4, i9=-5082, i10=-15, i11=11;

        l = ((i1 = (-212 + i1)) * i1);
        vMeth1(i1, i1);
        f -= i1;
        Test0298.instanceCount = Test0298.instanceCount;
        i1 = by1;
        i1 = i1;
        for (i4 = 16; 335 > i4; i4++) {
            for (i6 = 1; i6 < 5; i6++) {
                Test0298.lFld >>>= i1;
                i7 += (int)f;
                for (i8 = 1; i8 < 2; i8++) {
                    i5 = i4;
                }
                for (i10 = 1; 2 > i10; ++i10) {
                    i5 |= i8;
                    i9 /= (int)(i4 | 1);
                }
            }
        }
        long meth_res = l + Double.doubleToLongBits(d1) + i1 + Float.floatToIntBits(f) + by1 + i4 + i5 + i6 + i7 + i8 +
            i9 + i10 + i11;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        double d=-41.105549;
        double[] dArr =new double[N];
        int i=23042, i12=30302, i13=33161, i14=7;
        float f1=-2.744F;

        FuzzerUtils.init(dArr, -74.21025);

        for (d = 11; d < 286; ++d) {
            i = (i + iMeth(Test0298.lFld, d, i));
            f1 = 1;
            while (++f1 < 6) {
                try {
                    i = (1738 / i);
                    i = (i % i);
                    i = (138 % i);
                } catch (ArithmeticException a_e) {}
                i += 5;
            }
            Test0298.lFld = Test0298.lFld;
        }
        i -= (int)f1;
        for (i12 = 7; i12 < 139; i12++) {
            try {
                i13 = (63035 / i);
                i13 = (i13 % i13);
                i13 = (57356 % i);
            } catch (ArithmeticException a_e) {}
            Test0298.instanceCount += (i12 + f1);
            switch ((i12 % 3) + 125) {
            case 125:
                i14 = 1;
                while (++i14 < 12) {
                    dArr[i14] += i12;
                    i += i12;
                    iArrFld[i12] = i14;
                }
                break;
            case 126:
                i -= i13;
                break;
            case 127:
                i13 += (int)2932913726L;
                break;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + Float.floatToIntBits(f1) + i12 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i15=241, i16=6, i17=6, i18=10138, i19=-204, i20=-7;
        float f2=0.114F;
        boolean b=true;
        short s=7815;
        double d2=0.42934;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -7070092726393654544L);

        vMeth();
        for (i15 = 301; i15 > 4; i15--) {
            switch (((i15 % 9) * 5) + 45) {
            case 65:
                f2 = 1;
                do {
                    i16 = i15;
                    switch ((int)(((f2 % 2) * 5) + 14)) {
                    case 16:
                    case 18:
                        if (b) {
                            Test0298.instanceCount += (long) (((f2 * i16) + Test0298.lFld) - i16);
                            i16 -= (int)-6578507845190046606L;
                            Test0298.fFld += Test0298.instanceCount;
                            Test0298.lFld >>= Test0298.lFld;
                        }
                        if (b) break;
                        for (i17 = 1; i17 < 4; ++i17) {
                            switch (((i15 >>> 1) % 2) + 5) {
                            case 5:
                                i16 = (int) Test0298.instanceCount;
                                iArrFld[(int) (f2)] = (int) Test0298.instanceCount;
                                Test0298.fFld -= 74;
                                Test0298.fFld -= Test0298.instanceCount;
                                break;
                            case 6:
                            default:
                                s += (short) (((i17 * Test0298.fFld) + i18) - i17);
                                Test0298.fFld += s;
                            }
                            i18 -= i16;
                            Test0298.fFld = 11;
                            if (b) continue;
                            i16 = 111;
                        }
                    default:
                        i18 *= i17;
                        for (i19 = (int)(f2); i19 < 4; i19++) {
                            Test0298.lFld += i20;
                            i20 *= (int) Test0298.instanceCount;
                            i20 -= 55710;
                        }
                        i16 = (int)d2;
                    }
                } while ((f2 += 3) < 85);
            case 61:
                i18 = (int) Test0298.instanceCount;
            case 69:
                i18 += i19;
                break;
            case 89:
                iArrFld[i15 + 1] ^= (int) Test0298.lFld;
                break;
            case 75:
                iArrFld[i15] += i15;
                break;
            case 50:
                i20 += i15;
                break;
            case 47:
                iArrFld[i15] += i18;
            case 90:
                if (true) break;
                break;
            case 87:
                Test0298.lFld /= 250;
            default:
                lArr[i15 + 1] = 0;
            }
        }

        FuzzerUtils.out.println("i15 i16 f2 = " + i15 + "," + i16 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("b i17 i18 = " + (b ? 1 : 0) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("s i19 i20 = " + s + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d2 lArr = " + Double.doubleToLongBits(d2) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0298.instanceCount Test0298.lFld Test0298.fFld = " + Test0298.instanceCount + "," + Test0298.lFld +
                "," + Float.floatToIntBits(Test0298.fFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0298 _instance = new Test0298();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
