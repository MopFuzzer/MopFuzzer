// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0085 {

    public static final int N = 400;

    public static volatile long instanceCount=78799746L;
    public static short sFld=-14047;
    public static volatile boolean bFld=false;
    public static volatile double dFld=20.96375;

    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i6, int i7) {

        int i8=6702;
        int i9=-42538;
        int i10=-2;
        int i11=10;
        int[] iArr =new int[N];
        byte by=-17;
        byte[] byArr =new byte[N];
        boolean b1=false;

        FuzzerUtils.init(byArr, (byte)122);
        FuzzerUtils.init(iArr, 32);

        i8 = 327;
        do {
            if (i7 != 0) {
                vMeth_check_sum += i6 + i7 + i8 + i9 + by + i10 + i11 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(byArr) +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
            switch ((i8 % 7) + 100) {
            case 100:
                byArr[i8 - 1] = (byte)i9;
                by = (byte) Test0085.instanceCount;
                i6 >>>= (int) Test0085.instanceCount;
                for (i10 = i8; i10 < 5; ++i10) {
                    i11 -= -7;
                    Test0085.instanceCount += i10;
                    iArr[i8 - 1] += i8;
                    try {
                        i11 = (i9 % 288381384);
                        i7 = (i9 / i9);
                        i7 = (511651054 % i7);
                    } catch (ArithmeticException a_e) {}
                    Test0085.instanceCount = i8;
                }
                break;
            case 101:
                i7 = i7;
                i11 &= i11;
                i7 = i6;
            case 102:
                i7 += (i8 * by);
            case 103:
                if (b1) break;
                break;
            case 104:
                Test0085.instanceCount -= Test0085.instanceCount;
                break;
            case 105:
                i7 = i11;
                break;
            case 106:
                if (i7 != 0) {
                    vMeth_check_sum += i6 + i7 + i8 + i9 + by + i10 + i11 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(byArr)
                        + FuzzerUtils.checkSum(iArr);
                    return;
                }
                break;
            }
        } while (--i8 > 0);
        vMeth_check_sum += i6 + i7 + i8 + i9 + by + i10 + i11 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(float f1, long l, int i3) {

        int i4=2, i5=2112, i12=14, i13=-104, i14=-1;

        for (i4 = 12; i4 < 238; ++i4) {
            i5 += i4;
            Test0085.sFld = (short) l;
            vMeth(-7, i3);
            Test0085.instanceCount <<= i3;
            Test0085.bFld = Test0085.bFld;
        }
        for (i12 = 5; i12 < 148; i12++) {
            Test0085.bFld = Test0085.bFld;
            i13 += i3;
            f1 += i12;
            i13 = (int)26.106681;
            i13 += (i12 * i12);
            i14 = (int)l;
        }
        Test0085.instanceCount += i3;
        Test0085.instanceCount -= -35902;
        long meth_res = Float.floatToIntBits(f1) + l + i3 + i4 + i5 + i12 + i13 + i14;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public boolean bMeth() {

        int i=-12429, i1=6, i2=-11, i15=29569, i16=23687;
        float f=0.366F;
        float f2=47.463F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, -4.138F);
        FuzzerUtils.init(lArr, 6L);

        for (i = 15; i < 289; ++i) {
            for (f = 1; 6 > f; f++) {
                fArr[(int) (f - 1)] = (iMeth(f, 2374165108L, i2) * Test0085.instanceCount);
                if (Test0085.bFld) break;
                Test0085.instanceCount = Test0085.instanceCount;
                lArr = lArr;
                for (i15 = 2; 1 < i15; --i15) {
                    i1 >>>= i;
                    Test0085.instanceCount += (long) 1.66916;
                    Test0085.instanceCount -= Test0085.sFld;
                    i2 = 5;
                    i1 <<= i;
                    i16 -= (int)-96.115001;
                    f2 *= i1;
                    if (Test0085.bFld) break;
                }
            }
        }
        long meth_res = i + i1 + Float.floatToIntBits(f) + i2 + i15 + i16 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        boolean b=true;
        int i17=-45205;
        int i18=-6;
        int i19=52409;
        int i20=238;
        int i21=76;
        int i22=-6;
        int i23=88;
        int i24=-10221;
        int i25=-4;
        int i26=-23846;
        int i27=32784;
        int[][] iArr1 =new int[N][N];
        float f4=2.864F;
        float[] fArr1 =new float[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr1, -10);
        FuzzerUtils.init(fArr1, 103.839F);
        FuzzerUtils.init(lArr1, -25065L);

        b = (bMeth() & Test0085.bFld);
        for (i17 = 9; i17 < 157; i17++) {
            i18 = -9;
            i18 += i18;
            iArr1 = iArr1;
            i18 += (int) Test0085.instanceCount;
            for (i19 = 8; i19 < 169; ++i19) {
                for (i21 = 1; i21 < 2; ++i21) {
                    i18 += (int) Test0085.dFld;
                    i20 += (i21 * i21);
                    lArr1[i21] = i22;
                }
                Test0085.instanceCount >>= i20;
                for (i23 = 1; i23 < 2; i23++) {
                    i20 += (int) Test0085.dFld;
                    Test0085.dFld = -142;
                }
            }
            for (i25 = 169; 4 < i25; i25--) {
                if (Test0085.bFld) {
                    i18 = (int)-6590L;
                    Test0085.instanceCount &= i22;
                    i27 = 1;
                    do {
                        Test0085.instanceCount += i23;
                        if (b) {
                            if (Test0085.bFld) {
                                f4 = i23;
                            } else {
                                iArr1[i27][i27] = i24;
                                if (b) {
                                    i20 -= (int) Test0085.instanceCount;
                                } else {
                                    i20 &= i22;
                                    i22 += -42250;
                                    Test0085.dFld = -166;
                                }
                            }
                        } else {
                            iArr1[i27][i27] = (int)44487L;
                        }
                    } while (++i27 < 2);
                } else if (false) {
                    Test0085.instanceCount = i24;
                }
            }
        }

        FuzzerUtils.out.println("b i17 i18 = " + (b ? 1 : 0) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("f4 iArr1 fArr1 = " + Float.floatToIntBits(f4) + "," + FuzzerUtils.checkSum(iArr1) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0085.instanceCount Test0085.sFld Test0085.bFld = " + Test0085.instanceCount + "," + Test0085.sFld +
                "," + (Test0085.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0085.dFld = " + Double.doubleToLongBits(Test0085.dFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0085 _instance = new Test0085();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
