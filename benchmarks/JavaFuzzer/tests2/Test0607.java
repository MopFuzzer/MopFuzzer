// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0607 {

    public static final int N = 400;

    public static long instanceCount=-3992584371L;
    public static short sFld=8588;
    public static float fFld=-31.485F;
    public static boolean bFld=true;
    public short[] sArrFld =new short[N];
    public static int[][] iArrFld =new int[N][N];
    public static long[][] lArrFld =new long[N][N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0607.iArrFld, 23847);
        FuzzerUtils.init(Test0607.lArrFld, 11L);
        FuzzerUtils.init(Test0607.fArrFld, 1.768F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        double d=0.26140;
        double[] dArr =new double[N];
        int i14=18183, i15=7, i16=149, i17=-44280, i18=-104;
        boolean b=true;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -75.356F);
        FuzzerUtils.init(dArr, 1.84028);

        d %= (i14 | 1);
        Test0607.iArrFld[(i14 >>> 1) % N][(8 >>> 1) % N] = (int) Test0607.instanceCount;
        fArr[(i15 >>> 1) % N] -= i14;
        Test0607.fFld -= i15;
        i15 = i15;
        dArr[(i15 >>> 1) % N] *= i15;
        for (i16 = 3; 232 > i16; i16++) {
            if (b) {
                i14 = -1;
                i14 *= i15;
                i14 += i16;
                fArr[i16 + 1] += i16;
            } else {
                i18 = 1;
                do {
                    Test0607.iArrFld[i16 - 1][i18] -= (int) d;
                    Test0607.fFld -= i18;
                } while ((i18 += 2) < 7);
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i14 + i15 + i16 + i17 + (b ? 1 : 0) + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i9, float f1, int i10) {

        int i11=-182, i12=8, i13=-920;
        byte by=-127;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 25.73F);

        Test0607.instanceCount <<= (Test0607.lArrFld[(i10 >>> 1) % N][(i9 >>> 1) % N] - ((Test0607.instanceCount - i10) *
                Test0607.instanceCount));
        for (i11 = 17; i11 < 357; i11++) {
            if (i10 != 0) {
            }
            Test0607.instanceCount += (i11 | Test0607.instanceCount);
            i13 = 1;
            while ((i13 += 2) < 5) {
                Test0607.iArrFld[i13][(6 >>> 1) % N] += (int) f1;
                i9 &= iMeth1();
                if (true) break;
                f1 = by;
                i12 -= i11;
                Test0607.bFld = Test0607.bFld;
                Test0607.iArrFld[i11 - 1][(i9 >>> 1) % N] = (int) Test0607.instanceCount;
                i12 += (i13 * i13);
                fArr1[i13 + 1] -= i13;
            }
            Test0607.instanceCount = Test0607.instanceCount;
        }
        long meth_res = i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, float f, int i4) {

        int i5=254, i6=7, i7=152, i8=-13, i19=247, i20=54809, i21=19126;
        float f2=103.963F;
        double d1=-2.1579;

        for (i5 = 256; i5 > 12; i5 -= 2) {
            if (i4 <= 115) break;
            for (i7 = i5; i7 < 13; i7++) {
                Test0607.instanceCount = iMeth(4, f, i8);
                for (f2 = i5; f2 < 1; f2++) {
                    i3 >>= (int) Test0607.instanceCount;
                    i19 >>= i3;
                }
                switch (((i7 % 8) * 5) + 118) {
                case 132:
                    i6 *= i5;
                    i8 = -12531;
                    break;
                case 144:
                    i6 = (int) Test0607.instanceCount;
                    break;
                case 135:
                    i4 = i5;
                    break;
                case 119:
                    for (i20 = 1; i20 < 1; ++i20) {
                        Test0607.fArrFld[i5] += -103.815F;
                        i4 -= i7;
                    }
                    break;
                case 155:
                    d1 -= Test0607.instanceCount;
                    break;
                case 143:
                    i4 += (i7 * i7);
                    break;
                case 142:
                    i3 += Test0607.sFld;
                    break;
                case 147:
                    Test0607.iArrFld[i7 - 1][i7] -= i21;
                    break;
                }
            }
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + i19 + i20
            + i21 + Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i=-14;
        int i1=16737;
        int i2=0;
        int[] iArr =new int[N];
        double d2=9.66868;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -2424);
        FuzzerUtils.init(lArr, -7060962413521906699L);

        i = ((-14 * (i - i)) - i);
        i = (int) (((--iArr[(-134 >>> 1) % N]) * (Test0607.instanceCount * Test0607.instanceCount)) * ((43841L - (i - i)) -
            (++i)));
        lArr[(i >>> 1) % N] <<= ((Test0607.sFld *= (short) (i - i)) + (++i));
        i *= (((Test0607.sFld + 37168) - (-(-(++i)))) >>> ((i--) + -5));
        Test0607.instanceCount <<= (i++);
        for (i1 = 2; i1 < 375; i1++) {
            sArrFld[i1 + 1] = (short)(++i2);
            Test0607.iArrFld = (Test0607.iArrFld = (Test0607.iArrFld = (Test0607.iArrFld = Test0607.iArrFld)));
            i -= (int)Math.sqrt((i2 + i2) * (-12716 + (i2++)));
        }
        vMeth(-28477, Test0607.fFld, i2);
        i -= (int)d2;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("d2 iArr lArr = " + Double.doubleToLongBits(d2) + "," + FuzzerUtils.checkSum(iArr) +
            "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0607.instanceCount Test0607.sFld Test0607.fFld = " + Test0607.instanceCount + "," + Test0607.sFld +
                "," + Float.floatToIntBits(Test0607.fFld));
        FuzzerUtils.out.println("Test0607.bFld sArrFld Test0607.iArrFld = " + (Test0607.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(sArrFld) + "," + FuzzerUtils.checkSum(Test0607.iArrFld));
        FuzzerUtils.out.println("Test0607.lArrFld Test0607.fArrFld = " + FuzzerUtils.checkSum(Test0607.lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0607.fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0607 _instance = new Test0607();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
