// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0103 {

    public static final int N = 400;

    public static long instanceCount=61801L;
    public static int iFld=-5;
    public byte byFld=-101;
    public boolean bFld=true;
    public static int iFld1=-49089;
    public static float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0103.fArrFld, 0.124F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6) {

        int i7=5;
        int i8=7516;
        int i9=-75;
        int[][] iArr =new int[N][N];
        double d=2.104234;
        float f3=2.730F;
        float[] fArr =new float[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 177);
        FuzzerUtils.init(fArr, -2.81F);

        for (i7 = 13; i7 < 290; ++i7) {
            try {
                i8 = (Test0103.iFld % i6);
                i6 = (iArr[i7][i7 - 1] / -2073841527);
                i6 = (Test0103.iFld % i8);
            } catch (ArithmeticException a_e) {}
            i8 = Test0103.iFld;
            i8 = (int)d;
            if (b) {
                i6 = (int) Test0103.instanceCount;
                i6 -= (int)f3;
                i9 = 1;
                do {
                    b = b;
                    i6 += (int)f3;
                    d = i9;
                    iArr[i9 + 1][i7 - 1] = (int) Test0103.instanceCount;
                    i6 -= i8;
                    fArr[i7] += i6;
                    Test0103.iFld = (int) d;
                } while (++i9 < 6);
            }
        }
        long meth_res = i6 + i7 + i8 + Double.doubleToLongBits(d) + Float.floatToIntBits(f3) + i9 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, float f2) {

        int i2=-48808;
        int i3=-47947;
        int i4=-63906;
        int i5=-44295;
        int i10=18487;
        int i11=4;
        int[][] iArr1 =new int[N][N];
        byte by=-67;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -105);
        FuzzerUtils.init(lArr, -41330L);

        for (i2 = 10; i2 < 169; i2++) {
            i1 += (i2 ^ i3);
            for (i4 = 1; i4 < 10; ++i4) {
                Test0103.iFld *= iMeth(i3);
                by >>>= (byte)i5;
                iArr1[i2][i4 - 1] = i2;
                i3 = (int) Test0103.instanceCount;
                Test0103.iFld >>= i2;
                switch (((i2 >>> 1) % 2) + 52) {
                case 52:
                    iArr1[(i1 >>> 1) % N][i4 - 1] &= i1;
                    for (i10 = 1; 2 > i10; i10++) {
                        lArr[i10 + 1] *= i3;
                        i3 >>= -80;
                        i1 >>= i10;
                    }
                    Test0103.fArrFld[i4 - 1][i2] -= i3;
                case 53:
                    Test0103.instanceCount -= i10;
                default:
                    Test0103.instanceCount = i5;
                }
            }
        }
        vMeth1_check_sum += i1 + Float.floatToIntBits(f2) + i2 + i3 + i4 + i5 + by + i10 + i11 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(long l, long l1) {

        float f1=109.203F;
        int i12=10, i13=-40166, i14=-10, i15=41394;
        double d1=50.72559, d2=0.83743;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-18224);

        Test0103.iFld ^= (int) ((++Test0103.iFld) - ((l - Test0103.iFld) + Test0103.iFld));
        Test0103.iFld ^= (int) (f1 - 2.258F);
        vMeth1(Test0103.iFld, f1);
        i12 = 207;
        do {
            sArr[i12] -= (short) Test0103.iFld;
            d1 += Test0103.iFld;
            f1 = i12;
        } while (--i12 > 0);
        for (d2 = 6; d2 < 262; d2++) {
            f1 = (float)d2;
            Test0103.iFld += (int) -91.69456;
            for (i14 = 1; i14 < 6; ++i14) {
                i13 += (i14 * i14);
                i13 = i14;
                Test0103.iFld += i12;
                Test0103.instanceCount = i14;
            }
        }
        vMeth_check_sum += l + l1 + Float.floatToIntBits(f1) + i12 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(d2) + i13 + i14 + i15 + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-6;
        int i16=40569;
        int i17=5725;
        int i18=242;
        int i19=-52037;
        int i20=-9;
        int i21=146;
        int i22=-46967;
        int i23=79;
        int[] iArr2 =new int[N];
        float f=2.39F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr2, 79);
        FuzzerUtils.init(lArr1, 152L);

        i -= (int)(f--);
        vMeth(-154L, Test0103.instanceCount);
        Test0103.iFld += 14;
        i16 = 1;
        do {
            try {
                i = (106 / i);
                iArr2[i16] = (110 % i16);
                Test0103.iFld = (i % iArr2[i16 - 1]);
            } catch (ArithmeticException a_e) {}
            i17 = 1;
            do {
                for (i18 = 1; i18 > 1; i18 -= 3) {
                    i -= byFld;
                    i += i18;
                    if (bFld) continue;
                    Test0103.instanceCount = i;
                    Test0103.iFld = i16;
                    Test0103.iFld += i18;
                    Test0103.instanceCount >>= Test0103.iFld;
                }
                i >>= (int)-46L;
            } while (++i17 < 63);
            for (i20 = 3; i20 < 63; ++i20) {
                for (i22 = 2; i22 > i20; i22--) {
                    i += i17;
                    i21 |= i;
                    lArr1[i20 - 1] %= 154;
                    if (bFld) continue;
                    bFld = bFld;
                }
                Test0103.fArrFld[i16 - 1][i16] *= i23;
                iArr2[i16 - 1] -= (int) Test0103.instanceCount;
                i21 += (((i20 * i16) + i17) - Test0103.instanceCount);
            }
            if (bFld) {
                i23 -= Test0103.iFld;
            } else {
                i23 >>= Test0103.iFld1;
                f += ((long)i16 ^ (long)f);
                i21 *= (int)f;
            }
        } while (++i16 < 397);

        FuzzerUtils.out.println("i f i16 = " + i + "," + Float.floatToIntBits(f) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 iArr2 lArr1 = " + i23 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0103.instanceCount Test0103.iFld byFld = " + Test0103.instanceCount + "," + Test0103.iFld + "," +
            byFld);
        FuzzerUtils.out.println("bFld Test0103.iFld1 Test0103.fArrFld = " + (bFld ? 1 : 0) + "," + Test0103.iFld1 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0103.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0103 _instance = new Test0103();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
