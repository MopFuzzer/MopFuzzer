// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0463 {

    public static final int N = 400;

    public static long instanceCount=-142L;
    public static int iFld=-2;
    public static short sFld=28064;
    public static boolean bFld=true;
    public static double dFld=56.68253;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4, int i5) {

        int i6=2;
        int i7=-4;
        int i8=41480;
        int i9=6;
        int[] iArr1 =new int[N];
        double d1=93.86851, d2=-38.64000;

        FuzzerUtils.init(iArr1, -11);

        Test0463.iFld <<= i5;
        Test0463.bFld = Test0463.bFld;
        i6 = 1;
        while (++i6 < 315) {
            i5 *= i6;
            Test0463.instanceCount = i6;
            i7 = 5;
            while (--i7 > 0) {
                float f2=20.868F;
                iArr1[i6 + 1] += i4;
                switch ((i6 % 2) + 51) {
                case 51:
                    Test0463.instanceCount *= Test0463.instanceCount;
                    Test0463.instanceCount = (long) f2;
                    break;
                case 52:
                    iArr1[i6 - 1] *= Test0463.iFld;
                    for (i8 = 1; i8 > i7; i8 -= 3) {
                        d1 = d1;
                        Test0463.instanceCount += i4;
                        d2 *= i8;
                    }
                    break;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i1, int i2) {

        boolean b=false;
        double d=-48.94987;
        float f1=-102.365F;
        int i10=0;
        int i11=3;
        int i12=4;
        int i13=-13;
        int i14=-8616;
        int i15=-23859;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, 0);

        b = b;
        Test0463.instanceCount += (long) (-((d - f1) * Math.min(2, i2)));
        vMeth1(i2, Test0463.iFld, i1);
        Test0463.instanceCount |= 10L;
        for (i10 = 14; 324 > i10; i10++) {
            switch ((i10 % 9) + 116) {
            case 116:
                i1 <<= (int) Test0463.instanceCount;
                break;
            case 117:
                for (i12 = 1; i12 < 5; ++i12) {
                    Test0463.instanceCount -= (long) f1;
                    for (i14 = 1; 2 > i14; ++i14) {
                        Test0463.instanceCount = i11;
                        d -= i11;
                        i2 = i14;
                        Test0463.sFld -= (short) i13;
                        i13 += (i14 + i1);
                    }
                }
                break;
            case 118:
                i15 = i15;
                break;
            case 119:
                i1 = Test0463.sFld;
                break;
            case 120:
                i2 += i10;
                break;
            case 121:
                if (b) continue;
                break;
            case 122:
                iArr2 = FuzzerUtils.int1array(N, (int)5);
                break;
            case 123:
                f1 += i2;
                break;
            case 124:
                i1 += (((i10 * i10) + f1) - i10);
                break;
            default:
                i15 |= i14;
            }
        }
        long meth_res = i1 + i2 + (b ? 1 : 0) + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i10 + i11 + i12
            + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i) {

        int i16=-54825;
        int i17=-5;
        int[] iArr3 =new int[N];
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, -1.580F);
        FuzzerUtils.init(lArr, 5449809803611666461L);
        FuzzerUtils.init(iArr3, 0);

        fArr[(i >>> 1) % N] -= (((Test0463.sFld - i) - 6L) - ((i--) - iMeth(153, i)));
        i += (int) Test0463.instanceCount;
        Test0463.iFld -= Test0463.iFld;
        switch (((i >>> 1) % 3) + 35) {
        case 35:
            lArr[(Test0463.iFld >>> 1) % N] *= 15708;
            break;
        case 36:
            if (true) {
                Test0463.iFld -= i;
                Test0463.iFld = Test0463.iFld;
                iArr3[(Test0463.iFld >>> 1) % N] *= (int) f;
            }
            break;
        case 37:
            for (i16 = 357; i16 > 10; i16 -= 2) {
                lArr[i16 - 1] += Test0463.iFld;
                iArr3 = FuzzerUtils.int1array(N, (int)7);
                i = (int) Test0463.instanceCount;
                lArr[i16 - 1] += (long) Test0463.dFld;
                i17 += Test0463.iFld;
            }
            break;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        float f3=35.993F;
        int i18=-10;
        int i19=8;
        int i20=-1190;
        int i21=-46461;
        int i22=-13993;
        int i23=-11;
        int i24=-7184;
        int[] iArr =new int[N];
        byte by=-92;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -216);
        FuzzerUtils.init(lArr1, 12334L);

        Test0463.iFld = iArr[(Test0463.iFld >>> 1) % N];
        vMeth(f3, Test0463.iFld);
        i18 = 1;
        do {
            for (i19 = 1; i19 < 69; i19++) {
                Test0463.bFld = false;
                Test0463.iFld = (int) Test0463.instanceCount;
                switch ((i18 % 5) + 54) {
                case 54:
                    if (Test0463.bFld) break;
                    Test0463.iFld ^= -37;
                    Test0463.iFld -= i20;
                    Test0463.iFld += (i19 | Test0463.iFld);
                    break;
                case 55:
                    i20 *= (int) Test0463.instanceCount;
                    by += (byte)(i19 * i19);
                    iArr[i19] = (int) Test0463.instanceCount;
                    break;
                case 56:
                    i20 = (int)1444335569L;
                    break;
                case 57:
                    try {
                        Test0463.iFld = (Test0463.iFld % -100);
                        i20 = (Test0463.iFld / -66454353);
                        Test0463.iFld = (-10407 / i18);
                    } catch (ArithmeticException a_e) {}
                    Test0463.iFld = i20;
                    iArr[i19] *= i20;
                    break;
                case 58:
                    by = (byte) Test0463.iFld;
                    lArr1 = lArr1;
                    Test0463.instanceCount *= by;
                    break;
                }
                Test0463.iFld += i19;
                Test0463.dFld -= i19;
                i20 = -28487;
                Test0463.instanceCount += (((i19 * i18) + i21) - Test0463.iFld);
            }
            Test0463.dFld *= Test0463.dFld;
            for (i22 = 3; i22 < 69; i22++) {
                i24 = 1;
                do {
                    i20 <<= i18;
                    i21 *= (int) Test0463.instanceCount;
                } while (++i24 < 2);
            }
        } while (++i18 < 363);

        FuzzerUtils.out.println("f3 i18 i19 = " + Float.floatToIntBits(f3) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 by i21 = " + i20 + "," + by + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("iArr lArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0463.instanceCount Test0463.iFld Test0463.sFld = " + Test0463.instanceCount + "," + Test0463.iFld +
                "," + Test0463.sFld);
        FuzzerUtils.out.println("Test0463.bFld Test0463.dFld = " + (Test0463.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0463.dFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0463 _instance = new Test0463();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
