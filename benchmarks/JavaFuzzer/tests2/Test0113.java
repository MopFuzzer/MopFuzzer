// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0113 {

    public static final int N = 400;

    public static long instanceCount=-7924L;
    public static byte byFld=-35;
    public static boolean bFld=true;
    public float fFld=-87.921F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, long l2, long l3) {

        int i4=85;
        int i5=8;
        int i6=-26;
        int i7=1;
        int i8=19380;
        int i9=-23222;
        int i10=-176;
        int i11=232;
        int[] iArr1 =new int[N];
        float f1=2.301F;
        short s=-27408;
        boolean b=true;

        FuzzerUtils.init(iArr1, -143);

        i4 *= i4;
        f1 = i4;
        for (i5 = 1; i5 < 133; i5++) {
            Test0113.instanceCount = i6;
        }
        for (i7 = 5; i7 < 161; i7++) {
            for (i9 = 10; i9 > 1; --i9) {
                i11 = 1;
                while (++i11 < 2) {
                    i8 ^= (int)l2;
                    i10 = i9;
                    iArr1[i7] *= Test0113.byFld;
                    s += (short)i11;
                    f1 *= l2;
                    l2 <<= i7;
                }
            }
            b = b;
            f1 = i11;
        }
        long meth_res = l1 + l2 + l3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s + (b ? 1
            : 0) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        float f=-2.643F;
        int i3=150;
        int i12=-5;
        int i13=-2;
        int i14=11;
        int i15=216;
        int i16=46;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 165);

        f = (i3 * ((Test0113.instanceCount + Test0113.instanceCount) - 4053));
        iArr[(1 >>> 1) % N] = (int) (Test0113.instanceCount = iMeth(Test0113.instanceCount, -2665234831256743614L,
                Test0113.instanceCount));
        for (i12 = 6; i12 < 304; i12++) {
            double d=-2.63982;
            i13 -= i13;
            d = i13;
            iArr[i12] = (int)f;
            i3 <<= i12;
            switch ((i12 % 2) + 108) {
            case 108:
                for (i14 = 1; i14 < 6; ++i14) {
                    Test0113.byFld += (byte) (i14 | i15);
                    i3 &= i12;
                    i13 ^= i15;
                }
                i15 += i15;
                break;
            case 109:
                i15 /= (int)(i14 | 1);
                i16 += (i12 * i12);
            default:
                i15 -= -34683;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(long l, int i) {

        int i1=58135, i2=9, i17=-3, i18=-3, i19=-2, i20=-34706, i21=141, i22=210;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -4008755482L);

        for (i1 = 10; i1 < 278; i1++) {
            vMeth1();
            lArr[i1 + 1] *= i2;
            i = (int)l;
        }
        i17 = 345;
        do {
            i18 += (int)(24L + (i17 * i17));
            l |= i;
            if (Test0113.bFld) {
                for (i19 = 1; 5 > i19; i19 += 3) {
                    i2 += (-6 + (i19 * i19));
                    i18 -= i2;
                    i18 = (int)l;
                    for (i21 = 1; i21 < 5; i21++) {
                        lArr = lArr;
                        i18 += (((i21 * Test0113.instanceCount) + i1) - i20);
                    }
                }
            } else if (Test0113.bFld) {
                if (Test0113.bFld) break;
            } else {
                fFld += (i17 - i21);
            }
        } while (--i17 > 0);
        vMeth_check_sum += l + i + i1 + i2 + i17 + i18 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i23=-13;
        int i24=77;
        int i25=-13;
        int i26=-12;
        int i27=43623;
        int i28=109;
        int i29=-5;
        int i30=39166;
        int i31=-52752;
        int i32=13;
        int i33=8;
        int i34=29283;
        int i35=-143;
        int i36=25;
        int i37=-10;
        int[] iArr2 =new int[N];
        short s1=10155;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr2, -12624);
        FuzzerUtils.init(fArr, 68.472F);

        vMeth(-263571513L, i23);
        i23 >>= Test0113.byFld;
        for (i24 = 11; 260 > i24; ++i24) {
            i26 = i24;
        }
        i25 = i26;
        for (i27 = 258; i27 > 10; i27--) {
            s1 *= (short)i26;
            for (i29 = i27; i29 < 101; ++i29) {
                if (Test0113.bFld) continue;
                if (Test0113.bFld) continue;
                i28 = (int)fFld;
                i25 += i26;
            }
            i25 = i23;
        }
        i31 = 1;
        do {
            i25 = (int) Test0113.instanceCount;
            i30 *= i24;
            for (i32 = i31; i32 < 130; ++i32) {
                for (i34 = 1; 1 > i34; ++i34) {
                    iArr2[i34] = i29;
                }
                iArr2[i31 + 1] = (int) Test0113.instanceCount;
                for (i36 = i32; 1 > i36; ++i36) {
                    i37 <<= i35;
                    i23 += (int)(-116.538F + (i36 * i36));
                }
            }
            iArr2 = iArr2;
            i37 = i29;
            i37 = (int) Test0113.instanceCount;
            i23 = i25;
        } while (++i31 < 193);
        Test0113.instanceCount = i36;
        fFld = i34;
        fArr[(-2 >>> 1) % N][(i32 >>> 1) % N] -= i31;

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("s1 i29 i30 = " + s1 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 i35 i36 = " + i34 + "," + i35 + "," + i36);
        FuzzerUtils.out.println("i37 iArr2 fArr = " + i37 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0113.instanceCount Test0113.byFld Test0113.bFld = " + Test0113.instanceCount + "," + Test0113.byFld +
                "," + (Test0113.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld = " + Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0113 _instance = new Test0113();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
