// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0137 {

    public static final int N = 400;

    public static long instanceCount=-7722160601500703937L;
    public boolean bFld=true;
    public static int iFld=-10;
    public static long lFld=-6777572785724657761L;
    public static volatile byte byFld=-56;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0137.lArrFld, -3652408114L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4) {

        double d1=98.79496;
        int i5=12;
        int i6=-11;
        int i7=1;
        int i8=158;
        int i9=-44589;
        int[] iArr1 =new int[N];
        boolean b=true;
        boolean[] bArr =new boolean[N];
        short s=15249;
        short[] sArr =new short[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -56.223F);
        FuzzerUtils.init(iArr1, 1);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(sArr, (short)-14807);

        fArr[(i4 >>> 1) % N] = -1064114533911954928L;
        for (d1 = 2; d1 < 133; d1++) {
            iArr1[(int)(d1 + 1)] += 0;
            for (i6 = (int)(d1); i6 < 12; i6++) {
                bArr[(int)(d1 - 1)] = b;
                i5 += (i6 * i4);
                if (i7 != 0) {
                }
                i4 *= i4;
                for (i8 = 1; i8 < 1; ++i8) {
                    i4 += (i8 | i7);
                    sArr[i8] += (short) Test0137.instanceCount;
                    iArr1[(int)(d1 + 1)] = i7;
                    s += (short)i8;
                    Test0137.instanceCount *= i6;
                    i5 = i8;
                }
            }
        }
        long meth_res = i4 + Double.doubleToLongBits(d1) + i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i3, double d, long l) {

        int i10=99;
        int i11=5;
        int i12=-3;
        int i13=7;
        int i14=-14630;
        int[] iArr =new int[N];
        byte by=69;
        float f=-13.327F;
        boolean b1=false;

        FuzzerUtils.init(iArr, 214);

        iArr[(-6 >>> 1) % N] <<= Math.max(Math.abs(--i3), iMeth(i3));
        for (i10 = 6; 215 > i10; i10++) {
            iArr = iArr;
            by -= (byte) Test0137.instanceCount;
            i12 = 1;
            while (++i12 < 8) {
                Test0137.instanceCount = by;
                for (i13 = i12; i13 < 1; ++i13) {
                    f = f;
                    if (b1) break;
                    i3 *= (int)d;
                    i3 = by;
                    iArr = iArr;
                    i11 = 1;
                    i11 = (int) Test0137.instanceCount;
                    iArr[i13] = (int)d;
                }
            }
        }
        vMeth1_check_sum += i3 + Double.doubleToLongBits(d) + l + i10 + i11 + by + i12 + i13 + i14 +
            Float.floatToIntBits(f) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i2=-2;
        int i15=-54;
        int i16=57521;
        int i17=-40105;
        int i18=-8;
        int[] iArr2 =new int[N];
        double d2=78.63445;
        boolean b2=true;
        long l1=11L;

        FuzzerUtils.init(iArr2, 4);

        i2 = 1;
        while (++i2 < 246) {
            vMeth1(i2, d2, Test0137.instanceCount);
            if (b2) continue;
            i15 *= -57804;
        }
        i15 = (int)99L;
        iArr2[(2 >>> 1) % N] -= (int)d2;
        for (l1 = 14; l1 < 289; l1++) {
            Test0137.instanceCount *= l1;
            if (b2) {
                d2 = -2;
                i15 = (int)l1;
                for (i17 = 1; i17 < 6; ++i17) {
                    b2 = true;
                    if (b2) break;
                }
                i15 *= (int)d2;
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d2) + (b2 ? 1 : 0) + i15 + l1 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=187, i1=33729, i19=-13, i20=157, i21=-132, i22=56144, i23=29990, i24=16, i25=42798, i26=-112, i27=252,
            i28=-4;
        float f1=1.49F;
        double d3=123.123610;

        for (i = 309; 14 < i; i -= 2) {
            i1 += (i + i1);
            vMeth();
            i1 -= i1;
            Test0137.instanceCount *= (long) 1.990F;
            if (bFld) break;
            if (true) break;
            for (i19 = 8; 171 > i19; ++i19) {
                for (i21 = 1; i21 < 2; i21 += 3) {
                    i22 += (i21 * i21);
                    i20 <<= i1;
                    f1 -= i21;
                    Test0137.lArrFld[(Test0137.iFld >>> 1) % N] = 9;
                }
                i1 = i21;
                for (i23 = 1; i23 < 2; i23++) {
                    if (bFld) break;
                    i22 = (int) Test0137.instanceCount;
                    i20 = i25;
                    i1 += (i23 | i21);
                    Test0137.iFld += 113;
                    Test0137.iFld += (i23 + f1);
                }
                d3 *= i21;
                try {
                    i25 = (-49741 % i1);
                    Test0137.iFld = (i19 / -2729);
                    i24 = (i22 % i23);
                } catch (ArithmeticException a_e) {}
                for (i26 = 1; i26 < 2; i26++) {
                    try {
                        i27 = (i20 / Test0137.iFld);
                        i28 = (i21 / 14);
                        i24 = (Test0137.iFld / i);
                    } catch (ArithmeticException a_e) {}
                    Test0137.lFld = i19;
                    f1 += i;
                    Test0137.instanceCount = (long) d3;
                    Test0137.byFld += (byte) i26;
                }
                Test0137.lFld += -63232;
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("f1 i23 i24 = " + Float.floatToIntBits(f1) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 d3 i26 = " + i25 + "," + Double.doubleToLongBits(d3) + "," + i26);
        FuzzerUtils.out.println("i27 i28 = " + i27 + "," + i28);

        FuzzerUtils.out.println("Test0137.instanceCount bFld Test0137.iFld = " + Test0137.instanceCount + "," + (bFld ? 1 : 0) +
                "," + Test0137.iFld);
        FuzzerUtils.out.println("Test0137.lFld Test0137.byFld Test0137.lArrFld = " + Test0137.lFld + "," + Test0137.byFld + "," +
                FuzzerUtils.checkSum(Test0137.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0137 _instance = new Test0137();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
