// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0787 {

    public static final int N = 400;

    public static long instanceCount=6L;
    public short sFld=19262;
    public static double dFld=0.44348;
    public boolean bFld=true;
    public byte byFld=118;
    public volatile int iFld=-11;
    public double[][] dArrFld =new double[N][N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s, byte by) {

        int i5=105;
        int i6=0;
        int i7=-5;
        int i8=-112;
        int[] iArr =new int[N];
        float f=116.415F;
        long l2=-2735898134L;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, -200);
        FuzzerUtils.init(byArr, (byte)103);

        try {
            iArr[(i5 >>> 1) % N] *= (int)-109184153L;
            Test0787.instanceCount = (long) f;
            by >>>= (byte)i5;
            i5 -= i5;
            i5 = (int) Test0787.instanceCount;
        }
        catch (NullPointerException exc2) {
            l2 = 1;
            do {
                i5 = -221;
                i5 = i5;
                i6 = 7;
                do {
                    for (i7 = 1; i7 < 1; i7++) {
                        byArr[i7] = (byte)i8;
                        f = i7;
                        f += (((i7 * i8) + f) - i6);
                        i5 = i5;
                    }
                } while (--i6 > 0);
            } while (++l2 < 247);
        }
        catch (ArithmeticException exc3) {
            by <<= (byte)i6;
        }
        vMeth2_check_sum += s + by + i5 + Float.floatToIntBits(f) + l2 + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(long l1, boolean b, int i4) {

        short s1=27150;
        byte by1=-58;
        int i9=-77;
        int[] iArr1 =new int[N];
        float f1=1.89F;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr1, 28132);
        FuzzerUtils.init(fArr, 0.775F);

        vMeth2(s1, by1);
        i9 = 1;
        while (++i9 < 380) {
            i4 = (int)f1;
            Test0787.instanceCount = i9;
            i4 >>= i9;
            iArr1[i9 + 1] += i4;
            Test0787.dFld *= f1;
            iArr1[i9 + 1] -= i4;
        }
        fArr[(i9 >>> 1) % N][(28571 >>> 1) % N] -= i4;
        i4 *= (int) Test0787.instanceCount;
        vMeth1_check_sum += l1 + (b ? 1 : 0) + i4 + s1 + by1 + i9 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth(long l, int i) {

        double d=-61.76473;
        int i1=-33507, i2=-65275, i3=-14, i10=-11, i11=11;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 0.50F);

        sFld = (short)(((2.170F - (d - i1)) - (i1 + -10)) - i1);
        for (i2 = 4; i2 < 193; ++i2) {
            vMeth1(l, bFld, i2);
            if (false) {
                for (i10 = 1; i10 < 8; i10++) {
                    i1 = (int)84L;
                    fArr1[i10] -= l;
                    i3 >>= -48838;
                    sFld = (short)-45002;
                    Test0787.instanceCount += (i10 | l);
                    i1 += (((i10 * i10) + i) - byFld);
                    i = i1;
                }
                fArr1 = fArr1;
                i11 += i11;
            } else {
                l = 241;
            }
        }
        vMeth_check_sum += l + i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i10 + i11 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        float f2=104.942F;
        float[] fArr2 =new float[N];
        int i12=8;
        int i13=-52725;
        int i14=60;
        int i15=177;
        int[] iArr2 =new int[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr2, -23);
        FuzzerUtils.init(fArr2, 95.848F);
        FuzzerUtils.init(lArr, 1957242199L);

        vMeth(Test0787.instanceCount, iFld);
        f2 = -15027;
        iFld >>= iFld;
        i12 = 331;
        while ((i12 -= 3) > 0) {
            switch (((iFld >>> 1) % 9) + 125) {
            case 125:
                iArr2[i12] -= (int) Test0787.instanceCount;
                iFld = -9890;
                iFld = iFld;
                f2 = i12;
            case 126:
                fArr2 = fArr2;
                iFld = (int)209L;
                sFld = (short)-231;
                Test0787.instanceCount *= 19459L;
            case 127:
                if (bFld) {
                    iFld -= i12;
                    Test0787.instanceCount += i12;
                    iFld += i12;
                } else if (bFld) {
                    iFld += i12;
                    iFld = iFld;
                } else if (bFld) {
                    i13 = 1;
                    while ((i13 += 3) < 226) {
                        dArrFld[i12] = dArrFld[i12];
                        f2 = f2;
                        f2 %= ((long)(f2) | 1);
                        for (i14 = 1; i14 < 4; ++i14) {
                            i15 = (int)f2;
                            Test0787.instanceCount += (-47588 + (i14 * i14));
                            Test0787.instanceCount >>= i14;
                            iFld += i12;
                            iFld += (i14 + Test0787.instanceCount);
                            i15 <<= (int) Test0787.instanceCount;
                        }
                    }
                }
                break;
            case 128:
                Test0787.dFld -= iFld;
            case 129:
                i15 += i12;
                break;
            case 130:
                bFld = false;
                break;
            case 131:
                lArr[i12 - 1] >>= iFld;
                break;
            case 132:
                i15 /= (int)(i15 | 1);
                break;
            case 133:
                iFld = i12;
                break;
            }
        }

        FuzzerUtils.out.println("f2 i12 i13 = " + Float.floatToIntBits(f2) + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 iArr2 = " + i14 + "," + i15 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("fArr2 lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0787.instanceCount sFld Test0787.dFld = " + Test0787.instanceCount + "," + sFld + "," +
                Double.doubleToLongBits(Test0787.dFld));
        FuzzerUtils.out.println("bFld byFld iFld = " + (bFld ? 1 : 0) + "," + byFld + "," + iFld);
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0787 _instance = new Test0787();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
