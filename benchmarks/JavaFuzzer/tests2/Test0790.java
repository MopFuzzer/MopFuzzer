// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0790 {

    public static final int N = 400;

    public static volatile long instanceCount=3531165729L;
    public static double dFld=101.48391;
    public static int iFld=-224;
    public static double dFld1=2.17480;
    public float fFld=-1.948F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, int i3, short s) {

        int i4=12874;
        int i5=13;
        int i6=-58963;
        int i7=-188;
        int[] iArr =new int[N];
        float f=99.852F;
        float f1=125.918F;
        float[] fArr =new float[N];
        boolean b=false;
        byte by=-29;

        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(fArr, 0.200F);

        for (i4 = 3; i4 < 283; ++i4) {
            i3 = -38636;
            switch ((i4 % 10) + 39) {
            case 39:
                f += (((i4 * i3) + i4) - i5);
                s += (short)(i4 | s);
                i2 = (int) Test0790.instanceCount;
                break;
            case 40:
                f = -58;
                i2 <<= i4;
                iArr[i4 - 1] -= (int) Test0790.instanceCount;
                if (b) {
                    Test0790.instanceCount = i3;
                    for (i6 = 1; i6 < 6; i6++) {
                        i3 ^= i7;
                        f1 *= i4;
                        i7 += i7;
                    }
                } else if (b) {
                    i7 = (int) Test0790.instanceCount;
                }
                break;
            case 41:
                i2 -= i4;
                break;
            case 42:
                b = b;
                break;
            case 43:
                s = (short)i5;
                break;
            case 44:
                i7 ^= (int) Test0790.instanceCount;
                break;
            case 45:
                i7 = by;
                break;
            case 46:
                i5 >>>= i6;
                break;
            case 47:
                fArr[i4 - 1] -= i7;
                break;
            case 48:
            }
        }
        vMeth2_check_sum += i2 + i3 + s + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + Float.floatToIntBits(f1) + (b ?
            1 : 0) + by + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i1, long l) {

        short s1=-29149;
        int i8=25220;
        int i9=51953;
        int i10=13;
        int[][] iArr1 =new int[N][N];
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 105.712F);
        FuzzerUtils.init(iArr1, 5);
        FuzzerUtils.init(bArr, false);

        vMeth2(15910, -1, s1);
        i1 >>= i1;
        for (float f2 : fArr1) {
            i8 = 1;
            while (++i8 < 4) {
                Test0790.dFld = f2;
                iArr1[i8][i8] <<= (int)l;
                l += i8;
                for (i9 = 1; i9 < 1; ++i9) {
                    i10 = i10;
                    i10 -= 8;
                    bArr[i9] = b1;
                    Test0790.instanceCount |= i9;
                    i10 ^= (int) Test0790.instanceCount;
                    iArr1[i8 + 1][i9] += -1;
                }
                if (b1) continue;
            }
        }
        vMeth1_check_sum += i1 + l + s1 + i8 + i9 + i10 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i) {

        int i11=-70;
        int i12=-61;
        int i13=-29;
        int i14=-5;
        int i15=50225;
        int[][] iArr2 =new int[N][N];
        boolean b2=false;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr2, -193);
        FuzzerUtils.init(dArr, 120.13154);

        vMeth1(i, Test0790.instanceCount);
        i = (int) Test0790.instanceCount;
        i11 = 1;
        while (++i11 < 253) {
            Test0790.instanceCount = i;
            iArr2[i11][i11] = (int) Test0790.instanceCount;
            dArr[i11 - 1] += i11;
            i += (int) Test0790.dFld;
            iArr2[i11 + 1][i11 - 1] = (int) Test0790.instanceCount;
            i += (i11 ^ i11);
            if (i != 0) {
                vMeth_check_sum += i + i11 + i12 + i13 + i14 + i15 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr2) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
            for (i12 = 1; i12 < 6; i12++) {
                for (i14 = 1; i14 < 2; i14++) {
                    i15 = (int)-2.63435;
                    if (b2) break;
                    Test0790.dFld = -52038;
                }
            }
        }
        vMeth_check_sum += i + i11 + i12 + i13 + i14 + i15 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i16=-91;
        int i17=0;
        int i18=224;
        int i19=-47;
        int i20=6;
        int i21=30;
        int i22=0;
        int i23=223;
        int[][] iArr3 =new int[N][N];
        float f3=87.617F;
        boolean b3=true;
        byte by1=77;
        double[][] dArr1 =new double[N][N];

        FuzzerUtils.init(iArr3, 8);
        FuzzerUtils.init(dArr1, 0.126937);

        vMeth(Test0790.iFld);
        Test0790.iFld += (int) Test0790.dFld1;
        Test0790.instanceCount *= Test0790.iFld;
        fFld = (float) Test0790.dFld1;
        for (i16 = 1; i16 < 188; i16++) {
            for (i18 = 3; i18 < 134; ++i18) {
                for (f3 = 1; f3 < 2; ++f3) {
                    i19 -= i18;
                    i17 += (-13 + (f3 * f3));
                    i17 = Test0790.iFld;
                    i19 >>= (int) Test0790.instanceCount;
                    b3 = b3;
                    iArr3[i18 + 1][i18] = 187;
                    i19 += (int) (((f3 * Test0790.iFld) + Test0790.instanceCount) - i17);
                }
            }
            iArr3[i16 + 1][i16] += i16;
            for (i21 = 2; 134 > i21; ++i21) {
                Test0790.iFld -= (int) Test0790.instanceCount;
                by1 = (byte)i17;
                Test0790.instanceCount = Test0790.instanceCount;
                i23 = 2;
                do {
                    iArr3[i21][i23 - 1] >>= i18;
                    i17 += (((i23 * i20) + f3) - fFld);
                    fFld += i23;
                    i19 -= i17;
                    Test0790.iFld *= i19;
                    Test0790.iFld = 165;
                    iArr3[i23 - 1][i21 + 1] = i21;
                    dArr1[i16][i16] -= by1;
                } while (--i23 > 0);
                i20 = i16;
                try {
                    i20 = (Test0790.iFld % -245);
                    iArr3[i21][i16] = (i21 % i22);
                    i22 = (-31885 / i21);
                } catch (ArithmeticException a_e) {}
            }
        }

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 f3 i20 = " + i19 + "," + Float.floatToIntBits(f3) + "," + i20);
        FuzzerUtils.out.println("b3 i21 i22 = " + (b3 ? 1 : 0) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("by1 i23 iArr3 = " + by1 + "," + i23 + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0790.instanceCount Test0790.dFld Test0790.iFld = " + Test0790.instanceCount + "," +
                Double.doubleToLongBits(Test0790.dFld) + "," + Test0790.iFld);
        FuzzerUtils.out.println("Test0790.dFld1 fFld = " + Double.doubleToLongBits(Test0790.dFld1) + "," +
            Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0790 _instance = new Test0790();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
