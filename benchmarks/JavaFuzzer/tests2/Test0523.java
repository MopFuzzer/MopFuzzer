// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0523 {

    public static final int N = 400;

    public static long instanceCount=-69L;
    public static short sFld=32102;
    public static float fFld=1.297F;
    public static long[] lArrFld =new long[N];
    public byte[] byArrFld =new byte[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0523.lArrFld, 245L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, int i13, int i14) {

        double d=-55.21513;
        int i15=191, i16=-19286, i17=-13, i18=-9, i19=-29289, i20=4;
        long l1=-105L;

        for (d = 15; 335 > d; d++) {
            i16 = 5;
            do {
                i15 += (i16 * i16);
                Test0523.instanceCount *= Test0523.instanceCount;
                i15 = i14;
                i17 &= Test0523.sFld;
            } while (--i16 > 0);
            for (i18 = 1; 5 > i18; ++i18) {
                Test0523.fFld -= i15;
                i19 = 142;
                i20 -= (int) Test0523.fFld;
                i17 = (int) Test0523.instanceCount;
                b = b;
                i13 = i14;
            }
            l1 = (long) Test0523.fFld;
            i17 *= (int)-11L;
        }
        vMeth1_check_sum += (b ? 1 : 0) + i13 + i14 + Double.doubleToLongBits(d) + i15 + i16 + i17 + i18 + i19 + i20 +
            l1;
    }

    public static int iMeth(float f1, short s, int i12) {

        boolean b1=true;
        int i21=54730;
        int i22=27981;
        int i23=251;
        int i24=-7;
        int i25=-14;
        int[] iArr1 =new int[N];
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr1, 1);
        FuzzerUtils.init(iArr2, -9);

        i12 += (--i12);
        vMeth1(b1, i12, i12);
        for (i21 = 1; 256 > i21; ++i21) {
            i23 = 1;
            do {
                for (i24 = i23; 1 > i24; i24++) {
                    i22 += i25;
                    Test0523.instanceCount += i22;
                    Test0523.instanceCount >>= 5;
                    i22 -= (int)f1;
                    i12 = (int)f1;
                    i12 <<= (int) Test0523.instanceCount;
                    try {
                        iArr1[i24 - 1] = (155 / i24);
                        i22 = (i24 / 1599805529);
                        i12 = (i23 / iArr2[i23]);
                    } catch (ArithmeticException a_e) {}
                    i25 >>= i24;
                    i22 <<= i21;
                }
                Test0523.lArrFld[i23] = i21;
            } while (++i23 < 6);
        }
        long meth_res = Float.floatToIntBits(f1) + s + i12 + (b1 ? 1 : 0) + i21 + i22 + i23 + i24 + i25 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        float f=1.967F;
        int i7=19478;
        int i8=12;
        int i9=-96;
        int i10=56989;
        int i11=-42851;
        int[] iArr =new int[N];
        int[][] iArr3 =new int[N][N];
        byte by=35;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, 12);
        FuzzerUtils.init(iArr3, 14);
        FuzzerUtils.init(dArr, 31.116659);

        for (f = 7; f < 132; f++) {
            if (i7 != 0) {
                vMeth_check_sum += Float.floatToIntBits(f) + i7 + i8 + by + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr)
                    + FuzzerUtils.checkSum(iArr3) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
        }
        Test0523.sFld = (short) Math.abs((int) ((Test0523.instanceCount + 155) + Test0523.instanceCount));
        i8 = 1;
        do {
            iArr[i8 - 1] = (i7--);
            by += (byte)i8;
            i9 = 1;
            do {
                for (i10 = i9; i10 < 1; ++i10) {
                    iArr[i10 + 1] >>= (iMeth(-94.613F, Test0523.sFld, i7) * i11);
                    iArr = iArr3[i9 + 1];
                    dArr[i8 + 1] = f;
                    iArr[i8] -= (int) Test0523.instanceCount;
                    Test0523.fFld = i11;
                    Test0523.lArrFld[i8 - 1] += Test0523.instanceCount;
                }
                i7 = (int) Test0523.instanceCount;
            } while (++i9 < 6);
        } while (++i8 < 266);
        vMeth_check_sum += Float.floatToIntBits(f) + i7 + i8 + by + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(iArr3) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=26105, i1=-58235, i2=-42424, i3=-214, i4=-3, i5=-212, i6=-11, i26=242, i27=10, i28=6, i29=2;
        long l=6640906516300528155L;
        byte by1=123;
        double d1=1.81817;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 0.676F);

        i = 300;
        do {
            i1 = Integer.reverseBytes(i1);
        } while (--i > 0);
        for (i2 = 2; i2 < 358; i2++) {
            for (i4 = 4; i4 < 71; ++i4) {
                for (l = 1; 2 > l; l++) {
                    i3 <<= i2;
                }
                i3 += (((i4 * l) + Test0523.instanceCount) - i6);
                vMeth();
                for (i26 = 1; i26 < 2; i26++) {
                    boolean b2=false;
                    Test0523.instanceCount = Test0523.sFld;
                    if (b2) break;
                    Test0523.instanceCount += (((i26 * l) + by1) - Test0523.fFld);
                }
                Test0523.fFld *= -43.435F;
                i6 *= (int)l;
                i5 += i4;
                for (i28 = i4; i28 < 2; ++i28) {
                    Test0523.instanceCount >>= 8466739254561094215L;
                    d1 = i1;
                    byArrFld[i4 - 1] = (byte)i26;
                    switch (((i4 % 5) * 5) + 65) {
                    case 77:
                        i29 += i1;
                        i27 >>= i6;
                        i3 += (i28 ^ i);
                        Test0523.instanceCount = i28;
                        break;
                    case 78:
                        Test0523.instanceCount += (((i28 * by1) + Test0523.instanceCount) - Test0523.fFld);
                        i5 *= i5;
                        d1 *= Test0523.instanceCount;
                        Test0523.instanceCount = 89;
                        break;
                    case 85:
                        Test0523.lArrFld[i2] += i6;
                        by1 += (byte)(((i28 * i29) + i28) - i1);
                        break;
                    case 90:
                        iArrFld[i4 - 1] = i2;
                    case 87:
                        fArr[i28 + 1][i2] -= i27;
                        break;
                    default:
                        i5 += (i28 * i5);
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("l i6 i26 = " + l + "," + i6 + "," + i26);
        FuzzerUtils.out.println("i27 by1 i28 = " + i27 + "," + by1 + "," + i28);
        FuzzerUtils.out.println("i29 d1 fArr = " + i29 + "," + Double.doubleToLongBits(d1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0523.instanceCount Test0523.sFld Test0523.fFld = " + Test0523.instanceCount + "," + Test0523.sFld +
                "," + Float.floatToIntBits(Test0523.fFld));
        FuzzerUtils.out.println("Test0523.lArrFld byArrFld iArrFld = " + FuzzerUtils.checkSum(Test0523.lArrFld) + "," +
            FuzzerUtils.checkSum(byArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0523 _instance = new Test0523();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
