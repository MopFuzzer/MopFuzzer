// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0499 {

    public static final int N = 400;

    public static volatile long instanceCount=-1930277131L;
    public static byte byFld=116;
    public double dFld=16.119214;
    public static int[] iArrFld =new int[N];
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0499.iArrFld, 52);
        FuzzerUtils.init(Test0499.lArrFld, 34064L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i8=105, i9=-244, i10=35400, i11=-59367;
        boolean b=true;
        double d=2.101556;
        float f2=0.499F;

        for (int i6 : Test0499.iArrFld) {
            for (i8 = 1; i8 < 4; ++i8) {
                long l1=-7L;
                i9 -= (int) Test0499.instanceCount;
                if (b) continue;
                Test0499.instanceCount |= i8;
                Test0499.iArrFld[i8 - 1] += i8;
                Test0499.instanceCount = i8;
                d += l1;
                f2 += i6;
                Test0499.iArrFld[i8 - 1] = (int) l1;
                for (i10 = 2; i10 > 1; i10--) {
                    switch ((((i9 >>> 1) % 8) * 5) + 17) {
                    case 28:
                        i9 += i10;
                        Test0499.byFld = (byte) -1.698F;
                        try {
                            i11 = (i9 % 191);
                            i9 = (i9 % 22978);
                            i11 = (i9 / i6);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 53:
                    case 46:
                        Test0499.iArrFld[i10 + 1] += (int) 134L;
                        break;
                    case 35:
                        f2 += i10;
                    case 36:
                        Test0499.iArrFld[i10 + 1] = -213;
                        break;
                    case 26:
                        i6 += i10;
                        break;
                    case 22:
                    case 39:
                        f2 += 61109;
                        break;
                    default:
                        i9 += (i10 - f2);
                    }
                }
            }
        }
        vMeth1_check_sum += l + i8 + i9 + (b ? 1 : 0) + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i10 +
            i11;
    }

    public static int iMeth() {

        int i12=12;
        int i13=-236;
        int[] iArr1 =new int[N];
        double d1=2.9710;
        float f3=-41.955F;

        FuzzerUtils.init(iArr1, 40624);

        vMeth1(Test0499.instanceCount);
        i12 = i12;
        switch ((((-55327 >>> 1) % 3) * 5) + 8) {
        case 11:
            d1 += f3;
            i12 = 3;
            f3 *= Test0499.byFld;
            break;
        case 22:
            i13 = 1;
            do {
                Test0499.instanceCount = -2727738085L;
                i12 = i13;
                i12 = (int) Test0499.instanceCount;
                d1 *= i12;
                i12 += i13;
                Test0499.iArrFld = iArr1;
                Test0499.instanceCount += 13;
            } while (++i13 < 353);
            i12 >>= Test0499.byFld;
        case 9:
            d1 *= i13;
            break;
        default:
            f3 += i12;
        }
        long meth_res = i12 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f3) + i13 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(byte by) {

        int i5=46481, i14=13, i15=-34880, i16=11, i17=11, i18=-45507;
        float f4=0.155F;
        boolean b1=false;

        i5 *= (int)(Long.reverseBytes(by * 14676) * iMeth());
        for (i14 = 166; 2 < i14; --i14) {
            for (i16 = 1; i16 < 10; ++i16) {
                i18 = 1;
                do {
                    i17 += (((i18 * Test0499.instanceCount) + Test0499.instanceCount) - i16);
                    if (b1) {
                        i5 += (i18 ^ i15);
                        f4 += i18;
                        vMeth_check_sum += by + i5 + i14 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f4) + (b1 ? 1 :
                            0);
                        return;
                    } else if (b1) {
                        i15 = (int) Test0499.instanceCount;
                        i15 += (i18 + Test0499.instanceCount);
                    }
                    Test0499.instanceCount = i17;
                    Test0499.byFld += (byte) (i18 * Test0499.instanceCount);
                    i17 += (int)-1.57854;
                    i5 = (int)f4;
                    i15 += (int) Test0499.instanceCount;
                } while (++i18 < 2);
            }
        }
        vMeth_check_sum += by + i5 + i14 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f4) + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f=119.769F;
        float f1=13.639F;
        float[] fArr =new float[N];
        int i=172;
        int i1=244;
        int i2=14;
        int i3=0;
        int i4=-228;
        int i19=11;
        int i20=-247;
        int i21=5482;
        int i22=3;
        int i23=-12;
        int i24=7;
        int i25=61879;
        int i26=8;
        int i27=-4674;
        int i28=-10286;
        int[] iArr =new int[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, -117);
        FuzzerUtils.init(dArr, 91.106179);
        FuzzerUtils.init(fArr, -1.688F);

        for (f = 2; f < 206; f++) {
            f1 *= 238;
            for (i1 = 5; i1 < 123; i1++) {
                boolean b2=false;
                Test0499.instanceCount += (iArr[i1 - 1]--);
                if (b2) {
                    for (i3 = 1; i3 < 2; i3 += 3) {
                        Test0499.instanceCount += i3;
                        try {
                            i4 = (i4 / i3);
                            i2 = (iArr[(int)(f + 1)] / 29634);
                            i2 = (i1 / -13926);
                        } catch (ArithmeticException a_e) {}
                        vMeth(Test0499.byFld);
                        i4 += (((i3 * i2) + Test0499.instanceCount) - Test0499.instanceCount);
                        i4 += (i3 * i3);
                    }
                } else {
                    for (i19 = (int)(f); 2 > i19; i19++) {
                        Test0499.instanceCount = i21;
                        i4 += (int) Test0499.instanceCount;
                    }
                }
                i21 = i21;
                iArr[i1 + 1] = i;
                for (i22 = 1; 2 > i22; i22 += 2) {
                    Test0499.byFld >>= (byte) i19;
                    i *= (int)dFld;
                }
            }
            for (i24 = 5; i24 < 123; ++i24) {
                for (i26 = 1; i26 < 2; i26++) {
                    dFld -= 26014;
                    i -= i23;
                }
                i2 += (-57033 + (i24 * i24));
                iArr[(int) (f + 1)] = (int) Test0499.instanceCount;
                i28 = 1;
                while (++i28 < 2) {
                    switch (((i24 % 10) * 5) + 6) {
                    case 26:
                        iArr[i24 - 1] = (int) Test0499.instanceCount;
                        i21 = i25;
                        Test0499.lArrFld[i24] = Test0499.byFld;
                        break;
                    case 20:
                        dArr[i28] -= dFld;
                        break;
                    case 55:
                        i23 += i28;
                        break;
                    case 42:
                        i += (int)69.12450;
                        break;
                    case 37:
                        i2 = (int)f;
                        break;
                    case 52:
                        Test0499.instanceCount -= i26;
                        break;
                    case 7:
                        fArr[i28 - 1] = -148;
                        break;
                    case 56:
                        dFld -= f;
                    case 29:
                        i2 = i21;
                        break;
                    case 53:
                        i = (int) Test0499.instanceCount;
                        break;
                    default:
                        Test0499.instanceCount %= -754659303L;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i f1 = " + Float.floatToIntBits(f) + "," + i + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i4 i19 i20 = " + i4 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("dArr fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0499.instanceCount Test0499.byFld dFld = " + Test0499.instanceCount + "," + Test0499.byFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0499.iArrFld Test0499.lArrFld = " + FuzzerUtils.checkSum(Test0499.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0499.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0499 _instance = new Test0499();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
