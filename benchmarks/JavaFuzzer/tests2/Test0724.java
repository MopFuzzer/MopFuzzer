// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0724 {

    public static final int N = 400;

    public static long instanceCount=-40877L;
    public static float fFld=2.697F;

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f1, long l, long l1) {

        double d=-99.45573;
        double[] dArr =new double[N];
        int i5=-139, i6=-12, i7=30389, i8=53707, i9=0;
        long l2=-546001234L;
        short s=19713;

        FuzzerUtils.init(dArr, -42.121945);

        d = 395;
        while ((d -= 3) > 0) {
            for (i5 = 1; i5 < 12; i5++) {
                boolean b=false;
                i6 = i5;
                f1 = i5;
                i6 /= (int)(i6 | 1);
                switch ((int)(((d % 8) * 5) + 19)) {
                case 49:
                    i6 = i6;
                    break;
                case 36:
                    i7 = i8;
                    f1 *= i7;
                    i6 += (int)l1;
                    Test0724.instanceCount += (((i5 * i7) + l) - l1);
                case 46:
                    for (l2 = 1; l2 < 2; l2++) {
                        i6 |= i7;
                        i9 += s;
                        i8 += (int)(l2 + i6);
                    }
                    break;
                case 44:
                    i7 *= i8;
                case 43:
                    i7 += (int)f1;
                case 53:
                    i7 -= (int)l2;
                    break;
                case 37:
                    b = b;
                case 30:
                    dArr[i5] += i7;
                    break;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + l + l1 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + l2 +
            i9 + s + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(float f) {

        int i2=-178;
        int i3=5;
        int i4=-6;
        int i10=-10;
        int i11=43162;
        int i12=-58;
        int[][] iArr1 =new int[N][N];
        boolean b1=true;
        byte by=-104;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 0.426F);
        FuzzerUtils.init(iArr1, -2);

        for (i2 = 1; i2 < 207; i2++) {
            fArr[i2 - 1][i2] += (-((i3 - i4) + (++i4)));
            Test0724.instanceCount = ((++i4) + iArr1[i2 + 1][i2 + 1]);
            i4 = i3;
            Test0724.instanceCount = ((Short.reverseBytes((short) (-22800)) + (--Test0724.instanceCount)) * Test0724.instanceCount);
            i3 <<= i4;
            vMeth1(-2.767F, Test0724.instanceCount, Test0724.instanceCount);
            for (i10 = i2; i10 < 8; i10++) {
                if (b1) {
                    i3 *= (int) Test0724.instanceCount;
                    if (i11 != 0) {
                        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i10 + i11 + i12 + (b1 ? 1 : 0) + by
                            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    i12 >>= i12;
                } else {
                    if (b1) {
                        i12 += (i10 - by);
                    }
                    try {
                        iArr1[i10 - 1][i2 - 1] = (iArr1[i10][i2 + 1] % 25448);
                        i12 = (-61 % i3);
                        i4 = (i2 % 64105);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i10 + i11 + i12 + (b1 ? 1 : 0) + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vSmallMeth() {


        vMeth(Test0724.fFld);
        vSmallMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=200;
        int i1=-4125;
        int i13=2;
        int i14=-35949;
        int i15=-3;
        int i16=119;
        int i17=161;
        int i18=12;
        int i19=-251;
        int i20=51638;
        int i21=-9307;
        int i22=-12983;
        int i23=6;
        int[] iArr =new int[N];
        boolean b2=false;
        boolean[] bArr =new boolean[N];
        double d1=-1.41521;
        byte by1=110;
        float f2=-2.507F;
        float[][] fArr1 =new float[N][N];

        FuzzerUtils.init(iArr, -150);
        FuzzerUtils.init(fArr1, 31.237F);
        FuzzerUtils.init(bArr, true);

        iArr = (iArr = FuzzerUtils.int1array(N, (int)95));
        for (i = 135; i > 4; i--) {
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth();
            i1 += i;
            iArr[i + 1] |= i;
            if (b2) continue;
            for (i13 = 7; 191 > i13; i13++) {
                i1 -= i;
                if (b2) break;
                d1 += by1;
                Test0724.instanceCount += i14;
                Test0724.fFld += i13;
                fArr1[i + 1][i - 1] += Test0724.fFld;
                i1 = 8;
                i1 -= i;
                if (b2) continue;
                for (i15 = 1; i15 < 2; ++i15) {
                    i16 >>>= i1;
                    i1 += i14;
                }
            }
        }
        for (i17 = 6; i17 < 266; i17++) {
            for (i19 = i17; i19 < 97; i19++) {
                bArr[i17 + 1] = b2;
            }
            i18 -= by1;
            iArr[i17 - 1] *= -69;
            for (f2 = 3; f2 < 97; ++f2) {
                i1 *= i13;
                i14 += i20;
            }
            for (i22 = 97; i22 > i17; i22--) {
                i20 ^= (int)14L;
                i21 &= i13;
            }
        }

        FuzzerUtils.out.println("i i1 b2 = " + i + "," + i1 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i13 i14 d1 = " + i13 + "," + i14 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("by1 i15 i16 = " + by1 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 f2 i21 = " + i20 + "," + Float.floatToIntBits(f2) + "," + i21);
        FuzzerUtils.out.println("i22 i23 iArr = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr1 bArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0724.instanceCount Test0724.fFld = " + Test0724.instanceCount + "," +
                Float.floatToIntBits(Test0724.fFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0724 _instance = new Test0724();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
