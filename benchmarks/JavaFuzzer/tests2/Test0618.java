// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0618 {

    public static final int N = 400;

    public static long instanceCount=-3484174028L;
    public static int iFld=60168;
    public static short sFld=11181;
    public static float fFld=0.549F;
    public static byte byFld=-96;
    public static int iFld1=-6;
    public static int[] iArrFld =new int[N];
    public byte[][] byArrFld =new byte[N][N];

    static {
        FuzzerUtils.init(Test0618.iArrFld, 6);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, long l) {

        double d=6.34957;
        double[] dArr =new double[N];
        int i7=-222, i8=-19137, i9=-10, i10=-17774, i11=3, i12=31474, i13=37960, i14=11;
        byte by=60;
        boolean b=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 1.872F);
        FuzzerUtils.init(dArr, -2.113437);

        fArr[(Test0618.iFld >>> 1) % N] = (float) d;
        for (i7 = 9; i7 < 324; i7++) {
            for (i9 = i7; i9 < 5; ++i9) {
                for (i11 = 1; i11 > 1; i11--) {
                    Test0618.iFld += -103;
                    Test0618.fFld -= Test0618.iFld;
                    Test0618.byFld = (byte) i9;
                    i6 += (9 + (i11 * i11));
                    Test0618.iArrFld[i11 - 1] ^= 93;
                }
                for (i13 = i7; 1 > i13; i13++) {
                    Test0618.sFld -= by;
                    if (i9 != 0) {
                        vMeth2_check_sum += i6 + l + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + i12 + i13
                            + i14 + by + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                }
                dArr = FuzzerUtils.double1array(N, (double)2.10688);
                d -= Test0618.instanceCount;
            }
            if (b) break;
        }
        vMeth2_check_sum += i6 + l + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + by + (b
            ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(int i5) {


        vMeth2(i5, Test0618.instanceCount);
        vMeth1_check_sum += i5;
    }

    public static void vMeth() {

        float f=1.567F;
        int i1=-6, i2=4566, i3=-205, i4=-174;
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -56873L);
        FuzzerUtils.init(bArr, false);

        for (f = 4; 374 > f; ++f) {
            Test0618.iArrFld[(int) (f - 1)] -= (int) (lArr[(int) (f + 1)]--);
            i1 += (int)f;
            lArr = (lArr = (lArr = (lArr = lArr)));
            for (i2 = 1; i2 < 5; ++i2) {
                if (bArr[i2 + 1]) break;
                switch (((i2 >>> 1) % 2) + 121) {
                case 121:
                    i1 += (i2 | i3);
                    i1 = (int) ((Test0618.iArrFld[(int) (f)] %= (int) ((++Test0618.iArrFld[i2 - 1]) | 1)) -
                            (Test0618.instanceCount++));
                    Test0618.instanceCount = (Test0618.iFld = Math.max(i3, Math.abs(i4)));
                case 122:
                    Test0618.sFld = (short) lArr[i2];
                    Test0618.instanceCount *= i3;
                    break;
                }
                if (b1) {
                    vMeth1(Test0618.iFld);
                    try {
                        i4 = (i2 / Test0618.iArrFld[i2]);
                        Test0618.iFld = (Test0618.iFld % -64244);
                        i1 = (i4 % 58373);
                    } catch (ArithmeticException a_e) {}
                } else {
                    Test0618.iArrFld[i2 + 1] >>>= -84;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-34566, i15=-186, i16=71;
        double d1=0.119118;
        boolean b2=false;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 8585639402389640290L);

        i = 1;
        do {
            Test0618.iArrFld[i] = (Test0618.iFld--);
            Test0618.iFld += (i + i);
        } while (++i < 262);
        vMeth();
        Test0618.iFld *= Test0618.iFld;
        Test0618.iFld += Test0618.byFld;
        lArr1[(i >>> 1) % N] *= (long) Test0618.fFld;
        Test0618.iFld = (int) d1;
        b2 = b2;
        Test0618.iFld = i;
        for (i15 = 12; i15 < 272; i15++) {
            Test0618.iFld ^= i;
            Test0618.iFld += i;
            Test0618.instanceCount += (51542 + (i15 * i15));
            byArrFld[i15][i15] = (byte) Test0618.instanceCount;
            Test0618.iFld1 = 47139;
            Test0618.iArrFld[i15 + 1] -= Test0618.iFld;
        }

        FuzzerUtils.out.println("i d1 b2 = " + i + "," + Double.doubleToLongBits(d1) + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i15 i16 lArr1 = " + i15 + "," + i16 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0618.instanceCount Test0618.iFld Test0618.sFld = " + Test0618.instanceCount + "," + Test0618.iFld +
                "," + Test0618.sFld);
        FuzzerUtils.out.println("Test0618.fFld Test0618.byFld Test0618.iFld1 = " + Float.floatToIntBits(Test0618.fFld) + "," +
                Test0618.byFld + "," + Test0618.iFld1);
        FuzzerUtils.out.println("Test0618.iArrFld byArrFld = " + FuzzerUtils.checkSum(Test0618.iArrFld) + "," +
            FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0618 _instance = new Test0618();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
