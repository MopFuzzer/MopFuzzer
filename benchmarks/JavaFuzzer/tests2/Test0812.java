// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0812 {

    public static final int N = 400;

    public static long instanceCount=-11L;
    public static byte byFld=-101;
    public volatile boolean bFld=false;
    public static volatile short sFld=6361;
    public static int[] iArrFld =new int[N];
    public static short[][] sArrFld =new short[N][N];

    static {
        FuzzerUtils.init(Test0812.iArrFld, -85);
        FuzzerUtils.init(Test0812.sArrFld, (short) 16292);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5, int i6, short s1) {

        int i7=-14, i8=-7979, i9=-59274, i10=-104, i11=2, i12=-41025, i13=14;
        boolean b=false;
        double d2=-74.14940;
        double[] dArr =new double[N];
        float f=0.730F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 8814189870988856340L);
        FuzzerUtils.init(dArr, 46.46889);

        for (i7 = 3; i7 < 193; i7++) {
            i9 = 1;
            while (++i9 < 8) {
                for (i10 = 1; 1 > i10; ++i10) {
                    lArr = lArr;
                }
                i5 *= (int) Test0812.instanceCount;
                for (i12 = 1; i12 < 1; i12++) {
                    Test0812.instanceCount += Test0812.instanceCount;
                    i6 <<= (int)-48529L;
                }
                Test0812.iArrFld[i9] = i7;
                dArr[i9 + 1] *= -19278;
                switch (((i6 >>> 1) % 4) + 10) {
                case 10:
                    if (b) continue;
                    i5 += 24;
                    break;
                case 11:
                    i11 |= i8;
                    if (b) continue;
                    break;
                case 12:
                    d2 = i7;
                case 13:
                    f += i10;
                    break;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + s1 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) +
            Double.doubleToLongBits(d2) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth1() {

        int i4=56595, i14=11, i15=-23073, i16=226, i17=-40, i18=42, i19=-4, i20=5;
        double d1=-126.18937;
        short s=13556;
        short[][] sArr =new short[N][N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -207L);
        FuzzerUtils.init(sArr, (short)1994);

        i4 = (int)((d1 -= (s - -24215)) * i4);
        vMeth(i4, i4, s);
        Test0812.iArrFld = FuzzerUtils.int1array(N, (int) -14);
        for (i14 = 14; i14 < 303; i14++) {
            i4 += (int) Test0812.instanceCount;
            for (i16 = 1; i16 < 6; i16++) {
                float f1=0.271F;
                i18 *= i4;
                lArr1[i16] |= i18;
                switch (((i14 >>> 1) % 6) + 30) {
                case 30:
                case 31:
                    i15 = (int)f1;
                    Test0812.instanceCount >>>= Test0812.instanceCount;
                    break;
                case 32:
                    for (i19 = 1; i19 < 2; i19++) {
                        sArr[i14 - 1][i16] -= (short)f1;
                        Test0812.iArrFld[i19 - 1] = i16;
                        Test0812.instanceCount = 237L;
                    }
                    break;
                case 33:
                    i17 += i16;
                    break;
                case 34:
                    Test0812.byFld = (byte) 6263;
                    break;
                case 35:
                    i15 >>= i19;
                    break;
                default:
                    i4 += i14;
                }
            }
        }
        long meth_res = i4 + Double.doubleToLongBits(d1) + s + i14 + i15 + i16 + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth() {

        int i1=6997, i2=-148, i3=75, i21=-181;
        double d=-5.110356;
        float f2=0.660F, f3=-36.436F;

        i1 = 1;
        do {
            if (bFld) {
                for (i2 = 4; i2 > 1; i2 -= 2) {
                    d -= iMeth1();
                    Test0812.sArrFld[i1][i1] = (short) 1.7928;
                    f2 += -93;
                    for (f3 = 1; f3 < 4; f3++) {
                        short s2=-6888;
                        Test0812.iArrFld = FuzzerUtils.int1array(N, (int) 0);
                        i3 = (int)1.412F;
                        i21 = (int) Test0812.instanceCount;
                        Test0812.byFld -= (byte) f3;
                        s2 *= Test0812.byFld;
                        i21 += (int)f3;
                        i21 += (int)f3;
                        i3 *= 26419;
                    }
                }
            } else if (bFld) {
                Test0812.instanceCount = i21;
            } else {
                i21 >>>= (int) Test0812.instanceCount;
            }
        } while (++i1 < 394);
        long meth_res = i1 + i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + Float.floatToIntBits(f3)
            + i21;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=63231, i22=-13, i23=47513, i24=-3;
        double d3=0.29142;
        float f4=-21.503F;
        float[] fArr =new float[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr, -41.297F);
        FuzzerUtils.init(fArr1, 4.876F);

        i += ((Integer.reverseBytes(i) / (iMeth() | 1)) * 133);
        i22 = 1;
        while (++i22 < 215) {
            d3 -= i22;
            switch (((i22 % 1) * 5) + 106) {
            case 108:
                switch ((i22 % 2) + 32) {
                case 32:
                    f4 = 10;
                    i += i22;
                    if (false) break;
                    Test0812.sFld += (short) i22;
                case 33:
                    if (bFld) {
                        i += i22;
                        i -= (int)13.255F;
                        for (i23 = 5; 117 > i23; ++i23) {
                            Test0812.instanceCount += (i23 | i22);
                            switch ((i23 % 8) + 73) {
                            case 73:
                                Test0812.iArrFld = Test0812.iArrFld;
                                i += i;
                            case 74:
                                Test0812.sFld = (short) d3;
                                i = i23;
                                i += (int)f4;
                                break;
                            case 75:
                                f4 = 10L;
                                break;
                            case 76:
                                i24 = Test0812.byFld;
                                Test0812.iArrFld[i23 + 1] >>= (int) -80L;
                                i -= i22;
                                break;
                            case 77:
                                if (bFld) continue;
                                if (bFld) break;
                                d3 -= -5;
                                d3 += f4;
                            case 78:
                                fArr = fArr;
                                break;
                            case 79:
                            case 80:
                                fArr1[i22] = i22;
                                break;
                            default:
                                i24 /= (int)(i23 | 1);
                            }
                        }
                    } else if (bFld) {
                        if (bFld) continue;
                    } else if (false) {
                        i *= i22;
                    }
                    break;
                }
            default:
                i += (i22 * i22);
            }
        }

        FuzzerUtils.out.println("i i22 d3 = " + i + "," + i22 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("f4 i23 i24 = " + Float.floatToIntBits(f4) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("fArr fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0812.instanceCount Test0812.byFld bFld = " + Test0812.instanceCount + "," + Test0812.byFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0812.sFld Test0812.iArrFld Test0812.sArrFld = " + Test0812.sFld + "," +
                FuzzerUtils.checkSum(Test0812.iArrFld) + "," + FuzzerUtils.checkSum(Test0812.sArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0812 _instance = new Test0812();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
