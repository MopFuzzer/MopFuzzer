// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0505 {

    public static final int N = 400;

    public static long instanceCount=-1537448877132903176L;
    public static float fFld=31.951F;
    public static int iFld=-11642;
    public static byte byFld=90;
    public double dFld=64.30993;
    public boolean bFld=false;
    public short sFld=3954;
    public static int iFld1=-16235;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0505.iArrFld, 13);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vSmallMeth() {

        int i1=-5;
        double d=-115.124568;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -188L);

        Test0505.instanceCount = Math.min(Math.max((int) (Test0505.instanceCount - -7L), (int) (Test0505.fFld - 100)), i1--);
        d = (lArr[(i1 >>> 1) % N]++);
        vSmallMeth_check_sum += i1 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth1(double d2, int i6, int i7) {

        int i8=-3;
        int i9=-148;
        int i10=-39870;
        int i11=25269;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 12);

        i8 = 1;
        do {
            Test0505.instanceCount += (long) 1.709F;
            Test0505.instanceCount *= Test0505.instanceCount;
            Test0505.iFld += (((i8 * i7) + i8) - Test0505.instanceCount);
            Test0505.fFld = Test0505.fFld;
            Test0505.iFld = 12;
            iArr1[i8] -= i6;
            for (i9 = 1; i9 < 9; ++i9) {
                iArr1[i8] *= i6;
                Test0505.instanceCount += Test0505.instanceCount;
                i11 = 1;
                while (++i11 < 2) {
                    Test0505.iFld -= i7;
                    i6 = 5;
                    if (i7 != 0) {
                    }
                    iArr1[i9 - 1] *= (int)0L;
                }
            }
        } while (++i8 < 173);
        long meth_res = Double.doubleToLongBits(d2) + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i2=60604;
        int i3=-5892;
        int i4=34214;
        int i5=-5;
        int i12=144;
        int i13=14;
        int[] iArr =new int[N];
        double d3=0.109662;
        long l=-2695479266L;
        short s=-9360;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(fArr, -61.217F);

        Test0505.fFld = (--Test0505.fFld);
        for (i2 = 9; i2 < 165; i2 += 3) {
            Test0505.instanceCount -= (Test0505.iFld--);
            try {
                iArr[i2] = (iArr[i2] / i3);
                i3 = (iArr[i2] % Test0505.iFld);
                Test0505.iFld = (-10 / i3);
            } catch (ArithmeticException a_e) {}
            for (i4 = 1; i4 < 29; ++i4) {
                Test0505.instanceCount &= (long) (-(Test0505.instanceCount / (((long) (Test0505.fFld - Test0505.iFld)) | 1)));
                iArr[i2] *= iMeth1(d3, -13, i4);
            }
        }
        Test0505.fFld = -12;
        i12 = 1;
        while (++i12 < 240) {
            l = 7;
            while ((l -= 2) > 0) {
                s = (short)i5;
                switch ((int)(((l % 7) * 5) + 8)) {
                case 36:
                    i13 = 1;
                    do {
                        i5 /= 12;
                        fArr[i12 + 1] = -23;
                    } while (++i13 < 2);
                    break;
                case 28:
                    Test0505.fFld = 0;
                case 21:
                    iArr[(int) (l)] += (int) Test0505.instanceCount;
                    break;
                case 19:
                    d3 -= -2257232127L;
                    break;
                case 11:
                    Test0505.byFld += (byte) Test0505.fFld;
                case 18:
                    i5 -= i12;
                    break;
                case 10:
                    i5 = Test0505.iFld;
                    break;
                default:
                    Test0505.byFld += (byte) Test0505.instanceCount;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + Double.doubleToLongBits(d3) + i12 + l + s + i13 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d1, boolean b, float f) {


        Test0505.iFld = iMeth();
        vMeth_check_sum += Double.doubleToLongBits(d1) + (b ? 1 : 0) + Float.floatToIntBits(f);
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i14=47029, i15=59740, i16=131, i17=-2, i18=198, i19=51, i20=-174, i21=-7, i22=125, i23=-15823;
        long l1=38L;
        long[] lArr1 =new long[N];
        double d4=1.42335;

        FuzzerUtils.init(lArr1, 54064L);

        i = 1;
        while (++i < 136) {
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth();
            vMeth(dFld, bFld, Test0505.fFld);
            i14 = 1;
            do {
                Test0505.iFld /= (int) (Test0505.iFld | 1);
                lArr1 = lArr1;
            } while ((i14 += 3) < 184);
            Test0505.iArrFld[i + 1] <<= Test0505.iFld;
            Test0505.iFld = Test0505.byFld;
        }
        for (i15 = 16; i15 < 297; i15++) {
            for (l1 = 3; l1 < 89; l1++) {
                i17 += (int)l1;
            }
        }
        Test0505.iArrFld[(i >>> 1) % N] = 106;
        for (i18 = 9; 283 > i18; i18++) {
            i20 = 92;
            do {
                i16 <<= 8;
                i16 = i17;
                if (bFld) break;
            } while (--i20 > 0);
            for (d4 = 3; d4 < 92; ++d4) {
                Test0505.iFld = (int) Test0505.instanceCount;
                switch ((int)((d4 % 5) + 64)) {
                case 64:
                    Test0505.instanceCount -= i16;
                    Test0505.iArrFld[i18 + 1] = -37;
                    i22 = 2;
                    do {
                        i23 >>>= (int)-162L;
                        i23 = i21;
                        i17 = i17;
                        i16 = -38339;
                        i17 = (int) Test0505.instanceCount;
                        Test0505.instanceCount += (((i22 * Test0505.instanceCount) + i19) - sFld);
                        Test0505.iFld1 += (int) l1;
                    } while ((i22 -= 3) > 0);
                    break;
                case 65:
                    Test0505.instanceCount = i23;
                case 66:
                    Test0505.iFld <<= 8;
                    break;
                case 67:
                    lArr1[(int)(d4)] *= i21;
                    break;
                case 68:
                    Test0505.instanceCount += (long) (((d4 * sFld) + i16) - i23);
                    break;
                default:
                    dFld += i21;
                }
            }
        }

        FuzzerUtils.out.println("i i14 i15 = " + i + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 l1 i17 = " + i16 + "," + l1 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d4 i21 i22 = " + Double.doubleToLongBits(d4) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 lArr1 = " + i23 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0505.instanceCount Test0505.fFld Test0505.iFld = " + Test0505.instanceCount + "," +
                Float.floatToIntBits(Test0505.fFld) + "," + Test0505.iFld);
        FuzzerUtils.out.println("Test0505.byFld dFld bFld = " + Test0505.byFld + "," + Double.doubleToLongBits(dFld) + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("sFld Test0505.iFld1 Test0505.iArrFld = " + sFld + "," + Test0505.iFld1 + "," +
                FuzzerUtils.checkSum(Test0505.iArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0505 _instance = new Test0505();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
