// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0180 {

    public static final int N = 400;

    public static long instanceCount=149L;
    public static float fFld=-73.996F;
    public static short[][] sArrFld =new short[N][N];
    public static boolean[] bArrFld =new boolean[N];
    public volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0180.sArrFld, (short) -28527);
        FuzzerUtils.init(Test0180.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4) {

        short s=-14568;
        int i5=-4464;
        int i6=1;
        int i7=-15;
        int i8=-87;
        int[] iArr =new int[N];
        double d2=-88.69130;
        long l1=-73L;
        boolean b=true;

        FuzzerUtils.init(iArr, -237);

        Test0180.sArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] = (short) i4;
        s /= (short) (Test0180.instanceCount | 1);
        i5 = 1;
        while (++i5 < 160) {
            for (i6 = 1; i6 < 10; i6 += 3) {
                iArr[i6] -= (int)d2;
                for (l1 = 1; l1 < 4; ++l1) {
                    float f=-1.621F;
                    switch ((int)((l1 % 3) + 4)) {
                    case 4:
                        b = false;
                        switch ((int)((l1 % 2) + 106)) {
                        case 106:
                            Test0180.sArrFld[(int) (l1 + 1)][(int) (l1 + 1)] = (short) i7;
                            i7 = i8;
                            break;
                        case 107:
                            i7 += (int)f;
                            Test0180.instanceCount = l1;
                            i7 += i6;
                            f *= (float)d2;
                            break;
                        }
                    case 5:
                        if (i7 != 0) {
                            vMeth2_check_sum += i4 + s + i5 + i6 + i7 + Double.doubleToLongBits(d2) + l1 + i8 + (b ? 1
                                : 0) + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        break;
                    case 6:
                        b = b;
                        break;
                    default:
                        Test0180.bArrFld[(int) (l1 + 1)] = true;
                    }
                }
            }
        }
        vMeth2_check_sum += i4 + s + i5 + i6 + i7 + Double.doubleToLongBits(d2) + l1 + i8 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3) {

        int i9=128;
        int i10=-201;
        int i11=112;
        int i12=-6489;
        int i13=136;
        int i14=-220;
        int[] iArr1 =new int[N];
        int[] iArr2 =new int[N];
        double d3=117.93506;
        float f1=78.323F;
        boolean b1=false;

        FuzzerUtils.init(iArr1, -210);
        FuzzerUtils.init(iArr2, -5);

        vMeth2(i2);
        iArr1 = iArr2;
        for (i9 = 14; i9 < 306; ++i9) {
            if (b1) {
                for (i11 = 6; i11 > i9; i11 -= 3) {
                    for (d3 = 1; d3 > i9; --d3) {
                        i10 += (int) (d3 + Test0180.instanceCount);
                        Test0180.instanceCount /= 240;
                        i12 ^= (int) Test0180.instanceCount;
                        try {
                            i13 = (-41 % i13);
                            i10 = (i3 % iArr1[i11]);
                            iArr2[(int)(d3)] = (59887 % i10);
                        } catch (ArithmeticException a_e) {}
                        f1 /= (i9 | 1);
                        iArr1[(int)(d3)] %= (int)(i14 | 1);
                        i14 *= i3;
                        if (i2 != 0) {
                            vMeth1_check_sum += i2 + i3 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d3) + i13 +
                                Float.floatToIntBits(f1) + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
                                FuzzerUtils.checkSum(iArr2);
                            return;
                        }
                    }
                }
                i14 += (9 + (i9 * i9));
            } else if (b1) {
                i3 *= 4;
            }
        }
        vMeth1_check_sum += i2 + i3 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d3) + i13 +
            Float.floatToIntBits(f1) + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(double d1, long l, int i1) {

        int i15=-10;
        int i16=6718;
        int i17=-42048;
        int i18=-59550;
        int i19=-31532;
        int i20=-83;
        int i21=-71;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, 7);

        vMeth1(i1, i1);
        for (i15 = 13; i15 < 384; ++i15) {
            i1 += (((i15 * l) + i1) - Test0180.fFld);
        }
        for (i17 = 14; i17 < 229; i17++) {
            for (i19 = 1; i19 < 7; i19++) {
                Test0180.instanceCount += (i19 * i19);
                Test0180.fFld += -8022;
                Test0180.instanceCount >>= i19;
                i21 = 2;
                while (--i21 > 0) {
                    iArr3[i19 - 1] = i1;
                    iArr3[i19 - 1] = i17;
                    switch (((-140 >>> 1) % 4) + 96) {
                    case 96:
                        l <<= i21;
                        Test0180.instanceCount *= i18;
                        l += (i21 * i21);
                        break;
                    case 97:
                        l += i20;
                        break;
                    case 98:
                        i20 = (int) Test0180.instanceCount;
                        break;
                    case 99:
                        iArr3[i19 - 1] = (int) Test0180.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + l + i1 + i15 + i16 + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        double d=-19.125722;
        int i=-14, i22=-59293, i23=-27, i24=51493, i25=52977, i26=8033, i27=17534, i28=7, i29=239, i30=12, i31=-5;
        boolean b2=true;
        float f2=-2.779F;
        short s1=-21147;

        for (d = 151; d > 3; d -= 2) {
            vMeth(d, Test0180.instanceCount, i);
            for (i22 = 4; i22 < 338; ++i22) {
                for (i24 = 2; i24 > 1; i24--) {
                    i25 = i23;
                    Test0180.fFld += i;
                }
                i26 = i23;
                i25 += (i22 + Test0180.instanceCount);
                Test0180.fFld += (-27909 + (i22 * i22));
                i += i22;
                for (i27 = i22; i27 < 2; ++i27) {
                    lArrFld = lArrFld;
                    i28 = i25;
                    if (b2) break;
                    i26 *= i28;
                    i += (int)-1.158F;
                }
            }
            f2 = 1;
            do {
                i29 += -70;
                switch ((int)(((f2 % 2) * 5) + 28)) {
                case 37:
                    i *= i23;
                    i26 += (int) (((f2 * Test0180.instanceCount) + s1) - i29);
                case 35:
                    i += (int)f2;
                    i23 = (int)f2;
                    break;
                default:
                    i = (int) Test0180.instanceCount;
                }
                Test0180.instanceCount -= -11;
                Test0180.instanceCount += 182;
                s1 -= (short) Test0180.instanceCount;
                for (i30 = (int)(d); 1 > i30; i30++) {
                    if (b2) continue;
                    i25 += i30;
                }
            } while (++f2 < 338);
        }

        FuzzerUtils.out.println("d i i22 = " + Double.doubleToLongBits(d) + "," + i + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("b2 f2 i29 = " + (b2 ? 1 : 0) + "," + Float.floatToIntBits(f2) + "," + i29);
        FuzzerUtils.out.println("s1 i30 i31 = " + s1 + "," + i30 + "," + i31);

        FuzzerUtils.out.println("Test0180.instanceCount Test0180.fFld Test0180.sArrFld = " + Test0180.instanceCount + "," +
                Float.floatToIntBits(Test0180.fFld) + "," + FuzzerUtils.checkSum(Test0180.sArrFld));
        FuzzerUtils.out.println("Test0180.bArrFld lArrFld = " + FuzzerUtils.checkSum(Test0180.bArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0180 _instance = new Test0180();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
