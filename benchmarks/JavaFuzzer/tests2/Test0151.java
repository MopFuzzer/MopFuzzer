// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0151 {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public volatile float fFld=0.99F;
    public static float fFld1=0.933F;
    public int iFld=7946;
    public static int[] iArrFld =new int[N];
    public long[][] lArrFld =new long[N][N];
    public static double[][] dArrFld =new double[N][N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0151.iArrFld, 161);
        FuzzerUtils.init(Test0151.dArrFld, -73.18158);
        FuzzerUtils.init(Test0151.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static void vMeth() {

        int i5=-1;

        Test0151.iArrFld[(193 >>> 1) % N] <<= (++i5);
        vMeth_check_sum += i5;
    }

    public static int iMeth2() {

        int i16=-6, i17=1, i18=-9, i19=128, i20=-30673, i21=-10, i22=63096;
        short s2=-13210;
        double d1=-95.57798;
        boolean b1=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -1.250F);

        for (i16 = 8; i16 < 150; ++i16) {
            s2 |= (short)44663;
        }
        i17 += i16;
        fArr[(i17 >>> 1) % N] /= ((long)(d1) | 1);
        Test0151.iArrFld[(i16 >>> 1) % N] = i17;
        i18 = 1;
        while (++i18 < 312) {
            if (b1) {
                for (i19 = 1; 5 > i19; ++i19) {
                    for (i21 = 1; i21 < 2; ++i21) {
                        i17 = i16;
                        i22 += 16767;
                        i17 = (int) Test0151.fFld1;
                        i17 = i21;
                    }
                }
                Test0151.iArrFld = Test0151.iArrFld;
                Test0151.instanceCount += (-23L + (i18 * i18));
            } else {
                d1 -= Test0151.fFld1;
            }
        }
        long meth_res = i16 + i17 + s2 + Double.doubleToLongBits(d1) + i18 + i19 + i20 + i21 + i22 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i12, byte by1, long l1) {

        int i13=-222, i14=-110, i15=14427;
        boolean b2=true;

        i12 >>= (int)(-((i12 ^ i12) - -99.303F));
        i13 = 1;
        do {
            if (i12 != 0) {
            }
            i12 -= (int) ((by1 + -10873L) + ((l1--) ^ (i12 << Test0151.instanceCount)));
            i12 += (int) Long.reverseBytes(Test0151.instanceCount &= (9 >>> i12));
            for (i14 = 1; i14 < 7; i14++) {
                int i23=-18348;
                i12 += (int) Test0151.fFld1;
                by1 += (byte)i14;
                i12 = ((Test0151.iArrFld[i14 - 1] + (--Test0151.iArrFld[i14])) + iMeth2());
                if (i12 != 0) {
                }
                by1 += (byte)i12;
                i23 >>= by1;
                try {
                    i15 = (104 % i23);
                    i15 = (-1934705988 % i14);
                    i15 = (Test0151.iArrFld[i13] % i12);
                } catch (ArithmeticException a_e) {}
            }
            Test0151.bArrFld[i13 + 1] = b2;
        } while (++i13 < 242);
        i15 *= i15;
        long meth_res = i12 + by1 + l1 + i13 + i14 + i15 + (b2 ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i6, long l) {

        int i7=-8, i8=-24306, i9=-57891, i10=-108, i11=-119;
        short s1=-11877;
        boolean b=false;
        byte by=-70;
        double d2=3.51474;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 92L);

        vMeth();
        for (i7 = 2; i7 < 166; ++i7) {
            Test0151.fFld1 = (((i6++) - Math.abs(42511)) + ((i6--) - (i6--)));
            i6 = (--Test0151.iArrFld[i7 + 1]);
            for (i9 = 1; i9 < 10; ++i9) {
                lArr[i9 - 1] += (long) (Test0151.dArrFld[i9][i9]--);
                vMeth();
                if (false) {
                    i11 = 2;
                    do {
                        i8 += (((i11 * i10) + i6) - s1);
                        b = (Test0151.bArrFld[i9 - 1] = b);
                        l <<= (long) (((by - i8) - 2.653F) - ((-(i8--)) + iMeth1(-179, by, Test0151.instanceCount)));
                        try {
                            Test0151.iArrFld[i7 + 1] = (726233567 % i6);
                            Test0151.iArrFld[i7 - 1] = (i7 / 9949);
                            i8 = (i11 / 13846);
                        } catch (ArithmeticException a_e) {}
                        Test0151.instanceCount *= l;
                        Test0151.instanceCount += (i11 * i11);
                    } while (--i11 > 0);
                } else {
                    d2 += i8;
                }
            }
        }
        long meth_res = i6 + l + i7 + i8 + i9 + i10 + i11 + s1 + (b ? 1 : 0) + by + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-86.116508;
        int i=58161, i1=18574, i2=31179, i3=-16324, i4=-33, i24=4, i25=-147, i26=6215, i27=-30828, i28=-4, i29=27309,
            i30=-235;
        short s=-21131;
        long l2=3843537174L, l3=53501L;
        boolean b3=false;

        d -= Test0151.instanceCount;
        switch ((((Math.max(i, i) >>> 1) % 9) * 5) + 29) {
        case 55:
            for (i1 = 6; i1 < 185; ++i1) {
                Test0151.instanceCount = (long) (((i / (i | 1)) * (++fFld)) + i2);
                for (i3 = 3; i3 < 140; i3++) {
                    s -= (short) (++Test0151.instanceCount);
                }
                vMeth();
                lArrFld[i1 + 1][i1] >>= (iMeth(-55169, 46254L) + i4);
                i += (i1 * i1);
                Test0151.iArrFld[i1 - 1] = i2;
                for (i24 = 140; i24 > i1; --i24) {
                    i4 = (int) Test0151.instanceCount;
                    if (true) continue;
                    Test0151.iArrFld[i24 - 1] -= -8;
                    i += (((i24 * i24) + i3) - i1);
                    Test0151.instanceCount += i24;
                }
                Test0151.instanceCount -= Test0151.instanceCount;
                i26 = 1;
                while (++i26 < 140) {
                    for (i27 = 1; i27 < 1; i27++) {
                        i >>= i26;
                    }
                    i25 <<= i28;
                }
                for (l2 = 2; l2 < 140; l2++) {
                    i2 += (int)(((l2 * i4) + i1) - i28);
                    if (b3) continue;
                }
            }
            i30 = 1;
            while (++i30 < 386) {
                lArrFld[i30][i30] *= i1;
                if (b3) {
                    i29 -= i;
                    i29 >>= 116;
                } else {
                    Test0151.iArrFld[i30 + 1] += i28;
                }
            }
            break;
        case 52:
            Test0151.fFld1 += (float) d;
            break;
        case 30:
            Test0151.instanceCount -= i2;
            break;
        case 68:
            Test0151.instanceCount = -46535;
            break;
        case 40:
            s <<= (short)i24;
        case 39:
            lArrFld[(i4 >>> 1) % N][(6 >>> 1) % N] = i24;
        case 62:
            Test0151.instanceCount = l2;
            break;
        case 35:
            i = i26;
            break;
        case 73:
            Test0151.iArrFld[(i25 >>> 1) % N] <<= iFld;
            break;
        default:
            Test0151.iArrFld[(iFld >>> 1) % N] -= (int) l3;
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("s i24 i25 = " + s + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("l2 i29 b3 = " + l2 + "," + i29 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i30 l3 = " + i30 + "," + l3);

        FuzzerUtils.out.println("Test0151.instanceCount fFld Test0151.fFld1 = " + Test0151.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Float.floatToIntBits(Test0151.fFld1));
        FuzzerUtils.out.println("iFld Test0151.iArrFld lArrFld = " + iFld + "," + FuzzerUtils.checkSum(Test0151.iArrFld) + ","
            + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test0151.dArrFld Test0151.bArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0151.dArrFld)) + "," + FuzzerUtils.checkSum(Test0151.bArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0151 _instance = new Test0151();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
