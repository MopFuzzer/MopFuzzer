// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0160 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=-26372;
    public static double dFld=-30.82060;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0160.iArrFld, -8);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i13=-176, i14=-197, i15=-7;
        boolean b1=true;
        byte by2=-80;
        short s=28799;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-15466);

        i13 = 1;
        while (++i13 < 373) {
            sArr[i13] = (short)i13;
            Test0160.iFld -= i13;
            i14 = 1;
            while (++i14 < 5) {
                if (b1) continue;
                Test0160.instanceCount -= by2;
                by2 = (byte)s;
            }
            Test0160.iFld -= (int) Test0160.instanceCount;
            Test0160.iFld = (int) Test0160.instanceCount;
        }
        i15 = 1;
        while (++i15 < 227) {
            switch ((((i15 >>> 1) % 2) * 5) + 103) {
            case 108:
                Test0160.instanceCount <<= 59251;
                Test0160.iArrFld[i15 + 1] = (int) Test0160.instanceCount;
                Test0160.iFld <<= i13;
                break;
            case 106:
                by2 -= (byte)i14;
            default:
                Test0160.iFld >>>= (int) 887534502L;
            }
        }
        long meth_res = i13 + i14 + (b1 ? 1 : 0) + by2 + s + i15 + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i5, long l1, int i6) {

        int i7=35738, i8=189, i9=-1, i10=-20, i11=-253, i12=233, i16=-14, i17=-1;
        boolean b=true;
        byte by1=91;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -47L);

        for (i7 = 15; i7 < 364; i7++) {
            for (i9 = 1; 5 > i9; i9++) {
                for (i11 = 1; i11 < 2; i11++) {
                    i10 *= (int) (((l1 + -204) + Math.max(i7, i6)) * ((--i5) + (-Test0160.instanceCount)));
                    i5 += (i11 ^ l1);
                    if (b) continue;
                    i6 = (i11 + by1);
                    i8 -= iMeth();
                }
                for (i16 = 1; i16 < 2; i16++) {
                    Test0160.iFld += (i16 * i8);
                    i6 += i7;
                    lArr[i9 + 1] = by1;
                    i10 += (i16 * i6);
                    i8 = (int) Test0160.instanceCount;
                    i8 *= (int)l1;
                }
            }
        }
        long meth_res = i5 + l1 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + by1 + i16 + i17 +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(byte by, int i, int i1) {

        int i2=6, i3=-6, i4=159, i18=1;
        double d=-2.67825;
        long l=13L;
        float f=2.457F, f1=2.528F;
        boolean b2=false;
        short s1=-877;

        for (i2 = 3; i2 < 219; i2 += 2) {
            Test0160.instanceCount -= (long) d;
            for (l = 1; l < 14; l++) {
                i |= (i1 * (69 + i));
                i3 -= (int) ((++d) * lMeth(i4, Test0160.instanceCount, 7));
                for (f = l; 2 > f; ++f) {
                    i18 -= i18;
                    Test0160.iArrFld[(int) (f)] -= -18441;
                    f1 += by;
                    Test0160.iArrFld[i2 - 1] = i;
                    Test0160.iFld += (int) (f + Test0160.instanceCount);
                }
                i3 *= (int) Test0160.instanceCount;
                if (b2) continue;
            }
            i -= (int)d;
        }
        s1 |= (short) Test0160.iFld;
        vMeth_check_sum += by + i + i1 + i2 + i3 + Double.doubleToLongBits(d) + l + i4 + Float.floatToIntBits(f) + i18
            + Float.floatToIntBits(f1) + (b2 ? 1 : 0) + s1;
    }

    public void mainTest(String[] strArr1) {

        byte by3=65;
        int i19=-5, i20=211, i21=184, i22=4, i23=30443, i24=2, i25=-245, i26=3, i27=-12920, i28=5286, i29=-48102,
            i30=145;
        float f2=-14.895F;
        float[] fArr =new float[N];
        boolean b3=true;

        FuzzerUtils.init(fArr, 90.799F);

        vMeth(by3, Test0160.iFld, 9);
        for (i19 = 6; i19 < 378; i19++) {
            for (i21 = 2; 68 > i21; ++i21) {
                Test0160.iFld += i20;
                i23 = 1;
                do {
                    Test0160.dFld -= Test0160.iFld;
                    Test0160.instanceCount = i22;
                    if (b3) {
                        Test0160.iArrFld[i19] = (int) Test0160.instanceCount;
                        i20 = 1;
                        f2 += (i23 * i22);
                        if (b3) break;
                    }
                } while (++i23 < 2);
                Test0160.iFld -= i21;
                i24 = 1;
                while (++i24 < 2) {
                    Test0160.instanceCount = 34482;
                    f2 /= 44527L;
                    i22 >>= (int) Test0160.instanceCount;
                    by3 %= (byte) (Test0160.instanceCount | 1);
                }
                for (i25 = 1; i25 < 2; ++i25) {
                    Test0160.iArrFld[i21 + 1] = i24;
                    fArr[i25 + 1] = i25;
                }
            }
            Test0160.iFld -= (int) Test0160.instanceCount;
            for (i27 = i19; i27 < 68; i27++) {
                for (i29 = i19; i29 < 1; ++i29) {
                    Test0160.iArrFld[(i21 >>> 1) % N] = i30;
                    i22 += (((i29 * i20) + f2) - i28);
                    i20 = (int) Test0160.instanceCount;
                    Test0160.instanceCount *= (long) Test0160.dFld;
                    Test0160.iArrFld[i19 + 1] = i26;
                    if (false) break;
                }
            }
        }

        FuzzerUtils.out.println("by3 i19 i20 = " + by3 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f2 b3 i24 = " + Float.floatToIntBits(f2) + "," + (b3 ? 1 : 0) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0160.instanceCount Test0160.iFld Test0160.dFld = " + Test0160.instanceCount + "," + Test0160.iFld +
                "," + Double.doubleToLongBits(Test0160.dFld));
        FuzzerUtils.out.println("Test0160.iArrFld = " + FuzzerUtils.checkSum(Test0160.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0160 _instance = new Test0160();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
