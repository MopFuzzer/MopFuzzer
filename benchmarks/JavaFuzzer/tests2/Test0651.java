// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0651 {

    public static final int N = 400;

    public static long instanceCount=3550785565L;
    public static volatile short sFld=-20973;
    public static boolean bFld=true;
    public double dFld=-122.59868;
    public static float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0651.fArrFld, 1.397F);
        FuzzerUtils.init(Test0651.iArrFld, 20713);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4, int i5) {

        int i7=38072, i8=-64918;
        boolean b1=true;
        float f1=-1.956F;
        long l=-2037697706L;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -2.18004);

        Test0651.sFld >>= (short) Test0651.instanceCount;
        i5 -= (int) Test0651.instanceCount;
        for (int i6 : Test0651.iArrFld) {
            Test0651.sFld += (short) i5;
            i6 += i4;
            if (b1) {
                switch ((((i3 >>> 1) % 1) * 5) + 71) {
                case 76:
                    for (i7 = 4; i7 > 1; --i7) {
                        Test0651.iArrFld = Test0651.iArrFld;
                        if (b1) {
                            Test0651.instanceCount = 14;
                            dArr[i7 + 1] = Test0651.sFld;
                        } else {
                            f1 -= -11;
                        }
                        f1 += i7;
                        i5 -= i5;
                    }
                    break;
                default:
                    b1 = true;
                }
            } else if (b1) {
                Test0651.instanceCount <<= Test0651.instanceCount;
                vMeth1_check_sum += i3 + i4 + i5 + i7 + i8 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + l +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            } else if (b1) {
                l = i8;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i7 + i8 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + l +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i1, int i2, float f) {

        int i9=-35, i10=-1, i11=-153, i12=59244;
        double d=0.36834;
        boolean b2=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 204L);

        Test0651.fArrFld[(i1 >>> 1) % N] -= (lArr[(i2 >>> 1) % N] - Test0651.instanceCount);
        Test0651.instanceCount -= i1;
        i2 = i1;
        vMeth1(i2, i1, i1);
        i2 = i1;
        for (i9 = 7; i9 < 259; ++i9) {
            i10 *= (int)-151L;
            d = Test0651.instanceCount;
        }
        Test0651.instanceCount -= -57691;
        b2 = b2;
        switch (((i1 >>> 1) % 2) + 106) {
        case 106:
            for (i11 = 7; i11 < 280; i11++) {
                Test0651.instanceCount = i10;
                d = d;
                Test0651.instanceCount += i11;
            }
            break;
        case 107:
            i10 *= Test0651.sFld;
            break;
        }
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f) + i9 + i10 + Double.doubleToLongBits(d) + (b2 ? 1 : 0) +
            i11 + i12 + FuzzerUtils.checkSum(lArr);
    }

    public static void vSmallMeth(int i) {

        boolean b=true;
        byte by=-119;
        float f2=5.568F;

        b = ((++i) > by);
        vMeth(i, i, f2);
        vSmallMeth_check_sum += i + (b ? 1 : 0) + by + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        float f3=94.203F;
        byte by1=79;
        byte[] byArr =new byte[N];
        byte[][] byArr1 =new byte[N][N];
        int i14=57911;
        int i15=241;
        int i16=0;
        int i17=60863;
        int[] iArr =new int[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, 64204);
        FuzzerUtils.init(byArr, (byte)12);
        FuzzerUtils.init(byArr1, (byte)-76);
        FuzzerUtils.init(lArr1, 13L);

        Test0651.instanceCount = (iArr[(-50156 >>> 1) % N]++);
        for (int smallinvoc=0; smallinvoc<646; smallinvoc++) vSmallMeth(18);
        for (int i13 : iArr) {
            iArr[(i13 >>> 1) % N] = (int)f3;
            i13 -= i13;
            i13 += -13;
            i13 = i13;
            i13 = i13;
            byArr[(i13 >>> 1) % N] += (byte)63508;
            switch ((((-231 >>> 1) % 6) * 5) + 45) {
            case 52:
                i13 -= -99;
                byArr1 = byArr1;
                f3 += i13;
                break;
            case 57:
                switch (((i13 >>> 1) % 9) + 29) {
                case 29:
                    Test0651.instanceCount = by1;
                    i13 = i13;
                    Test0651.iArrFld[(i13 >>> 1) % N] -= (int) Test0651.instanceCount;
                    break;
                case 30:
                    switch ((((-49 >>> 1) % 1) * 5) + 4) {
                    case 8:
                        if (Test0651.bFld) continue;
                        break;
                    default:
                        lArr1 = FuzzerUtils.long1array(N, (long)3834303130738629134L);
                        i13 ^= 11;
                        i13 -= (int)f3;
                        Test0651.instanceCount *= i13;
                    }
                    for (i14 = 2; i14 < 63; ++i14) {
                        lArr1[i14 + 1] >>>= i14;
                        i15 = 49446;
                        for (i16 = i14; 2 > i16; ++i16) {
                            Test0651.instanceCount = Test0651.instanceCount;
                            i17 >>>= i15;
                            i13 += (int)1.24485;
                        }
                    }
                    break;
                case 31:
                    dFld *= Test0651.instanceCount;
                case 32:
                    Test0651.instanceCount += i14;
                    break;
                case 33:
                    i15 -= (int)-73746198L;
                    break;
                case 34:
                    Test0651.sFld += (short) i16;
                case 35:
                    iArr[(i16 >>> 1) % N] = i16;
                case 36:
                    f3 += f3;
                    break;
                case 37:
                    i15 = -196;
                }
                break;
            case 51:
                i15 -= (int) Test0651.instanceCount;
            case 73:
                f3 *= (float)dFld;
                break;
            case 48:
                i17 = (int) Test0651.instanceCount;
                break;
            case 55:
                f3 *= i16;
                break;
            default:
                i13 >>= i13;
            }
        }

        FuzzerUtils.out.println("f3 by1 i14 = " + Float.floatToIntBits(f3) + "," + by1 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("iArr byArr byArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(byArr)
            + "," + FuzzerUtils.checkSum(byArr1));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0651.instanceCount Test0651.sFld Test0651.bFld = " + Test0651.instanceCount + "," + Test0651.sFld +
                "," + (Test0651.bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld Test0651.fArrFld Test0651.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0651.fArrFld)) + "," + FuzzerUtils.checkSum(Test0651.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0651 _instance = new Test0651();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
