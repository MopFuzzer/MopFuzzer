// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0761 {

    public static final int N = 400;

    public static long instanceCount=4126740702L;
    public static double dFld=-58.69531;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0761.iArrFld, 20850);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, int i3, int i4) {

        float f=-2.898F;
        int i5=-181;
        int i6=25481;
        int i7=-24526;
        int i8=-28998;
        int i9=-12;
        int i10=58197;
        int[][] iArr =new int[N][N];
        double d=69.33535;
        boolean b=true;

        FuzzerUtils.init(iArr, 13);

        i4 += (int)f;
        i3 -= (int) Test0761.instanceCount;
        for (i5 = 7; i5 < 180; ++i5) {
            i2 += (int)(-1.565F + (i5 * i5));
            d -= i7;
            f -= i6;
            iArr = iArr;
            i3 = i2;
            i8 = 1;
            do {
                for (i9 = 1; i9 < 1; ++i9) {
                    i10 *= -49;
                    i2 -= i4;
                }
                if (b) continue;
                i10 -= i4;
                i7 += (-15813 + (i8 * i8));
            } while (++i8 < 9);
        }
        vMeth1_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + Double.doubleToLongBits(d) + i7 + i8 +
            i9 + i10 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i) {

        byte by=126;
        float f1=-23.203F;
        int i11=20002, i12=-7;

        for (int i1 : Test0761.iArrFld) {
            vMeth1(i1, i1, i1);
            by = (byte) Test0761.dFld;
            i *= i;
            f1 = i;
            Test0761.instanceCount += i;
            Test0761.instanceCount *= i1;
            i = i;
            for (i11 = 4; i11 > 1; i11--) {
                i -= i1;
                Test0761.instanceCount = i1;
                i12 -= (int) Test0761.instanceCount;
                Test0761.instanceCount = (long) Test0761.dFld;
                Test0761.instanceCount += (i11 - Test0761.instanceCount);
                f1 -= i11;
            }
        }
        vMeth_check_sum += i + by + Float.floatToIntBits(f1) + i11 + i12;
    }

    public static void vSmallMeth() {

        int i13=114;

        vMeth(i13);
        i13 ^= i13;
        vSmallMeth_check_sum += i13;
    }

    public void mainTest(String[] strArr1) {

        int i14=18, i15=1, i16=240, i17=-157, i18=46027, i19=164, i20=-7, i21=-1825, i22=194;
        float f2=0.887F;
        boolean b1=false;
        byte by1=-118;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(dArr, -1.102011);
        FuzzerUtils.init(lArr, 57L);

        for (int smallinvoc=0; smallinvoc<606; smallinvoc++) vSmallMeth();
        i14 += (int) Test0761.instanceCount;
        Test0761.dFld = Test0761.instanceCount;
        i15 = 1;
        while (++i15 < 272) {
            f2 = Test0761.instanceCount;
            switch ((i15 % 6) + 97) {
            case 97:
                Test0761.instanceCount += (i15 - Test0761.instanceCount);
                Test0761.iArrFld[i15] += (int) 158L;
                break;
            case 98:
                Test0761.instanceCount -= 26693;
                for (i16 = 92; i16 > 5; --i16) {
                    i14 += i16;
                    i14 += (i16 + f2);
                    i14 >>= i14;
                    dArr[i16 + 1] += i16;
                    i17 &= (int) Test0761.instanceCount;
                    f2 -= 30891L;
                    f2 = i14;
                    i17 = 28353;
                }
                if (b1) break;
                break;
            case 99:
                Test0761.iArrFld[i15 - 1] += 29025;
                for (i18 = 4; i18 < 92; ++i18) {
                    i20 = 1;
                    do {
                        i19 = -3202;
                        i14 >>= -85;
                    } while (++i20 < 2);
                    f2 -= i18;
                    for (i21 = i18; i21 < 2; ++i21) {
                        Test0761.instanceCount -= by1;
                    }
                    lArr[i15 + 1] += 10;
                }
                i19 = 42061;
                break;
            case 100:
                Test0761.iArrFld[i15] *= i18;
                break;
            case 101:
                by1 += (byte)i15;
            case 102:
                i19 += i15;
                break;
            }
        }

        FuzzerUtils.out.println("i14 i15 f2 = " + i14 + "," + i15 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i16 i17 b1 = " + i16 + "," + i17 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 by1 = " + i21 + "," + i22 + "," + by1);
        FuzzerUtils.out.println("dArr lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0761.instanceCount Test0761.dFld Test0761.iArrFld = " + Test0761.instanceCount + "," +
                Double.doubleToLongBits(Test0761.dFld) + "," + FuzzerUtils.checkSum(Test0761.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0761 _instance = new Test0761();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
