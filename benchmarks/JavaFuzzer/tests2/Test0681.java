// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0681 {

    public static final int N = 400;

    public static long instanceCount=-1151665834243073594L;
    public long lFld=229L;
    public static byte byFld=94;
    public static float fFld=-75.1001F;
    public static double dFld=-2.54496;
    public static short sFld=27101;
    public boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i17=71, i18=-24606, i19=88, i20=32;
        double d1=44.24802;
        double[] dArr =new double[N];
        long l=75L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(dArr, 119.98111);
        FuzzerUtils.init(lArr1, -2506729755648644465L);

        for (i17 = 3; i17 < 367; i17++) {
            if (i17 != 0) {
                vMeth1_check_sum += i17 + i18 + Double.doubleToLongBits(d1) + l + i19 + i20 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
                return;
            }
            Test0681.byFld += (byte) 12;
            switch (((i17 % 3) * 5) + 16) {
            case 22:
                Test0681.instanceCount += -211;
                dArr[i17] = i17;
                i18 -= (int)d1;
                break;
            case 30:
            case 17:
                i18 ^= i17;
                lArr1[i17] = i18;
                Test0681.fFld += i17;
            default:
                Test0681.fFld += -61;
                for (l = 1; l < 5; l += 3) {
                    i20 *= (int) Test0681.fFld;
                }
            }
        }
        i18 >>= -1;
        Test0681.fFld -= i17;
        vMeth1_check_sum += i17 + i18 + Double.doubleToLongBits(d1) + l + i19 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i8, int i9) {

        int i10=78;
        int i11=144;
        int i12=9;
        int i13=26288;
        int i14=188;
        int i15=59;
        int i16=-4543;
        int i21=3;
        int i22=63910;
        int[] iArr =new int[N];
        float f=1.454F;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, 8);
        FuzzerUtils.init(lArr, 80L);

        for (i10 = 1; i10 < 217; i10++) {
            for (i12 = 1; i12 < 7; i12 += 3) {
                Test0681.instanceCount >>= (--i13);
            }
            for (f = 1; f < 7; f++) {
                double d=61.74574;
                try {
                    i11 = (i15 % i12);
                    i9 = (-188 % iArr[(int)(f - 1)]);
                    i8 = (54155 % i16);
                } catch (ArithmeticException a_e) {}
                Test0681.byFld >>= (byte) (i12 + ((i13 * i10) * d));
                lArr[(int)(f)][i10 + 1] += (iArr[i10 - 1] - (--i11));
                i15 += (24438 + (f * f));
                vMeth1();
            }
            for (i21 = 1; i21 < 7; i21++) {
                i13 += (i21 * i21);
            }
            lArr[i10 - 1][i10 + 1] >>= i16;
            i22 /= (int)(i8 | 1);
            i15 = 5;
            iArr[i10 + 1] += i16;
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 + i15 + i16 + i21 + i22 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i7) {

        int i23=-2;
        int i24=97;
        int[] iArr1 =new int[N];
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr1, -207);
        FuzzerUtils.init(lArr2, -19929L);

        i7 |= (int) (Test0681.instanceCount = iMeth(i7, i7));
        iArr1[(i7 >>> 1) % N] -= i7;
        for (i23 = 20; i23 < 391; i23++) {
            i7 *= i7;
            iArr1[i23 + 1] <<= -2;
            i7 = (int) Test0681.dFld;
            switch ((((4 >>> 1) % 9) * 5) + 25) {
            case 60:
                i24 = i23;
            case 53:
                i24 *= i24;
                i7 <<= (int) Test0681.instanceCount;
                Test0681.sFld = (short) i23;
            case 26:
                Test0681.instanceCount -= i23;
                break;
            case 67:
                Test0681.instanceCount += i23;
                Test0681.instanceCount = -8;
                break;
            case 43:
                Test0681.sFld = (short) Test0681.dFld;
                break;
            case 66:
                i7 -= i23;
                break;
            case 63:
                Test0681.fFld -= Test0681.instanceCount;
                break;
            case 59:
                Test0681.instanceCount >>= i23;
                break;
            case 27:
                lArr2 = FuzzerUtils.long1array(N, (long)-45983L);
                break;
            default:
                i7 <<= i7;
            }
        }
        vMeth_check_sum += i7 + i23 + i24 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-131;
        int i1=-2;
        int i2=-53420;
        int i3=-6;
        int i4=-11;
        int i5=9;
        int i6=36;
        int[] iArr2 =new int[N];
        double[][] dArr1 =new double[N][N];

        FuzzerUtils.init(iArr2, 15459);
        FuzzerUtils.init(dArr1, -2.9153);

        lFld = i;
        for (i1 = 9; i1 < 377; ++i1) {
            for (i3 = 3; i3 < 68; i3++) {
                i2 += i2;
                for (i5 = 1; i5 < 2; i5++) {
                    vMeth(i5);
                    iArr2[i3 + 1] *= i4;
                    Test0681.byFld -= (byte) i1;
                    Test0681.byFld += (byte) (i5 | i);
                    Test0681.sFld += Test0681.byFld;
                    try {
                        i4 = (i2 / i1);
                        iArr2[i3 + 1] = (iArr2[i5 - 1] / i2);
                        i4 = (i2 % i2);
                    } catch (ArithmeticException a_e) {}
                    switch (((i5 % 5) * 5) + 125) {
                    case 127:
                        dArr1[i3 + 1][i1 - 1] += i3;
                        switch (((i1 % 8) * 5) + 47) {
                        case 64:
                            i2 = -5701;
                            i4 = (int) Test0681.instanceCount;
                            break;
                        case 83:
                            i6 = (int)-9024082676193179241L;
                            i += (int)(-8.983F + (i5 * i5));
                            i6 -= i3;
                            if (bFld) break;
                        case 49:
                            i4 += i5;
                            lFld = 8;
                            if (bFld) {
                                if (bFld) continue;
                            }
                            break;
                        case 48:
                            iArr2[i1] -= i5;
                            iArr2[i3 - 1] += (int) Test0681.fFld;
                            break;
                        case 74:
                            bFld = bFld;
                        case 73:
                            if (bFld) continue;
                            if (true) continue;
                            break;
                        case 75:
                            Test0681.dFld = i;
                        case 52:
                            Test0681.instanceCount = i;
                            break;
                        }
                        break;
                    case 148:
                        Test0681.instanceCount >>= 2596;
                        break;
                    case 146:
                        Test0681.instanceCount ^= -13L;
                        break;
                    case 132:
                        lFld -= 34;
                        break;
                    case 128:
                        i2 -= i6;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("i6 iArr2 dArr1 = " + i6 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0681.instanceCount lFld Test0681.byFld = " + Test0681.instanceCount + "," + lFld + "," +
                Test0681.byFld);
        FuzzerUtils.out.println("Test0681.fFld Test0681.dFld Test0681.sFld = " + Float.floatToIntBits(Test0681.fFld) + "," +
                Double.doubleToLongBits(Test0681.dFld) + "," + Test0681.sFld);
        FuzzerUtils.out.println("bFld = " + (bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0681 _instance = new Test0681();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
