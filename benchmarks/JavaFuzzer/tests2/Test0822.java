// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0822 {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public float fFld=0.216F;
    public static int iFld=12;
    public byte byFld=-60;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0822.iArrFld, -13);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, short s) {

        double d=0.104251;
        int i5=-137;
        int i7=49;
        int i8=178;
        int[] iArr =new int[N];
        float f2=0.674F;
        float f3=-1.757F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -109.124F);
        FuzzerUtils.init(iArr, 3);

        for (d = 9; d < 162; d++) {
            i5 += i5;
            l = i5;
            i5 += i5;
            f2 = i5;
            Test0822.instanceCount -= i5;
            Test0822.instanceCount = i5;
            iArr[(int) (d)] = (int) Test0822.instanceCount;
        }
        i5 *= -63;
        i7 = 1;
        do {
            i5 -= 4787;
            for (f3 = 6; f3 > 1; f3--) {
                i8 = -231;
                i8 = (int)f2;
                f2 -= i5;
            }
        } while (++i7 < 261);
        vMeth1_check_sum += l + s + Double.doubleToLongBits(d) + i5 + Float.floatToIntBits(f2) + i7 +
            Float.floatToIntBits(f3) + i8 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i2, int i3, int i4) {

        short s1=-11169;

        vMeth1(Test0822.instanceCount, s1);
        vMeth_check_sum += i2 + i3 + i4 + s1;
    }

    public static void vSmallMeth(int i, int i1, float f) {


        vMeth(i, 58452, i1);
        vSmallMeth_check_sum += i + i1 + Float.floatToIntBits(f);
    }

    public void mainTest(String[] strArr1) {

        int i9=220, i10=-10, i11=164, i12=-60306, i13=125, i14=-239, i15=-12538, i16=-5, i17=49447, i18=0;
        boolean b=true;
        short s2=15791;
        float[][] fArr1 =new float[N][N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr1, 47.321F);
        FuzzerUtils.init(lArr, -1L);

        for (int smallinvoc=0; smallinvoc<894; smallinvoc++) vSmallMeth(57322, i9, fFld);
        i10 = 169;
        while ((i10 -= 2) > 0) {
            for (i11 = 5; 295 > i11; ++i11) {
                fFld *= Test0822.instanceCount;
                i9 = (int) Test0822.instanceCount;
                fArr1[i11 + 1][i10 - 1] += Test0822.iFld;
                fFld = 103;
                i9 = Test0822.iFld;
                switch (((i9 >>> 1) % 2) + 98) {
                case 98:
                    for (i13 = 1; i13 < 2; i13++) {
                        if (b) continue;
                        switch ((i13 % 3) + 14) {
                        case 14:
                            byFld >>= byFld;
                            break;
                        case 15:
                            Test0822.iArrFld[i11] = (int) -2256853357265869039L;
                            i14 = (int) Test0822.instanceCount;
                            i12 = (int)fFld;
                            Test0822.iFld = i13;
                            break;
                        case 16:
                            try {
                                i12 = (i11 / Test0822.iArrFld[i11]);
                                i14 = (Test0822.iFld / 26243);
                                i14 = (i12 / i11);
                            } catch (ArithmeticException a_e) {}
                            Test0822.instanceCount *= i13;
                            break;
                        }
                        Test0822.iFld += (int) -2.100656;
                    }
                    i9 &= 9521;
                    break;
                case 99:
                    fFld = fFld;
                    b = b;
                    break;
                }
                Test0822.instanceCount += i11;
                byFld *= (byte)i11;
            }
            for (i15 = 16; 295 > i15; ++i15) {
                for (i17 = 1; i17 < 2; ++i17) {
                    s2 -= (short)i13;
                }
                lArr[i15] += i9;
                s2 = (short)i18;
            }
        }

        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("b i15 i16 = " + (b ? 1 : 0) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 s2 = " + i17 + "," + i18 + "," + s2);
        FuzzerUtils.out.println("fArr1 lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0822.instanceCount fFld Test0822.iFld = " + Test0822.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0822.iFld);
        FuzzerUtils.out.println("byFld Test0822.iArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0822.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0822 _instance = new Test0822();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
