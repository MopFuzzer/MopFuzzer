// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0686 {

    public static final int N = 400;

    public static long instanceCount=-7L;
    public static boolean bFld=true;
    public static float fFld=1.917F;
    public static short sFld=-5438;
    public double dFld=-1.67389;
    public static volatile int[] iArrFld =new int[N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0686.iArrFld, 23);
        FuzzerUtils.init(Test0686.byArrFld, (byte) -63);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(short s, double d) {

        int i2=-2, i3=-2886, i4=7, i6=-10, i7=34614;
        double d1=1.70695;

        for (i2 = 193; i2 > 7; i2--) {
            Test0686.iArrFld[i2 + 1] -= i2;
            for (d1 = 1; d1 < 9; ++d1) {
                int i5=39332;
                Test0686.instanceCount -= -65;
                i3 += i5;
                for (i6 = 1; i6 < 2; i6++) {
                    i5 /= (int)(i5 | 1);
                    Test0686.bFld = Test0686.bFld;
                    Test0686.iArrFld[(-65 >>> 1) % N] >>= (int) Test0686.instanceCount;
                    Test0686.fFld += 3047;
                    Test0686.fFld += (((i6 * i6) + i7) - i6);
                    Test0686.byArrFld[i6 + 1] = (byte) i5;
                    d = i3;
                    Test0686.instanceCount = Test0686.instanceCount;
                }
                Test0686.fFld -= i3;
            }
        }
        long meth_res = s + Double.doubleToLongBits(d) + i2 + i3 + Double.doubleToLongBits(d1) + i4 + i6 + i7;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i1) {

        float f=0.290F;
        double d2=-30.29139;

        f -= Math.min(iMeth1(Test0686.sFld, d2) * i1, i1);
        vMeth_check_sum += l + i1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2);
    }

    public int iMeth(int i, boolean b) {

        long l1=-3L;
        float f1=-94.134F;
        int i9=-56286, i10=140;

        vMeth(Test0686.instanceCount, i);
        l1 = 1;
        do {
            i ^= i;
            for (f1 = 1; f1 < 6; ++f1) {
                i = (int)l1;
                i10 = 1;
                while (++i10 < 2) {
                    double d3=1.54023;
                    i9 |= i9;
                    Test0686.instanceCount = i;
                    i *= (int)d3;
                    Test0686.bFld = b;
                    i9 += (i10 ^ i10);
                    i += Test0686.sFld;
                }
                Test0686.instanceCount = (long) dFld;
                Test0686.instanceCount += (long) f1;
            }
            i *= i;
        } while (++l1 < 263);
        long meth_res = i + (b ? 1 : 0) + l1 + Float.floatToIntBits(f1) + i9 + i10;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i11=-26993, i12=-85, i13=47312, i14=12616, i15=4722, i16=-11, i17=5, i18=-9, i19=167, i20=-39939, i21=7569,
            i22=176, i23=-38473, i24=-229, i25=8, i26=-8207, i27=-52;
        byte by=-64;
        double d4=-105.34024;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -27825L);

        iMeth(i11, false);
        Test0686.bFld = Test0686.bFld;
        i12 = 317;
        while (--i12 > 0) {
            if (Test0686.bFld) continue;
        }
        for (i13 = 7; i13 < 385; i13++) {
            i11 = -39;
            for (i15 = 67; i15 > i13; --i15) {
                dFld *= -73;
            }
            Test0686.instanceCount -= (long) dFld;
            for (i17 = i13; i17 < 67; i17 += 2) {
                i14 /= (int)(i15 | 1);
                i18 *= by;
                Test0686.sFld = (short) i19;
                i19 += i16;
                d4 *= i12;
            }
            for (i20 = 67; i20 > 4; --i20) {
                dFld = Test0686.instanceCount;
            }
            lArr[i13] >>>= i21;
        }
        for (i22 = 9; i22 < 371; ++i22) {
            Test0686.instanceCount *= -52;
            for (i24 = 70; i24 > 2; i24 -= 2) {
                i25 = -9;
                switch (((i24 % 1) * 5) + 91) {
                case 92:
                    for (i26 = 3; i26 > 1; i26 -= 3) {
                        i19 <<= i13;
                        Test0686.instanceCount <<= i19;
                        Test0686.sFld = (short) i24;
                        Test0686.fFld = Test0686.instanceCount;
                        by += (byte)(62408 + (i26 * i26));
                        i25 += i25;
                    }
                    break;
                default:
                    i14 += (i24 * i24);
                }
            }
        }

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 by = " + i17 + "," + i18 + "," + by);
        FuzzerUtils.out.println("i19 d4 i20 = " + i19 + "," + Double.doubleToLongBits(d4) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 lArr = " + i27 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0686.instanceCount Test0686.bFld Test0686.fFld = " + Test0686.instanceCount + "," + (Test0686.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0686.fFld));
        FuzzerUtils.out.println("Test0686.sFld dFld Test0686.iArrFld = " + Test0686.sFld + "," + Double.doubleToLongBits(dFld) +
                "," + FuzzerUtils.checkSum(Test0686.iArrFld));
        FuzzerUtils.out.println("Test0686.byArrFld = " + FuzzerUtils.checkSum(Test0686.byArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0686 _instance = new Test0686();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
