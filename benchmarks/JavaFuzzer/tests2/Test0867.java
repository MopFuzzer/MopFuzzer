// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0867 {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static byte byFld=-43;
    public static int iFld=22173;
    public static boolean bFld=true;
    public int iFld1=-14;
    public static float fFld=-27.747F;
    public int iFld2=-116;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i3, int i4) {

        double d=-55.19214;
        int i5=14852;
        int i6=14773;
        int i7=250;
        int i8=1447;
        int i9=-10;
        int i10=-3;
        int i11=52494;
        int[] iArr =new int[N];
        float f3=115.362F, f4=75.182F;

        FuzzerUtils.init(iArr, 11);

        iArr = iArr;
        iArr[(9 >>> 1) % N] -= (int)d;
        for (i5 = 10; i5 < 325; i5++) {
            try {
                Test0867.iFld = (i6 / i3);
                i4 = (i4 / -116);
                i7 = (i7 % i4);
            } catch (ArithmeticException a_e) {}
            for (f3 = 1; f3 < 5; ++f3) {
                for (i9 = 2; 1 < i9; i9 -= 2) {
                    switch (((-53495 >>> 1) % 3) + 81) {
                    case 81:
                        Test0867.iFld += (i9 + i11);
                        break;
                    case 82:
                        i10 *= (int)d;
                        break;
                    case 83:
                        i6 = i9;
                        break;
                    default:
                        i7 >>>= (int)l;
                    }
                    switch ((int)((f3 % 1) + 45)) {
                    case 45:
                        f4 += i9;
                        if (Test0867.bFld) break;
                        break;
                    default:
                        Test0867.instanceCount += i9;
                    }
                }
            }
        }
        vMeth2_check_sum += l + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + Float.floatToIntBits(f3) + i8 +
            i9 + i10 + i11 + Float.floatToIntBits(f4) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        double d1=0.34617;
        double[] dArr =new double[N];
        int i12=35078, i13=-10, i14=3, i15=63199, i16=4, i17=1, i18=-126;
        float f5=0.960F;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(dArr, -55.9278);
        FuzzerUtils.init(lArr, 9122298856514437796L);

        vMeth2(Test0867.instanceCount, Test0867.iFld, Test0867.iFld);
        dArr[(Test0867.iFld >>> 1) % N] -= d1;
        for (i12 = 8; i12 < 211; i12++) {
            Test0867.iFld >>= -4;
            Test0867.byFld <<= (byte) i13;
            Test0867.iFld += (i12 | (long) f5);
            Test0867.iFld -= 7798;
            for (i14 = 1; i14 < 8; i14++) {
                for (i16 = 1; i16 < 2; ++i16) {
                    lArr[i12 - 1][i14 - 1] >>= Test0867.byFld;
                    if (i12 != 0) {
                        vMeth1_check_sum += Double.doubleToLongBits(d1) + i12 + i13 + Float.floatToIntBits(f5) + i14 +
                            i15 + i16 + i17 + i18 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    i18 >>= i17;
                    Test0867.instanceCount = Test0867.instanceCount;
                    if (false) continue;
                    Test0867.instanceCount += (long) (2.596F + (i16 * i16));
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i12 + i13 + Float.floatToIntBits(f5) + i14 + i15 + i16 + i17
            + i18 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f1, float f2) {

        int i1=-26816, i2=-10, i19=22152, i20=-252, i21=52, i22=11, i23=-30;
        double d2=-46.84582;
        float[] fArr =new float[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(fArr, 101.648F);
        FuzzerUtils.init(lArr1, 209409960298545883L);

        for (i1 = 278; i1 > 5; --i1) {
            Test0867.instanceCount -= (((i2--) - Test0867.byFld) - (Test0867.instanceCount += (i2 = i2)));
            vMeth1();
            for (i19 = 6; 1 < i19; --i19) {
                Test0867.iFld = i2;
                fArr[i1 + 1] = Test0867.iFld;
                Test0867.bFld = Test0867.bFld;
                for (i21 = 1; i21 < 2; ++i21) {
                    i20 = i23;
                }
                d2 = 1;
                do {
                    i22 >>= (int) Test0867.instanceCount;
                } while (++d2 < 2);
                f2 = i20;
                i22 = -212;
                i2 = (int)1.118F;
                lArr1[i1 + 1] += i21;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i1 + i2 + i19 + i20 + i21 + i22 + i23
            + Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        float f=123.129F;
        float f6=2.239F;
        float[] fArr1 =new float[N];
        int i=-4;
        int i24=231;
        int i25=-3;
        int i26=6;
        int i27=4;
        int i28=-158;
        int i29=26470;
        int[] iArr1 =new int[N];
        byte by=-42;
        byte[] byArr =new byte[N];
        long l1=1L;
        short s=6641;
        boolean[] bArr =new boolean[N];
        double[][] dArr1 =new double[N][N];

        FuzzerUtils.init(fArr1, -1.285F);
        FuzzerUtils.init(iArr1, -31915);
        FuzzerUtils.init(byArr, (byte)-45);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(dArr1, -97.19453);

        f = 1;
        do {
            i >>>= by;
            i -= (int)f;
            i |= (int) (--Test0867.instanceCount);
            vMeth(f, f);
            fArr1[(int) (f)] -= Test0867.iFld;
            Test0867.iFld *= iFld1;
            for (l1 = 74; l1 > 3; l1 -= 3) {
                Test0867.instanceCount += -24;
            }
            iArr1[(Test0867.iFld >>> 1) % N] -= (int) f;
            Test0867.instanceCount += (long) (f - l1);
            Test0867.fFld -= 5;
        } while (++f < 342);
        for (i25 = 3; i25 < 127; i25++) {
            Test0867.iFld = Test0867.iFld;
            Test0867.iFld ^= -35795;
            Test0867.bFld = Test0867.bFld;
            Test0867.iFld -= 26298;
            try {
                iFld1 = (-14797 % iFld1);
                i = (Test0867.iFld / 887650572);
                iArr1[i25 + 1] = (-241 / i24);
            } catch (ArithmeticException a_e) {}
            for (i27 = 3; i27 < 202; i27++) {
                iArr1[i27] += Test0867.iFld;
                iFld2 += (17492 + (i27 * i27));
                Test0867.instanceCount += i27;
                for (f6 = 1; 2 > f6; f6++) {
                    iFld1 += (int) (((f6 * i24) + i27) - Test0867.iFld);
                    bArr[i25] = Test0867.bFld;
                    dArr1 = FuzzerUtils.double2array(N, (double)-49.102188);
                    switch (((i27 % 5) * 5) + 79) {
                    case 86:
                        iFld2 -= (int) Test0867.instanceCount;
                        break;
                    case 85:
                        s <<= (short)i24;
                        break;
                    case 87:
                        Test0867.byFld *= (byte) i26;
                        break;
                    case 92:
                        i28 = (int)l1;
                        break;
                    case 89:
                        fArr1[(int)(f6)] *= l1;
                        break;
                    default:
                        Test0867.instanceCount += (long) f6;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i by = " + Float.floatToIntBits(f) + "," + i + "," + by);
        FuzzerUtils.out.println("l1 i24 i25 = " + l1 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("f6 i29 s = " + Float.floatToIntBits(f6) + "," + i29 + "," + s);
        FuzzerUtils.out.println("fArr1 iArr1 byArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("bArr dArr1 = " + FuzzerUtils.checkSum(bArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0867.instanceCount Test0867.byFld Test0867.iFld = " + Test0867.instanceCount + "," + Test0867.byFld +
                "," + Test0867.iFld);
        FuzzerUtils.out.println("Test0867.bFld iFld1 Test0867.fFld = " + (Test0867.bFld ? 1 : 0) + "," + iFld1 + "," +
                Float.floatToIntBits(Test0867.fFld));
        FuzzerUtils.out.println("iFld2 = " + iFld2);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0867 _instance = new Test0867();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
