// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:39 2023
public class Test0583 {

    public static final int N = 400;

    public static long instanceCount=-23L;
    public double dFld=97.99762;
    public static float fFld=2.720F;
    public static boolean bFld=true;
    public static short sFld=-3180;
    public volatile int iFld=9919;
    public static byte byFld=127;
    public static int[][] iArrFld =new int[N][N];
    public static short[][] sArrFld =new short[N][N];
    public boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0583.iArrFld, -27110);
        FuzzerUtils.init(Test0583.sArrFld, (short) 9008);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public void vMeth1() {

        int i6=155;
        int i7=2;
        int i8=10;
        int i9=13753;
        int i10=13;
        int i11=212;
        int i12=46268;
        int i13=-227;
        int[] iArr1 =new int[N];
        boolean b1=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 3297777380L);
        FuzzerUtils.init(iArr1, -113);

        for (i6 = 7; i6 < 155; ++i6) {
            Test0583.fFld += i6;
        }
        for (i8 = 147; 8 < i8; --i8) {
            i10 = 1;
            do {
                Test0583.fFld += (((i10 * Test0583.instanceCount) + i8) - i6);
                Test0583.instanceCount += (((i10 * i6) + Test0583.instanceCount) - Test0583.instanceCount);
            } while (++i10 < 11);
            i7 += (i8 * i10);
            i11 = 1;
            do {
                for (i12 = 1; 1 > i12; i12++) {
                    lArr[i11 + 1] += (long)dFld;
                    b1 = b1;
                    dFld -= i6;
                }
                iArr1[i8 - 1] = i13;
                i13 = i13;
                i13 += (((i11 * i7) + Test0583.fFld) - i12);
            } while (++i11 < 11);
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public int iMeth(int i5, boolean b) {

        long l1=-235L, l2=5L;
        int i14=132, i15=194, i16=6;
        short s=10349;

        Test0583.fFld += (-Test0583.fFld);
        vMeth1();
        switch ((((i5 >>> 1) % 2) * 5) + 4) {
        case 10:
        case 7:
        }
        for (l1 = 5; l1 < 126; ++l1) {
            l2 = 1;
            do {
                s += (short)8852;
                for (i15 = 1; i15 < 1; i15++) {
                    Test0583.iArrFld[(int) (l2 - 1)][i15 + 1] <<= i16;
                    i5 += (((i15 * Test0583.fFld) + i16) - i5);
                    Test0583.sArrFld[(int) (l1 - 1)] = Test0583.sArrFld[(int) (l1)];
                    i16 = (int)237L;
                    switch ((i15 % 8) + 71) {
                    case 71:
                        Test0583.instanceCount = l2;
                        if (b) continue;
                        s -= (short)1002;
                        break;
                    case 72:
                        s += (short)(i15 + i14);
                        break;
                    case 73:
                        Test0583.instanceCount -= s;
                        break;
                    case 74:
                        Test0583.iArrFld[(int) (l2)][(int) (l2 + 1)] = (int) l2;
                        break;
                    case 75:
                        i14 = i15;
                    case 76:
                        Test0583.fFld += (247 + (i15 * i15));
                        break;
                    case 77:
                        Test0583.instanceCount += i15;
                    case 78:
                        dFld = i5;
                        break;
                    }
                }
            } while (++l2 < 13);
        }
        long meth_res = i5 + (b ? 1 : 0) + l1 + i14 + l2 + s + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(long l) {

        int i2=-13;
        int i3=-12;
        int i4=-18169;
        int i17=24958;
        int i18=-156;
        int i19=-24380;
        int i20=0;
        int i21=-23;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 23);

        for (i2 = 20; i2 < 332; i2++) {
            i3 = (int)(((i4 + 19621) - l) + iArr[i2 + 1]);
            i4 *= (int) ((Test0583.instanceCount + (i3 * 39303L)) + ((Test0583.instanceCount - i4) * iMeth(i17, Test0583.bFld)));
            switch (((i2 % 2) * 5) + 94) {
            case 101:
                i4 = i3;
                i4 *= 7867;
                l -= (long) Test0583.fFld;
            case 95:
                Test0583.iArrFld[i2 + 1][i2] = (int) 3L;
                break;
            }
            for (i18 = 1; i18 < 5; i18++) {
                Test0583.bFld = true;
                for (i20 = 1; i20 < 2; ++i20) {
                    Test0583.sFld = (short) i17;
                    l = i19;
                }
                Test0583.fFld *= iFld;
            }
            i19 <<= i17;
        }
        vMeth_check_sum += l + i2 + i3 + i4 + i17 + i18 + i19 + i20 + i21 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-40314, i1=-47, i22=14, i23=5, i24=41441, i25=6, i26=31;
        double[][] dArr =new double[N][N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(dArr, 74.71117);
        FuzzerUtils.init(lArr1, 127L);

        for (i = 3; 255 > i; i++) {
            float f=-30.436F;
            f += (i - i1);
            i1 *= (int) ((i1--) + ((Test0583.instanceCount >>= i) % (((long) (dFld / (i1 | 1))) | 1)));
            vMeth(-21242L);
            iFld = 229;
            Test0583.instanceCount = Test0583.sFld;
            i1 = Test0583.byFld;
            for (i22 = 6; i22 < 100; i22++) {
                i1 >>= iFld;
                Test0583.instanceCount += (-65 + (i22 * i22));
                for (i24 = 2; 1 < i24; i24--) {
                    f += (((i24 * Test0583.instanceCount) + Test0583.instanceCount) - i22);
                    bArrFld = FuzzerUtils.boolean1array(N, (boolean)true);
                    i1 = (int)f;
                    iFld += i24;
                    i25 += i23;
                    i1 += (((i24 * Test0583.instanceCount) + Test0583.instanceCount) - i24);
                    i1 *= i22;
                }
                iFld += Test0583.sFld;
                if (Test0583.bFld) {
                    if (Test0583.bFld) break;
                    iFld >>= (int) Test0583.instanceCount;
                    dArr[i][i22] = 46;
                    Test0583.iArrFld[i][i22] += i25;
                }
                lArr1[i22 - 1] -= (long)f;
                i25 <<= -57136;
            }
            if (Test0583.bFld) {
                i26 = 100;
                while (--i26 > 0) {
                    i25 *= 52708;
                    Test0583.instanceCount += (i26 + i25);
                }
            } else {
                f += iFld;
            }
        }

        FuzzerUtils.out.println("i i1 i22 = " + i + "," + i1 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 dArr lArr1 = " + i26 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0583.instanceCount dFld Test0583.fFld = " + Test0583.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Float.floatToIntBits(Test0583.fFld));
        FuzzerUtils.out.println("Test0583.bFld Test0583.sFld iFld = " + (Test0583.bFld ? 1 : 0) + "," + Test0583.sFld + "," + iFld);
        FuzzerUtils.out.println("Test0583.byFld Test0583.iArrFld Test0583.sArrFld = " + Test0583.byFld + "," +
                FuzzerUtils.checkSum(Test0583.iArrFld) + "," + FuzzerUtils.checkSum(Test0583.sArrFld));
        FuzzerUtils.out.println("bArrFld = " + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0583 _instance = new Test0583();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
