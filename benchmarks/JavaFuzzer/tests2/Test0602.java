// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0602 {

    public static final int N = 400;

    public static long instanceCount=-12278L;
    public int iFld=233;
    public static boolean bFld=false;
    public static int iFld1=7;
    public long[] lArrFld =new long[N];
    public int[] iArrFld =new int[N];
    public static long[][] lArrFld1 =new long[N][N];

    static {
        FuzzerUtils.init(Test0602.lArrFld1, 20992L);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f, int i9, int i10) {

        int i11=-222;
        int i12=-14;
        int i13=-43227;
        int i14=64565;
        int i15=10;
        int[][] iArr =new int[N][N];
        byte by=-6;
        byte[] byArr =new byte[N];
        double d=-28.958;
        short s=-20973;

        FuzzerUtils.init(iArr, -45);
        FuzzerUtils.init(byArr, (byte)-50);

        for (i11 = 16; i11 < 300; ++i11) {
            i10 = by;
            i12 = i10;
            i9 *= (int)d;
        }
        Test0602.instanceCount *= i12;
        for (i13 = 11; i13 < 220; i13++) {
            s -= (short) Test0602.instanceCount;
            switch ((i13 % 10) + 76) {
            case 76:
                iArr[i13][i13 + 1] += (int) Test0602.instanceCount;
            case 77:
                i9 *= i13;
                if (Test0602.bFld) continue;
                break;
            case 78:
                switch (((56617 >>> 1) % 4) + 71) {
                case 71:
                    i15 = 1;
                    do {
                        i9 += i13;
                        Test0602.lArrFld1[i15][i13] *= i13;
                    } while (++i15 < 8);
                    break;
                case 72:
                    byArr[i13 + 1] = (byte)-14L;
                    break;
                case 73:
                    byArr[i13 + 1] += (byte)i11;
                    break;
                case 74:
                    Test0602.instanceCount -= -28778;
                    break;
                }
                break;
            case 79:
                f -= (float)d;
                break;
            case 80:
                iArr[i13][i13] <<= -38176;
                break;
            case 81:
                Test0602.bFld = Test0602.bFld;
            case 82:
                Test0602.instanceCount += (i13 * i13);
            case 83:
                f += ((long)i13 ^ (long)i15);
                break;
            case 84:
                i9 = 45080;
            case 85:
                Test0602.lArrFld1[i13][i13 + 1] <<= 9;
            default:
                i14 += (i13 * i13);
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + by + Double.doubleToLongBits(d) + i13 + i14
            + s + i15 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static long lMeth(int i8) {

        int i16=10;
        int i17=77;
        int i18=9;
        int i19=40526;
        int i20=7552;
        int i21=-6670;
        int[] iArr1 =new int[N];
        int[] iArr2 =new int[N];
        double d1=1.126937;
        float f1=-44.510F, f2=91.446F;

        FuzzerUtils.init(iArr1, 13);
        FuzzerUtils.init(iArr2, -7989);

        vMeth(-1.611F, i8, i8);
        i16 = 1;
        do {
            iArr1[i16] = (int) Test0602.instanceCount;
            iArr1[i16 - 1] = i16;
            if (Test0602.bFld) continue;
            for (i17 = 1; i17 < 13; ++i17) {
                short s1=29732;
                i18 *= (int)d1;
                f1 *= Test0602.instanceCount;
                s1 += (short)3;
                for (i19 = 1; 2 > i19; ++i19) {
                    i8 = (int)f1;
                }
                iArr2[(Test0602.iFld1 >>> 1) % N] += (int) f2;
            }
            i21 = 13;
            while ((i21 -= 3) > 0) {
                if (Test0602.bFld) continue;
                iArr1[i16] >>>= (int) Test0602.instanceCount;
            }
        } while (++i16 < 121);
        long meth_res = i8 + i16 + i17 + i18 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i19 + i20 +
            Float.floatToIntBits(f2) + i21 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i, int i1) {

        int i2=10;
        int i3=86;
        int i4=-109;
        int i5=6;
        int i6=-47336;
        int i7=-11;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, 90);

        for (i2 = 6; i2 < 241; i2++) {
            i3 += (i2 + i3);
            for (i4 = 7; i4 > i2; i4--) {
                for (i6 = 1; i6 < 1; i6++) {
                    Test0602.instanceCount = lMeth(Test0602.iFld1);
                    if (Test0602.bFld) {
                        iArr3[i2 - 1] = (int)3449675801L;
                        i1 = i3;
                        iArr3[i2 - 1] = (int)246L;
                        i = i7;
                    }
                    switch ((i2 % 2) + 102) {
                    case 102:
                        Test0602.iFld1 += i2;
                        Test0602.instanceCount += (((i6 * i3) + i7) - i2);
                        i5 += (int)1.110785;
                        i7 = i3;
                        break;
                    case 103:
                        i5 -= i1;
                        break;
                    default:
                        i7 = i2;
                    }
                }
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + i5 + i6 + i7 + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=-1.405F;
        float f4=-1.445F;
        float f5=21.649F;
        float[][] fArr =new float[N][N];
        int i22=14, i23=-16943, i24=3, i25=7521, i26=12, i27=187, i28=17, i29=-222;
        double d2=-49.97872;
        long l=-7563635594526409376L;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(fArr, -1.837F);
        FuzzerUtils.init(bArr, false);

        lArrFld[(iFld >>> 1) % N] ^= (iArrFld[(iFld >>> 1) % N] * iMeth(Test0602.iFld1, Test0602.iFld1));
        for (f3 = 227; f3 > 7; --f3) {
            fArr[(int)(f3 - 1)][(int)(f3)] = iFld;
            Test0602.instanceCount *= i22;
            iArrFld[(int)(f3 + 1)] *= iFld;
            Test0602.iFld1 -= (int) Test0602.instanceCount;
            Test0602.iFld1 += (int) f3;
        }
        for (i23 = 17; i23 < 321; i23++) {
            if (false) {
                Test0602.instanceCount = (long) f3;
                for (i25 = 5; i25 < 83; i25++) {
                    d2 = i22;
                    if (Test0602.bFld) break;
                    Test0602.iFld1 += (int) d2;
                    lArrFld[i25 + 1] -= Test0602.instanceCount;
                    switch ((i25 % 8) + 88) {
                    case 88:
                        f4 = i23;
                        for (i27 = 1; i27 < 2; i27++) {
                            iFld -= i28;
                        }
                        f4 += (i25 * i25);
                        iArrFld[i23 + 1] /= (int) (Test0602.iFld1 | 1);
                    case 89:
                        i22 += (-6716 + (i25 * i25));
                        Test0602.iFld1 = (int) d2;
                    case 90:
                        if (Test0602.bFld) break;
                        for (f5 = 2; f5 > i25; --f5) {
                            i28 = i23;
                            l += (long)(((f5 * i27) + l) - f4);
                            l = 5;
                            Test0602.instanceCount >>= i28;
                            f4 += (f5 + f4);
                        }
                        break;
                    case 91:
                        bArr[i25 + 1] = true;
                        break;
                    case 92:
                        i28 -= Test0602.iFld1;
                        break;
                    case 93:
                        i29 += i24;
                        break;
                    case 94:
                        i28 = (int)f5;
                        break;
                    case 95:
                        Test0602.instanceCount = l;
                        break;
                    default:
                        f4 = -25415;
                    }
                }
            } else if (Test0602.bFld) {
                i22 *= (int)l;
            } else {
                d2 += iFld;
            }
        }

        FuzzerUtils.out.println("f3 i22 i23 = " + Float.floatToIntBits(f3) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d2 f4 i27 = " + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f4) + "," +
            i27);
        FuzzerUtils.out.println("i28 f5 i29 = " + i28 + "," + Float.floatToIntBits(f5) + "," + i29);
        FuzzerUtils.out.println("l fArr bArr = " + l + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + ","
            + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0602.instanceCount iFld Test0602.bFld = " + Test0602.instanceCount + "," + iFld + "," +
                (Test0602.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0602.iFld1 lArrFld iArrFld = " + Test0602.iFld1 + "," + FuzzerUtils.checkSum(lArrFld) +
            "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0602.lArrFld1 = " + FuzzerUtils.checkSum(Test0602.lArrFld1));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0602 _instance = new Test0602();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
