// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0557 {

    public static final int N = 400;

    public static long instanceCount=425527633L;
    public int iFld=-20180;
    public static short sFld=-9966;
    public static byte byFld=-42;
    public static float fFld=0.877F;
    public static short[] sArrFld =new short[N];
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0557.sArrFld, (short) -14229);
        FuzzerUtils.init(Test0557.lArrFld, -33L);
    }

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f=2.726F;
        double d1=0.66160;
        int i9=-4;
        int i10=-60;
        int i11=206;
        int i12=162;
        int i13=10;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, -11);

        f -= Test0557.instanceCount;
        for (int i8 : iArr2) {
            Test0557.sFld *= (short) 65;
            i8 += i8;
            Test0557.instanceCount >>= -9;
            i8 = 116;
            switch (((i8 >>> 1) % 9) + 37) {
            case 37:
                d1 *= i9;
                for (i10 = 4; i10 > 1; --i10) {
                    try {
                        i8 = (-64708 / i8);
                        i9 = (i11 / i8);
                        i8 = (i10 % -1687835243);
                    } catch (ArithmeticException a_e) {}
                    i9 = i9;
                    iArr2 = iArr2;
                    for (i12 = 1; i12 < 2; i12++) {
                        if (i11 != 0) {
                            vMeth1_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i9 + i10 + i11
                                + i12 + i13 + FuzzerUtils.checkSum(iArr2);
                            return;
                        }
                        i11 = (int)-30010L;
                    }
                }
                break;
            case 38:
                i13 -= (int)f;
                break;
            case 39:
                d1 -= Test0557.instanceCount;
                break;
            case 40:
                i8 >>= i13;
                break;
            case 41:
                i8 <<= i11;
                break;
            case 42:
            case 43:
                Test0557.sArrFld[(i13 >>> 1) % N] += (short) i10;
            case 44:
                f -= -44;
            case 45:
                i9 <<= (int) Test0557.instanceCount;
                break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i7) {

        int i14=244;
        int i15=203;
        int i17=-9;
        int i18=-2;
        int[] iArr3 =new int[N];
        float f1=-115.830F;
        double d2=2.125265;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr3, -4);
        FuzzerUtils.init(lArr, 5L);

        vMeth1();
        i7 <<= i7;
        i7 = i7;
        for (i14 = 1; 154 > i14; i14++) {
            Test0557.sFld += (short) i14;
            if (i14 != 0) {
                vMeth_check_sum += i7 + i14 + i15 + Float.floatToIntBits(f1) + i17 + i18 + Double.doubleToLongBits(d2)
                    + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr);
                return;
            }
            Test0557.instanceCount >>= Test0557.byFld;
        }
        for (int i16 : iArr3) {
            long l=-2687516340L;
            f1 += l;
            for (i17 = 1; 4 > i17; ++i17) {
                int i19=221;
                lArr[i17] -= i16;
                i18 <<= i15;
                i19 += (i17 * i17);
                i7 += i19;
                d2 *= 9;
            }
        }
        vMeth_check_sum += i7 + i14 + i15 + Float.floatToIntBits(f1) + i17 + i18 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr);
    }

    public static boolean bMeth(int i2, int i3, int i4) {

        int i5=-39905;
        int i6=0;
        int i20=16520;
        int i21=-6625;
        int i22=-41107;
        int i23=-43515;
        int[] iArr1 =new int[N];
        int[] iArr4 =new int[N];
        long l1=-1L;
        boolean b1=false;
        double d3=-102.36091;

        FuzzerUtils.init(iArr1, 213);
        FuzzerUtils.init(iArr4, -9949);

        for (i5 = 195; i5 > 8; i5--) {
            i3 += (i5 * i5);
            i3 = (++iArr1[i5 + 1]);
            vMeth(6162);
            iArr1[i5 - 1] += i2;
            switch (((i5 % 1) * 5) + 64) {
            case 69:
                for (i20 = 9; i5 < i20; i20--) {
                    for (l1 = 1; 1 > l1; l1++) {
                        if (b1) continue;
                        Test0557.byFld *= (byte) i5;
                        switch ((int)(((l1 % 7) * 5) + 118)) {
                        case 145:
                            i23 *= (int)d3;
                            iArr1[i20] -= i6;
                            break;
                        case 139:
                            if (i5 != 0) {
                                return ((int)(i2 + i3 + i4 + i5 + i6 + i20 + i21 + l1 + i22 + (b1 ? 1 : 0) + i23 +
                                    Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr1) +
                                    FuzzerUtils.checkSum(iArr4))) % 2 > 0;
                            }
                            Test0557.instanceCount = i3;
                            break;
                        case 133:
                            d3 = -3;
                            break;
                        case 128:
                            try {
                                i4 = (i2 / i2);
                                i2 = (i21 / i5);
                                iArr4[i5] = (i4 / -5700);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 120:
                            i2 >>>= (int) Test0557.instanceCount;
                            break;
                        case 134:
                            Test0557.lArrFld[(int) (l1 - 1)] = i21;
                            break;
                        case 127:
                            Test0557.lArrFld[(int) (l1 - 1)] >>= Test0557.instanceCount;
                        }
                    }
                }
                break;
            default:
                i22 += (i5 * i5);
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + i20 + i21 + l1 + i22 + (b1 ? 1 : 0) + i23 +
            Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr4);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        double d=1.2140;
        int i=25198;
        int i1=3;
        int[] iArr =new int[N];
        byte by=125;
        boolean b=false;

        FuzzerUtils.init(iArr, 23548);

        d = iFld;
        for (i = 10; i < 272; ++i) {
            iFld <<= (++i1);
            iFld <<= ((--iArr[i]) ^ (-iFld));
            Test0557.instanceCount *= (Test0557.instanceCount = (--Test0557.instanceCount));
            by = (byte)iFld;
            b = (((-7766 >= iArr[i + 1]) || (i1 > Test0557.sFld)) ^ bMeth(i, i, i1));
        }
        Test0557.instanceCount = (long) Test0557.fFld;

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("by b iArr = " + by + "," + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0557.instanceCount iFld Test0557.sFld = " + Test0557.instanceCount + "," + iFld + "," +
                Test0557.sFld);
        FuzzerUtils.out.println("Test0557.byFld Test0557.fFld Test0557.sArrFld = " + Test0557.byFld + "," +
                Float.floatToIntBits(Test0557.fFld) + "," + FuzzerUtils.checkSum(Test0557.sArrFld));
        FuzzerUtils.out.println("Test0557.lArrFld = " + FuzzerUtils.checkSum(Test0557.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0557 _instance = new Test0557();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
