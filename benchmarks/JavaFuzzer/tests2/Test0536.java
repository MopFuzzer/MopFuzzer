// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0536 {

    public static final int N = 400;

    public static long instanceCount=-4745050348523059670L;
    public int iFld=154;
    public static volatile long lFld=3521016226L;
    public static int iFld1=-142;
    public volatile double dFld=1.19326;
    public boolean[] bArrFld =new boolean[N];
    public long[] lArrFld =new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        int i4=-189, i5=123, i6=-34591, i7=-58624, i8=8;
        float f1=-64.544F, f2=-2.146F;
        double d1=-36.116024;

        Test0536.iFld1 -= (int) Test0536.instanceCount;
        i4 = 149;
        do {
            for (i5 = 1; 11 > i5; i5++) {
                i6 -= i6;
                f1 += Test0536.instanceCount;
                for (i7 = 1; 2 > i7; i7++) {
                    Test0536.instanceCount /= ((long) (f1) | 1);
                    Test0536.lFld += (((i7 * Test0536.lFld) + Test0536.lFld) - i4);
                    i8 = i3;
                }
                i8 += (-28580 + (i5 * i5));
                Test0536.lFld += (long) d1;
                switch (((i7 >>> 1) % 2) + 4) {
                case 4:
                case 5:
                    i6 = 0;
                    Test0536.instanceCount *= i5;
                    f2 += (0 + (i5 * i5));
                default:
                    d1 = i4;
                }
            }
        } while (--i4 > 0);
        vMeth1_check_sum += i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f2);
    }

    public static void vMeth(int i2) {

        float f=1.943F;
        int i9=-13, i10=-18867;

        f *= (-Math.max((int) (-67.32417 * (i2 - Test0536.lFld)), (int) (Test0536.iFld1 - -2869630316L)));
        vMeth1(Test0536.iFld1);
        for (i9 = 5; i9 < 163; i9++) {
            Test0536.iFld1 <<= i10;
            if (i2 != 0) {
                vMeth_check_sum += i2 + Float.floatToIntBits(f) + i9 + i10;
                return;
            }
            switch ((i9 % 2) + 100) {
            case 100:
                Test0536.lFld = i9;
                break;
            case 101:
                Test0536.iFld1 = Test0536.iFld1;
                break;
            }
            i10 = i10;
            i10 = i10;
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + i9 + i10;
    }

    public static int iMeth(double d) {

        byte by=35;
        int i=247;
        int i1=-67;
        int i11=-6200;
        int i12=11;
        int i13=-54207;
        int i14=-57;
        int i15=220;
        int i16=14;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 88);

        Test0536.iFld1 = (int) (by >>= (byte) ((iArr[(Test0536.iFld1 >>> 1) % N][(Test0536.iFld1 >>> 1) % N] |= Test0536.iFld1) * (d *
            17484L)));
        for (i = 8; 138 > i; i++) {
            vMeth(i);
            Test0536.iFld1 *= (int) 1.42159;
        }
        for (i11 = 7; i11 < 285; i11++) {
            Test0536.iFld1 += (int) (0L + (i11 * i11));
            for (i13 = 1; i13 < 6; i13 += 2) {
                i1 = (int) Test0536.lFld;
                Test0536.instanceCount += Test0536.instanceCount;
                i14 = i1;
            }
            Test0536.iFld1 -= i12;
            Test0536.iFld1 = -7;
        }
        for (i15 = 186; i15 > 5; i15 -= 2) {
            Test0536.iFld1 = i12;
            Test0536.instanceCount = i;
        }
        long meth_res = Double.doubleToLongBits(d) + by + i + i1 + i11 + i12 + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=-2.552F;
        int i17=-4;
        int i18=-103;
        int i19=-12;
        int i20=-1331;
        int i21=-4;
        int i22=1;
        int i23=17787;
        int i24=10;
        int i25=121;
        int i26=176;
        int[] iArr1 =new
                    int[N];
        boolean b=false;
        short s=26538;

        FuzzerUtils.init(iArr1, 72);

        iFld -= (int) ((--iFld) * (--Test0536.lFld));
        iMeth(dFld);
        for (f3 = 1; f3 < 374; f3++) {
            switch ((((Test0536.iFld1 >>> 1) % 3) * 5) + 114) {
            case 128:
                for (i18 = (int)(f3); i18 < 68; ++i18) {
                    iFld = Test0536.iFld1;
                    for (i20 = 1; i20 < 1; ++i20) {
                        i21 += (i20 * i20);
                    }
                    iArr1[(int)(f3)] = i20;
                    for (i22 = 1; i22 < 1; i22++) {
                        byte by1=-42;
                        i19 += (((i22 * i23) + i20) - i19);
                        dFld -= f3;
                        i23 *= -231;
                        switch (((iFld >>> 1) % 2) + 54) {
                        case 54:
                            if (b) continue;
                            i19 *= (int)7L;
                            bArrFld[i22] = b;
                        case 55:
                            Test0536.iFld1 = (int) f3;
                            i24 = i24;
                            i24 -= (int)-3888357815623264793L;
                            break;
                        }
                        iFld = by1;
                    }
                    for (i25 = (int)(f3); i25 < 1; ++i25) {
                        long l=46839L;
                        s %= (short)((long)(f3) | 1);
                        Test0536.lFld += i25;
                        if (b) break;
                        lArrFld[i25 + 1] <<= 85;
                        l -= l;
                        iArr1 = iArr1;
                    }
                }
            case 117:
                i19 = i20;
                i17 += (int) ((long) f3 ^ Test0536.instanceCount);
                break;
            case 120:
                i26 = -65;
            }
        }

        FuzzerUtils.out.println("f3 i17 i18 = " + Float.floatToIntBits(f3) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 b = " + i22 + "," + i23 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("s iArr1 = " + s + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0536.instanceCount iFld Test0536.lFld = " + Test0536.instanceCount + "," + iFld + "," +
                Test0536.lFld);
        FuzzerUtils.out.println("Test0536.iFld1 dFld bArrFld = " + Test0536.iFld1 + "," + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(bArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0536 _instance = new Test0536();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
