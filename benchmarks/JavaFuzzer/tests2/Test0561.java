// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0561 {

    public static final int N = 400;

    public static long instanceCount=-22641L;
    public int iFld=15815;
    public static byte byFld=79;
    public static volatile double dFld=119.46667;
    public static volatile double[] dArrFld =new double[N];
    public static float[] fArrFld =new float[N];
    public volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0561.dArrFld, 0.127891);
        FuzzerUtils.init(Test0561.fArrFld, 42.1016F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=2;
        int i4=167;
        int i5=9586;
        int i6=30;
        int[] iArr1 =new int[N];
        float f=76.301F;
        double d1=0.13983;
        short s2=-9038;
        byte by=84;
        boolean b1=true;

        FuzzerUtils.init(iArr1, -34610);

        for (i3 = 15; i3 < 324; ++i3) {
            i4 += 4666;
            Test0561.instanceCount += (i3 * i3);
            iArr1[i3 + 1] += i3;
            Test0561.dArrFld[i3 - 1] -= -8;
            i4 += (((i3 * i3) + i4) - f);
            i4 += i3;
            i4 += (int) Test0561.instanceCount;
            d1 = -2127871709L;
            i4 += i3;
        }
        for (i5 = 7; i5 < 162; i5++) {
            if (b1) {
                Test0561.instanceCount |= i3;
                s2 = by;
                Test0561.instanceCount = i6;
            }
        }
        vMeth2_check_sum += i3 + i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i5 + i6 + s2 + by + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1() {

        int i2=78;
        int i7=188;
        int i8=12403;
        int i9=-41808;
        int i10=47643;
        int[] iArr2 =new int[N];
        double d=-1.63721;
        short s1=23146;
        byte by1=-92;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr2, 106);
        FuzzerUtils.init(lArr, -5775498311041366736L);

        i2 += (int)(d *= (i2++));
        s1 >>= (short)(i2--);
        vMeth2();
        by1 += (byte)i2;
        for (i7 = 5; i7 < 203; ++i7) {
            iArr2 = FuzzerUtils.int1array(N, (int)-86);
            i8 = i2;
            i8 += (((i7 * Test0561.instanceCount) + Test0561.instanceCount) - i8);
            i2 += (((i7 * i7) + i8) - i2);
            Test0561.fArrFld[i7] *= -27691;
            lArr[i7] = i7;
            for (i9 = 8; i9 > 1; i9 -= 2) {
                lArr[i7 - 1] = i8;
                try {
                    iArr2[i9] = (-207 % i8);
                    i2 = (i10 % 6667);
                    i2 = (i8 / 10031);
                } catch (ArithmeticException a_e) {}
                iArr2[i9] <<= i2;
            }
        }
        vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + s1 + by1 + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth() {

        int i=-45380;
        int i1=-4;
        int i11=12;
        int i12=9;
        int i13=-10;
        int i14=-5;
        int i15=14;
        int[] iArr =new int[N];
        long l=-170L;
        boolean b=true;
        short s=-7529;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr, 178);
        FuzzerUtils.init(fArr, 47.273F);

        Test0561.instanceCount += (long) (iArr[(i >>> 1) % N] = (int) Test0561.dArrFld[(-7710 >>> 1) % N]);
        for (l = 387; 8 < l; --l) {
            if ((b = (i1 > Short.reverseBytes(s))) != b) break;
            Test0561.instanceCount = (long) (-((Test0561.instanceCount + Test0561.instanceCount) % (((long) (fArr[(int) (l +
                1)][(int)(l - 1)]++)) | 1)));
            vMeth1();
            if (true) continue;
            Test0561.instanceCount += l;
            Test0561.instanceCount -= i11;
            i = -7;
        }
        for (i12 = 6; i12 < 137; i12++) {
            for (i14 = 1; 12 > i14; ++i14) {
                byte by2=-63;
                fArr[i14][i12] = -161;
                i = by2;
                i -= (int)-4392147570485154347L;
                lArrFld[i12 - 1] = i14;
            }
        }
        vMeth_check_sum += i + l + i1 + (b ? 1 : 0) + s + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i16=203;
        int i17=6342;
        int i18=2178;
        int i19=107;
        int i20=-79;
        int i21=-251;
        int i22=-8;
        int[] iArr3 =new int[N];
        boolean b2=false;
        float f1=31.727F;
        short s3=-25190;

        FuzzerUtils.init(iArr3, 95);

        vMeth();
        iArr3[(iFld >>> 1) % N] += iFld;
        for (i16 = 20; i16 < 333; i16++) {
            i17 = (int) Test0561.instanceCount;
            iFld += i16;
            if (b2) break;
            i17 = iFld;
        }
        i17 >>= iFld;
        iArr3[(-161 >>> 1) % N] *= i17;
        for (i18 = 6; 210 > i18; i18 += 2) {
            i20 = 1;
            do {
                f1 = f1;
                Test0561.instanceCount += s3;
                Test0561.instanceCount += Test0561.instanceCount;
                i19 += (((i20 * Test0561.byFld) + i19) - f1);
                for (i21 = 1; i21 < 1; i21++) {
                    switch ((i20 % 10) + 100) {
                    case 100:
                        switch ((i18 % 2) + 100) {
                        case 100:
                            Test0561.dFld *= 1657L;
                            Test0561.fArrFld[i20] -= i22;
                            break;
                        case 101:
                            iFld += (i21 ^ i17);
                            break;
                        default:
                            i17 += (int) Test0561.dFld;
                            Test0561.byFld = (byte) iFld;
                        }
                        if (false) break;
                        break;
                    case 101:
                        iFld += (int) Test0561.instanceCount;
                        Test0561.fArrFld = Test0561.fArrFld;
                        i19 = i21;
                        break;
                    case 102:
                        try {
                            iFld = (i18 % iArr3[i20]);
                            iFld = (i20 / i18);
                            iArr3[i21] = (i20 / i22);
                        } catch (ArithmeticException a_e) {}
                        i22 -= (int)f1;
                        break;
                    case 103:
                        i22 += 43810;
                        break;
                    case 104:
                        iArr3[i18] += i16;
                        break;
                    case 105:
                        i19 += i16;
                        break;
                    case 106:
                        f1 *= Test0561.byFld;
                    case 107:
                        i22 += (int) Test0561.instanceCount;
                        break;
                    case 108:
                        iFld = (int) Test0561.instanceCount;
                        break;
                    case 109:
                        iFld >>>= (int)-14L;
                        break;
                    }
                }
            } while (++i20 < 246);
        }

        FuzzerUtils.out.println("i16 i17 b2 = " + i16 + "," + i17 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("f1 s3 i21 = " + Float.floatToIntBits(f1) + "," + s3 + "," + i21);
        FuzzerUtils.out.println("i22 iArr3 = " + i22 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0561.instanceCount iFld Test0561.byFld = " + Test0561.instanceCount + "," + iFld + "," +
                Test0561.byFld);
        FuzzerUtils.out.println("Test0561.dFld Test0561.dArrFld Test0561.fArrFld = " + Double.doubleToLongBits(Test0561.dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0561.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0561.fArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0561 _instance = new Test0561();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
