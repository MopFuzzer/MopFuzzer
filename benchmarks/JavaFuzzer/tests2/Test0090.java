// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:16 2023
public class Test0090 {

    public static final int N = 400;

    public static long instanceCount=102L;
    public int iFld=-160;
    public int iFld1=52465;
    public static float fFld=-4.179F;
    public static volatile double dFld=0.129579;
    public static int[] iArrFld =new int[N];
    public static int[][] iArrFld1 =new int[N][N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0090.iArrFld, -127);
        FuzzerUtils.init(Test0090.iArrFld1, -11039);
        FuzzerUtils.init(Test0090.fArrFld, 0.391F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        double d1=2.19227;
        int i6=-5, i7=-9, i8=-114;
        float f2=0.965F;
        boolean b1=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)18465);

        Test0090.fFld = (float) 116.106298;
        d1 -= Test0090.instanceCount;
        for (i6 = 16; i6 < 257; i6++) {
            Test0090.fFld -= Test0090.fFld;
            sArr = sArr;
            if (b1) {
                if (i7 != 0) {
                }
                i7 = i6;
            } else if (b1) {
                i7 += (int)4127752793L;
                i7 += i6;
                for (f2 = 1; f2 < 7; f2++) {
                    Test0090.iArrFld[(int) (f2 - 1)] *= (int) Test0090.instanceCount;
                    i8 += (int) (((f2 * i8) + Test0090.instanceCount) - i6);
                }
                i7 -= (int)1.19453;
            } else {
                Test0090.iArrFld1 = Test0090.iArrFld1;
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i6 + i7 + Float.floatToIntBits(f2) + i8 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d, int i5) {

        int i9=253, i10=2, i11=-16, i12=-13, i13=-58409;
        double d2=0.125359;
        boolean b2=false;

        Test0090.instanceCount = (long) ((Test0090.iArrFld[(i5 >>> 1) % N] - iMeth()) + d);
        for (i9 = 6; i9 < 150; ++i9) {
            Test0090.instanceCount = i9;
            for (i11 = 1; i11 < 11; i11++) {
                i13 = 1;
                do {
                    Test0090.iArrFld[i13] >>>= i12;
                    i12 = i10;
                    i12 += i13;
                    Test0090.instanceCount = i10;
                    i10 <<= -34519;
                    Test0090.iArrFld1[i11 - 1][i13 + 1] = i11;
                    i10 >>>= (int) Test0090.instanceCount;
                    if (b2) {
                        d2 -= i13;
                        i5 *= -51686;
                        vMeth1_check_sum += Double.doubleToLongBits(d) + i5 + i9 + i10 + i11 + i12 + i13 +
                            Double.doubleToLongBits(d2) + (b2 ? 1 : 0);
                        return;
                    } else {
                        i10 = (int)11L;
                    }
                } while (++i13 < 2);
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i5 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d2)
            + (b2 ? 1 : 0);
    }

    public void vMeth(boolean b, float f1) {

        short s=2694, s1=3429;
        int i14=-191;
        int i15=18;
        int[] iArr =new int[N];
        float f3=0.325F;
        float[] fArr =new float[N];
        long l=-182L;

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(fArr, 2.225F);

        iArr[(iFld >>> 1) % N] += (int) Math.abs(Test0090.instanceCount + (iFld += s));
        s = (short)Math.abs(iFld);
        iFld1 *= (int) (++Test0090.instanceCount);
        vMeth1(Test0090.dFld, 13);
        for (i14 = 368; i14 > 8; i14--) {
            f3 = 1;
            do {
                Test0090.iArrFld1[i14 + 1][i14 + 1] = i15;
                iFld += (int) Test0090.instanceCount;
                l = 1;
                do {
                    iFld1 += (int)(l * l);
                    iFld = (int)72.625F;
                    s1 -= s1;
                    iArr[i14] = (int)f3;
                    Test0090.instanceCount >>= iFld;
                } while (++l < 1);
                fArr[(int)(f3 + 1)] += -647314461L;
            } while (++f3 < 5);
        }
        vMeth_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f1) + s + i14 + i15 + Float.floatToIntBits(f3) + l + s1 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=31806, i1=4928, i2=36445, i3=116, i4=-32310, i16=-39450, i17=63912, i18=-21, i19=-225, i20=40031,
            i21=13502;
        float f=-1.123F;
        boolean b3=false;
        short s2=-7097;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -6L);

        i += (int)(++f);
        for (i1 = 11; 214 > i1; i1 += 3) {
            for (i3 = 15; i3 < 374; ++i3) {
                byte by=93;
                by += (byte)(((i3 * i) + i2) - f);
                vMeth(b3, 0.919F);
            }
            s2 = (short)i2;
            iFld1 -= iFld;
            Test0090.instanceCount = i2;
            for (i16 = 22; 374 > i16; ++i16) {
                for (i18 = 2; i18 > 1; i18--) {
                    i17 += i18;
                }
                i2 += (int)-8L;
                for (i20 = i16; i20 < 2; ++i20) {
                    iFld1 += (i20 + Test0090.instanceCount);
                    i21 <<= (int) Test0090.instanceCount;
                    i = i19;
                    if (b3) {
                        Test0090.dFld += i19;
                        Test0090.iArrFld[i20 + 1] = iFld;
                        i19 ^= (int) Test0090.instanceCount;
                        iFld1 |= i17;
                    } else if (true) {
                        Test0090.instanceCount = Test0090.instanceCount;
                        Test0090.iArrFld1[i16 + 1][i16] = (int) 1.37279;
                    }
                    if (b3) {
                        Test0090.fArrFld[i20 + 1] += Test0090.fFld;
                    } else if (true) {
                        i += (((i20 * i16) + iFld1) - i19);
                        i17 = i4;
                    } else if (b3) {
                        Test0090.instanceCount += (i20 * i20);
                    } else {
                        iFld1 = i1;
                        Test0090.fFld += (((i20 * Test0090.instanceCount) + i2) - Test0090.instanceCount);
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("b3 s2 i16 = " + (b3 ? 1 : 0) + "," + s2 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 lArr = " + i20 + "," + i21 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0090.instanceCount iFld iFld1 = " + Test0090.instanceCount + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("Test0090.fFld Test0090.dFld Test0090.iArrFld = " + Float.floatToIntBits(Test0090.fFld) + "," +
                Double.doubleToLongBits(Test0090.dFld) + "," + FuzzerUtils.checkSum(Test0090.iArrFld));
        FuzzerUtils.out.println("Test0090.iArrFld1 Test0090.fArrFld = " + FuzzerUtils.checkSum(Test0090.iArrFld1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0090.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0090 _instance = new Test0090();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
