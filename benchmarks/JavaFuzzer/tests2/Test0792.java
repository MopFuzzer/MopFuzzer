// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0792 {

    public static final int N = 400;

    public static long instanceCount=1342047281L;
    public float fFld=-20.849F;
    public static float fFld1=85.643F;
    public static int iFld=0;
    public boolean bFld=false;
    public static float[] fArrFld =new float[N];
    public static volatile int[] iArrFld =new int[N];
    public static volatile long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0792.fArrFld, 91.928F);
        FuzzerUtils.init(Test0792.iArrFld, 16162);
        FuzzerUtils.init(Test0792.lArrFld, 9L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i14) {

        int i15=-88, i16=8860, i17=14, i18=-31516, i19=-8;
        float f=14.670F;

        for (i15 = 5; 151 > i15; i15++) {
            Test0792.instanceCount &= i15;
        }
        Test0792.fArrFld[(i15 >>> 1) % N] -= Test0792.instanceCount;
        for (f = 378; f > 16; f--) {
            i16 >>= (int) Test0792.instanceCount;
            i14 += (int) ((long) f ^ Test0792.iFld);
            i16 >>= (int) Test0792.instanceCount;
            Test0792.iArrFld = FuzzerUtils.int1array(N, (int) -36630);
            Test0792.fFld1 = -17;
            for (i18 = 1; i18 < 5; i18++) {
                i19 ^= i15;
                Test0792.iFld += (int) Test0792.fFld1;
                Test0792.lArrFld[i18][i18] *= Test0792.iFld;
                Test0792.instanceCount += i18;
                Test0792.iArrFld = Test0792.iArrFld;
            }
        }
        long meth_res = i14 + i15 + i16 + Float.floatToIntBits(f) + i17 + i18 + i19;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(long l, int i8) {

        int i10=-8079, i11=6, i12=28599, i13=-53155;
        double d1=0.2309;

        for (int i9 : Test0792.iArrFld) {
            for (i10 = 1; 4 > i10; ++i10) {
                switch ((((((int)(d1 + i11)) >>> 1) % 3) * 5) + 122) {
                case 134:
                    for (i12 = 1; i12 < 2; i12 += 3) {
                        i9 = sMeth(-14);
                        if (i8 != 0) {
                            vMeth1_check_sum += l + i8 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13;
                            return;
                        }
                        l += (i12 * i12);
                        i9 += (((i12 * i13) + l) - Test0792.instanceCount);
                        d1 -= i9;
                        i11 = 15094;
                        i13 >>>= i10;
                        l >>= i11;
                        Test0792.iArrFld[i12] = 8376;
                    }
                    Test0792.fFld1 = Test0792.iFld;
                    Test0792.iFld >>= i12;
                    break;
                case 127:
                    l = i13;
                    break;
                case 126:
                    Test0792.fFld1 -= i8;
                    break;
                default:
                    Test0792.instanceCount -= (long) Test0792.fFld1;
                }
            }
        }
        vMeth1_check_sum += l + i8 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13;
    }

    public static void vMeth(short s) {

        int i7=45;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -14);

        Test0792.fFld1 = (iArr1[(Test0792.iFld >>> 1) % N] + (Test0792.fArrFld[(i7 >>> 1) % N] % ((112115540233131429L -
                (-Test0792.iFld)) | 1)));
        vMeth1(-97L, Test0792.iFld);
        Test0792.fFld1 /= 2;
        iArr1[(i7 >>> 1) % N] -= i7;
        vMeth_check_sum += s + i7 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-4;
        int i1=0;
        int i2=-1642;
        int i3=9;
        int i4=236;
        int i5=15;
        int i6=-12;
        int[] iArr =new int[N];
        double d=0.43636;
        short s1=-9226;
        byte by=-79;
        boolean b=false;

        FuzzerUtils.init(iArr, 33641);

        i >>= 4;
        fFld = 1.335F;
        i = (int) (Math.max(Test0792.instanceCount, (long) (fFld + fFld)) + (i += -46221));
        i *= (int)(++fFld);
        for (i1 = 10; 333 > i1; ++i1) {
            i2 /= (int) (((long) (-((d + d) + Test0792.instanceCount))) | 1);
            for (i3 = 78; i3 > 1; --i3) {
                Test0792.instanceCount -= (iArr[i1 - 1] | Integer.reverseBytes((int) (i3 - Test0792.instanceCount)));
                for (i5 = 1; i5 < 2; ++i5) {
                    if (b) {
                        vMeth(s1);
                        i6 += i5;
                        iArr[i3] <<= by;
                    } else {
                        iArr = iArr;
                        i6 += i3;
                        Test0792.fFld1 = Test0792.instanceCount;
                        Test0792.instanceCount += (((i5 * Test0792.instanceCount) + i3) - i4);
                    }
                    by += (byte)(((i5 * i5) + i2) - i1);
                    switch (((i5 % 5) * 5) + 76) {
                    case 92:
                        i2 -= Test0792.iFld;
                        break;
                    case 90:
                        i6 -= i1;
                        if (b) {
                            i6 = (int)-7176824038332890338L;
                            i4 += 137;
                        }
                        iArr[(i5 >>> 1) % N] *= (int) Test0792.fFld1;
                        Test0792.iArrFld[i5 - 1] = i;
                        break;
                    case 86:
                        Test0792.fFld1 -= Test0792.iFld;
                        Test0792.instanceCount &= Test0792.instanceCount;
                        bFld = b;
                        Test0792.instanceCount += i3;
                        break;
                    case 85:
                        Test0792.lArrFld[i1 - 1][i3 - 1] <<= Test0792.iFld;
                        break;
                    case 94:
                        i2 += (i5 * i5);
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("d i3 i4 = " + Double.doubleToLongBits(d) + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 i6 s1 = " + i5 + "," + i6 + "," + s1);
        FuzzerUtils.out.println("by b iArr = " + by + "," + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0792.instanceCount fFld Test0792.fFld1 = " + Test0792.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Float.floatToIntBits(Test0792.fFld1));
        FuzzerUtils.out.println("Test0792.iFld bFld Test0792.fArrFld = " + Test0792.iFld + "," + (bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0792.fArrFld)));
        FuzzerUtils.out.println("Test0792.iArrFld Test0792.lArrFld = " + FuzzerUtils.checkSum(Test0792.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0792.lArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0792 _instance = new Test0792();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
