// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0814 {

    public static final int N = 400;

    public static long instanceCount=2559384677320704552L;
    public short sFld=-4019;
    public static byte byFld=-96;
    public static int iFld=78;
    public static double dFld=87.41414;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0814.iArrFld, -186);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i7) {

        byte by=-83;

        by = (byte)i7;
        long meth_res = i7 + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(long l, int i1, int i2) {

        int i3=11;
        int i4=8;
        int i5=-379;
        int i6=-244;
        int[] iArr =new int[N];
        double d=-22.107070;
        float f=115.705F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)51);
        FuzzerUtils.init(iArr, -49431);

        i3 = 1;
        while (++i3 < 137) {
            i4 = 11;
            while (--i4 > 0) {
                switch ((i3 % 6) + 33) {
                case 33:
                    Test0814.instanceCount += (((i4 * i3) + i2) - i1);
                case 34:
                    for (i5 = 1; i5 > 1; --i5) {
                        i1 += (++i2);
                        i2 = (++byArr[i5]);
                        i6 += (((i1 - i5) - (-(--i6))) - i6);
                        Test0814.instanceCount = (((1L + l) % ((l - i4) | 1)) - i2);
                        iArr[i5 - 1] = (int)Math.abs(--d);
                        f -= lMeth(i5);
                    }
                    if (i4 != 0) {
                        vMeth_check_sum += l + i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) +
                            Float.floatToIntBits(f) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    l += (i4 ^ i6);
                case 35:
                    l = i3;
                    iArr[i4] %= (int) (Test0814.instanceCount | 1);
                    break;
                case 36:
                    i1 = i2;
                    break;
                case 37:
                    i2 = i3;
                case 38:
                    d = i2;
                    break;
                }
            }
        }
        vMeth_check_sum += l + i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i) {

        int i8=-14;
        int i9=-182;
        int i10=1;
        int i11=12;
        int i12=-21209;
        int i13=8;
        int[] iArr1 =new int[N];
        boolean b=false;
        long l1=-158L;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, -8);
        FuzzerUtils.init(fArr, -36.306F);

        vMeth(Test0814.instanceCount, 253, i);
        for (i8 = 23; i8 < 391; i8++) {
            i9 += Test0814.byFld;
            switch (((i >>> 1) % 7) + 84) {
            case 84:
                if (b) break;
                iArr1[i8] %= (int)-47.1F;
                i9 += (i8 | Test0814.instanceCount);
                break;
            case 85:
                for (i10 = 5; 1 < i10; --i10) {
                    i9 = i11;
                    l1 -= 134;
                    i9 >>>= i11;
                    for (i12 = 1; i12 < 2; ++i12) {
                        i >>= i13;
                        if (i != 0) {
                        }
                        iArr1[i12] = i12;
                    }
                }
                break;
            case 86:
                i9 -= -4;
                break;
            case 87:
                i = 12;
            case 88:
                Test0814.byFld = (byte) 2;
                break;
            case 89:
                fArr[i8 + 1] -= l1;
                break;
            case 90:
                if (i != 0) {
                }
                break;
            }
        }
        long meth_res = i + i8 + i9 + (b ? 1 : 0) + i10 + i11 + l1 + i12 + i13 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=61610, i15=6, i16=-14, i17=-69, i18=8, i19=49582;
        boolean b1=true;
        float f1=0.120F;
        byte[][] byArr1 =new byte[N][N];
        long[] lArr =new long[N];

        FuzzerUtils.init(byArr1, (byte)112);
        FuzzerUtils.init(lArr, 1139271832365715156L);

        sFld &= (short) (iMeth(Test0814.iFld) - sFld);
        for (i14 = 7; i14 < 153; i14 += 3) {
            Test0814.iFld = Test0814.iFld;
            byArr1[i14] = byArr1[i14];
            if (b1) break;
            switch (((i14 % 4) * 5) + 114) {
            case 125:
                i15 -= (int) Test0814.instanceCount;
                Test0814.instanceCount += (long) Test0814.dFld;
                Test0814.byFld = (byte) Test0814.iFld;
                Test0814.dFld = f1;
            case 130:
                f1 += i14;
                Test0814.iFld *= (int) Test0814.instanceCount;
                break;
            case 116:
                Test0814.iFld = i14;
                Test0814.instanceCount = i15;
                Test0814.iFld -= i15;
                for (i16 = 4; i16 < 277; ++i16) {
                    for (i18 = 1; i18 < 2; i18++) {
                        if (b1) {
                            i17 -= 185;
                            i17 += (((i18 * i19) + Test0814.instanceCount) - Test0814.instanceCount);
                        } else {
                            Test0814.iFld = 67;
                            Test0814.iArrFld[i14] *= (int) 1.76180;
                            Test0814.instanceCount -= i19;
                            i19 = i17;
                        }
                        Test0814.iFld <<= i18;
                        i17 -= Test0814.iFld;
                    }
                    Test0814.iFld *= (int) Test0814.instanceCount;
                    lArr[i14] = i17;
                }
                break;
            case 131:
                Test0814.instanceCount += (i14 * i14);
                i19 = Test0814.iFld;
                break;
            }
        }

        FuzzerUtils.out.println("i14 i15 b1 = " + i14 + "," + i15 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("f1 i16 i17 = " + Float.floatToIntBits(f1) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 byArr1 = " + i18 + "," + i19 + "," + FuzzerUtils.checkSum(byArr1));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0814.instanceCount sFld Test0814.byFld = " + Test0814.instanceCount + "," + sFld + "," +
                Test0814.byFld);
        FuzzerUtils.out.println("Test0814.iFld Test0814.dFld Test0814.iArrFld = " + Test0814.iFld + "," +
                Double.doubleToLongBits(Test0814.dFld) + "," + FuzzerUtils.checkSum(Test0814.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0814 _instance = new Test0814();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
