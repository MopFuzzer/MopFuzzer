// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:39 2023
public class Test0578 {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static float fFld=-10.979F;
    public static boolean bFld=false;
    public double dFld=81.112101;
    public static byte byFld=82;
    public static int[][] iArrFld =new int[N][N];
    public static float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0578.iArrFld, 10);
        FuzzerUtils.init(Test0578.fArrFld, -35.51F);
        FuzzerUtils.init(Test0578.lArrFld, -952651547324042943L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, short s) {

        int i5=-22709, i6=7, i7=63171;
        byte by1=-73;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 1220007346806492309L);

        for (i5 = 2; i5 < 219; i5++) {
            i4 = (int) Test0578.fFld;
            i7 = 1;
            do {
                Test0578.instanceCount >>= i5;
                i6 = i6;
                i4 -= by1;
                i4 ^= i5;
            } while (++i7 < 7);
            Test0578.iArrFld[i5 + 1][i5 - 1] = i7;
            Test0578.fFld *= i7;
            Test0578.instanceCount ^= i5;
            i6 = (int)-1896991812L;
            Test0578.iArrFld[i5 + 1] = FuzzerUtils.int1array(N, (int) 9);
            i6 = (int) Test0578.instanceCount;
            lArr[i5 + 1] = i7;
        }
        Test0578.fFld -= s;
        vMeth1_check_sum += i4 + s + i5 + i6 + i7 + by1 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l) {

        int i=28, i1=233, i2=56321, i3=5;

        for (i = 4; i < 225; i++) {
            if (i != 0) {
                vMeth_check_sum += l + i + i1 + i2 + i3;
                return;
            }
            switch ((i % 7) + 74) {
            case 74:
                Test0578.bFld = Test0578.bFld;
                break;
            case 75:
                Test0578.iArrFld[i + 1][i + 1] = (--i1);
                break;
            case 76:
                for (i2 = 7; 1 < i2; i2--) {
                    vMeth1(i2, (short)(8319));
                    Test0578.iArrFld[i - 1][i + 1] += (int) Test0578.instanceCount;
                    i3 += i2;
                    i3 += i3;
                    i1 += (((i2 * Test0578.instanceCount) + Test0578.instanceCount) - i1);
                }
                break;
            case 77:
                Test0578.iArrFld[i - 1][i] = i;
                Test0578.iArrFld[i - 1][i] = i1;
                i3 += (int)2856735611L;
                Test0578.fArrFld = Test0578.fArrFld;
                break;
            case 78:
                i1 = i3;
            case 79:
                Test0578.fFld += i1;
            case 80:
                i3 += (i + i2);
                break;
            default:
                if (false) continue;
            }
        }
        vMeth_check_sum += l + i + i1 + i2 + i3;
    }

    public static int iMeth() {

        int i8=-64669, i9=-176, i10=1, i11=-21973, i12=11078, i13=-9;
        double d=64.11966;
        short s1=29358;

        vMeth(1496346917L);
        Test0578.fArrFld[(i8 >>> 1) % N] -= Test0578.fFld;
        i9 = 1;
        do {
            for (i10 = 1; 5 > i10; ++i10) {
                Test0578.lArrFld[i10 - 1] += i10;
                i11 <<= i11;
                Test0578.fFld *= i8;
                i11 &= i8;
                for (i12 = 2; i12 > i10; i12 -= 3) {
                    i11 = i10;
                    i13 <<= (int) Test0578.instanceCount;
                    d = -44620;
                    Test0578.instanceCount += (12 + (i12 * i12));
                    Test0578.iArrFld[i12 + 1][i12 + 1] = s1;
                    Test0578.fFld = -18025;
                }
            }
        } while (++i9 < 340);
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) + s1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=7;
        int i14=10974;
        int i15=-7;
        int i16=-15;
        int i17=52;
        int i18=8;
        int i19=-38356;
        int i20=1;
        int i21=30;
        int i22=-4;
        int[] iArr =new int[N];
        short s2=-5825;

        FuzzerUtils.init(iArr, 1);

        Test0578.fFld -= 248;
        by = (byte)(iMeth() * i14);
        Test0578.iArrFld[(i14 >>> 1) % N][(i14 >>> 1) % N] *= (int) dFld;
        for (i15 = 20; i15 < 320; i15++) {
            i16 += (i15 | i15);
            i16 *= (int) Test0578.fFld;
            Test0578.instanceCount >>= i15;
            i16 <<= i14;
        }
        for (i17 = 7; i17 < 367; ++i17) {
            s2 >>= (short)i15;
            if (Test0578.bFld) break;
            i18 += (((i17 * Test0578.fFld) + Test0578.instanceCount) - i15);
            for (i19 = 4; i19 < 70; ++i19) {
                by += (byte)(-25101 + (i19 * i19));
                i14 = (int)-33568L;
                switch ((((i16 >>> 1) % 1) * 5) + 2) {
                case 6:
                    for (i21 = 2; 1 < i21; --i21) {
                        switch ((((i17 >>> 1) % 6) * 5) + 93) {
                        case 103:
                            iArr[(140 >>> 1) % N] = i21;
                            i20 = i19;
                            break;
                        case 110:
                            switch ((i19 % 6) + 91) {
                            case 91:
                                i18 += (i21 | Test0578.instanceCount);
                                break;
                            case 92:
                            case 93:
                                i20 += (i21 - i17);
                                break;
                            case 94:
                                i20 = (int)-49354L;
                                iArr[i21 + 1] *= i19;
                                Test0578.lArrFld[i21] += -52770;
                                break;
                            case 95:
                                i14 = (int) Test0578.fFld;
                                i14 *= (int) Test0578.instanceCount;
                                break;
                            case 96:
                                s2 += (short)i14;
                                Test0578.instanceCount = -1;
                                break;
                            default:
                                s2 += (short) (((i21 * Test0578.instanceCount) + i20) - i22);
                            }
                            break;
                        case 105:
                            Test0578.instanceCount += i21;
                            break;
                        case 100:
                            Test0578.byFld <<= by;
                            break;
                        case 101:
                            Test0578.instanceCount += 29434;
                            break;
                        case 121:
                            Test0578.instanceCount += (((i21 * i15) + i21) - i22);
                            break;
                        default:
                            Test0578.instanceCount -= 7L;
                        }
                    }
                    break;
                default:
                    i18 = -56;
                }
            }
        }

        FuzzerUtils.out.println("by i14 i15 = " + by + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("s2 i19 i20 = " + s2 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 iArr = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0578.instanceCount Test0578.fFld Test0578.bFld = " + Test0578.instanceCount + "," +
                Float.floatToIntBits(Test0578.fFld) + "," + (Test0578.bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld Test0578.byFld Test0578.iArrFld = " + Double.doubleToLongBits(dFld) + "," + Test0578.byFld +
                "," + FuzzerUtils.checkSum(Test0578.iArrFld));
        FuzzerUtils.out.println("Test0578.fArrFld Test0578.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0578.fArrFld)) + "," + FuzzerUtils.checkSum(Test0578.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0578 _instance = new Test0578();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
