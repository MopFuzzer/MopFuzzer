// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0716 {

    public static final int N = 400;

    public static volatile long instanceCount=-4414207482598691594L;
    public static int iFld=-9;
    public static float fFld=-2.962F;
    public static boolean bFld=true;
    public static short sFld=-8944;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l4, double d1, int i1) {


        i1 %= (int)(0 | 1);
        Test0716.fFld *= 46053;
        Test0716.instanceCount ^= i1;
        i1 = 54175;
        long meth_res = l4 + Double.doubleToLongBits(d1) + i1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l1, long l2) {

        float f=117.527F;
        double d=108.85840;
        long l3=9763519L;
        byte by=79;
        int i2=114;
        int i3=-56684;
        int i4=-27;
        int i5=31367;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 7);

        Test0716.iFld += Math.max(Test0716.iFld--, (Test0716.iFld - Test0716.iFld) - Test0716.iFld);
        f *= (float)d;
        iArr[(Test0716.iFld >>> 1) % N] -= (int) (Integer.reverseBytes((int) (Test0716.iFld * l1)) - f);
        Test0716.iFld = (int) (((Test0716.iFld + Test0716.iFld) - (l3 += by)) - (iArr[(Test0716.iFld >>> 1) % N] = (Test0716.iFld -
                Test0716.iFld)));
        Test0716.iFld += Test0716.iFld;
        Test0716.instanceCount *= (++Test0716.iFld);
        f *= ((f--) * (iMeth(l3, d, Test0716.iFld) - Test0716.iFld));
        for (i2 = 149; i2 > 2; i2--) {
            iArr[i2] /= (int)(i3 | 1);
            for (i4 = 11; i4 > i2; i4 -= 3) {
                i3 = i3;
                i3 -= (int)f;
                l3 = i5;
                Test0716.fFld += (i4 + i4);
                if (Test0716.bFld) continue;
            }
        }
        vMeth1_check_sum += l1 + l2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + l3 + by + i2 + i3 + i4 +
            i5 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i, long l) {

        long l5=0L;
        int i7=-188;
        int i8=-57177;
        int[] iArr1 =new int[N];
        double d2=-112.5492;

        FuzzerUtils.init(iArr1, 9521);

        i -= (int) (--Test0716.instanceCount);
        vMeth1(l5, -3L);
        Test0716.fFld = Test0716.instanceCount;
        Test0716.iFld >>= Test0716.iFld;
        i &= (int)l5;
        for (int i6 : iArr1) {
            Test0716.iFld -= (int) l5;
            for (i7 = 1; i7 < 4; i7++) {
                switch (((98 >>> 1) % 4) + 71) {
                case 71:
                    d2 = 1;
                    do {
                        Test0716.fFld += (float) ((long) d2 ^ (long) i);
                        Test0716.iFld -= (int) Test0716.fFld;
                        Test0716.instanceCount -= i6;
                        Test0716.iFld = -19408;
                        Test0716.iFld -= i7;
                    } while (++d2 < 2);
                    break;
                case 72:
                    Test0716.fFld = 2.304F;
                    break;
                case 73:
                case 74:
                    Test0716.instanceCount >>= i6;
                }
            }
        }
        vMeth_check_sum += i + l + l5 + i7 + i8 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i9=-13, i10=11, i11=-49645, i12=-53056, i13=173, i14=222, i15=-134, i16=11, i17=-150;
        long l6=365025927L;
        byte by1=56;
        short[][] sArr =new short[N][N];
        double[] dArr =new double[N];

        FuzzerUtils.init(sArr, (short)29228);
        FuzzerUtils.init(dArr, 38.67584);

        vMeth(Test0716.iFld, Test0716.instanceCount);
        i9 = 1;
        while (++i9 < 194) {
            for (i10 = 5; 129 > i10; i10++) {
                Test0716.iFld = (int) Test0716.instanceCount;
                sArr[i9][i10 - 1] = (short)i10;
                i11 += (-47281 + (i10 * i10));
                i11 -= i11;
                for (i12 = 1; i12 < 2; i12++) {
                    Test0716.instanceCount -= Test0716.instanceCount;
                }
                Test0716.instanceCount += (((i10 * i10) + i13) - Test0716.fFld);
            }
        }
        iArrFld[(i14 >>> 1) % N] = i12;
        Test0716.iFld *= Test0716.iFld;
        for (double d3 : dArr) {
            i14 >>>= -10864;
        }
        i14 = i12;
        sArr[(i9 >>> 1) % N][(Test0716.iFld >>> 1) % N] >>= Test0716.sFld;
        i14 |= i9;
        for (i15 = 7; 398 > i15; i15++) {
            Test0716.instanceCount += i16;
            for (l6 = 3; l6 < 64; l6++) {
                i17 += (int) (((l6 * Test0716.iFld) + by1) - i9);
                iArrFld[(int)(l6)] = i11;
                i13 -= i11;
                i11 += (int)l6;
                i17 = 206;
                Test0716.bFld = false;
                Test0716.instanceCount += (((l6 * l6) + i13) - i15);
            }
            i13 += i15;
            i11 = -67;
        }
        i14 = (int) Test0716.fFld;

        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 l6 = " + i15 + "," + i16 + "," + l6);
        FuzzerUtils.out.println("i17 by1 sArr = " + i17 + "," + by1 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0716.instanceCount Test0716.iFld Test0716.fFld = " + Test0716.instanceCount + "," + Test0716.iFld +
                "," + Float.floatToIntBits(Test0716.fFld));
        FuzzerUtils.out.println("Test0716.bFld Test0716.sFld iArrFld = " + (Test0716.bFld ? 1 : 0) + "," + Test0716.sFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0716 _instance = new Test0716();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
