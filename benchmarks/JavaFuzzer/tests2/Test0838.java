// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:51 2023
public class Test0838 {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public static float fFld=68.639F;
    public static boolean bFld=true;
    public static byte byFld=15;
    public static short sFld=-7549;

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5) {


        i5 = (int) Test0838.fFld;
        vMeth_check_sum += i5;
    }

    public static double dMeth(int i3, int i4) {

        long l=6694692263344506787L;
        int i6=10;
        int i8=-13;
        int i9=249;
        int i10=-11;
        int[] iArr1 =new int[N];
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr1, 6);
        FuzzerUtils.init(iArr2, 58157);

        vMeth(i3);
        i3 = i4;
        Test0838.instanceCount = i3;
        for (l = 6; l < 310; ++l) {
            i3 -= 11606;
            i4 = i3;
        }
        Test0838.instanceCount *= l;
        for (int i7 : iArr1) {
            i8 = 4;
            do {
                iArr1[i8 - 1] <<= (int)-3L;
                iArr2[i8 - 1] -= 10;
                for (i9 = 1; i9 < 2; ++i9) {
                    i6 += i9;
                    if (Test0838.bFld) break;
                    Test0838.instanceCount += (i9 + Test0838.fFld);
                }
            } while ((i8 -= 2) > 0);
        }
        long meth_res = i3 + i4 + l + i6 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public int iMeth(int i1, int i2) {


        Test0838.instanceCount -= (long) dMeth(219, i2);
        i1 -= -12;
        long meth_res = i1 + i2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-364;
        int i11=-7;
        int i12=-8;
        int i13=64771;
        int i14=-37525;
        int i15=-8;
        int i16=57;
        int i17=-52813;
        int i18=14;
        int i19=64;
        int[] iArr =new
                    int[N];
        long[][] lArr =new long[N][N];
        float[] fArr =new float[N];
        double[][] dArr =new double[N][N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, 40408);
        FuzzerUtils.init(lArr, 245L);
        FuzzerUtils.init(fArr, -29.875F);
        FuzzerUtils.init(dArr, 1.50519);
        FuzzerUtils.init(byArr, (byte)107);

        i = 1;
        while (++i < 365) {
            iArr[i + 1] += i;
            iMeth(-12, i);
            i11 *= i;
            i11 = i;
            lArr[i - 1][i + 1] >>= 7;
        }
        i12 = 1;
        do {
            Test0838.byFld += (byte) i12;
            Test0838.instanceCount += (i12 - Test0838.instanceCount);
        } while (++i12 < 224);
        for (i13 = 10; i13 < 367; i13++) {
            for (i15 = 2; i15 < 71; ++i15) {
                for (i17 = 2; i17 > 1; i17--) {
                    Test0838.fFld = i18;
                }
                i19 = 1;
                while (++i19 < 2) {
                    i14 -= (int)9.843F;
                    i18 >>= -55158;
                    fArr[i19 + 1] += Test0838.fFld;
                    switch ((i15 % 2) + 13) {
                    case 13:
                        dArr[i15 + 1][i13 + 1] -= i16;
                        break;
                    case 14:
                        i14 = i18;
                        switch (((i16 >>> 1) % 6) + 94) {
                        case 94:
                            if (Test0838.bFld) {
                                i14 = 50338;
                                i16 += i19;
                            }
                            Test0838.sFld = Test0838.sFld;
                            break;
                        case 95:
                            switch ((i13 % 7) + 77) {
                            case 77:
                                i11 = i16;
                                i14 += (((i19 * i13) + i18) - i13);
                                if (Test0838.bFld) continue;
                                break;
                            case 78:
                                if (Test0838.bFld) break;
                                break;
                            case 79:
                                Test0838.fFld = i;
                            case 80:
                                byArr[i15 + 1] = (byte)13;
                                break;
                            case 81:
                                lArr[i13][i13] <<= Test0838.instanceCount;
                                break;
                            case 82:
                                Test0838.instanceCount = i14;
                                break;
                            case 83:
                                Test0838.fFld = Test0838.fFld;
                                break;
                            }
                        case 96:
                            iArr[i13 + 1] |= (int) Test0838.instanceCount;
                            break;
                        case 97:
                            Test0838.instanceCount += -13;
                        case 98:
                            lArr[i19][i13] >>>= i14;
                            break;
                        case 99:
                            i14 >>= (int) Test0838.instanceCount;
                            break;
                        }
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i11 i12 = " + i + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 iArr lArr = " + i19 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("fArr dArr byArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0838.instanceCount Test0838.fFld Test0838.bFld = " + Test0838.instanceCount + "," +
                Float.floatToIntBits(Test0838.fFld) + "," + (Test0838.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0838.byFld Test0838.sFld = " + Test0838.byFld + "," + Test0838.sFld);

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0838 _instance = new Test0838();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
