// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0296 {

    public static final int N = 400;

    public static long instanceCount=608672740L;
    public static byte byFld=-22;
    public volatile float fFld=0.794F;
    public static int iFld=-168;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0296.lArrFld, -399L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i2, int i3) {

        int i4=10;
        int i5=-41642;
        int i6=114;
        int i7=52812;
        int i8=-11;
        int i9=12;
        int i10=-7;
        int i11=-12;
        int i12=8;
        int[] iArr =new int[N];
        float f2=-46.579F;

        FuzzerUtils.init(iArr, 2);

        for (i4 = 313; i4 > 13; i4--) {
            Test0296.instanceCount = i2;
            i6 = 1;
            while (++i6 < 6) {
                for (i7 = 1; i7 < 1; ++i7) {
                    Test0296.instanceCount -= i5;
                }
            }
            for (i9 = 6; i9 > 1; --i9) {
                i10 += (int) Test0296.instanceCount;
                i8 += i9;
                switch ((i4 % 5) + 34) {
                case 34:
                    Test0296.instanceCount += (i9 - i7);
                    for (i11 = 1; 2 > i11; i11++) {
                        l = Test0296.instanceCount;
                        Test0296.byFld += (byte) (((i11 * i8) + i10) - i3);
                        iArr[i4 - 1] = -11;
                        Test0296.lArrFld = FuzzerUtils.long1array(N, (long) 0L);
                    }
                    break;
                case 35:
                    i2 *= (int)f2;
                    break;
                case 36:
                    i10 -= i7;
                case 37:
                    i8 <<= i5;
                case 38:
                    i10 = 132;
                    break;
                }
            }
        }
        vMeth2_check_sum += l + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(float f1, int i1, double d) {

        int i13=-117;
        int i14=-65322;
        int i15=3;
        int i16=-131;
        int i17=30821;
        int i18=-58;
        int i19=-236;
        int i20=-202;
        int[][] iArr1 =new int[N][N];
        int[] iArr2 =new int[N];
        long l1=0L;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(byArr, (byte)127);
        FuzzerUtils.init(iArr1, -104);
        FuzzerUtils.init(iArr2, -21827);

        vMeth2(Test0296.instanceCount, i1, i1);
        i13 = 1;
        while ((i13 += 3) < 183) {
            i1 += (i13 ^ l1);
            switch (((i13 % 9) * 5) + 61) {
            case 62:
                i1 *= i1;
                break;
            case 96:
                l1 = 5293;
                for (i14 = 1; i14 < 25; ++i14) {
                    for (i16 = 1; i16 < 2; ++i16) {
                        i15 -= i14;
                    }
                    for (i18 = i13; i18 < 2; ++i18) {
                        i15 += -180;
                        byArr[i14][i18 - 1] /= (byte)(i1 | 1);
                    }
                    i20 = 1;
                    do {
                        i1 += (i20 * i20);
                        i17 += (i20 * i20);
                    } while (++i20 < 2);
                }
                break;
            case 103:
                i15 += i13;
                break;
            case 68:
                Test0296.byFld += (byte) i15;
                break;
            case 76:
                l1 *= i17;
            case 70:
                iArr1[i13][i13 + 1] *= i19;
                break;
            case 106:
                i1 += i1;
                break;
            case 100:
                i15 *= Test0296.byFld;
                break;
            case 64:
                iArr1[i13 + 1][i13] = (int)1.69F;
                break;
            default:
                i19 *= -198;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i1 + Double.doubleToLongBits(d) + i13 + l1 + i14 + i15 + i16 +
            i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i, float f) {

        double d1=-3.71808;
        int i22=-4;
        int i23=61881;
        int i24=-5;
        int i25=-64557;
        int i26=107;
        int i27=-41;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, -2);

        vMeth1(f, i, d1);
        iArr3[(i >>> 1) % N] = (int) Test0296.instanceCount;
        Test0296.lArrFld[(i >>> 1) % N] = i;
        for (i22 = 208; i22 > 8; i22--) {
            iArr3[i22 + 1] = i;
            Test0296.instanceCount >>= Test0296.instanceCount;
            i24 *= (int)60.52757;
            i23 >>= 0;
            for (i25 = 1; i25 < 8; ++i25) {
                i27 = 1;
                do {
                    i = (int)-2234628184202325134L;
                    i += i27;
                    i26 += (((i27 * Test0296.instanceCount) + Test0296.instanceCount) - Test0296.instanceCount);
                    i26 += i27;
                    i += i24;
                } while (++i27 < 2);
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i22 + i23 + i24 + i25 + i26 +
            i27 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {


        vMeth(-29900, fFld);
        Test0296.iFld += Test0296.iFld;


        FuzzerUtils.out.println("Test0296.instanceCount Test0296.byFld fFld = " + Test0296.instanceCount + "," + Test0296.byFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0296.iFld Test0296.lArrFld = " + Test0296.iFld + "," + FuzzerUtils.checkSum(Test0296.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0296 _instance = new Test0296();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
