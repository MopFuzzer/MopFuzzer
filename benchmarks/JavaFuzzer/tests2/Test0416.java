// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:31 2023
public class Test0416 {

    public static final int N = 400;

    public static long instanceCount=-62334L;
    public static int iFld=-46;
    public static short sFld=4074;
    public static float fFld=-69.982F;
    public static int[][] iArrFld =new int[N][N];
    public static volatile short[][] sArrFld =new short[N][N];

    static {
        FuzzerUtils.init(Test0416.iArrFld, 21);
        FuzzerUtils.init(Test0416.sArrFld, (short) -26106);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i7) {

        double d=2.107431;
        int i8=-25234, i9=227, i10=-135, i11=-49935, i12=-12, i13=21184, i14=61, i15=-108;
        byte by=105;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 12.869F);

        d += d;
        i8 = 1;
        do {
            for (i9 = 6; i9 > 1; --i9) {
                Test0416.iArrFld[i9][i9] = -9;
            }
            i11 -= by;
            i11 += i11;
        } while (++i8 < 262);
        Test0416.instanceCount *= i10;
        for (i12 = 11; i12 < 192; i12++) {
            d -= i8;
        }
        Test0416.iArrFld[(5 >>> 1) % N] = Test0416.iArrFld[(i10 >>> 1) % N];
        for (i14 = 233; i14 > 11; i14 -= 3) {
            Test0416.instanceCount = i11;
            i15 = i7;
            fArr[i14 + 1] += i10;
            i13 = Test0416.iFld;
        }
        long meth_res = i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + by + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i16=1, i17=-43775, i18=35, i19=-28765;
        float f1=1.628F;
        boolean b=false;

        Test0416.instanceCount = (long) (-((Test0416.iFld % (Test0416.instanceCount | 1)) - fMeth(Test0416.iFld)));
        i16 = 1;
        do {
            Test0416.iFld += i16;
            Test0416.iArrFld[i16 - 1] = Test0416.iArrFld[i16];
            Test0416.iFld -= (int) f1;
            Test0416.iFld -= Test0416.iFld;
            for (i17 = 1; 6 > i17; i17++) {
                Test0416.iFld *= i17;
                i18 = 4;
                Test0416.iFld += (38930 + (i17 * i17));
                if (b) break;
                Test0416.iFld -= i18;
                if (b) break;
                Test0416.instanceCount -= i19;
                Test0416.sArrFld[i17 - 1] = Test0416.sArrFld[i16];
            }
        } while (++i16 < 253);
        vMeth_check_sum += i16 + Float.floatToIntBits(f1) + i17 + i18 + (b ? 1 : 0) + i19;
    }

    public static long lMeth(int i5) {

        long l1=-28019L;
        int i6=9;
        double d1=24.35124;

        for (l1 = 359; l1 > 20; --l1) {
            vMeth();
            Test0416.iFld <<= i5;
            d1 = 1;
            while (++d1 < 5) {
                float f2=69.328F;
                i5 += (int)(((d1 * i6) + i5) - f2);
                i6 += (int)d1;
                Test0416.iArrFld[(int) (d1)][(int) (l1 + 1)] = i5;
                Test0416.iArrFld[(int) (d1 - 1)][(int) (d1)] = (int) -1956218621L;
                i6 += (int)d1;
                Test0416.iFld += (int) (((d1 * i5) + Test0416.iFld) - Test0416.sFld);
                i5 += (int) (((d1 * i5) + i6) - Test0416.instanceCount);
                Test0416.iFld += (int) (d1 - Test0416.instanceCount);
                if (Test0416.iFld != 0) {
                }
                try {
                    Test0416.iArrFld[(int) (d1 + 1)][(int) (l1)] = (Test0416.iFld / 111);
                    i5 = (Test0416.iFld / -60);
                    i5 = (Test0416.iFld % -50);
                } catch (ArithmeticException a_e) {}
            }
        }
        Test0416.iFld = (int) l1;
        long meth_res = i5 + l1 + i6 + Double.doubleToLongBits(d1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-131, i1=-108, i2=-52751, i3=-202, i4=-13792, i20=-11;
        float f=23.791F;
        byte by1=-126;
        boolean b1=true;
        long[] lArr =new long[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(lArr, -78L);
        FuzzerUtils.init(dArr, 0.105340);

        for (i = 22; i < 372; i++) {
            i1 += (i + i1);
        }
        lArr[(i >>> 1) % N] -= (--Test0416.instanceCount);
        for (f = 146; 7 < f; f -= 3) {
            for (long l : lArr) {
                for (i3 = 1; i3 < 2; ++i3) {
                    i1 |= i4;
                    i1 += (int)(lMeth(-8210) + by1);
                    dArr[i3 - 1][(int)(f - 1)] = i2;
                    l >>>= i;
                    i2 += (i3 * i3);
                    i1 *= i2;
                    i4 = 13;
                    i4 += i3;
                    Test0416.iArrFld[(int) (f)][i3] = i2;
                    i1 += (i3 | i3);
                }
                i4 = (int)l;
                i1 = i;
                Test0416.fFld = Test0416.sFld;
                i20 = 1;
                while (++i20 < 2) {
                    i2 = -14229;
                    by1 += (byte)l;
                    if (b1) break;
                    by1 |= (byte) Test0416.instanceCount;
                }
                by1 += (byte)f;
            }
            i2 = i3;
            Test0416.sFld = (short) Test0416.instanceCount;
            Test0416.fFld += (29063 + (f * f));
            Test0416.iArrFld[(int) (f + 1)][(int) (f + 1)] = i2;
            i4 <<= i4;
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("by1 i20 b1 = " + by1 + "," + i20 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("lArr dArr = " + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0416.instanceCount Test0416.iFld Test0416.sFld = " + Test0416.instanceCount + "," + Test0416.iFld +
                "," + Test0416.sFld);
        FuzzerUtils.out.println("Test0416.fFld Test0416.iArrFld Test0416.sArrFld = " + Float.floatToIntBits(Test0416.fFld) + "," +
                FuzzerUtils.checkSum(Test0416.iArrFld) + "," + FuzzerUtils.checkSum(Test0416.sArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0416 _instance = new Test0416();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
