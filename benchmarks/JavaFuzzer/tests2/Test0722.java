// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0722 {

    public static final int N = 400;

    public static long instanceCount=3055562506L;
    public static float fFld=-1.134F;
    public int iFld=-211;
    public static float[] fArrFld =new float[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0722.fArrFld, -2.777F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5) {

        int i6=-9, i7=54, i9=0, i10=-25936, i11=89, i12=-122, i13=46, i14=37208;
        byte by1=35;
        boolean b=true;
        short s=-13573;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 48.124163);

        for (i6 = 16; i6 < 394; ++i6) {
            int i8=6;
            i8 &= i5;
            Test0722.fFld += i6;
            i7 = (int) Test0722.instanceCount;
            for (i9 = i6; i9 < 4; ++i9) {
                i7 -= (int) Test0722.fFld;
                by1 *= (byte) Test0722.fFld;
                dArr = dArr;
            }
            b = true;
            i7 -= (int) Test0722.instanceCount;
            if (i7 != 0) {
            }
            for (i11 = 1; i11 < 4; ++i11) {
                for (i13 = 1; i13 < 2; i13++) {
                    s += (short)i13;
                    if (i14 != 0) {
                    }
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i9 + i10 + by1 + (b ? 1 : 0) + i11 + i12 + i13 + i14 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l, int i2) {

        int i3=10019, i4=0, i15=-2, i16=6, i17=-6138, i18=-9, i19=1, i20=206;
        byte by=113;
        double d=-65.85113;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(sArr, (short)19910);

        for (i3 = 3; i3 < 192; ++i3) {
            Test0722.fArrFld[i3 - 1] *= (by - (Math.min(i4, i4) % (i4 | 1)));
            Test0722.instanceCount += (i3 + i2);
            i2 = (int) ((++sArr[i3 + 1][i3]) ^ (iMeth(i2) << Test0722.instanceCount));
            i2 ^= -30;
            for (i15 = 1; 8 > i15; ++i15) {
                i16 -= (int)d;
                if (i16 != 0) {
                    vMeth1_check_sum += l + i2 + i3 + i4 + by + i15 + i16 + Double.doubleToLongBits(d) + i17 + i18 +
                        i19 + i20 + FuzzerUtils.checkSum(sArr);
                    return;
                }
                Test0722.instanceCount = i15;
            }
            for (i17 = 1; i17 < 8; i17++) {
                i2 = i17;
                Test0722.fFld += (i17 * Test0722.fFld);
                for (i19 = 1; i19 < 2; i19++) {
                    i16 += (-12 + (i19 * i19));
                    Test0722.fFld -= i4;
                }
            }
        }
        vMeth1_check_sum += l + i2 + i3 + i4 + by + i15 + i16 + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth() {

        int i21=-111;
        int i23=-4743;
        int i24=65;
        int i25=-9;
        int i26=-48401;
        int i27=32211;
        int i28=-18005;
        int i29=20265;
        int[] iArr =new int[N];
        boolean b1=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 9);
        FuzzerUtils.init(lArr, 44L);

        vMeth1(Test0722.instanceCount, -13);
        i21 = 1;
        while (++i21 < 396) {
            b1 = b1;
            Test0722.fFld = Test0722.instanceCount;
            i23 -= i23;
        }
        lArr[(i21 >>> 1) % N] = i23;
        i23 = -39;
        for (i24 = 6; i24 < 299; ++i24) {
            for (i26 = 1; i26 < 6; ++i26) {
                i27 = i23;
                i23 += (int) Test0722.fFld;
                for (i28 = 1; i28 < 2; i28++) {
                    i25 = i23;
                    Test0722.fFld -= i23;
                    i23 += (((i28 * i29) + i27) - Test0722.instanceCount);
                }
            }
        }
        vMeth_check_sum += i21 + (b1 ? 1 : 0) + i23 + i24 + i25 + i26 + i27 + i28 + i29 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=14;
        int i1=11;
        int i30=2914;
        int i31=5;
        int i32=10;
        int i33=6;
        int[] iArr1 =new int[N];
        long l2=191L, l3=-33678L;
        double d1=2.48203;
        boolean b2=true;
        short s1=-9024;

        FuzzerUtils.init(iArr1, 2);

        for (i = 13; i < 341; ++i) {
            Test0722.instanceCount += (((i * i) + i1) - i);
            if (1 < i) break;
        }
        vMeth();
        for (long l1 : lArrFld) {
            i30 = 63;
            while (--i30 > 0) {
                l1 /= (long)-1.80F;
                for (l2 = 1; l2 < 1; l2++) {
                    iArr1[(int)(l2 + 1)] = i;
                    d1 *= -103.116033;
                    if (b2) {
                        i31 += i;
                    } else if (b2) {
                        l1 = Test0722.instanceCount;
                        Test0722.fFld += Test0722.instanceCount;
                        i31 = i31;
                        lArrFld[(int)(l2)] += i30;
                    }
                    i31 = (int) Test0722.instanceCount;
                    iFld = (int)240L;
                    try {
                        iFld = (-581913841 / i31);
                        i1 = (1214066132 % i30);
                        i31 = (i31 / iFld);
                    } catch (ArithmeticException a_e) {}
                    i31 = (int)-33.154F;
                    Test0722.instanceCount += l1;
                    iFld += i32;
                }
                d1 -= i31;
                iArr1[i30 + 1] = (int)2550061293L;
                i31 = iFld;
                for (l3 = 1; l3 > 1; l3 -= 2) {
                    Test0722.instanceCount <<= i31;
                    Test0722.fFld = -14L;
                    Test0722.fFld = 5988916485558673820L;
                    i1 += s1;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i30 = " + i + "," + i1 + "," + i30);
        FuzzerUtils.out.println("l2 i31 d1 = " + l2 + "," + i31 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("b2 i32 l3 = " + (b2 ? 1 : 0) + "," + i32 + "," + l3);
        FuzzerUtils.out.println("i33 s1 iArr1 = " + i33 + "," + s1 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0722.instanceCount Test0722.fFld iFld = " + Test0722.instanceCount + "," +
                Float.floatToIntBits(Test0722.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test0722.fArrFld lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0722.fArrFld))
            + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0722 _instance = new Test0722();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
