// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0051 {

    public static final int N = 400;

    public static long instanceCount=13L;
    public static float fFld=-2.640F;
    public boolean bFld=true;
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0051.iArrFld, 61);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i7=-45525, i8=-6, i9=-192, i10=-13;
        long l1=-10L;
        long l2=31228L;
        long[] lArr1 =new long[N];
        double d1=-81.6641;
        double[][] dArr =new double[N][N];
        boolean b=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr1, -159L);
        FuzzerUtils.init(dArr, 0.35045);
        FuzzerUtils.init(fArr, 1.485F);

        for (long l : lArr1) {
            i7 %= (int) ((long) (Test0051.fFld) | 1);
            for (l1 = 1; l1 < 4; l1++) {
                Test0051.fFld += (((l1 * Test0051.fFld) + i8) - i7);
                for (i9 = 1; i9 < 2; i9++) {
                    Test0051.iArrFld[i9 + 1][i9] = i9;
                    Test0051.instanceCount >>= Test0051.instanceCount;
                    lArr1[i9 + 1] += l2;
                    Test0051.iArrFld[(int) (l1)][i9] /= (int) (l2 | 1);
                    i8 += (i9 ^ l2);
                    dArr[(i7 >>> 1) % N][i9] = -5;
                    if (b) {
                        d1 -= i7;
                        i8 = i8;
                        Test0051.instanceCount >>= 10;
                    } else if (b) {
                        fArr[(int)(l1 - 1)] += i7;
                    }
                }
            }
        }
        long meth_res = i7 + l1 + i8 + i9 + i10 + l2 + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i6=-5870, i11=-60112, i12=93, i13=7150, i14=0, i15=38623;
        double d=-1.82023;
        byte by=91;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 6L);

        i6 = (++i6);
        lArr[(i6 >>> 1) % N] *= (long) (((d--) - (i6 -= (int) Test0051.fFld)) + (iMeth1() - 59003));
        for (i11 = 9; i11 < 247; ++i11) {
            Test0051.iArrFld[i11 - 1][i11 - 1] += 8;
            switch (((i11 % 2) * 5) + 75) {
            case 82:
                for (i13 = 1; i13 < 7; ++i13) {
                    i12 += (14 + (i13 * i13));
                    Test0051.fFld = Test0051.instanceCount;
                    i12 /= (int)(by | 1);
                    switch (((i13 % 2) * 5) + 24) {
                    case 27:
                        i12 = i14;
                        i15 = 1;
                        while (++i15 < 2) {
                            i14 = i15;
                        }
                        break;
                    case 33:
                        Test0051.fFld = Test0051.fFld;
                    default:
                        i12 = (int) Test0051.instanceCount;
                    }
                }
                break;
            case 83:
                Test0051.iArrFld[i11][i11] <<= i6;
                break;
            }
        }
        long meth_res = i6 + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + by + i15 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i4=12, i5=225, i16=-26754, i17=55031, i18=-192;
        boolean b1=true;

        for (i4 = 12; i4 < 375; i4++) {
            i5 = iMeth();
            i5 >>>= i5;
            for (i16 = 1; i16 < 5; i16++) {
                i18 = (int) Test0051.fFld;
                Test0051.iArrFld[i4 - 1][i16 + 1] <<= (int) Test0051.instanceCount;
                if (b1) continue;
                Test0051.instanceCount %= (i16 | 1);
                try {
                    i5 = (i4 / -53733);
                    i18 = (i4 % i5);
                    i17 = (i16 % i4);
                } catch (ArithmeticException a_e) {}
                i17 = (int) Test0051.fFld;
                i17 *= 161;
                Test0051.instanceCount += (((i16 * i16) + i18) - Test0051.instanceCount);
                Test0051.iArrFld[i16 - 1] = Test0051.iArrFld[i16 - 1];
                i5 += i16;
            }
            Test0051.iArrFld[i4][i4] /= (int) (i18 | 1);
        }
        vMeth_check_sum += i4 + i5 + i16 + i17 + i18 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=34998, i1=212, i2=14155, i3=11, i19=-11, i20=-12073, i21=-166;
        float f=-1.112F;
        double d2=7.87416;

        if (bFld) {
            for (i = 7; i < 373; i++) {
                i1 = (int)(((f - i) * i) - i1);
                for (i2 = 4; i2 < 69; i2++) {
                    vMeth();
                    i3 *= (int)-26359L;
                    i1 = i3;
                    i1 -= i2;
                    i3 = (int) Test0051.instanceCount;
                    i3 *= (int)-30L;
                    i3 = (int) Test0051.instanceCount;
                    Test0051.instanceCount -= i1;
                }
                i1 = (int) Test0051.fFld;
                i3 -= -47933;
                for (i19 = 69; i19 > 3; --i19) {
                    if (false) {
                        i21 = 1;
                        while (++i21 < 2) {
                            switch ((i21 % 3) + 61) {
                            case 61:
                                i3 = (int) Test0051.instanceCount;
                                f /= (Test0051.instanceCount | 1);
                                i20 = i1;
                                break;
                            case 62:
                                f -= 112.845F;
                                f -= -12;
                            case 63:
                                Test0051.instanceCount -= (long) d2;
                            }
                            i3 *= i21;
                            switch ((((-61391 >>> 1) % 6) * 5) + 58) {
                            case 81:
                                Test0051.instanceCount += (long) 1.470F;
                                i3 <<= (int) Test0051.instanceCount;
                                break;
                            case 66:
                                i3 <<= i20;
                                Test0051.instanceCount = i1;
                                break;
                            case 65:
                                f += i21;
                                break;
                            case 63:
                                Test0051.instanceCount = i19;
                                break;
                            case 84:
                                if (bFld) break;
                                break;
                            case 60:
                                i20 += (i21 * i21);
                                break;
                            }
                        }
                    } else {
                        if (bFld) break;
                    }
                }
            }
        } else {
            Test0051.iArrFld[(i3 >>> 1) % N][(i1 >>> 1) % N] >>= i21;
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 i19 = " + i2 + "," + i3 + "," + i19);
        FuzzerUtils.out.println("i20 i21 d2 = " + i20 + "," + i21 + "," + Double.doubleToLongBits(d2));

        FuzzerUtils.out.println("Test0051.instanceCount Test0051.fFld bFld = " + Test0051.instanceCount + "," +
                Float.floatToIntBits(Test0051.fFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0051.iArrFld = " + FuzzerUtils.checkSum(Test0051.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0051 _instance = new Test0051();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
