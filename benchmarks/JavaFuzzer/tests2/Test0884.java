// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0884 {

    public static final int N = 400;

    public static long instanceCount=-188L;
    public static boolean bFld=true;
    public static byte byFld=-17;
    public static volatile short sFld=-27304;
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0884.iArrFld, -173);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f) {

        int i8=109, i9=-146, i10=-43288, i11=-38202;
        long l1=-4223365089L;
        short s=17619;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.462F);

        i8 += i8;
        i8 = i8;
        i8 -= i8;
        i8 += i8;
        for (i9 = 8; 261 > i9; i9++) {
            if (Test0884.bFld) {
                i10 *= (int) Test0884.instanceCount;
                for (l1 = 6; l1 > i9; l1--) {
                    Test0884.iArrFld[(int) (l1)] = Test0884.byFld;
                    i8 *= (int) Test0884.instanceCount;
                    i8 *= i11;
                }
                s += (short)i11;
            } else {
                i8 |= i9;
                fArr[i9 + 1] *= i8;
                f = -15.434F;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i8 + i9 + i10 + l1 + i11 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth() {

        double d=-1.6315;
        int i5=-3, i6=61, i7=139, i12=63748, i13=-82, i14=-584;
        float f1=-1.934F;
        float f2=50.537F;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, -2.804F);

        Test0884.instanceCount += (long) (d - i5);
        d += -2.88396;
        for (i6 = 13; i6 < 272; i6++) {
            vMeth1(f1);
            Test0884.instanceCount += (i6 ^ i5);
            Test0884.iArrFld[i6] >>>= i6;
            fArr1[i6 - 1] = Test0884.sFld;
            if (true) {
                Test0884.instanceCount *= -3273;
                for (f2 = 6; f2 > i6; f2--) {
                    i7 += i5;
                    for (i13 = 1; 1 > i13; i13++) {
                        i14 -= (int)f1;
                        try {
                            i14 = (18 % i14);
                            i12 = (i5 / 2015668879);
                            Test0884.iArrFld[i6 - 1] = (i6 / 141);
                        } catch (ArithmeticException a_e) {}
                        i7 += (int) Test0884.instanceCount;
                    }
                }
            } else if (Test0884.bFld) {
                if (Test0884.bFld) break;
            } else {
                d *= i5;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i5 + i6 + i7 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2)
            + i12 + i13 + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, long l, int i1) {

        int i2=32, i3=-5, i4=-13688, i15=-32960;
        float f3=1.980F;

        i2 = 1;
        do {
            for (i3 = i2; i3 < 7; i3++) {
                Test0884.instanceCount += i3;
                i = -12418;
                Test0884.bFld = Test0884.bFld;
                l *= lMeth();
                Test0884.byFld += (byte) i4;
            }
            Test0884.instanceCount += i;
            i1 += (i2 | i3);
            f3 += (-149 + (i2 * i2));
            i15 = 1;
            do {
                i -= (int)99L;
                Test0884.iArrFld[i2 + 1] &= (int) l;
                Test0884.iArrFld[(-122 >>> 1) % N] -= (int) -10206L;
                i1 *= -63085;
            } while (++i15 < 7);
        } while (++i2 < 216);
        vMeth_check_sum += i + l + i1 + i2 + i3 + i4 + Float.floatToIntBits(f3) + i15;
    }

    public void mainTest(String[] strArr1) {

        int i16=-51;

        vMeth(i16, Test0884.instanceCount, i16);

        FuzzerUtils.out.println("i16 = " + i16);

        FuzzerUtils.out.println("Test0884.instanceCount Test0884.bFld Test0884.byFld = " + Test0884.instanceCount + "," + (Test0884.bFld ?
                1 : 0) + "," + Test0884.byFld);
        FuzzerUtils.out.println("Test0884.sFld Test0884.iArrFld = " + Test0884.sFld + "," + FuzzerUtils.checkSum(Test0884.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0884 _instance = new Test0884();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
