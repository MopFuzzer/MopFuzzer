// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0259 {

    public static final int N = 400;

    public static volatile long instanceCount=2L;
    public static byte byFld=-96;
    public static double dFld=-1.40755;
    public static float fFld=60.132F;
    public short[][] sArrFld =new short[N][N];
    public volatile double[] dArrFld =new double[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i5, long l1) {

        int i6=-11, i7=-8137, i8=-209, i9=-247, i10=47321, i11=-23669;
        float f=-1.409F;
        boolean b=false;

        i5 = (int)-54523L;
        for (i6 = 1; 142 > i6; i6++) {
            double d1=0.56634;
            i7 += (int)d1;
            i5 += i6;
            for (i8 = 1; i8 < 11; ++i8) {
                f += (float)-1.112126;
                for (i10 = 1; i10 < 2; i10++) {
                    Test0259.instanceCount &= i6;
                    switch (((-15164 >>> 1) % 5) + 89) {
                    case 89:
                        i7 += (((i10 * i5) + i5) - f);
                        f -= i9;
                        break;
                    case 90:
                        Test0259.instanceCount = i8;
                    case 91:
                        i5 >>= -8;
                        i11 += 4418;
                        if (b) break;
                    case 92:
                        i5 = i7;
                        break;
                    case 93:
                        i5 = i10;
                        break;
                    }
                }
            }
        }
        long meth_res = i5 + l1 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 + (b ? 1 : 0);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void vMeth(int i4) {

        int i12=6, i13=-10, i14=-84, i15=55610, i16=46;
        float f1=80.812F;
        float[] fArr =new float[N];
        boolean b1=false;

        FuzzerUtils.init(fArr, -1.66F);

        i4 += (int)((i4 + (++i4)) + dMeth(-12, 3720L));
        for (i12 = 12; i12 < 376; ++i12) {
            i14 = 1;
            do {
                i4 += (((i14 * i12) + i13) - Test0259.instanceCount);
                for (i15 = 1; i15 < 1; i15++) {
                    switch (((i12 % 1) * 5) + 108) {
                    case 110:
                        i4 += (i15 + i13);
                    default:
                        i4 -= (int)f1;
                        i16 >>>= i15;
                        i4 += i14;
                        if (i4 != 0) {
                            vMeth_check_sum += i4 + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) + (b1 ? 1 :
                                0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                            return;
                        }
                    }
                    b1 = b1;
                    i16 += (((i15 * Test0259.instanceCount) + Test0259.instanceCount) - i12);
                    fArr = fArr;
                    if (true) continue;
                }
            } while (++i14 < 5);
        }
        vMeth_check_sum += i4 + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(long l, int i1) {

        int i2=-23;
        int i3=0;
        int i17=45921;
        int i18=36170;
        int i19=24699;
        int i20=-10922;
        int i21=56;
        int i22=53278;
        int[] iArr =new int[N];
        boolean b2=true;

        FuzzerUtils.init(iArr, -14);

        for (i2 = 9; i2 < 161; ++i2) {
            vMeth(19347);
            Test0259.instanceCount *= i1;
            for (i17 = 1; i17 < 10; i17 += 3) {
                iArr = iArr;
                Test0259.dFld -= 6905238550399817945L;
                Test0259.fFld -= Test0259.instanceCount;
                for (i19 = 1; 4 > i19; i19++) {
                    i20 = (int) Test0259.instanceCount;
                    Test0259.fFld = i18;
                }
                i20 += (int)69L;
                for (i21 = i17; i21 < 4; i21++) {
                    if (b2) continue;
                    Test0259.fFld -= 21712;
                    Test0259.dFld *= Test0259.instanceCount;
                }
            }
        }
        long meth_res = l + i1 + i2 + i3 + i17 + i18 + i19 + i20 + i21 + i22 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i23=-1, i24=-8, i25=-54;
        double d=-2.76112;
        long l2=150L;

        Test0259.byFld = (byte) (Float.intBitsToFloat(-(i + Test0259.byFld)) * (i--));
        d += ((-27414 + sArrFld[(i >>> 1) % N][(i >>> 1) % N]) * ((-d) * (Test0259.instanceCount - i)));
        i -= iMeth(-5L, i);
        i23 = 1;
        while (++i23 < 365) {
            i = i23;
            Test0259.fFld = Test0259.instanceCount;
            Test0259.dFld = Test0259.instanceCount;
            i24 = (int)63823L;
            Test0259.instanceCount -= (long) -1.444F;
            i += (i23 + Test0259.fFld);
            i -= (int)-8L;
            for (l2 = 1; 69 > l2; l2++) {
                Test0259.instanceCount += (l2 + Test0259.instanceCount);
                dArrFld[(int)(l2 + 1)] = i;
                i |= (int)l2;
            }
        }
        Test0259.fFld *= Test0259.instanceCount;
        Test0259.fFld = -24704;

        FuzzerUtils.out.println("i d i23 = " + i + "," + Double.doubleToLongBits(d) + "," + i23);
        FuzzerUtils.out.println("i24 l2 i25 = " + i24 + "," + l2 + "," + i25);

        FuzzerUtils.out.println("Test0259.instanceCount Test0259.byFld Test0259.dFld = " + Test0259.instanceCount + "," + Test0259.byFld +
                "," + Double.doubleToLongBits(Test0259.dFld));
        FuzzerUtils.out.println("Test0259.fFld sArrFld dArrFld = " + Float.floatToIntBits(Test0259.fFld) + "," +
            FuzzerUtils.checkSum(sArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0259 _instance = new Test0259();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
