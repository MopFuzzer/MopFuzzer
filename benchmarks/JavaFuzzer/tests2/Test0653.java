// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:43 2023
public class Test0653 {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static boolean bFld=true;
    public static byte byFld=108;
    public int iFld=122;
    public int iFld1=148;
    public float fFld=117.557F;
    public static double dFld=-69.32532;
    public short sFld=7453;
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0653.fArrFld, -114.159F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(float f) {

        int i2=-10943;
        int i3=42799;
        int i4=-7;
        int i5=4;
        int i6=-229;
        int i7=-39201;
        int[] iArr =new int[N];
        boolean b=true, b1=false;
        double d=0.127452;
        byte by=115;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(lArr, 23171L);

        for (i2 = 3; i2 < 204; i2++) {
            b = b;
            if (b) break;
            for (i4 = 1; i4 < 8; i4++) {
                for (i6 = 2; i6 > 1; i6--) {
                    i3 += i6;
                    if (b1) break;
                    d += i7;
                    switch ((i4 % 2) + 22) {
                    case 22:
                        i3 += (int) Test0653.instanceCount;
                        switch (((i4 % 9) * 5) + 125) {
                        case 142:
                            iArr[i6 + 1] -= i5;
                            i5 -= i7;
                            break;
                        case 141:
                        case 159:
                            by = (byte)i5;
                            break;
                        case 163:
                            lArr[i6] -= i6;
                        case 139:
                            d -= i7;
                            break;
                        case 145:
                            f += (i6 * i2);
                            break;
                        case 130:
                            i5 += i2;
                            break;
                        case 136:
                            Test0653.instanceCount += (i6 * i6);
                            break;
                        case 153:
                            i3 = by;
                            break;
                        }
                    case 23:
                        i5 -= i5;
                    default:
                        iArr = iArr;
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(d) + by + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i, int i1) {

        float f1=-2.964F;
        long l1=8336865825628186857L;
        int i8=-14, i9=-61954, i10=177, i11=-138, i12=67;

        fMeth(f1);
        l1 = 1;
        do {
            for (i8 = 1; 12 > i8; ++i8) {
                i -= (int)73.758F;
                i10 = 1;
                while ((i10 += 3) < 2) {
                    Test0653.bFld = true;
                    i >>= i8;
                    i = i1;
                    i += i10;
                    Test0653.instanceCount -= i10;
                    i1 += i1;
                }
            }
        } while (++l1 < 131);
        f1 *= Test0653.byFld;
        for (i11 = 10; i11 < 212; i11++) {
            Test0653.fArrFld[i11 - 1] -= -15.87F;
            i1 += i11;
        }
        vMeth1_check_sum += i + i1 + Float.floatToIntBits(f1) + l1 + i8 + i9 + i10 + i11 + i12;
    }

    public void vMeth(long l) {

        int i13=0;
        int i14=-223;
        int i15=13;
        int i16=54087;
        int[] iArr1 =new int[N];
        short s=-11706;

        FuzzerUtils.init(iArr1, 0);

        vMeth1(iFld, iFld);
        for (i13 = 6; i13 < 286; ++i13) {
            float f2=-55.36F;
            iFld <<= 526;
            iFld = 55640;
            iFld = i14;
            i14 -= i13;
            i14 *= (int)-11498L;
            iArr1[i13 + 1] = -28;
            f2 = (float)88.92259;
            f2 *= s;
        }
        iArr1[(-89 >>> 1) % N] += i13;
        i14 = iFld;
        for (i15 = 5; i15 < 125; ++i15) {
            iFld -= i16;
            iArr1[i15 + 1] ^= (int)-56526L;
        }
        vMeth_check_sum += l + i13 + i14 + s + i15 + i16 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i17=-213;
        int i18=67;
        int i19=77;
        int i20=-7;
        int i21=4;
        int i22=-10;
        int i23=-71;
        int[] iArr2 =new int[N];
        long l2=-2339688706L;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, -2167324117L);
        FuzzerUtils.init(iArr2, -19062);

        vMeth(Test0653.instanceCount);
        Test0653.bFld = Test0653.bFld;
        i17 = 1;
        while (++i17 < 276) {
            switch (((i17 % 2) * 5) + 123) {
            case 133:
                iFld += i17;
                lArr1[i17 + 1] = lArr1[i17 - 1];
                break;
            case 129:
                iFld = (int) Test0653.instanceCount;
                try {
                    iArr2[i17] = (i17 / i17);
                    iArr2[i17 - 1] = (-121 % i17);
                    iFld = (1550402702 % iFld);
                } catch (ArithmeticException a_e) {}
                break;
            default:
                switch ((i17 % 2) + 101) {
                case 101:
                    iFld = iFld;
                    iFld >>= (int) Test0653.instanceCount;
                case 102:
                    l2 = iFld;
                    l2 = -33467;
                    break;
                default:
                    switch (((i17 % 10) * 5) + 123) {
                    case 140:
                        for (i18 = 3; 91 > i18; ++i18) {
                            iFld += (int)(-6263570328980988676L + (i18 * i18));
                            iFld <<= i17;
                            i19 += -14;
                        }
                        for (i20 = i17; i20 < 91; ++i20) {
                            iFld >>= (int)213L;
                            i19 <<= i20;
                            i19 = i21;
                            for (i22 = 1; i22 < 1; ++i22) {
                                lArr1[i22][i17] >>= i20;
                                iArr2[i17] /= (int)(l2 | 1);
                                i21 = i23;
                                lArr1[i20 + 1][i22 - 1] = Test0653.byFld;
                                i23 -= 60877;
                                lArr1[i17 - 1][i17 + 1] |= i19;
                                iFld1 -= Test0653.byFld;
                            }
                        }
                    case 161:
                        fFld += (((i17 * iFld) + i22) - i22);
                        break;
                    case 142:
                        i23 += (((i17 * i22) + Test0653.instanceCount) - i21);
                    case 166:
                        Test0653.instanceCount = l2;
                        break;
                    case 125:
                        i23 >>>= i23;
                        break;
                    case 153:
                        l2 = iFld;
                        break;
                    case 154:
                        i19 += i18;
                        break;
                    case 155:
                        i21 += (((i17 * i17) + Test0653.byFld) - fFld);
                        break;
                    case 145:
                        Test0653.dFld -= i17;
                    case 171:
                    default:
                        sFld += (short)i20;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i17 l2 i18 = " + i17 + "," + l2 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 lArr1 = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0653.instanceCount Test0653.bFld Test0653.byFld = " + Test0653.instanceCount + "," + (Test0653.bFld ?
                1 : 0) + "," + Test0653.byFld);
        FuzzerUtils.out.println("iFld iFld1 fFld = " + iFld + "," + iFld1 + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0653.dFld sFld Test0653.fArrFld = " + Double.doubleToLongBits(Test0653.dFld) + "," + sFld +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0653.fArrFld)));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0653 _instance = new Test0653();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
