// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0881 {

    public static final int N = 400;

    public static long instanceCount=8203339566881693101L;
    public static byte byFld=80;
    public volatile boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static volatile long[] lArrFld =new long[N];
    public static float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0881.iArrFld, 10400);
        FuzzerUtils.init(Test0881.lArrFld, 10L);
        FuzzerUtils.init(Test0881.fArrFld, 0.88F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i13) {

        int i14=32971, i15=-4, i16=12, i17=155, i18=-16291, i19=-72;
        float f3=30.715F;

        for (i14 = 2; 128 > i14; ++i14) {
            for (i16 = 1; i16 < 12; i16++) {
                byte by1=-99;
                by1 = (byte)i14;
                i15 -= i14;
                i17 -= (int)f3;
                f3 += i16;
                Test0881.instanceCount = i15;
                f3 += i16;
            }
            for (i18 = i14; i18 < 12; i18 += 2) {
                i13 += (i18 | i17);
                Test0881.iArrFld[i14] = (int) Test0881.instanceCount;
                i13 = i15;
                Test0881.byFld += (byte) i18;
                i13 >>= (int) Test0881.instanceCount;
                i13 = i15;
            }
        }
        long meth_res = i13 + i14 + i15 + i16 + i17 + Float.floatToIntBits(f3) + i18 + i19;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(int i7, double d, int i8) {

        int i9=9893, i10=1, i11=-12423, i12=161, i20=11, i21=8;

        Test0881.instanceCount *= (long) (d - (i7 - Test0881.lArrFld[(i7 >>> 1) % N]));
        i9 = 1;
        do {
            i8 = (++i7);
            i10 = 1;
            do {
                i8 /= (int) (((i7 * Math.max(Test0881.instanceCount, Test0881.instanceCount)) + ((--i7) - -5)) | 1);
                Test0881.iArrFld[i10 + 1] ^= i8;
                i7 += i7;
                i7 += (i10 + i10);
                i7 -= (int) ((-(--i7)) + (Long.reverseBytes(Test0881.instanceCount) - (++i8)));
                Test0881.instanceCount += (3857248495L + (i10 * i10));
            } while (++i10 < 10);
            for (i11 = 1; i11 < 10; i11++) {
                i12 += sMeth(i12);
                for (i20 = 1; i20 < 2; i20++) {
                    i21 = i8;
                    i7 = i8;
                }
            }
        } while (++i9 < 151);
        vMeth1_check_sum += i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i20 + i21;
    }

    public static void vMeth() {

        int i3=-222, i4=-52547, i5=171, i6=-37600, i22=-4;
        float f2=-2.689F;
        byte by=-95;
        double d1=0.20096, d2=20.91963;
        short s=-1153;

        i3 -= -8;
        i4 = 176;
        while ((i4 -= 3) > 0) {
            i3 += i4;
            for (i5 = 1; 26 > i5; ++i5) {
                i6 += (int) (++Test0881.instanceCount);
                f2 -= ((-34590 + (i4 + by)) >> (-Test0881.iArrFld[i4]));
                Test0881.instanceCount += (i5 * i5);
                switch ((i5 % 7) + 97) {
                case 97:
                    vMeth1(12, d1, i5);
                    Test0881.instanceCount <<= Test0881.instanceCount;
                    switch ((i5 % 9) + 12) {
                    case 12:
                        for (d2 = 1; d2 < 2; d2++) {
                            Test0881.instanceCount <<= Test0881.instanceCount;
                            Test0881.instanceCount <<= Test0881.instanceCount;
                            s = (short)152;
                        }
                        break;
                    case 13:
                        f2 += i4;
                        break;
                    case 14:
                        f2 += ((long) i5 ^ (long) Test0881.instanceCount);
                    case 15:
                        i6 |= (int) Test0881.instanceCount;
                        break;
                    case 16:
                        Test0881.instanceCount = i6;
                    case 17:
                        Test0881.instanceCount += (i5 * i5);
                        break;
                    case 18:
                        i6 = i6;
                        break;
                    case 19:
                        Test0881.instanceCount += i5;
                        break;
                    case 20:
                        i22 += (int)(-118L + (i5 * i5));
                    default:
                        i3 = i6;
                    }
                    break;
                case 98:
                    Test0881.instanceCount = i4;
                    break;
                case 99:
                    Test0881.instanceCount += i5;
                    break;
                case 100:
                    Test0881.instanceCount = Test0881.instanceCount;
                    break;
                case 101:
                    f2 -= f2;
                    break;
                case 102:
                    i6 *= (int) Test0881.instanceCount;
                    break;
                case 103:
                    i3 <<= (int) Test0881.instanceCount;
                    break;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + Float.floatToIntBits(f2) + by + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(d2) + i22 + s;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i1=11, i2=107, i23=7, i24=243, i25=52345, i26=-10;
        float f=-2.437F, f1=0.575F;
        double d3=-2.6104, d4=0.120161;
        short s1=-29619;

        for (i = 5; i < 204; i++) {
            i1 -= (int) (((i1 + i1) - f) * (Test0881.instanceCount++));
            i1 = (++i1);
        }
        for (f1 = 9; 316 > f1; f1++) {
            i1 = (--i2);
            vMeth();
            for (i23 = 3; i23 < 82; i23++) {
                Test0881.instanceCount += i23;
                d3 = 1;
                while (++d3 < 2) {
                    bFld = bFld;
                    f = Test0881.instanceCount;
                    i2 = s1;
                    Test0881.instanceCount = i2;
                    Test0881.iArrFld[(int) (f1 - 1)] >>>= i1;
                    i2 *= i24;
                    Test0881.iArrFld[i23 + 1] += (int) f1;
                    i2 *= s1;
                    i2 += (int)((long)d3 ^ i2);
                    Test0881.instanceCount = -94;
                }
                Test0881.fArrFld[i23][i23 - 1] += -27.387F;
                Test0881.instanceCount >>= i2;
                for (i25 = 1; i25 < 2; ++i25) {
                    i26 += 237;
                    i26 += (i25 * i25);
                    if (false) {
                        d4 += 13L;
                    } else {
                        if (bFld) continue;
                        i24 += (-245 + (i25 * i25));
                    }
                    Test0881.iArrFld = Test0881.iArrFld;
                    if (false) break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("f1 i2 i23 = " + Float.floatToIntBits(f1) + "," + i2 + "," + i23);
        FuzzerUtils.out.println("i24 d3 s1 = " + i24 + "," + Double.doubleToLongBits(d3) + "," + s1);
        FuzzerUtils.out.println("i25 i26 d4 = " + i25 + "," + i26 + "," + Double.doubleToLongBits(d4));

        FuzzerUtils.out.println("Test0881.instanceCount Test0881.byFld bFld = " + Test0881.instanceCount + "," + Test0881.byFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0881.iArrFld Test0881.lArrFld Test0881.fArrFld = " + FuzzerUtils.checkSum(Test0881.iArrFld) + ","
                + FuzzerUtils.checkSum(Test0881.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0881.fArrFld)));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0881 _instance = new Test0881();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
