// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0744 {

    public static final int N = 400;

    public static long instanceCount=-6798754999569364367L;
    public int iFld=-5;
    public float fFld=1.805F;
    public boolean bFld=true;
    public byte[][] byArrFld =new byte[N][N];

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, short s) {

        int i11=215;
        int i12=-1;
        int i13=-6;
        int i14=-188;
        int i15=-10;
        int i16=-24949;
        int[] iArr1 =new int[N];
        double d2=0.602;
        double[] dArr =new double[N];
        float f=105.46F;
        byte by1=18;

        FuzzerUtils.init(iArr1, -41399);
        FuzzerUtils.init(dArr, -71.12144);

        i11 &= i11;
        for (i12 = 3; i12 < 126; i12 += 3) {
            i11 = -1;
            for (d2 = i12; d2 < 37; ++d2) {
                for (i15 = 1; i15 < 1; ++i15) {
                    iArr1 = FuzzerUtils.int1array(N, (int)-79);
                    switch (((i15 % 9) * 5) + 25) {
                    case 44:
                        dArr[i15] %= ((long)(f) | 1);
                        f += (((i15 * by1) + i12) - Test0744.instanceCount);
                        break;
                    case 58:
                        by1 += (byte)(((i15 * i11) + l1) - i15);
                    case 62:
                        i14 += i15;
                    case 69:
                        i14 <<= -143;
                        i13 += (18133 + (i15 * i15));
                        i11 += i15;
                        i16 = (int)l1;
                        break;
                    case 48:
                        i11 += (-114 + (i15 * i15));
                        break;
                    case 60:
                        i14 -= i13;
                        break;
                    case 31:
                        i14 -= -39;
                        break;
                    case 39:
                        l1 += (i15 * i15);
                    case 59:
                        i14 %= 10;
                        break;
                    }
                }
            }
        }
        long meth_res = l1 + s + i11 + i12 + i13 + Double.doubleToLongBits(d2) + i14 + i15 + i16 +
            Float.floatToIntBits(f) + by1 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth(int i7) {

        int i8=-1;
        int i9=-91;
        int i10=140;
        int i17=102;
        int i18=13;
        int[] iArr2 =new int[N];
        double d1=0.73353, d3=0.51161;
        short s1=-2133;

        FuzzerUtils.init(iArr2, -14);

        for (i8 = 5; 256 > i8; i8++) {
            for (d1 = 1; d1 < 6; d1 += 2) {
                i10 += (int) ((long) d1 ^ Test0744.instanceCount);
                if (false) {
                    i7 >>>= ((--i7) * iMeth(-4287831497281595931L, s1));
                } else {
                    for (i17 = (int)(d1); i17 < 3; ++i17) {
                        switch ((((i8 >>> 1) % 1) * 5) + 106) {
                        case 109:
                            iArr2[(int)(d1 + 1)] += i9;
                            i18 >>= i7;
                            i9 = i18;
                            i10 += i17;
                            break;
                        default:
                            i10 ^= i9;
                            d3 = Test0744.instanceCount;
                            i7 = i18;
                        }
                        Test0744.instanceCount %= (s1 | 1);
                    }
                }
            }
        }
        long meth_res = i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + s1 + i17 + i18 + Double.doubleToLongBits(d3)
            + FuzzerUtils.checkSum(iArr2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void vMeth(long l, int i, int i1) {

        int i2=-13;
        int i3=138;
        int i4=6;
        int i5=108;
        int i6=-31618;
        int[] iArr =new int[N];
        double d=112.4444;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)23330);
        FuzzerUtils.init(iArr, -1);

        sArr[(iFld >>> 1) % N] <<= (short)iFld;
        for (i2 = 5; 185 > i2; ++i2) {
            i4 = 1;
            do {
                for (i5 = 1; i5 < 1; i5++) {
                    iArr = (iArr = (iArr = iArr));
                    byArrFld[i4][i4 + 1] = (byte) (Test0744.instanceCount + (++fFld));
                    if ((bFld = ((bFld = bFld) || bFld)) != ((bFld = (!bMeth(i4))) || bFld)) {
                        iFld = (int)(fFld + (++d));
                    }
                    fFld = 198;
                    fFld += -5;
                    i += (-14859 + (i5 * i5));
                    i = i;
                    fFld = i5;
                    iFld = -16;
                }
                fFld += (61.212F + (i4 * i4));
            } while (++i4 < 9);
        }
        vMeth_check_sum += l + i + i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        byte by=-4;
        float f1=-85.1010F;
        int i19=-37507;
        int i20=13;
        int i21=9;
        int i22=31924;
        int i23=0;
        int i24=15265;
        int[] iArr3 =new int[N];
        double d4=-84.51975;

        FuzzerUtils.init(iArr3, 28805);

        iFld &= (int) (((iFld += iFld) + (by * Test0744.instanceCount)) - iFld);
        Test0744.instanceCount -= (long) (Test0744.instanceCount - ((by + fFld) - (fFld + iFld)));
        vMeth(Test0744.instanceCount, iFld, iFld);
        for (f1 = 9; f1 < 175; f1++) {
            i19 += (int)f1;
            if (bFld) {
                if (bFld) break;
                i19 -= i19;
            } else {
                Test0744.instanceCount -= iFld;
                for (i20 = 151; i20 > 8; i20 -= 3) {
                    iFld += (int)(5868L + (i20 * i20));
                    i22 = 1;
                    while (++i22 < 4) {
                        i21 *= 6;
                        i21 += i20;
                        fFld -= i21;
                        i19 += (i22 * i20);
                        i21 += (int)-2525353032L;
                    }
                    try {
                        iFld = (iArr3[i20] / -96);
                        iFld = (-193 / iArr3[i20 + 1]);
                        iFld = (i21 / 45);
                    } catch (ArithmeticException a_e) {}
                    d4 = by;
                    i19 += i21;
                }
                i21 += (int)(((f1 * i20) + i22) - i20);
                i23 = 151;
                do {
                    iFld *= i19;
                    try {
                        i21 = (iArr3[i23 - 1] / i20);
                        iFld = (i23 / -248);
                        i21 = (i24 % 60306);
                    } catch (ArithmeticException a_e) {}
                    i19 -= iFld;
                    i19 >>= i20;
                    fFld *= i21;
                    Test0744.instanceCount *= i22;
                    iFld = i21;
                } while (--i23 > 0);
            }
            iArr3[(int)(f1)] -= (int)d4;
        }

        FuzzerUtils.out.println("by f1 i19 = " + by + "," + Float.floatToIntBits(f1) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("d4 i23 i24 = " + Double.doubleToLongBits(d4) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0744.instanceCount iFld fFld = " + Test0744.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("bFld byArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0744 _instance = new Test0744();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
