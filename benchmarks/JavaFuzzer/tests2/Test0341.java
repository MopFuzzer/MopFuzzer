// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0341 {

    public static final int N = 400;

    public static long instanceCount=10L;
    public static double dFld=1.90753;
    public static short sFld=4372;
    public static float fFld=-1.865F;
    public static byte byFld=116;
    public int iFld=7;
    public static short[] sArrFld =new short[N];
    public static double[] dArrFld =new double[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0341.sArrFld, (short) 11326);
        FuzzerUtils.init(Test0341.dArrFld, -1.34292);
        FuzzerUtils.init(Test0341.fArrFld, 0.381F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, int i7) {

        int i8=63;
        int i9=-73;
        int i10=90;
        int i11=37;
        int i13=-6;
        int i14=137;
        int[] iArr =new int[N];
        byte by=125;
        boolean b=false;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(dArr, 1.104017);
        FuzzerUtils.init(lArr, 2286828269529453915L);
        FuzzerUtils.init(iArr, -183);

        for (i8 = 10; i8 < 224; ++i8) {
            dArr[i8 - 1] += i9;
            lArr[i8 - 1] *= by;
            iArr[i8 + 1] -= i9;
            for (i10 = 1; i10 < 8; ++i10) {
                Test0341.instanceCount = Test0341.instanceCount;
                if (b) break;
            }
            iArr[i8 + 1] -= i11;
            i6 <<= (int) Test0341.instanceCount;
            Test0341.instanceCount = i11;
            if (b) break;
            for (i13 = 1; i13 < 8; ++i13) {
                i9 = i11;
                try {
                    i14 = (i8 / 29159);
                    i11 = (78 / iArr[i8 + 1]);
                    i6 = (i9 / 51205);
                } catch (ArithmeticException a_e) {}
                Test0341.dFld = i7;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + by + i10 + i11 + (b ? 1 : 0) + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i4=-10;
        int i5=36772;
        int i15=42;
        int i16=-146;
        int i17=172;
        int i18=8;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 9);

        for (i4 = 2; i4 < 126; ++i4) {
            vMeth2(i5, 57195);
            Test0341.dFld *= Test0341.instanceCount;
            for (i15 = 1; i15 < 13; ++i15) {
                Test0341.sArrFld[i4] += Test0341.sFld;
                i5 += (((i15 * Test0341.instanceCount) + i15) - i16);
                i16 -= i16;
                for (i17 = 1; i17 < 2; ++i17) {
                    i5 -= (int)1.49545;
                    if (i15 != 0) {
                        vMeth1_check_sum += i4 + i5 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    i18 -= (int) Test0341.instanceCount;
                    Test0341.fFld /= ((long) (Test0341.fFld) | 1);
                    i16 %= 22659;
                    i5 = (int) Test0341.fFld;
                    iArr1[i17 - 1] -= -7;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth() {

        int i=19297, i1=11, i2=5, i3=57075, i19=-3, i20=984;
        boolean b1=true;

        for (i = 8; 152 > i; ++i) {
            for (i2 = i; i2 < 11; ++i2) {
                vMeth1();
                for (i19 = i2; i19 < 1; ++i19) {
                    i3 += (int) Test0341.instanceCount;
                    i20 >>= Test0341.byFld;
                    b1 = b1;
                    Test0341.fFld = (float) Test0341.dFld;
                    i1 += i;
                    i20 += (i19 * i19);
                    i20 += (int) Test0341.dFld;
                }
                i20 -= i2;
                Test0341.byFld -= (byte) i20;
                Test0341.instanceCount -= i3;
                Test0341.instanceCount += Test0341.instanceCount;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i19 + i20 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i21=-18193;
        int i22=59012;
        int i23=248;
        int i24=14;
        int i25=-49133;
        int i26=24370;
        int i27=14;
        int i28=3;
        int i29=-3008;
        int i30=133;
        int i31=-61;
        int i32=7076;
        int[] iArr2 =new int[N];
        boolean b2=true;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(iArr2, 55921);
        FuzzerUtils.init(lArr1, 160L);

        vMeth();
        Test0341.byFld = (byte) iFld;
        iFld = (int) Test0341.fFld;
        i21 = 1;
        do {
            for (i22 = 5; i22 < 80; ++i22) {
                iArr2[i22 - 1] = (int) Test0341.instanceCount;
                Test0341.fFld += Test0341.instanceCount;
                for (i24 = 1; i24 < 2; i24++) {
                    Test0341.instanceCount += Test0341.instanceCount;
                    Test0341.instanceCount = 6;
                }
            }
            Test0341.sFld *= (short) 60737;
            for (i26 = 80; 1 < i26; i26--) {
                switch (((i25 >>> 1) % 8) + 113) {
                case 113:
                    i23 <<= i26;
                    break;
                case 114:
                    Test0341.dArrFld[i21] = i27;
                    iFld += (i26 * i26);
                    for (i28 = i26; i28 < 2; ++i28) {
                        i29 = (int) Test0341.instanceCount;
                    }
                    break;
                case 115:
                    for (i30 = i26; i30 < 2; ++i30) {
                        i29 += (int) Test0341.instanceCount;
                        if (false) {
                            Test0341.instanceCount += i30;
                            switch (((i25 >>> 1) % 9) + 56) {
                            case 56:
                            case 57:
                                Test0341.sArrFld[i21] += (short) i23;
                                lArr1 = FuzzerUtils.long2array(N, (long)3642430728L);
                                break;
                            case 58:
                                i31 = (int) Test0341.instanceCount;
                                break;
                            case 59:
                                i23 += i25;
                                i31 = Test0341.sFld;
                                Test0341.fArrFld[i21] -= Test0341.instanceCount;
                                break;
                            case 60:
                                iArr2[i21 - 1] = (int) Test0341.dFld;
                                break;
                            case 61:
                                i29 = i28;
                                break;
                            case 62:
                                b2 = b2;
                                break;
                            case 63:
                                i25 -= -47003;
                            case 64:
                                iArr2[i21 - 1] -= i21;
                                break;
                            }
                        } else if (b2) {
                            i27 -= (int) Test0341.fFld;
                        }
                    }
                    break;
                case 116:
                    i23 = Test0341.byFld;
                case 117:
                    Test0341.dFld += Test0341.instanceCount;
                    break;
                case 118:
                    try {
                        i23 = (i31 / i23);
                        i31 = (iArr2[i21 - 1] / 1236418327);
                        iFld = (iArr2[i26 - 1] % i25);
                    } catch (ArithmeticException a_e) {}
                case 119:
                    i32 += (((i26 * i31) + Test0341.instanceCount) - Test0341.byFld);
                case 120:
                    i32 -= i25;
                    break;
                default:
                    lArr1[(i26 >>> 1) % N] = FuzzerUtils.long1array(N, (long)-8L);
                }
            }
        } while (++i21 < 314);

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 b2 = " + i30 + "," + i31 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i32 iArr2 lArr1 = " + i32 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0341.instanceCount Test0341.dFld Test0341.sFld = " + Test0341.instanceCount + "," +
                Double.doubleToLongBits(Test0341.dFld) + "," + Test0341.sFld);
        FuzzerUtils.out.println("Test0341.fFld Test0341.byFld iFld = " + Float.floatToIntBits(Test0341.fFld) + "," + Test0341.byFld +
            "," + iFld);
        FuzzerUtils.out.println("Test0341.sArrFld Test0341.dArrFld Test0341.fArrFld = " + FuzzerUtils.checkSum(Test0341.sArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0341.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0341.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0341 _instance = new Test0341();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
