// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0526 {

    public static final int N = 400;

    public static long instanceCount=-5210320751404884600L;
    public static boolean bFld=false;
    public static volatile double dFld=93.26790;
    public volatile byte byFld=-8;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0526.iArrFld, -177);
        FuzzerUtils.init(Test0526.fArrFld, -34.38F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(float f2, double d2) {

        int i5=37;
        int i6=-240;
        int i7=2;
        int i8=-7;
        int i9=-69;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -10);

        for (i5 = 10; 161 > i5; ++i5) {
            iArr[i5 - 1] *= (int) Test0526.instanceCount;
        }
        i6 = i6;
        for (i7 = 16; i7 < 344; ++i7) {
            i9 = 1;
            while (++i9 < 5) {
                if (Test0526.bFld) break;
                i6 += (i9 ^ Test0526.instanceCount);
                Test0526.instanceCount >>>= Test0526.instanceCount;
                iArr[i9 - 1] += i6;
                i8 += (((i9 * i6) + i6) - Test0526.instanceCount);
                if (Test0526.bFld) break;
                switch ((i7 % 3) + 107) {
                case 107:
                    iArr[i9 + 1] += (int) Test0526.instanceCount;
                    i6 = i6;
                    i6 += (i9 - Test0526.instanceCount);
                    break;
                case 108:
                    i8 += i9;
                    break;
                case 109:
                    i8 -= -12;
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) + i5 + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(double d1) {

        int i4=-1, i10=-216, i11=38705, i12=9, i13=5, i14=-2;
        float f3=1.784F;
        float[] fArr =new float[N];
        short s=-20459;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(fArr, -126.990F);
        FuzzerUtils.init(lArr1, 56573L);

        fArr[(i4 >>> 1) % N] = (float)dMeth(f3, d1);
        Test0526.iArrFld[(i4 >>> 1) % N] += (int) Test0526.instanceCount;
        Test0526.bFld = Test0526.bFld;
        for (i10 = 3; i10 < 147; i10++) {
            for (i12 = 1; 11 > i12; i12 += 2) {
                i11 += (i12 | (long)f3);
                if (Test0526.bFld) continue;
                lArr1[i10 + 1][i12 + 1] *= 6;
                i11 += (((i12 * i14) + i14) - i14);
                i14 -= -8;
            }
            i13 |= s;
            Test0526.instanceCount *= i14;
            Test0526.iArrFld[i10] -= i4;
            if (true) break;
            Test0526.iArrFld[i10] += i14;
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i4 + Float.floatToIntBits(f3) + i10 + i11 + i12 + i13 + i14 +
            s + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i2, float f, int i3) {

        float f1=0.991F;
        double d3=-19.28082;
        double[] dArr =new double[N];
        int i16=-226, i17=3;
        byte by=24;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1413947326L);
        FuzzerUtils.init(dArr, -58.97672);

        f *= ((-lArr[(i2 >>> 1) % N]) + ((++lArr[(i3 >>> 1) % N]) + (f1 - -59)));
        vMeth(d3);
        Test0526.instanceCount = i3;
        for (int i15 : Test0526.iArrFld) {
            d3 = i3;
            for (i16 = 1; i16 < 4; ++i16) {
                Test0526.instanceCount <<= 152;
                switch (((i16 % 2) * 5) + 8) {
                case 18:
                    switch (((i16 % 6) * 5) + 102) {
                    case 122:
                        switch (((i16 % 8) * 5) + 38) {
                        case 52:
                            i2 = (int) Test0526.instanceCount;
                            i2 = 147;
                            f1 -= 2020;
                            d3 = -61243;
                            break;
                        case 74:
                            dArr[i16 + 1] += i15;
                        case 71:
                            i15 += (((i16 * Test0526.instanceCount) + Test0526.instanceCount) - f1);
                        case 61:
                            Test0526.iArrFld[i16] += 60116;
                            break;
                        case 76:
                            by = (byte)i16;
                            break;
                        case 68:
                            lArr[i16 + 1] >>= i17;
                            break;
                        case 44:
                            Test0526.instanceCount = -1;
                            break;
                        case 51:
                            by += (byte)f1;
                            break;
                        }
                        break;
                    case 126:
                    case 130:
                        i17 = by;
                        break;
                    case 124:
                        Test0526.instanceCount += (((i16 * i16) + i16) - Test0526.instanceCount);
                    case 121:
                        i15 += (((i16 * i17) + i16) - i17);
                        break;
                    case 112:
                        f -= (float)-1.120487;
                        break;
                    default:
                        Test0526.instanceCount += i16;
                    }
                    break;
                case 13:
                    Test0526.instanceCount += (130 + (i16 * i16));
                    break;
                }
            }
        }
        long meth_res = i2 + Float.floatToIntBits(f) + i3 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d3) +
            i16 + i17 + by + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=0.11764;
        double[] dArr1 =new double[N];
        int i=14, i1=22714, i18=103, i19=-17, i20=2, i21=-5;
        float f4=125.653F, f5=84.616F;

        FuzzerUtils.init(dArr1, -2.33532);

        d = 1;
        while (++d < 165) {
            i = 1;
            while (++i < 152) {
                i1 += iMeth(64555, f4, i);
                i1 = i1;
                for (i18 = 1; i18 < 1; i18++) {
                    i1 -= (int)f4;
                    Test0526.dFld += i;
                    if (Test0526.bFld) {
                        Test0526.dFld = i19;
                        Test0526.bFld = Test0526.bFld;
                    } else if (Test0526.bFld) {
                        i1 = -66;
                        Test0526.iArrFld[(int) (d - 1)] += i19;
                    } else if (Test0526.bFld) {
                        i19 += (((i18 * Test0526.instanceCount) + i) - i);
                        dArr1[(int)(d + 1)] *= d;
                    }
                    i19 = (int) Test0526.instanceCount;
                    f4 -= (float) Test0526.dFld;
                    i19 = i1;
                }
                f4 = f5;
                for (i20 = 1; i20 < 1; ++i20) {
                    Test0526.instanceCount *= byFld;
                    switch ((i20 % 3) + 14) {
                    case 14:
                        i19 += i20;
                        break;
                    case 15:
                        byFld = (byte)i19;
                        switch (((i20 % 5) * 5) + 107) {
                        case 111:
                            f5 = Test0526.instanceCount;
                            i19 = (int)-1771108094L;
                        case 120:
                            i21 = -14;
                            try {
                                i21 = (i1 % i21);
                                i19 = (88 / i19);
                                Test0526.iArrFld[(i1 >>> 1) % N] = (-32 % Test0526.iArrFld[i + 1]);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 110:
                        case 108:
                            i21 += (int)f4;
                            Test0526.dFld -= i21;
                            break;
                        case 129:
                            Test0526.instanceCount += (i20 * i20);
                            break;
                        default:
                            i19 += i20;
                        }
                    case 16:
                        Test0526.fArrFld[i20 + 1] += (float) d;
                        break;
                    default:
                        Test0526.iArrFld[(int) (d)] = (int) 20.28407;
                    }
                }
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("f4 i18 i19 = " + Float.floatToIntBits(f4) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f5 i20 i21 = " + Float.floatToIntBits(f5) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0526.instanceCount Test0526.bFld Test0526.dFld = " + Test0526.instanceCount + "," + (Test0526.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(Test0526.dFld));
        FuzzerUtils.out.println("byFld Test0526.iArrFld Test0526.fArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0526.iArrFld)
                + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0526.fArrFld)));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0526 _instance = new Test0526();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
