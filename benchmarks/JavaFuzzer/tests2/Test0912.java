// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0912 {

    public static final int N = 400;

    public static volatile long instanceCount=3273209265L;
    public static byte byFld=59;
    public static int iFld=2221;
    public static volatile float fFld=-119.938F;
    public static int[][] iArrFld =new int[N][N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0912.iArrFld, -15642);
        FuzzerUtils.init(Test0912.lArrFld, -41L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        int i6=0, i7=48, i8=-59323, i9=23458;
        float f1=29.838F;
        boolean b=true;
        double d1=-1.55314;

        for (i6 = 3; 184 > i6; i6++) {
            short s=-30086;
            for (i8 = 9; i8 > 1; i8 -= 3) {
                i5 += (i8 - i9);
                i5 += i8;
                Test0912.iArrFld[i6][i6] = i6;
                f1 *= i9;
            }
            if (b) continue;
            i9 = i8;
            if (b) {
                i7 = (int)f1;
            } else {
                i9 <<= 80;
                s = (short)1.552F;
            }
            f1 += (float)d1;
            i9 = i7;
            Test0912.iArrFld[i6][i6 - 1] = (int) 26873L;
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            Double.doubleToLongBits(d1);
    }

    public static void vMeth(int i1) {

        float f=-112.465F;
        int i2=51;
        int i3=-54;
        int[][] iArr =new int[N][N];
        double d=-94.107679, d2=0.76717;

        FuzzerUtils.init(iArr, -7);

        f *= (i1 + Test0912.instanceCount);
        for (i2 = 11; i2 < 190; ++i2) {
            i3 -= (int)(f % (((long)(--d)) | 1));
            Test0912.instanceCount <<= (iArr[i2 + 1][i2] + -1608525758L);
            i1 <<= (int)((-Math.min(i1, 9)) - d);
            vMeth1(31620, i2);
            Test0912.instanceCount += (((i2 * Test0912.instanceCount) + i2) - i2);
            i1 *= (int) Test0912.instanceCount;
            Test0912.instanceCount += Test0912.byFld;
        }
        d2 = 1;
        while (++d2 < 190) {
            iArr[(int) (d2 - 1)] = Test0912.iArrFld[(int) (d2)];
            iArr[(int)(d2 - 1)][(int)(d2)] += (int)f;
            Test0912.byFld = Test0912.byFld;
            i3 += i1;
            i1 -= i1;
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i2 + i3 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth() {


        vMeth(Test0912.iFld);
        vSmallMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=-10803;
        int i10=14;
        int i11=-10;
        int i12=-49306;
        int[] iArr1 =new int[N];
        boolean b1=true;
        long l=102L;
        short s1=-15092;

        FuzzerUtils.init(iArr1, 57142);

        i = 1;
        while (++i < 397) {
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth();
            Test0912.instanceCount += (i + i);
            Test0912.iFld += i;
            Test0912.iFld = (int) 1.45526;
            Test0912.iFld += Test0912.byFld;
            Test0912.iFld = (int) Test0912.instanceCount;
            switch (((i >>> 1) % 1) + 95) {
            case 95:
                Test0912.lArrFld[i + 1] += (long) Test0912.fFld;
                Test0912.fFld = 1.898F;
                b1 = b1;
            }
            Test0912.iFld = Test0912.iFld;
        }
        Test0912.iFld *= i;
        for (i10 = 340; i10 > 10; i10--) {
            i11 -= (int) Test0912.fFld;
            for (l = 76; l > 3; l -= 3) {
                i12 = -17809;
                Test0912.instanceCount >>= i10;
                i11 += (int)(((l * i11) + i10) - s1);
                Test0912.instanceCount = 52310;
                Test0912.iArrFld[(int) (l + 1)] = Test0912.iArrFld[(int) (l - 1)];
                i12 += (int) (((l * i11) + i11) - Test0912.iFld);
                Test0912.iFld = i12;
            }
            i12 += i12;
            Test0912.fFld *= i11;
        }
        b1 = b1;
        Test0912.instanceCount += s1;
        for (int i13 : iArr1) {
            Test0912.fFld -= Test0912.instanceCount;
            i13 -= i13;
        }

        FuzzerUtils.out.println("i b1 i10 = " + i + "," + (b1 ? 1 : 0) + "," + i10);
        FuzzerUtils.out.println("i11 l i12 = " + i11 + "," + l + "," + i12);
        FuzzerUtils.out.println("s1 iArr1 = " + s1 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0912.instanceCount Test0912.byFld Test0912.iFld = " + Test0912.instanceCount + "," + Test0912.byFld +
                "," + Test0912.iFld);
        FuzzerUtils.out.println("Test0912.fFld Test0912.iArrFld Test0912.lArrFld = " + Float.floatToIntBits(Test0912.fFld) + "," +
                FuzzerUtils.checkSum(Test0912.iArrFld) + "," + FuzzerUtils.checkSum(Test0912.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0912 _instance = new Test0912();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
