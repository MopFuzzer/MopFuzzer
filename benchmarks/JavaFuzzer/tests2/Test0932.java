// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0932 {

    public static final int N = 400;

    public static long instanceCount=-56811L;
    public static volatile float fFld=92.161F;
    public byte byFld=-2;
    public int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0932.lArrFld, -2611423821L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=-99;

        i8 -= 193;
        vMeth2_check_sum += i8;
    }

    public static void vMeth1() {

        int i9=93, i10=110, i11=63541, i12=-3678, i13=127;
        double d=0.129005;
        long l1=-61L;
        long[] lArr =new long[N];
        boolean b=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -83.998F);
        FuzzerUtils.init(lArr, 7702743237015130105L);

        vMeth2();
        i9 = 1;
        while (++i9 < 392) {
            Test0932.fFld += (((i9 * Test0932.instanceCount) + i9) - Test0932.instanceCount);
            for (i10 = 1; i10 < 4; i10++) {
                d = Test0932.instanceCount;
            }
            for (i12 = 1; i12 < 4; i12++) {
                Test0932.instanceCount -= i9;
                d *= i10;
                fArr[i9] += i9;
                l1 = 1;
                while (++l1 < 2) {
                    Test0932.instanceCount -= -41546;
                    i11 += (int)l1;
                    b = b;
                    lArr[i9 - 1] <<= i11;
                    Test0932.fFld /= (i12 | 1);
                }
            }
        }
        vMeth1_check_sum += i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + i13 + l1 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i5, int i6, int i7) {

        int i14=5;
        int i15=66;
        int i16=22638;
        int[][] iArr =new int[N][N];
        byte by=58;
        long l2=8077066164820624194L;
        boolean b1=true;

        FuzzerUtils.init(iArr, 72);

        vMeth1();
        for (i14 = 11; i14 < 237; i14++) {
            Test0932.fFld += ((long) i14 ^ (long) Test0932.fFld);
            try {
                i5 = (i6 / i7);
                i7 = (iArr[i14 - 1][i14] % iArr[i14 - 1][i14]);
                i7 = (i16 % iArr[i14 + 1][i14 + 1]);
            } catch (ArithmeticException a_e) {}
            i16 += (i14 | (long) Test0932.fFld);
            by += (byte) (((i14 * i6) + i6) - Test0932.fFld);
            i16 *= i14;
            l2 = 1;
            while (++l2 < 7) {
                if (b1) {
                    switch (((i14 % 1) * 5) + 67) {
                    case 71:
                        iArr[i14 - 1][i14 + 1] += i6;
                        iArr[(int)(l2)][(int)(l2)] <<= (int)l2;
                        Test0932.instanceCount += l2;
                        Test0932.lArrFld[i14] = i16;
                        break;
                    default:
                        Test0932.instanceCount += i5;
                    }
                } else {
                    i15 += (int)l2;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i14 + i15 + i16 + by + l2 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-57955, i1=-11, i2=13906, i3=-9037, i4=1, i17=-12, i18=-114, i19=-10, i20=4653, i21=68, i22=54219;
        long l=155L, l3=4958961981232987049L;
        float f=-2.64F;
        double d1=2.13865, d2=-68.116881;
        boolean b2=false;

        for (i = 14; i < 279; i++) {
            i2 = 1;
            do {
                for (i3 = 1; i3 < 1; ++i3) {
                    i4 = (int) (((0.330F - (-96 + (i1 >>> i1))) * i4) * Test0932.instanceCount);
                    l *= (long)(f++);
                    iArrFld[i3 - 1] |= (i4++);
                    vMeth(0, i, i1);
                    i1 += (-7431 + (i3 * i3));
                    i4 += (i3 - l);
                    i4 >>= i2;
                }
            } while (++i2 < 95);
            i4 += (27473 + (i * i));
            i1 = (int)d1;
            i17 = 1;
            while ((i17 += 3) < 95) {
                i4 -= i;
                l3 = 1;
                do {
                    d1 += i2;
                    i1 *= (int)d1;
                    iArrFld[i - 1] = i;
                } while (++l3 < 4);
                Test0932.lArrFld[i] = l;
            }
        }
        for (i18 = 3; i18 < 333; ++i18) {
            Test0932.instanceCount = i1;
            i20 = 1;
            while (++i20 < 76) {
                for (d2 = i18; d2 < 1; d2++) {
                    Test0932.instanceCount *= Test0932.instanceCount;
                    Test0932.lArrFld[(int) (d2)] = byFld;
                    if (b2) break;
                    i21 += (int)d2;
                }
            }
            i22 = 1;
            do {
                Test0932.instanceCount += i4;
                i21 ^= i19;
            } while (++i22 < 76);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 l = " + i3 + "," + i4 + "," + l);
        FuzzerUtils.out.println("f d1 i17 = " + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d1) + "," +
            i17);
        FuzzerUtils.out.println("l3 i18 i19 = " + l3 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 d2 i21 = " + i20 + "," + Double.doubleToLongBits(d2) + "," + i21);
        FuzzerUtils.out.println("b2 i22 = " + (b2 ? 1 : 0) + "," + i22);

        FuzzerUtils.out.println("Test0932.instanceCount Test0932.fFld byFld = " + Test0932.instanceCount + "," +
                Float.floatToIntBits(Test0932.fFld) + "," + byFld);
        FuzzerUtils.out.println("iArrFld Test0932.lArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0932.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0932 _instance = new Test0932();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
