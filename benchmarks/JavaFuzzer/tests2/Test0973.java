// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0973 {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public static int iFld=-6;
    public static byte byFld=32;
    public static volatile float fFld=84.918F;
    public volatile boolean bFld=false;
    public int iFld1=0;
    public double dFld=-1.38216;

    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static int iMeth(double d) {

        long l1=-9L;
        int i=-216;

        for (l1 = 9; l1 < 269; l1++) {
            Test0973.iFld <<= (int) (++Test0973.instanceCount);
        }
        long meth_res = Double.doubleToLongBits(d) + l1 + i;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l2, int i8) {

        int i9=-164;
        int i10=10;
        int i11=16916;
        int i12=-11;
        int i13=101;
        int i14=14;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 27287);

        for (i9 = 6; 363 > i9; i9++) {
            i8 += (int)l2;
            i8 += i10;
            l2 = i8;
            l2 += (i9 * i9);
            iArr1[i9] ^= 80;
            try {
                iArr1[i9] = (-92 % i10);
                i8 = (Test0973.iFld % -1934300351);
                iArr1[i9 + 1] = (i10 % i9);
            } catch (ArithmeticException a_e) {}
        }
        i8 = 15;
        i11 = 1;
        while (++i11 < 238) {
            i12 = 1;
            do {
                iArr1[i11] &= Test0973.iFld;
                for (i13 = 1; i13 > 1; i13--) {
                    Test0973.iFld *= i8;
                    i14 = -62807;
                    i8 = (int)l2;
                }
            } while (++i12 < 7);
        }
        vMeth_check_sum += l2 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1);
    }

    public int iMeth1(int i7) {

        double d1=1.8877;
        short s1=16148;
        int i15=0;
        int i16=-11814;
        int i17=190;
        int i18=-6;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -49);

        iArr[(i7 >>> 1) % N] = Math.max((int) ((Test0973.iFld * Test0973.iFld) >> (long) (d1 * Test0973.iFld)),
                (int) ((-(Test0973.instanceCount++)) - (Test0973.iFld |= i7)));
        i7 -= (i7 + s1);
        vMeth(Test0973.instanceCount, 164);
        i15 = 1;
        do {
            for (i16 = 1; i16 < 7; ++i16) {
                if (bFld) {
                    Test0973.iFld -= i15;
                    switch (((i16 % 2) * 5) + 93) {
                    case 100:
                        Test0973.iFld = Test0973.iFld;
                        i18 = 1;
                        do {
                            i17 += (((i18 * Test0973.instanceCount) + i18) - i17);
                            Test0973.fFld -= i15;
                            Test0973.iFld += i18;
                            i7 = s1;
                            Test0973.byFld ^= (byte) i15;
                        } while (++i18 < 2);
                        break;
                    case 103:
                        Test0973.fFld *= i15;
                        break;
                    }
                }
            }
        } while (++i15 < 243);
        long meth_res = i7 + Double.doubleToLongBits(d1) + s1 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public float fMeth(long l) {

        short s=-4587;
        short[] sArr =new short[N];
        int i1=2;
        int i2=3;
        int i3=-138;
        int i4=149;
        int i5=52634;
        int i6=19845;
        int[] iArr2 =new int[N];
        float f=0.711F;
        double d2=-1.48059;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(sArr, (short)-3458);
        FuzzerUtils.init(iArr2, 11);
        FuzzerUtils.init(byArr, (byte)-25);

        Test0973.iFld += (int) (Math.sqrt(Test0973.iFld - Test0973.iFld) + Math.min(Test0973.iFld++, (int) (-(Test0973.instanceCount -
                Test0973.instanceCount))));
        s >>>= (short)(-iMeth(-92.38473));
        for (i1 = 3; 302 > i1; i1++) {
            for (i3 = 1; i3 < 6; i3++) {
                for (i5 = i1; i5 < 2; i5++) {
                    Test0973.iFld += (i5 + i5);
                    sArr[i1] *= (short) ((f *= (-(--Test0973.byFld))) * ((i3 - l) + iMeth1(Test0973.iFld)));
                    Test0973.fFld *= i2;
                    i4 ^= Test0973.iFld;
                    d2 = s;
                    i6 >>= i6;
                    i2 <<= 11;
                    iFld1 |= -10719;
                    try {
                        iFld1 = (iArr2[i3 + 1] % i3);
                        i4 = (-37 % Test0973.iFld);
                        iArr2[i5 + 1] = (iFld1 % 48965);
                    } catch (ArithmeticException a_e) {}
                }
                byArr[i1 + 1] *= (byte)i6;
            }
        }
        long meth_res = l + s + i1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=0.345F;
        int i19=-41;
        int i20=-1;
        int i21=-57340;
        int i22=4970;
        int i23=10;
        int i24=199;
        int i25=-6;
        int i26=-24529;
        int i27=161;
        int i28=7;
        int[] iArr3 =new
                    int[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr3, 187);
        FuzzerUtils.init(dArr, 0.64793);

        fMeth(Test0973.instanceCount);
        Test0973.instanceCount = iFld1;
        Test0973.iFld *= Test0973.iFld;
        for (f1 = 9; f1 < 160; f1 += 2) {
            Test0973.iFld <<= (int) Test0973.instanceCount;
            if (true) {
                if (bFld) continue;
                iArr3[(int)(f1 - 1)] = i20;
                for (i21 = (int)(f1); i21 < 334; ++i21) {
                    iArr3[(int) (f1 + 1)] = (int) Test0973.instanceCount;
                    dArr[i21 + 1] = dArr[i21];
                    i20 = iFld1;
                    i19 >>>= i19;
                    i19 = iFld1;
                    if (bFld) break;
                    for (i23 = 1; 1 > i23; i23++) {
                        i24 = i21;
                        iFld1 *= i22;
                        Test0973.fFld += i23;
                        i20 += (int)9055370785613226506L;
                    }
                }
                Test0973.instanceCount = Test0973.instanceCount;
            } else if (bFld) {
                Test0973.iFld = (int) Test0973.instanceCount;
            } else {
                dFld += i20;
                for (i25 = 8; 334 > i25; ++i25) {
                    i24 -= (int)-90.857F;
                    for (i27 = 1; i27 < 2; i27++) {
                        i20 += -42;
                        dFld += Test0973.fFld;
                        i22 -= (int) Test0973.instanceCount;
                        i22 = i26;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f1 i19 i20 = " + Float.floatToIntBits(f1) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr3 = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0973.instanceCount Test0973.iFld Test0973.byFld = " + Test0973.instanceCount + "," + Test0973.iFld +
                "," + Test0973.byFld);
        FuzzerUtils.out.println("Test0973.fFld bFld iFld1 = " + Float.floatToIntBits(Test0973.fFld) + "," + (bFld ? 1 : 0) +
            "," + iFld1);
        FuzzerUtils.out.println("dFld = " + Double.doubleToLongBits(dFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0973 _instance = new Test0973();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 fMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
