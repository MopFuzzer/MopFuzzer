// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0358 {

    public static final int N = 400;

    public static volatile long instanceCount=2653876893139973959L;
    public static volatile short sFld=-9859;
    public static byte byFld=1;
    public float fFld=0.962F;
    public byte byFld1=-8;
    public static volatile boolean bFld=true;
    public static int iFld=1;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0358.iArrFld, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3) {

        int i4=8;
        int i5=-196;
        int i6=174;
        int i7=-11;
        int i8=-104;
        int i9=13145;
        int i10=-4;
        int[] iArr =new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 3428);

        i3 |= i3;
        for (i4 = 13; i4 < 388; i4++) {
            b = b;
            i5 &= Test0358.sFld;
            i5 -= i3;
            i6 = 1;
            while (++i6 < 5) {
                iArr[i4] <<= -11;
            }
            for (i7 = 1; i7 < 5; ++i7) {
                Test0358.byFld += (byte) i4;
                i8 -= -15020;
                for (i9 = 1; i9 < 2; i9++) {
                    i10 = -5;
                    i8 += (i9 ^ Test0358.instanceCount);
                    if (false) break;
                    iArr[i7 - 1] = (int) Test0358.instanceCount;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + (b ? 1 : 0) + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d) {

        int i1=12;
        int i2=16639;
        int i11=-12;
        int i12=-182;
        int i13=-3;
        int i14=2;
        int[] iArr1 =new int[N];
        float f=-41.649F;

        FuzzerUtils.init(iArr1, 59374);

        for (i1 = 11; i1 < 180; i1++) {
            f *= iMeth(i1);
            i2 = i1;
            for (i11 = 1; i11 < 9; ++i11) {
                iArr1[i11 + 1] = i2;
                Test0358.instanceCount <<= Test0358.byFld;
                Test0358.instanceCount = Test0358.sFld;
                try {
                    iArr1[i11 + 1] = (47 % i11);
                    i12 = (i11 / i2);
                    i12 = (i11 % -550455652);
                } catch (ArithmeticException a_e) {}
                f = i12;
                i12 *= (int) Test0358.instanceCount;
                i12 += (((i11 * Test0358.sFld) + i11) - i12);
                for (i13 = 2; i13 > 1; i13--) {
                    i2 -= (int) Test0358.instanceCount;
                    Test0358.byFld += (byte) (i13 * i13);
                    Test0358.sFld >>= (short) i12;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i1 + i2 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i=8;
        int i16=5;
        int i17=-21866;
        int[] iArr2 =new int[N];
        double d1=-89.60519;

        FuzzerUtils.init(iArr2, -44490);

        Test0358.instanceCount -= i;
        vMeth1(d1);
        switch (((i >>> 1) % 10) + 96) {
        case 96:
        case 97:
            for (int i15 : iArr2) {
                if (false) continue;
                for (i16 = 1; i16 < 4; i16++) {
                    i15 >>= i15;
                    i15 += (((i16 * Test0358.byFld) + i15) - i);
                    Test0358.instanceCount = i16;
                    i15 &= i15;
                    switch (((i16 % 1) * 5) + 102) {
                    case 106:
                        Test0358.instanceCount = i15;
                        break;
                    default:
                        i17 += -38;
                    }
                    i += (int)(-315580285L + (i16 * i16));
                }
                i15 = i16;
            }
            break;
        case 98:
            Test0358.instanceCount = i;
            break;
        case 99:
            i = i17;
            break;
        case 100:
            Test0358.byFld += (byte) -217L;
        case 101:
            d1 -= i17;
            break;
        case 102:
            iArr2[(-14722 >>> 1) % N] >>= (int)-29L;
            break;
        case 103:
            i = i16;
            break;
        case 104:
            i /= (int)(i16 | 1);
            break;
        case 105:
            i17 = (int)-1.91546;
            break;
        default:
            i <<= (int) Test0358.instanceCount;
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d1) + i16 + i17 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i18=-2, i19=-40, i20=-9134, i21=-43888, i22=40, i23=8, i24=52, i25=3, i26=3, i27=47671;
        double d2=86.48758;
        long[] lArr =new long[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr, -2L);
        FuzzerUtils.init(fArr, 0.432F);

        vMeth();
        for (i18 = 4; i18 < 390; ++i18) {
            lArr[i18 - 1] = -2456798072699712798L;
            fFld -= i18;
            byFld1 += (byte)i19;
            for (i20 = 65; i20 > 2; i20 -= 3) {
                switch ((i20 % 10) + 8) {
                case 8:
                    fFld *= 23069;
                    i21 = (int)d2;
                    break;
                case 9:
                    for (i22 = 1; 4 > i22; ++i22) {
                        if (Test0358.bFld) break;
                        lArr[i20 + 1] = Test0358.instanceCount;
                        i19 *= Test0358.byFld;
                        try {
                            i21 = (i21 / i22);
                            Test0358.iArrFld[i18] = (i22 % -40877);
                            i21 = (2133413356 % i22);
                        } catch (ArithmeticException a_e) {}
                        i21 ^= i23;
                    }
                    switch ((i20 % 1) + 4) {
                    case 4:
                        i23 += (((i20 * i24) + i18) - i23);
                    default:
                        i25 = 1;
                        while (++i25 < 4) {
                            Test0358.instanceCount = i22;
                            i23 = (int)fFld;
                            fFld = i25;
                            Test0358.iArrFld[i18 + 1] = 32275;
                            i24 &= i20;
                        }
                        i19 = i24;
                        Test0358.sFld += (short) i25;
                        switch ((((i19 >>> 1) % 4) * 5) + 10) {
                        case 29:
                        case 30:
                            Test0358.instanceCount += (i20 + Test0358.instanceCount);
                            break;
                        case 16:
                            for (i26 = i20; i26 < 4; i26++) {
                                i24 -= i21;
                                fFld -= fFld;
                            }
                            break;
                        case 18:
                            if (false) continue;
                            break;
                        default:
                            fFld *= i24;
                        }
                    }
                    break;
                case 10:
                    d2 = i21;
                    break;
                case 11:
                    i21 >>= (int) Test0358.instanceCount;
                case 12:
                    if (Test0358.bFld) break;
                    break;
                case 13:
                    fArr = fArr;
                    break;
                case 14:
                    Test0358.iFld += (-14 + (i20 * i20));
                case 15:
                    i27 += (i20 - i23);
                    break;
                case 16:
                    Test0358.bFld = true;
                    break;
                case 17:
                    fArr = fArr;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d2 i22 = " + i21 + "," + Double.doubleToLongBits(d2) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 lArr = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0358.instanceCount Test0358.sFld Test0358.byFld = " + Test0358.instanceCount + "," + Test0358.sFld +
                "," + Test0358.byFld);
        FuzzerUtils.out.println("fFld byFld1 Test0358.bFld = " + Float.floatToIntBits(fFld) + "," + byFld1 + "," +
                (Test0358.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0358.iFld Test0358.iArrFld = " + Test0358.iFld + "," + FuzzerUtils.checkSum(Test0358.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0358 _instance = new Test0358();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
