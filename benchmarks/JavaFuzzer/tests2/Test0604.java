// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0604 {

    public static final int N = 400;

    public static long instanceCount=-8937780568692069362L;
    public static double dFld=-62.7126;
    public static volatile int iFld=110;
    public static int iFld1=54808;
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0604.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-7;
        int i5=-22;
        int[] iArr =new int[N];
        boolean b=false;
        short s=1581;

        FuzzerUtils.init(iArr, 12);

        iArr[(i4 >>> 1) % N] ^= i4;
        b = b;
        i4 -= (int) Test0604.instanceCount;
        i4 = (int)-48685L;
        Test0604.instanceCount = 132;
        i4 = (int)38186L;
        i5 = 1;
        do {
            s += (short)i5;
            iArr[i5 + 1] = i4;
            Test0604.instanceCount += i5;
            i4 *= i5;
        } while (++i5 < 149);
        i4 -= (int) Test0604.instanceCount;
        vMeth2_check_sum += i4 + (b ? 1 : 0) + i5 + s + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(double d, int i3) {


        vMeth2();
        vMeth1_check_sum += Double.doubleToLongBits(d) + i3;
    }

    public static void vMeth(int i, int i1) {

        float f=4.331F;
        int i2=-9162;
        int i6=-34198;
        int i7=54137;
        int i8=20399;
        int[] iArr1 =new int[N];
        double d1=-2.63824;

        FuzzerUtils.init(iArr1, -191);

        for (f = 13; f < 285; ++f) {
            vMeth1(Test0604.dFld, i2);
            for (i6 = 1; i6 < 6; i6++) {
                iArr1[i6] <<= i1;
                i8 = 1;
                do {
                    int i9=-82;
                    i1 = Test0604.iFld;
                    try {
                        i9 = (iArr1[i6 + 1] % -121);
                        i2 = (i8 % i2);
                        i2 = (Test0604.iFld1 % 37748);
                    } catch (ArithmeticException a_e) {}
                    i1 = i2;
                    switch ((i8 % 1) + 24) {
                    case 24:
                        iArr1[i6] >>= (int)35L;
                        switch ((((i7 >>> 1) % 1) * 5) + 76) {
                        case 80:
                            i2 = i2;
                            d1 *= i9;
                            i9 *= i1;
                        }
                    }
                    Test0604.instanceCount += (long) f;
                } while (++i8 < 2);
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i2 + i6 + i7 + i8 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i10=9;
        int i11=-7;
        int i12=-222;
        int i13=26497;
        int i14=102;
        int i15=6;
        int i16=4;
        int i17=56538;
        int[] iArr2 =new int[N];
        boolean b1=true;
        float f1=-102.149F;
        byte by=119;
        long l=43294L;

        FuzzerUtils.init(iArr2, 23545);

        vMeth(12335, Test0604.iFld);
        Test0604.instanceCount |= -861L;
        for (i10 = 15; 310 > i10; ++i10) {
            Test0604.instanceCount = Test0604.iFld1;
            Test0604.instanceCount >>= i11;
            Test0604.iFld = (int) Test0604.instanceCount;
            Test0604.instanceCount -= i10;
            for (i12 = 3; i12 < 85; i12++) {
                Test0604.bArrFld[i10] = b1;
                Test0604.iFld1 += i12;
            }
            for (i14 = 4; 85 > i14; ++i14) {
                for (i16 = 1; 2 > i16; ++i16) {
                    short s1=6597;
                    iArr2[(-10814 >>> 1) % N] = i15;
                    if (b1) {
                        f1 += (i16 * i16);
                    }
                    switch (((Test0604.iFld >>> 1) % 2) + 118) {
                    case 118:
                        i11 += (int) Test0604.instanceCount;
                        Test0604.instanceCount += (i16 - i14);
                        i17 ^= by;
                        break;
                    case 119:
                        Test0604.iFld1 *= (int) f1;
                        i15 += i16;
                        i11 = i13;
                        break;
                    default:
                        Test0604.instanceCount += (i16 + i14);
                    }
                    iArr2[i14 + 1] = (int) Test0604.instanceCount;
                    Test0604.instanceCount = s1;
                    l &= Test0604.instanceCount;
                }
                switch (((i14 % 10) * 5) + 49) {
                case 68:
                    Test0604.instanceCount += (((i14 * Test0604.iFld1) + l) - i14);
                    break;
                case 73:
                    i17 += i15;
                    iArr2[i10 + 1] -= (int)f1;
                case 88:
                    iArr2[(i12 >>> 1) % N] -= i14;
                    break;
                case 84:
                    i11 = Test0604.iFld;
                    break;
                case 69:
                    Test0604.iFld += i10;
                    break;
                case 94:
                    i13 -= (int)f1;
                    break;
                case 62:
                    i13 += (int)-55L;
                    break;
                case 91:
                    i13 >>= i11;
                    break;
                case 85:
                case 60:
                    iArr2[i10 - 1] *= i16;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 b1 i14 = " + i13 + "," + (b1 ? 1 : 0) + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("f1 by l = " + Float.floatToIntBits(f1) + "," + by + "," + l);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0604.instanceCount Test0604.dFld Test0604.iFld = " + Test0604.instanceCount + "," +
                Double.doubleToLongBits(Test0604.dFld) + "," + Test0604.iFld);
        FuzzerUtils.out.println("Test0604.iFld1 Test0604.bArrFld = " + Test0604.iFld1 + "," + FuzzerUtils.checkSum(Test0604.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0604 _instance = new Test0604();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
