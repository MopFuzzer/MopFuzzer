// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0682 {

    public static final int N = 400;

    public static long instanceCount=19L;
    public static boolean bFld=true;
    public static float fFld=0.739F;
    public static int iFld=2;
    public static byte byFld=75;
    public static int iFld1=-4;
    public long lFld=-11L;
    public double dFld=56.79422;
    public static long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0682.lArrFld, 558623758L);
        FuzzerUtils.init(Test0682.fArrFld, 0.395F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i3, int i4, double d1) {

        int i5=61650;
        int i6=20706;
        int i7=-49187;
        int[] iArr =new int[N];
        double d2=-1.3650;
        double[] dArr =new double[N];
        short s1=-23679;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-21383);
        FuzzerUtils.init(iArr, 9);
        FuzzerUtils.init(dArr, 59.109503);

        i3 = (int) Test0682.instanceCount;
        Test0682.bFld = Test0682.bFld;
        Test0682.instanceCount = i4;
        for (i5 = 9; i5 < 271; i5++) {
            sArr[i5] = (short)i6;
            for (d2 = 1; d2 < 6; d2++) {
                i6 += (int)(d2 * d2);
                i7 = (int) Test0682.fFld;
            }
            i6 = i3;
            i3 += i5;
            i3 = (int)d1;
        }
        iArr[(0 >>> 1) % N] += (int)2525556124L;
        s1 += (short) Test0682.fFld;
        i3 = (int) Test0682.instanceCount;
        dArr[(i3 >>> 1) % N] -= i6;
        long meth_res = i3 + i4 + Double.doubleToLongBits(d1) + i5 + i6 + Double.doubleToLongBits(d2) + i7 + s1 +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i2=173;
        int i8=58504;
        int i9=49028;
        int i10=-15371;
        int[][] iArr1 =new int[N][N];
        double d=70.95456;
        float f=0.56F;
        short s=-7832;

        FuzzerUtils.init(iArr1, -25533);

        switch ((((-(i2 + i2)) >>> 1) % 4) + 53) {
        case 53:
            i2 *= (int)((++d) + (i2--));
        case 54:
            f = (i2 * s);
            i2 = (int)(fMeth(90, i2, d) + i2);
            iArr1[(i8 >>> 1) % N][(i2 >>> 1) % N] = (int) Test0682.instanceCount;
            break;
        case 55:
            i9 = 172;
            do {
                iArr1[i9 + 1][i9 + 1] >>>= i2;
                s = (short) Test0682.instanceCount;
                i10 = 9;
                while ((i10 -= 2) > 0) {
                    Test0682.lArrFld[i9] = Test0682.instanceCount;
                    iArr1[i9 - 1][i9] = i2;
                    i2 *= (int) Test0682.instanceCount;
                    f += i8;
                    f *= -48;
                    i8 = i2;
                }
            } while (--i9 > 0);
        case 56:
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + s + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        int i11=-47622;
        long l=-7184946407316683567L;

        vMeth();
        i11 /= 5;
        Test0682.fFld -= i11;
        Test0682.fArrFld[(Test0682.iFld >>> 1) % N] = l;
        i11 = Test0682.iFld;
        long meth_res = i11 + l;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-64284;
        int i1=3143;
        int i12=-33841;
        int i13=-16367;
        int i14=-9093;
        int i15=-8;
        int[][] iArr2 =new int[N][N];
        float f1=1.698F;
        short s2=-10835;

        FuzzerUtils.init(iArr2, -34907);

        for (i = 12; i < 394; i++) {
            i1 = (int) (Math.sqrt(1.41667) + Test0682.instanceCount);
            i1 += ((i - iMeth()) + 98);
            Test0682.instanceCount += (i + i1);
            Test0682.iFld += i;
            for (i12 = 4; i12 < 66; i12++) {
                Test0682.instanceCount = Test0682.instanceCount;
                for (i14 = 2; i14 > 1; i14--) {
                    switch ((i % 10) + 74) {
                    case 74:
                        if (false) continue;
                        break;
                    case 75:
                        i15 += (i14 | Test0682.byFld);
                        break;
                    case 76:
                        i15 /= (int) (Test0682.instanceCount | 1);
                        break;
                    case 77:
                        if (Test0682.bFld) continue;
                        break;
                    case 78:
                        i13 = (int)f1;
                        break;
                    case 79:
                        Test0682.bFld = Test0682.bFld;
                        iArr2[i14][i + 1] = (int)5L;
                        Test0682.iFld1 += i14;
                        break;
                    case 80:
                        iArr2[i14][i12] -= i12;
                        Test0682.instanceCount += lFld;
                        break;
                    case 81:
                        Test0682.instanceCount |= Test0682.iFld1;
                        i1 += Test0682.iFld1;
                        i1 <<= i;
                    case 82:
                        if (true) continue;
                        dFld = s2;
                        Test0682.instanceCount += (long) f1;
                        break;
                    case 83:
                        if (Test0682.bFld) {
                            try {
                                Test0682.iFld1 = (iArr2[i][i + 1] % i14);
                                i1 = (i14 / -1817303118);
                                i13 = (iArr2[i12 + 1][i14] / 62711);
                            } catch (ArithmeticException a_e) {}
                            Test0682.iFld1 += (i14 * i14);
                        } else {
                            i13 = i;
                            i15 = i1;
                        }
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i12 = " + i + "," + i1 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("f1 s2 iArr2 = " + Float.floatToIntBits(f1) + "," + s2 + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0682.instanceCount Test0682.bFld Test0682.fFld = " + Test0682.instanceCount + "," + (Test0682.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0682.fFld));
        FuzzerUtils.out.println("Test0682.iFld Test0682.byFld Test0682.iFld1 = " + Test0682.iFld + "," + Test0682.byFld + "," + Test0682.iFld1);
        FuzzerUtils.out.println("lFld dFld Test0682.lArrFld = " + lFld + "," + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0682.lArrFld));
        FuzzerUtils.out.println("Test0682.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0682.fArrFld)));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0682 _instance = new Test0682();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
