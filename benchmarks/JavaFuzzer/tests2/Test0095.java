// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:16 2023
public class Test0095 {

    public static final int N = 400;

    public static long instanceCount=8327195486184698834L;
    public static float fFld=0.576F;
    public static int iFld=106;
    public static int iFld1=-3;
    public static short sFld=-25725;
    public static volatile int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0095.iArrFld, -24745);
        FuzzerUtils.init(Test0095.lArrFld, -3185182322492117205L);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i14=12, i15=-217, i16=-35076, i17=-15688, i18=157, i19=232, i20=61393;
        double d=-2.65128, d1=55.49621;

        for (i14 = 3; i14 < 125; ++i14) {
            Test0095.iArrFld[i14 + 1] = -190;
        }
        for (d = 127; d > 3; d -= 3) {
            switch ((int)(((d % 9) * 5) + 76)) {
            case 99:
                Test0095.fFld -= i14;
                i15 += (int)(d * d);
                switch (((i14 >>> 1) % 2) + 60) {
                case 60:
                    Test0095.instanceCount >>>= i14;
                    i15 = i16;
                    i16 += (-127 + (d * d));
                    for (i17 = 2; i17 < 37; ++i17) {
                        for (i19 = 1; i19 < 2; i19++) {
                            d1 = 124.8985;
                            d1 = -10;
                            Test0095.iFld = i20;
                        }
                    }
                case 61:
                    i18 = i17;
                    break;
                }
                break;
            case 83:
                Test0095.iArrFld[(int) (d - 1)] = i19;
                break;
            case 89:
                i18 = i15;
            case 110:
                Test0095.iFld1 += i16;
                break;
            case 90:
                Test0095.iArrFld[(int) (d + 1)] = i17;
                break;
            case 79:
                Test0095.instanceCount = Test0095.sFld;
                break;
            case 105:
                Test0095.iFld1 -= i19;
                break;
            case 92:
                Test0095.instanceCount = Test0095.instanceCount;
                break;
            case 87:
                Test0095.sFld += (short) Test0095.iFld;
            }
        }
        long meth_res = i14 + i15 + Double.doubleToLongBits(d) + i16 + i17 + i18 + i19 + i20 +
            Double.doubleToLongBits(d1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f1, int i7) {

        float f2=104.342F;
        int i8=-44982;
        int i9=40511;
        int i10=-32043;
        int i11=41160;
        int i12=13;
        int i13=-60418;
        int i21=13310;
        int i22=6;
        int[] iArr =new int[N];
        double d2=-1.58758;
        boolean b1=true;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, 34868);
        FuzzerUtils.init(lArr, -10L);

        for (f2 = 2; f2 < 128; f2++) {
            i9 = 1;
            do {
                if (i8 != 0) {
                    vMeth_check_sum += Float.floatToIntBits(f1) + i7 + Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 +
                        i12 + i13 + Double.doubleToLongBits(d2) + i21 + i22 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr)
                        + FuzzerUtils.checkSum(lArr);
                    return;
                }
            } while (++i9 < 12);
        }
        for (i10 = 13; i10 < 320; ++i10) {
            iArr[i10] *= (int) Math.min(Test0095.instanceCount++, lArr[i10 - 1][i10 + 1]);
            i7 ^= 10;
            for (i12 = 1; 5 > i12; ++i12) {
                iArr[i12 + 1] = iMeth();
                d2 -= i10;
                for (i21 = 1; i21 < 2; i21++) {
                    Test0095.fFld += 2.164F;
                    if (b1) continue;
                    Test0095.sFld -= (short) 4682;
                    Test0095.sFld += (short) i21;
                    lArr[i21][i21] <<= 30572;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i7 + Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(d2) + i21 + i22 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static float fMeth(int i6, long l, boolean b) {

        int i23=-236, i24=-104, i25=-14, i26=176, i27=11518;

        vMeth(Test0095.fFld, Test0095.iFld);
        i23 = 1;
        do {
            for (i24 = 1; i24 < 4; i24++) {
                Test0095.iFld += (i24 * i24);
                l *= l;
                l = Test0095.iFld1;
                l += (-2627097198493319628L + (i24 * i24));
                Test0095.sFld += (short) i24;
                for (i26 = 1; i26 < 2; ++i26) {
                    l = l;
                    l = Test0095.instanceCount;
                    Test0095.iArrFld[i24] = i27;
                    Test0095.instanceCount += i26;
                    i27 <<= (int) Test0095.instanceCount;
                    Test0095.fFld += (i26 + i24);
                }
            }
        } while (++i23 < 379);
        long meth_res = i6 + l + (b ? 1 : 0) + i23 + i24 + i25 + i26 + i27;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=51268, i1=-43734, i2=-10, i3=-92, i4=-2, i5=75, i28=14, i29=1;
        float f=-26.368F;
        boolean b2=true;
        double d3=-1.89254, d4=-2.63901;
        byte by=-116;

        for (i = 269; 8 < i; --i) {
            for (i2 = 1; i2 < 96; ++i2) {
                f += 214L;
                Test0095.instanceCount -= 6051;
                for (i4 = 2; i4 > 1; i4--) {
                    i3 = (int) (((i3++) + (i2 + i5)) - fMeth(i2, Test0095.instanceCount, b2));
                    Test0095.instanceCount += (i4 * i4);
                }
                b2 = b2;
                switch ((i2 % 8) + 123) {
                case 123:
                case 124:
                    for (d3 = 1; d3 < 2; ++d3) {
                        if (b2) continue;
                        Test0095.sFld = (short) i3;
                        i5 &= by;
                        i5 += (int)d3;
                        Test0095.lArrFld = FuzzerUtils.long1array(N, (long) -1799220145L);
                    }
                    break;
                case 125:
                    d4 += i5;
                    break;
                case 126:
                    Test0095.instanceCount = Test0095.instanceCount;
                    break;
                case 127:
                    i28 = (int) Test0095.instanceCount;
                    i28 += (int)(-1L + (i2 * i2));
                    break;
                case 128:
                    Test0095.instanceCount += i3;
                    d4 *= -14;
                    Test0095.iArrFld[i] += Test0095.iFld1;
                    f += 391055569661417915L;
                    break;
                case 129:
                case 130:
                }
                i29 = 1;
                while (++i29 < 2) {
                    i3 = i5;
                    if (b2) {
                        by -= (byte)i5;
                    }
                    Test0095.instanceCount = -220;
                }
                i1 -= i4;
                i1 += (int) Test0095.fFld;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f i4 = " + i3 + "," + Float.floatToIntBits(f) + "," + i4);
        FuzzerUtils.out.println("i5 b2 d3 = " + i5 + "," + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i28 by d4 = " + i28 + "," + by + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i29 = " + i29);

        FuzzerUtils.out.println("Test0095.instanceCount Test0095.fFld Test0095.iFld = " + Test0095.instanceCount + "," +
                Float.floatToIntBits(Test0095.fFld) + "," + Test0095.iFld);
        FuzzerUtils.out.println("Test0095.iFld1 Test0095.sFld Test0095.iArrFld = " + Test0095.iFld1 + "," + Test0095.sFld + "," +
                FuzzerUtils.checkSum(Test0095.iArrFld));
        FuzzerUtils.out.println("Test0095.lArrFld = " + FuzzerUtils.checkSum(Test0095.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0095 _instance = new Test0095();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
