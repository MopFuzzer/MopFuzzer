// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0076 {

    public static final int N = 400;

    public static long instanceCount=119L;
    public static double dFld=-46.83129;
    public volatile float fFld=74.472F;
    public volatile short sFld=-20350;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0076.lArrFld, -6L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1, int i6, long l2) {

        int i7=-38009;
        int i8=115;
        int i9=-7;
        int i10=9;
        int i11=-247;
        int i12=40484;
        int i13=-41;
        int i14=59689;
        int[] iArr1 =new int[N];
        boolean b=false;
        byte by=-111;

        FuzzerUtils.init(iArr1, -62696);

        for (i7 = 9; i7 < 216; i7 += 3) {
            b = b;
            i6 = -193;
            for (i9 = 1; i9 < 22; i9++) {
                Test0076.lArrFld[i7] |= i8;
                by += (byte)(i9 * i9);
                iArr1[i7] -= -251;
                i6 %= (int)(i8 | 1);
                i6 %= (int) (Test0076.instanceCount | 1);
            }
            f1 = f1;
            l2 = l2;
            for (i11 = 1; 22 > i11; i11++) {
                for (i13 = 1; i13 < 2; i13++) {
                    iArr1[i13 + 1] <<= (int) Test0076.instanceCount;
                    i6 = (int)l2;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i6 + l2 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + by + i11 + i12 + i13 +
            i14 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1) {

        short s=28305;
        int i2=-4;
        int i3=11784;
        int i4=-62207;
        int i5=-18169;
        int[] iArr =new int[N];
        long l1=4696342599618826526L;
        float f=-2.406F;

        FuzzerUtils.init(iArr, -6);

        s += (short)-39349L;
        for (i2 = 16; i2 < 396; ++i2) {
            i4 = 1;
            do {
                for (l1 = 1; l1 < 1; ++l1) {
                    i3 = (++i5);
                    f += (9 + (l1 * l1));
                    switch ((((Math.max(14, -37315) >>> 1) % 8) * 5) + 107) {
                    case 120:
                        f = 0;
                    case 130:
                        Test0076.dFld = -47;
                        i5 += (int)(((l1 * i2) + i5) - f);
                        break;
                    case 118:
                        Test0076.lArrFld[i2 + 1] = (long) (Test0076.dFld -= (iArr[(int) (l1)] = iMeth(48.1002F, i1,
                                Test0076.instanceCount)));
                        break;
                    case 127:
                        Test0076.instanceCount = i1;
                        f = Test0076.instanceCount;
                        s += (short)(9 + (l1 * l1));
                        i5 <<= i5;
                        break;
                    case 133:
                        iArr = iArr;
                        break;
                    case 139:
                        Test0076.dFld *= l1;
                    case 143:
                    case 146:
                        i3 = (int) Test0076.dFld;
                        break;
                    default:
                        iArr[(int)(l1)] = i1;
                    }
                }
            } while (++i4 < 4);
        }
        vMeth_check_sum += i1 + s + i2 + i3 + i4 + l1 + i5 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(long l) {

        int i15=5;

        vMeth(i15);
        l >>= i15;
        vSmallMeth_check_sum += l + i15;
    }

    public void mainTest(String[] strArr1) {

        int i=-112;
        int i16=162;
        int i17=-14;
        int i18=-139;
        int i19=0;
        int[] iArr2 =new int[N];
        double d=2.111916, d1=-54.51973;
        long l3=723040088L;
        byte by1=-9;
        byte[] byArr =new byte[N];
        boolean b1=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr2, -93);
        FuzzerUtils.init(fArr, -84.723F);
        FuzzerUtils.init(byArr, (byte)32);

        i = 1;
        do {
            for (int smallinvoc = 0; smallinvoc < 62; smallinvoc++) vSmallMeth(Test0076.instanceCount);
        } while (++i < 323);
        for (d = 2; d < 158; ++d) {
            Test0076.instanceCount += Test0076.instanceCount;
            if (b1) {
                for (l3 = 161; l3 > 4; l3 -= 3) {
                    Test0076.instanceCount = i;
                    for (i18 = 1; 4 > i18; i18++) {
                        if (false) {
                            switch (((i18 >>> 1) % 3) + 56) {
                            case 56:
                                Test0076.dFld -= i;
                                i17 >>= i;
                                try {
                                    i17 = (iArr2[(int)(l3 + 1)] % i19);
                                    i19 = (iArr2[i18 + 1] % iArr2[(int)(l3)]);
                                    i16 = (-17570 % i16);
                                } catch (ArithmeticException a_e) {}
                                break;
                            case 57:
                                i16 -= (int)-1.40403;
                                break;
                            case 58:
                                fFld -= Test0076.instanceCount;
                                sFld += (short)(i18 * i18);
                                i16 >>= -155;
                                Test0076.instanceCount += (i18 - i18);
                                break;
                            default:
                                switch (((i >>> 1) % 8) + 68) {
                                case 68:
                                    try {
                                        i17 = (-17945 % i17);
                                        i19 = (i / i18);
                                        i16 = (iArr2[(int)(l3 + 1)] % 214);
                                    } catch (ArithmeticException a_e) {}
                                    break;
                                case 69:
                                case 70:
                                    switch (((i >>> 1) % 10) + 2) {
                                    case 2:
                                        Test0076.instanceCount += (-146 + (i18 * i18));
                                        i19 -= (int) Test0076.instanceCount;
                                        iArr2[(int)(l3)] = i18;
                                        break;
                                    case 3:
                                        i16 = (int)-7726194703877509392L;
                                        Test0076.instanceCount = by1;
                                        i17 = i16;
                                        i17 = 41124;
                                        break;
                                    case 4:
                                        i16 = i;
                                        i16 = (int)d1;
                                        break;
                                    case 5:
                                        i16 += i;
                                        break;
                                    case 6:
                                        i16 += 64877;
                                    case 7:
                                        i17 /= (int)((long)(fFld) | 1);
                                        break;
                                    case 8:
                                        fArr[(int)(d + 1)] = i18;
                                        break;
                                    case 9:
                                        fFld = Test0076.instanceCount;
                                        break;
                                    case 10:
                                        iArr2[i18 - 1] = i;
                                        break;
                                    case 11:
                                        byArr = byArr;
                                    }
                                    break;
                                case 71:
                                    iArr2[i18 - 1] += i18;
                                case 72:
                                    i16 += (i18 * i18);
                                    break;
                                case 73:
                                    iArr2 = FuzzerUtils.int1array(N, (int)-74);
                                    break;
                                case 74:
                                    i16 += (i18 - i19);
                                    break;
                                case 75:
                                    i19 = i17;
                                    break;
                                }
                            }
                        } else if (b1) {
                            i16 -= i16;
                        }
                    }
                }
            } else if (true) {
                i19 *= (int) Test0076.dFld;
            } else {
                try {
                    i19 = (i16 % -583997193);
                    i17 = (iArr2[(int)(d - 1)] / 181);
                    i17 = (-40068 / i18);
                } catch (ArithmeticException a_e) {}
            }
        }

        FuzzerUtils.out.println("i d i16 = " + i + "," + Double.doubleToLongBits(d) + "," + i16);
        FuzzerUtils.out.println("l3 i17 i18 = " + l3 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 by1 d1 = " + i19 + "," + by1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("b1 iArr2 fArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0076.instanceCount Test0076.dFld fFld = " + Test0076.instanceCount + "," +
                Double.doubleToLongBits(Test0076.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("sFld Test0076.lArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test0076.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0076 _instance = new Test0076();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
