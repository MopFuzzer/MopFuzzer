// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0482 {

    public static final int N = 400;

    public static long instanceCount=7727904343051399835L;
    public short sFld=29920;
    public byte byFld=-50;
    public static byte[] byArrFld =new byte[N];
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0482.byArrFld, (byte) -63);
        FuzzerUtils.init(Test0482.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, float f1) {

        int i6=-46222;
        int i7=41769;
        int i8=-57;
        int i9=16;
        int i10=11;
        int i11=15018;
        int i12=-45632;
        int[] iArr1 =new int[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -40477);
        FuzzerUtils.init(lArr, -17225L);

        for (i6 = 1; i6 < 320; ++i6) {
            if (i7 != 0) {
                vMeth2_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + i10 + i11 + i12 +
                    FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
                return;
            }
            for (i8 = i6; i8 < 5; i8++) {
                iArr1[i8 + 1] += i5;
                i9 -= (int) Test0482.instanceCount;
            }
            i9 *= i5;
            for (i10 = 1; i10 < 5; ++i10) {
                lArr[i10 - 1] >>>= i6;
                i12 = 1;
                while (++i12 < 2) {
                    i9 = (int) Test0482.instanceCount;
                    Test0482.instanceCount = 0L;
                    i5 -= (int)f1;
                    iArr1[i12] += (int)f1;
                    Test0482.instanceCount = Test0482.instanceCount;
                }
                i11 += (i10 * i10);
            }
        }
        vMeth2_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth1(int i1, int i2, float f) {

        int i3=41237, i4=6, i13=1;
        float f2=-54.574F;
        boolean b1=false;
        long l=-1647969799104481234L;

        i1 = sFld;
        for (i3 = 10; i3 < 377; i3++) {
            if (false) {
                f += (i3 - Test0482.instanceCount);
                vMeth2(i1, -46.345F);
            }
            f2 = 5;
            do {
                i1 += (int)(f2 - i4);
                f += f2;
            } while (--f2 > 0);
            i2 = (int)3133609694L;
            i4 %= (int)(i1 | 1);
            b1 = b1;
            i4 += (i3 * i3);
            for (l = 1; l < 5; l++) {
                i13 = i13;
                i4 = -17370;
            }
        }
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f) + i3 + i4 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) + l +
            i13;
    }

    public void vMeth(boolean b, int i) {

        float f3=59.107F;
        byte by=-107;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, -7);

        iArr[(i >>> 1) % N][(i >>> 1) % N] = i;
        vMeth1(i, i, f3);
        f3 = by;
        vMeth_check_sum += (b ? 1 : 0) + i + Float.floatToIntBits(f3) + by + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        boolean b2=true;
        int i14=9277, i15=58, i16=-44, i17=-182, i18=12, i19=38404, i20=-7, i21=107, i22=-10, i23=-38, i24=-4;
        double d=-35.18900;
        float f4=47.983F;

        vMeth(b2, i14);
        for (i15 = 5; i15 < 317; ++i15) {
            Test0482.byArrFld[i15] &= (byte) -135L;
            Test0482.instanceCount -= Test0482.instanceCount;
            b2 = b2;
            for (i17 = 3; i17 < 81; i17++) {
                for (i19 = 1; 2 > i19; i19++) {
                    i18 = i18;
                    i20 += (i19 | i20);
                    i18 <<= (int) Test0482.instanceCount;
                    Test0482.iArrFld[i15 + 1][i17] %= (int) ((long) (d) | 1);
                    i20 += 56884;
                    i20 = i19;
                    Test0482.iArrFld[i19 - 1][i15] *= (int) Test0482.instanceCount;
                    Test0482.instanceCount += (i19 | byFld);
                }
                i16 += i19;
                i16 += (int) Test0482.instanceCount;
                b2 = b2;
                if (true) continue;
                i16 = i18;
            }
            i16 /= (int) (Test0482.instanceCount | 1);
            switch ((i15 % 7) + 90) {
            case 90:
                i18 += i17;
            case 91:
                for (i21 = 2; i21 < 81; i21++) {
                    i20 >>= i18;
                    try {
                        Test0482.iArrFld[i15 - 1][i15 + 1] = (152 % Test0482.iArrFld[i21][i21]);
                        i20 = (i22 / -40262);
                        Test0482.iArrFld[i21][i15 - 1] = (i19 / i16);
                    } catch (ArithmeticException a_e) {}
                    Test0482.instanceCount = Test0482.instanceCount;
                    i23 = 1;
                    while (++i23 < 2) {
                        i14 ^= (int) Test0482.instanceCount;
                    }
                    Test0482.iArrFld = Test0482.iArrFld;
                }
                break;
            case 92:
                f4 = i16;
                break;
            case 93:
                if (b2) break;
                break;
            case 94:
                i24 += i15;
                break;
            case 95:
                i16 *= i21;
                break;
            case 96:
                Test0482.iArrFld[i15 + 1] = Test0482.iArrFld[i15 - 1];
            }
        }

        FuzzerUtils.out.println("b2 i14 i15 = " + (b2 ? 1 : 0) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 d = " + i19 + "," + i20 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f4 i24 = " + Float.floatToIntBits(f4) + "," + i24);

        FuzzerUtils.out.println("Test0482.instanceCount sFld byFld = " + Test0482.instanceCount + "," + sFld + "," + byFld);
        FuzzerUtils.out.println("Test0482.byArrFld Test0482.iArrFld = " + FuzzerUtils.checkSum(Test0482.byArrFld) + "," +
                FuzzerUtils.checkSum(Test0482.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0482 _instance = new Test0482();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
