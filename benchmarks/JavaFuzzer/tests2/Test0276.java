// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0276 {

    public static final int N = 400;

    public static long instanceCount=-34784L;
    public static byte byFld=31;
    public static double dFld=0.25507;
    public float fFld=-2.327F;
    public volatile short[] sArrFld =new short[N];
    public static int[][] iArrFld =new int[N][N];
    public volatile double[] dArrFld =new double[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0276.iArrFld, -1);
        FuzzerUtils.init(Test0276.lArrFld, -2009679009L);
    }

    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i3) {

        float f=10.104F;
        int i4=-55262;
        int[] iArr =new int[N];
        double d1=72.12121;
        double[] dArr =new double[N];
        short s1=-25488;

        FuzzerUtils.init(iArr, 7);
        FuzzerUtils.init(dArr, 119.81695);

        i3 = (int)f;
        i3 += -20;
        Test0276.iArrFld[(i3 >>> 1) % N][(i3 >>> 1) % N] += i3;
        Test0276.iArrFld[(-7 >>> 1) % N][(i3 >>> 1) % N] >>= -34490;
        i3 = i4;
        f *= i3;
        d1 /= ((long)(f) | 1);
        i4 += (int)d1;
        for (int i5 : iArr) {
            d1 -= i3;
            i4 = i5;
            i4 <<= s1;
            iArr[(-7753 >>> 1) % N] = (int)3231678127L;
            i4 = (int)-1L;
        }
        i3 += (int)d1;
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + i4 + Double.doubleToLongBits(d1) + s1 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static float fMeth(int i2, double d) {

        int i6=13, i7=161, i8=-14, i9=4;
        float f1=-2.16F;
        boolean b=true;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-52);

        vMeth(i2);
        Test0276.iArrFld[(i2 >>> 1) % N][(i2 >>> 1) % N] <<= Test0276.byFld;
        i2 += i2;
        Test0276.iArrFld[(i2 >>> 1) % N][(i2 >>> 1) % N] = 58;
        i2 -= -1;
        for (i6 = 6; i6 < 332; ++i6) {
            for (i8 = 1; 5 > i8; i8++) {
                byArr[i8 - 1] += (byte)-149;
                f1 = Test0276.instanceCount;
                i7 <<= -92;
                if (i9 != 0) {
                }
                i9 += (i8 * i8);
            }
            if (b) continue;
        }
        i2 -= (int)1.355F;
        f1 = Test0276.instanceCount;
        long meth_res = i2 + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(byArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static long lMeth(long l, int i, int i1) {


        Test0276.instanceCount = (long) fMeth(i1, Test0276.dFld);
        long meth_res = l + i + i1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=72;
        int i10=-13527, i11=149, i12=11, i13=-17518, i14=-7388, i15=13, i16=-3, i17=-67;
        boolean b1=false;

        for (short s : sArrFld) {
            by += (byte) lMeth(Test0276.instanceCount, i10, i10);
            s = (short)i10;
            for (i11 = 63; i11 > 2; i11--) {
                i10 *= (int)8052413327838300508L;
                i12 = Test0276.byFld;
                i12 %= (int)((long)(fFld) | 1);
                i10 = s;
                Test0276.iArrFld[i11][i11 - 1] = (int) Test0276.instanceCount;
                i10 += (i11 - Test0276.instanceCount);
                Test0276.instanceCount += (i11 * i11);
                i12 = i10;
                if (b1) break;
                for (i13 = i11; i13 < 2; i13++) {
                    i14 += (int)-31.817F;
                }
            }
            i15 = 1;
            do {
                dArrFld[i15 + 1] -= Test0276.instanceCount;
            } while (++i15 < 63);
            switch (((i10 >>> 1) % 8) + 80) {
            case 80:
                i12 -= (int) Test0276.instanceCount;
                i10 += -4;
            case 81:
                for (i16 = 2; i16 < 63; i16++) {
                    b1 = b1;
                    Test0276.iArrFld[i16 + 1][i16] = -30;
                    i17 >>>= (int) Test0276.instanceCount;
                }
            case 82:
                i12 += (int) Test0276.dFld;
                i14 -= i17;
                if (b1) {
                    Test0276.lArrFld[(i10 >>> 1) % N] = -6L;
                    fFld *= Test0276.instanceCount;
                }
                break;
            case 83:
                i17 += i14;
            case 84:
                i17 -= (int) Test0276.instanceCount;
                break;
            case 85:
                i17 *= 35273;
            case 86:
                fFld *= 20417L;
                break;
            case 87:
                dArrFld = dArrFld;
            default:
                i12 += i16;
            }
        }

        FuzzerUtils.out.println("by i10 i11 = " + by + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 b1 i13 = " + i12 + "," + (b1 ? 1 : 0) + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 = " + i17);

        FuzzerUtils.out.println("Test0276.instanceCount Test0276.byFld Test0276.dFld = " + Test0276.instanceCount + "," + Test0276.byFld +
                "," + Double.doubleToLongBits(Test0276.dFld));
        FuzzerUtils.out.println("fFld sArrFld Test0276.iArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(sArrFld) + "," + FuzzerUtils.checkSum(Test0276.iArrFld));
        FuzzerUtils.out.println("dArrFld Test0276.lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) +
                "," + FuzzerUtils.checkSum(Test0276.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0276 _instance = new Test0276();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
