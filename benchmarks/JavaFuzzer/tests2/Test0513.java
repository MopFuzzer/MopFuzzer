// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0513 {

    public static final int N = 400;

    public static long instanceCount=1L;
    public int iFld=51146;
    public static boolean bFld=true;
    public static short sFld=-23913;
    public static float[] fArrFld =new float[N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0513.fArrFld, -2.103F);
        FuzzerUtils.init(Test0513.byArrFld, (byte) -23);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8, int i9) {

        int i10=160, i11=-7113, i12=0, i13=158, i14=6, i15=11, i16=31231;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, 4422349676792790007L);

        for (i10 = 2; i10 < 234; ++i10) {
            lArr1[i10 + 1][i10 - 1] = i8;
            i9 += (i10 * i10);
        }
        i12 = 233;
        do {
            i9 += i12;
            for (i13 = 1; 20 > i13; i13++) {
                double d1=2.110935;
                i11 += (((i13 * i12) + Test0513.instanceCount) - i10);
                i14 += (int) Test0513.instanceCount;
                i14 *= (int) Test0513.instanceCount;
                d1 -= Test0513.instanceCount;
                Test0513.bFld = Test0513.bFld;
                i9 += (((i13 * i14) + i8) - Test0513.instanceCount);
                for (i15 = 2; i15 > 1; i15--) {
                    d1 += i15;
                    Test0513.instanceCount += (i15 | Test0513.instanceCount);
                }
            }
        } while ((i12 -= 3) > 0);
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i5, int i6, double d) {

        int i17=-47693;
        int i18=4;
        int i19=69;
        int i20=-13;
        int[] iArr1 =new int[N];
        float f=-43.6F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -239L);
        FuzzerUtils.init(iArr1, 180);

        lArr[(i5 >>> 1) % N] >>= (Integer.reverseBytes(--iArr1[(i6 >>> 1) % N]) | (i6 - i6));
        try {
            Test0513.instanceCount -= Math.max(i6--, iArr1[(i5 >>> 1) % N]);
            Test0513.instanceCount *= Long.reverseBytes(Test0513.instanceCount);
            Test0513.instanceCount = 235;
            vMeth1(i6, i6, i5);
            for (i17 = 5; i17 < 226; ++i17) {
                iArr1[i17] += (int)f;
            }
            for (i19 = 8; 224 > i19; i19++) {
                i18 -= (int)d;
                Test0513.instanceCount += (-15899 + (i19 * i19));
                i20 -= i17;
                i20 = i5;
                lArr[i19 + 1] >>= 35805;
                i5 = (int) Test0513.instanceCount;
            }
        }
        catch (ArithmeticException exc1) {
            f += -20.165F;
        }
        vMeth_check_sum += i5 + i6 + Double.doubleToLongBits(d) + i17 + i18 + Float.floatToIntBits(f) + i19 + i20 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(long l) {

        int i2=94, i3=-62426, i4=14, i21=-122, i22=20188;
        double d2=1.17884;
        float f1=117.572F;

        i2 = 346;
        while (--i2 > 0) {
            for (i3 = 5; i3 > 1; i3--) {
                i4 += i3;
                vMeth(i3, i4, d2);
                f1 -= i2;
                f1 -= i3;
                for (i21 = 1; 2 > i21; ++i21) {
                    switch ((i3 % 2) + 87) {
                    case 87:
                        i4 <<= (int)4280635183833110096L;
                        i4 += i21;
                    case 88:
                        i4 >>= (int) Test0513.instanceCount;
                        if (true) break;
                        break;
                    default:
                        f1 = 58543L;
                        d2 += i4;
                    }
                    i22 += (i21 * i21);
                }
            }
        }
        long meth_res = l + i2 + i3 + i4 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) + i21 + i22;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-173;
        int i23=-54465;
        int i24=-9114;
        int i25=-222;
        int i26=-11;
        int[] iArr =new int[N];
        byte by=59;
        float f4=80.725F;
        double d3=-44.386;

        FuzzerUtils.init(iArr, 9);

        i = 346;
        while ((i -= 2) > 0) {
            iFld |= (int)(lMeth(2961403486377465348L) + -202);
            if (Test0513.bFld) break;
            Test0513.sFld += (short) (i | Test0513.instanceCount);
            i23 = 1;
            do {
                iArr = iArr;
                switch ((i23 % 5) + 117) {
                case 117:
                    by = (byte)iFld;
                    break;
                case 118:
                    i24 = 1;
                    while (++i24 < 1) {
                        float f3=-81.596F;
                        Test0513.bFld = Test0513.bFld;
                        by += (byte)i;
                        iFld &= Test0513.sFld;
                        Test0513.instanceCount >>= Test0513.instanceCount;
                        iFld += iFld;
                        if (Test0513.bFld) {
                            iFld = iFld;
                        } else {
                            Test0513.fArrFld[i24 - 1] = (float) 47.68921;
                            iFld = i24;
                            f3 += -234;
                        }
                        iFld >>= i;
                    }
                    iFld += (i23 - i24);
                    break;
                case 119:
                    for (i25 = i23; i25 < 1; ++i25) {
                        long l1=-1636872296L;
                        Test0513.instanceCount = i25;
                        iFld = (int) Test0513.instanceCount;
                        iArr[i23] = i26;
                        Test0513.byArrFld[i23] -= (byte) f4;
                        switch ((i25 % 7) + 66) {
                        case 66:
                            i26 = (int) Test0513.instanceCount;
                            d3 = l1;
                            iFld *= iFld;
                        case 67:
                            i26 /= (int)((long)(d3) | 1);
                            break;
                        case 68:
                            Test0513.sFld += (short) (-64098 + (i25 * i25));
                            break;
                        case 69:
                            Test0513.instanceCount -= i25;
                            break;
                        case 70:
                            iArr[i25 + 1] -= -22838;
                            break;
                        case 71:
                            iFld += (((i25 * i24) + f4) - i);
                            break;
                        case 72:
                            f4 *= 47891;
                            break;
                        }
                    }
                    break;
                case 120:
                    iFld = i;
                case 121:
                    if (false) break;
                    break;
                default:
                    f4 = (float)-106.124239;
                }
            } while (++i23 < 145);
        }

        FuzzerUtils.out.println("i i23 by = " + i + "," + i23 + "," + by);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f4 d3 iArr = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d3) + "," +
            FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0513.instanceCount iFld Test0513.bFld = " + Test0513.instanceCount + "," + iFld + "," +
                (Test0513.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0513.sFld Test0513.fArrFld Test0513.byArrFld = " + Test0513.sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0513.fArrFld)) + "," + FuzzerUtils.checkSum(Test0513.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0513 _instance = new Test0513();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
