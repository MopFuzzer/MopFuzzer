// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:54 2023
public class Test0898 {

    public static final int N = 400;

    public static long instanceCount=7625457031099771551L;
    public float fFld=2.363F;
    public volatile short sFld=-2152;
    public boolean bFld=false;
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0898.dArrFld, 8.97882);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i10=-24296, i11=6, i12=59441, i13=-2229, i14=-196;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 62531L);

        for (i10 = 6; i10 < 224; ++i10) {
            i11 -= i11;
            for (i12 = 7; i12 > i10; i12 -= 3) {
                i11 = (int) Test0898.instanceCount;
                lArr[i10] = 0;
                i14 = 1;
                do {
                    float f1=-2.967F;
                    i13 += (((i14 * i10) + Test0898.instanceCount) - i13);
                    i11 &= 20122;
                    i13 -= (int)f1;
                    i13 *= i13;
                    i13 <<= i10;
                    i13 = 13904;
                    Test0898.instanceCount -= i14;
                    i11 = (int) Test0898.instanceCount;
                } while (++i14 < 1);
                i13 = i12;
            }
        }
        vMeth2_check_sum += i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(float f, int i2, int i3) {

        int i4=147;
        int i5=-52792;
        int i6=4;
        int i7=-14;
        int i8=-91;
        int i9=84;
        int i15=-1;
        int i16=71;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 1280);

        i3 = (i4 * ((i3 - i3) + (++i3)));
        iArr[(i5 >>> 1) % N] *= (int) (Math.min((int) (i2 = (int) Test0898.instanceCount), (int) (f - -115)) -
                (Double.longBitsToDouble(Test0898.instanceCount) + (f - i4)));
        for (i6 = 22; i6 < 359; ++i6) {
            for (i8 = 1; i8 < 5; ++i8) {
                Test0898.dArrFld[i8] -= Test0898.instanceCount;
                Test0898.dArrFld[i6] += iArr[i6];
                i9 += (((i8 * i8) + i3) - Test0898.instanceCount);
                i2 = (i4--);
                vMeth2();
                Test0898.instanceCount = Test0898.instanceCount;
                i4 = i8;
                for (i15 = 2; i15 > i6; i15 -= 3) {
                    i16 >>>= i3;
                    i2 += (((i15 * i7) + i3) - i6);
                }
                iArr = iArr;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i15 + i16 +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(int i1) {

        int i17=9;
        int i18=19244;
        int i19=26537;
        int i20=-122;
        int i21=13;
        int i22=-156;
        int i23=120;
        int[][] iArr1 =new int[N][N];
        boolean b=false;
        short s=1523;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 2.789F);
        FuzzerUtils.init(iArr1, -181);

        vMeth1(fFld, i1, i1);
        i1 -= (int)fFld;
        i17 = 1;
        while (++i17 < 215) {
            for (i18 = 1; i18 < 7; ++i18) {
                for (i20 = i17; 2 > i20; ++i20) {
                    fArr[i17] += i17;
                    Test0898.instanceCount = i17;
                    if (b) continue;
                }
                i19 += (int) Test0898.instanceCount;
                for (i22 = 1; i22 < 2; ++i22) {
                    s ^= (short)i23;
                    switch (((i17 % 9) * 5) + 25) {
                    case 65:
                        i21 %= (int)(i17 | 1);
                        i1 += (i22 ^ Test0898.instanceCount);
                        i1 -= i17;
                    case 64:
                        fFld -= i23;
                    case 45:
                        i23 += i22;
                        break;
                    case 35:
                        i1 *= (int)fFld;
                        break;
                    case 57:
                        iArr1 = iArr1;
                        break;
                    case 61:
                        i23 = i17;
                        break;
                    case 31:
                        if (b) break;
                        break;
                    case 26:
                        i1 *= (int) Test0898.instanceCount;
                        break;
                    case 37:
                        i23 = (int)93.557F;
                        break;
                    default:
                        try {
                            iArr1[i22 - 1][i17 - 1] = (i18 % -2120658273);
                            i23 = (iArr1[i17][i22 + 1] % -65132);
                            i21 = (i21 % -12119);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i17 + i18 + i19 + i20 + i21 + (b ? 1 : 0) + i22 + i23 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-14;
        int i24=-10;
        int i25=-104;
        int i26=-10;
        int i27=-8334;
        int i28=22928;
        int i29=9;
        int i30=236;
        int i31=-56653;
        int[] iArr2 =new int[N];
        double d=1.125917, d1=0.92975;

        FuzzerUtils.init(iArr2, -254);

        i = 1;
        while (++i < 253) {
            vMeth(i);
            iArr2[i] += (int) Test0898.instanceCount;
            i24 -= (int)d;
            i24 = i;
            i24 -= (int)d;
            d = sFld;
        }
        d1 = 1;
        while (++d1 < 192) {
            i25 = 1;
            do {
                byte by=86;
                i24 = i;
                i24 -= (int)d1;
                i26 = 1;
                while (++i26 < 1) {
                    i24 |= i;
                }
                by += (byte)(((i25 * i26) + i24) - i24);
                i24 |= i;
                i24 += (int)fFld;
                by <<= by;
                i24 |= sFld;
                i24 = (int) Test0898.instanceCount;
                i24 >>>= (int)6L;
            } while (++i25 < 131);
            switch ((int)((d1 % 2) + 29)) {
            case 29:
                for (i27 = 7; i27 < 131; i27++) {
                    i24 += (int)fFld;
                    iArr2[(i24 >>> 1) % N] = i25;
                }
                i29 = 1;
                while (++i29 < 131) {
                    i28 += (((i29 * i25) + i28) - Test0898.instanceCount);
                    if (bFld) {
                        for (i30 = 1; 1 > i30; ++i30) {
                            fFld = i27;
                            sFld >>= (short)i27;
                        }
                    } else {
                        i28 = -33857;
                    }
                }
                break;
            case 30:
            }
        }

        FuzzerUtils.out.println("i i24 d = " + i + "," + i24 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("d1 i25 i26 = " + Double.doubleToLongBits(d1) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 iArr2 = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0898.instanceCount fFld sFld = " + Test0898.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + sFld);
        FuzzerUtils.out.println("bFld Test0898.dArrFld = " + (bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0898.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0898 _instance = new Test0898();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
