// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0674 {

    public static final int N = 400;

    public static long instanceCount=3963909810545571323L;
    public static float fFld=2.632F;
    public static double dFld=50.35603;
    public static boolean bFld=true;
    public static volatile byte byFld=-16;
    public static int iFld=-29;
    public long[] lArrFld =new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i7=-24;
        int i8=14;
        int i9=1;
        int i10=-4;
        int i11=-57767;
        int[] iArr1 =new int[N];
        float f=0.246F;

        FuzzerUtils.init(iArr1, -242);

        for (i7 = 176; i7 > 7; i7 -= 2) {
            short s=25219;
            s = (short)i8;
            for (i9 = 1; 18 > i9; i9++) {
                i10 *= (int) Test0674.fFld;
                iArr1[i7] <<= i9;
                i10 *= -27390;
                iArr1[i7 + 1] = i9;
                for (f = 1; 2 > f; ++f) {
                    iArr1[i9 - 1] ^= i10;
                    i10 = i11;
                }
                Test0674.instanceCount += i9;
            }
            i11 *= i9;
            s = (short)197;
        }
        iArr1[(i7 >>> 1) % N] -= (int) Test0674.dFld;
        long meth_res = i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i6=22700;
        int i12=36869;
        int i13=-14;
        int i14=-6;
        int i15=130;
        int i16=227;
        int i17=236;
        int[][] iArr2 =new int[N][N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -29905);

        i6 ^= (int)lMeth();
        bArr[(i6 >>> 1) % N] = Test0674.bFld;
        i6 >>= 152;
        for (i12 = 8; i12 < 157; i12++) {
            for (i14 = 1; i14 < 11; i14++) {
                Test0674.dFld = i13;
                Test0674.instanceCount *= -3046170388309679537L;
                if (Test0674.bFld) continue;
                i6 <<= (int) Test0674.instanceCount;
                for (i16 = 1; 2 > i16; i16++) {
                    Test0674.byFld = (byte) 75.95645;
                    iArr2[i12 - 1][i14] = (int)43.91203;
                    Test0674.instanceCount = Test0674.instanceCount;
                }
                Test0674.byFld += (byte) 2458214364510549671L;
                i17 += i13;
            }
        }
        vMeth_check_sum += i6 + i12 + i13 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i4) {

        int i5=-41205;
        int i18=6;
        int i19=6;
        int i20=30469;
        int i21=-166;
        int i22=12;
        int i23=-116;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, -94);

        i5 = 350;
        while ((i5 -= 2) > 0) {
            vMeth();
            for (i18 = 1; i18 < 9; ++i18) {
                i20 = 1;
                while (++i20 < 2) {
                    Test0674.fFld += 12;
                    Test0674.byFld += (byte) Test0674.instanceCount;
                    Test0674.dFld -= Test0674.instanceCount;
                }
                i21 = 1;
                do {
                    iArr3 = iArr3;
                    i4 += (int) Test0674.fFld;
                    i4 *= i5;
                } while (++i21 < 2);
                for (i22 = 1; i22 < 2; i22++) {
                    try {
                        i19 = (74 / i5);
                        i4 = (i18 / -14);
                        i23 = (-33613 % i19);
                    } catch (ArithmeticException a_e) {}
                    Test0674.fFld *= Test0674.instanceCount;
                    i4 = i23;
                }
            }
        }
        long meth_res = i4 + i5 + i18 + i19 + i20 + i21 + i22 + i23 + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0;
        int i1=-2330;
        int i2=10;
        int i3=-19237;
        int i24=8308;
        int i25=-9562;
        int[] iArr =new int[N];
        double d=-1.11879, d1=1.65814;
        byte[] byArr =new byte[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr, -35847);
        FuzzerUtils.init(byArr, (byte)107);
        FuzzerUtils.init(fArr, -18.682F);

        i = 1;
        do {
            Test0674.instanceCount >>= (long) ((iArr[i] - (++d)) * ((i1++) * -239));
            for (i2 = 3; i2 < 102; i2++) {
                d = Math.min((int)((i3 * i2) - 15515L), (int)((--d1) * (i3 / (i2 | 1))));
                d = (++iArr[i2 - 1]);
                i3 = (iMeth(i2) - i);
                switch ((i2 % 2) + 1) {
                case 1:
                    i1 += (int)(-101.712F + (i2 * i2));
                    i3 = 13;
                case 2:
                    switch (((200 >>> 1) % 8) + 116) {
                    case 116:
                        i3 = i1;
                        for (i24 = 1; 2 > i24; ++i24) {
                            Test0674.fFld -= Test0674.iFld;
                            byArr[i24 + 1] += (byte)30893;
                            i1 = i2;
                            Test0674.instanceCount += (i24 ^ i2);
                            Test0674.instanceCount -= Test0674.instanceCount;
                            i1 = i;
                            switch (((i >>> 1) % 7) + 89) {
                            case 89:
                                i1 += (((i24 * i3) + Test0674.instanceCount) - i2);
                                Test0674.instanceCount *= Test0674.instanceCount;
                                Test0674.instanceCount = 11L;
                                Test0674.iFld += (i24 ^ Test0674.iFld);
                                break;
                            case 90:
                                i1 = i24;
                                try {
                                    iArr[i24 + 1] = (i3 / -224);
                                    Test0674.iFld = (147 % i1);
                                    i1 = (i % 16731);
                                } catch (ArithmeticException a_e) {}
                                i3 >>= i1;
                                lArrFld[i24 + 1] = i2;
                                break;
                            case 91:
                                fArr[i2] *= Test0674.instanceCount;
                                break;
                            case 92:
                            case 93:
                                i1 = i;
                                Test0674.bFld = Test0674.bFld;
                                break;
                            case 94:
                                i1 *= i;
                            case 95:
                                Test0674.iFld >>= (int) 6009735353999334494L;
                                break;
                            }
                        }
                    case 117:
                        i1 = i24;
                    case 118:
                        Test0674.fFld += -3752486209L;
                    case 119:
                        i1 += i3;
                        break;
                    case 120:
                        i25 += (i2 * i2);
                        break;
                    case 121:
                        iArr[i - 1] = -145;
                        break;
                    case 122:
                    case 123:
                        i1 = i2;
                    }
                    break;
                }
            }
        } while (++i < 246);

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 i3 d1 = " + i2 + "," + i3 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i24 i25 iArr = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("byArr fArr = " + FuzzerUtils.checkSum(byArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0674.instanceCount Test0674.fFld Test0674.dFld = " + Test0674.instanceCount + "," +
                Float.floatToIntBits(Test0674.fFld) + "," + Double.doubleToLongBits(Test0674.dFld));
        FuzzerUtils.out.println("Test0674.bFld Test0674.byFld Test0674.iFld = " + (Test0674.bFld ? 1 : 0) + "," + Test0674.byFld + "," +
                Test0674.iFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0674 _instance = new Test0674();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
