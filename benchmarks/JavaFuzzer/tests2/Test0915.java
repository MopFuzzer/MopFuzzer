// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0915 {

    public static final int N = 400;

    public static long instanceCount=25667L;
    public static float fFld=66.640F;
    public static volatile short sFld=24598;
    public static double dFld=0.92348;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8, int i9) {

        int i10=36530, i11=-51, i12=10, i13=244;
        float f=-99.902F;
        byte by1=4;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -3271606165751294039L);

        lArr[(12331 >>> 1) % N] *= 6L;
        for (i10 = 11; 208 > i10; ++i10) {
            Test0915.sFld += (short) i10;
            i7 -= (int) Test0915.instanceCount;
            Test0915.instanceCount *= i9;
            i8 &= (int) Test0915.instanceCount;
            for (i12 = 1; i12 < 8; i12 += 3) {
                f = 1;
                while (++f < 4) {
                    i13 = i11;
                    Test0915.instanceCount >>= Test0915.instanceCount;
                    Test0915.fFld += (0 + (f * f));
                    Test0915.instanceCount += (-64347 + (f * f));
                    Test0915.instanceCount -= -48126;
                    i8 = (int) Test0915.instanceCount;
                    by1 = (byte) Test0915.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + by1 +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i4, int i5) {

        int i6=45480;
        int i14=-6;
        int i15=-206;
        int[] iArr =new int[N];
        byte by=-99;
        boolean b=true;
        double d=39.127995;

        FuzzerUtils.init(iArr, 78);

        if (b) {
        } else if (b) {
            i6 = 1;
            do {
                by += (byte)(i6 * i6);
                Test0915.fFld += (-27473 + (i6 * i6));
            } while (++i6 < 154);
            Test0915.instanceCount = Test0915.instanceCount;
            vMeth1(i4, i4, i4);
        } else {
            by = (byte)13;
        }
        iArr[(i6 >>> 1) % N] = i5;
        iArr[(-27800 >>> 1) % N] = i4;
        for (i14 = 231; i14 > 2; i14--) {
            d += by;
            d -= i15;
            i5 = (int)1755715774L;
            iArr[i14 - 1] /= (int)((long)(d) | 1);
            Test0915.sFld = (short) i15;
        }
        long meth_res = i4 + i5 + i6 + by + (b ? 1 : 0) + i14 + i15 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i3) {

        int i16=10019;
        int i17=-12;
        int i18=-207;
        int i19=48475;
        int i20=39730;
        int i21=168;
        int i22=-47620;
        int i23=101;
        int[] iArr1 =new int[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -225L);
        FuzzerUtils.init(iArr1, 5);

        i3 += iMeth(i3, i3);
        i3 = 15051;
        for (i16 = 17; 368 > i16; i16++) {
            i3 += (((i16 * i17) + i3) - i16);
            i17 = (int) Test0915.instanceCount;
            lArr1 = lArr1;
            i17 = (int) Test0915.dFld;
        }
        for (i18 = 11; i18 < 253; ++i18) {
            iArr1[i18] = i18;
            for (i20 = 1; i20 < 7; ++i20) {
                Test0915.instanceCount <<= -80;
                for (i22 = i20; i22 < 2; ++i22) {
                    Test0915.instanceCount -= i19;
                    Test0915.instanceCount += i23;
                }
                Test0915.fFld = i3;
            }
        }
        vMeth_check_sum += l + i3 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-8094;
        int i1=-14824;
        int i2=53;
        int i24=-137;
        int i25=-148;
        int i26=2167;
        int i27=12;
        int i28=-223;
        int i29=-74;
        int i30=-18253;
        int[] iArr2 =new
                    int[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr2, 9);
        FuzzerUtils.init(fArr, 2.532F);

        Test0915.instanceCount = ((-(i | i)) ^ 5624149287063882300L);
        i1 = 1;
        do {
            i2 = 1;
            do {
                boolean b1=false;
                vMeth(Test0915.instanceCount, 5);
                if (b1) break;
                i += i2;
                if (b1) continue;
                for (i24 = i2; i24 < 1; i24++) {
                    i25 = (int) Test0915.instanceCount;
                    try {
                        i = (i24 % i1);
                        i = (i2 / -130);
                        iArr2[i1 - 1] = (-104 % i1);
                    } catch (ArithmeticException a_e) {}
                    Test0915.fFld += i24;
                    try {
                        i25 = (i25 % i1);
                        i25 = (i25 / -57590);
                        i25 = (-15516 / iArr2[i1]);
                    } catch (ArithmeticException a_e) {}
                    Test0915.fFld = i1;
                    i25 += (-1 + (i24 * i24));
                    Test0915.fFld = i;
                    Test0915.instanceCount = i;
                }
                for (i26 = 1; i26 < 1; ++i26) {
                    i28 += (-25393 + (i26 * i26));
                    i28 += (i26 * i);
                }
                Test0915.instanceCount += (-61975 + (i2 * i2));
                for (i29 = 1; i29 < 1; ++i29) {
                    Test0915.sFld -= (short) -227;
                    i27 = i27;
                }
                iArr2[i2] >>>= (int) Test0915.instanceCount;
                switch ((i2 % 6) + 29) {
                case 29:
                    fArr[i2] -= (float) Test0915.dFld;
                    switch (((i1 % 5) * 5) + 77) {
                    case 102:
                        i <<= (int) Test0915.instanceCount;
                        fArr[i1 + 1] = (float) Test0915.dFld;
                        i30 >>= i25;
                        break;
                    case 81:
                        i27 -= i25;
                        break;
                    case 79:
                        i28 = i1;
                        break;
                    case 90:
                        Test0915.fFld = Test0915.sFld;
                    case 87:
                        i *= i;
                        break;
                    }
                    break;
                case 30:
                    b1 = b1;
                    break;
                case 31:
                    i30 += (int)30926L;
                case 32:
                    i25 = -9;
                    break;
                case 33:
                    iArr2[i1 - 1] |= -149;
                    break;
                case 34:
                    i >>= i2;
                    break;
                default:
                    b1 = false;
                }
            } while (++i2 < 80);
        } while (++i1 < 314);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 iArr2 fArr = " + i30 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0915.instanceCount Test0915.fFld Test0915.sFld = " + Test0915.instanceCount + "," +
                Float.floatToIntBits(Test0915.fFld) + "," + Test0915.sFld);
        FuzzerUtils.out.println("Test0915.dFld = " + Double.doubleToLongBits(Test0915.dFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0915 _instance = new Test0915();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
