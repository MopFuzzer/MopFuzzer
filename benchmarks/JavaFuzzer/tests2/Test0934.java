// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0934 {

    public static final int N = 400;

    public static long instanceCount=-1304409231600983803L;
    public short sFld=6961;
    public byte byFld=-93;
    public double dFld=-44.116443;
    public static boolean bFld=true;
    public double[] dArrFld =new double[N];

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i12=17976;

        Test0934.instanceCount = i12;
        vMeth_check_sum += i12;
    }

    public static long lMeth() {

        int i7=13;
        int i8=99;
        int i10=-128;
        int i11=-28515;
        int[] iArr1 =new int[N];
        float f1=-2.721F;
        float[] fArr1 =new float[N];
        byte by=-9;
        short s=30161;
        double d=67.2888;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr1, -35539);
        FuzzerUtils.init(fArr1, 2.735F);
        FuzzerUtils.init(lArr1, 45006L);

        for (i7 = 7; i7 < 169; ++i7) {
            int i9=-63336;
            switch (((((int) (Test0934.instanceCount - 0)) >>> 1) % 4) + 24) {
            case 24:
                f1 = ((i8 * Math.abs(91)) + ((-2.392F % ((Test0934.instanceCount - i7) | 1)) + (f1++)));
                iArr1[i7] += ((++iArr1[i7]) >> by);
            case 25:
                if (i9 != 0) {
                }
                i9 += (int)fArr1[i7 + 1];
                for (i10 = 1; i10 < 10; i10++) {
                    i8 = (iArr1[i7]++);
                    iArr1[i7 + 1] -= (int)(lArr1[i10 + 1]++);
                    Test0934.instanceCount += (i10 - i10);
                    vMeth();
                    i11 &= s;
                    d -= i11;
                    d = 154;
                    if (i11 != 0) {
                    }
                }
            case 26:
                Test0934.instanceCount += i7;
            case 27:
                f1 += (-233 + (i7 * i7));
            }
        }
        long meth_res = i7 + i8 + Float.floatToIntBits(f1) + by + i10 + i11 + s + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(long l) {

        long l1=-2398357112L;
        int i6=216;
        int i13=174;
        int i14=-13;
        int i15=11261;
        int i16=2;
        int[] iArr2 =new int[N];
        float f2=2.756F;
        float[] fArr =new float[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr, -96.429F);
        FuzzerUtils.init(iArr2, 90);

        for (l1 = 7; l1 < 184; ++l1) {
            bArr[(int)(l1)] = (!((i6--) < (-29403 - (l1 + 10062))));
            i6 = (int)(fArr[(int)(l1 + 1)] - ((i6--) * lMeth()));
            i6 = i6;
            if (i6 != 0) {
            }
            for (i13 = 1; 9 > i13; ++i13) {
                f2 *= i6;
                f2 = i6;
                for (i15 = 1; i15 < 2; i15++) {
                    iArr2[(int)(l1)] = (int)l;
                    switch ((i15 % 7) + 80) {
                    case 80:
                        try {
                            i6 = (i15 / i16);
                            i16 = (-80 / iArr2[(int)(l1 + 1)]);
                            i16 = (i15 % 177);
                        } catch (ArithmeticException a_e) {}
                        dArrFld[i13 - 1] = Test0934.instanceCount;
                        break;
                    case 81:
                        try {
                            i6 = (i16 / 2065947919);
                            i14 = (-1936521613 % i6);
                            i14 = (i13 / -78830435);
                        } catch (ArithmeticException a_e) {}
                        l *= -2255213173L;
                        break;
                    case 82:
                        i6 = i6;
                        break;
                    case 83:
                        if (Test0934.bFld) continue;
                        break;
                    case 84:
                        Test0934.instanceCount = i16;
                        break;
                    case 85:
                        i16 = i6;
                        break;
                    case 86:
                        i16 <<= i15;
                    default:
                        Test0934.instanceCount -= sFld;
                    }
                }
            }
        }
        long meth_res = l + l1 + i6 + i13 + i14 + Float.floatToIntBits(f2) + i15 + i16 + FuzzerUtils.checkSum(bArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-206;
        int i1=165;
        int i2=125;
        int i3=40574;
        int i4=-30108;
        int i5=-89;
        int i17=178;
        int i18=-13;
        int[] iArr =new int[N];
        float f=78.164F;
        double[][] dArr =new double[N][N];
        long[] lArr =new long[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(dArr, 60.123909);
        FuzzerUtils.init(lArr, -1909081960L);
        FuzzerUtils.init(iArr, 84);
        FuzzerUtils.init(byArr, (byte)93);

        for (i = 14; 266 > i; ++i) {
            for (i2 = i; i2 < 100; i2++) {
                i1 = (int) (((Test0934.instanceCount + i2) * (Test0934.instanceCount << 6948L)) - ((--dArr[i2][i - 1]) +
                    (--lArr[i2 + 1])));
                i3 = (++i1);
                for (i4 = 1; i4 < 1; i4++) {
                    Test0934.instanceCount = (long) ((f = (i2 + sFld)) - (i + f));
                    i1 >>= (int)(((++f) - i5) * -2L);
                    Test0934.instanceCount &= 26378;
                    if (Test0934.instanceCount > 6) continue;
                    i1 = (--byFld);
                    byFld *= (byte)(--iArr[i2 - 1]);
                    Test0934.instanceCount -= Test0934.instanceCount;
                    iArr[i + 1] = (int)((iArr[i - 1]--) - ((dFld - i3) - Math.sqrt(dFld)));
                }
                switch ((i % 2) + 9) {
                case 9:
                    iMeth(Test0934.instanceCount);
                    Test0934.instanceCount += i5;
                    break;
                case 10:
                    iArr[i - 1] += i2;
                    if (true) break;
                    byFld = (byte)i2;
                    i1 -= (int) Test0934.instanceCount;
                    break;
                }
            }
            byArr[i] = (byte) Test0934.instanceCount;
            i1 = i5;
            for (i17 = 2; i17 < 100; i17++) {
                i18 += (i17 * i17);
                i18 *= i;
                if (Test0934.bFld) {
                    i3 += (int) Test0934.instanceCount;
                    f = (float)dFld;
                    dArr[i] = FuzzerUtils.double1array(N, (double)0.74322);
                } else {
                    i3 = i5;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("f i17 i18 = " + Float.floatToIntBits(f) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("dArr lArr iArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0934.instanceCount sFld byFld = " + Test0934.instanceCount + "," + sFld + "," + byFld);
        FuzzerUtils.out.println("dFld Test0934.bFld dArrFld = " + Double.doubleToLongBits(dFld) + "," + (Test0934.bFld ? 1 : 0)
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0934 _instance = new Test0934();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
