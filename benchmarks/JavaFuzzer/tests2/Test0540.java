// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0540 {

    public static final int N = 400;

    public static long instanceCount=112L;
    public static int iFld=-39569;
    public static boolean bFld=false;
    public static float fFld=103.627F;
    public long lFld=-10L;
    public static int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0540.iArrFld, 8);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i2) {

        int i3=-151;
        int i4=-62896;
        int i5=-45950;
        int i6=2;
        int i7=12;
        int i8=-59435;
        int[] iArr =new int[N];
        float f=-61.676F;
        short s=-15002;
        double d=-1.4965;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, -105);
        FuzzerUtils.init(byArr, (byte)43);

        switch (((89 >>> 1) % 5) + 15) {
        case 15:
            for (i3 = 153; i3 > 8; i3--) {
                i4 |= 1;
                for (i5 = 11; i5 > 1; i5 -= 3) {
                    if (Test0540.bFld) continue;
                    switch ((i3 % 9) + 108) {
                    case 108:
                        f += Test0540.instanceCount;
                        iArr[i5] -= (int)-1.18F;
                        Test0540.bFld = true;
                        break;
                    case 109:
                        for (i7 = 1; i7 < 4; ++i7) {
                            s += (short)(((i7 * i2) + i6) - i5);
                            s *= (short)104;
                            if (i5 != 0) {
                            }
                            if (Test0540.bFld) break;
                            i6 -= i5;
                        }
                        break;
                    case 110:
                        if (Test0540.bFld) continue;
                        break;
                    case 111:
                        s = (short)f;
                        break;
                    case 112:
                        byArr = byArr;
                    case 113:
                        iArr[i3 - 1] = i7;
                        break;
                    case 114:
                        i4 -= (int)f;
                        break;
                    case 115:
                        i2 += i8;
                        break;
                    case 116:
                        i8 += (i5 * i3);
                        break;
                    default:
                        i6 /= (int)(i3 | 1);
                    }
                }
            }
        case 16:
            f -= (float)d;
        case 17:
            i8 -= (int) Test0540.instanceCount;
            break;
        case 18:
            Test0540.instanceCount <<= i5;
            break;
        case 19:
            i2 = (int) Test0540.instanceCount;
            break;
        default:
            f *= -97.267F;
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + s + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1) {


        Test0540.instanceCount -= (i1 - iMeth(Test0540.iFld));
        Test0540.iFld = i1;
        vMeth_check_sum += i1;
    }

    public static long lMeth(int i) {

        long l=-65L;
        int i9=-6, i10=752, i11=-251, i12=14, i13=50209;
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(bArr, true);

        bArr[(Test0540.iFld >>> 1) % N][(i >>> 1) % N] = (Test0540.bFld || bArr[(i >>> 1) % N][(i >>> 1) % N]);
        vMeth(i);
        for (l = 281; l > 6; --l) {
            switch (((i9 >>> 1) % 2) + 53) {
            case 53:
                for (i10 = 1; i10 < 6; ++i10) {
                    if (Test0540.bFld) break;
                    for (i12 = (int)(l); 2 > i12; i12++) {
                        Test0540.iFld *= 1;
                        Test0540.iArrFld[i12 - 1] -= Test0540.iFld;
                        i = (int) Test0540.instanceCount;
                        Test0540.iArrFld[i12 + 1] <<= i9;
                        i13 <<= i12;
                        i11 = i;
                        i9 += (6816 + (i12 * i12));
                    }
                }
                i11 = -157;
            case 54:
                i13 += (int) (((l * Test0540.iFld) + Test0540.instanceCount) - i13);
                break;
            }
        }
        long meth_res = i + l + i9 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=13, i15=-64305, i16=0, i17=-54131, i18=3, i19=-13, i20=61259, i21=8, i22=-9491;
        double d1=0.32001;
        double[] dArr =new double[N];
        short s1=-17962;
        byte by=-73;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -2.196F);
        FuzzerUtils.init(dArr, 2.120842);

        Test0540.iFld += (int) (lMeth(Test0540.iFld) - Test0540.instanceCount);
        for (i14 = 309; i14 > 16; i14 -= 3) {
            Test0540.instanceCount = (long) 2.139F;
            for (i16 = 4; 258 > i16; i16++) {
                switch ((i14 % 2) + 26) {
                case 26:
                    i17 <<= i17;
                    for (i18 = 1; i18 < 2; i18++) {
                        Test0540.fFld *= 151;
                    }
                    break;
                case 27:
                    Test0540.instanceCount >>= i14;
                    lFld += (long) Test0540.fFld;
                    Test0540.iFld += (-11 + (i16 * i16));
                    break;
                default:
                    i19 += i16;
                    fArr[i16 - 1] -= i15;
                    Test0540.instanceCount <<= i14;
                }
                i17 *= (int)-21579L;
                switch (((i16 % 9) * 5) + 9) {
                case 22:
                    i15 += (int)2791637976L;
                    Test0540.iFld = i15;
                    for (d1 = 1; 2 > d1; d1++) {
                        Test0540.iArrFld = Test0540.iArrFld;
                        Test0540.iArrFld[(int) (d1 - 1)] = i18;
                        lArrFld[i16] >>>= i18;
                    }
                    Test0540.iFld <<= i19;
                    break;
                case 35:
                    Test0540.iFld = i20;
                    for (i21 = 2; i21 > i14; i21--) {
                        Test0540.instanceCount -= Test0540.instanceCount;
                    }
                    dArr = dArr;
                    Test0540.fFld += (i16 * i16);
                    break;
                case 32:
                    try {
                        i19 = (i20 / i17);
                        i19 = (i19 % -161);
                        Test0540.iArrFld[i16] = (i15 % i18);
                    } catch (ArithmeticException a_e) {}
                    i17 += (((i16 * i20) + i14) - i21);
                    break;
                case 14:
                case 44:
                    i17 = (int) Test0540.instanceCount;
                    break;
                case 27:
                    s1 = (short)i15;
                    break;
                case 25:
                    lArrFld[i14] -= by;
                    break;
                case 41:
                    i22 += (62115 + (i16 * i16));
                case 42:
                    i15 -= (int)lFld;
                    break;
                default:
                    i15 += (i16 * i18);
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("d1 i20 i21 = " + Double.doubleToLongBits(d1) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 s1 by = " + i22 + "," + s1 + "," + by);
        FuzzerUtils.out.println("fArr dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0540.instanceCount Test0540.iFld Test0540.bFld = " + Test0540.instanceCount + "," + Test0540.iFld +
                "," + (Test0540.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0540.fFld lFld Test0540.iArrFld = " + Float.floatToIntBits(Test0540.fFld) + "," + lFld + "," +
                FuzzerUtils.checkSum(Test0540.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0540 _instance = new Test0540();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
