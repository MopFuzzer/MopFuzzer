// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0363 {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static int iFld=-166;
    public static double dFld=108.73864;
    public volatile float fFld=-2.32F;
    public byte byFld=-20;
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0363.iArrFld, -4);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=-40;
        int i3=110;
        int i4=-64389;
        int i5=46830;
        int[] iArr1 =new int[N];
        float f1=0.552F;
        float[] fArr =new float[N];
        short s=-16750;

        FuzzerUtils.init(iArr1, 8694);
        FuzzerUtils.init(fArr, 2.608F);

        Test0363.iFld ^= (int) Test0363.instanceCount;
        iArr1 = Test0363.iArrFld;
        i2 = 1;
        while (++i2 < 340) {
            Test0363.instanceCount += i2;
            Test0363.iFld >>= i2;
            for (i3 = i2; 5 > i3; ++i3) {
                Test0363.instanceCount = Test0363.instanceCount;
                Test0363.iFld += (int) Test0363.dFld;
                Test0363.iFld ^= -128;
                for (f1 = i3; f1 < 1; f1++) {
                    switch (((i5 >>> 1) % 5) + 40) {
                    case 40:
                        fArr[i3] = 0.694F;
                        break;
                    case 41:
                        Test0363.iFld += (int) (((f1 * s) + i5) - f1);
                        Test0363.iFld *= i3;
                        break;
                    case 42:
                        i4 += (int) Test0363.dFld;
                    case 43:
                        i4 ^= -71;
                        break;
                    case 44:
                        Test0363.iFld = i3;
                        break;
                    default:
                        i5 += (int)f1;
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f1) + i5 + s + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static float fMeth(byte by1, long l2, int i1) {

        int i6=132, i7=-172, i8=-46854;
        float f2=-2.708F;
        boolean b=true;
        short s1=-3720;

        vMeth1();
        i6 = 1;
        while (++i6 < 139) {
            Test0363.iFld = i6;
            l2 *= Test0363.iFld;
            Test0363.iArrFld[i6 - 1] = Test0363.iFld;
            for (i7 = 1; i7 < 11; ++i7) {
                l2 += i7;
                i8 = 2;
                f2 = 1;
                while (++f2 < 2) {
                    if (b) continue;
                    l2 += (long)2.586F;
                    Test0363.iArrFld = Test0363.iArrFld;
                    if (true) {
                        l2 = (long) Test0363.dFld;
                    }
                    s1 = (short)i6;
                }
            }
        }
        long meth_res = by1 + l2 + i1 + i6 + i7 + i8 + Float.floatToIntBits(f2) + (b ? 1 : 0) + s1;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(byte by) {

        long l=187538039L, l1=328574004018199568L;
        float f=0.653F;
        float[] fArr1 =new float[N];
        int i=56789;
        int i9=29267;
        int[] iArr =new int[N];
        boolean b1=true;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -1.54063);
        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(fArr1, -2.868F);

        l = 1;
        do {
            Test0363.instanceCount += (l - f);
            Test0363.iFld += (int) (l + Test0363.iFld);
            dArr[(int) (l + 1)] *= (f * ((iArr[(int) (l + 1)]++) * (Test0363.iFld - Test0363.iFld)));
            switch ((int)((l % 5) + 117)) {
            case 117:
                Test0363.instanceCount *= (((Test0363.iFld++) - (iArr[(int) (l - 1)]--)) - (-(Test0363.iFld * Test0363.iFld)));
                break;
            case 118:
                for (l1 = 1; l1 < 6; ++l1) {
                    try {
                        iArr[(int) (l)] = (Test0363.iFld % 719334581);
                        Test0363.iArrFld[(int) (l)] = (i % 234);
                        Test0363.iFld = (i / -199);
                    } catch (ArithmeticException a_e) {}
                    Test0363.instanceCount += ((i--) * (Test0363.instanceCount *= (i - i)));
                }
                Test0363.iFld = (int) fMeth(by, l, i);
                Test0363.iArrFld[(int) (l)] = (int) Test0363.instanceCount;
                break;
            case 119:
                if (b1) {
                    Test0363.instanceCount = Test0363.iFld;
                    Test0363.iFld += i;
                    fArr1[(int)(l - 1)] = f;
                } else if (b1) {
                    Test0363.iFld = by;
                } else if (b1) {
                    i ^= i9;
                    vMeth_check_sum += by + l + Float.floatToIntBits(f) + l1 + i + i9 + (b1 ? 1 : 0) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                    return;
                }
                break;
            case 120:
                fArr1[(int)(l)] = 46;
            case 121:
                i9 *= i;
                break;
            default:
                if (b1) break;
            }
        } while (++l < 259);
        vMeth_check_sum += by + l + Float.floatToIntBits(f) + l1 + i + i9 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        byte by2=110;
        int i10=-51385, i11=-53114, i12=7, i13=211, i14=52992, i15=62624, i16=202, i17=0, i18=-10, i19=-4;
        boolean b2=false;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -2L);
        FuzzerUtils.init(bArr, true);

        vMeth(by2);
        by2 = (byte)-35109;
        Test0363.iArrFld[(Test0363.iFld >>> 1) % N] = -7;
        for (i10 = 10; i10 < 267; ++i10) {
            i11 += (218 + (i10 * i10));
        }
        i11 *= (int) Test0363.instanceCount;
        i11 = Test0363.iFld;
        i11 = i10;
        i11 += i10;
        for (i12 = 8; i12 < 138; i12++) {
            i11 += i12;
            i13 -= (int)fFld;
            try {
                Test0363.iFld = (Test0363.iArrFld[i12 + 1] % Test0363.iArrFld[i12]);
                Test0363.iFld = (1130194192 / i11);
                i13 = (i11 / -1383);
            } catch (ArithmeticException a_e) {}
            Test0363.iFld += (-20881 + (i12 * i12));
            Test0363.instanceCount += (((i12 * Test0363.instanceCount) + Test0363.iFld) - i11);
            Test0363.iArrFld[i12 + 1] = -15704;
            lArr[i12 - 1] -= i10;
        }
        fFld = Test0363.iFld;
        for (i14 = 12; 321 > i14; i14++) {
            for (i16 = 1; i16 < 81; ++i16) {
                short s2=-12660;
                i13 += (int)54657L;
                bArr[i16] = b2;
                i13 = s2;
                try {
                    i13 = (-12121 / i11);
                    Test0363.iFld = (Test0363.iArrFld[i16] % i17);
                    i13 = (-62 / Test0363.iArrFld[i14 - 1]);
                } catch (ArithmeticException a_e) {}
            }
            i15 += (int)223L;
            for (i18 = i14; i18 < 81; i18++) {
                fFld += byFld;
                i13 += -26655;
                i19 += (int) Test0363.instanceCount;
                b2 = b2;
            }
        }

        FuzzerUtils.out.println("by2 i10 i11 = " + by2 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("b2 i18 i19 = " + (b2 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("lArr bArr = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0363.instanceCount Test0363.iFld Test0363.dFld = " + Test0363.instanceCount + "," + Test0363.iFld +
                "," + Double.doubleToLongBits(Test0363.dFld));
        FuzzerUtils.out.println("fFld byFld Test0363.iArrFld = " + Float.floatToIntBits(fFld) + "," + byFld + "," +
                FuzzerUtils.checkSum(Test0363.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0363 _instance = new Test0363();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
