// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0075 {

    public static final int N = 400;

    public static volatile long instanceCount=-37433L;
    public static float fFld=-2.38F;
    public static int iFld=3;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0075.iArrFld, 28517);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i) {

        int i1=202;
        int i2=43706;
        int i3=-2;
        int i4=-10;
        int[] iArr =new int[N];
        byte by=21;
        short s=-2969;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -45.744F);
        FuzzerUtils.init(iArr, 61426);

        for (i1 = 1; i1 < 236; i1++) {
            i &= -10;
            i2 += (int)-5797310978854800858L;
            for (i3 = 1; 7 > i3; i3 += 2) {
                i2 *= i1;
                i2 <<= i4;
                if (true) continue;
            }
            iArr[i1 + 1] = i1;
            i4 -= i3;
            i4 <<= i2;
            switch ((i1 % 8) + 98) {
            case 98:
                i4 += (i1 * i1);
                Test0075.instanceCount *= i2;
            case 99:
            case 100:
                i2 = i;
            case 101:
                i = (int) Test0075.fFld;
                break;
            case 102:
                iArr[i1 - 1] += by;
                break;
            case 103:
                s = (short)i1;
                break;
            case 104:
                Test0075.instanceCount = -195;
                break;
            case 105:
                i4 = i3;
            }
        }
        vMeth1_check_sum += i + i1 + i2 + i3 + i4 + by + s + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l) {

        int i5=27783;
        int i6=109;
        int i7=-179;
        int i8=-10;
        int[] iArr1 =new int[N];
        boolean b=false;
        boolean[] bArr =new boolean[N];
        double d=68.101135, d1=51.72850;
        float f1=66.234F;
        byte by1=-84;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(sArr, (short)15248);
        FuzzerUtils.init(iArr1, -105);

        vMeth1(i5);
        for (i6 = 6; i6 < 327; i6++) {
            bArr[i6] = b;
            for (d = i6; d < 5; ++d) {
                i7 >>= (int)l;
                Test0075.fFld %= -680778594L;
                sArr[(int) (d)][(int) (d - 1)] -= (short) Test0075.fFld;
                l *= -191;
                iArr1 = FuzzerUtils.int1array(N, (int)5);
                f1 = 1;
                do {
                    switch ((int)((d % 5) + 8)) {
                    case 8:
                        Test0075.fFld -= f1;
                        if (b) break;
                        iArr1[(int)(f1)] <<= i6;
                        break;
                    case 9:
                        by1 += (byte)f1;
                        break;
                    case 10:
                        b = b;
                    case 11:
                        d1 += d1;
                        break;
                    case 12:
                    default:
                        Test0075.fFld *= -95;
                    }
                } while (++f1 < 1);
            }
        }
        vMeth_check_sum += l + i5 + i6 + i7 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i8 + Float.floatToIntBits(f1)
            + by1 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        int i9=0, i10=114, i11=14, i12=171;
        byte by2=-79;

        vMeth(Test0075.instanceCount);
        i9 += (int) Test0075.instanceCount;
        Test0075.fFld /= 4;
        Test0075.instanceCount -= by2;
        by2 = (byte)i9;
        for (i10 = 137; i10 > 2; i10--) {
            i12 = 1;
            do {
                if (i12 != 0) {
                }
                switch ((((i11 >>> 1) % 2) * 5) + 115) {
                case 123:
                    i9 += (i12 * i12);
                    i9 += (int) Test0075.instanceCount;
                    break;
                case 124:
                    Test0075.instanceCount = i10;
                    i11 ^= i10;
                    by2 += (byte)(i12 * i12);
                    break;
                }
                i11 *= i10;
            } while (++i12 < 12);
        }
        long meth_res = i9 + by2 + i10 + i11 + i12;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by3=118;
        int i13=55945, i14=31459, i15=131, i16=42285, i17=11, i18=59806, i19=-33, i20=188;
        double d2=-117.99080;
        long l1=-32593L;
        short[] sArr1 =new short[N];

        FuzzerUtils.init(sArr1, (short)20797);

        Test0075.instanceCount >>= iMeth();
        by3 += (byte) Test0075.iFld;
        Test0075.instanceCount = (long) Test0075.fFld;
        by3 -= (byte) Test0075.iFld;
        for (i13 = 262; i13 > 14; i13--) {
            for (d2 = 4; d2 < 101; d2 += 3) {
                Test0075.instanceCount ^= 3313754777140148516L;
                i15 = (int) Test0075.instanceCount;
                for (i16 = i13; i16 < 4; i16++) {
                    i15 += i16;
                    i14 = (int) Test0075.instanceCount;
                    Test0075.iFld -= i15;
                }
                i14 = (int) Test0075.instanceCount;
                i15 += Test0075.iFld;
                Test0075.iArrFld[(int) (d2 + 1)] = i16;
            }
            i18 = 1;
            while (++i18 < 101) {
                Test0075.instanceCount *= i17;
                Test0075.iFld += (((i18 * i14) + Test0075.fFld) - i18);
                for (i19 = 1; i19 < 1; ++i19) {
                    Test0075.instanceCount >>= Test0075.instanceCount;
                    i14 -= Test0075.iFld;
                    i14 = i13;
                    i14 += Test0075.iFld;
                    sArr1[i13 + 1] <<= (short)i15;
                }
                Test0075.bFld = Test0075.bFld;
                l1 = l1;
            }
        }
        i14 += i18;
        i14 -= 50860;
        i15 = (int) Test0075.fFld;
        Test0075.iArrFld[(i15 >>> 1) % N] |= i13;

        FuzzerUtils.out.println("by3 i13 i14 = " + by3 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("d2 i15 i16 = " + Double.doubleToLongBits(d2) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 l1 sArr1 = " + i20 + "," + l1 + "," + FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test0075.instanceCount Test0075.fFld Test0075.iFld = " + Test0075.instanceCount + "," +
                Float.floatToIntBits(Test0075.fFld) + "," + Test0075.iFld);
        FuzzerUtils.out.println("Test0075.bFld Test0075.iArrFld = " + (Test0075.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0075.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0075 _instance = new Test0075();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
