// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:54 2023
public class Test0906 {

    public static final int N = 400;

    public static volatile long instanceCount=-2087013746166786153L;
    public volatile double dFld=4.113760;
    public static double dFld1=0.4063;
    public static byte byFld=-11;
    public static short sFld=-8706;
    public float fFld=121.593F;

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static long lMeth(int i1, int i2, int i3) {

        double d=-2.72941;
        short s=20618;

        d += (((--d) - 24813) - s);
        long meth_res = i1 + i2 + i3 + Double.doubleToLongBits(d) + s;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(int i11, int i12, int i13) {

        int i14=36562;
        int i15=-153;
        int i16=55846;
        int i17=50305;
        int i18=28;
        int i19=0;
        int[] iArr1 =new int[N];
        float f1=-1.960F;
        boolean b=true;

        FuzzerUtils.init(iArr1, 22553);

        for (i14 = 14; 256 > i14; ++i14) {
            f1 *= i15;
            for (i16 = 1; i16 < 7; ++i16) {
                Test0906.dFld1 = i11;
                i15 = i11;
                i15 = i16;
                i17 = -14683;
                Test0906.instanceCount >>= Test0906.instanceCount;
            }
            b = b;
            i15 += (55622 + (i14 * i14));
            Test0906.instanceCount += i15;
            f1 -= i18;
            i19 = 1;
            while (++i19 < 7) {
                iArr1[i19 + 1] -= i19;
                Test0906.instanceCount >>= Test0906.instanceCount;
            }
        }
        long meth_res = i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 + (b ? 1 : 0) + i18 + i19 +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s1, short s2) {

        int i10=11;
        int i20=5;
        int i21=-6;
        int i22=-48808;
        int i23=-245;
        int i24=-45726;
        int i25=-8;
        int i26=-41041;
        int[] iArr2 =new int[N];
        float f2=1.800F;

        FuzzerUtils.init(iArr2, 12914);

        i10 *= (iMeth1(i10, i10, -5) * i10);
        for (i20 = 5; 161 > i20; i20++) {
            for (i22 = 1; i22 < 10; ++i22) {
                f2 -= i21;
                for (i24 = 1; i24 < 2; i24 += 2) {
                    Test0906.byFld += (byte) i10;
                    i10 += (i24 - Test0906.instanceCount);
                    Test0906.dFld1 -= 2;
                }
                iArr2[i20] = i24;
                i23 = i21;
            }
            i26 += (int)91.806F;
            iArr2[i20 + 1] = (int)63376L;
            s1 += (short) (((i20 * i25) + i26) - Test0906.instanceCount);
            try {
                iArr2[i20 - 1] = (i26 % -56891);
                i23 = (iArr2[i20 + 1] / 45445);
                i25 = (-22 / i20);
            } catch (ArithmeticException a_e) {}
            i25 *= (int) Test0906.instanceCount;
        }
        vMeth_check_sum += s1 + s2 + i10 + i20 + i21 + i22 + i23 + Float.floatToIntBits(f2) + i24 + i25 + i26 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i7) {

        int i8=90, i9=1, i27=204, i28=56, i29=-9, i30=-23159, i31=-12, i32=0;
        float f=12.236F;

        for (i8 = 13; 237 > i8; ++i8) {
            f += (float) Test0906.dFld1;
        }
        vMeth(Test0906.sFld, Test0906.sFld);
        for (i27 = 4; i27 < 135; ++i27) {
            i9 = i8;
            for (i29 = 12; i29 > i27; i29--) {
                switch ((i27 % 1) + 33) {
                case 33:
                    i30 >>= i9;
                    Test0906.byFld = (byte) Test0906.dFld1;
                    Test0906.instanceCount += i29;
                    i28 = i28;
                }
                if (i7 != 0) {
                }
                for (i31 = 1; i31 < 1; ++i31) {
                    f = Test0906.instanceCount;
                    i28 += (((i31 * i31) + f) - f);
                }
            }
        }
        long meth_res = i7 + i8 + i9 + Float.floatToIntBits(f) + i27 + i28 + i29 + i30 + i31 + i32;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9276;
        int i4=-11;
        int i5=-4;
        int i6=-60487;
        int i33=61528;
        int i34=7;
        int i35=-254;
        int i36=46371;
        int i37=-113;
        int i38=-8;
        int i39=-163;
        int i40=0;
        int[] iArr =new int[N];
        float f3=20.896F;
        boolean b1=false;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, -28496);
        FuzzerUtils.init(lArr, 3073739613982395308L);

        i = (int) lMeth((int) ((i *= (int) dFld) - (Test0906.instanceCount - i)), Math.min(-(--iArr[(i >>> 1) % N]),
                (int) (-Test0906.instanceCount)), i--);
        lArr[(i >>> 1) % N][(i >>> 1) % N] >>= (i--);
        for (i4 = 8; i4 < 275; ++i4) {
            i6 = 1;
            while (++i6 < 94) {
                lMeth(-((i4 + i5) - iMeth(i4)), i4, 10);
                i5 += (i6 + i6);
            }
        }
        for (i33 = 173; i33 > 3; i33 -= 3) {
            for (i35 = 11; i35 < 351; ++i35) {
                if (b1) {
                    f3 -= i4;
                    switch ((((i36 >>> 1) % 1) * 5) + 51) {
                    case 56:
                        i += (i35 | i4);
                        i5 += (i35 ^ Test0906.instanceCount);
                        i36 += i35;
                        for (i37 = 1; 2 > i37; i37++) {
                            i38 >>= i38;
                            Test0906.sFld <<= (short) i34;
                            i36 = i6;
                        }
                    }
                    i39 = 1;
                    do {
                        i5 += i4;
                        i5 = i34;
                        switch ((i39 % 3) + 85) {
                        case 85:
                            fFld += ((long) i39 ^ (long) Test0906.instanceCount);
                            i = (int)-15653L;
                            i5 = (int)200L;
                            break;
                        case 86:
                            Test0906.instanceCount *= Test0906.instanceCount;
                            i38 += (((i39 * i34) + i5) - f3);
                            i34 += (i39 ^ i);
                            b1 = b1;
                        case 87:
                            fFld /= (i4 | 1);
                            break;
                        default:
                            i38 = -24;
                        }
                    } while (++i39 < 2);
                } else {
                    i40 = i5;
                }
            }
        }

        FuzzerUtils.out.println("i i4 i5 = " + i + "," + i4 + "," + i5);
        FuzzerUtils.out.println("i6 i33 i34 = " + i6 + "," + i33 + "," + i34);
        FuzzerUtils.out.println("i35 i36 f3 = " + i35 + "," + i36 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i37 i38 i39 = " + i37 + "," + i38 + "," + i39);
        FuzzerUtils.out.println("b1 i40 iArr = " + (b1 ? 1 : 0) + "," + i40 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0906.instanceCount dFld Test0906.dFld1 = " + Test0906.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Double.doubleToLongBits(Test0906.dFld1));
        FuzzerUtils.out.println("Test0906.byFld Test0906.sFld fFld = " + Test0906.byFld + "," + Test0906.sFld + "," +
            Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0906 _instance = new Test0906();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
