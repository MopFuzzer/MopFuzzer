// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0100 {

    public static final int N = 400;

    public static long instanceCount=-102L;
    public float fFld=-82.858F;
    public static byte byFld=65;
    public static float fFld1=-1.371F;
    public static boolean bFld=true;
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0100.bArrFld, false);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f, float f1) {

        int i3=33698;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, -2);

        Test0100.instanceCount = i3;
        iArr2[(i3 >>> 1) % N] = i3;
        i3 = i3;
        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i3 + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth1(long l) {

        int i4=-13;
        int i5=215;
        int i6=62903;
        int i7=-10;
        int i8=-16172;
        int i9=-808;
        int[] iArr3 =new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr3, 7418);

        vMeth(Test0100.fFld1, Test0100.fFld1);
        i4 = 1;
        while (++i4 < 396) {
            l -= l;
            for (i5 = 1; i5 < 4; i5++) {
                i6 += i6;
                i6 = (int) Test0100.instanceCount;
                i6 *= i5;
                for (i7 = i5; i7 < 2; ++i7) {
                    Test0100.instanceCount &= l;
                    switch ((i5 % 10) + 104) {
                    case 104:
                        l += (((i7 * i8) + i5) - Test0100.instanceCount);
                        i8 = i9;
                        i9 += (i7 - i9);
                    case 105:
                        Test0100.fFld1 -= -54.69F;
                        i9 |= i8;
                        break;
                    case 106:
                    case 107:
                        i6 += i6;
                        break;
                    case 108:
                    case 109:
                        if (b) continue;
                        break;
                    case 110:
                        Test0100.instanceCount >>= i8;
                    case 111:
                    case 112:
                        i8 += (i7 * i7);
                        break;
                    case 113:
                        Test0100.instanceCount <<= 15251;
                        break;
                    default:
                        iArr3[i5] <<= i5;
                    }
                }
            }
        }
        long meth_res = l + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        double d=1.18882;
        long l1=936L;
        int i10=9;
        int i11=-6;
        int i12=-186;
        int i13=-164;
        int i14=12;
        int i15=6;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -11);

        if (Test0100.bFld) {
            iArr1[(-24726 >>> 1) % N] += (int) ((iMeth1(Test0100.instanceCount) + -7) + d);
            for (l1 = 2; l1 < 169; l1++) {
                iArr1[(int)(l1)] = i10;
                if (Test0100.bFld) {
                    iArr1[(int)(l1)] -= (int)1.394F;
                }
                Test0100.fFld1 += (l1 * l1);
            }
            for (i11 = 2; i11 < 138; ++i11) {
                i12 += (int)l1;
                i12 -= (int)93.947F;
                iArr1 = iArr1;
                for (i13 = 1; i13 < 12; i13++) {
                    i10 = i11;
                    i15 += (int)l1;
                    Test0100.instanceCount = 57412;
                }
            }
        } else {
            i10 = (int)4L;
        }
        long meth_res = Double.doubleToLongBits(d) + l1 + i10 + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i1=2;
        int i2=0;
        int i16=-14;
        int i17=40418;
        int i18=6;
        int i19=-9;
        int i20=54883;
        int i21=-12767;
        int i22=115;
        int[] iArr =new int[N];
        short s=-13346;
        double d1=0.15651;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -156);
        FuzzerUtils.init(lArr, -60L);

        for (int i : iArr) {
            for (i1 = 2; 63 > i1; ++i1) {
                i = Math.min((int) ((fFld - Test0100.byFld) / (Integer.reverseBytes(i1) | 1)), iMeth());
                iArr[i1 + 1] *= (int)64577L;
                lArr[i1] += Test0100.byFld;
                Test0100.byFld ^= (byte) i;
                i2 += (i1 ^ i2);
                Test0100.bFld = Test0100.bFld;
                if (Test0100.bFld) {
                    i2 += (30610 + (i1 * i1));
                    for (i16 = 1; i16 < 2; i16++) {
                        Test0100.instanceCount = Test0100.instanceCount;
                    }
                    for (i18 = i1; i18 < 2; i18++) {
                        s = (short)d1;
                        if (Test0100.bFld) break;
                        if (Test0100.bFld) break;
                        Test0100.fFld1 += i18;
                        switch ((i1 % 1) + 92) {
                        case 92:
                            Test0100.instanceCount += (((i18 * i2) + i1) - i1);
                            break;
                        }
                        iArr[(i19 >>> 1) % N] = i;
                        i = i19;
                    }
                } else if (Test0100.bFld) {
                    d1 *= 14;
                    i >>= -6286;
                    i17 = i20;
                    i20 = (int)-13010L;
                } else if (Test0100.bFld) {
                    Test0100.bArrFld[i1 + 1] = Test0100.bFld;
                    for (i21 = 1; i21 < 2; i21 += 2) {
                        if (false) break;
                        i20 += (i21 + i21);
                        i17 += (i21 * i21);
                    }
                } else {
                    i22 += (int)fFld;
                }
            }
        }

        FuzzerUtils.out.println("i1 i2 i16 = " + i1 + "," + i2 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("s d1 i20 = " + s + "," + Double.doubleToLongBits(d1) + "," + i20);
        FuzzerUtils.out.println("i21 i22 iArr = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0100.instanceCount fFld Test0100.byFld = " + Test0100.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0100.byFld);
        FuzzerUtils.out.println("Test0100.fFld1 Test0100.bFld Test0100.bArrFld = " + Float.floatToIntBits(Test0100.fFld1) + "," +
                (Test0100.bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0100.bArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0100 _instance = new Test0100();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
