// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:16 2023
public class Test0094 {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static byte byFld=21;
    public static float fFld=-2.178F;
    public boolean bFld=true;
    public float fFld1=-2.815F;
    public boolean[] bArrFld =new boolean[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i10) {

        short s=-26598;
        int i11=5;
        int i12=121;
        int i13=223;
        int i14=8;
        int i15=-6;
        int[] iArr2 =new int[N];
        float f1=0.182F, f2=-1.415F;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(iArr2, -48);
        FuzzerUtils.init(lArr1, 144L);

        s = (short)i10;
        i11 = 1;
        do {
            int i16=-7;
            i10 += (i11 * i11);
            iArr2[i11] -= i10;
            switch ((i11 % 8) + 65) {
            case 65:
                i10 = i11;
                for (i12 = i11; i12 < 11; i12++) {
                    i10 += (((i12 * i13) + i11) - i12);
                }
            case 66:
                lArr1[i11][i11 + 1] -= i13;
            case 67:
                for (f1 = 1; f1 < 11; f1++) {
                    i15 = 1;
                    while (++i15 < 2) {
                        i10 += (i15 * i15);
                        f2 += (float)0.65411;
                        Test0094.instanceCount += (i15 + Test0094.instanceCount);
                        i13 -= (int) Test0094.instanceCount;
                    }
                }
                break;
            case 68:
                lArr1[i11 - 1][i11] = i10;
                break;
            case 69:
                i10 = (int)f1;
            case 70:
                i10 <<= (int) Test0094.instanceCount;
                break;
            case 71:
                f2 -= i15;
            case 72:
                i10 += (6 + (i11 * i11));
                break;
            default:
                i14 += (((i11 * i13) + i13) - i16);
            }
        } while (++i11 < 145);
        long meth_res = i10 + s + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1() {

        int i4=-31872;
        int i5=-183;
        int i6=-14;
        int i7=-118;
        int i8=-25822;
        int i9=-29;
        int[] iArr1 =new int[N];
        float f=0.358F;
        boolean b=true;

        FuzzerUtils.init(iArr1, -58402);

        for (i4 = 246; i4 > 11; --i4) {
            for (i6 = 1; i6 < 7; ++i6) {
                for (i8 = 2; 1 < i8; --i8) {
                    i5 += i4;
                    i7 = iArr1[i8];
                    iArr1[i4 - 1] = (i9--);
                    f -= iArr1[i6];
                    i7 >>= (int) ((-(-57330 << Test0094.instanceCount)) + (byMeth(i6) - i6));
                    i7 += (((i8 * i5) + i9) - i6);
                    if (b) {
                        i7 = i8;
                        iArr1[i4 + 1] |= (int)-367923536152822488L;
                        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + (b ? 1 : 0) +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    } else if (b) {
                        iArr1 = iArr1;
                    }
                    if (b) continue;
                    Test0094.byFld = (byte) Test0094.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l) {

        int i2=1972;
        int i3=5;
        int i17=2;
        int i18=-9;
        int[] iArr3 =new int[N];
        int[][] iArr4 =new int[N][N];
        double d=55.54231;
        double[] dArr =new double[N];
        short s1=-18425;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 606106482498126994L);
        FuzzerUtils.init(iArr3, 64);
        FuzzerUtils.init(iArr4, 70);
        FuzzerUtils.init(dArr, 72.44476);

        for (i2 = 171; i2 > 6; i2--) {
            Test0094.instanceCount *= ((Test0094.instanceCount++) + ((lArr[i2 + 1]++) - (i3--)));
            vMeth1();
            d += -194;
            for (i17 = 1; i17 < 10; ++i17) {
                Test0094.fFld += i3;
                try {
                    iArr3[i17] = (-42 / iArr3[i17 + 1]);
                    iArr3[i2] = (i3 % i3);
                    i3 = (iArr3[i17] / i2);
                } catch (ArithmeticException a_e) {}
                i3 -= i18;
            }
            iArr4[i2 - 1][i2 - 1] -= (int) Test0094.fFld;
            iArr3[i2 + 1] <<= (int)l;
        }
        Test0094.instanceCount <<= -225;
        dArr[(-21456 >>> 1) % N] -= d;
        i18 *= i3;
        i3 = s1;
        i3 = i18;
        vMeth_check_sum += l + i2 + i3 + Double.doubleToLongBits(d) + i17 + i18 + s1 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(iArr4) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-64190;
        int i1=-8;
        int i19=0;
        int i20=-70;
        int i21=-1;
        int i22=58230;
        int i23=-41;
        int i24=-219;
        int i25=1;
        int[] iArr =new int[N];
        short s2=-28143;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr, 3961);
        FuzzerUtils.init(lArr2, -4209281129L);

        for (i = 10; i < 367; ++i) {
            i1 >>= iArr[i];
            vMeth(Test0094.instanceCount);
            Test0094.instanceCount = i;
            for (i19 = 1; 71 > i19; ++i19) {
                lArr2[i19 + 1] |= -202;
                Test0094.instanceCount += s2;
            }
            iArr[i - 1] = 6;
            if (bFld) {
                iArr[i] += i19;
            } else if (false) {
                i1 *= (int) Test0094.instanceCount;
                for (i21 = 4; i21 < 71; i21++) {
                    iArr[i - 1] += i;
                    i23 = 2;
                    do {
                        Test0094.instanceCount -= i22;
                        i1 = i20;
                        i22 += (((i23 * Test0094.instanceCount) + Test0094.instanceCount) - i22);
                        bFld = bFld;
                        i1 <<= i19;
                        iArr[i21 + 1] >>>= i19;
                        i20 = i19;
                    } while ((i23 -= 3) > 0);
                    for (i24 = i21; i24 < 2; ++i24) {
                        bArrFld[i] = true;
                        i22 = 19;
                        i20 -= i1;
                        Test0094.instanceCount *= 2267163452756160038L;
                        i25 = (int) Test0094.instanceCount;
                        Test0094.byFld = (byte) -7692107847715020946L;
                        iArr[i - 1] &= i23;
                    }
                    i1 = i1;
                }
            } else {
                fFld1 += (i - i21);
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 s2 i21 = " + i20 + "," + s2 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 iArr lArr2 = " + i25 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0094.instanceCount Test0094.byFld Test0094.fFld = " + Test0094.instanceCount + "," + Test0094.byFld +
                "," + Float.floatToIntBits(Test0094.fFld));
        FuzzerUtils.out.println("bFld fFld1 bArrFld = " + (bFld ? 1 : 0) + "," + Float.floatToIntBits(fFld1) + "," +
            FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0094 _instance = new Test0094();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
