// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0988 {

    public static final int N = 400;

    public static volatile long instanceCount=2530082754884286991L;
    public static int iFld=0;
    public static boolean bFld=true;
    public static short sFld=-28304;
    public static volatile float fFld=1.19F;
    public static double dFld=-103.95865;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0988.iArrFld, -191);
        FuzzerUtils.init(Test0988.fArrFld, 0.182F);
        FuzzerUtils.init(Test0988.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l1) {

        int i2=-140, i3=-48218, i4=-8507, i5=-11727, i6=13, i7=160;
        float f=-10.647F;
        double d1=16.38677;

        Test0988.iArrFld[(Test0988.iFld >>> 1) % N] += Test0988.iFld;
        for (i2 = 325; i2 > 5; --i2) {
            if (Test0988.bFld) break;
            switch ((i2 % 10) + 63) {
            case 63:
                for (i4 = 1; i4 < 5; i4 += 3) {
                    Test0988.instanceCount = (long) f;
                    i5 += (((i4 * Test0988.iFld) + i4) - i3);
                    try {
                        Test0988.iArrFld[i4 + 1] = (Test0988.iArrFld[i2] % 207);
                        Test0988.iFld = (53816 % i5);
                        i5 = (Test0988.iArrFld[i4 + 1] % -199551950);
                    } catch (ArithmeticException a_e) {}
                    d1 %= ((long)(f) | 1);
                    Test0988.fArrFld[i4] *= 45.499F;
                    i5 = Test0988.iFld;
                    for (i6 = 1; i6 < 5; i6++) {
                        i3 |= i4;
                    }
                }
                i5 += (i2 + i3);
                i7 += i2;
                break;
            case 64:
                i5 += i2;
                break;
            case 65:
                Test0988.bArrFld[i2 + 1] = Test0988.bFld;
                break;
            case 66:
                Test0988.fArrFld[i2] *= i6;
                break;
            case 67:
                Test0988.iFld += Test0988.sFld;
                break;
            case 68:
                try {
                    Test0988.iArrFld[i2 - 1] = (i4 % i5);
                    i5 = (i3 / -1204785184);
                    Test0988.iArrFld[i2 + 1] = (869926903 % i6);
                } catch (ArithmeticException a_e) {}
                break;
            case 69:
                l1 -= Test0988.instanceCount;
                break;
            case 70:
                Test0988.fArrFld[i2 + 1] *= i3;
                break;
            case 71:
                i7 -= (int) Test0988.instanceCount;
                break;
            case 72:
                i5 += (((i2 * i5) + i4) - i5);
                break;
            }
        }
        long meth_res = l1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i6 + i7;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(double d) {

        int i1=-103;
        int i8=-44188;
        int i9=14;
        int i10=-160;
        int[][] iArr =new int[N][N];
        short s=-1286;
        double d2=98.37328;
        double[] dArr =new double[N];
        byte by=10;

        FuzzerUtils.init(dArr, 2.96139);
        FuzzerUtils.init(iArr, -3399);

        i1 *= (int) (Math.min(i1 - -26, i1 * s) * lMeth(Test0988.instanceCount));
        for (d2 = 9; d2 < 367; d2++) {
            Test0988.fFld *= i1;
            for (i9 = 5; 1 < i9; --i9) {
                Test0988.bFld = Test0988.bFld;
                i8 = i9;
                i1 += (int)(0L + (i9 * i9));
                Test0988.instanceCount ^= 12;
                i8 += (((i9 * i8) + by) - Test0988.instanceCount);
            }
            Test0988.iFld = i8;
        }
        for (double d3 : dArr) {
            iArr = FuzzerUtils.int2array(N, (int)9998);
            i8 = by;
            Test0988.bFld = true;
            Test0988.iFld <<= -208;
        }
        long meth_res = Double.doubleToLongBits(d) + i1 + s + Double.doubleToLongBits(d2) + i8 + i9 + i10 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, long l, boolean b) {

        int i11=-20299, i12=-4, i14=0, i15=-24498;
        byte by1=60;
        double[] dArr1 =new double[N];

        FuzzerUtils.init(dArr1, 2.2647);

        i &= (int) ((l + iMeth(Test0988.dFld)) * 88);
        for (i11 = 8; i11 < 278; i11++) {
            l = 61034;
            i12 += (i11 + Test0988.fFld);
            l *= Test0988.instanceCount;
            Test0988.fArrFld = Test0988.fArrFld;
        }
        for (double d4 : dArr1) {
            i12 = 119;
            if (Test0988.bFld) continue;
            Test0988.iFld -= (int) l;
            i12 = by1;
            for (i14 = 1; i14 < 4; i14++) {
                i15 += (i14 * i14);
                Test0988.iArrFld[i14 + 1] = (int) -1.4466;
                Test0988.iArrFld[i14] = i12;
            }
        }
        vMeth_check_sum += i + l + (b ? 1 : 0) + i11 + i12 + by1 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i16=-7, i17=10, i18=47799, i19=2227, i20=8953, i21=23264, i22=46882;
        double d5=4.66543;
        double[] dArr2 =new double[N];

        FuzzerUtils.init(dArr2, -66.90794);

        vMeth(Test0988.iFld, Test0988.instanceCount, Test0988.bFld);
        for (i16 = 4; i16 < 262; ++i16) {
            Test0988.bFld = Test0988.bFld;
            d5 = 1;
            while (++d5 < 97) {
                for (i18 = 1; i18 > 1; --i18) {
                    i19 *= i16;
                    i19 += (i18 | (long) Test0988.fFld);
                    i17 += (i18 ^ Test0988.instanceCount);
                    Test0988.fFld -= Test0988.iFld;
                    i19 += (i18 - i18);
                    i17 = (int) Test0988.instanceCount;
                    i19 -= i19;
                    Test0988.fFld = i19;
                    Test0988.instanceCount /= (Test0988.instanceCount | 1);
                    dArr2[i18] += i17;
                }
                Test0988.instanceCount = i19;
                i20 = (int) Test0988.instanceCount;
                for (i21 = 1; 1 > i21; i21++) {
                    i22 *= (int)1.124F;
                    Test0988.bFld = Test0988.bFld;
                    i19 -= (int) Test0988.instanceCount;
                    Test0988.fFld = i19;
                    i17 += -57073;
                    i17 += i21;
                    i20 = i16;
                    Test0988.instanceCount *= Test0988.instanceCount;
                    Test0988.instanceCount -= (long) 2.933F;
                }
                Test0988.iArrFld[(int) (d5)] *= (int) Test0988.fFld;
                Test0988.iArrFld[(int) (d5 - 1)] *= i22;
                i19 -= (int) Test0988.instanceCount;
            }
        }

        FuzzerUtils.out.println("i16 i17 d5 = " + i16 + "," + i17 + "," + Double.doubleToLongBits(d5));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 dArr2 = " + i21 + "," + i22 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)));

        FuzzerUtils.out.println("Test0988.instanceCount Test0988.iFld Test0988.bFld = " + Test0988.instanceCount + "," + Test0988.iFld +
                "," + (Test0988.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0988.sFld Test0988.fFld Test0988.dFld = " + Test0988.sFld + "," + Float.floatToIntBits(Test0988.fFld)
                + "," + Double.doubleToLongBits(Test0988.dFld));
        FuzzerUtils.out.println("Test0988.iArrFld Test0988.fArrFld Test0988.bArrFld = " + FuzzerUtils.checkSum(Test0988.iArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0988.fArrFld)) + "," + FuzzerUtils.checkSum(Test0988.bArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0988 _instance = new Test0988();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
