// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0032 {

    public static final int N = 400;

    public static long instanceCount=-6341687304904386214L;
    public static boolean bFld=true;
    public static volatile double dFld=2.118477;
    public static float[] fArrFld =new float[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0032.fArrFld, -97.130F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i6, int i7) {

        int i8=21;
        int i9=-221;
        int i10=-59;
        int i11=236;
        int i12=65294;
        int i13=-35805;
        int i14=-9745;
        int[] iArr1 =new int[N];
        float f=34.201F;
        double d=0.18728;
        long l1=338665219321274893L;
        boolean b=false;

        FuzzerUtils.init(iArr1, -25605);

        for (i8 = 4; i8 < 306; ++i8) {
            i6 += i8;
            f *= (float)d;
            Test0032.instanceCount += i8;
            for (i10 = 1; i10 < 5; i10++) {
                i6 >>= (int)-236L;
            }
            Test0032.instanceCount <<= i8;
        }
        for (l1 = 17; l1 < 310; ++l1) {
            i11 += (int)(l1 * l1);
            try {
                i9 = (i9 % -139);
                i9 = (i12 / i12);
                iArr1[(int)(l1 + 1)] = (1464317844 / i10);
            } catch (ArithmeticException a_e) {}
            if (b) continue;
            switch ((int)(((l1 % 4) * 5) + 103)) {
            case 120:
                for (i13 = (int)(l1); i13 < 6; ++i13) {
                    iArr1 = iArr1;
                    f *= i12;
                }
                break;
            case 119:
                iArr1[(int)(l1 + 1)] &= -5;
                break;
            case 109:
                Test0032.instanceCount |= Test0032.instanceCount;
                break;
            case 105:
                try {
                    i6 = (i12 / 220500771);
                    i12 = (i12 / -20135);
                    i9 = (i7 % -20587);
                } catch (ArithmeticException a_e) {}
                break;
            default:
                iArr1[(int)(l1 - 1)] *= (int)60.707F;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i10 + i11 + l1 + i12
            + (b ? 1 : 0) + i13 + i14 + FuzzerUtils.checkSum(iArr1);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i3, int i4, int i5) {

        float f1=-96.188F;
        float[] fArr =new float[N];
        boolean b1=true;
        double d1=1.54749, d2=0.76838;
        int i15=-62814;
        int[] iArr =new int[N];
        short s=-23980;
        byte by=-119;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -90);
        FuzzerUtils.init(lArr, -206L);
        FuzzerUtils.init(fArr, -15.902F);

        iArr[(i5 >>> 1) % N] <<= (int)(lMeth1(i3, -13) + 27770);
        Test0032.instanceCount >>= i5;
        f1 = i3;
        for (long l2 : lArr) {
            i5 = (int)-160L;
            l2 -= l2;
            i4 = i5;
            b1 = b1;
            fArr[(i3 >>> 1) % N] = i4;
            i5 *= (int)-3649090449L;
        }
        for (d1 = 14; d1 < 354; d1++) {
            iArr[(int)(d1 - 1)] -= i3;
            s += (short) (((d1 * Test0032.instanceCount) + Test0032.instanceCount) - i15);
            by = (byte)i5;
            d2 *= i15;
        }
        vMeth_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + Double.doubleToLongBits(d1) + i15 +
            s + by + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth(int i1, int i2, long l) {

        int i16=-198;
        int i17=2;
        int i18=-5506;
        int i19=49207;
        int i20=4;
        int[] iArr2 =new int[N];
        short s1=29385;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -4L);
        FuzzerUtils.init(iArr2, 221);

        vMeth(i2, i1, i1);
        for (i16 = 3; i16 < 220; ++i16) {
            i18 = 1;
            while (++i18 < 7) {
                i17 += (i18 ^ i2);
                l <<= l;
                i2 *= i17;
                if (Test0032.bFld) break;
                for (i19 = 1; i19 < 1; i19++) {
                    lArr1[i19] &= i18;
                    Test0032.fArrFld[i19] += l;
                    if (false) {
                        iArr2[i16 - 1] -= (int) Test0032.instanceCount;
                        iArr2[i18 - 1] = s1;
                        i17 = i2;
                    } else if (Test0032.bFld) {
                        if (Test0032.bFld) break;
                    } else {
                        i20 += i19;
                    }
                }
            }
        }
        long meth_res = i1 + i2 + l + i16 + i17 + i18 + i19 + i20 + s1 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-37602, i21=49491, i22=18743, i23=-8, i24=-18308, i25=23310, i26=2, i27=61893, i28=17, i29=4986,
            i30=-147, i31=-18032;
        float f2=-120.858F, f3=79.290F;
        byte by1=-15;
        short s2=20419;

        i *= Math.max((int) ((i -= (int) Test0032.instanceCount) - lMeth(i, i, Test0032.instanceCount)), i);
        iArrFld[(i >>> 1) % N] -= i;
        for (f2 = 1; f2 < 281; f2++) {
            Test0032.instanceCount <<= Test0032.instanceCount;
            i21 = i21;
            i21 = 152;
            i22 = 1;
            do {
                i21 += (i22 * i22);
            } while (++i22 < 90);
            i -= (int) Test0032.instanceCount;
            f3 -= i22;
            if (Test0032.bFld) break;
        }
        for (i23 = 9; i23 < 189; ++i23) {
            by1 -= (byte)-216;
            i24 += (-19088 + (i23 * i23));
            Test0032.instanceCount -= i24;
        }
        Test0032.dFld -= 1669840052L;
        for (i25 = 2; i25 < 373; i25++) {
            for (i27 = 3; i27 < 68; ++i27) {
                switch (((i25 % 4) * 5) + 34) {
                case 39:
                    i28 += (int)-12L;
                    Test0032.dFld *= i21;
                    iArrFld[i25] *= i27;
                    break;
                case 43:
                    for (i29 = 1; i29 < 2; i29++) {
                        i24 += i29;
                        i = (int) Test0032.dFld;
                        i31 += (int)(64.987F + (i29 * i29));
                        Test0032.instanceCount += (i29 * i29);
                        iArrFld[i29 - 1] += s2;
                        i26 = (int) Test0032.instanceCount;
                        i31 *= (int)121L;
                    }
                    break;
                case 42:
                    Test0032.instanceCount = -26057;
                    break;
                case 35:
                    iArrFld[i27 - 1] = i;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i f2 i21 = " + i + "," + Float.floatToIntBits(f2) + "," + i21);
        FuzzerUtils.out.println("i22 f3 i23 = " + i22 + "," + Float.floatToIntBits(f3) + "," + i23);
        FuzzerUtils.out.println("i24 by1 i25 = " + i24 + "," + by1 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("s2 = " + s2);

        FuzzerUtils.out.println("Test0032.instanceCount Test0032.bFld Test0032.dFld = " + Test0032.instanceCount + "," + (Test0032.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(Test0032.dFld));
        FuzzerUtils.out.println("Test0032.fArrFld iArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0032.fArrFld))
            + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0032 _instance = new Test0032();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
