// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0183 {

    public static final int N = 400;

    public static long instanceCount=-3509237884L;
    public static volatile int iFld=9;
    public static boolean bFld=true;
    public static float fFld=-2.156F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0183.iArrFld, -43962);
    }

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        double d1=19.128628;

        d1 -= -2073345462056424188L;
        vMeth1_check_sum += i5 + i6 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(double d) {

        float f=-1.232F, f1=-28.967F;
        int i7=234, i8=-7, i9=13;
        short s=4330;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -7089337897555381549L);

        d += 6430566679997706214L;
        switch (((((int) (Test0183.iFld - Test0183.instanceCount)) >>> 1) % 8) + 16) {
        case 16:
            for (int i4 : Test0183.iArrFld) {
                vMeth1(Test0183.iFld, Test0183.iFld);
                Test0183.iArrFld[(i4 >>> 1) % N] += i4;
                f += Test0183.iFld;
                for (f1 = 1; f1 < 4; f1++) {
                    Test0183.iFld = i4;
                    for (i8 = (int)(f1); i8 < 2; ++i8) {
                        Test0183.iArrFld = Test0183.iArrFld;
                        switch ((i8 % 1) + 84) {
                        case 84:
                        }
                    }
                    lArr[(int)(f1)] *= 207;
                    try {
                        i9 = (i4 / -35117);
                        Test0183.iFld = (Test0183.iArrFld[(int) (f1 + 1)] % i4);
                        Test0183.iFld = (72 % i9);
                    } catch (ArithmeticException a_e) {}
                    i7 += (int) (((f1 * Test0183.instanceCount) + f1) - i7);
                }
            }
            f = 45507;
            break;
        case 17:
            s = (short)3218;
            break;
        case 18:
            Test0183.iFld += i7;
            break;
        case 19:
            i7 >>= Test0183.iFld;
        case 20:
            i7 = i9;
            break;
        case 21:
            Test0183.instanceCount = i9;
            break;
        case 22:
            Test0183.iArrFld[(i9 >>> 1) % N] *= (int) f1;
            break;
        case 23:
            i7 = (int)d;
            break;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i7 + i8 +
            i9 + s + FuzzerUtils.checkSum(lArr);
    }

    public static boolean bMeth(int i2, int i3) {

        double d2=46.6286;
        float f2=-1.830F;
        int i10=-22, i11=-66;
        short s1=7785;

        vMeth(d2);
        i2 = (int) Test0183.instanceCount;
        for (f2 = 5; f2 < 359; f2++) {
            i11 = 1;
            do {
                s1 += (short)-18130;
            } while (++i11 < 5);
            i10 *= Test0183.iFld;
        }
        i10 *= Test0183.iFld;
        long meth_res = i2 + i3 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + i10 + i11 + s1;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=3;
        int i1=253;
        int i12=-8;
        int i13=137;
        int i14=-2;
        int i15=8;
        int i16=57230;
        int i17=-17;
        int i18=52827;
        int i19=-52734;
        int[] iArr =new int[N];
        double d3=23.78963;
        byte by=-10;
        float f3=85.238F;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(fArr, 2.377F);

        for (i = 1; i < 135; i++) {
            Test0183.instanceCount -= Integer.reverseBytes((int) (Math.abs(Test0183.instanceCount) * (iArr[i]++)));
            iArr[i + 1] <<= (i1 += i1);
            if (bMeth(i1, i1)) continue;
            i1 = Test0183.iFld;
            Test0183.iFld = (int) Test0183.instanceCount;
            d3 -= 3147901950147965657L;
            if (Test0183.bFld) break;
        }
        i12 += 140;
        for (i13 = 1; i13 < 293; i13++) {
            i12 -= by;
            for (i15 = 2; i15 < 86; i15++) {
                i1 = (int) Test0183.instanceCount;
                try {
                    i14 = (iArr[i13] / i);
                    Test0183.iArrFld[i15] = (1695810454 / i15);
                    i12 = (-1279771584 % Test0183.iArrFld[i15]);
                } catch (ArithmeticException a_e) {}
                Test0183.instanceCount += (0 + (i15 * i15));
                Test0183.iArrFld = Test0183.iArrFld;
                if (Test0183.bFld) continue;
                i1 -= i;
                Test0183.fFld += (i15 * i15);
            }
            fArr[i13 - 1] *= i14;
            if (Test0183.bFld) {
                Test0183.instanceCount >>= -1774387854L;
                i12 &= (int) Test0183.instanceCount;
            }
            Test0183.iFld = Test0183.iFld;
            Test0183.iFld = i13;
            if (false) continue;
            for (i17 = 5; i17 < 86; i17++) {
                for (f3 = 1; f3 < 2; f3++) {
                    Test0183.iFld = i18;
                    Test0183.instanceCount *= i12;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d3 = " + i + "," + i1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("by i15 i16 = " + by + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 f3 = " + i17 + "," + i18 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i19 iArr fArr = " + i19 + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0183.instanceCount Test0183.iFld Test0183.bFld = " + Test0183.instanceCount + "," + Test0183.iFld +
                "," + (Test0183.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0183.fFld Test0183.iArrFld = " + Float.floatToIntBits(Test0183.fFld) + "," +
                FuzzerUtils.checkSum(Test0183.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0183 _instance = new Test0183();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
