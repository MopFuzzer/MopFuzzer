// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0191 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=-12;
    public static volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0191.dArrFld, 0.41043);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=230;
        int i5=-11;
        int i6=13289;
        int i7=58512;
        int i8=-51556;
        int[] iArr =new int[N];
        boolean b=true;
        float f2=-89.625F;

        FuzzerUtils.init(iArr, 154);

        iArr[(-105 >>> 1) % N] += Test0191.iFld;
        iArr[(Test0191.iFld >>> 1) % N] = Test0191.iFld;
        Test0191.iFld = Test0191.iFld;
        if (b) {
            Test0191.iFld *= 146;
            i4 = 1;
            do {
                Test0191.iFld += (i4 * i4);
                Test0191.iFld >>>= (int) Test0191.instanceCount;
                for (i5 = 1; 5 > i5; i5++) {
                    for (i7 = 1; i7 < 2; i7++) {
                        float f1=-1.727F;
                        switch ((((i5 >>> 1) % 1) * 5) + 32) {
                        case 33:
                            i6 *= (int)10L;
                            Test0191.iFld -= (int) f1;
                        default:
                            i6 = i4;
                            Test0191.iFld <<= i8;
                        }
                    }
                }
            } while (++i4 < 319);
        } else if (b) {
            Test0191.iFld *= -239;
        } else {
            Test0191.instanceCount %= ((long) (f2) | 1);
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l2, byte by) {

        int i1=2, i2=0, i3=-29, i9=-3;
        float f=88.22F;
        double d=-13.35524;
        boolean b1=false;

        for (i1 = 2; i1 < 170; ++i1) {
            i3 = 1;
            do {
                l2 = (long)f;
                vMeth1();
                i2 += i2;
                for (d = 1; d < 1; d++) {
                    Test0191.iFld -= i9;
                    b1 = b1;
                    i9 <<= i9;
                    i2 += -8;
                    f += (float) (((d * Test0191.instanceCount) + by) - Test0191.instanceCount);
                    Test0191.instanceCount += (-116 + (d * d));
                    f += f;
                    Test0191.iFld += (int) f;
                    Test0191.iFld += (int) (d * d);
                }
            } while (++i3 < 9);
        }
        vMeth_check_sum += l2 + by + i1 + i2 + i3 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + (b1 ? 1
            : 0);
    }

    public static int iMeth(long l1) {

        int i10=-135, i11=-11, i12=-216, i13=-46984, i14=4, i15=245, i16=84;
        double d1=0.126038;
        short s=-10889;

        vMeth(Test0191.instanceCount, (byte) (15));
        Test0191.iFld = (int) l1;
        Test0191.iFld >>>= Test0191.iFld;
        for (i10 = 2; i10 < 149; ++i10) {
            Test0191.iFld -= i10;
        }
        i11 -= (int)d1;
        i12 = 154;
        while (--i12 > 0) {
            Test0191.instanceCount = 49326;
            s -= (short)i11;
            for (i13 = 1; 10 > i13; ++i13) {
                for (i15 = 1; i15 < 2; i15++) {
                    d1 -= 0.574F;
                    Test0191.instanceCount += i15;
                    if (i14 != 0) {
                    }
                    Test0191.dArrFld[i12 - 1] += 235;
                }
            }
        }
        long meth_res = l1 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + s + i13 + i14 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-205;
        int i17=252;
        int i18=-75;
        int i19=-4;
        int i20=32;
        int i21=-80;
        int i22=22289;
        int i23=6;
        int i24=-58;
        int i25=-3;
        int i26=58969;
        int i27=-49495;
        int[][] iArr1 =new int[N][N];
        double d2=60.110060, d3=0.104141;
        float f3=0.797F, f4=66.702F;
        boolean b2=false;
        long l3=6L;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 159L);
        FuzzerUtils.init(iArr1, -49267);

        for (long l : lArr) {
            i = ((i -= (-214 * iMeth(-8L))) * Test0191.iFld);
            for (i17 = 63; i17 > 1; i17--) {
                i += (i17 * i17);
            }
        }
        for (i19 = 196; i19 > 10; --i19) {
            for (i21 = 5; i21 < 135; i21++) {
                for (d2 = 1; d2 < 2; d2++) {
                    f3 *= 27770;
                }
                i23 %= (int)(i17 | 1);
                iArr1[i21 + 1] = iArr1[i19];
                f3 *= i;
                Test0191.iFld *= (int) f3;
            }
            for (i24 = 4; i24 < 135; ++i24) {
                if (b2) {
                    iArr1[i24 - 1][i19] *= Test0191.iFld;
                } else {
                    Test0191.iFld *= -211;
                    i25 *= (int)1.433F;
                    i23 += (97 + (i24 * i24));
                    if (b2) continue;
                }
                Test0191.instanceCount += (((i24 * Test0191.iFld) + i23) - i17);
                for (l3 = 2; l3 > 1; --l3) {
                    f3 -= i17;
                }
                f3 += l3;
                i18 += i24;
                d3 += 14869L;
            }
            for (f4 = i19; f4 < 135; ++f4) {
                i23 += (int)(-77.933F + (f4 * f4));
                f3 *= Test0191.instanceCount;
                f3 = l3;
                i23 *= (int)f4;
            }
        }

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 d2 i23 = " + i22 + "," + Double.doubleToLongBits(d2) + "," + i23);
        FuzzerUtils.out.println("f3 i24 i25 = " + Float.floatToIntBits(f3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b2 l3 i26 = " + (b2 ? 1 : 0) + "," + l3 + "," + i26);
        FuzzerUtils.out.println("d3 f4 i27 = " + Double.doubleToLongBits(d3) + "," + Float.floatToIntBits(f4) + "," +
            i27);
        FuzzerUtils.out.println("lArr iArr1 = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0191.instanceCount Test0191.iFld Test0191.dArrFld = " + Test0191.instanceCount + "," + Test0191.iFld +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0191.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0191 _instance = new Test0191();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
