// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0641 {

    public static final int N = 400;

    public static long instanceCount=5299967472256430293L;
    public static double dFld=-69.88289;
    public boolean bFld=true;
    public static byte byFld=-60;
    public static int iFld=-91;
    public volatile int iFld1=-30391;
    public static volatile int[] iArrFld =new int[N];
    public static int[] iArrFld1 =new int[N];
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0641.iArrFld, -7670);
        FuzzerUtils.init(Test0641.iArrFld1, 57638);
        FuzzerUtils.init(Test0641.lArrFld, 240L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f, long l, int i7) {

        int i8=41;
        int i9=4;
        int i10=170;
        int i11=9;
        int i12=5;
        int i13=65132;
        int i14=0;
        int[] iArr1 =new int[N];
        byte by=118;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr1, 232);
        FuzzerUtils.init(lArr1, 4L);

        i8 = (int) Test0641.instanceCount;
        iArr1[(i7 >>> 1) % N] = i7;
        i8 >>= -61765;
        lArr1[(i8 >>> 1) % N] >>= i8;
        for (i9 = 256; i9 > 8; i9 -= 3) {
            Test0641.instanceCount >>>= 197;
            by >>>= by;
            for (i11 = 1; i11 < 19; i11++) {
                i7 = i11;
                i8 += i11;
                i10 = (int)f;
                i12 >>= i9;
            }
        }
        for (i13 = 12; i13 < 302; ++i13) {
            long l1=-1839271699L;
            f += 214;
            i12 = (int)l1;
        }
        long meth_res = Float.floatToIntBits(f) + l + i7 + i8 + i9 + i10 + by + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3) {

        int i4=60656;
        int i5=-6;
        int i6=-39920;
        int i15=229;
        int i16=-27890;
        int[] iArr =new int[N];
        float f1=-99.401F;
        byte by1=-16;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 5130);
        FuzzerUtils.init(lArr, 37L);

        iArr[(i3 >>> 1) % N] %= (int)(((lArr[(45474 >>> 1) % N]++) + (iArr[(i3 >>> 1) % N] * i3)) | 1);
        i4 = 1;
        do {
            i3 = (int) (-(--Test0641.instanceCount));
            for (i5 = 1; i5 < 16; ++i5) {
                iArr[i5] += iMeth1(f1, Test0641.instanceCount, i4);
                by1 += (byte)(i5 * i5);
                iArr[i5 - 1] = i5;
                for (i15 = 1; i15 < 2; ++i15) {
                    Test0641.dFld *= Test0641.instanceCount;
                    i6 += (int) Test0641.instanceCount;
                    i6 = by1;
                    iArr[i4 + 1] = i3;
                }
                f1 += f1;
                iArr[i4 - 1] >>= i3;
                i6 -= (int)-5591152227070461787L;
            }
        } while ((i4 += 2) < 192);
        vMeth_check_sum += i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + by1 + i15 + i16 + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(boolean b, int i1, int i2) {

        int i17=-8631;
        int i18=-25;
        int i19=18736;
        int i20=-51160;
        int i21=104;
        int[] iArr2 =new int[N];
        float f2=-79.790F;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 1.109937);
        FuzzerUtils.init(iArr2, 50);

        vMeth(i2);
        i1 = 43;
        i17 = 1;
        do {
            for (i18 = 1; 4 > i18; i18++) {
                dArr[i18] += i2;
                i19 += i1;
                i2 = i18;
                i2 += i18;
                for (i20 = 1; 2 > i20; i20++) {
                    try {
                        i19 = (i1 % 1973942563);
                        i2 = (1063369979 % i1);
                        iArr2[(i18 >>> 1) % N] = (i20 / i20);
                    } catch (ArithmeticException a_e) {}
                    Test0641.instanceCount = i2;
                }
                i2 += i18;
                f2 -= i17;
            }
            if (i18 != 0) {
            }
            iArr2[i17] <<= i21;
        } while (++i17 < 391);
        long meth_res = (b ? 1 : 0) + i1 + i2 + i17 + i18 + i19 + i20 + i21 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i23=-6950, i24=-13, i25=62667;
        double d=1.16568;
        float f3=-11.283F;

        i |= (int) ((-188 + (Test0641.instanceCount * Test0641.instanceCount)) + ((Test0641.instanceCount - i) + iMeth(bFld, i, i)));
        i >>= Test0641.byFld;
        i = (int)-2017230734241241891L;
        bFld = bFld;
        Test0641.instanceCount = -229;
        i23 = 1;
        while (++i23 < 294) {
            for (d = 5; d < 86; ++d) {
                Test0641.instanceCount += i;
                i25 = 2;
                while (--i25 > 0) {
                    Test0641.instanceCount -= i24;
                    switch ((int)((d % 2) + 9)) {
                    case 9:
                    case 10:
                        Test0641.instanceCount >>= Test0641.instanceCount;
                        switch ((int)(((d % 5) * 5) + 29)) {
                        case 35:
                            i24 >>= i23;
                            i += (((i25 * i) + f3) - Test0641.iFld);
                            Test0641.instanceCount = i23;
                            i = (int) Test0641.instanceCount;
                            break;
                        case 38:
                            Test0641.iArrFld[i23 - 1] <<= i25;
                            i >>>= Test0641.iFld;
                        case 42:
                        case 37:
                            Test0641.iFld += (((i25 * Test0641.byFld) + Test0641.instanceCount) - i25);
                            break;
                        case 36:
                            try {
                                Test0641.iArrFld1[(int) (d + 1)] = (Test0641.iFld / i25);
                                i24 = (1180 % i23);
                                Test0641.iFld = (Test0641.iFld % -24901);
                            } catch (ArithmeticException a_e) {}
                            i24 = i23;
                            Test0641.iFld <<= -12;
                            Test0641.instanceCount = Test0641.byFld;
                            break;
                        default:
                            i += (i25 * i25);
                            Test0641.lArrFld[i25] += (long) d;
                        }
                        break;
                    default:
                    }
                    i24 = i23;
                    i *= i;
                }
                Test0641.iFld += (int) (d * d);
                i *= iFld1;
            }
        }

        FuzzerUtils.out.println("i i23 d = " + i + "," + i23 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i24 i25 f3 = " + i24 + "," + i25 + "," + Float.floatToIntBits(f3));

        FuzzerUtils.out.println("Test0641.instanceCount Test0641.dFld bFld = " + Test0641.instanceCount + "," +
                Double.doubleToLongBits(Test0641.dFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0641.byFld Test0641.iFld iFld1 = " + Test0641.byFld + "," + Test0641.iFld + "," + iFld1);
        FuzzerUtils.out.println("Test0641.iArrFld Test0641.iArrFld1 Test0641.lArrFld = " + FuzzerUtils.checkSum(Test0641.iArrFld) + ","
                + FuzzerUtils.checkSum(Test0641.iArrFld1) + "," + FuzzerUtils.checkSum(Test0641.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0641 _instance = new Test0641();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
