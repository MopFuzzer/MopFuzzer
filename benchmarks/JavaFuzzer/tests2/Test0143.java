// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0143 {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static boolean bFld=true;
    public static volatile short sFld=12202;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0143.lArrFld, -6L);
        FuzzerUtils.init(Test0143.iArrFld, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, int i8, boolean b) {

        int i9=10, i10=-14, i11=253, i12=-86, i13=6, i14=169;
        float f=109.726F;
        boolean b1=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)2495);

        Test0143.instanceCount *= i7;
        i9 = 277;
        while ((i9 -= 3) > 0) {
            i7 += (((i9 * i9) + f) - i7);
        }
        for (i10 = 11; 306 > i10; i10 += 2) {
            if (b1) {
                for (i12 = 11; i12 > i10; i12 -= 3) {
                    i8 += (((i12 * i7) + Test0143.instanceCount) - i7);
                    sArr[i12 - 1] *= (short)i11;
                    i14 = 1;
                    do {
                        if (true) {
                            Test0143.instanceCount *= Test0143.instanceCount;
                            Test0143.lArrFld = FuzzerUtils.long1array(N, (long) 2532236632L);
                        } else if (b1) {
                            i8 *= i11;
                            Test0143.lArrFld[i12] = i12;
                        } else {
                            Test0143.instanceCount -= -168;
                        }
                    } while (++i14 < 1);
                }
            }
        }
        vMeth2_check_sum += i7 + i8 + (b ? 1 : 0) + i9 + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + i14 + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(int i3, long l1, long l2) {

        int i4=-142;
        int i5=0;
        int i6=-81;
        int i15=8298;
        int i16=85;
        int[] iArr =new int[N];
        long l3=-203L;
        float f1=84.154F;

        FuzzerUtils.init(iArr, 11);

        for (i4 = 10; i4 < 208; ++i4) {
            for (l3 = 8; l3 > 1; --l3) {
                vMeth2(i5, i4, Test0143.bFld);
                Test0143.bFld = Test0143.bFld;
                for (i15 = 1; 2 > i15; i15++) {
                    i3 = i15;
                    l1 = -55111;
                    l2 += (i15 * i15);
                    l1 ^= i3;
                    i16 -= i16;
                    i5 = (int) Test0143.instanceCount;
                    iArr[i15 + 1] *= i3;
                }
                l2 += (l3 * l3);
                f1 += l3;
            }
            i5 -= i5;
        }
        vMeth1_check_sum += i3 + l1 + l2 + i4 + i5 + l3 + i6 + i15 + i16 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i2, long l) {


        vMeth1(i2, Test0143.instanceCount, l);
        vMeth_check_sum += i2 + l;
    }

    public void mainTest(String[] strArr1) {

        int i=7;
        int i1=-5247;
        int i17=117;
        int i18=-3;
        int i19=-140;
        int i20=-3;
        int i21=-3;
        int i22=-79;
        int i23=-14686;
        int[] iArr1 =new int[N];
        float f2=0.966F;
        double d=2.21220;

        FuzzerUtils.init(iArr1, -158);

        for (i = 9; i < 357; ++i) {
            i1 += i;
            vMeth(i1, 22711L);
            for (i17 = 2; i17 < 72; i17++) {
                i1 += (((i17 * i1) + i) - i1);
                Test0143.lArrFld[i - 1] = (long) f2;
                Test0143.sFld += (short) f2;
                try {
                    i1 = (i1 / -210);
                    i1 = (i / 90);
                    i18 = (-1395913197 % i18);
                } catch (ArithmeticException a_e) {}
                i19 = 1;
                while (++i19 < 2) {
                    Test0143.instanceCount = i17;
                    i18 += i19;
                    Test0143.instanceCount += i;
                    Test0143.instanceCount = i17;
                    Test0143.sFld -= (short) d;
                    try {
                        i18 = (i19 % 157);
                        i18 = (i17 % i);
                        Test0143.iArrFld[i19] = (i1 / 256);
                    } catch (ArithmeticException a_e) {}
                    Test0143.instanceCount += i18;
                }
                iArr1[i17] = (int)-17801L;
            }
            Test0143.iArrFld[i - 1] = (int) d;
            i1 = i18;
            i1 += i;
            i18 <<= i19;
        }
        for (i20 = 8; i20 < 393; i20++) {
            Test0143.sFld -= (short) i19;
            for (i22 = 1; i22 < 65; i22++) {
                i1 <<= i21;
                Test0143.instanceCount = Test0143.instanceCount;
                i21 += (int)89.100114;
                i23 >>= i;
                iArr1[i20 + 1] <<= -10;
                Test0143.instanceCount -= (long) d;
            }
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 f2 i19 = " + i18 + "," + Float.floatToIntBits(f2) + "," + i19);
        FuzzerUtils.out.println("d i20 i21 = " + Double.doubleToLongBits(d) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 iArr1 = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0143.instanceCount Test0143.bFld Test0143.sFld = " + Test0143.instanceCount + "," + (Test0143.bFld ? 1
                : 0) + "," + Test0143.sFld);
        FuzzerUtils.out.println("Test0143.lArrFld Test0143.iArrFld = " + FuzzerUtils.checkSum(Test0143.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0143.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0143 _instance = new Test0143();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
