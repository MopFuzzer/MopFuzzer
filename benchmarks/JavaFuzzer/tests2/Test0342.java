// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0342 {

    public static final int N = 400;

    public static long instanceCount=111L;
    public static int iFld=-52812;
    public static short sFld=-1639;
    public static volatile long lFld=-3L;
    public static boolean bFld=false;
    public static double dFld=-36.56519;
    public static int[] iArrFld =new int[N];
    public static float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0342.iArrFld, 228);
        FuzzerUtils.init(Test0342.fArrFld, 26.549F);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i1, boolean b) {

        byte by=-33;
        float f=64.750F;
        int i2=6, i3=-63110, i4=12, i5=10;

        i1 -= by;
        f = i1;
        for (i2 = 11; i2 < 240; i2++) {
            switch (((i2 % 3) * 5) + 12) {
            case 18:
                i1 = i2;
                if (b) break;
                break;
            case 20:
                i4 = 1;
                while (++i4 < 7) {
                    Test0342.iArrFld[i2] = 5384;
                    i1 = by;
                    by += (byte)i4;
                    i1 = i1;
                }
                i5 = 1;
                while (++i5 < 7) {
                    i1 += i3;
                    Test0342.iArrFld[i2] /= (int) (i4 | 1);
                    i1 >>>= 236;
                }
            case 16:
                i3 -= (int) Test0342.instanceCount;
                break;
            }
        }
        vMeth_check_sum += i1 + (b ? 1 : 0) + by + Float.floatToIntBits(f) + i2 + i3 + i4 + i5;
    }

    public static int iMeth1(double d) {

        boolean b1=false;
        int i6=164, i7=-97, i9=245;

        vMeth(6, b1);
        Test0342.iFld = Test0342.iFld;
        i6 = 1;
        do {
            Test0342.instanceCount = 22447;
            Test0342.iFld *= (int) Test0342.instanceCount;
            Test0342.iFld *= i6;
            Test0342.iFld = Test0342.iFld;
        } while (++i6 < 325);
        i7 = 1;
        while (++i7 < 191) {
            Test0342.instanceCount = Test0342.iFld;
            d -= Test0342.instanceCount;
            if (b1) {
                Test0342.sFld = (short) i7;
            }
        }
        for (int i8 : Test0342.iArrFld) {
            try {
                i9 = (i9 / i9);
                Test0342.iFld = (4991 / Test0342.iFld);
                i8 = (-17685 % Test0342.iArrFld[(i6 >>> 1) % N]);
            } catch (ArithmeticException a_e) {}
        }
        Test0342.iFld = i7;
        long meth_res = Double.doubleToLongBits(d) + (b1 ? 1 : 0) + i6 + i7 + i9;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i=-225, i10=6, i11=9, i12=7, i13=-234, i14=-4, i15=247;
        double d1=-84.22714, d2=0.69743;
        float f1=-121.543F;

        i *= (iMeth1(d1) - i);
        i *= Test0342.iFld;
        for (i10 = 5; i10 < 179; ++i10) {
            i12 = 9;
            while (--i12 > 0) {
                i += (i12 * i11);
                Test0342.instanceCount = i;
                Test0342.instanceCount = i11;
            }
            Test0342.iFld += (int) f1;
            Test0342.iFld >>= 61683;
            for (i13 = 1; i13 < 9; i13++) {
                Test0342.lFld += (i13 - Test0342.lFld);
                for (d2 = 1; 2 > d2; d2++) {
                    if (Test0342.bFld) continue;
                    f1 = 241;
                    i11 -= (int) Test0342.lFld;
                }
            }
        }
        long meth_res = i + Double.doubleToLongBits(d1) + i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 +
            Double.doubleToLongBits(d2) + i15;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f2=-101.783F;
        int i16=-10, i17=-11, i18=-10, i19=8, i20=-25833, i21=234, i22=25000, i23=-1;
        byte by1=-20;

        iMeth();
        f2 *= Test0342.iFld;
        for (i16 = 3; i16 < 174; ++i16) {
            for (i18 = 1; i18 < 147; ++i18) {
                by1 = (byte)i17;
                for (i20 = i18; i20 < 2; i20++) {
                    i21 *= 8;
                    Test0342.fArrFld[i18 + 1][i16 + 1] += i16;
                    Test0342.sFld += (short) Test0342.dFld;
                    Test0342.dFld = i19;
                    i17 <<= 48857;
                    i17 -= (int)f2;
                    f2 = 1;
                    i17 = i16;
                }
                Test0342.instanceCount += i18;
                for (i22 = 1; i22 < 2; i22++) {
                    i19 += i20;
                    Test0342.instanceCount += i18;
                    Test0342.lFld += (long) Test0342.dFld;
                    Test0342.sFld += (short) (i22 | i22);
                    i21 -= (int) Test0342.lFld;
                    Test0342.iFld += i22;
                    Test0342.iFld = -127;
                    if (Test0342.bFld) break;
                    switch ((i16 % 1) + 99) {
                    case 99:
                        f2 -= f2;
                    default:
                        by1 += (byte)(((i22 * f2) + f2) - i23);
                        Test0342.dFld -= i21;
                        Test0342.iArrFld[i18 - 1] = (int) Test0342.lFld;
                        try {
                            Test0342.iArrFld[i22 + 1] = (i20 % -5229);
                            i21 = (Test0342.iArrFld[i18 + 1] / 215);
                            Test0342.iFld = (Test0342.iArrFld[i18 + 1] % -134);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }

        FuzzerUtils.out.println("f2 i16 i17 = " + Float.floatToIntBits(f2) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 by1 = " + i18 + "," + i19 + "," + by1);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 = " + i23);

        FuzzerUtils.out.println("Test0342.instanceCount Test0342.iFld Test0342.sFld = " + Test0342.instanceCount + "," + Test0342.iFld +
                "," + Test0342.sFld);
        FuzzerUtils.out.println("Test0342.lFld Test0342.bFld Test0342.dFld = " + Test0342.lFld + "," + (Test0342.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0342.dFld));
        FuzzerUtils.out.println("Test0342.iArrFld Test0342.fArrFld = " + FuzzerUtils.checkSum(Test0342.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0342.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0342 _instance = new Test0342();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
