// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0447 {

    public static final int N = 400;

    public static long instanceCount=3L;
    public static float fFld=2.815F;
    public static double dFld=104.123329;
    public boolean bFld=false;
    public short sFld=-27079;
    public static int[][] iArrFld =new int[N][N];
    public static volatile float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0447.iArrFld, 9);
        FuzzerUtils.init(Test0447.fArrFld, 0.140F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(long l) {

        short s=-30660;
        byte by=-65;
        int i1=-4, i2=23505, i3=57328;
        float f=124.497F;
        boolean b=false;

        s = (short)-65532;
        by = (byte)-17213;
        i1 = 159;
        while (--i1 > 0) {
            double d=-13.32690;
            Test0447.instanceCount /= (i1 | 1);
            i2 += i1;
            d = f;
        }
        i3 = 1;
        do {
            if (b) {
                l += i3;
                i2 >>>= i2;
                i2 += (int)117.420F;
            }
            f = l;
            l = s;
            i2 += i3;
            f += i3;
        } while (++i3 < 335);
        long meth_res = l + s + by + i1 + i2 + Float.floatToIntBits(f) + i3 + (b ? 1 : 0);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1(int i) {

        short s1=-19001;
        byte by1=-65;
        double d1=1.6955;
        int i4=-1545;
        int[][] iArr =new int[N][N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 50643);
        FuzzerUtils.init(lArr, 0L);

        i *= (int) (byMeth(Test0447.instanceCount) % (Test0447.instanceCount | 1));
        s1 <<= (short)i;
        i = i;
        i >>= i;
        by1 = (byte)d1;
        iArr[(i >>> 1) % N][(47037 >>> 1) % N] = i;
        lArr[(i >>> 1) % N] -= i;
        iArr[(159 >>> 1) % N][(i >>> 1) % N] = -201;
        i = -187;
        i += i;
        i4 = 1;
        while ((i4 += 2) < 160) {
            iArr[i4][i4 - 1] = -103;
            i -= (int)23.56664;
            Test0447.instanceCount += (((i4 * Test0447.fFld) + i4) - Test0447.instanceCount);
            i += i4;
        }
        vMeth1_check_sum += i + s1 + by1 + Double.doubleToLongBits(d1) + i4 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i5=181;
        int i6=-14;
        int i7=-10;
        int i8=5;
        int i9=-36;
        int i10=-5;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -227);

        vMeth1(i5);
        i5 -= (int) Test0447.dFld;
        i5 %= (int)(i5 | 1);
        for (i6 = 2; i6 < 228; i6++) {
            i8 = 1;
            while (++i8 < 7) {
                i7 *= i8;
                iArr1[i6 + 1] = 7;
                i7 += i7;
                Test0447.fFld -= Test0447.fFld;
                i5 *= (int) Test0447.instanceCount;
                for (i9 = 1; i9 > 1; i9 -= 2) {
                    i5 /= (int) ((long) (Test0447.fFld) | 1);
                    try {
                        iArr1[i6 - 1] = (-80 / i5);
                        i10 = (-19023 % iArr1[i9]);
                        i5 = (i7 % -39669);
                    } catch (ArithmeticException a_e) {}
                    Test0447.instanceCount = i5;
                    i10 += (i9 * i7);
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i11=-11, i12=20541, i13=-12, i14=-21665, i15=-137;
        short[] sArr =new short[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(sArr, (short)18755);
        FuzzerUtils.init(lArr1, 584878033L);

        vMeth();
        bFld = bFld;
        if (bFld) {
            for (i11 = 227; i11 > 13; i11 -= 3) {
                i12 += (8 + (i11 * i11));
                bFld = bFld;
                if (bFld) {
                    i12 += (i11 + Test0447.fFld);
                    i12 += (int)1339300106L;
                    Test0447.instanceCount += i12;
                    i13 = 353;
                    while (--i13 > 0) {
                        byte by2=9;
                        float f1=-64.190F;
                        i12 += i13;
                        Test0447.iArrFld[i13 + 1][i11 + 1] = by2;
                        i12 *= (int)f1;
                        for (i14 = 1; i14 < 1; i14 += 2) {
                            Test0447.iArrFld[i14 - 1][i11 + 1] = (int) Test0447.fFld;
                            Test0447.fArrFld[i14 + 1] = 6;
                            sArr[i11 + 1] = (short) Test0447.instanceCount;
                            Test0447.fFld += i15;
                            switch (((i14 % 2) * 5) + 105) {
                            case 115:
                                switch ((i14 % 2) + 16) {
                                case 16:
                                    if (bFld) {
                                        lArr1[i13 + 1] = (long) Test0447.fFld;
                                        Test0447.instanceCount -= (long) Test0447.dFld;
                                    }
                                    break;
                                case 17:
                                    i15 += (0 + (i14 * i14));
                                    break;
                                default:
                                    i12 /= (int)(i14 | 1);
                                    i12 += (((i14 * i14) + i11) - Test0447.instanceCount);
                                }
                                Test0447.iArrFld[i11 + 1][i11 + 1] *= i11;
                                break;
                            case 113:
                                lArr1[i11] = sFld;
                                f1 = Test0447.instanceCount;
                                break;
                            }
                        }
                    }
                }
            }
        } else {
            bFld = bFld;
        }

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 sArr = " + i14 + "," + i15 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0447.instanceCount Test0447.fFld Test0447.dFld = " + Test0447.instanceCount + "," +
                Float.floatToIntBits(Test0447.fFld) + "," + Double.doubleToLongBits(Test0447.dFld));
        FuzzerUtils.out.println("bFld sFld Test0447.iArrFld = " + (bFld ? 1 : 0) + "," + sFld + "," +
                FuzzerUtils.checkSum(Test0447.iArrFld));
        FuzzerUtils.out.println("Test0447.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0447.fArrFld)));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0447 _instance = new Test0447();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
