// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0827 {

    public static final int N = 400;

    public static volatile long instanceCount=13190L;
    public volatile double dFld=1.763;
    public static byte byFld=-49;

    public static long vSmallMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vSmallMeth(byte by, int i, long l) {

        double d=2.121167;

        d -= (i - ((i--) * (i * 38116L)));
        vSmallMeth_check_sum += by + i + l + Double.doubleToLongBits(d);
    }

    public static void vMeth(int i10, int i11) {

        int i12=36174;
        int i13=13;
        int i14=57270;
        int i15=-14;
        int i16=30;
        int i17=-41308;
        int i18=-234;
        int[] iArr =new int[N];
        double d1=0.14347;
        float f3=41.52F, f4=2.689F;
        long l2=10L;
        boolean b=true;
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(iArr, -6);
        FuzzerUtils.init(bArr, false);

        for (i12 = 2; i12 < 210; i12++) {
            i13 = (int)d1;
            iArr = iArr;
            for (i14 = 8; i14 > 1; i14 -= 2) {
                for (f3 = 1; f3 < 3; ++f3) {
                    f4 += (19840 + (f3 * f3));
                    iArr[(int) (f3 + 1)] >>= (int) Test0827.instanceCount;
                    i10 = i11;
                }
            }
            for (i17 = 1; i17 < 8; i17++) {
                switch ((i12 % 1) + 3) {
                case 3:
                    i15 = (int)-11L;
                    break;
                }
                switch (((-10558 >>> 1) % 2) + 98) {
                case 98:
                    l2 = (long)f3;
                    i16 = i11;
                    i10 += (i17 ^ i11);
                    break;
                case 99:
                    bArr[i17 - 1][i12] = b;
                }
            }
        }
        vMeth_check_sum += i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15 + Float.floatToIntBits(f3) +
            i16 + Float.floatToIntBits(f4) + i17 + i18 + l2 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth(int i2, int i3) {

        int i4=-83;
        int i5=-70;
        int i6=134;
        int i7=3;
        int i8=1;
        int i9=-131;
        int i19=8;
        int i20=43816;
        int[] iArr1 =new int[N];
        float f2=86.337F;
        byte by1=76;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 10L);
        FuzzerUtils.init(iArr1, -11);

        for (i4 = 10; i4 < 185; ++i4) {
            i3 += (i3++);
        }
        for (i6 = 7; i6 < 328; i6++) {
            switch (((i6 % 2) * 5) + 45) {
            case 55:
                i5 += (int)(247L + (i6 * i6));
                f2 += (((i6 * i8) + i2) - i7);
                break;
            case 52:
                i9 = 1;
                do {
                    vMeth(i6, i8);
                    for (i19 = i6; i19 < 1; ++i19) {
                        f2 += i19;
                        f2 -= by1;
                        iArr1[i6] >>= 12129;
                        i5 += i19;
                    }
                    Test0827.instanceCount = Test0827.instanceCount;
                } while (++i9 < 5);
                i2 += (int) Test0827.instanceCount;
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + i8 + i9 + i19 + i20 + by1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public byte byMeth() {

        int i1=13, i21=-4, i22=11, i23=377, i24=-1;
        float f=8.445F, f1=32.407F;
        long[] lArr1 =new long[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(lArr1, 254L);
        FuzzerUtils.init(dArr, 19.10380);

        i1 = (int)(((i1 >> i1) + Math.min(i1, i1)) * ((f * dFld) + 23L));
        f1 = 1;
        do {
            if (Math.abs(iMeth(i1, -240)) > dFld) break;
            switch ((int)(((f1 % 2) * 5) + 110)) {
            case 113:
                for (i21 = 1; i21 < 6; ++i21) {
                    for (i23 = 1; i23 < 2; i23++) {
                        i24 += (int) Test0827.instanceCount;
                        i24 += i21;
                        lArr1 = FuzzerUtils.long1array(N, (long)9L);
                        f = Test0827.instanceCount;
                        dArr[i23 + 1][i21 - 1] -= 57067;
                        i1 >>>= (int) Test0827.instanceCount;
                        i22 = -7;
                        Test0827.instanceCount += i23;
                        Test0827.instanceCount <<= i22;
                    }
                }
                break;
            case 119:
                i22 += (8 + (f1 * f1));
                break;
            }
        } while (++f1 < 258);
        long meth_res = i1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i21 + i22 + i23 + i24 +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i25=10032;
        int i26=9380;
        int i27=-43320;
        int i28=-11;
        int i29=10;
        int i30=121;
        int[] iArr2 =new int[N];
        float f5=1.714F, f6=0.932F;
        short s=-4630;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 2019650004620498479L);
        FuzzerUtils.init(iArr2, -28094);

        for (int smallinvoc=0; smallinvoc<359; smallinvoc++) vSmallMeth(byMeth(), i25, 233L);
        for (i26 = 6; i26 < 282; i26++) {
            for (i28 = 4; i28 < 91; i28++) {
                i30 = 2;
                do {
                    boolean b1=false;
                    switch (((i28 % 9) * 5) + 63) {
                    case 93:
                    case 101:
                        i29 >>= i28;
                        lArr2[i28 + 1] += Test0827.instanceCount;
                        break;
                    case 77:
                        Test0827.instanceCount = i29;
                        i29 = (int) Test0827.instanceCount;
                        switch ((i28 % 2) + 31) {
                        case 31:
                            if (b1) {
                                switch ((((-135 >>> 1) % 9) * 5) + 22) {
                                case 47:
                                    i27 |= (int) Test0827.instanceCount;
                                    break;
                                case 55:
                                    Test0827.instanceCount += (i30 * Test0827.instanceCount);
                                    i27 *= i25;
                                    i25 ^= -65105;
                                    i29 += (((i30 * i29) + i29) - i26);
                                    break;
                                case 40:
                                    i29 += (int) Test0827.instanceCount;
                                    i25 -= (int) Test0827.instanceCount;
                                    i25 = 217;
                                    break;
                                case 45:
                                    i29 = i27;
                                    Test0827.instanceCount += (i30 | i29);
                                    break;
                                case 60:
                                    lArr2[i30 + 1] -= (long)f5;
                                    try {
                                        i29 = (i30 % -65139);
                                        i29 = (i25 % 100);
                                        i25 = (i29 % i28);
                                    } catch (ArithmeticException a_e) {}
                                    i27 = i28;
                                    i27 += (i30 - Test0827.instanceCount);
                                    break;
                                case 43:
                                    s += (short) (((i30 * f5) + Test0827.instanceCount) - s);
                                    iArr2[i28 + 1] = Test0827.byFld;
                                    break;
                                case 59:
                                    lArr2[i30 - 1] = i27;
                                    i27 += i28;
                                    break;
                                case 63:
                                    Test0827.byFld += (byte) i30;
                                    break;
                                case 31:
                                    iArr2[i28] += (int) Test0827.instanceCount;
                                    break;
                                default:
                                    Test0827.byFld = (byte) Test0827.instanceCount;
                                }
                            }
                            break;
                        case 32:
                            try {
                                i27 = (iArr2[(i28 >>> 1) % N] % i28);
                                i25 = (i28 / 1246484875);
                                i25 = (i29 % -150);
                            } catch (ArithmeticException a_e) {}
                            break;
                        }
                        break;
                    case 83:
                        i29 += (((i30 * f6) + Test0827.instanceCount) - Test0827.instanceCount);
                        break;
                    case 107:
                        iArr2[i26] = i25;
                        break;
                    case 84:
                        i27 >>= i28;
                        break;
                    case 76:
                        i29 += i28;
                    case 78:
                        i27 -= i27;
                    case 67:
                        i25 += (int) Test0827.instanceCount;
                        break;
                    }
                } while (--i30 > 0);
            }
        }

        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("f5 s f6 = " + Float.floatToIntBits(f5) + "," + s + "," + Float.floatToIntBits(f6));
        FuzzerUtils.out.println("lArr2 iArr2 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0827.instanceCount dFld Test0827.byFld = " + Test0827.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0827.byFld);

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0827 _instance = new Test0827();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
