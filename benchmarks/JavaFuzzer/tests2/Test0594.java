// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0594 {

    public static final int N = 400;

    public static long instanceCount=3882687758L;
    public static byte byFld=44;
    public static volatile boolean bFld=false;
    public int iFld=-11;
    public float fFld=-2.363F;
    public double dFld=-1.100363;
    public static short sFld=-19226;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0594.lArrFld, -5504623613826799577L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, long l2, short s) {

        int i4=-2, i5=-183, i6=-25, i7=-53134;
        long l3=-26679L;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(byArr, (byte)19);

        Test0594.instanceCount = i4;
        i4 -= i4;
        i4 &= i4;
        i4 = (int) Test0594.instanceCount;
        for (i5 = 248; i5 > 3; i5--) {
            i6 *= i6;
            byArr[i5][i5 + 1] -= (byte)l2;
        }
        i6 += i6;
        s = (short) Test0594.instanceCount;
        i7 = 369;
        do {
            i4 += (int)l3;
            f += l2;
            Test0594.instanceCount -= Test0594.byFld;
            Test0594.lArrFld[i7] >>= i6;
        } while (--i7 > 0);
        i6 -= (int)l2;
        vMeth2_check_sum += Float.floatToIntBits(f) + l2 + s + i4 + i5 + i6 + i7 + l3 + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(int i3) {


        vMeth2(-2.163F, Test0594.instanceCount, (short) (917));
        Test0594.lArrFld[(-99 >>> 1) % N] -= 3;
        vMeth1_check_sum += i3;
    }

    public static void vMeth(int i, long l, long l1) {

        int i1=-160;
        int i2=14;
        int i8=176;
        int i9=-8;
        int[] iArr =new int[N];
        float f1=0.525F;
        short s1=-14750;

        FuzzerUtils.init(iArr, 6);

        i1 = 1;
        do {
            i2 = 1;
            do {
                vMeth1(i);
                iArr[i2 - 1] += i;
                i *= (int)f1;
                if (false) continue;
                i8 = 1;
                while (++i8 < 1) {
                    i += i8;
                    i += (i8 | i2);
                }
                switch ((i1 % 7) + 125) {
                case 125:
                    i >>= -60;
                    i *= i8;
                    break;
                case 126:
                    i9 = 1;
                    while (++i9 < 1) {
                        l1 += (((i9 * s1) + i2) - i);
                        Test0594.byFld += (byte) (-29250 + (i9 * i9));
                    }
                    break;
                case 127:
                case 128:
                    if (Test0594.bFld) break;
                    break;
                case 129:
                    iArr[i1 + 1] |= s1;
                    break;
                case 130:
                    i += (i2 * i2);
                    break;
                case 131:
                    Test0594.bFld = Test0594.bFld;
                default:
                    i += i2;
                }
            } while (++i2 < 8);
        } while (++i1 < 189);
        vMeth_check_sum += i + l + l1 + i1 + i2 + Float.floatToIntBits(f1) + i8 + i9 + s1 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i10=-52870;
        int i11=3;
        int i12=15241;
        int i13=-58847;
        int i14=0;
        int i15=3;
        int i16=20438;
        int[] iArr1 =new int[N];
        byte[] byArr1 =new byte[N];

        FuzzerUtils.init(iArr1, 14);
        FuzzerUtils.init(byArr1, (byte)44);

        vMeth(iFld, -4464788505394175073L, Test0594.instanceCount);
        for (long l4 : Test0594.lArrFld) {
            iFld = iFld;
            for (i10 = 3; i10 < 63; i10++) {
                for (i12 = 1; i12 < 2; ++i12) {
                    Test0594.bFld = false;
                    fFld *= i13;
                    dFld += 6;
                    i11 += (int)fFld;
                    l4 += i12;
                    fFld += ((long)i12 | (long)iFld);
                    i11 += (((i12 * Test0594.instanceCount) + i11) - i11);
                }
                switch ((i10 % 3) + 30) {
                case 30:
                    i11 ^= i12;
                    break;
                case 31:
                case 32:
                    for (i14 = 1; i14 < 2; i14++) {
                        l4 += i12;
                        fFld += -26422;
                    }
                    switch (((i10 % 1) * 5) + 124) {
                    case 129:
                        Test0594.lArrFld[i10 - 1] -= Test0594.instanceCount;
                        i15 |= (int) Test0594.instanceCount;
                        iArr1[i10 - 1] -= (int)fFld;
                        Test0594.instanceCount += i15;
                        break;
                    }
                    i16 = 1;
                    do {
                        l4 += Test0594.sFld;
                        Test0594.byFld = (byte) i16;
                        l4 = i11;
                        byArr1[i16] = (byte) Test0594.instanceCount;
                        Test0594.instanceCount ^= 12203;
                        Test0594.instanceCount += l4;
                    } while (++i16 < 2);
                    Test0594.byFld += (byte) (-53487 + (i10 * i10));
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 iArr1 byArr1 = " + i16 + "," + FuzzerUtils.checkSum(iArr1) + "," +
            FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0594.instanceCount Test0594.byFld Test0594.bFld = " + Test0594.instanceCount + "," + Test0594.byFld +
                "," + (Test0594.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld fFld dFld = " + iFld + "," + Float.floatToIntBits(fFld) + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0594.sFld Test0594.lArrFld = " + Test0594.sFld + "," + FuzzerUtils.checkSum(Test0594.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0594 _instance = new Test0594();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
