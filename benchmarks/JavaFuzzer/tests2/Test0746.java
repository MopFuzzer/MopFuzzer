// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0746 {

    public static final int N = 400;

    public static long instanceCount=-46683L;
    public int iFld=-10;
    public static int iFld1=106;
    public static float fFld=1.357F;
    public static byte byFld=51;
    public int iFld2=111;
    public static double dFld=2.9863;
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0746.sArrFld, (short) 21081);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;

    public static float fMeth1() {

        int i1=-230;
        int i2=210;
        int[][] iArr3 =new int[N][N];
        byte by=-25;
        double d=0.92045;

        FuzzerUtils.init(iArr3, -35661);

        i1 = 1;
        do {
            Test0746.fFld = Test0746.instanceCount;
            Test0746.iFld1 += i1;
            switch (((-3 >>> 1) % 7) + 114) {
            case 114:
                i2 = 1;
                do {
                    iArr3[i1][i2] = i1;
                    Test0746.fFld = Test0746.iFld1;
                    switch ((((Test0746.iFld1 >>> 1) % 10) * 5) + 23) {
                    case 72:
                    case 59:
                        by = (byte) Test0746.instanceCount;
                        Test0746.iFld1 -= 13626;
                        Test0746.iFld1 += (((i2 * Test0746.instanceCount) + i2) - Test0746.instanceCount);
                        break;
                    case 62:
                        Test0746.fFld -= -7;
                        d = Test0746.iFld1;
                        d *= i2;
                        iArr3[i2 - 1][i1 + 1] <<= i1;
                    case 50:
                        Test0746.iFld1 = (int) Test0746.instanceCount;
                        break;
                    case 32:
                        Test0746.iFld1 = (int) 174679100L;
                        break;
                    case 47:
                        Test0746.iFld1 += i2;
                        break;
                    case 57:
                    case 64:
                        iArr3[i2] = iArr3[i2 - 1];
                        break;
                    case 53:
                        Test0746.instanceCount += (((i2 * i2) + i2) - Test0746.fFld);
                    case 37:
                        if (false) continue;
                        break;
                    default:
                        by = (byte) Test0746.iFld1;
                    }
                } while (++i2 < 6);
                break;
            case 115:
                iArr3[i1][i1] = i1;
                break;
            case 116:
                Test0746.iFld1 += (((i1 * i2) + Test0746.fFld) - Test0746.iFld1);
            case 117:
                Test0746.iFld1 ^= Test0746.iFld1;
                break;
            case 118:
                Test0746.iFld1 -= i2;
                break;
            case 119:
                iArr3[i1 + 1][i1 - 1] -= i1;
                break;
            case 120:
                Test0746.iFld1 += (i1 ^ Test0746.instanceCount);
                break;
            default:
                Test0746.instanceCount += (i1 * i1);
            }
        } while (++i1 < 287);
        long meth_res = i1 + i2 + by + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr3);
        fMeth1_check_sum += meth_res;
        return (float)meth_res;
    }

    public static float fMeth(int i, boolean b) {

        double d1=-1.22719;
        int i3=-48528;
        int i4=-39;
        int i5=-48627;
        int[] iArr2 =new int[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr2, -3615);
        FuzzerUtils.init(fArr, -2.851F);

        iArr2[(Test0746.iFld1 >>> 1) % N] = Test0746.iFld1;
        i += (int)Math.abs(fMeth1());
        d1 = 1;
        do {
            i3 = 1;
            while (++i3 < 11) {
                i >>>= Test0746.iFld1;
                fArr[(int) (d1)] -= Test0746.iFld1;
                Test0746.iFld1 -= i3;
                i += (((i3 * Test0746.instanceCount) + Test0746.instanceCount) - Test0746.instanceCount);
                i = 58969;
            }
            if (b) break;
            Test0746.iFld1 -= (int) Test0746.instanceCount;
            for (i4 = (int)(d1); i4 < 11; i4++) {
                Test0746.iFld1 -= i3;
                i5 = i5;
            }
            Test0746.fFld *= i;
        } while (++d1 < 140);
        long meth_res = i + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i3 + i4 + i5 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth() {

        short s=3881;
        boolean b1=true;
        int i6=-87;
        int i7=63169;
        int i8=-1;
        int i9=-238;
        int i10=13;
        int[][] iArr1 =new int[N][N];
        double d2=-74.14850;

        FuzzerUtils.init(iArr1, 0);

        Test0746.iFld1 <<= (int) ((iArr1[(Test0746.iFld1 >>> 1) % N][(8080 >>> 1) % N] - (s *= (short) -2816359173235568604L)) -
                fMeth(Test0746.iFld1, b1));
        Test0746.iFld1 >>= Test0746.iFld1;
        Test0746.iFld1 = Test0746.iFld1;
        i6 = 1;
        do {
            Test0746.iFld1 &= s;
            for (i7 = 1; 23 > i7; i7++) {
                Test0746.iFld1 -= 3;
                d2 += i8;
                i8 = s;
                Test0746.fFld += (i7 - Test0746.iFld1);
                for (i9 = 1; i9 < 2; ++i9) {
                    Test0746.iFld1 += (((i9 * Test0746.instanceCount) + Test0746.iFld1) - i10);
                    Test0746.instanceCount -= -8;
                    Test0746.instanceCount -= -54534;
                    i10 += (((i9 * i9) + Test0746.byFld) - i10);
                }
            }
        } while ((i6 += 3) < 200);
        long meth_res = s + (b1 ? 1 : 0) + i6 + i7 + i8 + Double.doubleToLongBits(d2) + i9 + i10 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i11=-163;
        int i12=-40163;
        int i13=-13;
        int i14=-140;
        int[] iArr =new int[N];
        boolean b2=true;
        float f=28.217F, f1=2.959F;
        long l1=-6015383155341977642L;
        long[] lArr =new long[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(lArr, 43055L);
        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(dArr, -25.113592);

        lArr[(iFld >>> 1) % N] -= (((--iArr[(56508 >>> 1) % N]) & iMeth()) * Test0746.iFld1);
        for (short s1 : Test0746.sArrFld) {
            for (i11 = 3; i11 < 63; ++i11) {
                Test0746.iFld1 = (int) Test0746.instanceCount;
                iFld -= Test0746.iFld1;
                switch ((i11 % 1) + 77) {
                case 77:
                    if (b2) break;
                    break;
                default:
                    f = 1;
                    do {
                        iArr = iArr;
                        switch (((i11 % 2) * 5) + 17) {
                        case 21:
                            dArr[(int)(f - 1)][(int)(f + 1)] += iFld;
                            iFld -= (int) Test0746.instanceCount;
                            Test0746.iFld1 = iFld2;
                            break;
                        case 19:
                            Test0746.fFld -= Test0746.instanceCount;
                        default:
                            Test0746.dFld += i11;
                            iArr[i11 - 1] = 169;
                        }
                        i12 += (int)(f * f);
                        Test0746.iFld1 += (int) (f * f);
                    } while (++f < 2);
                }
            }
        }
        Test0746.byFld = (byte) iFld;
        i12 -= iFld2;
        Test0746.dFld = iFld2;
        Test0746.instanceCount = Test0746.iFld1;
        for (f1 = 8; f1 < 190; f1++) {
            iFld += (int)l1;
            i14 = 1;
            do {
                lArr[i14] = -251;
                Test0746.iFld1 += (((i14 * f1) + i12) - Test0746.instanceCount);
                Test0746.byFld = (byte) 140;
            } while (++i14 < 138);
            Test0746.instanceCount += (long) (f1 * f1);
            Test0746.fFld = i14;
        }

        FuzzerUtils.out.println("i11 i12 b2 = " + i11 + "," + i12 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("f f1 i13 = " + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f1) + "," + i13);
        FuzzerUtils.out.println("l1 i14 lArr = " + l1 + "," + i14 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("iArr dArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0746.instanceCount iFld Test0746.iFld1 = " + Test0746.instanceCount + "," + iFld + "," +
                Test0746.iFld1);
        FuzzerUtils.out.println("Test0746.fFld Test0746.byFld iFld2 = " + Float.floatToIntBits(Test0746.fFld) + "," + Test0746.byFld +
            "," + iFld2);
        FuzzerUtils.out.println("Test0746.dFld Test0746.sArrFld = " + Double.doubleToLongBits(Test0746.dFld) + "," +
                FuzzerUtils.checkSum(Test0746.sArrFld));

        FuzzerUtils.out.println("fMeth1_check_sum: " + fMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0746 _instance = new Test0746();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
