// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0369 {

    public static final int N = 400;

    public static volatile long instanceCount=-1992855430L;
    public int iFld=7;
    public static double dFld=1.54562;
    public static byte byFld=-35;
    public static boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, long l1, long l2) {

        float f1=1.22F;
        short s1=-32679;
        int i6=61;
        int i7=21553;
        int i8=-39091;
        int i9=3;
        int i10=12;
        int i11=-26408;
        int[][] iArr1 =new int[N][N];
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr1, 178);
        FuzzerUtils.init(lArr2, -8294L);

        f1 -= s1;
        try {
            i5 *= i5;
            for (i6 = 137; 1 < i6; i6 -= 3) {
                i7 <<= (int)l1;
                i8 = 1;
                do {
                    i5 += i6;
                    for (i9 = 1; i9 < 1; i9 += 2) {
                        iArr1[i6 + 1][i6] += (int)-1.373F;
                        switch (((i7 >>> 1) % 7) + 60) {
                        case 60:
                            Test0369.dFld += s1;
                            i5 |= i9;
                            break;
                        case 61:
                        case 62:
                        case 63:
                            s1 += (short)i5;
                            l2 += Test0369.instanceCount;
                            i5 += (i9 - i7);
                            break;
                        case 64:
                            i5 -= i8;
                        case 65:
                            i11 += i8;
                        case 66:
                        }
                    }
                } while (++i8 < 34);
            }
        }
        catch (ArithmeticException exc1) {
            lArr2[(i5 >>> 1) % N] *= -51933;
        }
        finally {
            i11 = (int) Test0369.dFld;
        }
        vMeth1_check_sum += i5 + l1 + l2 + Float.floatToIntBits(f1) + s1 + i6 + i7 + i8 + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr2);
    }

    public static int iMeth() {

        double d=-96.70386;
        int i4=-9;
        int i12=126;
        int i13=7;
        int i14=58267;
        int i15=-6173;
        int i16=2;
        int[] iArr =new int[N];
        float f=116.129F;
        short s=-13975;
        long l3=51L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, 2529);
        FuzzerUtils.init(lArr1, -12L);

        d *= (((i4--) * (f - s)) - (--s));
        iArr[(i4 >>> 1) % N] -= (int) ((Test0369.instanceCount += (long) (-(d * -219))) - (lArr1[(i4 >>> 1) % N]++));
        vMeth1(i4, Test0369.instanceCount, Test0369.instanceCount);
        for (i12 = 11; i12 < 186; ++i12) {
            for (l3 = 1; l3 < 9; ++l3) {
                if (true) continue;
                switch ((int)((l3 % 2) + 5)) {
                case 5:
                    for (i15 = i12; i15 < 2; ++i15) {
                        i14 = i13;
                        if (i16 != 0) {
                        }
                        Test0369.byFld = (byte) i14;
                        Test0369.instanceCount = 15359;
                        i13 = i4;
                        if (i12 != 0) {
                        }
                        Test0369.byFld = (byte) i14;
                    }
                    break;
                case 6:
                    i14 += (int)(l3 * i14);
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i4 + Float.floatToIntBits(f) + s + i12 + i13 + l3 + i14 + i15 +
            i16 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i) {

        int i1=57773, i2=135, i3=7638, i17=-1, i18=-62006, i19=162;
        short s2=-4760;
        float f2=-2.750F;
        double[] dArr =new double[N];
        long[] lArr3 =new long[N];

        FuzzerUtils.init(dArr, 0.5968);
        FuzzerUtils.init(lArr3, 117638767L);

        i1 = 1;
        do {
            for (i2 = 1; i2 < 4; i2++) {
                i3 = (((i - i2) << iMeth()) * i1);
                if (Test0369.bFld) {
                    i3 = (int) Test0369.instanceCount;
                    for (i17 = 2; i17 > 1; --i17) {
                        l = 178L;
                        dArr = dArr;
                    }
                    lArr3[i1 + 1] = s2;
                    Test0369.instanceCount = s2;
                } else if (Test0369.bFld) {
                    i3 += i2;
                    lArr3[i1 - 1] -= i;
                    i19 = 1;
                    do {
                        f2 = s2;
                        i18 <<= i2;
                    } while (++i19 < 2);
                } else {
                    i18 >>= i17;
                }
            }
        } while (++i1 < 398);
        vMeth_check_sum += l + i + i1 + i2 + i3 + i17 + i18 + s2 + i19 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr3);
    }

    public void mainTest(String[] strArr1) {

        int i20=-3;
        int i21=-39;
        int i22=-13;
        int i23=-197;
        int i24=-29151;
        int i25=-9;
        int i26=47;
        int i27=186;
        int i28=85;
        int i29=-7;
        int i30=-10;
        int i31=-215;
        int[][] iArr2 =new int[N][N];
        short s3=-21248;
        short[] sArr =new short[N];
        long[] lArr =new long[N];
        boolean[] bArr =new boolean[N];
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(lArr, -38573L);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, 12);
        FuzzerUtils.init(sArr, (short)-23936);
        FuzzerUtils.init(fArr, -84.369F);

        iFld = (int)lArr[(iFld >>> 1) % N];
        vMeth(Test0369.instanceCount, iFld);
        bArr[(iFld >>> 1) % N] = Test0369.bFld;
        iFld <<= (int) Test0369.instanceCount;
        iArr2 = iArr2;
        iFld ^= (int) Test0369.instanceCount;
        sArr = sArr;
        for (i20 = 3; i20 < 151; i20 += 3) {
            i21 -= i20;
            i21 = i20;
            bArr[i20 - 1] = false;
            iFld += (i20 - iFld);
        }
        for (i22 = 11; i22 < 279; i22 += 2) {
            iArr2[i22][i22] = iFld;
            for (i24 = 187; i24 > 4; i24--) {
                iArr2[i22] = iArr2[i24 + 1];
                Test0369.instanceCount <<= i20;
                for (i26 = 1; i26 < 2; i26++) {
                    iFld <<= Test0369.byFld;
                    if (Test0369.bFld) break;
                    i27 &= (int) Test0369.instanceCount;
                    Test0369.instanceCount += (((i26 * Test0369.instanceCount) + iFld) - i25);
                    i25 += iFld;
                }
                Test0369.instanceCount -= 7599;
            }
            for (i28 = 1; i28 < 187; ++i28) {
                Test0369.instanceCount = Test0369.instanceCount;
                for (i30 = 1; i30 < 2; ++i30) {
                    s3 += (short)i29;
                    fArr[i28 - 1][i22] += i28;
                    i31 *= i22;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("s3 lArr bArr = " + s3 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("iArr2 sArr fArr = " + FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(sArr) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0369.instanceCount iFld Test0369.dFld = " + Test0369.instanceCount + "," + iFld + "," +
                Double.doubleToLongBits(Test0369.dFld));
        FuzzerUtils.out.println("Test0369.byFld Test0369.bFld = " + Test0369.byFld + "," + (Test0369.bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0369 _instance = new Test0369();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
