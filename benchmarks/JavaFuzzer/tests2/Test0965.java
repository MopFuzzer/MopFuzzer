// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0965 {

    public static final int N = 400;

    public static long instanceCount=10116L;
    public static boolean bFld=true;
    public static volatile short sFld=12418;
    public static int iFld=-18814;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static volatile byte[] byArrFld =new byte[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0965.lArrFld, 6068506590745737090L);
        FuzzerUtils.init(Test0965.iArrFld, -105);
        FuzzerUtils.init(Test0965.byArrFld, (byte) -102);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f) {

        int i3=-29;
        int i4=7;
        int i5=-9;
        int i6=55;
        int i7=-14;
        int[] iArr =new int[N];
        byte by=19;

        FuzzerUtils.init(iArr, 7738);

        for (i3 = 179; i3 > 10; i3--) {
            if (true) break;
            f -= i3;
            for (i5 = 1; i5 < 9; ++i5) {
                switch (((11 >>> 1) % 3) + 103) {
                case 103:
                    i4 = i6;
                    by = (byte)-10324;
                    i7 = 1;
                    do {
                        Test0965.lArrFld[i5] = i5;
                        iArr[i5] = i6;
                        Test0965.instanceCount -= i3;
                        if (Test0965.bFld) continue;
                        Test0965.instanceCount += (long) f;
                        Test0965.sFld >>>= (short) i7;
                        i4 = i4;
                    } while (++i7 < 2);
                    break;
                case 104:
                    i4 += i5;
                    break;
                case 105:
                    i4 >>>= i6;
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + by + i7 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i2=61252, i8=-12, i9=182, i10=42, i11=157, i12=6, i13=-213, i14=12, i15=157, i16=4;
        double d1=108.64023;
        float f1=2.632F;
        byte by1=12;

        Test0965.instanceCount *= (-((i2 + i2) + iMeth1(-2.333F)));
        Test0965.iArrFld[(i2 >>> 1) % N] ^= (int) 109L;
        d1 = f1;
        for (i8 = 3; i8 < 210; i8++) {
            i2 *= (int) Test0965.instanceCount;
            i10 = 1;
            do {
                by1 -= (byte)i2;
            } while (++i10 < 8);
            if (Test0965.bFld) {
                for (i11 = 1; i11 < 8; i11++) {
                    switch ((i11 % 9) + 13) {
                    case 13:
                        for (i13 = 1; i13 < 2; i13++) {
                            Test0965.byArrFld[i8] >>= by1;
                        }
                        break;
                    case 14:
                        for (i15 = 1; i15 < 2; i15++) {
                            Test0965.iArrFld[i11 - 1] |= (int) Test0965.instanceCount;
                            Test0965.sFld *= (short) i11;
                        }
                        break;
                    case 15:
                        i14 += i13;
                        break;
                    case 16:
                        Test0965.lArrFld[i11 + 1] = 1692066587596161350L;
                    case 17:
                        Test0965.instanceCount += i11;
                    case 18:
                        i2 = -5552;
                        break;
                    case 19:
                        i9 = i10;
                        break;
                    case 20:
                        Test0965.instanceCount = -13235;
                        break;
                    case 21:
                    }
                }
                vMeth_check_sum += i2 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i8 + i9 + i10 + by1 +
                    i11 + i12 + i13 + i14 + i15 + i16;
                return;
            } else {
                by1 >>= (byte)i11;
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i8 + i9 + i10 + by1 + i11 +
            i12 + i13 + i14 + i15 + i16;
    }

    public static int iMeth(int i1, double d) {

        int i17=40, i18=1711, i19=-191, i20=14, i21=-162;
        byte by2=-10;

        vMeth();
        Test0965.lArrFld[(34460 >>> 1) % N] = 84477622L;
        Test0965.iArrFld = Test0965.iArrFld;
        i1 = i1;
        Test0965.instanceCount -= i1;
        try {
            i17 = 187;
            while ((i17 -= 3) > 0) {
                i18 = 1;
                while (++i18 < 24) {
                    i1 = i19;
                    Test0965.instanceCount += i19;
                    Test0965.iArrFld[i18] = (int) Test0965.instanceCount;
                }
                for (i20 = 1; i20 < (24 + 400); ++i20) {
                    i21 >>= i1;
                    by2 <<= (byte) Test0965.instanceCount;
                    Test0965.iArrFld[i20] = by2;
                }
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            i1 = (int) Test0965.instanceCount;
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20 + i21 + by2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=62159, i22=-16496, i23=40526, i24=214, i25=60798, i26=-26221;
        double d2=0.115738, d3=105.14382;
        float f2=-46.302F;
        byte by3=-127;

        i -= iMeth(i, d2);
        Test0965.byArrFld[(i >>> 1) % N] += (byte) f2;
        d3 = 1;
        do {
            for (i22 = 113; i22 > 5; --i22) {
                switch ((int)((d3 % 4) + 79)) {
                case 79:
                    switch (((i22 % 1) * 5) + 31) {
                    case 33:
                        i = (int)f2;
                        i = i23;
                        i += (i22 * Test0965.instanceCount);
                        break;
                    default:
                        for (i24 = 1; i24 < 2; ++i24) {
                            i25 += (i24 - i25);
                            fArrFld[i24 + 1] -= i24;
                            i25 %= (int)(by3 | 1);
                        }
                    }
                    Test0965.instanceCount += i22;
                    if (false) {
                        Test0965.instanceCount -= i24;
                    } else if (Test0965.bFld) {
                        if (Test0965.bFld) {
                            i23 >>= (int)-11004L;
                            Test0965.iArrFld[(int) (d3 - 1)] += (int) 9.47F;
                            switch (((i22 % 2) * 5) + 66) {
                            case 70:
                                i26 = 1;
                                while (++i26 < 2) {
                                    switch ((i26 % 8) + 108) {
                                    case 108:
                                        f2 = -96;
                                        i23 = i;
                                        Test0965.instanceCount += Test0965.sFld;
                                        break;
                                    case 109:
                                        i23 *= i26;
                                        break;
                                    case 110:
                                        i23 += Test0965.sFld;
                                        Test0965.lArrFld = Test0965.lArrFld;
                                        Test0965.iArrFld[i26 - 1] += 0;
                                        break;
                                    case 111:
                                        Test0965.lArrFld[i26] -= Test0965.instanceCount;
                                        break;
                                    case 112:
                                        Test0965.instanceCount = (long) d3;
                                        break;
                                    case 113:
                                    case 114:
                                        Test0965.instanceCount += (i26 * i26);
                                    case 115:
                                        Test0965.sFld ^= (short) Test0965.iFld;
                                    default:
                                        Test0965.instanceCount = (long) f2;
                                    }
                                }
                                break;
                            case 69:
                                i *= i24;
                            }
                        }
                    } else if (Test0965.bFld) {
                        Test0965.iArrFld[i22 + 1] = i26;
                    } else {
                        Test0965.iFld = i22;
                    }
                    break;
                case 80:
                    Test0965.instanceCount += (i22 * i22);
                    break;
                case 81:
                    i23 -= Test0965.iFld;
                    break;
                case 82:
                    if (Test0965.bFld) break;
                    break;
                default:
                    i += i22;
                }
            }
        } while (++d3 < 223);

        FuzzerUtils.out.println("i d2 f2 = " + i + "," + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("d3 i22 i23 = " + Double.doubleToLongBits(d3) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 by3 = " + i24 + "," + i25 + "," + by3);
        FuzzerUtils.out.println("i26 = " + i26);

        FuzzerUtils.out.println("Test0965.instanceCount Test0965.bFld Test0965.sFld = " + Test0965.instanceCount + "," + (Test0965.bFld ? 1
                : 0) + "," + Test0965.sFld);
        FuzzerUtils.out.println("Test0965.iFld Test0965.lArrFld Test0965.iArrFld = " + Test0965.iFld + "," +
                FuzzerUtils.checkSum(Test0965.lArrFld) + "," + FuzzerUtils.checkSum(Test0965.iArrFld));
        FuzzerUtils.out.println("Test0965.byArrFld fArrFld = " + FuzzerUtils.checkSum(Test0965.byArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0965 _instance = new Test0965();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
