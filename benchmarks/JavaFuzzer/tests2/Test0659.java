// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:43 2023
public class Test0659 {

    public static final int N = 400;

    public static long instanceCount=9744406L;
    public static float fFld=6.40F;
    public double dFld=2.63308;
    public static volatile byte byFld=11;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0659.lArrFld, -7L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i6) {

        long l2=10L, l3=1248890985L;
        int i8=-101;
        int i9=100;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -9);

        l2 = 1;
        while (++l2 < 216) {
            byte by=5;
            Test0659.instanceCount = i6;
            iArr1[(int)(l2)] = 0;
            i6 += (int) (((l2 * l2) + by) - Test0659.fFld);
            if (true) {
                i6 += i6;
            } else if (false) {
                i6 += (int)(l2 | l2);
                l3 = 1;
                do {
                    for (i8 = 1; 1 > i8; i8++) {
                        long l4=-14L;
                        i6 = (int) Test0659.instanceCount;
                        i9 = i8;
                        i6 *= (int) Test0659.fFld;
                        l4 += (long)1.969F;
                        i9 = i8;
                        Test0659.fFld += ((long) i8 | (long) i9);
                    }
                } while (++l3 < 7);
            }
        }
        vMeth_check_sum += l1 + i6 + l2 + l3 + i8 + i9 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth1(int i3, double d2) {

        int i4=-49484;
        int i5=9;
        int i10=-8;
        int i11=-54549;
        int[] iArr2 =new int[N];
        boolean b=false;
        byte by1=-6;
        byte[] byArr =new byte[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr2, 11);
        FuzzerUtils.init(byArr, (byte)41);
        FuzzerUtils.init(sArr, (short)31842);

        for (i4 = 314; i4 > 17; i4--) {
            vMeth(Test0659.instanceCount, i4);
            i10 = 1;
            while (++i10 < 6) {
                Test0659.instanceCount += (i10 | i10);
                b = b;
                if (b) continue;
                i11 = 1;
                while (++i11 < 1) {
                    i3 = (int) Test0659.instanceCount;
                }
                i5 *= i4;
                Test0659.instanceCount += i4;
                iArr2 = iArr2;
                switch ((i10 % 4) + 40) {
                case 40:
                    iArr2[i4 + 1] = i11;
                    byArr = FuzzerUtils.byte1array(N, (byte)127);
                    break;
                case 41:
                    by1 = (byte)6;
                    break;
                case 42:
                    Test0659.instanceCount += -208;
                case 43:
                    sArr[i4] += (short) Test0659.fFld;
                }
            }
        }
        long meth_res = i3 + Double.doubleToLongBits(d2) + i4 + i5 + i10 + (b ? 1 : 0) + i11 + by1 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, int i, double d) {

        int i1=138;
        int i2=68;
        int i12=16;
        int i13=17;
        int[] iArr =new int[N];
        double d1=1.121837;
        byte by2=61;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 27109);
        FuzzerUtils.init(fArr, 123.162F);
        FuzzerUtils.init(lArr, -235L);

        i1 = 1;
        do {
            iArr[i1 - 1] *= (int) ((Test0659.instanceCount--) + ((i--) - (-(i1 - i1))));
            for (d1 = 1; d1 < 5; d1++) {
                l -= (long)(fArr[(int)(d1)] + ((d - i) + iMeth1(i2, d1)));
                i = i;
                switch ((int)(((d1 % 1) * 5) + 94)) {
                case 99:
                    i2 -= i2;
                    if (false) break;
                    for (i12 = (int)(d1); i12 < 2; ++i12) {
                        i13 = i;
                        i13 -= 57;
                        i13 -= (int)1.385F;
                        lArr[(int) (d1)] = Test0659.instanceCount;
                        i2 >>= i12;
                        i13 += (i12 * i12);
                    }
                default:
                    Test0659.instanceCount += (long) (((d1 * l) + by2) - i1);
                }
            }
        } while (++i1 < 349);
        long meth_res = l + i + Double.doubleToLongBits(d) + i1 + Double.doubleToLongBits(d1) + i2 + i12 + i13 + by2 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=11;
        int i15=60131;
        int i16=-68;
        int i17=-92;
        int i18=3;
        int i19=-1;
        int i20=0;
        int i21=105;
        int i22=1;
        int i23=-192;
        int i24=10;
        int i25=129;
        int i26=-10;
        int[][] iArr3 =new int[N][N];
        double d3=2.67975;
        short s=14349;
        boolean b1=false;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr3, 89);
        FuzzerUtils.init(bArr, true);

        Test0659.instanceCount = iMeth(Test0659.instanceCount, i14, dFld);
        for (d3 = 12; d3 < 233; d3++) {
            Test0659.byFld <<= Test0659.byFld;
            for (i16 = 114; i16 > 7; i16 -= 3) {
                for (i18 = 1; i18 < 4; i18++) {
                    Test0659.byFld += (byte) i18;
                }
            }
            i14 = i16;
            i15 = i18;
            i14 = i20;
            i14 <<= i14;
        }
        i21 = 306;
        do {
            switch ((i21 % 9) + 96) {
            case 96:
                i20 += i15;
                for (i22 = 82; 1 < i22; i22 -= 2) {
                    dFld %= (i22 | 1);
                    dFld = i23;
                    i15 -= (int) Test0659.fFld;
                    iArr3[i22 + 1] = FuzzerUtils.int1array(N, (int)62);
                    i15 >>= s;
                    for (i24 = i22; i24 < 3; i24++) {
                        iArr3[i24][i21] = 65505;
                    }
                    iArr3[i22 + 1][i21 + 1] *= i22;
                    i14 = i19;
                    i26 *= i20;
                    Test0659.fFld += i19;
                }
                break;
            case 97:
                dFld += i18;
                Test0659.instanceCount = Test0659.instanceCount;
                break;
            case 98:
                iArr3[i21 + 1] = iArr3[i21];
                bArr[i21 + 1] = b1;
                break;
            case 99:
                iArr3[i21 + 1][i21] += i21;
                break;
            case 100:
                Test0659.lArrFld[i21 + 1] *= 62768;
                break;
            case 101:
                i26 = (int) Test0659.instanceCount;
                break;
            case 102:
                i20 += (int)24574L;
                break;
            case 103:
                i19 += i21;
                break;
            case 104:
                i23 += i14;
                break;
            default:
                i20 += (((i21 * i15) + i18) - Test0659.fFld);
            }
        } while (--i21 > 0);

        FuzzerUtils.out.println("i14 d3 i15 = " + i14 + "," + Double.doubleToLongBits(d3) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 s = " + i22 + "," + i23 + "," + s);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("b1 iArr3 bArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr3) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0659.instanceCount Test0659.fFld dFld = " + Test0659.instanceCount + "," +
                Float.floatToIntBits(Test0659.fFld) + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0659.byFld Test0659.lArrFld = " + Test0659.byFld + "," + FuzzerUtils.checkSum(Test0659.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0659 _instance = new Test0659();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
