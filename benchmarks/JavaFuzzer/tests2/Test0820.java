// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0820 {

    public static final int N = 400;

    public static long instanceCount=-3919L;
    public static volatile int iFld=0;
    public static boolean bFld=true;
    public static byte byFld=117;
    public static long[] lArrFld =new long[N];
    public volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0820.lArrFld, 2498138990L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth(int i3) {


        i3 = i3;
        Test0820.lArrFld = (Test0820.lArrFld = (Test0820.lArrFld = Test0820.lArrFld));
        long meth_res = i3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i6) {

        long l=-6325359976083712927L;
        short s=14491;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 6328);

        i6 += i6;
        l = 145;
        do {
            i6 += (int)(l ^ i6);
            i6 += -5;
            Test0820.instanceCount = -19234;
            iArr1[(int)(l - 1)] = s;
        } while (--l > 0);
        s = (short)i6;
        iArr1[(i6 >>> 1) % N] -= i6;
        long meth_res = i6 + l + s + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        double d=-1.92699;
        int i7=-60051;
        int i8=-13275;
        int i9=10;
        int i10=92;
        int i11=-226;
        int i12=14;
        int[] iArr2 =new int[N];
        float f2=1.683F;

        FuzzerUtils.init(iArr2, -3);

        iMeth1(Test0820.iFld);
        Test0820.iFld = Test0820.iFld;
        d *= Test0820.iFld;
        for (i7 = 1; i7 < 252; ++i7) {
            Test0820.iFld = Test0820.iFld;
            for (i9 = 1; i9 < 6; ++i9) {
                Test0820.bFld = Test0820.bFld;
                f2 -= -7;
                Test0820.iFld = (int) Test0820.instanceCount;
                iArr2[i9 + 1] ^= i10;
            }
            if (false) {
                f2 += (((i7 * i7) + Test0820.instanceCount) - i10);
            } else {
                for (i11 = 6; i11 > 1; --i11) {
                    Test0820.iFld &= 4;
                }
                i12 = -29801;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(float f1, boolean b) {

        int i1=7;
        int i2=-189;
        int i4=3;
        int i5=189;
        int i13=-10;
        int i14=57931;
        int[] iArr =new int[N];
        double d1=78.83062;

        FuzzerUtils.init(iArr, -12);

        for (i1 = 12; i1 < 216; i1++) {
            iArr[i1 - 1] &= (i2 - (Integer.reverseBytes(i1) * i2));
            i2 = iMeth(--i2);
            for (i4 = i1; i4 < 8; i4++) {
                vMeth1();
                Test0820.instanceCount -= i4;
                Test0820.instanceCount *= Test0820.iFld;
                for (i13 = i4; i13 < 1; ++i13) {
                    Test0820.instanceCount = (long) d1;
                    Test0820.instanceCount -= (long) f1;
                    iArr[i13 - 1] -= i4;
                    i2 |= -233;
                    Test0820.iFld += i13;
                    i5 = (int)d1;
                    Test0820.instanceCount <<= -22468;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + (b ? 1 : 0) + i1 + i2 + i4 + i5 + i13 + i14 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-41166;
        int i15=-40581;
        int i16=-7;
        int i17=208;
        int i18=-2;
        int i19=124;
        int i20=-10;
        int i21=-52743;
        int i22=10;
        int i23=-4;
        int i24=-202;
        int[] iArr3 =new int[N];
        float f=21.568F;
        float[] fArr =new float[N];
        double d2=1.32191;
        double[] dArr =new double[N];

        FuzzerUtils.init(fArr, 0.548F);
        FuzzerUtils.init(dArr, -2.37341);
        FuzzerUtils.init(iArr3, 195);

        i = -4;
        f -= i;
        vMeth(f, Test0820.bFld);
        fArr[(-40 >>> 1) % N] -= i;
        for (i15 = 7; 206 > i15; ++i15) {
            i += (i15 * Test0820.instanceCount);
            Test0820.bFld = true;
            dArr = dArrFld;
            i16 = Test0820.iFld;
            for (i17 = 2; i17 < 126; i17++) {
                i19 = -16762;
            }
            Test0820.lArrFld[i15 - 1] -= 4;
        }
        for (i20 = 1; i20 < 372; ++i20) {
            i21 += Test0820.iFld;
            i &= (int) Test0820.instanceCount;
            if (Test0820.bFld) {
                Test0820.instanceCount += i17;
                d2 = f;
                i = (int) Test0820.instanceCount;
                iArr3[i20] -= (int)d2;
            } else {
                Test0820.lArrFld[i20] = Test0820.iFld;
                iArr3 = iArr3;
                Test0820.instanceCount += i21;
            }
            for (i22 = 4; 68 > i22; i22++) {
                if (false) {
                    i24 = (int) Test0820.instanceCount;
                    Test0820.iFld *= i20;
                    iArr3 = FuzzerUtils.int1array(N, (int)-18);
                } else if (Test0820.bFld) {
                    try {
                        i23 = (3948 % i19);
                        i24 = (i16 / -1841044383);
                        i = (-142 / i17);
                    } catch (ArithmeticException a_e) {}
                    i24 += (((i22 * i) + Test0820.byFld) - i20);
                }
            }
        }

        FuzzerUtils.out.println("i f i15 = " + i + "," + Float.floatToIntBits(f) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("d2 i22 i23 = " + Double.doubleToLongBits(d2) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 fArr dArr = " + i24 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0820.instanceCount Test0820.iFld Test0820.bFld = " + Test0820.instanceCount + "," + Test0820.iFld +
                "," + (Test0820.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0820.byFld Test0820.lArrFld dArrFld = " + Test0820.byFld + "," +
                FuzzerUtils.checkSum(Test0820.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0820 _instance = new Test0820();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
