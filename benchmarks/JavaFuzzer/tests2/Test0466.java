// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0466 {

    public static final int N = 400;

    public static long instanceCount=2034477691272774814L;
    public float fFld=94.868F;
    public static volatile double dFld=2.10065;
    public volatile long lFld=-21694L;
    public static byte byFld=123;
    public static short sFld=-31780;
    public static int[] iArrFld =new int[N];
    public volatile float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0466.iArrFld, 214);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l) {

        int i2=21893, i3=14, i4=-50898, i5=43769;
        boolean b=true;
        float f2=-100.598F;
        byte by=113;
        short s=-15429;

        for (i2 = 4; i2 < 217; i2++) {
            i3 += (int) Test0466.dFld;
            b = b;
            switch (((i2 % 7) * 5) + 70) {
            case 88:
                i3 += (((i2 * f2) + i3) - l);
                by += (byte)i3;
                break;
            case 87:
                for (i4 = 1; i4 < 8; ++i4) {
                    Test0466.instanceCount *= Test0466.instanceCount;
                    s <<= (short)i3;
                    i3 *= s;
                    i5 = (int)l;
                    i3 *= 10;
                    Test0466.iArrFld[i4] >>= i2;
                    l <<= by;
                }
                Test0466.iArrFld[i2 - 1] = i3;
                break;
            case 72:
                i3 = i3;
            case 77:
                l += (((i2 * i5) + f2) - f2);
            case 93:
                l += i2;
                break;
            case 73:
            case 101:
                if (true) continue;
                break;
            }
        }
        long meth_res = l + i2 + i3 + (b ? 1 : 0) + Float.floatToIntBits(f2) + by + i4 + i5 + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(float f, float f1, int i1) {

        short s1=-1406;
        int i6=-3;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 0.117F);

        Test0466.iArrFld[(i1 >>> 1) % N] += (int) (((Test0466.instanceCount - Test0466.instanceCount) + iMeth(Test0466.instanceCount)) -
                Test0466.instanceCount);
        s1 *= (short)i1;
        Test0466.iArrFld[(i6 >>> 1) % N] >>= i1;
        fArr[(i6 >>> 1) % N] = fArr[(i1 >>> 1) % N];
        i6 -= (int) Test0466.instanceCount;
        long meth_res = Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i1 + s1 + i6 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i7=-162, i8=8526, i9=-69, i10=-11, i11=5, i12=17653, i13=-1;
        long l1=-207L;

        fFld = lMeth(fFld, fFld, 12);
        for (i7 = 3; i7 < 245; ++i7) {
            i8 <<= 138;
            try {
                i8 = (Test0466.iArrFld[i7] % Test0466.iArrFld[i7]);
                i8 = (i7 / -54);
                Test0466.iArrFld[i7 - 1] = (-13405 / i7);
            } catch (ArithmeticException a_e) {}
            i8 -= -10;
            if (i7 != 0) {
                vMeth_check_sum += i7 + i8 + l1 + i9 + i10 + i11 + i12 + i13;
                return;
            }
            i8 = i8;
        }
        fArrFld[(i8 >>> 1) % N] = fArrFld[(i7 >>> 1) % N];
        for (l1 = 5; l1 < 137; ++l1) {
            Test0466.dFld *= Test0466.instanceCount;
            Test0466.dFld -= l1;
            for (i10 = 1; i10 < 12; i10++) {
                for (i12 = 1; i12 < 2; ++i12) {
                    i11 *= i12;
                    i8 *= (int)11L;
                }
            }
        }
        vMeth_check_sum += i7 + i8 + l1 + i9 + i10 + i11 + i12 + i13;
    }

    public void mainTest(String[] strArr1) {

        int i=54085, i14=17257, i15=42, i16=57566, i17=13, i18=-103;
        double d=96.76578;
        boolean b1=false;
        short[] sArr =new short[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(sArr, (short)-23846);
        FuzzerUtils.init(lArr, 9L);

        i = 1;
        while (++i < 125) {
            vMeth();
            lFld += (i ^ Test0466.instanceCount);
            for (i14 = i; i14 < 201; i14++) {
                i15 += i15;
                i15 >>= Test0466.byFld;
                Test0466.instanceCount += (15513L + (i14 * i14));
                i15 = (int)130L;
                fArrFld[i][i] = fFld;
            }
            Test0466.iArrFld[i] = 25572;
            sArr[i + 1] += Test0466.sFld;
            i15 <<= i;
            for (d = 3; d < 201; d++) {
                Test0466.dFld -= i16;
                i15 = Test0466.sFld;
                Test0466.instanceCount = Test0466.sFld;
                for (i17 = 1; i17 < 2; ++i17) {
                    i18 += (i17 * i17);
                    i16 = i15;
                    lArr[i + 1][(int)(d + 1)] = i15;
                    switch (((i14 >>> 1) % 7) + 9) {
                    case 9:
                    case 10:
                        lArr[i + 1][(int)(d)] = 187L;
                        break;
                    case 11:
                        Test0466.instanceCount += (i17 | i);
                        i16 *= (int)232L;
                        break;
                    case 12:
                        i16 -= (int)1393003915L;
                        break;
                    case 13:
                        lArr[(int)(d - 1)][i] = i15;
                        Test0466.sFld = (short) i18;
                        break;
                    case 14:
                        Test0466.iArrFld[(int) (d)] *= (int) Test0466.instanceCount;
                        b1 = false;
                        i18 <<= i14;
                    case 15:
                        lFld = i18;
                    default:
                        Test0466.dFld = Test0466.sFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i14 i15 = " + i + "," + i14 + "," + i15);
        FuzzerUtils.out.println("d i16 i17 = " + Double.doubleToLongBits(d) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 b1 sArr = " + i18 + "," + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0466.instanceCount fFld Test0466.dFld = " + Test0466.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0466.dFld));
        FuzzerUtils.out.println("lFld Test0466.byFld Test0466.sFld = " + lFld + "," + Test0466.byFld + "," + Test0466.sFld);
        FuzzerUtils.out.println("Test0466.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test0466.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0466 _instance = new Test0466();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
