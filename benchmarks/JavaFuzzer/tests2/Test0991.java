// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0991 {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public int iFld=2129;
    public static float fFld=-1.622F;
    public static boolean bFld=true;
    public static volatile double dFld=-21.102243;
    public static volatile float[] fArrFld =new float[N];
    public int[] iArrFld =new int[N];
    public double[] dArrFld =new double[N];
    public short[] sArrFld =new short[N];
    public volatile short[][] sArrFld1 =new short[N][N];

    static {
        FuzzerUtils.init(Test0991.fArrFld, 2.648F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(byte by) {

        float f2=-58.963F;
        int i=-12;
        int i1=5;
        int i2=25098;
        int i3=-12;
        int[] iArr =new int[N];
        double d=103.121149, d1=119.66677;
        short s=-20611;
        boolean b=true;

        FuzzerUtils.init(iArr, -37);

        if (false) {
            f2 += f2;
            for (i = 15; i < 349; ++i) {
                f2 -= Test0991.instanceCount;
                for (d = 1; d < 5; d++) {
                    i3 = 1;
                    while (++i3 < 2) {
                        if (b) {
                            i1 = (int) Test0991.instanceCount;
                            if (i3 != 0) {
                            }
                            i1 += i3;
                        } else if (b) {
                            d1 = s;
                            i2 = -9;
                            iArr[i3 + 1] = i;
                        } else {
                            i1 = (int) Test0991.instanceCount;
                            d1 = d1;
                        }
                    }
                }
            }
        } else if (true) {
            iArr[(i3 >>> 1) % N] >>= (int) Test0991.instanceCount;
        } else if (true) {
            iArr[(1 >>> 1) % N] = (int)f2;
        }
        long meth_res = by + Float.floatToIntBits(f2) + i + i1 + Double.doubleToLongBits(d) + i2 + i3 +
            Double.doubleToLongBits(d1) + s + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(long l) {

        int i4=3, i5=10, i6=165, i7=-20584, i8=-210, i9=29329;
        byte by1=109;
        boolean b1=false;

        lMeth((byte)(70));
        i4 &= (int)l;
        i4 = (int)l;
        i4 |= i4;
        Test0991.fFld = i4;
        i4 *= (int) Test0991.fFld;
        for (i5 = 16; i5 < 308; i5++) {
            for (i7 = 6; i7 > 1; i7--) {
                i6 = i4;
                i6 <<= by1;
                i9 = 1;
                while (++i9 < 2) {
                    b1 = b1;
                    if (b1) {
                        i6 <<= i9;
                        Test0991.fArrFld = Test0991.fArrFld;
                    } else if (b1) {
                        i6 += (30811 + (i9 * i9));
                    }
                }
            }
        }
        vMeth1_check_sum += l + i4 + i5 + i6 + i7 + i8 + by1 + i9 + (b1 ? 1 : 0);
    }

    public void vMeth() {

        int i10=-97, i11=-105, i12=-153;

        vMeth1(Test0991.instanceCount);
        i10 = 1;
        while (++i10 < 228) {
            Test0991.instanceCount -= Test0991.instanceCount;
            if (Test0991.bFld) break;
            for (i11 = 1; 7 > i11; i11++) {
                i12 <<= (int)-54532L;
                iFld = i10;
                iArrFld[i11 + 1] -= i11;
                switch (((i11 % 1) * 5) + 69) {
                case 70:
                    iFld += (int) Test0991.instanceCount;
                    iFld += (((i11 * i12) + i10) - Test0991.fFld);
                    Test0991.dFld = i10;
                    dArrFld[(i12 >>> 1) % N] += iFld;
                    break;
                }
                i12 -= iFld;
                i12 *= i11;
            }
        }
        vMeth_check_sum += i10 + i11 + i12;
    }

    public void mainTest(String[] strArr1) {

        float f=0.843F;
        float f1=2.20F;
        float[] fArr =new float[N];
        int i13=22954, i14=-33487, i15=12, i16=17014, i17=39507, i18=7, i19=-20297;
        short s1=-31998;

        FuzzerUtils.init(fArr, -1.417F);

        f -= (fArr[(iFld >>> 1) % N]++);
        f1 = 1;
        while (++f1 < 140) {
            iFld -= (int)f;
            vMeth();
        }
        for (i13 = 15; i13 < 369; i13++) {
            if (false) break;
            try {
                i14 = (i13 % i14);
                iFld = (iFld % i13);
                iFld = (46 % i13);
            } catch (ArithmeticException a_e) {}
            for (i15 = i13; i15 < 71; ++i15) {
                iFld += (int)(1.740F + (i15 * i15));
                iArrFld[i13] -= -85;
                i14 -= i15;
                i16 += (i15 * Test0991.instanceCount);
                i16 += i15;
                if (Test0991.bFld) continue;
                Test0991.fArrFld[i15] = Test0991.instanceCount;
            }
            iFld -= -13490;
            switch ((i13 % 2) + 80) {
            case 80:
                i16 = (int)f1;
                i14 = i15;
                sArrFld[i13 + 1] += (short)-36792;
                break;
            case 81:
            }
            dArrFld[i13] -= Test0991.instanceCount;
            i17 = 1;
            while (++i17 < 71) {
                i14 += i17;
                i14 += i14;
                for (i18 = 1; 1 > i18; ++i18) {
                    i14 += (10 + (i18 * i18));
                    sArrFld1 = FuzzerUtils.short2array(N, (short)-12067);
                    Test0991.fFld -= s1;
                    i16 += (i18 - i17);
                    iFld += i17;
                }
            }
        }

        FuzzerUtils.out.println("f f1 i13 = " + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f1) + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("s1 fArr = " + s1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0991.instanceCount iFld Test0991.fFld = " + Test0991.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0991.fFld));
        FuzzerUtils.out.println("Test0991.bFld Test0991.dFld Test0991.fArrFld = " + (Test0991.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0991.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0991.fArrFld)));
        FuzzerUtils.out.println("iArrFld dArrFld sArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(sArrFld));
        FuzzerUtils.out.println("sArrFld1 = " + FuzzerUtils.checkSum(sArrFld1));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0991 _instance = new Test0991();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
