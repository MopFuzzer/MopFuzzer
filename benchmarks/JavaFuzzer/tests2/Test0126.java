// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0126 {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static byte byFld=53;
    public static short sFld=-6586;
    public static volatile boolean bFld=false;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0126.lArrFld, -10873L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, byte by, int i8) {


        i8 += Test0126.sFld;
        by = (byte) Test0126.instanceCount;
        vMeth1_check_sum += l1 + by + i8;
    }

    public static void vMeth() {

        int i6=252;
        int i7=58037;
        int i10=9;
        int i11=-17644;
        int i12=-27;
        int i13=-110;
        int[] iArr1 =new int[N];
        boolean b=false;
        float f=0.889F;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr1, -170);
        FuzzerUtils.init(dArr, -50.5158);

        Test0126.instanceCount -= (++i6);
        i7 = 1;
        while (++i7 < 214) {
            try {
                iArr1[i7 + 1] = (i6 / iArr1[i7]);
                i6 = (i7 / i7);
                i6 = (49913 / i7);
            } catch (ArithmeticException a_e) {}
            i6 = (int) (Test0126.instanceCount--);
            vMeth1(Test0126.instanceCount, Test0126.byFld, i6);
            i6 <<= 9;
        }
        for (int i9 : iArr1) {
            dArr[(i6 >>> 1) % N][(i7 >>> 1) % N] = i7;
            for (i10 = 1; i10 < 4; ++i10) {
                iArr1[i10] += i11;
                if (b) continue;
            }
            for (i12 = 4; i12 > 1; i12--) {
                iArr1[i12 - 1] <<= (int) Test0126.instanceCount;
                Test0126.instanceCount += i12;
                Test0126.sFld *= (short) f;
            }
        }
        vMeth_check_sum += i6 + i7 + i10 + i11 + (b ? 1 : 0) + i12 + i13 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static long lMeth(long l) {

        int i4=-80, i5=58727;

        for (i4 = 15; i4 < 282; ++i4) {
            l %= (i4 | 1);
            vMeth();
            i5 = i5;
            i5 += Test0126.sFld;
        }
        long meth_res = l + i4 + i5;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-45520;
        int i1=-6;
        int i2=19;
        int i3=-155;
        int i14=65311;
        int i15=-22596;
        int[] iArr =new int[N];
        float f1=1.489F;
        float[] fArr =new float[N];
        double d=-53.70483;

        FuzzerUtils.init(fArr, -30.751F);
        FuzzerUtils.init(iArr, 121);

        for (i = 2; i < 145; i++) {
            Test0126.byFld |= (byte) (Test0126.lArrFld[i + 1] >>> (long) (-(fArr[i - 1]++)));
            Test0126.byFld += (byte) ((i - (-26521 + (-(i1 = 14)))) * (i1--));
            if (Test0126.bFld) {
                for (i2 = 6; i2 < 175; i2++) {
                    Test0126.byFld -= (byte) iArr[i2 + 1];
                    Test0126.lArrFld[i2 + 1] = ((++i1) << i3);
                    i3 -= (--iArr[i2 + 1]);
                    Test0126.instanceCount ^= Math.min(Test0126.instanceCount - (i3 - Test0126.instanceCount),
                            lMeth(Test0126.instanceCount));
                    f1 *= 0.438F;
                    for (i14 = 1; i14 < 2; i14++) {
                        iArr[i14] = i2;
                        Test0126.instanceCount += (i14 * i15);
                        Test0126.byFld *= (byte) i14;
                        i15 *= -30;
                        f1 += Test0126.instanceCount;
                        if (Test0126.bFld) {
                            f1 += -50.332F;
                            fArr[i] *= i1;
                            Test0126.instanceCount += i1;
                            Test0126.instanceCount += i14;
                        } else if (Test0126.bFld) {
                            iArr[i - 1] = -32996;
                        } else if (Test0126.bFld) {
                            i3 = (int) Test0126.instanceCount;
                            i1 += (i14 + i3);
                            i15 = -10;
                        } else {
                            i1 += i2;
                            i3 -= i14;
                            d = 2;
                        }
                        try {
                            i1 = (i15 / -22087);
                            i1 = (iArr[i - 1] % iArr[i - 1]);
                            i3 = (i14 % i2);
                        } catch (ArithmeticException a_e) {}
                        Test0126.byFld += (byte) Test0126.sFld;
                    }
                }
            } else if (false) {
                i3 += (i * i);
            } else if (Test0126.bFld) {
                i1 += (i ^ i1);
            } else {
                i15 -= i2;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f1 i14 = " + i3 + "," + Float.floatToIntBits(f1) + "," + i14);
        FuzzerUtils.out.println("i15 d fArr = " + i15 + "," + Double.doubleToLongBits(d) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0126.instanceCount Test0126.byFld Test0126.sFld = " + Test0126.instanceCount + "," + Test0126.byFld +
                "," + Test0126.sFld);
        FuzzerUtils.out.println("Test0126.bFld Test0126.lArrFld = " + (Test0126.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0126.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0126 _instance = new Test0126();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
