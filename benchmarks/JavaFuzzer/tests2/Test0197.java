// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0197 {

    public static final int N = 400;

    public static long instanceCount=623812799665743895L;
    public static boolean bFld=true;
    public int iFld=19451;
    public double dFld=-63.86922;
    public long[] lArrFld =new long[N];
    public boolean[] bArrFld =new boolean[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, boolean b) {

        float f=93.270F;
        int i6=4;
        int i7=124;
        int i8=132;
        int i9=47506;
        int[] iArr =new int[N];
        short s=-6274;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -16662L);
        FuzzerUtils.init(iArr, -809);

        for (long l1 : lArr) {
            b = b;
            i3 += (int)f;
            i3 >>>= (int)l1;
            for (i6 = 4; 1 < i6; i6--) {
                for (i8 = 1; i8 < 2; i8++) {
                    lArr[(i7 >>> 1) % N] -= l1;
                    iArr[i8] = i7;
                    i7 %= 61909;
                    i7 -= (int)1.104411;
                    i9 += i8;
                    l1 = l1;
                    s = (short)i3;
                    l1 = l1;
                }
                i9 *= (int)-13.140F;
            }
        }
        vMeth2_check_sum += i3 + (b ? 1 : 0) + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + s +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l, int i2) {

        int i10=8516;
        int i11=-210;
        int i12=9;
        int i13=-11;
        int i14=147;
        int[] iArr1 =new int[N];
        float f1=39.524F;
        float[] fArr =new float[N];
        double d=-98.5732, d1=-2.116766;
        byte by=41;

        FuzzerUtils.init(iArr1, 1);
        FuzzerUtils.init(fArr, -124.299F);

        vMeth2(i2, Test0197.bFld);
        for (i10 = 209; 4 < i10; --i10) {
            iArr1[i10] *= -2662;
            Test0197.instanceCount -= Test0197.instanceCount;
            fArr[i10 - 1] -= 0;
        }
        iArr1[(i10 >>> 1) % N] += i10;
        f1 += l;
        l -= 19608;
        for (i12 = 207; i12 > 9; i12--) {
            i13 ^= (int)l;
            for (d = 8; d > 1; --d) {
                i2 = i2;
                d1 -= i14;
            }
            i14 += (45035 + (i12 * i12));
            i14 = by;
        }
        vMeth1_check_sum += l + i2 + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + Double.doubleToLongBits(d) +
            i14 + Double.doubleToLongBits(d1) + by + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int i=1;
        int i1=-3;
        int i15=-51099;
        int i16=-180;
        int i17=22477;
        int i18=23;
        int[][] iArr2 =new int[N][N];
        float f2=-27.797F;
        double d2=-52.26413;
        short s1=-7672;

        FuzzerUtils.init(iArr2, 213);

        for (i = 12; i < 313; ++i) {
            vMeth1(Test0197.instanceCount, i1);
            for (i15 = 1; 5 > i15; i15++) {
                i1 = (int)f2;
                i16 >>= i;
                d2 *= f2;
                iArr2[(i16 >>> 1) % N][i - 1] -= i16;
            }
            s1 += (short)8;
            i1 -= i;
            i16 -= i1;
            for (i17 = 5; i17 > 1; i17 -= 3) {
                i1 += (i17 * i17);
                i16 += (int)f2;
                Test0197.instanceCount = Test0197.instanceCount;
                f2 += (234 + (i17 * i17));
            }
        }
        vMeth_check_sum += i + i1 + i15 + i16 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) + s1 + i17 + i18
            + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        float f3=-74.208F;
        int i19=14;
        int i20=14;
        int i21=243;
        int i22=-42599;
        int i23=13;
        int[] iArr3 =new int[N];
        short s2=29637;

        FuzzerUtils.init(iArr3, 17238);

        vMeth();
        lArrFld[(iFld >>> 1) % N] = iFld;
        Test0197.instanceCount >>= iFld;
        iFld += 85;
        lArrFld[(iFld >>> 1) % N] *= iFld;
        iFld -= iFld;
        iFld = (int)f3;
        iArr3[(iFld >>> 1) % N] *= (int)dFld;
        i19 = 327;
        do {
            if (Test0197.bFld) break;
            bArrFld[i19] = false;
            for (i20 = 3; 77 > i20; ++i20) {
                iFld += (i20 * s2);
                for (i22 = 1; i22 < 2; i22++) {
                    iFld >>>= 166;
                    iFld -= (int)5.77304;
                    iArr3[(iFld >>> 1) % N] &= -11;
                    iFld -= i21;
                    iFld >>>= (int) Test0197.instanceCount;
                    Test0197.instanceCount *= i19;
                    f3 += Test0197.instanceCount;
                    f3 += i21;
                    if (true) continue;
                    Test0197.bFld = Test0197.bFld;
                }
                s2 += (short)(i20 - f3);
                iFld = (int)-1587724008271217986L;
            }
            switch ((i19 % 2) + 117) {
            case 117:
                Test0197.instanceCount -= i20;
                Test0197.bFld = Test0197.bFld;
                i21 += (int)f3;
                break;
            case 118:
            default:
                iFld -= i23;
            }
        } while (--i19 > 0);

        FuzzerUtils.out.println("f3 i19 i20 = " + Float.floatToIntBits(f3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 s2 i22 = " + i21 + "," + s2 + "," + i22);
        FuzzerUtils.out.println("i23 iArr3 = " + i23 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0197.instanceCount Test0197.bFld iFld = " + Test0197.instanceCount + "," + (Test0197.bFld ? 1 : 0)
            + "," + iFld);
        FuzzerUtils.out.println("dFld lArrFld bArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0197 _instance = new Test0197();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
