// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0736 {

    public static final int N = 400;

    public static long instanceCount=4158L;
    public int iFld=-220;
    public static int iFld1=-55936;
    public static boolean bFld=true;
    public static float fFld=1.661F;
    public static short sFld=-804;
    public static volatile long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0736.lArrFld, 14L);
        FuzzerUtils.init(Test0736.iArrFld, 44895);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(boolean b, long l, byte by) {

        float f1=-11.329F;
        int i1=76;
        int i2=-3;
        int i3=61869;
        int[] iArr =new int[N];
        long l1=8724187403767282045L;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr, 21988);
        FuzzerUtils.init(dArr, 0.85282);

        Test0736.iFld1 = Test0736.iFld1;
        try {
            f1 += Test0736.iFld1;
            i1 = 1;
            do {
                Test0736.iFld1 += (((i1 * Test0736.iFld1) + l1) - by);
                Test0736.iFld1 += (int) f1;
                iArr[i1] <<= -23567;
            } while (++i1 < 293);
            f1 *= i1;
        }
        catch (UserDefinedExceptionTest exc1) {
            dArr[(-8928 >>> 1) % N] = dArr[(Test0736.iFld1 >>> 1) % N];
            Test0736.instanceCount += (long) f1;
        }
        finally {
            Test0736.iFld1 = (int) f1;
            for (i2 = 2; 161 > i2; i2++) {
                Test0736.lArrFld[i2 + 1] -= -211;
                Test0736.iFld1 *= (int) Test0736.instanceCount;
            }
            by = (byte)-13662;
        }
        vMeth2_check_sum += (b ? 1 : 0) + l + by + Float.floatToIntBits(f1) + i1 + l1 + i2 + i3 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1() {

        int i=194;
        int i4=0;
        int i5=0;
        int i6=43315;
        int i7=10;
        int[] iArr1 =new int[N];
        float f=1.932F;
        boolean b1=true;
        byte by1=87;
        double d=34.54539;

        FuzzerUtils.init(iArr1, 27511);

        i = 1;
        do {
            f -= (--Test0736.iFld1);
            vMeth2(b1, Test0736.instanceCount, by1);
            d = Test0736.instanceCount;
            by1 = (byte) Test0736.instanceCount;
            switch (((i % 10) * 5) + 48) {
            case 94:
                for (i4 = 1; i4 < 5; ++i4) {
                    i5 = (int)-64744L;
                }
                for (i6 = 1; i6 < 5; i6++) {
                    i7 = i5;
                    iArr1[i6 + 1] = (int) Test0736.instanceCount;
                    if (i5 != 0) {
                        vMeth1_check_sum += i + Float.floatToIntBits(f) + (b1 ? 1 : 0) + by1 +
                            Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    Test0736.instanceCount %= (Test0736.iFld1 | 1);
                }
            case 70:
                Test0736.instanceCount += (i ^ Test0736.instanceCount);
                d = -37973;
                break;
            case 65:
            case 83:
                iArr1[i + 1] = i;
            case 92:
                Test0736.iFld1 += (8 + (i * i));
                break;
            case 74:
                if (i6 != 0) {
                    vMeth1_check_sum += i + Float.floatToIntBits(f) + (b1 ? 1 : 0) + by1 + Double.doubleToLongBits(d) +
                        i4 + i5 + i6 + i7 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                break;
            case 89:
                if (b1) break;
                break;
            case 81:
                Test0736.instanceCount ^= i;
                break;
            case 91:
                Test0736.instanceCount = Test0736.instanceCount;
                break;
            case 95:
                b1 = Test0736.bFld;
            }
        } while (++i < 351);
        vMeth1_check_sum += i + Float.floatToIntBits(f) + (b1 ? 1 : 0) + by1 + Double.doubleToLongBits(d) + i4 + i5 +
            i6 + i7 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        byte by2=-55;
        int i8=-3, i9=6, i10=-81, i11=-65041, i12=-163, i13=-15290, i14=-170, i15=1;

        vMeth1();
        Test0736.instanceCount -= 8;
        Test0736.instanceCount -= Test0736.iFld1;
        by2 -= (byte)230;
        Test0736.instanceCount += Test0736.iFld1;
        for (i8 = 252; i8 > 4; --i8) {
            if (Test0736.bFld) continue;
            Test0736.iFld1 = (int) Test0736.instanceCount;
        }
        for (i10 = 10; 365 > i10; ++i10) {
            i11 = i10;
            for (i12 = 1; 5 > i12; ++i12) {
                for (i14 = 1; i14 < 2; i14++) {
                    Test0736.iFld1 *= i8;
                    Test0736.fFld = 968839421L;
                }
                Test0736.lArrFld[i12] = Test0736.iFld1;
            }
        }
        vMeth_check_sum += by2 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15;
    }

    public void mainTest(String[] strArr1) {

        double d1=-2.88909, d2=76.114815, d3=2.112187;
        int i16=-60483, i17=-202, i18=-16662, i19=-188, i20=100, i21=-13928, i22=-14;

        iFld -= (int) (iFld << Test0736.instanceCount);
        vMeth();
        for (d1 = 7; d1 < 391; ++d1) {
            for (i17 = 3; i17 < 66; i17++) {
                if (Test0736.bFld) break;
                Test0736.fFld -= i16;
                d2 = 1;
                while (++d2 < 2) {
                    Test0736.iFld1 = i18;
                    d3 *= iFld;
                }
                for (i19 = 1; i19 < 2; i19++) {
                    i18 ^= (int) Test0736.instanceCount;
                    Test0736.iFld1 -= iFld;
                    i20 += (int)(-32L + (i19 * i19));
                    Test0736.instanceCount ^= i19;
                    Test0736.iFld1 += i19;
                    Test0736.instanceCount *= Test0736.sFld;
                    if (Test0736.bFld) continue;
                    Test0736.fFld -= Test0736.instanceCount;
                    Test0736.instanceCount -= Test0736.instanceCount;
                    Test0736.iArrFld[i19 + 1] <<= i20;
                }
                if (Test0736.bFld) break;
                for (i21 = i17; i21 < 2; ++i21) {
                    Test0736.fFld = i18;
                    i16 += (i21 * i21);
                    try {
                        iFld = (iFld / iFld);
                        i20 = (1188539400 / Test0736.iArrFld[i21]);
                        Test0736.iFld1 = (i20 % -45301);
                    } catch (ArithmeticException a_e) {}
                    Test0736.iArrFld = Test0736.iArrFld;
                    Test0736.instanceCount = i19;
                    Test0736.iArrFld[(int) (d1)] = (int) Test0736.fFld;
                    Test0736.bFld = false;
                }
                iFld = (int) Test0736.instanceCount;
            }
        }

        FuzzerUtils.out.println("d1 i16 i17 = " + Double.doubleToLongBits(d1) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 d2 d3 = " + i18 + "," + Double.doubleToLongBits(d2) + "," +
            Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 = " + i22);

        FuzzerUtils.out.println("Test0736.instanceCount iFld Test0736.iFld1 = " + Test0736.instanceCount + "," + iFld + "," +
                Test0736.iFld1);
        FuzzerUtils.out.println("Test0736.bFld Test0736.fFld Test0736.sFld = " + (Test0736.bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0736.fFld) + "," + Test0736.sFld);
        FuzzerUtils.out.println("Test0736.lArrFld Test0736.iArrFld = " + FuzzerUtils.checkSum(Test0736.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0736.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0736 _instance = new Test0736();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
