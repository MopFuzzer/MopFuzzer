// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0542 {

    public static final int N = 400;

    public static long instanceCount=17L;
    public static short sFld=-13055;
    public static volatile boolean bFld=false;
    public float fFld=2.588F;
    public static int iFld=-47116;
    public static byte byFld=72;
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0542.iArrFld, -14);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8, double d, int i9) {

        int i10=1, i11=229, i12=160, i13=145, i14=-5, i15=37257;
        long l1=-1992721830L;

        i9 = (int) Test0542.instanceCount;
        for (i10 = 7; i10 < 182; ++i10) {
            i11 = (int) Test0542.instanceCount;
            switch (((i10 % 9) * 5) + 51) {
            case 80:
                d = i9;
                break;
            case 83:
                for (i12 = 1; 9 > i12; ++i12) {
                    for (i14 = 1; i14 < 2; i14++) {
                        float f1=0.94F;
                        f1 = i11;
                        if (Test0542.bFld) break;
                        f1 += (((i14 * Test0542.instanceCount) + f1) - i12);
                        Test0542.instanceCount += (((i14 * Test0542.instanceCount) + f1) - i13);
                        i13 += (i14 * i9);
                        i13 >>= -40;
                        i13 += i12;
                        i15 += (i14 | i14);
                    }
                }
                break;
            case 75:
            case 61:
                i8 += (int)d;
                break;
            case 54:
                i15 += i15;
            case 89:
                Test0542.iArrFld[i10 - 1] = Test0542.iArrFld[i10];
                break;
            case 93:
                l1 = l1;
                break;
            case 63:
                i8 = i10;
            case 70:
                try {
                    Test0542.iArrFld[i10 - 1][i10] = (i13 / -3278);
                    i15 = (i13 % 158);
                    i9 = (i14 % i12);
                } catch (ArithmeticException a_e) {}
                break;
            }
        }
        vMeth2_check_sum += i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + i13 + i14 + i15 + l1;
    }

    public static void vMeth1(float f, long l) {

        int i16=-6, i17=217, i18=-17712, i19=60947, i20=11;
        double d1=2.118849;

        vMeth2(i16, d1, i16);
        for (i17 = 10; i17 < 188; ++i17) {
            i18 = i16;
            f -= i18;
        }
        i16 -= i18;
        for (i19 = 9; i19 < 365; ++i19) {
            if (Test0542.bFld) continue;
            i18 -= (int)f;
            l *= i17;
            i16 += (int)125.32341;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + l + i16 + Double.doubleToLongBits(d1) + i17 + i18 + i19 + i20;
    }

    public static void vMeth(int i6, int i7) {

        float f2=1.283F;
        float[] fArr =new float[N];
        double d2=-1.30615;
        int i21=4, i22=9, i23=-11;

        FuzzerUtils.init(fArr, 116.420F);

        vMeth1(f2, Test0542.instanceCount);
        for (d2 = 12; d2 < 248; d2++) {
            Test0542.iArrFld[(int) (d2)][(int) (d2 - 1)] = i7;
            i21 -= i7;
            i6 += (int) Test0542.instanceCount;
            i22 = 1;
            while (++i22 < 7) {
                Test0542.sFld += (short) (i22 - Test0542.instanceCount);
            }
            Test0542.instanceCount += i7;
            i21 *= (int)63L;
            i23 = 1;
            while (++i23 < 7) {
                fArr[(int)(d2 - 1)] = i22;
                if (Test0542.bFld) continue;
            }
            Test0542.iArrFld[(int) (d2)][(int) (d2 + 1)] = i6;
        }
        i21 >>= i6;
        i21 -= -213;
        vMeth_check_sum += i6 + i7 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) + i21 + i22 + i23 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-205, i1=162, i2=-9, i3=9, i4=-57862, i5=-38162, i24=-45358, i25=213, i26=-39767, i27=6673, i28=-3,
            i29=-55844, i30=5, i31=-438, i32=-11;
        boolean b=true;
        float f3=0.830F;

        for (i = 1; i < 151; ++i) {
            for (i2 = 9; i2 < 167; i2++) {
                for (i4 = 1; i4 < 2; ++i4) {
                    b = (b = ((b != b) && (b != b)));
                    Test0542.sFld -= (short) (i1++);
                }
                vMeth(i2, -10);
                i3 += (((i2 * i) + i3) - i2);
                fFld -= 4;
            }
            i1 += (((i * Test0542.iFld) + i1) - Test0542.sFld);
            for (i24 = 167; i24 > 6; i24 -= 3) {
                Test0542.instanceCount *= i3;
                Test0542.instanceCount += (((i24 * i3) + i5) - Test0542.instanceCount);
            }
            for (i26 = 167; i26 > 5; i26--) {
                Test0542.iArrFld[i26 - 1][i - 1] = i27;
                fFld += i26;
                i3 += (i26 * i26);
                fFld -= i;
                Test0542.byFld >>>= (byte) Test0542.instanceCount;
                i3 += (i26 * i24);
            }
            Test0542.iArrFld[i][i] *= (int) Test0542.instanceCount;
            i3 += (i * i);
            Test0542.instanceCount >>>= Test0542.instanceCount;
        }
        i1 = i26;
        i3 += 9204;
        for (i28 = 9; i28 < 348; ++i28) {
            for (f3 = 4; f3 < 74; f3++) {
                Test0542.instanceCount += (long) fFld;
                for (i31 = i28; 2 > i31; i31++) {
                    i30 = i28;
                    i3 *= i26;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("b i24 i25 = " + (b ? 1 : 0) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 f3 i30 = " + i29 + "," + Float.floatToIntBits(f3) + "," + i30);
        FuzzerUtils.out.println("i31 i32 = " + i31 + "," + i32);

        FuzzerUtils.out.println("Test0542.instanceCount Test0542.sFld Test0542.bFld = " + Test0542.instanceCount + "," + Test0542.sFld +
                "," + (Test0542.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld Test0542.iFld Test0542.byFld = " + Float.floatToIntBits(fFld) + "," + Test0542.iFld + "," +
                Test0542.byFld);
        FuzzerUtils.out.println("Test0542.iArrFld = " + FuzzerUtils.checkSum(Test0542.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0542 _instance = new Test0542();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
