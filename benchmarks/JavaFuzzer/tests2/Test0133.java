// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0133 {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public static float fFld=2.747F;
    public static short sFld=30923;
    public int[] iArrFld =new int[N];

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i10, int i11, int i12) {

        byte by1=99;
        double d1=-2.106550;
        float f=2.162F;
        int i13=-21;
        int i14=-55031;
        int i15=-56;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 39154);

        by1 += (byte) Test0133.fFld;
        Test0133.instanceCount -= 977244875L;
        iArr1[(i12 >>> 1) % N] += (int)7.30180;
        d1 -= Test0133.fFld;
        f = 1;
        do {
            i10 <<= i11;
            iArr1[(int)(f - 1)] += i12;
            iArr1[(14 >>> 1) % N] *= (int) Test0133.instanceCount;
            by1 += (byte)(f * f);
            for (i13 = 1; i13 < 5; ++i13) {
                i11 -= i13;
                Test0133.instanceCount >>>= i14;
                Test0133.sFld += (short) (i13 ^ (long) Test0133.fFld);
            }
        } while (++f < 371);
        Test0133.instanceCount &= -323;
        Test0133.instanceCount = i15;
        vMeth_check_sum += i10 + i11 + i12 + by1 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i13 + i14 +
            i15 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth1(long l1, int i8, int i9) {

        int i16=1;
        int i17=155;
        int i18=-25845;
        int i19=7;
        int i20=63758;
        int[] iArr2 =new int[N];
        byte by2=24;
        boolean b=true;

        FuzzerUtils.init(iArr2, 126);

        vMeth(i8, i9, i8);
        i16 = 1;
        while (++i16 < 191) {
            if (b) {
                i8 -= i8;
                for (i17 = 1; i17 < 8; ++i17) {
                    l1 >>= -1L;
                    for (i19 = 1; i19 < 2; ++i19) {
                        i9 *= (int)123L;
                        iArr2[i16 + 1] = by2;
                        iArr2 = iArr2;
                    }
                    by2 = (byte) Test0133.instanceCount;
                    iArr2[i16] = (int)l1;
                    iArr2[i16] -= Test0133.sFld;
                }
                i8 = Test0133.sFld;
                i20 += (((i16 * Test0133.fFld) + i9) - Test0133.fFld);
            } else {
                Test0133.instanceCount &= i8;
            }
        }
        long meth_res = l1 + i8 + i9 + i16 + i17 + i18 + i19 + i20 + by2 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i5) {

        byte by=-97;
        long l=4155553698097117125L;
        long[] lArr =new long[N];
        int i6=65;
        int i7=-11;
        int i21=10;
        int i22=6;
        int i23=-180;
        int i24=108;
        int i25=-12246;
        int[] iArr =new int[N];
        double d2=-30.75643;
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr, -23424L);
        FuzzerUtils.init(iArr, -141);
        FuzzerUtils.init(dArr, 0.130126);

        i5 = (++i5);
        i5 -= (int) (Long.reverseBytes(-(i5++)) + Math.max((int) (Test0133.fFld * by), (int) (-lArr[(i5 >>> 1) % N])));
        iArr[(i5 >>> 1) % N] >>= (int) ((Test0133.fFld++) - (Test0133.instanceCount = (-(-(i5 * l)))));
        for (i6 = 363; i6 > 8; i6--) {
            i7 = iArr[(-1755 >>> 1) % N];
            dArr[i6 - 1] += (iMeth1(832251310L, i6, i6) + 20793);
            try {
                i7 = (41326 / i5);
                i7 = (i6 % 1638571443);
                i5 = (-25025 / i6);
            } catch (ArithmeticException a_e) {}
            iArr[(i5 >>> 1) % N] -= i7;
            for (i21 = 1; i21 < 5; i21++) {
                switch (((-38 >>> 1) % 4) + 51) {
                case 51:
                    for (i23 = 1; i23 < 2; i23++) {
                        i25 %= (int)-3704991001L;
                        i22 &= (int)-6L;
                        by = (byte)25166;
                        l *= i22;
                    }
                    break;
                case 52:
                case 53:
                    d2 = i21;
                    break;
                case 54:
                    i5 += (i21 - Test0133.fFld);
                default:
                    iArr[i6] = (int)d2;
                }
            }
        }
        long meth_res = i5 + by + l + i6 + i7 + i21 + i22 + i23 + i24 + i25 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=21141, i1=11, i2=-57, i3=51026, i4=174, i26=8, i27=162, i28=-189, i29=35545, i30=52857;
        double d=-84.53250;
        boolean b1=false;
        byte by3=33;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 4033127592L);

        for (i = 19; i < 380; i++) {
            Test0133.fFld = (Test0133.instanceCount - (i1 = (i1 - i)));
            for (d = 2; d < 70; ++d) {
                i2 = (int) (Test0133.instanceCount++);
                for (i3 = 1; 2 > i3; i3++) {
                    i1 >>= Math.min(iMeth(i4) + i2, 42792);
                }
                Test0133.instanceCount -= Test0133.instanceCount;
                for (i26 = 1; 2 > i26; ++i26) {
                    if (b1) continue;
                    Test0133.instanceCount = i26;
                    iArrFld[(int)(d - 1)] += (int)d;
                    i2 *= 51048;
                    i1 = 123;
                    iArrFld[i26 - 1] = 136;
                    i2 -= i27;
                    if (b1) continue;
                }
                i1 *= (int) Test0133.fFld;
                Test0133.fFld *= i4;
            }
            Test0133.fFld += i;
            i27 = 101;
            Test0133.instanceCount = i1;
            i27 = (int) Test0133.instanceCount;
            i4 += (((i * i3) + Test0133.fFld) - i2);
            i4 = by3;
        }
        lArr1[(i >>> 1) % N] = i27;
        i28 = 193;
        while (--i28 > 0) {
            for (i29 = 1; i29 < 130; ++i29) {
                lArr1[i29] ^= -47590;
                iArrFld[i29 - 1] = i1;
                i1 += i29;
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i26 i27 b1 = " + i26 + "," + i27 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("by3 i28 i29 = " + by3 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 lArr1 = " + i30 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0133.instanceCount Test0133.fFld Test0133.sFld = " + Test0133.instanceCount + "," +
                Float.floatToIntBits(Test0133.fFld) + "," + Test0133.sFld);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0133 _instance = new Test0133();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
