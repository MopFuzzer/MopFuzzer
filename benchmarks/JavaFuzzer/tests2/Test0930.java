// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0930 {

    public static final int N = 400;

    public static long instanceCount=-132L;
    public static volatile double dFld=-1.94044;
    public int iFld=61325;
    public static boolean[] bArrFld =new boolean[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0930.bArrFld, true);
        FuzzerUtils.init(Test0930.lArrFld, -417506099L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6, double d) {

        short s=11262;
        short[][] sArr =new short[N][N];
        short[][] sArr1 =new short[N][N];
        int i7=-7468, i8=-39591, i9=18428, i10=-12, i11=-4;
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(sArr, (short)-606);
        FuzzerUtils.init(sArr1, (short)11816);
        FuzzerUtils.init(lArr, -5L);

        Test0930.instanceCount = i6;
        Test0930.instanceCount = s;
        s += (short)d;
        i6 += s;
        for (i7 = 20; i7 < 375; i7++) {
            sArr = sArr1;
            Test0930.instanceCount += i7;
            i5 += i5;
            i6 *= (int) Test0930.instanceCount;
            switch ((((i5 >>> 1) % 5) * 5) + 110) {
            case 118:
                i5 = i7;
                i9 = 1;
                while (++i9 < 5) {
                    for (i10 = i7; 1 > i10; ++i10) {
                        Test0930.instanceCount = Test0930.instanceCount;
                        i6 = i6;
                    }
                }
                break;
            case 124:
                s *= (short)i6;
                break;
            case 134:
                Test0930.bArrFld[i7 - 1] = b;
                break;
            case 128:
                i11 += i5;
            case 122:
                try {
                    i8 = (i11 % -223);
                    i5 = (i10 / 26649);
                    i5 = (i10 / -46919);
                } catch (ArithmeticException a_e) {}
            default:
                lArr[i7 + 1] >>= i9;
            }
        }
        vMeth2_check_sum += i5 + i6 + Double.doubleToLongBits(d) + s + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(sArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i2, long l, int i3) {

        float f=0.741F;
        int i4=476;
        int i12=-49;
        int i13=-7;
        int i14=8;
        int i15=131;
        int i16=-78;
        int[] iArr =new int[N];
        double d1=124.95921;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(lArr1, 12L);

        i2 = ((i2++) + (iArr[(i2 >>> 1) % N]--));
        for (f = 4; f < 240; f++) {
            float f1=0.881F;
            f1 -= (((iArr[(int)(f)]++) - (-83.440F + (++i3))) - (i2 * (i4 | i4)));
            vMeth2(-178, i4, d1);
            if (i4 != 0) {
                vMeth1_check_sum += i2 + l + i3 + Float.floatToIntBits(f) + i4 + Double.doubleToLongBits(d1) + i12 +
                    i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
                return;
            }
            i2 = 77;
            for (i12 = 1; i12 < 7; i12++) {
                lArr1[(int)(f - 1)] = i4;
                i13 -= i13;
                i3 *= i3;
                for (i14 = 1; 2 > i14; ++i14) {
                    short s1=9742;
                    i4 = i3;
                    Test0930.instanceCount += (i14 * s1);
                    f1 -= i2;
                    i16 *= i16;
                }
            }
        }
        vMeth1_check_sum += i2 + l + i3 + Float.floatToIntBits(f) + i4 + Double.doubleToLongBits(d1) + i12 + i13 + i14
            + i15 + i16 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth() {

        int i=61482;
        int i1=-43;
        int i17=-5;
        int i18=-5;
        int[][] iArr1 =new int[N][N];
        boolean b1=true;
        float f2=-1.110F;
        short s2=-27841;

        FuzzerUtils.init(iArr1, -16563);

        for (i = 9; i < 154; ++i) {
            vMeth1(1, Test0930.instanceCount, i1);
            if (b1) {
                i1 <<= i1;
            } else {
                f2 -= f2;
                Test0930.instanceCount = s2;
                for (i17 = 11; i17 > 1; --i17) {
                    i18 += (i17 | i17);
                    Test0930.instanceCount >>= i;
                    i1 -= i18;
                    Test0930.dFld += i;
                    i18 += (int)49L;
                    i18 ^= i17;
                    try {
                        iArr1[i + 1][i17 + 1] = (i17 / i18);
                        iArr1[i17][i17 - 1] = (i % i);
                        i1 = (-61 % i);
                    } catch (ArithmeticException a_e) {}
                    i18 >>>= (int) Test0930.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + i1 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) + s2 + i17 + i18 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i19=0;
        int i20=6;
        int i21=-108;
        int i22=-13623;
        int i23=1;
        int[] iArr2 =new int[N];
        float f3=-2.886F;
        short s3=-23173;
        byte by=-121;

        FuzzerUtils.init(iArr2, 37910);

        vMeth();
        iFld <<= iFld;
        i19 += (int)f3;
        iFld = i19;
        for (i20 = 12; i20 < 202; i20++) {
            Test0930.lArrFld[i20 - 1] |= s3;
            try {
                i19 = (i20 % 1888646726);
                i19 = (i21 / 145);
                i21 = (iArr2[i20 + 1] / -1739526695);
            } catch (ArithmeticException a_e) {}
            Test0930.instanceCount = Test0930.instanceCount;
            i19 += (i20 - iFld);
            i21 <<= i21;
            iFld -= (int)119L;
            i19 = iFld;
        }
        for (i22 = 8; i22 < 323; i22++) {
            Test0930.lArrFld = Test0930.lArrFld;
            iFld = i23;
            i21 += (int) Test0930.dFld;
            i21 += (i22 + by);
            Test0930.instanceCount = -143;
        }

        FuzzerUtils.out.println("i19 f3 i20 = " + i19 + "," + Float.floatToIntBits(f3) + "," + i20);
        FuzzerUtils.out.println("i21 s3 i22 = " + i21 + "," + s3 + "," + i22);
        FuzzerUtils.out.println("i23 by iArr2 = " + i23 + "," + by + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0930.instanceCount Test0930.dFld iFld = " + Test0930.instanceCount + "," +
                Double.doubleToLongBits(Test0930.dFld) + "," + iFld);
        FuzzerUtils.out.println("Test0930.bArrFld Test0930.lArrFld = " + FuzzerUtils.checkSum(Test0930.bArrFld) + "," +
                FuzzerUtils.checkSum(Test0930.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0930 _instance = new Test0930();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
