// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:22 2023
public class Test0223 {

    public static final int N = 400;

    public static long instanceCount=-489171897L;
    public static double dFld=100.72646;
    public static short sFld=-5866;
    public static volatile float fFld=0.881F;
    public volatile boolean bFld=false;
    public byte byFld=119;
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld =new double[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0223.iArrFld, -2);
        FuzzerUtils.init(Test0223.dArrFld, -2.113425);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i7=3, i8=-3, i9=0;

        for (i7 = 1; 149 > i7; i7++) {
            Test0223.sFld *= (short) i7;
        }
        Test0223.fFld = i8;
        i9 ^= i7;
        vMeth2_check_sum += i7 + i8 + i9;
    }

    public static void vMeth1() {

        int i4=0, i5=17454, i6=-40, i10=24989, i11=-43938, i12=-7359;
        byte by1=31;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -5L);

        for (long l : lArr) {
            i4 = 1;
            while (++i4 < 4) {
                lArr = (lArr = (lArr = (lArr = FuzzerUtils.long1array(N, (long)-8131L))));
                for (i5 = 1; i5 > 1; i5--) {
                    Test0223.iArrFld[i5 + 1] = i4;
                    vMeth2();
                }
                for (i10 = i4; i10 < 1; i10++) {
                    by1 += (byte)(i10 * i10);
                    switch (((i5 >>> 1) % 10) + 110) {
                    case 110:
                        Test0223.instanceCount += (i10 + i6);
                        i6 *= Test0223.sFld;
                        break;
                    case 111:
                        Test0223.iArrFld[i4 + 1] >>= i10;
                        Test0223.dArrFld[i10 + 1] = Test0223.fFld;
                        break;
                    case 112:
                        Test0223.fFld = i5;
                        i6 >>= i5;
                        break;
                    case 113:
                        i11 += i10;
                        break;
                    case 114:
                        i6 >>= i5;
                        break;
                    case 115:
                        i11 *= 235;
                        break;
                    case 116:
                        i11 = i12;
                        break;
                    case 117:
                        i6 = i10;
                        break;
                    case 118:
                        Test0223.iArrFld[i10] -= (int) Test0223.instanceCount;
                        break;
                    case 119:
                        l -= i5;
                        break;
                    default:
                        i11 -= (int) Test0223.fFld;
                    }
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i10 + i11 + by1 + i12 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1, short s, int i2) {

        byte by=-67;
        double d1=0.71339;
        int i3=-178;
        int i13=-119;
        int i14=-10776;
        int[] iArr =new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, -197);

        i2 <<= (int) ((iArr[(i2 >>> 1) % N] - (by * Test0223.instanceCount)) - ((i1 - i1) + (d1 * -17)));
        i3 = 1;
        while (++i3 < 205) {
            Test0223.instanceCount -= (long) (Test0223.dFld--);
            vMeth1();
            d1 += i2;
            Test0223.sFld += (short) (i3 * i1);
            d1 *= i1;
            for (i13 = 1; i13 < 8; i13++) {
                if (b) continue;
            }
            if (true) {
                i2 *= (int) Test0223.instanceCount;
                iArr[i3] = i13;
            }
            Test0223.instanceCount -= i3;
        }
        vMeth_check_sum += i1 + s + i2 + by + Double.doubleToLongBits(d1) + i3 + i13 + i14 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d=1.34836;
        int i=-4, i15=-9, i16=-5, i17=-11, i18=-8, i19=-158, i20=-4, i21=-38166, i22=8;

        d = (-(Math.min(Test0223.instanceCount, Test0223.instanceCount) * (Test0223.instanceCount * i)));
        vMeth(i, Test0223.sFld, i);
        i15 = 1;
        do {
            i16 = i15;
            for (i17 = 130; i17 > i15; i17--) {
                if (true) continue;
                try {
                    i19 = (-16815 / i18);
                    i18 = (6529 % Test0223.iArrFld[i17 + 1]);
                    i19 = (-179 % i);
                } catch (ArithmeticException a_e) {}
                for (i20 = 1; 1 > i20; i20 += 2) {
                    Test0223.instanceCount >>= -69L;
                    i18 += (i20 * i15);
                    i21 = i22;
                    switch ((((-14 >>> 1) % 3) * 5) + 110) {
                    case 125:
                        i <<= i18;
                        break;
                    case 122:
                        if (bFld) {
                            i18 += (((i20 * i15) + Test0223.sFld) - i21);
                            switch ((i20 % 9) + 66) {
                            case 66:
                                i21 += (int)(6576742400234462292L + (i20 * i20));
                                break;
                            case 67:
                                i18 += (int) Test0223.instanceCount;
                                break;
                            case 68:
                                switch (((i20 % 2) * 5) + 58) {
                                case 67:
                                    if (bFld) break;
                                    d = -20227L;
                                    Test0223.iArrFld[i15] >>= (int) Test0223.instanceCount;
                                    Test0223.instanceCount |= i17;
                                    break;
                                case 59:
                                    switch (((i15 % 2) * 5) + 44) {
                                    case 47:
                                        bFld = bFld;
                                        byFld = (byte)i18;
                                        Test0223.instanceCount = i;
                                        break;
                                    case 53:
                                        Test0223.fFld += -1459;
                                        break;
                                    }
                                    i21 = i18;
                                    byFld += (byte)(i20 * byFld);
                                    break;
                                default:
                                    Test0223.dFld = i17;
                                }
                                break;
                            case 69:
                                Test0223.sFld = byFld;
                            case 70:
                                if (bFld) break;
                            case 71:
                                i21 += (i20 * i20);
                                break;
                            case 72:
                                Test0223.instanceCount += (i20 ^ i17);
                                break;
                            case 73:
                                i21 += (i20 * i20);
                                break;
                            case 74:
                                Test0223.instanceCount *= (long) Test0223.fFld;
                                break;
                            }
                        } else {
                            i <<= (int) Test0223.instanceCount;
                        }
                        break;
                    case 116:
                        fArrFld[i15 + 1] += i21;
                        break;
                    }
                }
            }
        } while (++i15 < 193);

        FuzzerUtils.out.println("d i i15 = " + Double.doubleToLongBits(d) + "," + i + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 = " + i22);

        FuzzerUtils.out.println("Test0223.instanceCount Test0223.dFld Test0223.sFld = " + Test0223.instanceCount + "," +
                Double.doubleToLongBits(Test0223.dFld) + "," + Test0223.sFld);
        FuzzerUtils.out.println("Test0223.fFld bFld byFld = " + Float.floatToIntBits(Test0223.fFld) + "," + (bFld ? 1 : 0) +
            "," + byFld);
        FuzzerUtils.out.println("Test0223.iArrFld Test0223.dArrFld fArrFld = " + FuzzerUtils.checkSum(Test0223.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0223.dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0223 _instance = new Test0223();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
