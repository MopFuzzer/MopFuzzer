// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:30 2023
public class Test0388 {

    public static final int N = 400;

    public static long instanceCount=4162791281029477625L;
    public static int iFld=-32805;
    public static volatile byte byFld=41;
    public static float fFld=120.173F;
    public static int[][] iArrFld =new int[N][N];
    public static long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];
    public static float[] fArrFld =new float[N];
    public static short[][] sArrFld =new short[N][N];

    static {
        FuzzerUtils.init(Test0388.iArrFld, 12);
        FuzzerUtils.init(Test0388.lArrFld, 20913L);
        FuzzerUtils.init(Test0388.dArrFld, 0.80858);
        FuzzerUtils.init(Test0388.fArrFld, 1.38F);
        FuzzerUtils.init(Test0388.sArrFld, (short) 9917);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static void vSmallMeth(long l) {

        float f=0.744F;
        short s=-15142;

        Test0388.iFld *= (int) f;
        l = (s + (Test0388.iFld <<= (-47770 * (Test0388.iFld % (Test0388.iFld | 1)))));
        vSmallMeth_check_sum += l + Float.floatToIntBits(f) + s;
    }

    public static byte byMeth(float f1, int i4, long l1) {

        int i5=-175;
        int i6=157;
        int i7=131;
        int i8=38882;
        int[] iArr1 =new int[N];
        float f2=-1.819F;
        double d=93.86984;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, 128);

        vSmallMeth(l1);
        i4 -= i4;
        for (i5 = 12; i5 < 334; ++i5) {
            boolean b=false;
            if (b) {
                bArr = bArr;
                Test0388.iFld <<= i4;
            }
            f2 = 1;
            while (++f2 < 5) {
                Test0388.byFld += (byte) Test0388.instanceCount;
                i6 -= (int)f1;
                i6 >>= i4;
                iArr1[(int) (f2 - 1)] >>>= Test0388.iFld;
                for (i7 = 1; i7 < 1; i7++) {
                    short s1=7435;
                    if (b) {
                        l1 += (i7 + i5);
                    } else if (b) {
                        s1 = (short)i6;
                    } else {
                        Test0388.instanceCount *= (long) d;
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i4 + l1 + i5 + i6 + Float.floatToIntBits(f2) + i7 + i8 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(byte by, int i1) {

        int i2=-137, i3=-207, i9=-27037, i10=229, i11=-55, i12=8, i13=54101;
        double d1=-2.23888;
        double[] dArr =new double[N];
        short s2=-17631;

        FuzzerUtils.init(dArr, 0.13419);

        for (i2 = 6; i2 < 248; ++i2) {
            byMeth(Test0388.fFld, Test0388.iFld, -22938L);
            for (i9 = 1; i9 < 7; i9++) {
                dArr[i2 + 1] -= Test0388.instanceCount;
                for (d1 = 1; d1 < 2; d1++) {
                    boolean b1=true;
                    Test0388.fFld = Test0388.instanceCount;
                    i3 += (int)d1;
                    switch (((80 >>> 1) % 2) + 20) {
                    case 20:
                        Test0388.iArrFld[i9][(int) (d1 - 1)] *= (int) Test0388.instanceCount;
                        b1 = b1;
                    case 21:
                        i1 = (int)d1;
                        break;
                    }
                    s2 += (short)d1;
                }
                for (i12 = 2; i12 > 1; i12--) {
                    i11 = i10;
                    Test0388.instanceCount -= Test0388.byFld;
                }
            }
        }
        vMeth_check_sum += by + i1 + i2 + i3 + i9 + i10 + Double.doubleToLongBits(d1) + i11 + s2 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=7;
        int i14=11;
        int i15=46;
        int i16=-59948;
        int i17=-13;
        int i18=15818;
        int i19=52702;
        int[] iArr =new int[N];
        double d2=1.86617;
        long l2=-78L;
        float f3=-1.979F;
        boolean b2=true;

        FuzzerUtils.init(iArr, 176);

        for (int smallinvoc = 0; smallinvoc < 701; smallinvoc++) vSmallMeth(Math.abs(Test0388.instanceCount--));
        i = 1;
        do {
            iArr[i + 1] = iArr[i];
            vMeth(Test0388.byFld, -43136);
        } while (++i < 219);
        switch ((((i >>> 1) % 2) * 5) + 54) {
        case 60:
            Test0388.lArrFld[(i >>> 1) % N] -= Test0388.iFld;
            if (b2) {
                Test0388.fFld += -45428L;
                iArr[(i >>> 1) % N] = Test0388.iFld;
                for (i14 = 9; i14 < 355; ++i14) {
                    Test0388.iFld *= 9444;
                    Test0388.iFld -= (int) d2;
                    switch (((i14 % 8) * 5) + 106) {
                    case 109:
                        for (l2 = 4; l2 < 73; ++l2) {
                            for (i17 = 2; i17 > 1; --i17) {
                                i15 &= i14;
                                Test0388.iArrFld[i17][i14] <<= i16;
                                Test0388.dArrFld[i17] += 1;
                                i15 >>= i15;
                                i15 = (int) Test0388.instanceCount;
                                Test0388.byFld -= (byte) -22693;
                                Test0388.fArrFld[(int) (l2 - 1)] = Test0388.byFld;
                                Test0388.iFld = i15;
                                d2 = i17;
                            }
                            i16 >>= 121;
                            i15 >>>= 45386;
                            Test0388.lArrFld[(int) (l2)] = i16;
                            for (f3 = 1; f3 < 2; f3++) {
                                i16 += (int) (((f3 * l2) + l2) - Test0388.iFld);
                                i16 += (int)f3;
                            }
                        }
                        break;
                    case 108:
                        i15 |= i14;
                    case 115:
                        i16 <<= i19;
                        break;
                    case 142:
                        Test0388.iFld += (i14 * i14);
                        break;
                    case 141:
                        i18 -= i;
                        break;
                    case 110:
                        i15 -= (int)-22215L;
                        break;
                    case 138:
                        i16 += (int)(23.33F + (i14 * i14));
                        break;
                    case 143:
                        Test0388.fFld = -27718;
                        break;
                    }
                }
            } else {
                Test0388.fFld = -13;
            }
        case 59:
            Test0388.sArrFld[(i17 >>> 1) % N] = FuzzerUtils.short1array(N, (short) -20573);
            break;
        }

        FuzzerUtils.out.println("i i14 i15 = " + i + "," + i14 + "," + i15);
        FuzzerUtils.out.println("d2 l2 i16 = " + Double.doubleToLongBits(d2) + "," + l2 + "," + i16);
        FuzzerUtils.out.println("i17 i18 f3 = " + i17 + "," + i18 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i19 b2 iArr = " + i19 + "," + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0388.instanceCount Test0388.iFld Test0388.byFld = " + Test0388.instanceCount + "," + Test0388.iFld +
                "," + Test0388.byFld);
        FuzzerUtils.out.println("Test0388.fFld Test0388.iArrFld Test0388.lArrFld = " + Float.floatToIntBits(Test0388.fFld) + "," +
                FuzzerUtils.checkSum(Test0388.iArrFld) + "," + FuzzerUtils.checkSum(Test0388.lArrFld));
        FuzzerUtils.out.println("Test0388.dArrFld Test0388.fArrFld Test0388.sArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0388.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0388.fArrFld)) + "," + FuzzerUtils.checkSum(Test0388.sArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0388 _instance = new Test0388();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test byMeth vMeth
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
