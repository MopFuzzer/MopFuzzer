// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0064 {

    public static final int N = 400;

    public static long instanceCount=2465055049L;
    public static boolean bFld=true;
    public static float fFld=-34.603F;
    public static int iFld=-13;
    public static double[] dArrFld =new double[N];
    public static volatile short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0064.dArrFld, 52.84518);
        FuzzerUtils.init(Test0064.sArrFld, (short) -2788);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i6=1;

        i6 += 250;
        vMeth1_check_sum += l + i6;
    }

    public static long lMeth(float f2) {

        int i4=14143;
        int i5=61676;
        int[] iArr1 =new int[N];
        double d=-1.57774;

        FuzzerUtils.init(iArr1, -36156);

        for (i4 = 13; 293 > i4; i4++) {
            vMeth1(Test0064.instanceCount);
            i5 = i5;
            i5 += (62 + (i4 * i4));
            Test0064.instanceCount += (i4 * i4);
            Test0064.instanceCount += i5;
            Test0064.sArrFld[i4 + 1] = (short) d;
            if (Test0064.bFld) {
                i5 >>= 173;
                i5 *= i5;
                i5 >>= -51683;
            } else if (Test0064.bFld) {
                try {
                    iArr1[i4 + 1] = (i5 % 83);
                    i5 = (i4 % 39453);
                    i5 = (129 / i4);
                } catch (ArithmeticException a_e) {}
                iArr1[i4] = -10;
                i5 -= i4;
                f2 -= i4;
            } else if (Test0064.bFld) {
                f2 = i5;
            } else {
                i5 += (int)f2;
            }
        }
        long meth_res = Float.floatToIntBits(f2) + i4 + i5 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i3=1;
        int i7=-7;
        int i8=249;
        int i9=-49987;
        int i10=74;
        int i11=-31448;
        int i12=-4;
        int[] iArr =new int[N];
        int[][] iArr2 =new int[N][N];
        byte by=42;
        double d1=-32.120511;

        FuzzerUtils.init(iArr, 230);
        FuzzerUtils.init(iArr2, -168);

        i3 &= (i3 * (-i3));
        iArr[(i3 >>> 1) % N] *= (int) (by - Math.max(lMeth(2.262F), Test0064.instanceCount));
        for (i7 = 4; i7 < 159; i7++) {
            for (d1 = 1; d1 < 10; d1++) {
                for (i10 = (int)(d1); 2 > i10; i10++) {
                    i8 ^= i7;
                    i9 = (int) Test0064.instanceCount;
                    i3 += (int) Test0064.fFld;
                }
                i8 += -49821;
                i9 += (int)(d1 * d1);
                iArr2 = iArr2;
                iArr2[(int)(d1 + 1)][(i3 >>> 1) % N] >>= i12;
            }
            Test0064.instanceCount += (i7 ^ i9);
            Test0064.fFld -= i10;
            i12 += i7;
        }
        vMeth_check_sum += i3 + by + i7 + i8 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        float f=0.1000F, f1=0.849F;
        int i=-7, i1=10, i2=29110, i13=-227, i14=1, i15=-32, i16=-64695, i17=14, i18=-27941, i19=-31767, i20=24;
        byte by1=5;
        long l1=-4L;
        long[] lArr =new long[N];
        double d2=77.109088;

        FuzzerUtils.init(lArr, -35190L);

        for (f = 348; f > 2; --f) {
            for (i1 = 3; i1 < 73; ++i1) {
                i += i1;
                f1 -= (float) Test0064.dArrFld[(int) (f)];
                vMeth();
                for (i13 = 2; i13 > 1; i13--) {
                    short s=21395;
                    lArr[i1 + 1] <<= -65316;
                    lArr[i13 + 1] = i;
                    i14 <<= (int) Test0064.instanceCount;
                    lArr[(int)(f)] >>>= -54947L;
                    Test0064.fFld = i;
                    Test0064.instanceCount = by1;
                    i -= i13;
                    s += (short)(((i13 * i13) + i13) - i1);
                }
            }
            i2 += (4 + (f * f));
        }
        i14 = i1;
        for (i15 = 6; 330 > i15; i15++) {
            l1 = 1;
            do {
                i14 *= (int)d2;
            } while (++l1 < 78);
            i -= Test0064.iFld;
            for (i17 = 3; i17 < 78; i17++) {
                i16 += (((i17 * i15) + Test0064.instanceCount) - l1);
                Test0064.instanceCount += Test0064.instanceCount;
                for (i19 = i15; i19 < 2; i19++) {
                    short s1=-19222;
                    i2 += i19;
                    i14 += 85;
                    switch ((((i2 >>> 1) % 10) * 5) + 33) {
                    case 83:
                        Test0064.iFld = i16;
                        break;
                    case 72:
                        i20 += i17;
                        i14 = i13;
                        break;
                    case 40:
                        d2 /= (i16 | 1);
                        break;
                    case 36:
                        Test0064.iFld += (((i19 * Test0064.iFld) + s1) - i);
                        break;
                    case 52:
                        i14 = -8;
                        break;
                    case 68:
                        i16 = -46;
                        break;
                    case 41:
                        i16 >>>= (int)3471354376L;
                        break;
                    case 50:
                        Test0064.bFld = false;
                    case 54:
                        f1 -= l1;
                        break;
                    case 65:
                        i2 = by1;
                        break;
                    default:
                        i2 += Test0064.iFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 f1 i13 = " + i2 + "," + Float.floatToIntBits(f1) + "," + i13);
        FuzzerUtils.out.println("i14 by1 i15 = " + i14 + "," + by1 + "," + i15);
        FuzzerUtils.out.println("i16 l1 d2 = " + i16 + "," + l1 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 lArr = " + i20 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0064.instanceCount Test0064.bFld Test0064.fFld = " + Test0064.instanceCount + "," + (Test0064.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0064.fFld));
        FuzzerUtils.out.println("Test0064.iFld Test0064.dArrFld Test0064.sArrFld = " + Test0064.iFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0064.dArrFld)) + "," + FuzzerUtils.checkSum(Test0064.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0064 _instance = new Test0064();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
