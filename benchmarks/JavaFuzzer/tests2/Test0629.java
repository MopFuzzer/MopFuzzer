// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0629 {

    public static final int N = 400;

    public static long instanceCount=44734L;
    public int iFld=-178;
    public static int iFld1=94;
    public static byte byFld=-39;
    public double dFld=-65.98027;
    public double[] dArrFld =new double[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0629.lArrFld, -20L);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i2, int i3, long l1) {

        float f=2.688F;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, -44889);

        iArr2[(i3 >>> 1) % N] *= -167;
        f -= f;
        vMeth_check_sum += i2 + i3 + l1 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i, int i1) {

        double d=-1.68677, d1=-29.3068, d2=-54.73528;
        int i4=193;
        int i5=-97;
        int i6=-3;
        int i7=36263;
        int[] iArr1 =new int[N];
        float f1=52.219F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -52.70F);
        FuzzerUtils.init(iArr1, 51430);

        Test0629.iFld1 >>>= (int) ((long) ((58773 * (--fArr[(i >>> 1) % N])) * (iArr1[(25 >>> 1) % N] <<= i)) | (long) ((i++)
            * d));
        iArr1[(-245 >>> 1) % N] -= i1;
        vMeth(i, Test0629.iFld1, Test0629.instanceCount);
        iArr1[(Test0629.iFld1 >>> 1) % N] <<= (int) Test0629.instanceCount;
        for (i4 = 6; 136 > i4; ++i4) {
            long l2=2130670216L;
            i5 = (int) Test0629.instanceCount;
            Test0629.instanceCount = i1;
            Test0629.instanceCount = i5;
            l2 += Test0629.iFld1;
            for (d1 = i4; d1 < 12; ++d1) {
                f1 *= (float)d;
            }
            for (d2 = i4; d2 < 12; ++d2) {
                try {
                    i = (i1 / i4);
                    i1 = (-152 / i6);
                    Test0629.iFld1 = (iArr1[i4] % -737478334);
                } catch (ArithmeticException a_e) {}
                Test0629.iFld1 += (int) (((d2 * i1) + i4) - i1);
                d += Test0629.byFld;
            }
        }
        long meth_res = i + i1 + Double.doubleToLongBits(d) + i4 + i5 + Double.doubleToLongBits(d1) + i6 +
            Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l) {

        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 139);

        iArr[(Test0629.iFld1 >>> 1) % N] = (iArr[(Test0629.iFld1 >>> 1) % N] * (Test0629.iFld1++));
        Test0629.instanceCount = Math.min(iMeth(Test0629.iFld1, Test0629.iFld1), Test0629.iFld1);
        Test0629.iFld1 = (int) l;
        long meth_res = l + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i8=1, i9=3240, i10=-108, i11=-46191, i12=66, i13=-226;
        long l3=-11L, l4=41L;
        short s=9315;
        float f2=-107.172F;

        iFld = (int)lMeth(-7L);
        i8 = 1;
        while (++i8 < 367) {
            l3 ^= s;
            l4 = 1;
            do {
                iFld <<= (int)-18L;
            } while (++l4 < 69);
            switch (((i8 % 5) * 5) + 127) {
            case 135:
                i9 -= i9;
                dArrFld[i8] += i9;
                break;
            case 133:
                Test0629.lArrFld[i8] -= iFld;
            case 134:
            case 128:
                Test0629.iFld1 -= (int) l3;
                i9 >>= iFld;
                for (i10 = 2; i10 < 69; ++i10) {
                    for (i12 = 1; i12 < 2; i12++) {
                        f2 += (0 + (i12 * i12));
                        Test0629.iFld1 = i8;
                        switch ((i8 % 9) + 42) {
                        case 42:
                            Test0629.instanceCount += (((i12 * i10) + i11) - i8);
                            i13 *= -166;
                            break;
                        case 43:
                            f2 -= Test0629.instanceCount;
                            break;
                        case 44:
                            Test0629.instanceCount += i8;
                            break;
                        case 45:
                            i9 = i13;
                            Test0629.instanceCount = 13L;
                            Test0629.iFld1 += (-3 + (i12 * i12));
                            i9 >>>= (int) Test0629.instanceCount;
                            break;
                        case 46:
                            l3 = (long)f2;
                            i13 = Test0629.iFld1;
                            iFld = (int)l4;
                            break;
                        case 47:
                            f2 = i9;
                            i13 *= (int) Test0629.instanceCount;
                        case 48:
                            iFld *= iFld;
                            break;
                        case 49:
                            i9 -= i10;
                            break;
                        case 50:
                            i11 = (int)dFld;
                            break;
                        default:
                            i13 = i8;
                        }
                    }
                }
                break;
            case 141:
                i13 += i8;
                break;
            }
        }

        FuzzerUtils.out.println("i8 l3 s = " + i8 + "," + l3 + "," + s);
        FuzzerUtils.out.println("l4 i9 i10 = " + l4 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("f2 = " + Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test0629.instanceCount iFld Test0629.iFld1 = " + Test0629.instanceCount + "," + iFld + "," +
                Test0629.iFld1);
        FuzzerUtils.out.println("Test0629.byFld dFld dArrFld = " + Test0629.byFld + "," + Double.doubleToLongBits(dFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("Test0629.lArrFld = " + FuzzerUtils.checkSum(Test0629.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0629 _instance = new Test0629();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
