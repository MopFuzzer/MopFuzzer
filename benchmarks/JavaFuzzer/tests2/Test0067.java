// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0067 {

    public static final int N = 400;

    public static long instanceCount=5467797116403603319L;
    public float fFld=-2.899F;
    public static float fFld1=64.161F;
    public double dFld=-105.89900;
    public static boolean bFld=false;
    public static volatile float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0067.fArrFld, -96.125F);
        FuzzerUtils.init(Test0067.lArrFld, -3695572923471092572L);
        FuzzerUtils.init(Test0067.iArrFld, -66);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f, double d) {

        int i6=139;
        int i7=-11;
        int i8=188;
        int i9=4063;
        int i10=-8;
        int[] iArr =new int[N];
        float f1=-118.513F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -112.454F);
        FuzzerUtils.init(iArr, 9);

        i6 >>= i6;
        i6 *= i6;
        f1 = 1;
        while ((f1 += 3) < 385) {
            if (i6 != 0) {
            }
            fArr[(int)(f1)] += i6;
            Test0067.instanceCount >>= i6;
            iArr = iArr;
            Test0067.fFld1 = Test0067.fFld1;
            Test0067.instanceCount = (long) f;
            Test0067.instanceCount >>= i6;
            for (i7 = 1; 12 > i7; i7++) {
                for (i9 = 1; i9 < 2; ++i9) {
                    Test0067.instanceCount += 1;
                    i10 = (int) Test0067.instanceCount;
                    d += i7;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + Float.floatToIntBits(f1) + i7 + i8
            + i9 + i10 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i5) {

        int i11=-8, i12=63075, i13=33609, i14=14, i15=128;
        short s=-27996;

        i5 += (--i5);
        i5 %= (int) ((i5 &= (int) (iMeth1(Test0067.fFld1, -50.47657) + Test0067.instanceCount)) | 1);
        for (i11 = 5; i11 < 126; i11++) {
            i12 += (i11 | i5);
            i12 = i12;
            for (i13 = i11; i13 < 13; i13++) {
                i5 += i13;
                i15 = 1;
                do {
                    Test0067.fFld1 += i15;
                    Test0067.fArrFld[i15 - 1] = Test0067.instanceCount;
                    Test0067.instanceCount += (i15 | i11);
                    if (i5 != 0) {
                        vMeth_check_sum += i5 + i11 + i12 + i13 + i14 + i15 + s;
                        return;
                    }
                } while (++i15 < 1);
                i14 += i13;
                Test0067.fFld1 += s;
                Test0067.instanceCount /= (i11 | 1);
            }
        }
        vMeth_check_sum += i5 + i11 + i12 + i13 + i14 + i15 + s;
    }

    public static int iMeth(int i4) {

        int i16=11;
        int i17=-5;
        int i18=-13;
        int i19=-121;
        int i20=-162;
        int i21=0;
        int[] iArr1 =new int[N];
        double d1=108.96034;
        boolean b=true;

        FuzzerUtils.init(iArr1, -20412);

        i4 -= (int) (-((-(Test0067.fFld1 * Test0067.fFld1)) / ((i4 - Test0067.instanceCount) | 1)));
        vMeth(i4);
        for (i16 = 254; i16 > 13; i16 -= 2) {
            i17 = i16;
            for (i18 = 1; 13 > i18; i18++) {
                for (i20 = 1; i20 < 2; i20++) {
                    iArr1[i18 - 1] *= i16;
                    i17 -= i17;
                    i4 >>= i4;
                    if (b) {
                        d1 += i19;
                    }
                    i19 += (i20 * i21);
                    i19 = i18;
                    i19 += (i20 * i20);
                    i19 = i19;
                }
            }
        }
        long meth_res = i4 + i16 + i17 + i18 + i19 + i20 + i21 + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-37706, i1=-9, i2=36976, i3=-45230;
        long l=31L;

        for (i = 15; i < 250; ++i) {
            fFld = (~(long)((-(i1 - fFld)) - 1L));
            for (i2 = 6; i2 < 107; i2++) {
                i1 += (i2 - i3);
                Test0067.instanceCount &= (long) (-(Test0067.instanceCount + (fFld - 26045)));
                i3 *= (i * iMeth(i1));
                l = 1;
                do {
                    dFld *= i3;
                    Test0067.lArrFld = Test0067.lArrFld;
                    i1 <<= i1;
                    fFld += l;
                    switch (((i1 >>> 1) % 7) + 87) {
                    case 87:
                        Test0067.instanceCount = -23;
                        break;
                    case 88:
                    case 89:
                    case 90:
                        Test0067.instanceCount *= i3;
                        i3 /= (int)(i3 | 1);
                        break;
                    case 91:
                        i1 >>= i;
                        Test0067.iArrFld[i] += -6;
                        break;
                    case 92:
                        Test0067.instanceCount >>= 22;
                        i3 &= i1;
                    case 93:
                        Test0067.instanceCount -= i;
                        i3 = 89;
                        dFld *= i3;
                        try {
                            i1 = (-47843 / i2);
                            Test0067.iArrFld[i2 + 1] = (i1 % i2);
                            i3 = (Test0067.iArrFld[i2 + 1] / Test0067.iArrFld[i2]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    default:
                        if (Test0067.bFld) continue;
                    }
                    i1 -= -26958;
                    i1 = i;
                    Test0067.instanceCount >>= i;
                } while (++l < 2);
                Test0067.fFld1 += fFld;
                i3 >>>= i2;
                i3 = (int)1.52428;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 l = " + i3 + "," + l);

        FuzzerUtils.out.println("Test0067.instanceCount fFld Test0067.fFld1 = " + Test0067.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Float.floatToIntBits(Test0067.fFld1));
        FuzzerUtils.out.println("dFld Test0067.bFld Test0067.fArrFld = " + Double.doubleToLongBits(dFld) + "," + (Test0067.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0067.fArrFld)));
        FuzzerUtils.out.println("Test0067.lArrFld Test0067.iArrFld = " + FuzzerUtils.checkSum(Test0067.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0067.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0067 _instance = new Test0067();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
