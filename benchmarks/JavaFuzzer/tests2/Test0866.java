// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0866 {

    public static final int N = 400;

    public static volatile long instanceCount=112L;
    public static int iFld=70;
    public static byte byFld=59;
    public static volatile boolean bFld=true;
    public static boolean bFld1=true;
    public static float fFld=0.18F;
    public static int[] iArrFld =new int[N];
    public static volatile long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0866.iArrFld, 26196);
        FuzzerUtils.init(Test0866.lArrFld, -1092204795L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=-167, i5=2, i6=-39890, i7=19357, i8=14, i9=-128;
        double d=92.102011;
        float f=2.361F;

        Test0866.iFld = Test0866.iFld;
        for (i4 = 5; i4 < 347; ++i4) {
            switch (((-24678 >>> 1) % 9) + 79) {
            case 79:
                for (i6 = 1; 5 > i6; ++i6) {
                    Test0866.lArrFld[i6 + 1] = Test0866.lArrFld[i6];
                    Test0866.iFld ^= i6;
                    d = i7;
                    Test0866.byFld <<= (byte) i7;
                    Test0866.iArrFld[i6 - 1] %= (int) (i5 | 1);
                    Test0866.iArrFld[i4 + 1] = (int) Test0866.instanceCount;
                    for (i8 = 1; 2 > i8; ++i8) {
                        i7 -= (int) Test0866.instanceCount;
                        f += (((i8 * i5) + Test0866.instanceCount) - i5);
                        Test0866.instanceCount += (i8 ^ i8);
                        i5 += (((i8 * i5) + Test0866.instanceCount) - f);
                    }
                }
                break;
            case 80:
                Test0866.iFld += (int) -122L;
            case 81:
                d -= i4;
            case 82:
                Test0866.iArrFld[i4] = (int) 1766057415125510202L;
            case 83:
                Test0866.bFld = Test0866.bFld1;
                break;
            case 84:
                Test0866.instanceCount += (-22266 + (i4 * i4));
                break;
            case 85:
                Test0866.iArrFld[i4] *= (int) Test0866.instanceCount;
                break;
            case 86:
                Test0866.instanceCount -= Test0866.instanceCount;
            case 87:
                i5 = (int)-214L;
                break;
            default:
                Test0866.instanceCount = i5;
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 + i9 + Float.floatToIntBits(f);
    }

    public static long lMeth(int i2, int i3) {

        float f1=-37.295F;
        int i10=-57245, i11=7045, i12=234, i13=3, i14=-35763, i15=27856;
        double d1=-124.16059;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);

        vMeth1();
        f1 -= i2;
        Test0866.byFld += (byte) f1;
        f1 -= Test0866.instanceCount;
        for (i10 = 8; i10 < 347; ++i10) {
            Test0866.instanceCount *= i2;
        }
        for (i12 = 4; i12 < 147; i12++) {
            switch ((((i13 >>> 1) % 3) * 5) + 85) {
            case 100:
                Test0866.iArrFld[i12 + 1] ^= i2;
                Test0866.iFld += (i12 * i12);
                d1 *= Test0866.byFld;
                break;
            case 97:
                try {
                    i3 = (-58676 % Test0866.iArrFld[i12 + 1]);
                    i3 = (i12 / Test0866.iFld);
                    i3 = (i11 % i2);
                } catch (ArithmeticException a_e) {}
                for (i14 = 1; i14 < 11; ++i14) {
                    i3 += (i14 * i14);
                    i3 -= Test0866.iFld;
                }
            case 94:
                bArr[i12] = Test0866.bFld;
                break;
            default:
                i3 <<= i2;
            }
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14
            + i15 + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i=-18, i1=174;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)100);

        byArr[(-51138 >>> 1) % N] -= (byte) (-9319L + (Test0866.iFld + Test0866.iArrFld[(Test0866.iFld >>> 1) % N]));
        for (i = 23; i < 389; ++i) {
            Test0866.iFld = (int) lMeth(Test0866.iFld, i1);
            Test0866.fFld = i1;
            Test0866.iArrFld[i + 1] += (int) Test0866.fFld;
        }
        Test0866.iFld *= i;
        Test0866.iFld += i1;
        vMeth_check_sum += i + i1 + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=-40, i17=-176, i18=-26395, i19=-31433, i20=48046, i21=-54556, i22=-37561, i23=-45292, i24=-58939;
        double d2=31.101348;

        vMeth();
        for (i16 = 8; i16 < 264; i16++) {
            Test0866.iFld += (i16 | i16);
            for (i18 = 2; i18 < 98; i18++) {
                for (i20 = 1; i20 < 2; i20++) {
                    Test0866.iArrFld[i16] += Test0866.byFld;
                    Test0866.iFld = i19;
                    Test0866.lArrFld[i18 - 1][i18] = 122;
                    Test0866.iFld -= (int) Test0866.instanceCount;
                    Test0866.instanceCount += i17;
                    i21 *= i19;
                    i19 = i18;
                    Test0866.lArrFld[i18 + 1][i18] <<= i21;
                    Test0866.bFld1 = false;
                }
                i22 = 1;
                while (++i22 < 2) {
                    Test0866.instanceCount = i17;
                    i19 = Test0866.byFld;
                    Test0866.iArrFld[i22 + 1] *= (int) Test0866.instanceCount;
                }
                i21 &= i19;
                Test0866.iFld += 191;
                i19 += i16;
            }
            i17 %= (int) (Test0866.instanceCount | 1);
            Test0866.fFld += (i16 * i19);
            i19 -= i21;
        }
        i19 -= i22;
        Test0866.iFld += Test0866.iFld;
        for (i23 = 11; i23 < 282; ++i23) {
            Test0866.instanceCount = (long) d2;
            i19 += (int)-8096329883452446555L;
        }
        i17 -= Test0866.iFld;

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("d2 = " + Double.doubleToLongBits(d2));

        FuzzerUtils.out.println("Test0866.instanceCount Test0866.iFld Test0866.byFld = " + Test0866.instanceCount + "," + Test0866.iFld +
                "," + Test0866.byFld);
        FuzzerUtils.out.println("Test0866.bFld Test0866.bFld1 Test0866.fFld = " + (Test0866.bFld ? 1 : 0) + "," + (Test0866.bFld1 ? 1 : 0)
                + "," + Float.floatToIntBits(Test0866.fFld));
        FuzzerUtils.out.println("Test0866.iArrFld Test0866.lArrFld = " + FuzzerUtils.checkSum(Test0866.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0866.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0866 _instance = new Test0866();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
