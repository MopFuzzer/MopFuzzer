// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0856 {

    public static final int N = 400;

    public static long instanceCount=2125490108856003751L;
    public static long lFld=32522L;
    public static short sFld=-20337;
    public static byte byFld=-118;
    public static float fFld=0.581F;
    public int iFld=-61105;
    public static volatile boolean bFld=true;
    public static volatile int[][] iArrFld =new int[N][N];
    public static double[] dArrFld =new double[N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0856.iArrFld, -34178);
        FuzzerUtils.init(Test0856.dArrFld, -116.128522);
        FuzzerUtils.init(Test0856.byArrFld, (byte) 4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s, long l2) {

        int i9=130;

        s -= (short)i9;
        Test0856.iArrFld[(0 >>> 1) % N][(i9 >>> 1) % N] >>= i9;
        vMeth2_check_sum += s + l2 + i9;
    }

    public static void vMeth1(int i3) {

        int i4=-10, i5=86, i6=-8, i7=199, i8=11, i10=-44147, i11=47300, i12=-137, i13=141;
        float f1=-39.831F;
        double d=-87.24631;
        byte[] byArr =new byte[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(byArr, (byte)63);
        FuzzerUtils.init(lArr, -6448890504006463482L);

        for (i4 = 20; i4 < 386; i4++) {
            if (i5 != 0) {
                vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i6 + i7 + i8
                    + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
                return;
            }
            Test0856.instanceCount *= Test0856.instanceCount;
            i5 += (((i4 * i3) + f1) - i4);
        }
        for (d = 5; d < 317; d++) {
            Test0856.lFld += (long) (((f1 - i3) + (byArr[(int) (d + 1)]++)) * Test0856.iArrFld[(int) (d + 1)][(int) (d)]);
            for (i7 = 1; i7 < 5; i7 += 2) {
                vMeth2(Test0856.sFld, Test0856.lFld);
            }
            i5 += (int)((long)d ^ i4);
            for (i10 = 1; i10 < 5; i10++) {
                i11 ^= i11;
                i8 = (int)d;
            }
            for (i12 = 1; i12 < 5; ++i12) {
                lArr[(int)(d)] = i7;
                i11 <<= (int) Test0856.instanceCount;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i6 + i7 + i8 + i10 +
            i11 + i12 + i13 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l, long l1) {

        int i=172, i1=-13, i2=-38840, i14=-2, i15=2, i16=83;
        float f=95.282F;

        for (i = 1; 278 > i; i++) {
            for (f = i; f < 6; ++f) {
                vMeth1(8);
                i1 *= 131;
                for (i14 = (int)(f); i14 < 1; ++i14) {
                    i2 = (int)l;
                    Test0856.dArrFld[i + 1] += -3772857418L;
                    i15 *= i15;
                    Test0856.byFld = (byte) 2;
                    i2 = (int)-130L;
                }
                switch ((((8 >>> 1) % 1) * 5) + 60) {
                case 61:
                    i16 += (int)(((f * i2) + i15) - l1);
                    i2 -= (int) Test0856.instanceCount;
                    break;
                default:
                    Test0856.fFld = Test0856.byFld;
                    i16 = (int)-8L;
                }
            }
        }
        vMeth_check_sum += l + l1 + i + i1 + Float.floatToIntBits(f) + i2 + i14 + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        int i17=-966, i18=-186, i19=84, i20=-9, i21=-37718, i22=250;
        long l3=-39683L, l4=4309423024788754046L;
        double d1=72.73396;

        vMeth(Test0856.lFld, Test0856.instanceCount);
        for (i17 = 2; i17 < 214; ++i17) {
            i18 *= i18;
            Test0856.iArrFld[i17][(iFld >>> 1) % N] = (int) Test0856.instanceCount;
            iFld = Test0856.sFld;
            Test0856.iArrFld[i17][i17 + 1] = -27710;
            Test0856.byArrFld[i17 + 1] = (byte) iFld;
            iFld *= (int) Test0856.lFld;
            iFld += (int)(60.764F + (i17 * i17));
            for (l3 = 3; l3 < 118; ++l3) {
                i18 *= iFld;
                Test0856.bFld = Test0856.bFld;
                for (i20 = 1; 2 > i20; i20++) {
                    Test0856.byFld <<= Test0856.byFld;
                    Test0856.instanceCount += i20;
                    i19 = i21;
                    i21 -= (int) Test0856.fFld;
                    switch (((-7 >>> 1) % 4) + 119) {
                    case 119:
                        Test0856.byFld -= (byte) -19;
                        i19 -= i19;
                        d1 += i19;
                        i21 = 30020;
                    case 120:
                        switch ((int)((l3 % 1) + 13)) {
                        case 13:
                            Test0856.instanceCount += (i20 ^ i20);
                            iFld = i18;
                            iFld >>= (int) Test0856.lFld;
                            try {
                                i21 = (i18 / Test0856.iArrFld[i20 - 1][i20]);
                                i19 = (-223 % i17);
                                i19 = (40919 / i22);
                            } catch (ArithmeticException a_e) {}
                        default:
                            l4 -= i20;
                        }
                        i21 = i19;
                        Test0856.fFld = i20;
                    case 121:
                        iFld += (i20 + Test0856.sFld);
                        break;
                    case 122:
                        Test0856.iArrFld[i20][(int) (l3 + 1)] += (int) d1;
                    default:
                        Test0856.byFld *= (byte) i18;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i17 i18 l3 = " + i17 + "," + i18 + "," + l3);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("d1 i22 l4 = " + Double.doubleToLongBits(d1) + "," + i22 + "," + l4);

        FuzzerUtils.out.println("Test0856.instanceCount Test0856.lFld Test0856.sFld = " + Test0856.instanceCount + "," + Test0856.lFld +
                "," + Test0856.sFld);
        FuzzerUtils.out.println("Test0856.byFld Test0856.fFld iFld = " + Test0856.byFld + "," + Float.floatToIntBits(Test0856.fFld) +
            "," + iFld);
        FuzzerUtils.out.println("Test0856.bFld Test0856.iArrFld Test0856.dArrFld = " + (Test0856.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0856.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0856.dArrFld)));
        FuzzerUtils.out.println("Test0856.byArrFld = " + FuzzerUtils.checkSum(Test0856.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0856 _instance = new Test0856();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
