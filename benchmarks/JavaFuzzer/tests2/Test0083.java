// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0083 {

    public static final int N = 400;

    public static long instanceCount=-2574138973L;
    public static boolean bFld=true;
    public static float fFld=-38.872F;
    public static double dFld=2.72274;
    public long[] lArrFld =new long[N];
    public static long[] lArrFld1 =new long[N];

    static {
        FuzzerUtils.init(Test0083.lArrFld1, -7732555342055332772L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(float f, float f1, long l1) {

        int i7=-42771;
        int i8=9;
        int i9=9;
        int i11=12;
        int i12=-28077;
        int[] iArr1 =new int[N];
        byte by1=-98;
        short s=-21710;

        FuzzerUtils.init(iArr1, -51175);

        for (i7 = 12; i7 < 226; ++i7) {
            f += Test0083.instanceCount;
            by1 %= (byte)(i7 | 1);
            Test0083.lArrFld1[i7] = -2;
            i9 = 1;
            do {
                int i10=5;
                iArr1[i9] *= i8;
                iArr1[i9] = s;
                i10 |= (int)l1;
                i10 += 188;
                for (i11 = 1; i11 < 1; ++i11) {
                    try {
                        i8 = (i7 / -73);
                        i12 = (-237 / i12);
                        iArr1[i7 + 1] = (i12 % i11);
                    } catch (ArithmeticException a_e) {}
                }
                i12 <<= i9;
                i10 = 208;
                i12 <<= by1;
            } while (++i9 < 8);
            if (Test0083.bFld) continue;
        }
        long meth_res = Float.floatToIntBits(f) + Float.floatToIntBits(f1) + l1 + i7 + i8 + by1 + i9 + s + i11 + i12 +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i6) {

        float f2=-34.215F;
        int i13=-143;
        int i14=-39;
        int i15=68;
        int i16=65524;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, 134);

        i6 >>= (int) lMeth(f2, f2, Test0083.instanceCount);
        i13 = 1;
        while (++i13 < 186) {
            i6 <<= (int) Test0083.instanceCount;
            i6 += (int)(-26034L + (i13 * i13));
            i6 = i13;
            for (i14 = 1; 9 > i14; ++i14) {
                if (Test0083.bFld) {
                    i16 = 1;
                    while (++i16 < 2) {
                        if (false) {
                            f2 += Test0083.instanceCount;
                        } else {
                            i6 -= (int)f2;
                        }
                        if (Test0083.bFld) continue;
                        Test0083.instanceCount += (long) 68.786F;
                        i15 = 12;
                        i15 <<= 7755;
                    }
                } else if (false) {
                    iArr2[i14] <<= i15;
                } else if (Test0083.bFld) {
                    i6 += (int)2L;
                } else {
                    i15 = (int)f2;
                }
            }
        }
        long meth_res = i6 + Float.floatToIntBits(f2) + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, long l, double d) {

        int i4=-178, i5=-10160, i17=-8, i18=10550, i19=-9, i20=12;
        byte by=3;
        byte[] byArr =new byte[N];
        float f3=2.508F;

        FuzzerUtils.init(byArr, (byte)94);

        for (i4 = 4; i4 < 308; i4++) {
            i5 = (--byArr[i4 + 1]);
            if (Test0083.bFld) {
                i5 = (int)((i3++) - (++l));
                by *= (byte)((by - (887014958L + by)) - Math.max(i3 + 23127, iMeth(i4)));
            } else {
                i5 += (i4 + i3);
                i3 = 6;
                i3 -= (int)f3;
                if (true) {
                    for (i17 = i4; i17 < 5; i17++) {
                        i18 = i17;
                        i3 += (i17 * i18);
                        for (i19 = 1; 1 < i19; i19--) {
                            d *= i3;
                            i5 = (int)-1808101309L;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i3 + l + Double.doubleToLongBits(d) + i4 + i5 + by + Float.floatToIntBits(f3) + i17 + i18 +
            i19 + i20 + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=11;
        int i1=-51;
        int i21=-9;
        int i22=34842;
        int i23=-21695;
        int i24=57665;
        int i25=-2;
        int i26=-2151;
        int i27=-10;
        int i28=-35389;
        int[] iArr =new
                    int[N];
        int[][] iArr3 =new int[N][N];
        byte by2=-61;
        double d1=115.113605;
        short s1=-4659;

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(iArr3, 48);

        for (i = 4; 326 > i; i++) {
            Test0083.instanceCount >>>= lArrFld[i + 1];
            i1 = (int) (i1 / (((-53419 * (i * i)) + Math.abs(Test0083.instanceCount)) | 1));
            vMeth(i, Test0083.instanceCount, -1.130904);
            i1 = (int) Test0083.fFld;
            i1 -= (int) Test0083.instanceCount;
            i1 += (i + i);
        }
        i1 -= by2;
        for (d1 = 4; d1 < 220; d1++) {
            Test0083.dFld *= Test0083.instanceCount;
        }
        for (i22 = 7; i22 < 146; i22++) {
            i23 += (((i22 * i22) + s1) - s1);
            for (i24 = 8; i24 < 180; i24++) {
                i25 |= i21;
                Test0083.instanceCount -= i23;
                for (i26 = 1; i26 < 2; ++i26) {
                    iArr[i24 - 1] *= i;
                    i25 = 189;
                    i23 ^= i27;
                    iArr[i24 + 1] -= i24;
                    Test0083.fFld = by2;
                    iArr[i26 - 1] = i28;
                    switch ((i24 % 8) + 18) {
                    case 18:
                        Test0083.instanceCount *= (long) -90.869F;
                        break;
                    case 19:
                        i27 = (int) Test0083.dFld;
                        switch (((i26 % 6) * 5) + 114) {
                        case 119:
                            i23 = i27;
                            iArr[i26] = (int) Test0083.instanceCount;
                            if (Test0083.bFld) continue;
                            i27 += (64 + (i26 * i26));
                            break;
                        case 118:
                            iArr3 = FuzzerUtils.int2array(N, (int)-16);
                        case 143:
                            iArr3[i22][i22 + 1] |= (int) Test0083.instanceCount;
                            break;
                        case 115:
                            iArr[i24] <<= s1;
                            break;
                        case 130:
                            i23 -= (int) Test0083.instanceCount;
                            break;
                        case 137:
                            Test0083.instanceCount = -42168;
                            break;
                        default:
                            try {
                                i25 = (iArr[i24] % i21);
                                i28 = (204 / i21);
                                i1 = (-1386479292 % i26);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 20:
                        i27 *= (int) Test0083.fFld;
                    case 21:
                        Test0083.dFld -= Test0083.fFld;
                        break;
                    case 22:
                        i1 = (int) Test0083.fFld;
                    case 23:
                        by2 |= (byte) Test0083.instanceCount;
                        break;
                    case 24:
                        i21 = i27;
                        break;
                    case 25:
                        Test0083.dFld *= -58.538F;
                        break;
                    default:
                        i25 = (int) Test0083.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 by2 = " + i + "," + i1 + "," + by2);
        FuzzerUtils.out.println("d1 i21 i22 = " + Double.doubleToLongBits(d1) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 s1 i24 = " + i23 + "," + s1 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 iArr iArr3 = " + i28 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0083.instanceCount Test0083.bFld Test0083.fFld = " + Test0083.instanceCount + "," + (Test0083.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0083.fFld));
        FuzzerUtils.out.println("Test0083.dFld lArrFld Test0083.lArrFld1 = " + Double.doubleToLongBits(Test0083.dFld) + "," +
                FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(Test0083.lArrFld1));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0083 _instance = new Test0083();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
