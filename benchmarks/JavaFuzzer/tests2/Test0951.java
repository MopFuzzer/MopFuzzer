// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0951 {

    public static final int N = 400;

    public static long instanceCount=2126515458517679038L;
    public static long lFld=-4L;
    public byte byFld=54;
    public static volatile long lFld1=-2243247709L;
    public int iFld=-1;
    public static short sFld=-26566;
    public static float fFld=26.871F;
    public int[] iArrFld =new int[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=212, i7=-13;
        boolean b1=false;
        float[] fArr =new float[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(fArr, 2.523F);
        FuzzerUtils.init(byArr, (byte)76);

        for (float f : fArr) {
            Test0951.instanceCount = 193;
        }
        for (i6 = 19; i6 < 355; i6++) {
            if (b1) continue;
        }
        i7 *= i7;
        byArr[(i7 >>> 1) % N] -= (byte)-2811;
        vMeth1_check_sum += i6 + i7 + (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i3, int i4, int i5) {

        int i8=56032, i9=17008, i10=160, i11=11;
        long l1=-2321670947L;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -5.82279);

        i3 -= i4;
        vMeth1();
        i8 = 159;
        do {
            i3 = 220;
            if (true) {
                for (i9 = 10; i9 > 1; i9 -= 2) {
                    i4 /= (int)(i3 | 1);
                    i3 += i9;
                    Test0951.instanceCount >>>= Test0951.lFld;
                }
                vMeth_check_sum += i3 + i4 + i5 + i8 + i9 + i10 + l1 + i11 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            } else {
                for (l1 = 10; 1 < l1; l1 -= 2) {
                    short s=-8211;
                    s |= (short) Test0951.lFld;
                    Test0951.lFld = Test0951.instanceCount;
                    dArr[i8 + 1] /= (i3 | 1);
                    i4 -= -32282;
                    i4 = i9;
                }
            }
        } while (--i8 > 0);
        vMeth_check_sum += i3 + i4 + i5 + i8 + i9 + i10 + l1 + i11 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(int i1, long l) {

        boolean b=true;
        int i2=-145;
        int i12=96;
        int i13=-3;
        int i14=87;
        int[] iArr =new int[N];
        float f1=2.795F, f2=74.583F;
        byte by=81;
        double[][] dArr1 =new double[N][N];

        FuzzerUtils.init(dArr1, -1.76780);
        FuzzerUtils.init(iArr, 0);

        b = false;
        switch (((i1 >>> 1) % 2) + 55) {
        case 55:
            i2 = 135;
            do {
                vMeth(i2, i1, -4);
                for (f1 = 1; f1 < 12; f1++) {
                    dArr1[(int)(f1)] = dArr1[(int)(f1 + 1)];
                    Test0951.lFld >>= l;
                    i1 <<= (int)l;
                    if (b) continue;
                    i1 -= i2;
                }
                for (i13 = 1; i13 < 12; i13 += 3) {
                    if (b) break;
                    l >>= Test0951.instanceCount;
                }
                i14 += by;
                f2 += (-11 + (i2 * i2));
            } while (--i2 > 0);
            break;
        case 56:
            i14 = 46584;
            break;
        }
        long meth_res = i1 + l + (b ? 1 : 0) + i2 + Float.floatToIntBits(f1) + i12 + i13 + i14 + by +
            Float.floatToIntBits(f2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=7, i16=-37, i17=28, i18=231, i19=-211, i20=8, i21=10;
        double d=-108.94846;
        double d1=126.117543;
        double[] dArr2 =new double[N];
        long[] lArr =new long[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(lArr, -16L);
        FuzzerUtils.init(dArr2, -57.103370);
        FuzzerUtils.init(fArr1, 0.932F);

        i *= ((i++) * Math.abs(iMeth(i, Test0951.lFld)));
        for (i16 = 6; i16 < 155; ++i16) {
            for (i18 = 168; 6 < i18; --i18) {
                Test0951.instanceCount = (long) d;
                iArrFld[i16] <<= byFld;
                Test0951.lFld1 += (i18 * iFld);
                Test0951.instanceCount *= i17;
                for (d1 = 2; d1 > 1; d1 -= 3) {
                    boolean b2=true;
                    i21 = i18;
                    if (b2) break;
                    i *= (int) Test0951.lFld1;
                    lArr[i18 - 1] -= (long)d;
                    switch ((((iFld >>> 1) % 2) * 5) + 55) {
                    case 57:
                        i += (int) (((d1 * i18) + i17) - Test0951.sFld);
                        i += (int) (((d1 * i19) + Test0951.lFld) - Test0951.fFld);
                        break;
                    case 60:
                    default:
                        i19 += (int)(d1 * d1);
                    }
                    i17 += i16;
                    Test0951.sFld >>= (short) -3606233470944744326L;
                    if (b2) {
                        iArrFld[i18 + 1] = i21;
                        switch (((i19 >>> 1) % 4) + 102) {
                        case 102:
                            i *= i16;
                            iFld = i21;
                            dArr2 = dArr2;
                            break;
                        case 103:
                            i19 <<= i;
                            fArr1[(int)(d1 - 1)] -= (float)d1;
                            break;
                        case 104:
                            lArr[i18] += i19;
                            i *= byFld;
                            break;
                        case 105:
                            i19 += (int)(d1 * d1);
                            iFld *= (int)56246L;
                            break;
                        }
                    } else {
                        i20 -= i18;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i16 i17 = " + i + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 d = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("d1 i20 i21 = " + Double.doubleToLongBits(d1) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("lArr dArr2 fArr1 = " + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0951.instanceCount Test0951.lFld byFld = " + Test0951.instanceCount + "," + Test0951.lFld + "," +
            byFld);
        FuzzerUtils.out.println("Test0951.lFld1 iFld Test0951.sFld = " + Test0951.lFld1 + "," + iFld + "," + Test0951.sFld);
        FuzzerUtils.out.println("Test0951.fFld iArrFld = " + Float.floatToIntBits(Test0951.fFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0951 _instance = new Test0951();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
