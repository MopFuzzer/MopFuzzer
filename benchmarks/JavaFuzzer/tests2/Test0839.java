// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:51 2023
public class Test0839 {

    public static final int N = 400;

    public static long instanceCount=1L;
    public static boolean bFld=false;
    public static volatile short sFld=5408;
    public volatile float fFld=-26.959F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0839.iArrFld, 79);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i11) {

        int i12=-34232, i13=-38325;
        double d=2.104299;

        for (i12 = 6; i12 < 321; i12++) {
            i11 = i11;
        }
        i13 += i12;
        d = 99.48299;
        Test0839.iArrFld[(i11 >>> 1) % N] -= i13;
        long meth_res = i11 + i12 + i13 + Double.doubleToLongBits(d);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(float f1, float f2) {

        int i14=219, i15=-11, i16=-105, i17=9, i18=9, i19=23761, i20=-8460, i21=0, i22=-5, i23=0, i24=147;
        short s1=-3696;

        iMeth(i14);
        for (i15 = 350; i15 > 17; i15--) {
            for (i17 = 5; 1 < i17; i17 -= 3) {
                f2 += (i17 + f1);
                f2 = f1;
            }
        }
        i16 <<= i17;
        i19 = 149;
        do {
            switch ((i19 % 2) + 65) {
            case 65:
                i18 >>>= i19;
            case 66:
                for (i20 = 1; 11 > i20; i20++) {
                    i14 %= (int)(i18 | 1);
                }
                i22 = 1;
                do {
                    for (i23 = i19; i23 < 1; i23++) {
                        i24 >>= i14;
                        s1 &= (short)i23;
                    }
                } while (++i22 < 11);
                break;
            }
        } while (--i19 > 0);
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + i18 + i19 + i20 +
            i21 + i22 + i23 + i24 + s1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i4) {

        float f=0.761F;
        int i5=-2, i6=-14360, i7=41, i8=-6204, i9=37767, i10=3;
        short s=7700;
        byte by=-8;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -104L);

        Test0839.instanceCount *= (long) (f--);
        for (i5 = 8; i5 < 215; i5++) {
            for (i7 = 8; i7 > 1; i7--) {
                Test0839.iArrFld[i5] = (int) ((i6 = (int) -807700730L) + (f--));
                s |= (short) (++Test0839.instanceCount);
                Test0839.instanceCount += (((i7 * i4) + i6) - i7);
                i6 = (-((s -= (short)i8) % ((i8--) | 1)));
                i8 += i7;
                lArr[i5] -= Math.min((int) ((--Test0839.instanceCount) * (i5 - Test0839.instanceCount)), (--i6) - (++i8));
                for (i9 = 1; i9 < 2; i9 += 3) {
                    Test0839.instanceCount *= (long) (lMeth(f, f) - f);
                }
                by += (byte)(i7 - i4);
            }
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + s + i9 + i10 + by +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=18657;
        int i1=13;
        int i2=1;
        int i3=11;
        int i25=14;
        int i26=58596;
        int i27=-240;
        int i28=-29577;
        int i29=120;
        int i30=-151;
        int[] iArr =new int[N];
        long l=-72L;
        byte by1=110;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr, 29241);
        FuzzerUtils.init(sArr, (short)-19905);

        for (i = 4; i < 138; ++i) {
            Test0839.instanceCount += (((-4 + (Test0839.instanceCount - i1)) * -7499) - (++iArr[i + 1]));
            for (l = 3; l < 187; ++l) {
                iArr[(int)(l)] = sArr[i];
                try {
                    i2 = (i1 / -913321270);
                    iArr[(int)(l)] = (-1824417882 % iArr[i - 1]);
                    i2 = (i3 % -98);
                } catch (ArithmeticException a_e) {}
                vMeth(i1);
                i2 = i;
                i3 += (63733 + (l * l));
                i3 = -13;
                Test0839.instanceCount *= i2;
                i3 += (int)(((l * i3) + i3) - i1);
                i2 = i;
                for (i25 = 1; 2 > i25; i25++) {
                    i26 -= i25;
                    try {
                        Test0839.iArrFld[i25 + 1] = (i1 % i25);
                        i3 = (i / i26);
                        i2 = (i % 52951);
                    } catch (ArithmeticException a_e) {}
                    i26 &= (int)l;
                    Test0839.bFld = Test0839.bFld;
                    by1 = (byte) Test0839.sFld;
                    fFld += i3;
                    try {
                        i27 = (51099 % i1);
                        i26 = (i1 / -20613);
                        i2 = (i25 % 12487);
                    } catch (ArithmeticException a_e) {}
                    i3 = (int)3647388080L;
                    i1 += i27;
                }
            }
            i28 = 1;
            while (++i28 < 187) {
                Test0839.bFld = Test0839.bFld;
                fFld *= i26;
                for (i29 = 1; 1 > i29; i29++) {
                    i3 = i3;
                    iArr[i - 1] = (int) Test0839.instanceCount;
                    i2 = (int)l;
                }
                Test0839.sFld = (short) i27;
            }
        }

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i2 i3 i25 = " + i2 + "," + i3 + "," + i25);
        FuzzerUtils.out.println("i26 by1 i27 = " + i26 + "," + by1 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("iArr sArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0839.instanceCount Test0839.bFld Test0839.sFld = " + Test0839.instanceCount + "," + (Test0839.bFld ? 1
                : 0) + "," + Test0839.sFld);
        FuzzerUtils.out.println("fFld Test0839.iArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0839.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0839 _instance = new Test0839();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
