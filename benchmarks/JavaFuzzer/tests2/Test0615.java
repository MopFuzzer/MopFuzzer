// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0615 {

    public static final int N = 400;

    public static long instanceCount=-1122200242L;
    public static volatile double dFld=-105.115110;
    public static int iFld=-59787;
    public short sFld=-20414;
    public static short sFld1=31258;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0615.iArrFld, -9);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, long l1, double d2) {

        int i5=0, i6=120, i7=-5633;
        short s=-3522;
        float f=-103.138F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1062739148L);

        i5 = 1;
        do {
            for (i6 = 1; i6 < 5; ++i6) {
                try {
                    i7 = (1545919786 % Test0615.iArrFld[i5]);
                    i7 = (Test0615.iArrFld[i5 - 1] % 1156608001);
                    Test0615.iArrFld[i6 + 1] = (-1183808576 % i7);
                } catch (ArithmeticException a_e) {}
                switch ((i5 % 10) + 86) {
                case 86:
                    i7 *= i7;
                    Test0615.iFld >>= i6;
                    Test0615.instanceCount &= i5;
                    lArr[i5 - 1] += Test0615.instanceCount;
                    break;
                case 87:
                    if (i6 != 0) {
                        vMeth1_check_sum += Double.doubleToLongBits(d1) + l1 + Double.doubleToLongBits(d2) + i5 + i6 +
                            i7 + s + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    break;
                case 88:
                    s += (short)i6;
                    d2 = d1;
                    l1 += 13;
                    break;
                case 89:
                    Test0615.iFld += 166;
                    break;
                case 90:
                    f -= i6;
                case 91:
                    Test0615.iFld = (int) Test0615.instanceCount;
                    break;
                case 92:
                    Test0615.iArrFld = Test0615.iArrFld;
                    break;
                case 93:
                    Test0615.iArrFld[i6 + 1] += Test0615.iFld;
                    break;
                case 94:
                    try {
                        Test0615.iArrFld[i6 - 1] = (i5 % 908374616);
                        Test0615.iFld = (-3440 / i5);
                        i7 = (8 % i6);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 95:
                    Test0615.iFld = s;
                    break;
                default:
                    Test0615.iFld -= (int) Test0615.dFld;
                }
            }
        } while (++i5 < 362);
        vMeth1_check_sum += Double.doubleToLongBits(d1) + l1 + Double.doubleToLongBits(d2) + i5 + i6 + i7 + s +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        double d=22.127623;
        int i4=14;
        int i8=106;
        int i9=-10;
        int i10=-7;
        int i11=54;
        int i12=105;
        int i13=93;
        int i14=26526;
        int[] iArr =new int[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr, -36832);
        FuzzerUtils.init(fArr, 2.1005F);

        iArr[(Test0615.iFld >>> 1) % N] *= (int) (-(Double.longBitsToDouble(-60L) + (--iArr[(24788 >>> 1) % N])));
        for (d = 4; d < 148; d++) {
            vMeth1(d, Test0615.instanceCount, Test0615.dFld);
            i4 = (int) Test0615.instanceCount;
            for (i8 = 1; i8 < 11; i8++) {
                i9 += 216;
                for (i10 = 1; i10 < 2; ++i10) {
                    Test0615.instanceCount -= Test0615.instanceCount;
                    Test0615.iFld -= (int) d;
                }
                for (i12 = i8; i12 < 2; ++i12) {
                    fArr[i12 + 1] = i9;
                    i4 += -13;
                    i13 = i13;
                    i4 = -240;
                    i14 >>= i14;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i4 + i8 + i9 + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(long l, int i, int i1) {

        int i2=152, i3=-5;

        Test0615.dFld += (i1++);
        i1 -= (int)(-5322781726166597843L - i1);
        for (i2 = 9; i2 < 231; ++i2) {
            vMeth();
            l += 14;
        }
        long meth_res = l + i + i1 + i2 + i3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=36.311F;
        float f2=1.576F;
        float f3=27.488F;
        float[] fArr1 =new float[N];
        int i15=-4, i16=-10, i17=16575, i18=-4103, i19=-88, i20=50657, i21=-5, i22=64510;
        boolean b=true;
        byte by=-23;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -118469327L);
        FuzzerUtils.init(fArr1, 106.395F);

        Test0615.instanceCount = (long) 89.274F;
        iMeth(Test0615.instanceCount, Test0615.iFld, 48520);
        lArr1[(Test0615.iFld >>> 1) % N] &= Test0615.iFld;
        f1 -= Test0615.iFld;
        for (i15 = 4; 202 > i15; i15++) {
            for (i17 = i15; i17 < 127; ++i17) {
                Test0615.instanceCount -= i18;
                Test0615.instanceCount = Test0615.instanceCount;
            }
            b = b;
            for (f2 = 7; 127 > f2; ++f2) {
                i19 = (int) Test0615.instanceCount;
                sFld = (short)12;
                i18 = 8;
                switch ((((0 >>> 1) % 7) * 5) + 68) {
                case 88:
                    i19 += (int)f2;
                    i19 >>= (int) Test0615.instanceCount;
                    break;
                case 78:
                    i18 <<= Test0615.iFld;
                    for (i20 = 2; i20 > 1; --i20) {
                        f3 -= i19;
                        Test0615.iArrFld[i15 + 1] = (int) f1;
                        i19 *= (int) Test0615.instanceCount;
                        Test0615.instanceCount += i20;
                    }
                    fArr1[i15] = i21;
                    Test0615.iArrFld[i15] >>= sFld;
                    break;
                case 85:
                    Test0615.iFld = (int) f3;
                    i22 = 1;
                    while (++i22 < 2) {
                        i21 <<= (int)7560532622197538845L;
                        i18 += i16;
                        Test0615.iFld <<= i19;
                        Test0615.sFld1 += (short) i16;
                    }
                    break;
                case 96:
                    Test0615.iArrFld[(int) (f2 - 1)] += -223;
                    break;
                case 92:
                    Test0615.instanceCount = i16;
                    break;
                case 89:
                    by += (byte)4;
                    break;
                case 84:
                    f3 *= by;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("f1 i15 i16 = " + Float.floatToIntBits(f1) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 b = " + i17 + "," + i18 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("f2 i19 i20 = " + Float.floatToIntBits(f2) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 f3 i22 = " + i21 + "," + Float.floatToIntBits(f3) + "," + i22);
        FuzzerUtils.out.println("by lArr1 fArr1 = " + by + "," + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0615.instanceCount Test0615.dFld Test0615.iFld = " + Test0615.instanceCount + "," +
                Double.doubleToLongBits(Test0615.dFld) + "," + Test0615.iFld);
        FuzzerUtils.out.println("sFld Test0615.sFld1 Test0615.iArrFld = " + sFld + "," + Test0615.sFld1 + "," +
                FuzzerUtils.checkSum(Test0615.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0615 _instance = new Test0615();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
