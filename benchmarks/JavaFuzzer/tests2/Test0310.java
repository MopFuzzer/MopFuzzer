// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0310 {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public static int iFld=33;
    public float fFld=-111.154F;
    public double dFld=1.39436;
    public int[] iArrFld =new int[N];

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i1) {

        int i3=2;
        int i4=12;
        int[] iArr =new int[N];
        float f=0.948F;
        float[] fArr =new float[N];
        short s=14140;

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(fArr, 54.556F);

        i1 = -43188;
        i1 |= i1;
        for (int i2 : iArr) {
            i1 -= (int) Test0310.instanceCount;
            if (false) {
                for (i3 = 1; i3 < 4; ++i3) {
                    iArr[i3 + 1] = 7;
                }
                fArr[(i4 >>> 1) % N] = i4;
                l1 %= (i2 | 1);
                f = i1;
            }
            i2 = i1;
            s -= (short)i3;
        }
        i1 >>= i4;
        i4 <<= (int)l1;
        long meth_res = l1 + i1 + i3 + i4 + Float.floatToIntBits(f) + s + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i) {

        int i5=5071;
        int i6=234;
        int i7=62706;
        int i8=50102;
        int i9=195;
        int[] iArr1 =new int[N];
        float f1=-107.652F;
        double d=99.126504;
        double[] dArr =new double[N];
        boolean b=false;
        byte by=-61;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(dArr, -58.78197);
        FuzzerUtils.init(iArr1, 2);
        FuzzerUtils.init(lArr, -10L);

        iMeth(Test0310.instanceCount, i);
        Test0310.instanceCount -= l;
        i = (int)-85.937F;
        for (i5 = 14; i5 < 310; ++i5) {
            for (f1 = 1; f1 < 6; f1++) {
                switch ((i5 % 3) + 100) {
                case 100:
                    l <<= i5;
                    switch (((i5 % 8) * 5) + 102) {
                    case 124:
                        if (false) {
                            i = i;
                            Test0310.instanceCount += l;
                            for (i8 = 1; i8 < 2; ++i8) {
                                i6 = i9;
                                dArr[i8 + 1] = i7;
                                iArr1[i5 + 1] -= (int)d;
                            }
                            vMeth_check_sum += l + i + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 +
                                Double.doubleToLongBits(d) + (b ? 1 : 0) + by +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1) +
                                FuzzerUtils.checkSum(lArr);
                            return;
                        } else if (b) {
                            l = i6;
                        }
                        break;
                    case 115:
                        i9 <<= i;
                    case 132:
                        i6 = i6;
                        break;
                    case 139:
                        d -= i5;
                    case 138:
                        i += (int)f1;
                        break;
                    case 109:
                        Test0310.instanceCount += (long) (((f1 * i8) + l) - i8);
                        break;
                    case 119:
                        i <<= i8;
                        break;
                    case 125:
                        lArr[i5 - 1][(int)(f1 + 1)] = i9;
                        break;
                    default:
                        l -= Test0310.instanceCount;
                    }
                    break;
                case 101:
                    l -= by;
                    break;
                case 102:
                    if (false) continue;
                }
            }
        }
        vMeth_check_sum += l + i + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + Double.doubleToLongBits(d) + (b
            ? 1 : 0) + by + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vSmallMeth() {


        vMeth(Test0310.instanceCount, Test0310.iFld);
        vSmallMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i10=153;
        int i11=117;
        int i12=-15734;
        int i13=-60;
        int i14=64313;
        int i15=7;
        int i16=8;
        int i17=62;
        int i18=5;
        int[][] iArr2 =new int[N][N];
        boolean b1=false;
        byte by1=-11;

        FuzzerUtils.init(iArr2, -13);

        for (int smallinvoc=0; smallinvoc<272; smallinvoc++) vSmallMeth();
        for (i10 = 2; i10 < 278; i10++) {
            for (i12 = 2; i12 < 91; ++i12) {
                double d1=0.39305;
                iArrFld = iArrFld;
                for (i14 = 1; i14 < 2; i14 += 2) {
                    switch (((i11 >>> 1) % 1) + 59) {
                    case 59:
                        b1 = b1;
                        Test0310.instanceCount = 3193819343L;
                        break;
                    default:
                        iArrFld[i12] += by1;
                        i13 += i12;
                    }
                    iArrFld[i14 - 1] = i12;
                }
                Test0310.iFld -= i11;
                try {
                    iArrFld[i10] = (55501 % i14);
                    i13 = (i11 % 52098);
                    i11 = (i10 / 1783883175);
                } catch (ArithmeticException a_e) {}
                d1 -= Test0310.instanceCount;
                i16 = 1;
                while (++i16 < 2) {
                    b1 = b1;
                    iArr2 = iArr2;
                    i11 += (i16 * i16);
                    i11 *= i15;
                    i15 *= i13;
                    i15 += (int) Test0310.instanceCount;
                    i11 += (((i16 * i15) + i12) - i15);
                }
                fFld -= (float)2.17719;
                i13 >>= i10;
            }
            fFld /= (Test0310.instanceCount | 1);
            Test0310.iFld -= i15;
            dFld = -2.884F;
            for (i17 = 1; i17 < 91; i17 += 2) {
                fFld = i13;
                i13 = i18;
            }
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("b1 by1 i16 = " + (b1 ? 1 : 0) + "," + by1 + "," + i16);
        FuzzerUtils.out.println("i17 i18 iArr2 = " + i17 + "," + i18 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0310.instanceCount Test0310.iFld fFld = " + Test0310.instanceCount + "," + Test0310.iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("dFld iArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0310 _instance = new Test0310();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
