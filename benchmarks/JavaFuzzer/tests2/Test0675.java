// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0675 {

    public static final int N = 400;

    public static volatile long instanceCount=-244L;
    public static float fFld=-19.979F;
    public static byte byFld=-40;
    public static int iFld=-173;
    public static short sFld=9405;
    public static long lFld=-8L;
    public boolean bFld=false;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0675.lArrFld, -4200465024005874302L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i5, int i6, int i7) {

        double d1=0.44561;
        int i8=-7;
        int i9=10;
        int i10=26633;
        int i11=65344;
        int i12=146;
        int[] iArr =new int[N];
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(fArr, -2.858F);

        i5 = i7;
        for (d1 = 369; d1 > 20; --d1) {
            for (i9 = 1; i9 < 5; i9++) {
                switch ((i9 % 2) + 18) {
                case 18:
                    Test0675.fFld *= -11L;
                    Test0675.fFld -= Test0675.instanceCount;
                    i5 <<= Test0675.byFld;
                    break;
                case 19:
                    i10 >>= i10;
                    break;
                default:
                    iArr[(int)(d1 - 1)] = i7;
                }
                i7 += (i9 * Test0675.instanceCount);
                for (i11 = 1; i11 < 2; i11++) {
                    i12 <<= i9;
                    fArr = fArr;
                    Test0675.instanceCount += i11;
                    i12 += (i11 + i9);
                }
            }
        }
        long meth_res = i5 + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(long l, long l1, int i2) {

        int i3=-7, i4=-13, i13=-6, i14=-1, i15=-22131, i16=-4;
        double d=0.120843;
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1L);

        for (i3 = 10; i3 < 380; ++i3) {
            d *= (byMeth(Test0675.iFld, i2, Test0675.iFld) + i3);
            Test0675.instanceCount <<= i2;
            for (i13 = 1; i13 < 5; ++i13) {
                switch (((i13 % 3) * 5) + 77) {
                case 91:
                    i14 *= 61;
                    break;
                case 81:
                    for (i15 = 1; i15 < 2; ++i15) {
                        Test0675.iFld += i15;
                        lArr = lArr;
                        d *= i13;
                        b = b;
                        Test0675.sFld += (short) (73L + (i15 * i15));
                        i14 -= i3;
                        i4 &= (int)l;
                        i14 *= i15;
                    }
                case 88:
                    i16 %= (int)-7L;
                    break;
                default:
                    l1 *= i14;
                }
            }
        }
        vMeth_check_sum += l + l1 + i2 + i3 + i4 + Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i, int i1, float f) {

        int i17=0, i18=-227, i19=-4;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 1.933F);

        vMeth(Test0675.instanceCount, -259005688L, i1);
        Test0675.byFld <<= (byte) i1;
        Test0675.instanceCount = Test0675.iFld;
        i <<= i;
        for (i17 = 6; i17 < 212; ++i17) {
            i19 = 1;
            while (++i19 < 8) {
                Test0675.byFld = Test0675.byFld;
                Test0675.lArrFld[i19] = Test0675.iFld;
                Test0675.lFld += Test0675.iFld;
                Test0675.fFld -= Test0675.fFld;
                i1 <<= i17;
                switch ((i19 % 2) + 104) {
                case 104:
                    Test0675.sFld <<= (short) Test0675.iFld;
                    break;
                case 105:
                    i18 &= (int) Test0675.lFld;
                    fArr1[i17] = Test0675.instanceCount;
                    break;
                }
            }
        }
        long meth_res = i + i1 + Float.floatToIntBits(f) + i17 + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=0.410F;
        float[] fArr2 =new float[N];
        int i20=108;
        int i21=72;
        int i22=13;
        int i23=170;
        int i24=-244;
        int[] iArr1 =new int[N];
        double d3=0.90392;

        FuzzerUtils.init(fArr2, -1.777F);
        FuzzerUtils.init(iArr1, -104);

        Test0675.lArrFld[(9 >>> 1) % N] += iMeth(13, Test0675.iFld, 55.99F);
        Test0675.iFld += (int) Test0675.fFld;
        if (true) {
            Test0675.iFld += (int) Test0675.fFld;
            fArr2[(Test0675.iFld >>> 1) % N] = Test0675.iFld;
            for (f1 = 3; f1 < 284; ++f1) {
                double d2=-26.103597;
                for (i21 = 3; i21 < 89; i21++) {
                    i22 <<= i21;
                }
                i23 = 1;
                do {
                    Test0675.instanceCount <<= i22;
                    i22 = i23;
                    Test0675.iFld *= i21;
                    Test0675.fFld = i23;
                } while (++i23 < 89);
                i22 += i20;
                Test0675.lFld *= Test0675.iFld;
                d2 *= Test0675.instanceCount;
                i20 += (int)f1;
                Test0675.lFld = Test0675.sFld;
                i24 = 1;
                while (++i24 < 89) {
                    i20 *= Test0675.iFld;
                    i20 = (int)-5.104F;
                    i22 += (i24 * i24);
                    Test0675.iFld -= i24;
                }
                i20 *= (int)f1;
                iArr1[(int)(f1)] += i24;
            }
            d3 *= Test0675.instanceCount;
        } else if (bFld) {
            i22 *= i21;
            Test0675.lArrFld[(i24 >>> 1) % N] = 83;
            i22 = -41274;
        } else {
            Test0675.sFld -= (short) i22;
        }

        FuzzerUtils.out.println("f1 i20 i21 = " + Float.floatToIntBits(f1) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("d3 fArr2 iArr1 = " + Double.doubleToLongBits(d3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0675.instanceCount Test0675.fFld Test0675.byFld = " + Test0675.instanceCount + "," +
                Float.floatToIntBits(Test0675.fFld) + "," + Test0675.byFld);
        FuzzerUtils.out.println("Test0675.iFld Test0675.sFld Test0675.lFld = " + Test0675.iFld + "," + Test0675.sFld + "," + Test0675.lFld);
        FuzzerUtils.out.println("bFld Test0675.lArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0675.lArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0675 _instance = new Test0675();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
