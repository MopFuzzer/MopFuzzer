// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0455 {

    public static final int N = 400;

    public static long instanceCount=6380694767848933236L;
    public static double dFld=28.17924;
    public static byte byFld=61;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0455.iArrFld, 7);
        FuzzerUtils.init(Test0455.lArrFld, 11L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        int i6=69, i7=-9, i8=-45146, i9=-36264, i10=0;
        short s1=30161;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -938782441801012357L);

        for (long l : lArr) {
            switch (((19716 >>> 1) % 5) + 32) {
            case 32:
                i5 >>= i5;
                i6 = 4;
                while (--i6 > 0) {
                    for (i7 = 1; i7 < 1; i7 += 3) {
                        Test0455.dFld += Test0455.dFld;
                    }
                    for (i9 = i6; i9 < 1; i9++) {
                        boolean b=true;
                        i8 <<= (int)13L;
                        if (b) {
                            lArr[i6 + 1] >>>= s1;
                            Test0455.iArrFld[i9 - 1] = (int) Test0455.dFld;
                        } else {
                            l += 79;
                        }
                        i5 &= (int) Test0455.instanceCount;
                        Test0455.instanceCount += (long) Test0455.dFld;
                        i5 >>= i9;
                    }
                }
            case 33:
                i10 -= Test0455.byFld;
                break;
            case 34:
            case 35:
                Test0455.iArrFld = Test0455.iArrFld;
                break;
            case 36:
            default:
                s1 = (short)i5;
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + s1 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        float f1=-1.957F, f2=-39.995F;
        int i4=4, i11=-54658, i12=-14011, i13=4, i14=180, i15=3;
        boolean b1=false;
        short s2=-28968;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -71.91910);

        for (f1 = 10; 241 > f1; f1++) {
            if (i4 != 0) {
                vMeth1_check_sum += Float.floatToIntBits(f1) + i4 + Float.floatToIntBits(f2) + i11 + i12 + i13 + (b1 ?
                    1 : 0) + i14 + i15 + s2 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
            f2 -= (--i4);
            vMeth2(i4);
            for (i11 = 1; i11 < 7; ++i11) {
                i4 += (i11 | Test0455.instanceCount);
                i13 = 1;
                do {
                    if (b1) break;
                } while (++i13 < 2);
                dArr[(int)(f1)] = i4;
                for (i14 = 1; i14 < 2; i14 += 2) {
                    try {
                        i15 = (i13 / i11);
                        Test0455.iArrFld[i14 - 1] = (i4 / -197);
                        i4 = (Test0455.iArrFld[i11 - 1] / Test0455.iArrFld[i14 + 1]);
                    } catch (ArithmeticException a_e) {}
                    i12 >>= -20823;
                    s2 = (short)i11;
                    f2 = f2;
                }
                Test0455.instanceCount = (long) Test0455.dFld;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i4 + Float.floatToIntBits(f2) + i11 + i12 + i13 + (b1 ? 1 : 0) +
            i14 + i15 + s2 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void vMeth(short s) {

        int i2=-243, i3=14, i16=-58301, i17=-5920;
        float f3=97.56F;

        for (i2 = 343; i2 > 17; --i2) {
            if (Test0455.bFld) {
                vMeth1();
                Test0455.instanceCount <<= Test0455.instanceCount;
            } else if (Test0455.bFld) {
                switch ((i2 % 1) + 10) {
                case 10:
                    i3 = i3;
                    if (Test0455.bFld) {
                        i3 += (((i2 * i3) + i3) - i2);
                        for (f3 = 5; f3 > 1; f3--) {
                            switch ((i2 % 2) + 57) {
                            case 57:
                                Test0455.bFld = Test0455.bFld;
                                Test0455.instanceCount %= ((long) (f3) | 1);
                                i16 = (int)-1.103368;
                                i3 += (int)f3;
                            case 58:
                                if (Test0455.bFld) break;
                                break;
                            default:
                                Test0455.lArrFld[(int) (f3)] *= i17;
                            }
                        }
                    } else if (Test0455.bFld) {
                        if (Test0455.bFld) continue;
                        vMeth_check_sum += s + i2 + i3 + Float.floatToIntBits(f3) + i16 + i17;
                        return;
                    } else if (Test0455.bFld) {
                        Test0455.instanceCount <<= i2;
                    } else {
                        i3 = i2;
                    }
                    break;
                }
            } else {
                Test0455.instanceCount += (((i2 * i16) + i17) - i16);
            }
        }
        vMeth_check_sum += s + i2 + i3 + Float.floatToIntBits(f3) + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i=50923;
        int i1=-254;
        int i18=0;
        int i19=-33497;
        int[] iArr =new int[N];
        float f=31.162F;
        byte by=-26;
        short s3=2841;

        FuzzerUtils.init(iArr, -140);

        for (i = 1; i < 278; ++i) {
            f *= i;
            i1 |= (++iArr[i - 1]);
            i1 += (int) (++Test0455.instanceCount);
        }
        i1 *= (++iArr[(161 >>> 1) % N]);
        i1 -= (int)((++i1) * f);
        i1 ^= i;
        by -= (byte)(((i - i1) - (i + -5143)) - (iArr[(i1 >>> 1) % N] - (i1 + -161L)));
        iArr[(i1 >>> 1) % N] *= (int)(++f);
        vMeth(s3);
        i1 -= (int) Test0455.instanceCount;
        i1 >>= i1;
        i1 >>= i1;
        s3 += (short)i1;
        iArr[(i >>> 1) % N] ^= i1;
        i1 = i;
        Test0455.dFld *= f;
        for (i18 = 3; i18 < 155; ++i18) {
            f -= (float) Test0455.dFld;
            iArr = Test0455.iArrFld;
            f = i19;
        }
        iArr[(7087 >>> 1) % N] *= i19;

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("by s3 i18 = " + by + "," + s3 + "," + i18);
        FuzzerUtils.out.println("i19 iArr = " + i19 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0455.instanceCount Test0455.dFld Test0455.byFld = " + Test0455.instanceCount + "," +
                Double.doubleToLongBits(Test0455.dFld) + "," + Test0455.byFld);
        FuzzerUtils.out.println("Test0455.bFld Test0455.iArrFld Test0455.lArrFld = " + (Test0455.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0455.iArrFld) + "," + FuzzerUtils.checkSum(Test0455.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0455 _instance = new Test0455();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
