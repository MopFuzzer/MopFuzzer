// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0485 {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static float fFld=0.768F;
    public static volatile byte byFld=-67;
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0485.lArrFld, -6L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i8=-165, i9=8, i10=-34169, i11=-45959, i12=63837, i13=-8, i14=9;
        double d=0.38556;
        short s1=31418;

        Test0485.fFld = i8;
        i9 = 1;
        do {
            for (i10 = 1; i10 < 8; i10++) {
                Test0485.byFld += (byte) d;
                i8 <<= -59264;
                i8 += 2;
                for (i12 = 1; i12 < 2; i12++) {
                    i8 -= (int) Test0485.instanceCount;
                    i8 -= i13;
                }
                i11 -= i8;
                i8 += (int)(71.964F + (i10 * i10));
                i14 = 2;
                do {
                    i8 = (int) Test0485.fFld;
                    i13 = s1;
                    Test0485.fFld -= i12;
                } while (--i14 > 0);
            }
        } while (++i9 < 189);
        vMeth1_check_sum += i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + i13 + i14 + s1;
    }

    public static void vMeth(int i7, float f, long l) {

        boolean b=true;
        int i15=9;
        int i16=7;
        int i17=-2;
        int i18=0;
        int i19=33903;
        int i20=46285;
        int[] iArr1 =new int[N];
        short s2=-27548;

        FuzzerUtils.init(iArr1, -34788);

        vMeth1();
        l = i7;
        if (b) {
            iArr1[(1608 >>> 1) % N] *= i7;
            i7 = i7;
            i7 = i7;
        } else {
            iArr1[(i7 >>> 1) % N] -= Test0485.byFld;
            for (i15 = 5; i15 < 195; ++i15) {
                Test0485.instanceCount += i7;
                for (i17 = 1; i17 < 8; ++i17) {
                    for (i19 = i15; 2 > i19; ++i19) {
                        switch ((i17 % 2) + 30) {
                        case 30:
                            i7 -= (int)1.607F;
                            break;
                        case 31:
                            i20 += i19;
                            if (b) continue;
                        default:
                            i16 = s2;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i7 + Float.floatToIntBits(f) + l + (b ? 1 : 0) + i15 + i16 + i17 + i18 + i19 + i20 + s2 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i5) {

        int i6=-249;
        int i21=35;
        int i22=-29;
        int i23=0;
        int i24=-217;
        int[] iArr2 =new int[N];
        boolean b1=true;
        double d1=0.53308;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 2192849902L);
        FuzzerUtils.init(iArr2, -166);

        i6 = 224;
        do {
            i5 /= (int) ((long) (Test0485.fFld) | 1);
        } while (--i6 > 0);
        vMeth(i6, 93.129F, Test0485.instanceCount);
        for (i21 = 2; i21 < 205; i21++) {
            switch ((((i5 >>> 1) % 1) * 5) + 119) {
            case 121:
                for (i23 = 1; i23 < 8; ++i23) {
                    i22 = i5;
                    if (b1) continue;
                    Test0485.fFld += i23;
                    lArr[i21 + 1] >>= i6;
                    d1 *= i24;
                    iArr2[i23 + 1] -= i22;
                    Test0485.instanceCount *= i24;
                    i5 += (((i23 * i6) + i23) - Test0485.instanceCount);
                }
                if (i6 != 0) {
                }
            }
        }
        long meth_res = i5 + i6 + i21 + i22 + i23 + i24 + (b1 ? 1 : 0) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=7747;
        int i1=-5;
        int i2=-121;
        int i3=-161;
        int i4=63620;
        int[] iArr =new int[N];
        short s=-25206;
        float f1=0.376F;
        double d2=43.52695;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr, -126);
        FuzzerUtils.init(dArr, 68.78096);

        i = 1;
        while (++i < 319) {
            for (i1 = i; 79 > i1; ++i1) {
                i2 ^= ((-(++i2)) - ((--s) - (i - i)));
                for (i3 = 1; i3 < 1; ++i3) {
                    boolean b2=false;
                    i2 += (i3 * i3);
                    i2 += i3;
                    iArr[i3 + 1] -= (int)lMeth(i1);
                    Test0485.fFld -= i3;
                    Test0485.fFld = Test0485.instanceCount;
                    if (b2) {
                        i2 >>= i;
                    } else {
                        Test0485.instanceCount *= i4;
                        f1 += (float)d2;
                        i4 >>>= Test0485.byFld;
                        switch ((((i1 >>> 1) % 2) * 5) + 25) {
                        case 33:
                            switch ((i1 % 4) + 44) {
                            case 44:
                                Test0485.byFld = (byte) 40.610F;
                                i2 -= (int) Test0485.instanceCount;
                                if (b2) continue;
                                break;
                            case 45:
                                dArr[i + 1][i3] -= Test0485.instanceCount;
                                break;
                            case 46:
                                Test0485.instanceCount += i1;
                                i2 += i;
                                break;
                            case 47:
                                dArr[i3 + 1][i + 1] = i3;
                                Test0485.instanceCount += Test0485.instanceCount;
                                break;
                            default:
                                i4 += (((i3 * i2) + i) - i);
                            }
                            b2 = b2;
                        case 30:
                            i4 += (i3 - i1);
                            i4 |= 63997;
                            Test0485.lArrFld[i1 - 1] <<= 21884;
                            Test0485.instanceCount += i;
                            break;
                        default:
                            Test0485.fFld *= 30466L;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("s i3 i4 = " + s + "," + i3 + "," + i4);
        FuzzerUtils.out.println("f1 d2 iArr = " + Float.floatToIntBits(f1) + "," + Double.doubleToLongBits(d2) + "," +
            FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0485.instanceCount Test0485.fFld Test0485.byFld = " + Test0485.instanceCount + "," +
                Float.floatToIntBits(Test0485.fFld) + "," + Test0485.byFld);
        FuzzerUtils.out.println("Test0485.lArrFld = " + FuzzerUtils.checkSum(Test0485.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0485 _instance = new Test0485();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
