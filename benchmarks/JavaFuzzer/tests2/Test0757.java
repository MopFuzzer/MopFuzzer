// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0757 {

    public static final int N = 400;

    public static long instanceCount=2364655539L;
    public static int iFld=-219;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0757.iArrFld, 4);
        FuzzerUtils.init(Test0757.lArrFld, -6L);
        FuzzerUtils.init(Test0757.dArrFld, 2.18498);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by) {

        double d=1.24328;
        int i6=-18916, i7=20;
        boolean b=false;
        float f1=0.490F;

        Test0757.iFld <<= Test0757.iFld;
        Test0757.iFld *= (int) d;
        Test0757.instanceCount = Test0757.iFld;
        Test0757.iFld >>= Test0757.iFld;
        for (i6 = 23; i6 < 395; ++i6) {
            Test0757.iFld = 26957;
            Test0757.iFld = i6;
            i7 += (i6 + Test0757.iFld);
        }
        try {
            Test0757.iFld += -25120;
            b = true;
            Test0757.instanceCount = (long) d;
            f1 *= by;
            Test0757.instanceCount = Test0757.instanceCount;
        }
        catch (NullPointerException exc1) {
            d = i7;
        }
        finally {
            Test0757.instanceCount = Test0757.iFld;
        }
        vMeth1_check_sum += by + Double.doubleToLongBits(d) + i6 + i7 + (b ? 1 : 0) + Float.floatToIntBits(f1);
    }

    public static void vMeth() {

        int i4=-6, i5=45255, i8=-8, i9=64119, i10=42388, i11=41;
        byte by1=78;
        short s=21445;
        double d1=55.85778;
        float f2=0.1016F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -75.465F);

        for (i4 = 4; i4 < 150; ++i4) {
            switch (((i4 % 3) * 5) + 95) {
            case 97:
                switch ((((Integer.reverseBytes(Test0757.iFld) >>> 1) % 10) * 5) + 125) {
                case 140:
                    i5 = (--Test0757.iArrFld[i4]);
                    vMeth1(by1);
                    i8 = 1;
                    do {
                        s += (short)(12 + (i8 * i8));
                        for (i9 = 1; i9 < 1; ++i9) {
                            d1 -= -201;
                            i5 = (int) Test0757.instanceCount;
                            Test0757.iFld += (int) d1;
                            i10 -= (int)f2;
                            Test0757.iArrFld[i8 + 1] <<= (int) -196L;
                            Test0757.iFld += i9;
                            f2 *= i8;
                        }
                    } while (++i8 < 11);
                case 143:
                    Test0757.iArrFld[i4] *= 602;
                    break;
                case 148:
                    i5 = i5;
                    break;
                case 169:
                    fArr[i4 - 1] -= Test0757.iFld;
                    break;
                case 127:
                    f2 -= i5;
                case 153:
                    Test0757.instanceCount += i4;
                    break;
                case 163:
                case 145:
                    Test0757.iFld += s;
                case 155:
                    i10 = (int)-73.108623;
                    break;
                case 150:
                    Test0757.iFld -= (int) d1;
                    break;
                }
                break;
            case 98:
            case 101:
                i5 -= i11;
                break;
            }
        }
        vMeth_check_sum += i4 + i5 + by1 + i8 + s + i9 + i10 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) +
            i11 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static double dMeth(int i, int i1, long l) {

        int i2=4, i3=104, i12=-49, i13=-8;
        float f=10.625F;
        byte by2=44;

        i2 = 1;
        while (++i2 < 372) {
            i1 -= (int)f;
            i3 = 1;
            do {
                vMeth();
                i1 += (((i3 * l) + Test0757.instanceCount) - i2);
                for (i12 = 1; i12 > i3; i12 -= 3) {
                    Test0757.iFld = i12;
                    i13 += (((i12 * i3) + i12) - i13);
                    switch ((i12 % 3) + 24) {
                    case 24:
                        Test0757.iFld += (i12 * Test0757.instanceCount);
                        Test0757.iFld *= by2;
                        i13 <<= i2;
                        Test0757.iArrFld[i12] -= i2;
                        break;
                    case 25:
                        i13 *= i12;
                        Test0757.iArrFld[i12] = (int) Test0757.instanceCount;
                        break;
                    case 26:
                        i13 ^= by2;
                    }
                }
            } while (++i3 < 5);
        }
        long meth_res = i + i1 + l + i2 + Float.floatToIntBits(f) + i3 + i12 + i13 + by2;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s1=26436;
        int i14=-712, i15=14169, i16=-24910, i17=-14, i18=-33066, i19=0, i20=11, i21=245;
        byte by3=92;
        float f3=-106.954F;
        double d2=-2.29297;

        Test0757.iFld >>= 14;
        Test0757.iFld = (int) ((++Test0757.iArrFld[(Test0757.iFld >>> 1) % N]) + (dMeth(Test0757.iFld, Test0757.iFld, 49185L) + s1));
        s1 *= (short)10;
        Test0757.iFld *= (int) Test0757.instanceCount;
        for (i14 = 14; i14 < 312; i14++) {
            i15 *= i14;
            switch ((i14 % 2) + 25) {
            case 25:
                for (i16 = i14; i16 < 84; ++i16) {
                    Test0757.instanceCount += i17;
                    for (i18 = 1; 1 > i18; i18++) {
                        Test0757.instanceCount += i14;
                        by3 -= (byte)i17;
                        Test0757.iArrFld[i14 + 1] >>= i19;
                        Test0757.instanceCount *= (long) f3;
                        Test0757.iArrFld[i16 + 1] &= i15;
                        i17 += i18;
                        switch (((i14 % 1) * 5) + 12) {
                        case 15:
                            i15 ^= i16;
                            break;
                        default:
                            Test0757.instanceCount >>= 4486;
                            d2 = -14;
                            Test0757.lArrFld[i18] += -22853L;
                            Test0757.lArrFld[i14 + 1] += (long) f3;
                        }
                        Test0757.dArrFld[i16 - 1] -= i14;
                        d2 %= (i18 | 1);
                        Test0757.iFld += i18;
                    }
                    switch ((i14 % 7) + 86) {
                    case 86:
                        for (i20 = i16; 1 > i20; ++i20) {
                            i21 += i20;
                            i21 >>= (int) Test0757.instanceCount;
                        }
                    case 87:
                        i21 = s1;
                        break;
                    case 88:
                        i17 += (2 + (i16 * i16));
                        break;
                    case 89:
                        Test0757.lArrFld[i16] = i21;
                    case 90:
                        f3 += (7491480749907627008L + (i16 * i16));
                        break;
                    case 91:
                        Test0757.instanceCount = i21;
                        break;
                    case 92:
                        i15 <<= by3;
                    default:
                        Test0757.iArrFld[i14 + 1] += 10047;
                    }
                }
            case 26:
                d2 = Test0757.iFld;
                break;
            default:
                f3 *= -1.83F;
            }
        }

        FuzzerUtils.out.println("s1 i14 i15 = " + s1 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 by3 f3 = " + i19 + "," + by3 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("d2 i20 i21 = " + Double.doubleToLongBits(d2) + "," + i20 + "," + i21);

        FuzzerUtils.out.println("Test0757.instanceCount Test0757.iFld Test0757.iArrFld = " + Test0757.instanceCount + "," + Test0757.iFld +
                "," + FuzzerUtils.checkSum(Test0757.iArrFld));
        FuzzerUtils.out.println("Test0757.lArrFld Test0757.dArrFld = " + FuzzerUtils.checkSum(Test0757.lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0757.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0757 _instance = new Test0757();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
