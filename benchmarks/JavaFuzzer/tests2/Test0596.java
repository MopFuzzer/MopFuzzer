// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0596 {

    public static final int N = 400;

    public static volatile long instanceCount=5L;
    public static int iFld=11;
    public volatile double dFld=0.19910;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0596.iArrFld, -242);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f1, int i2) {

        int i3=26, i4=33724, i5=-10324, i6=-35, i7=222;
        double d=-84.48019;
        boolean b=false;
        long[] lArr =new long[N];
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(lArr, 7407829351228789719L);
        FuzzerUtils.init(sArr, (short)-5609);

        for (i3 = 5; i3 < 231; i3++) {
            i2 = (int) Test0596.instanceCount;
        }
        Test0596.iArrFld[(i2 >>> 1) % N] = i2;
        if (b) {
            i2 = (int)d;
            Test0596.iArrFld[(-3 >>> 1) % N] += i3;
            i5 = 1;
            while (++i5 < 319) {
                i4 += (-29484 + (i5 * i5));
                Test0596.iArrFld[i5] -= Test0596.iFld;
                for (i6 = i5; i6 < 5; ++i6) {
                    i4 ^= Test0596.iFld;
                }
                lArr[i5 + 1] *= i4;
                sArr[i5 + 1][i5 - 1] = (short)-11;
                Test0596.iFld = (int) -2.456F;
            }
            Test0596.iFld -= (int) Test0596.instanceCount;
        } else if (b) {
            vMeth_check_sum += Float.floatToIntBits(f1) + i2 + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + (b
                ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
            return;
        } else {
            Test0596.iArrFld[(Test0596.iFld >>> 1) % N] = (int) Test0596.instanceCount;
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i2 + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + (b ? 1
            : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth() {

        float f2=108.159F;
        int[] iArr1 =new int[N], iArr2 =new int[N];

        FuzzerUtils.init(iArr1, 6300);
        FuzzerUtils.init(iArr2, 56207);

        iArr1 = (iArr1 = (iArr2 = (iArr2 = FuzzerUtils.int1array(N, (int)119))));
        iArr2[(Test0596.iFld >>> 1) % N] *= (int) Test0596.instanceCount;
        vMeth(f2, Test0596.iFld);
        long meth_res = Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(int i1) {

        short s=-4522;
        float f=2.952F;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 3);

        iArr[(i1 >>> 1) % N][(8 >>> 1) % N] = (int)(((long)(s * f) >>> iMeth()) * i1);
        vSmallMeth_check_sum += i1 + s + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i8=50986, i9=8, i10=5, i11=4, i12=246, i13=10, i14=-12387, i15=43535, i16=-139;
        boolean b1=true;
        float f3=-1.91F;
        float[] fArr =new float[N];
        short s1=-32316;
        short[] sArr1 =new short[N];

        FuzzerUtils.init(fArr, 1.376F);
        FuzzerUtils.init(sArr1, (short)-7173);

        i ^= (i + i);
        Test0596.instanceCount ^= i;
        for (int smallinvoc=0; smallinvoc<677; smallinvoc++) vSmallMeth(i);
        fArr[(i >>> 1) % N] -= Test0596.instanceCount;
        for (i8 = 16; 357 > i8; i8++) {
            for (i10 = 1; i10 < 74; ++i10) {
                switch (((i8 % 1) * 5) + 82) {
                case 86:
                default:
                    for (i12 = 1; i12 < 2; i12++) {
                        Test0596.instanceCount += i12;
                        i = -49430;
                        if (b1) continue;
                    }
                    i11 += (int)-51.930F;
                    Test0596.instanceCount += i10;
                    i9 >>= (int) Test0596.instanceCount;
                }
                for (i14 = i8; 2 > i14; i14++) {
                    try {
                        Test0596.iArrFld[i8] = (Test0596.iArrFld[i10 + 1] / i9);
                        i11 = (i9 / i14);
                        Test0596.iArrFld[i14] = (i14 % -206);
                    } catch (ArithmeticException a_e) {}
                }
                Test0596.iFld = i;
                dFld = -7;
                fArr[i10] = Test0596.instanceCount;
                Test0596.iFld <<= i10;
                i16 = 1;
                while (++i16 < 2) {
                    i11 = (int)-161L;
                    i11 += i9;
                    Test0596.instanceCount += (i16 | Test0596.instanceCount);
                    f3 = -244L;
                    f3 = 2514;
                    Test0596.iFld += (((i16 * i10) + Test0596.instanceCount) - i8);
                    dFld = i12;
                    sArr1[(i10 >>> 1) % N] = s1;
                    i11 >>= i16;
                }
            }
        }

        FuzzerUtils.out.println("i i8 i9 = " + i + "," + i8 + "," + i9);
        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 b1 i14 = " + i13 + "," + (b1 ? 1 : 0) + "," + i14);
        FuzzerUtils.out.println("i15 i16 f3 = " + i15 + "," + i16 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("s1 fArr sArr1 = " + s1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test0596.instanceCount Test0596.iFld dFld = " + Test0596.instanceCount + "," + Test0596.iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0596.iArrFld = " + FuzzerUtils.checkSum(Test0596.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0596 _instance = new Test0596();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
