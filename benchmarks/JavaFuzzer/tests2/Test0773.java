// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:48 2023
public class Test0773 {

    public static final int N = 400;

    public static long instanceCount=3894864301L;
    public static byte byFld=-87;
    public boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static void vMeth1(long l1) {

        int i3=-3;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-64);

        Test0773.byFld -= (byte) (byArr[(i3 >>> 1) % N] + i3);
        vMeth1_check_sum += l1 + i3 + FuzzerUtils.checkSum(byArr);
    }

    public static double dMeth() {

        int i5=54832;
        int i6=-59063;
        int i7=211;
        int i8=210;
        int[][] iArr1 =new int[N][N];
        byte by=5;
        float f1=-41.488F;
        short s=19351;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr1, 15389);
        FuzzerUtils.init(lArr1, 3543108366L);

        for (i5 = 1; i5 < 207; i5++) {
            i6 += i5;
            i6 += (int) Test0773.instanceCount;
            i6 >>= (int) Test0773.instanceCount;
            by = (byte)47670;
            i6 -= i5;
        }
        f1 = Test0773.instanceCount;
        for (i7 = 13; 341 > i7; ++i7) {
            int i9=-63770;
            i8 <<= i9;
            Test0773.instanceCount *= i8;
            i6 += (i7 - i8);
            iArr1[i7] = iArr1[i7 + 1];
        }
        lArr1[(i8 >>> 1) % N] = s;
        iArr1[(i7 >>> 1) % N][(i8 >>> 1) % N] = by;
        i8 += (int)-12L;
        long meth_res = i5 + i6 + by + Float.floatToIntBits(f1) + i7 + i8 + s + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static long lMeth(long l2) {

        int i4=5487;
        int i10=-132;
        int i11=-25371;
        int i12=13;
        int i13=-17057;
        int i14=-40763;
        int i15=-14;
        int i16=-19102;
        int[] iArr =new int[N];
        boolean b=false;
        double d=0.36510;
        float f2=0.148F, f3=-4.27F;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr, -45698);
        FuzzerUtils.init(lArr2, -463614479L);

        iArr[(i4 >>> 1) % N] *= ((i4 = (42 + (i4 - i4))) >> i4);
        b = b;
        Test0773.instanceCount = (long) (dMeth() + -92);
        for (d = 3; d < 301; ++d) {
            l2 = i10;
            for (i11 = 6; i11 > d; i11--) {
                lArr2[(int)(d)] -= i10;
            }
            try {
                i4 = (iArr[(int)(d)] % -15938);
                iArr[(int)(d - 1)] = (i12 % i10);
                i4 = (i12 % i11);
            } catch (ArithmeticException a_e) {}
            for (i13 = 1; i13 < 6; ++i13) {
                i4 = i15;
                i12 += (((i13 * l2) + f2) - i10);
                for (f3 = 2; f3 > 1; f3 -= 3) {
                    i15 = i10;
                    i14 >>= i10;
                }
                f2 -= i15;
            }
        }
        long meth_res = l2 + i4 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i16 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i2, float f, long l) {

        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 8854823952433757869L);

        l -= (++i2);
        vMeth1(lArr[(i2 >>> 1) % N][(i2 >>> 1) % N]);
        Test0773.instanceCount = (Math.max(i2, i2 * i2) / (lMeth(Test0773.instanceCount) | 1));
        i2 += i2;
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + l + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-27970, i1=-35146, i17=62545, i18=13;
        float f5=99.971F;

        for (i = 15; 377 > i; ++i) {
            float f4=-9.154F;
            i1 ^= 13700;
            vMeth(i, f4, -1786133312L);
        }
        for (i17 = 3; i17 < 128; ++i17) {
            if (bFld) continue;
            i18 += i1;
            i18 *= (int)f5;
            i18 += (i17 * i17);
        }
        i1 += i17;

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 f5 = " + i18 + "," + Float.floatToIntBits(f5));

        FuzzerUtils.out.println("Test0773.instanceCount Test0773.byFld bFld = " + Test0773.instanceCount + "," + Test0773.byFld + "," +
            (bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0773 _instance = new Test0773();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
