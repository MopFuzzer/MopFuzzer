// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:22 2023
public class Test0212 {

    public static final int N = 400;

    public static long instanceCount=49640L;
    public static byte byFld=-88;
    public static boolean bFld=false;
    public static double dFld=94.105534;
    public static double[] dArrFld =new double[N];
    public long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0212.dArrFld, -58.38000);
        FuzzerUtils.init(Test0212.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5, long l3, double d1) {

        int i6=11;
        int i7=-11;
        int i8=-3336;
        int i9=5;
        int i10=-52599;
        int[] iArr =new int[N];
        float f3=64.857F;
        short s=25221;

        FuzzerUtils.init(iArr, -33723);

        for (i6 = 8; 382 > i6; i6++) {
            i7 += (int)f3;
            if (Test0212.bFld) continue;
            i8 = 1;
            while (++i8 < 5) {
                iArr[i8 - 1] += -172;
                i5 = (int)d1;
                i5 = i8;
                switch (((i8 % 1) * 5) + 110) {
                case 115:
                    s = (short) Test0212.instanceCount;
                    break;
                default:
                    f3 += i8;
                }
                Test0212.bFld = Test0212.bFld;
                for (i9 = 1; i9 < 1; ++i9) {
                    i5 <<= -49;
                    i5 -= i5;
                    Test0212.bFld = true;
                }
            }
        }
        long meth_res = i5 + l3 + Double.doubleToLongBits(d1) + i6 + i7 + Float.floatToIntBits(f3) + i8 + s + i9 + i10
            + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f1, float f2, double d) {

        int i2=-13;
        int i3=48571;
        int i4=46837;
        int i11=0;
        int i12=23602;
        int i13=-21;
        int[] iArr1 =new int[N];
        long l2=93L;
        long[] lArr =new long[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr, 6L);
        FuzzerUtils.init(iArr1, -8);
        FuzzerUtils.init(fArr, -81.988F);

        for (i2 = 243; i2 > 7; --i2) {
            i4 = 1;
            while ((i4 += 3) < 7) {
                l2 = i3;
                i3 = (-iMeth1(i3, Test0212.instanceCount, 15.25097));
                i3 += i4;
                Test0212.instanceCount <<= i4;
            }
            lArr[i2] += (long)f1;
            i3 -= i4;
            iArr1[i2 + 1] *= i3;
            i11 = 1;
            do {
                i3 += i11;
                fArr[i2 - 1] += -63208;
            } while (++i11 < 7);
            for (i12 = i2; i12 < 7; i12++) {
                i13 = i11;
                i13 -= -7;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + Double.doubleToLongBits(d) + i2 + i3 + i4
            + l2 + i11 + i12 + i13 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l) {

        long l1=3430293797L;
        int i1=-30;
        int i14=-11;
        int i15=4;
        int i16=-30;
        int i17=86;
        int[] iArr2 =new int[N];
        short s1=-577;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 46.59980);
        FuzzerUtils.init(iArr2, 5);

        for (l1 = 243; l1 > 13; l1--) {
            float f=1.218F;
            Test0212.byFld -= (byte) ((-(f - i1)) * Math.abs(i1--));
            i1 = iMeth(-1.467F, f, Test0212.dFld);
            for (i14 = 7; i14 > 1; i14--) {
                dArr[(int) (l1 - 1)] += Test0212.instanceCount;
                if (Test0212.bFld) continue;
                i15 *= i14;
                iArr2[i14] = i1;
                if (Test0212.bFld) {
                    i16 = 2;
                    while (--i16 > 0) {
                        try {
                            i15 = (i16 / iArr2[i14 + 1]);
                            i17 = (iArr2[i14 - 1] % i1);
                            i15 = (i14 % i1);
                        } catch (ArithmeticException a_e) {}
                        Test0212.dArrFld[i16] += 111.62910;
                        i15 <<= s1;
                        i15 -= i14;
                        l += (i16 + f);
                    }
                } else if (Test0212.bFld) {
                    i17 = i15;
                } else if (false) {
                    i1 = (int) Test0212.instanceCount;
                } else {
                    if (Test0212.bFld) continue;
                }
            }
        }
        vMeth_check_sum += l + l1 + i1 + i14 + i15 + i16 + i17 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-30, i18=-199, i19=-43331, i20=-961, i21=-8;
        short s2=-31300;
        float f4=-97.395F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 2019L);

        i = 1;
        do {
            vMeth(Test0212.instanceCount);
            for (i18 = 1; i18 < 178; ++i18) {
                Test0212.instanceCount = i19;
                i19 += i18;
                for (i20 = 2; i20 > 1; i20--) {
                    i21 >>= (int) Test0212.instanceCount;
                    switch ((i % 2) + 58) {
                    case 58:
                        i21 += (((i20 * Test0212.instanceCount) + s2) - f4);
                        lArrFld[i18 - 1] = -8;
                        break;
                    case 59:
                        Test0212.iArrFld[i18 - 1] -= (int) Test0212.instanceCount;
                        i21 += 11;
                        i21 += i21;
                        break;
                    default:
                        i21 = i;
                        i21 = i20;
                        switch ((i % 2) + 37) {
                        case 37:
                            if (false) break;
                            f4 -= 9;
                            f4 += (i20 * i18);
                            break;
                        case 38:
                            f4 = i20;
                            break;
                        default:
                            i21 = 27203;
                            switch (((i20 % 6) * 5) + 20) {
                            case 38:
                                i19 >>>= i20;
                                i19 = i;
                                i21 = (int) Test0212.instanceCount;
                            case 34:
                                i21 *= i;
                                if (Test0212.bFld) continue;
                                i19 >>= i19;
                                lArr1[i - 1] = i21;
                                break;
                            case 40:
                                i21 -= i19;
                                break;
                            case 31:
                                s2 = (short)i21;
                                break;
                            case 46:
                                Test0212.instanceCount = (long) 1.544F;
                                break;
                            case 39:
                                if (Test0212.bFld) continue;
                                break;
                            }
                        }
                    }
                }
            }
        } while (++i < 141);

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 s2 = " + i20 + "," + i21 + "," + s2);
        FuzzerUtils.out.println("f4 lArr1 = " + Float.floatToIntBits(f4) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0212.instanceCount Test0212.byFld Test0212.bFld = " + Test0212.instanceCount + "," + Test0212.byFld +
                "," + (Test0212.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0212.dFld Test0212.dArrFld lArrFld = " + Double.doubleToLongBits(Test0212.dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0212.dArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test0212.iArrFld = " + FuzzerUtils.checkSum(Test0212.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0212 _instance = new Test0212();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
