// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0496 {

    public static final int N = 400;

    public static long instanceCount=-3029699532L;
    public static volatile double dFld=24.96236;
    public static byte byFld=41;
    public static volatile int iFld=-49;
    public static boolean bFld=true;
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0496.dArrFld, 2.98619);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i2=-8;
        int i3=63930;
        int i4=11;
        int i5=58649;
        int i6=6;
        int i7=-45428;
        int i8=87;
        int[] iArr =new int[N];
        boolean b=false;
        boolean[] bArr =new boolean[N];
        float f2=0.53F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr, 12L);
        FuzzerUtils.init(fArr, -96.430F);
        FuzzerUtils.init(iArr, 6);

        switch (((i2 >>> 1) % 9) + 20) {
        case 20:
            for (i3 = 20; i3 < 366; i3++) {
                for (i5 = i3; i5 < 5; ++i5) {
                    for (i7 = 1; i7 < 1; ++i7) {
                        Test0496.instanceCount -= Test0496.instanceCount;
                        i4 >>>= (int) Test0496.instanceCount;
                        bArr[i5 - 1] = b;
                        i8 += (int) Test0496.instanceCount;
                        if (b) break;
                        if (false) {
                            Test0496.dFld = Test0496.byFld;
                        }
                        lArr[i7 - 1] <<= i7;
                        i2 += (((i7 * i3) + f2) - i3);
                    }
                    Test0496.instanceCount = i6;
                    fArr[i3 - 1] += f2;
                }
            }
            break;
        case 21:
            i6 = (int) Test0496.instanceCount;
            break;
        case 22:
            i2 = i8;
            break;
        case 23:
            i8 -= i3;
        case 24:
            iArr[(i8 >>> 1) % N] = (int)f2;
            break;
        case 25:
        case 26:
            i4 = i2;
            break;
        case 27:
            Test0496.dArrFld[(i2 >>> 1) % N] += -18700;
            break;
        case 28:
            lArr[(i5 >>> 1) % N] >>= i8;
            break;
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(float f1, long l, int i1) {

        float f4=35.353F;
        int i10=30086;
        int i11=191;
        int i12=-8;
        int i13=-44510;
        int[][] iArr1 =new int[N][N];
        long l1=-7069368366747775236L;
        short s=22085;

        FuzzerUtils.init(iArr1, 8);

        vMeth();
        l ^= i1;
        i1 = i1;
        for (f4 = 4; f4 < 143; f4++) {
            switch (((i10 >>> 1) % 2) + 96) {
            case 96:
                for (l1 = 11; l1 > 1; l1--) {
                    Test0496.dFld *= 45355L;
                    for (i12 = 1; 2 > i12; i12++) {
                        Test0496.dFld += -3692153982L;
                        l = i1;
                        i1 = (int)l;
                        i1 >>= i13;
                        iArr1 = iArr1;
                        iArr1[(int)(f4)] = iArr1[(int)(l1)];
                        s -= (short)i13;
                    }
                }
                break;
            case 97:
                i1 += (-20195 + (f4 * f4));
                break;
            default:
                f1 -= s;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i1 + Float.floatToIntBits(f4) + i10 + l1 + i11 + i12 + i13 + s +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(int i) {

        float f=1.311F;

        i >>= (int) (Test0496.instanceCount - (-(i + i)));
        f *= (iMeth(f, Test0496.instanceCount, i) - 20017);
        vSmallMeth_check_sum += i + Float.floatToIntBits(f);
    }

    public void mainTest(String[] strArr1) {

        short s1=23801;
        int i14=11;
        int i15=-55;
        int i16=9;
        int i17=21590;
        int i18=40936;
        int i19=-1720;
        int[] iArr2 =new int[N];
        float f5=37.461F, f6=-2.984F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr2, -2);
        FuzzerUtils.init(lArr1, 480159593L);

        for (int smallinvoc=0; smallinvoc<222; smallinvoc++) vSmallMeth(-41313);
        Test0496.byFld += (byte) s1;
        Test0496.instanceCount >>= Test0496.iFld;
        for (i14 = 1; i14 < 204; ++i14) {
            iArr2 = iArr2;
        }
        i15 = Test0496.iFld;
        i15 += i14;
        Test0496.iFld ^= (int) Test0496.instanceCount;
        i16 = 1;
        while (++i16 < 153) {
            Test0496.iFld = i15;
            if (Test0496.bFld) break;
            for (i17 = 7; 164 > i17; ++i17) {
                i15 *= -2;
                for (f5 = 1; f5 < 2; ++f5) {
                    f6 -= Test0496.instanceCount;
                    Test0496.dFld -= Test0496.instanceCount;
                    i15 -= (int) Test0496.instanceCount;
                    i18 <<= 5;
                    iArr2[i16 + 1] += (int)-7L;
                    Test0496.dFld += Test0496.dFld;
                    lArr1[i17] += i19;
                    Test0496.byFld += (byte) Test0496.instanceCount;
                    Test0496.byFld += (byte) (((f5 * Test0496.instanceCount) + Test0496.instanceCount) - i15);
                    if (Test0496.bFld) continue;
                }
                Test0496.instanceCount = -11L;
                switch ((i17 % 8) + 90) {
                case 90:
                    i15 += 7;
                    break;
                case 91:
                    if (Test0496.bFld) continue;
                    Test0496.instanceCount += 5;
                case 92:
                    iArr2[i16 - 1] <<= (int)4L;
                    break;
                case 93:
                    i18 += i17;
                    break;
                case 94:
                    i18 += i17;
                case 95:
                    f6 += (((i17 * f5) + i14) - i16);
                    break;
                case 96:
                    i19 += i17;
                    break;
                case 97:
                    Test0496.dFld = f6;
                    break;
                default:
                    if (Test0496.bFld) break;
                }
            }
        }

        FuzzerUtils.out.println("s1 i14 i15 = " + s1 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("f5 i19 f6 = " + Float.floatToIntBits(f5) + "," + i19 + "," + Float.floatToIntBits(f6));
        FuzzerUtils.out.println("iArr2 lArr1 = " + FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0496.instanceCount Test0496.dFld Test0496.byFld = " + Test0496.instanceCount + "," +
                Double.doubleToLongBits(Test0496.dFld) + "," + Test0496.byFld);
        FuzzerUtils.out.println("Test0496.iFld Test0496.bFld Test0496.dArrFld = " + Test0496.iFld + "," + (Test0496.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0496.dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0496 _instance = new Test0496();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
