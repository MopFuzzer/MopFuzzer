// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0960 {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public static int iFld=64342;
    public boolean bFld=false;
    public static boolean[] bArrFld =new boolean[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0960.bArrFld, true);
        FuzzerUtils.init(Test0960.iArrFld, 10256);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i2=-4, i3=247, i4=-4722, i5=-12, i6=-6, i7=-35, i8=-26398;
        double d=-73.123464, d1=127.118768;
        float f=0.767F;
        boolean b1=true;

        for (i2 = 9; i2 < 237; i2++) {
            Test0960.instanceCount += (i2 * Test0960.iFld);
        }
        i4 = 1;
        do {
            d *= -171;
            for (i5 = 1; i5 < 6; i5++) {
                Test0960.iFld += Test0960.iFld;
                d1 -= i2;
                i3 %= (int) (Test0960.iFld | 1);
                Test0960.instanceCount = Test0960.iFld;
                for (i7 = i5; 2 > i7; i7++) {
                    f += (((i7 * i7) + Test0960.iFld) - Test0960.iFld);
                    Test0960.iArrFld[i7] >>= (int) Test0960.instanceCount;
                }
                if (b1) break;
                f *= i6;
                i6 += (((i5 * i4) + Test0960.iFld) - i7);
            }
        } while (++i4 < 270);
        long meth_res = i2 + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 +
            Float.floatToIntBits(f) + (b1 ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i9=-10, i10=214, i11=-1166, i12=-9;
        float f1=1.468F;
        short s=-28;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 5L);

        for (int i1 : Test0960.iArrFld) {
            switch (((((int) (-(Test0960.instanceCount + Test0960.instanceCount))) >>> 1) % 2) + 77) {
            case 77:
                Test0960.iFld <<= ((--Test0960.iFld) - iMeth1());
                for (i9 = 4; i9 > 1; i9 -= 2) {
                    i1 = (int)249L;
                    for (i11 = 1; i11 < 4; ++i11) {
                        Test0960.iArrFld[i11] -= (int) Test0960.instanceCount;
                        i12 %= (int)(i10 | 1);
                        Test0960.iArrFld[(i10 >>> 1) % N] >>>= i10;
                        f1 -= -171;
                        lArr[i11 + 1][i11 - 1] = i9;
                        Test0960.instanceCount *= 13;
                    }
                    Test0960.iFld *= Test0960.iFld;
                    i10 += -51;
                    Test0960.instanceCount = s;
                }
            case 78:
            default:
                Test0960.iFld *= (int) Test0960.instanceCount;
            }
        }
        vMeth_check_sum += i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + s + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i) {

        boolean b=false;
        int i13=27285, i14=51901, i15=62949, i16=-73, i17=119, i18=38288;
        float f2=-1.609F;
        double d2=17.70390;
        short s1=7096;
        byte by1=108;

        Test0960.iFld += Test0960.iFld;
        try {
            b = (Test0960.bArrFld[(i >>> 1) % N] = ((9964 - (i + i)) > (Test0960.iFld * Test0960.iFld)));
            vMeth();
            for (i13 = 11; i13 < 260; i13++) {
                byte by=-27;
                Test0960.iFld = i;
                switch (((65 >>> 1) % 2) + 66) {
                case 66:
                    i15 = 7;
                    while (--i15 > 0) {
                        f2 += (((i15 * i15) + i16) - i13);
                        for (d2 = 1; d2 > 1; d2 -= 2) {
                            i18 = i16;
                            Test0960.iFld += (int) d2;
                            i17 = s1;
                            i += (int)(d2 + i);
                            i17 += (int)d2;
                        }
                    }
                    break;
                case 67:
                default:
                    by >>= (byte)17L;
                }
            }
        }
        catch (UserDefinedExceptionTest exc2) {
            Test0960.iFld += (int) Test0960.instanceCount;
        }
        catch (ArithmeticException exc3) {
            Test0960.instanceCount = by1;
        }
        long meth_res = i + (b ? 1 : 0) + i13 + i14 + i15 + Float.floatToIntBits(f2) + i16 +
            Double.doubleToLongBits(d2) + i17 + i18 + s1 + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d3=-81.26698, d4=0.128747;
        int i19=-78, i20=130, i21=12580, i22=10, i23=6;
        byte by2=-102;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 4282883441L);

        Test0960.iFld = iMeth(Test0960.iFld);
        Test0960.instanceCount >>>= Test0960.instanceCount;
        Test0960.iFld -= (int) Test0960.instanceCount;
        for (d3 = 17; d3 < 312; ++d3) {
            for (i20 = 85; 3 < i20; i20 -= 3) {
                for (i22 = (int)(d3); 4 > i22; ++i22) {
                    Test0960.iFld %= (int) (i19 | 1);
                    if (bFld) {
                        Test0960.instanceCount *= i21;
                    } else {
                        d4 += i22;
                        i23 += -197;
                        i19 = i23;
                    }
                    i23 += (int)(-13145L + (i22 * i22));
                    i19 += Test0960.iFld;
                    i19 = i20;
                    switch ((i22 % 2) + 44) {
                    case 44:
                        lArr1[(int)(d3)] *= 4240993817L;
                        break;
                    case 45:
                        Test0960.iFld >>= (int) Test0960.instanceCount;
                        i19 = (int)d4;
                        Test0960.instanceCount += (((i22 * i19) + Test0960.iFld) - i22);
                        Test0960.iFld = by2;
                    default:
                        switch (((i19 >>> 1) % 3) + 13) {
                        case 13:
                            i21 -= i19;
                            i21 -= i21;
                            Test0960.iFld %= 38;
                            break;
                        case 14:
                            switch (((i19 >>> 1) % 2) + 34) {
                            case 34:
                                lArr1[(int) (d3)] = Test0960.instanceCount;
                                i21 = (int) Test0960.instanceCount;
                                Test0960.iArrFld[i22] *= i22;
                                break;
                            case 35:
                                i19 += i22;
                                break;
                            default:
                                i21 += i23;
                            }
                            break;
                        case 15:
                            Test0960.instanceCount = Test0960.instanceCount;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("d3 i19 i20 = " + Double.doubleToLongBits(d3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d4 by2 lArr1 = " + Double.doubleToLongBits(d4) + "," + by2 + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0960.instanceCount Test0960.iFld bFld = " + Test0960.instanceCount + "," + Test0960.iFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0960.bArrFld Test0960.iArrFld = " + FuzzerUtils.checkSum(Test0960.bArrFld) + "," +
                FuzzerUtils.checkSum(Test0960.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0960 _instance = new Test0960();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
