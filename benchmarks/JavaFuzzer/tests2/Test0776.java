// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:48 2023
public class Test0776 {

    public static final int N = 400;

    public static long instanceCount=-32447L;
    public static volatile double dFld=2.16842;
    public static byte byFld=32;
    public volatile boolean bFld=false;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static volatile boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0776.iArrFld, 7);
        FuzzerUtils.init(Test0776.lArrFld, 2122400836655008483L);
        FuzzerUtils.init(Test0776.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth1(long l, int i1) {


        i1 *= ((Test0776.iArrFld[(80 >>> 1) % N]++) * i1);
        vMeth1_check_sum += l + i1;
    }

    public static int iMeth1(int i5, float f, int i6) {

        int i7=-55209, i8=12, i9=3;
        byte by=-36;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);

        i7 = 1;
        while (++i7 < 121) {
            by += (byte)(478797677L + (i7 * i7));
            i6 *= -21482;
            for (i8 = 1; i8 < 13; i8++) {
                i9 += (i8 + i8);
                i5 >>= by;
                Test0776.instanceCount -= (long) Test0776.dFld;
                if (false) break;
                i5 += (i8 | i6);
                i5 *= (int) Test0776.instanceCount;
                if (i8 != 0) {
                }
                i6 = i8;
                bArr[i8 + 1] = true;
            }
        }
        Test0776.iArrFld[(i5 >>> 1) % N] -= (int) f;
        i5 += -1;
        long meth_res = i5 + Float.floatToIntBits(f) + i6 + i7 + by + i8 + i9 + FuzzerUtils.checkSum(bArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i2) {

        int i3=-2203, i4=183, i10=-7206;
        double d=12.39049, d1=-2.56600;
        float f1=0.604F;
        long l1=-924779027L;
        boolean b=true;
        byte by1=92;

        for (i3 = 5; i3 < 193; ++i3) {
            d *= (i2--);
            Test0776.lArrFld = (Test0776.lArrFld = Test0776.lArrFld);
            i4 += (i3 * i3);
            d = (-(iMeth1(-6, f1, i4) - f1));
            i2 += (17960 + (i3 * i3));
            i4 = i2;
            if (b) {
                i2 = (int) Test0776.instanceCount;
                for (l1 = 1; l1 < 8; ++l1) {
                    Test0776.dFld += i4;
                    d1 = 1;
                    while (++d1 < 2) {
                        i4 *= (int) Test0776.dFld;
                        b = true;
                        by1 = (byte)i3;
                    }
                }
            }
        }
        long meth_res = i2 + i3 + i4 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + l1 + i10 +
            Double.doubleToLongBits(d1) + (b ? 1 : 0) + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i11=246, i12=-19715, i13=78, i15=-158, i16=112;
        boolean b1=false;
        float f2=0.292F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -1.477F);

        vMeth1(Math.min(Test0776.instanceCount, Long.reverseBytes(15478L)), (iMeth(i11) + i11) - i11);
        i12 = 146;
        while ((i12 -= 3) > 0) {
            i11 += (i12 ^ i12);
            i13 += i12;
        }
        for (int i14 : Test0776.iArrFld) {
            for (i15 = 1; i15 < 4; i15++) {
                Test0776.bArrFld[i15] = b1;
                f2 = i16;
                Test0776.lArrFld[i15 - 1] = Test0776.byFld;
                f2 -= -32;
                fArr[i15 + 1] -= i14;
                i16 = (int) Test0776.instanceCount;
                i14 += i15;
            }
        }
        fArr[(i11 >>> 1) % N] = 37211;
        Test0776.instanceCount -= i11;
        vMeth_check_sum += i11 + i12 + i13 + i15 + i16 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=11, i17=65294, i18=-16588, i19=49, i20=-30, i21=52834, i22=61156;
        long l2=-119630661L;
        long[] lArr =new long[N];
        float f3=1.947F, f4=-80.391F;
        short s=13567;

        FuzzerUtils.init(lArr, 221L);

        Test0776.instanceCount = (Math.abs(lArr[(i >>> 1) % N]) + Test0776.instanceCount);
        vMeth();
        for (i17 = 13; i17 < 370; ++i17) {
            for (i19 = 3; i19 < 71; i19 += 2) {
                i -= i19;
                i18 += (i19 - Test0776.instanceCount);
                l2 = 1;
                do {
                    Test0776.instanceCount *= (long) f3;
                    if (false) continue;
                    if (bFld) continue;
                    i /= (int)(i18 | 1);
                    i -= i20;
                    i20 &= -13;
                    Test0776.iArrFld[i17 - 1] <<= i18;
                    try {
                        i21 = (224 / i);
                        i18 = (i19 % i18);
                        i = (1000683610 / i17);
                    } catch (ArithmeticException a_e) {}
                    Test0776.instanceCount = i21;
                    i18 -= s;
                } while (++l2 < 3);
                switch (((i19 % 6) * 5) + 94) {
                case 103:
                    i *= i20;
                    break;
                case 96:
                    switch (((i17 % 2) * 5) + 8) {
                    case 12:
                        i21 <<= 42079;
                        break;
                    case 13:
                        i20 = -3399;
                        Test0776.instanceCount += i;
                        for (f4 = 3; f4 > 1; f4--) {
                            switch ((((i20 >>> 1) % 1) * 5) + 115) {
                            case 117:
                                i18 += i22;
                                bFld = bFld;
                            default:
                                Test0776.iArrFld[i19] += i19;
                                i += -248;
                                i += i19;
                            }
                        }
                    }
                    break;
                case 121:
                    i18 += 107;
                    break;
                case 98:
                    i18 += (int)-16482695210429119L;
                    break;
                case 113:
                    f3 += (5 + (i19 * i19));
                case 123:
                    i21 += (0 + (i19 * i19));
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 l2 = " + i19 + "," + i20 + "," + l2);
        FuzzerUtils.out.println("f3 i21 s = " + Float.floatToIntBits(f3) + "," + i21 + "," + s);
        FuzzerUtils.out.println("f4 i22 lArr = " + Float.floatToIntBits(f4) + "," + i22 + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0776.instanceCount Test0776.dFld Test0776.byFld = " + Test0776.instanceCount + "," +
                Double.doubleToLongBits(Test0776.dFld) + "," + Test0776.byFld);
        FuzzerUtils.out.println("bFld Test0776.iArrFld Test0776.lArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0776.iArrFld) + "," + FuzzerUtils.checkSum(Test0776.lArrFld));
        FuzzerUtils.out.println("Test0776.bArrFld = " + FuzzerUtils.checkSum(Test0776.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0776 _instance = new Test0776();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
