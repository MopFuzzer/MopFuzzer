// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0354 {

    public static final int N = 400;

    public static long instanceCount=-4084008277L;
    public static byte byFld=43;
    public static float fFld=1.43F;
    public static int iFld=-9;
    public static double dFld=2.48904;
    public boolean bFld=false;
    public static long lFld=38915L;
    public static volatile double[][] dArrFld =new double[N][N];
    public static float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0354.dArrFld, -2.88851);
        FuzzerUtils.init(Test0354.fArrFld, -109.2F);
        FuzzerUtils.init(Test0354.iArrFld, -12);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i9=-16;
        int i10=-244;
        int i11=-57113;
        int i12=4;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -60069);

        i9 = i9;
        i9 *= i10;
        Test0354.dArrFld[(i10 >>> 1) % N][(i9 >>> 1) % N] -= 2974;
        for (i11 = 8; i11 < 288; ++i11) {
            i9 = (int) Test0354.instanceCount;
            iArr1[i11] /= (int)(i9 | 1);
            i10 -= i12;
            i9 += (i11 * i11);
            i10 -= i11;
            switch ((((i10 >>> 1) % 3) * 5) + 22) {
            case 33:
                i9 += (i11 ^ Test0354.instanceCount);
                Test0354.fArrFld[i11] -= -8;
                Test0354.instanceCount = i12;
            case 26:
                Test0354.instanceCount += (4701923094242855459L + (i11 * i11));
                break;
            case 23:
                i10 = (int) Test0354.instanceCount;
                break;
            default:
                i10 = -194;
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3) {

        double d=-75.77497;
        int i4=194, i5=48, i6=14, i7=-39516, i8=-7, i13=-10, i14=-14;

        d -= i3;
        for (i4 = 5; i4 < 132; ++i4) {
            for (i6 = 1; i6 < 12; i6++) {
                float f=-125.99F;
                i7 += (i6 * i6);
                i7 -= (int) ((long) ((--Test0354.instanceCount) * (f + i7)) >> -13);
                i8 = 1;
                while (++i8 < 2) {
                    Test0354.instanceCount += (i8 * i8);
                    Test0354.byFld ^= (byte) iMeth1();
                    f = i8;
                    Test0354.dArrFld[i4][i4] = i4;
                    i3 = (int)f;
                }
                for (i13 = 1; i13 < 2; i13 += 3) {
                    i3 = Test0354.byFld;
                    Test0354.byFld *= (byte) Test0354.instanceCount;
                    Test0354.dArrFld[i4][i6 + 1] *= i6;
                }
            }
        }
        vMeth_check_sum += i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + i13 + i14;
    }

    public static int iMeth() {

        int i1=-102;
        int i2=18836;
        int i15=-22485;
        int i16=52551;
        int i17=11;
        int i18=-36711;
        int[][] iArr =new int[N][N];
        double d1=-64.49133;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -106);
        FuzzerUtils.init(lArr, -3L);

        for (i1 = 3; i1 < 139; i1++) {
            if (i1 != iArr[i1 - 1][i1 + 1]) continue;
            vMeth(i2);
            for (i15 = 12; i15 > 1; i15--) {
                i2 >>= 10;
                d1 -= Test0354.byFld;
                Test0354.fFld = -3177122658669559442L;
                for (i17 = 1; i17 < 2; ++i17) {
                    Test0354.instanceCount -= i18;
                    lArr[i17 + 1] += i16;
                    lArr[i17 - 1] *= i15;
                    i16 += (i17 + i16);
                }
                i18 -= (int) Test0354.fFld;
                Test0354.instanceCount >>= Test0354.iFld;
                iArr[i1 + 1][(-172 >>> 1) % N] = (int) Test0354.fFld;
            }
        }
        long meth_res = i1 + i2 + i15 + i16 + Double.doubleToLongBits(d1) + i17 + i18 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=9;
        int i19=-42951;
        int i20=5;
        int i21=1;
        int i22=-159;
        int i23=11;
        int[] iArr2 =new int[N];
        short s=-22572;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr2, 151);
        FuzzerUtils.init(lArr1, 193L);

        i ^= iMeth();
        for (i19 = 283; 13 < i19; i19 -= 3) {
            iArr2[i19 + 1] -= -52167;
        }
        i21 = 1;
        while (++i21 < 363) {
            Test0354.dFld = Test0354.iFld;
            Test0354.instanceCount *= Test0354.instanceCount;
            Test0354.fFld += i21;
            Test0354.dFld = i20;
            i20 -= i;
            iArr2[i21] >>>= (int) Test0354.instanceCount;
            i20 -= (int) Test0354.fFld;
            lArr1[i21 + 1] = i20;
            for (i22 = 2; 69 > i22; i22++) {
                Test0354.dFld += Test0354.iFld;
                iArr2[i21 - 1] = (int) Test0354.instanceCount;
                Test0354.instanceCount += (i22 ^ i21);
                if (bFld) continue;
                Test0354.dFld += Test0354.fFld;
                Test0354.fFld *= Test0354.lFld;
                switch ((((i21 >>> 1) % 2) * 5) + 42) {
                case 51:
                    try {
                        i = (i22 % iArr2[i21 + 1]);
                        i = (183 / i22);
                        Test0354.iArrFld[i21] = (Test0354.iArrFld[i22 - 1] % 725);
                    } catch (ArithmeticException a_e) {}
                    Test0354.fFld = Test0354.byFld;
                    break;
                case 44:
                    i23 >>= s;
                    i20 -= -234;
                default:
                    Test0354.instanceCount -= (long) Test0354.dFld;
                    Test0354.byFld -= (byte) Test0354.lFld;
                    switch ((i21 % 1) + 13) {
                    case 13:
                        Test0354.lFld += 53;
                        Test0354.iFld >>= (int) Test0354.instanceCount;
                        break;
                    }
                    i += i22;
                }
            }
        }

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("s iArr2 lArr1 = " + s + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0354.instanceCount Test0354.byFld Test0354.fFld = " + Test0354.instanceCount + "," + Test0354.byFld +
                "," + Float.floatToIntBits(Test0354.fFld));
        FuzzerUtils.out.println("Test0354.iFld Test0354.dFld bFld = " + Test0354.iFld + "," + Double.doubleToLongBits(Test0354.dFld) +
            "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0354.lFld Test0354.dArrFld Test0354.fArrFld = " + Test0354.lFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0354.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0354.fArrFld)));
        FuzzerUtils.out.println("Test0354.iArrFld = " + FuzzerUtils.checkSum(Test0354.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0354 _instance = new Test0354();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
