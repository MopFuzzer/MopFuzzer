// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0508 {

    public static final int N = 400;

    public static long instanceCount=2438509796L;
    public static byte byFld=-116;
    public static boolean bFld=false;
    public static short sFld=7502;
    public static int iFld=51;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0508.iArrFld, 18350);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth(double d) {

        byte by=-58;

        by = (byte)43.197F;
        vMeth_check_sum += Double.doubleToLongBits(d) + by;
    }

    public static void vMeth1() {

        int i10=10, i11=-9353, i12=-208, i13=112, i14=51596, i15=10291, i16=-31486;
        float f1=-2.907F, f2=0.316F;

        Test0508.instanceCount = Test0508.instanceCount;
        i10 += i10;
        for (i11 = 18; i11 < 371; i11++) {
            f1 -= 21570;
            i10 += i11;
        }
        i13 = 1;
        do {
            i10 <<= (int) Test0508.instanceCount;
            Test0508.instanceCount -= Test0508.instanceCount;
            i10 = (int) Test0508.instanceCount;
            for (f2 = 1; f2 < 5; ++f2) {
                Test0508.iArrFld[i13 + 1] *= (int) Test0508.instanceCount;
                for (i15 = 1; i15 < 2; ++i15) {
                    Test0508.instanceCount = 13388;
                    Test0508.instanceCount += i15;
                    i14 >>= i15;
                }
            }
        } while (++i13 < 310);
        vMeth1_check_sum += i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + Float.floatToIntBits(f2) + i14 + i15 +
            i16;
    }

    public static int iMeth1(int i4, int i5, double d2) {

        int i6=-219, i7=-13, i8=88, i9=-5;
        float f3=-30.834F;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, -1.865F);

        for (i6 = 4; i6 < 125; ++i6) {
            switch (((i6 % 6) * 5) + 49) {
            case 52:
            case 66:
                i7 -= (int) (--Test0508.instanceCount);
                i4 += i6;
                for (i8 = i6; i8 < 13; i8++) {
                    fArr1[i8 - 1] = (i6 + -30.101F);
                    i4 *= (int)(--d2);
                    i4 *= (int)fArr1[i6 - 1];
                    Test0508.byFld += (byte) (i8 - Test0508.instanceCount);
                    d2 = ((i7 - i7) + d2);
                    vMeth1();
                    Test0508.iArrFld[i8 - 1] ^= (int) Test0508.instanceCount;
                    Test0508.bFld = Test0508.bFld;
                    i4 += i9;
                    if (Test0508.bFld) break;
                }
                break;
            case 51:
                f3 = Test0508.instanceCount;
                break;
            case 60:
                i9 += -15991;
            case 59:
                Test0508.instanceCount = Test0508.instanceCount;
                break;
            case 61:
                i4 += (i6 + Test0508.instanceCount);
            }
        }
        long meth_res = i4 + i5 + Double.doubleToLongBits(d2) + i6 + i7 + i8 + i9 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i=-29402;
        int i1=-12;
        int i2=32639;
        int i3=6;
        int[] iArr1 =new int[N];
        short s=15487;
        float f=0.849F;
        float[] fArr =new float[N];
        double d3=2.27699;

        FuzzerUtils.init(iArr1, -8);
        FuzzerUtils.init(fArr, 0.765F);

        for (i = 316; i > 17; i -= 2) {
            for (i2 = 1; i2 < 11; ++i2) {
                try {
                    iArr1[i2] = (i % -63868592);
                    i3 = (iArr1[i2 - 1] % 63036);
                    i1 = (-200593831 % i2);
                } catch (ArithmeticException a_e) {}
                iArr1[i - 1] = ((-228 * (i3 + i2)) * (i1--));
                s = (short) (((f++) + fArr[i2 + 1]) * ((-(-27755 - (Test0508.byFld + Test0508.instanceCount))) + (++iArr1[i2 -
                    1])));
                vMeth(((++Test0508.instanceCount) + (-36L + iMeth1(8, i, d3))) * i2);
                if (false) break;
                i3 *= i1;
                i1 &= i3;
                Test0508.bFld = Test0508.bFld;
                i1 %= (int) (Test0508.instanceCount | 1);
            }
            f += Test0508.instanceCount;
        }
        i3 *= -159;
        i1 -= i3;
        i1 = -37635;
        long meth_res = i + i1 + i2 + i3 + s + Float.floatToIntBits(f) + Double.doubleToLongBits(d3) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d1=-41.114586;
        int i17=-15221;
        int i18=10;
        int i19=0;
        int i20=-43636;
        int i21=-41944;
        int i22=-76;
        int i23=6;
        int i24=-197;
        int[] iArr =new int[N];
        long[] lArr =new long[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, -240);
        FuzzerUtils.init(lArr, -19L);
        FuzzerUtils.init(byArr, (byte)-68);

        vMeth(--d1);
        iArr[(198 >>> 1) % N] += iMeth();
        i17 = Test0508.sFld;
        i18 = 284;
        while ((i18 -= 2) > 0) {
            for (i19 = 177; i19 > i18; i19 -= 3) {
                try {
                    i17 = (i20 % i17);
                    i20 = (-220 / Test0508.iArrFld[i18]);
                    iArr[i19 + 1] = (i19 % 91);
                } catch (ArithmeticException a_e) {}
                Test0508.instanceCount += (((i19 * Test0508.instanceCount) + i21) - i18);
                lArr[i18 + 1] += i17;
                Test0508.iArrFld[i18 + 1] = i20;
                i22 = 1;
                do {
                    Test0508.instanceCount = Test0508.byFld;
                    byArr[i18] = (byte)i22;
                } while (++i22 < 1);
            }
            Test0508.bFld = Test0508.bFld;
            i20 = i18;
            iArr = iArr;
            i20 |= Test0508.sFld;
            Test0508.iFld += -4250;
            if (Test0508.bFld) {
                if (false) break;
            }
            i23 = 1;
            do {
                Test0508.instanceCount *= i22;
            } while (++i23 < 177);
            i17 = 7;
            i20 -= i18;
        }
        i24 = 1;
        while (++i24 < 169) {
            Test0508.iFld -= -183;
            Test0508.instanceCount *= (long) d1;
            i17 += (i24 * i24);
            if (Test0508.bFld) continue;
            Test0508.instanceCount = i20;
            Test0508.iFld -= (int) 830043751L;
        }

        FuzzerUtils.out.println("d1 i17 i18 = " + Double.doubleToLongBits(d1) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("iArr lArr byArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr) +
            "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0508.instanceCount Test0508.byFld Test0508.bFld = " + Test0508.instanceCount + "," + Test0508.byFld +
                "," + (Test0508.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0508.sFld Test0508.iFld Test0508.iArrFld = " + Test0508.sFld + "," + Test0508.iFld + "," +
                FuzzerUtils.checkSum(Test0508.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0508 _instance = new Test0508();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
