// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0153 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static boolean bFld=false;
    public static float fFld=-15.952F;
    public static int iFld=12;
    public short sFld=-10220;
    public static volatile long[] lArrFld =new long[N];
    public static volatile int[] iArrFld =new int[N];
    public volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0153.lArrFld, -11L);
        FuzzerUtils.init(Test0153.iArrFld, -12);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=3, i4=-19788, i5=232, i6=-1856, i7=-37463, i8=-62850, i9=12, i10=-43316, i11=-12;
        float f1=-1.845F;
        float f2=-1.379F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 1.14F);

        for (i3 = 19; i3 < 332; i3++) {
            i4 -= i3;
            if (Test0153.bFld) continue;
        }
        for (f1 = 229; f1 > 1; f1 -= 3) {
            fArr[(int)(f1)] += i3;
            switch ((int)(((f1 % 1) * 5) + 38)) {
            case 40:
                for (i6 = 1; 20 > i6; ++i6) {
                    Test0153.instanceCount += (i6 * i6);
                    i5 -= (int) Test0153.instanceCount;
                }
                for (i8 = 20; 1 < i8; --i8) {
                    i9 += -1577;
                }
                i7 -= i9;
                break;
            default:
                for (i10 = 1; i10 < 20; ++i10) {
                    Test0153.lArrFld[(int) (f1)] -= i5;
                    f2 += Test0153.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + i11 +
            Float.floatToIntBits(f2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static float fMeth(float f) {

        int i1=-199, i2=9, i12=-9658, i13=2532, i15=59, i16=-12286, i17=-32, i18=-7;
        double d=-1.42886;

        for (i1 = 16; 333 > i1; i1++) {
            Test0153.instanceCount += (((i1 * i1) + Test0153.instanceCount) - i2);
            if (i1 != 0) {
            }
        }
        vMeth1();
        for (i12 = 6; i12 < 254; ++i12) {
            if (Test0153.bFld) break;
            f = i12;
        }
        for (d = 7; 260 > d; ++d) {
            i2 -= (int) Test0153.instanceCount;
            i16 = 1;
            do {
                if (Test0153.bFld) continue;
                i13 = (int)11L;
                for (i17 = 1; i17 > d; i17 -= 3) {
                    i18 -= i12;
                }
                i18 += (i16 | Test0153.instanceCount);
            } while (++i16 < 6);
        }
        long meth_res = Float.floatToIntBits(f) + i1 + i2 + i12 + i13 + Double.doubleToLongBits(d) + i15 + i16 + i17 +
            i18;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        byte by=-36;
        int i19=14473, i20=-11, i21=10;
        double d1=60.56459;
        float[][] fArr1 =new float[N][N];

        FuzzerUtils.init(fArr1, 0.318F);

        by *= (byte) fMeth(Test0153.fFld);
        Test0153.iArrFld[(i19 >>> 1) % N] = i19;
        Test0153.fFld = i19;
        fArr1[(i19 >>> 1) % N][(i19 >>> 1) % N] -= i19;
        d1 = 1;
        while (++d1 < 133) {
            i19 = (int) Test0153.instanceCount;
            if (Test0153.bFld) continue;
            for (i20 = 1; i20 < 12; i20++) {
                Test0153.iArrFld[i20] = i21;
                i21 *= (int) Test0153.instanceCount;
                i19 -= i21;
                Test0153.fFld *= i20;
                Test0153.fFld += i20;
                Test0153.instanceCount += (i20 * i19);
                i21 <<= by;
            }
        }
        vMeth_check_sum += by + i19 + Double.doubleToLongBits(d1) + i20 + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=12, i22=3, i23=-2, i24=2, i25=-14, i26=-250;
        byte by1=-72;

        i = 1;
        while (++i < 193) {
            vMeth();
            Test0153.iFld += Test0153.iFld;
            i22 = 1;
            while (++i22 < 130) {
                Test0153.iFld += (i22 * i22);
                sFld += (short)-5;
                Test0153.bFld = Test0153.bFld;
                switch ((i22 % 8) + 32) {
                case 32:
                    for (i23 = i22; i23 < 1; ++i23) {
                        dArrFld[i22 - 1] -= i24;
                        Test0153.iFld = i24;
                        i24 += (((i23 * i22) + Test0153.fFld) - Test0153.iFld);
                    }
                    for (i25 = 1; i25 < 1; ++i25) {
                        Test0153.fFld += ((long) i25 ^ (long) by1);
                        by1 -= (byte) Test0153.instanceCount;
                        Test0153.instanceCount -= i22;
                        Test0153.instanceCount += Test0153.iFld;
                        i24 <<= (int) Test0153.instanceCount;
                        i24 += (i25 ^ i);
                        Test0153.iFld += (i25 ^ (long) Test0153.fFld);
                        Test0153.iFld >>>= i24;
                        Test0153.fFld += (((i25 * i25) + i) - i23);
                        Test0153.instanceCount = i24;
                    }
                    Test0153.fFld = 4;
                    break;
                case 33:
                    Test0153.iFld = i25;
                    break;
                case 34:
                    Test0153.instanceCount -= (long) Test0153.fFld;
                    Test0153.fFld -= Test0153.fFld;
                    Test0153.instanceCount += i26;
                    break;
                case 35:
                    i26 -= (int) Test0153.instanceCount;
                    break;
                case 36:
                    Test0153.instanceCount = 0;
                    break;
                case 37:
                    Test0153.instanceCount ^= i26;
                    break;
                case 38:
                    Test0153.instanceCount <<= i24;
                    break;
                case 39:
                    i24 <<= (int)-6307429442913392973L;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i22 i23 = " + i + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("by1 = " + by1);

        FuzzerUtils.out.println("Test0153.instanceCount Test0153.bFld Test0153.fFld = " + Test0153.instanceCount + "," + (Test0153.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0153.fFld));
        FuzzerUtils.out.println("Test0153.iFld sFld Test0153.lArrFld = " + Test0153.iFld + "," + sFld + "," +
                FuzzerUtils.checkSum(Test0153.lArrFld));
        FuzzerUtils.out.println("Test0153.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test0153.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0153 _instance = new Test0153();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
