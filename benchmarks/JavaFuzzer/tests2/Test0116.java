// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0116 {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static float fFld=2.367F;
    public byte byFld=-55;
    public static int[] iArrFld =new int[N];
    public long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0116.iArrFld, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1) {

        int i7=-34664;
        int i8=5;
        int i9=98;
        int i10=12;
        int i11=-4068;
        int[] iArr =new int[N];
        float f2=75.350F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -16501);
        FuzzerUtils.init(lArr1, 10L);

        f1 %= -3;
        for (int i6 : iArr) {
            for (i7 = 1; i7 < 4; i7++) {
                i6 -= i7;
                i8 *= (int) Test0116.instanceCount;
                i6 = i7;
                i6 *= i8;
                i8 += (i7 * i7);
                Test0116.instanceCount += Test0116.instanceCount;
            }
            i8 += i7;
            i8 = i7;
            for (f2 = 1; f2 < 4; f2++) {
                for (i10 = 1; i10 < 2; i10++) {
                    lArr1 = lArr1;
                    lArr1[i10 + 1] -= i8;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + i7 + i8 + Float.floatToIntBits(f2) + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1(long l, int i3) {

        int i4=4, i5=53111, i12=17308, i13=10, i14=-72;
        double d1=13.127433;
        short s=18979;

        i3 *= (int)((++i3) - (++l));
        for (i4 = 253; i4 > 4; --i4) {
            i5 *= (int) ((i5 + (d1 - -6L)) - ((Test0116.instanceCount + i5) / 6012564898086816015L));
            i5 = (int) Test0116.fFld;
            try {
                i5 = (i5 % -1313656108);
                i5 = (i3 % 185);
                i5 = (i4 / -150);
            } catch (ArithmeticException a_e) {}
            vMeth2(-122.709F);
            i3 >>= (int) Test0116.instanceCount;
            Test0116.iArrFld[i4 + 1] += -155;
            i12 = 1;
            while (++i12 < 7) {
                i3 += (i12 * i4);
                for (i13 = 1; i13 < 1; ++i13) {
                    i5 = i13;
                    Test0116.iArrFld[i13] += s;
                    if (i5 != 0) {
                        vMeth1_check_sum += l + i3 + i4 + i5 + Double.doubleToLongBits(d1) + i12 + i13 + i14 + s;
                        return;
                    }
                    i5 *= s;
                }
            }
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + Double.doubleToLongBits(d1) + i12 + i13 + i14 + s;
    }

    public static void vMeth(boolean b, int i1, int i2) {

        double d=-1.32690;
        int i15=12810, i16=41, i17=4, i18=-86;
        short s1=28505;
        short[] sArr =new short[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 8L);
        FuzzerUtils.init(sArr, (short)-1449);

        d = ((lArr[(i2 >>> 1) % N]++) * i2);
        vMeth1(Test0116.instanceCount, i2);
        Test0116.instanceCount = i2;
        for (i15 = 13; 384 > i15; i15++) {
            Test0116.iArrFld[i15] -= i2;
            Test0116.iArrFld[i15] += -7480;
            for (i17 = 1; i17 < 5; i17++) {
                Test0116.instanceCount += i17;
                s1 = (short)i15;
                lArr[i15] = Test0116.instanceCount;
                Test0116.iArrFld[i17] = (int) Test0116.instanceCount;
                lArr[i17] += i1;
                i1 += (i17 ^ i1);
                i1 >>= i15;
            }
            i1 *= i16;
        }
        vMeth_check_sum += (b ? 1 : 0) + i1 + i2 + Double.doubleToLongBits(d) + i15 + i16 + i17 + i18 + s1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        float f=44.685F;
        int i=-14, i19=5, i20=-238, i21=-4, i22=-36353;

        f = 1;
        while (++f < 282) {
            short s3=-19925;
            Test0116.instanceCount += (long) (f + i);
            vMeth(false, i, 60286);
            byFld += (byte)f;
            switch ((int)((f % 1) + 89)) {
            case 89:
                i += (int)(f - i);
                Test0116.iArrFld[(int) (f)] = i;
                i19 = 1;
                while (++i19 < 89) {
                    Test0116.fFld -= i;
                    lArrFld[i19] = lArrFld[i19 + 1];
                    i += i19;
                    Test0116.iArrFld = Test0116.iArrFld;
                    i <<= -48;
                    try {
                        i = (i / i19);
                        i = (i % i19);
                        i = (-46040 % i19);
                    } catch (ArithmeticException a_e) {}
                    Test0116.fFld += (43 + (i19 * i19));
                    i -= i;
                    i >>= i;
                    i20 = 1;
                    while (++i20 < 1) {
                        i += (((i20 * i19) + i19) - i19);
                        try {
                            i = (1516712900 % i);
                            i = (i20 % i20);
                            i = (-16794 / i);
                        } catch (ArithmeticException a_e) {}
                        i += (i20 * i20);
                    }
                }
                break;
            default:
                i ^= i20;
                switch ((int)(((f % 6) * 5) + 96)) {
                case 124:
                    i += i19;
                    break;
                case 116:
                    i *= i;
                    i = i20;
                    i += i20;
                    for (i21 = 1; i21 < 89; ++i21) {
                        i *= i20;
                        Test0116.fFld += (i21 - i21);
                    }
                    break;
                case 97:
                    Test0116.iArrFld[(int) (f + 1)] -= s3;
                case 100:
                    byFld *= (byte)-8;
                    break;
                case 110:
                    i22 += (int)((long)f ^ i20);
                    break;
                case 126:
                    Test0116.instanceCount = 842065323709360339L;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("f i i19 = " + Float.floatToIntBits(f) + "," + i + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);

        FuzzerUtils.out.println("Test0116.instanceCount Test0116.fFld byFld = " + Test0116.instanceCount + "," +
                Float.floatToIntBits(Test0116.fFld) + "," + byFld);
        FuzzerUtils.out.println("Test0116.iArrFld lArrFld = " + FuzzerUtils.checkSum(Test0116.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0116 _instance = new Test0116();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
