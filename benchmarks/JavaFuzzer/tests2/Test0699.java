// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0699 {

    public static final int N = 400;

    public static long instanceCount=1937431503L;
    public static byte byFld=-94;
    public static double dFld=-2.110253;
    public static float fFld=44.985F;
    public static int iFld=14058;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f2) {

        int i12=-36443;
        int i13=-7;
        int i14=-4;
        int i15=132;
        int i16=-44625;
        int[] iArr1 =new int[N];
        boolean b1=true;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, 3);

        bArr[(i12 >>> 1) % N] = b1;
        for (i13 = 6; 278 > i13; ++i13) {
            i14 ^= i14;
            Test0699.instanceCount = (long) f2;
            if (false) {
                Test0699.instanceCount ^= i12;
                Test0699.instanceCount &= Test0699.instanceCount;
            } else {
                iArr1[i13 - 1] = i12;
                f2 *= i12;
                i14 -= i12;
                for (i15 = 1; i15 < 6; ++i15) {
                    i16 += (i15 ^ i12);
                    Test0699.byFld >>= (byte) 2508265150L;
                    iArr1[i15 - 1] *= (int) Test0699.dFld;
                    i16 = i15;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f2) + i12 + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i5, float f1) {

        int i6=231;
        int i7=-49815;
        int i8=105;
        int i9=-56723;
        int i10=-34748;
        int i11=50284;
        int[] iArr2 =new int[N];
        boolean b=true;
        double d=-34.99421;

        FuzzerUtils.init(iArr2, 134);

        for (i6 = 6; i6 < 331; i6++) {
            b = b;
            i5 >>>= i8;
            Test0699.instanceCount = (i7 - (Test0699.instanceCount--));
        }
        for (i9 = 4; i9 < 154; ++i9) {
            i5 = (--i7);
            for (d = 1; d < 11; d++) {
                Test0699.instanceCount -= iMeth(f1);
            }
        }
        Test0699.instanceCount = i11;
        i7 = i11;
        for (int i17 : iArr2) {
            i7 *= 19;
            if (b) continue;
        }
        vMeth1_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + (b ? 1 : 0) + i8 + i9 + i10 +
            Double.doubleToLongBits(d) + i11 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(long l, int i3, int i4) {

        short s=10151;
        int i18=-54876, i19=-17250, i20=6, i21=-10, i22=9;
        float f3=1.463F;
        boolean b2=true;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)59);

        vMeth1(i4, Test0699.fFld);
        Test0699.dFld *= Test0699.instanceCount;
        s = (short)i4;
        for (i18 = 11; i18 < 295; i18++) {
            for (i20 = 1; i20 < 6; i20 += 2) {
                for (f3 = 1; 3 > f3; ++f3) {
                    i19 += (int)(((f3 * f3) + i20) - l);
                    byArr[(int) (f3)] -= Test0699.byFld;
                    i22 = i21;
                    if (b2) break;
                    Test0699.dFld -= i4;
                    i3 -= i21;
                    Test0699.byFld += (byte) (((f3 * i19) + i21) - l);
                    i3 += i21;
                }
                i22 *= i21;
            }
        }
        vMeth_check_sum += l + i3 + i4 + s + i18 + i19 + i20 + i21 + Float.floatToIntBits(f3) + i22 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-186;
        int i1=216;
        int i2=227;
        int i23=72;
        int i24=34056;
        int i25=-6;
        int i26=-39542;
        int i27=-210;
        int i28=-198;
        int[][] iArr =new int[N][N];
        float f=1.328F, f4=-2.544F;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, -35018);
        FuzzerUtils.init(dArr, -2.67489);

        i += i;
        i1 = 1;
        do {
            i -= (int) (((iArr[i1 - 1][i1] += (int) Test0699.instanceCount) - (i * i)) + iArr[i1 + 1][i1 + 1]);
            for (f = 1; f < 175; ++f) {
                short s1=23380;
                vMeth(Test0699.instanceCount, i1, i2);
                Test0699.dFld += -9;
                for (f4 = 1; f4 < 2; f4++) {
                    i23 += (int)(f4 * f4);
                    dArr[(int)(f)] *= i23;
                }
                iArr[i1] = iArr[i1 + 1];
                Test0699.dFld = s1;
                i24 = 2;
                do {
                    Test0699.instanceCount = Test0699.instanceCount;
                    i -= (int)-5L;
                    i ^= i;
                    iArr[i24][i24] -= i1;
                    Test0699.fFld *= Test0699.instanceCount;
                    i <<= Test0699.iFld;
                } while (--i24 > 0);
            }
            i2 = i24;
        } while ((i1 += 2) < 286);
        iArr[(Test0699.iFld >>> 1) % N][(-22878 >>> 1) % N] = -53733;
        iArr[(i23 >>> 1) % N][(i >>> 1) % N] -= (int) Test0699.instanceCount;
        for (i25 = 192; i25 > 9; i25--) {
            i26 = (int)-2.427F;
            switch ((i25 % 1) + 7) {
            case 7:
                iArr[i25][i25 + 1] -= 208;
                for (i27 = 8; i27 < 137; i27++) {
                    i26 *= i2;
                    i28 = i2;
                    iArr[i25][i25 - 1] += i25;
                    iArr[i27 - 1] = FuzzerUtils.int1array(N, (int)51662);
                }
            default:
                Test0699.fFld *= i1;
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 f4 i23 = " + i2 + "," + Float.floatToIntBits(f4) + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0699.instanceCount Test0699.byFld Test0699.dFld = " + Test0699.instanceCount + "," + Test0699.byFld +
                "," + Double.doubleToLongBits(Test0699.dFld));
        FuzzerUtils.out.println("Test0699.fFld Test0699.iFld = " + Float.floatToIntBits(Test0699.fFld) + "," + Test0699.iFld);

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0699 _instance = new Test0699();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
