// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:59 2023
public class Test1000 {

    public static final int N = 400;

    public static long instanceCount=233L;
    public static boolean bFld=true;
    public static float fFld=0.115F;
    public static long lFld=-140L;
    public static short sFld=1645;
    public volatile int iFld=66;
    public double dFld=2.118998;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test1000.iArrFld, 33481);
        FuzzerUtils.init(Test1000.lArrFld, -12L);
        FuzzerUtils.init(Test1000.bArrFld, false);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, int i10, long l2) {

        int i11=-54406, i12=-39883, i13=-127, i14=3, i15=-13;
        byte by=-57;
        double d1=1.56587;

        Test1000.iArrFld[(2 >>> 1) % N] = (int) l2;
        i10 -= i10;
        for (i11 = 200; i11 > 7; --i11) {
            l2 += (((i11 * by) + i9) - i11);
            if (Test1000.bFld) {
                i13 = 1;
                while (++i13 < 8) {
                    i9 <<= i12;
                    switch (((i13 % 2) * 5) + 105) {
                    case 106:
                        if (true) break;
                        i9 += i9;
                        for (i14 = 1; i14 < 1; i14++) {
                            i9 += (int)l2;
                            i12 += (int)d1;
                            Test1000.fFld = i12;
                            i9 = i12;
                        }
                        break;
                    case 109:
                        i10 /= (int)(i11 | 1);
                        break;
                    default:
                        i15 += (((i13 * i12) + i14) - i13);
                    }
                }
            } else if (Test1000.bFld) {
                i12 -= -31;
                vMeth1_check_sum += i9 + i10 + l2 + i11 + i12 + by + i13 + i14 + i15 + Double.doubleToLongBits(d1);
                return;
            } else {
                Test1000.instanceCount -= i14;
            }
        }
        vMeth1_check_sum += i9 + i10 + l2 + i11 + i12 + by + i13 + i14 + i15 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(int i3, int i4) {

        float f1=-113.992F;
        int i5=9, i6=184, i7=-26, i8=-13;
        double d=53.39372;
        long l1=-13L;
        byte by1=-125;

        Test1000.bFld = (Test1000.iArrFld[(i4 >>> 1) % N] != ((f1 - Test1000.instanceCount) - (f1++)));
        f1 -= Test1000.instanceCount;
        for (i5 = 3; i5 < 357; i5++) {
            for (i7 = 5; i7 > 1; i7--) {
                d = (((i7 + l1) - (i3 * i6)) - (i4 = i6));
                vMeth1(-56266, i5, Test1000.lFld);
                Test1000.iArrFld[i5] *= i5;
                i3 += (int)d;
                i8 %= (int) (Test1000.instanceCount | 1);
            }
            i3 ^= i8;
            l1 >>= -15265L;
            by1 >>= (byte)i6;
            i8 += (int) Test1000.instanceCount;
            Test1000.lArrFld[i5] *= i4;
            Test1000.bArrFld[i5 - 1] = Test1000.bFld;
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + l1 +
            by1;
    }

    public static int iMeth(int i2, float f, long l) {


        vMeth(i2, i2);
        i2 = (int)f;
        l += Test1000.sFld;
        long meth_res = i2 + Float.floatToIntBits(f) + l;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=79, i1=-76, i16=-13, i17=-173, i18=63, i19=38467, i20=-33661, i21=0, i22=-13;
        byte by2=64;
        float f2=-81.252F;

        for (i = 5; i < 133; i++) {
            iMeth(i1, Test1000.fFld, Test1000.instanceCount);
            i1 -= (int) Test1000.fFld;
            iFld -= i;
            i1 = by2;
            i1 = by2;
            iFld = (int) Test1000.fFld;
            dFld -= i1;
            i1 = (int)108.995F;
            for (i16 = 5; i16 < 196; i16++) {
                Test1000.sFld = (short) -16515;
                if (Test1000.bFld) continue;
                Test1000.instanceCount += -26108;
            }
        }
        for (f2 = 7; f2 < 216; f2++) {
            Test1000.instanceCount = i17;
            iFld &= -6;
            Test1000.lFld += -5L;
            for (i19 = (int)(f2); i19 < 120; i19++) {
                for (i21 = 1; i21 > 1; i21 -= 3) {
                    i17 |= Test1000.sFld;
                    Test1000.iArrFld[(int) (f2)] = i22;
                    i17 = i20;
                    Test1000.lArrFld[i19] = Test1000.lFld;
                    Test1000.fFld += (((i21 * f2) + by2) - Test1000.instanceCount);
                    if (Test1000.bFld) continue;
                }
                Test1000.instanceCount *= (long) dFld;
                Test1000.sFld += (short) (i19 | (long) f2);
                i20 = i16;
                Test1000.instanceCount ^= i18;
                iFld *= by2;
            }
        }

        FuzzerUtils.out.println("i i1 by2 = " + i + "," + i1 + "," + by2);
        FuzzerUtils.out.println("i16 i17 f2 = " + i16 + "," + i17 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 = " + i21 + "," + i22);

        FuzzerUtils.out.println("Test1000.instanceCount Test1000.bFld Test1000.fFld = " + Test1000.instanceCount + "," + (Test1000.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test1000.fFld));
        FuzzerUtils.out.println("Test1000.lFld Test1000.sFld iFld = " + Test1000.lFld + "," + Test1000.sFld + "," + iFld);
        FuzzerUtils.out.println("dFld Test1000.iArrFld Test1000.lArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test1000.iArrFld) + "," + FuzzerUtils.checkSum(Test1000.lArrFld));
        FuzzerUtils.out.println("Test1000.bArrFld = " + FuzzerUtils.checkSum(Test1000.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test1000 _instance = new Test1000();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
