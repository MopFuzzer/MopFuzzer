// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0710 {

    public static final int N = 400;

    public static long instanceCount=49281L;
    public static volatile float fFld=2.726F;
    public static boolean bFld=true;
    public static volatile double dFld=-2.126963;
    public static int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0710.iArrFld, -58256);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth() {

        int i5=14;
        int i6=-6;
        int i7=-40464;
        int i8=-26326;
        int i9=144;
        int i10=11;
        int i11=45;
        int i12=104;
        int[] iArr1 =new int[N];
        double d1=-106.41964;

        FuzzerUtils.init(iArr1, 62838);

        for (i5 = 10; i5 < 224; i5++) {
            d1 *= Test0710.fFld;
        }
        for (i7 = 8; i7 < 240; ++i7) {
            i8 = i6;
            i8 -= (int) Test0710.fFld;
            for (i9 = i7; i9 < 7; ++i9) {
                iArr1[i9 - 1] += i8;
                Test0710.instanceCount += (((i9 * Test0710.instanceCount) + i7) - i5);
                switch ((i7 % 2) + 79) {
                case 79:
                    for (i11 = i9; i11 < 1; ++i11) {
                        Test0710.instanceCount += (i11 * i11);
                        i6 -= -97;
                    }
                    d1 = i12;
                    break;
                case 80:
                    Test0710.instanceCount = i7;
                    i6 += -7;
                    break;
                default:
                    Test0710.fFld += 0;
                }
            }
        }
        long meth_res = i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1(int i4, float f, long l1) {

        double d=1.55857, d2=-42.43237;
        int i13=14, i14=12, i15=55937;
        byte by=48;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, -2.775F);

        d += byMeth();
        l1 *= i4;
        for (d2 = 4; 137 > d2; ++d2) {
            for (i14 = 1; i14 < 12; i14++) {
                Test0710.iArrFld[(int) (d2 - 1)] = i14;
                Test0710.iArrFld[(int) (d2 - 1)] = i15;
                i4 &= (int) Test0710.instanceCount;
                fArr = fArr;
                switch ((((i15 >>> 1) % 1) * 5) + 39) {
                case 44:
                    Test0710.iArrFld[i14 - 1] >>>= i4;
                    Test0710.fFld += (i14 + i15);
                    i15 += (i14 * i14);
                    Test0710.instanceCount += (i14 - i13);
                    break;
                default:
                    by += (byte)(i14 * i15);
                }
            }
            l1 -= i13;
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + l1 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(d2) + i13 + i14 + i15 + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1, long l) {

        int i2=12;
        int i3=-150;
        int i17=-36843;
        int[] iArr =new int[N];
        short s=-6311;
        long l2=179L;
        byte by1=-98;
        double d3=1.6974;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, 14);
        FuzzerUtils.init(dArr, 67.39039);

        for (i2 = 223; i2 > 7; i2--) {
            iArr[i2] *= (int)(l ^ ((--s) << (i2 - i3)));
            vMeth1(i, -13.966F, l);
            i1 -= i1;
            i17 = 1;
            do {
                s -= (short)-81;
                i3 = i2;
                l2 = 1;
                while (++l2 < 1) {
                    if (i3 != 0) {
                        vMeth_check_sum += i + i1 + l + i2 + i3 + s + i17 + l2 + by1 + Double.doubleToLongBits(d3) +
                            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    Test0710.fFld -= l;
                    switch (((i17 % 9) * 5) + 107) {
                    case 142:
                        Test0710.iArrFld[(int) (l2 - 1)] >>= -35;
                        i = by1;
                        Test0710.fFld += (((l2 * i) + i3) - i1);
                        break;
                    case 152:
                        s = (short)d3;
                    case 146:
                        Test0710.bFld = Test0710.bFld;
                    case 113:
                        i1 = -17;
                        break;
                    case 131:
                        i -= i;
                    case 148:
                        i3 += (int) Test0710.fFld;
                    case 136:
                        i -= (int)l;
                        break;
                    case 128:
                        i3 <<= i2;
                        break;
                    case 126:
                        dArr[i2 - 1] = i3;
                    }
                }
            } while (++i17 < 7);
        }
        vMeth_check_sum += i + i1 + l + i2 + i3 + s + i17 + l2 + by1 + Double.doubleToLongBits(d3) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i18=-21132, i19=9, i20=18154, i21=2, i22=13, i23=-40035, i24=12, i25=22741, i26=84;
        long l3=5L;
        byte by2=15;
        double[] dArr1 =new double[N];

        FuzzerUtils.init(dArr1, 7.69070);

        vMeth(i18, i18, Test0710.instanceCount);
        i18 = i18;
        l3 = 1;
        while (++l3 < 276) {
            i18 += (int)(l3 + l3);
            for (i19 = 4; 91 > i19; ++i19) {
                i18 += (((i19 * i18) + i18) - i18);
                try {
                    i20 = (-86 % Test0710.iArrFld[i19 - 1]);
                    i18 = (Test0710.iArrFld[i19 - 1] / -20839);
                    i18 = (119 % Test0710.iArrFld[i19 - 1]);
                } catch (ArithmeticException a_e) {}
                fArrFld[(int)(l3 - 1)] -= i19;
                Test0710.fFld += (i19 * i20);
                if (Test0710.bFld) continue;
                for (i21 = 1; i21 < 2; ++i21) {
                    i22 -= i22;
                    Test0710.bFld = Test0710.bFld;
                    Test0710.dFld += by2;
                    try {
                        Test0710.iArrFld[(int) (l3)] = (-237 / i18);
                        i20 = (-7390 % i19);
                        i22 = (-404243248 / Test0710.iArrFld[(int) (l3 + 1)]);
                    } catch (ArithmeticException a_e) {}
                    Test0710.bFld = Test0710.bFld;
                    Test0710.dFld -= i18;
                }
                i20 += i19;
                Test0710.iArrFld[i19 - 1] |= i22;
            }
            for (i23 = 3; i23 < 91; ++i23) {
                for (i25 = (int)(l3); i25 < 2; ++i25) {
                    i26 -= 137;
                    i18 -= 77;
                    Test0710.iArrFld[i25] -= i23;
                    dArr1[i25] -= 744707781L;
                }
                Test0710.fFld += (((i23 * Test0710.instanceCount) + l3) - i23);
                Test0710.instanceCount = i21;
                Test0710.instanceCount += (-4891489216192406009L + (i23 * i23));
            }
            Test0710.bFld = Test0710.bFld;
            Test0710.bFld = Test0710.bFld;
        }

        FuzzerUtils.out.println("i18 l3 i19 = " + i18 + "," + l3 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("by2 i23 i24 = " + by2 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 dArr1 = " + i25 + "," + i26 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0710.instanceCount Test0710.fFld Test0710.bFld = " + Test0710.instanceCount + "," +
                Float.floatToIntBits(Test0710.fFld) + "," + (Test0710.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0710.dFld Test0710.iArrFld fArrFld = " + Double.doubleToLongBits(Test0710.dFld) + "," +
                FuzzerUtils.checkSum(Test0710.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0710 _instance = new Test0710();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
