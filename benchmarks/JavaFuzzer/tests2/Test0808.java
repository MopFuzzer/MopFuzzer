// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0808 {

    public static final int N = 400;

    public static long instanceCount=-1719967855L;
    public double dFld=117.82525;
    public static short sFld=-26648;
    public static boolean bFld=true;
    public static short sFld1=24691;
    public int iFld=-14;
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0808.lArrFld, 7755L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i8, boolean b) {

        int i9=38443;
        int i10=53762;
        int i11=115;
        int i12=-86;
        int i13=-29442;
        int i14=54984;
        int[] iArr1 =new int[N];
        float f2=107.752F, f3=37.110F;
        double d1=0.114807;

        FuzzerUtils.init(iArr1, -252);

        for (i9 = 23; i9 < 396; ++i9) {
            for (i11 = 5; i9 < i11; i11 -= 3) {
                f2 += i8;
                for (i13 = i9; 1 > i13; i13++) {
                    iArr1 = iArr1;
                    i12 <<= i12;
                    i14 += i10;
                    f2 = (float)d1;
                    i8 = (int) Test0808.instanceCount;
                    i14 += (((i13 * Test0808.instanceCount) + i14) - i11);
                    i10 += (((i13 * f2) + f3) - i12);
                    iArr1[i9 + 1] += (int)f3;
                    i12 = i8;
                }
            }
            iArr1[i9 + 1] += (int) Test0808.instanceCount;
        }
        d1 = 234;
        long meth_res = i8 + (b ? 1 : 0) + i9 + i10 + i11 + i12 + Float.floatToIntBits(f2) + i13 + i14 +
            Double.doubleToLongBits(d1) + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(int i4, int i5) {

        double d=-31.16091;
        double[] dArr =new double[N];
        int i6=3793;
        int i7=6;
        int i15=215;
        int i16=-36780;
        int i17=-50785;
        int i18=139;
        int i19=35622;
        int i20=9;
        int[] iArr =new int[N];
        float f1=0.567F;
        boolean b1=false;
        byte by=-86;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 2747);
        FuzzerUtils.init(lArr, 676365485L);
        FuzzerUtils.init(dArr, -26.59052);

        d = 1;
        while (++d < 352) {
            for (i6 = 1; i6 < 5; i6++) {
                try {
                    i4 = (iArr[i6 + 1] % 1129656757);
                    i5 = (-18407 / i4);
                    i5 = (137 % i7);
                } catch (ArithmeticException a_e) {}
                f1 = lArr[(i7 >>> 1) % N];
                i5 = (int)(lMeth(i7, b1) * i6);
            }
            for (i15 = (int)(d); i15 < 5; i15++) {
                for (i17 = 1; i17 < 1; i17++) {
                    i16 += (int) Test0808.instanceCount;
                }
                i18 <<= i4;
                Test0808.instanceCount += (28985 + (i15 * i15));
                for (i19 = 1; i19 < 1; i19++) {
                    iArr[(int)(d + 1)] = by;
                    iArr[i19] += i6;
                    i16 += (int) Test0808.instanceCount;
                }
                dArr[i15] *= f1;
            }
        }
        long meth_res = i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + i15
            + i16 + i17 + i18 + i19 + i20 + by + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f, int i1) {

        int i2=7305;
        int i3=-13;
        int i21=-42;
        int i22=-163;
        int[] iArr2 =new int[N];
        boolean b2=true;
        boolean[] bArr =new boolean[N];
        float f4=55.565F;
        short s=16363;

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -99);

        i1 = (int) ((~(--i1)) + ((Test0808.instanceCount - i1) - (i1 - Test0808.instanceCount)));
        for (i2 = 13; i2 < 289; ++i2) {
            if (true) continue;
            if (bArr[i2]) break;
            i3 = iMeth1(i1, i3);
            Test0808.lArrFld[i2] *= i2;
            switch (((i2 % 7) * 5) + 62) {
            case 90:
                for (i21 = i2; i21 < 6; i21 += 2) {
                    i1 += i3;
                    iArr2[i21] += (int) Test0808.instanceCount;
                    Test0808.instanceCount >>= Test0808.instanceCount;
                    i1 -= i2;
                    i22 = (int) Test0808.instanceCount;
                    i3 += (((i21 * i3) + i2) - i22);
                }
                break;
            case 97:
                if (b2) continue;
                break;
            case 94:
                f4 += (i2 * i2);
                break;
            case 74:
                iArr2[i2 - 1] = i1;
                break;
            case 65:
                i1 += (((i2 * i21) + i22) - Test0808.instanceCount);
            case 76:
                i22 += i3;
                break;
            case 93:
                s += (short) Test0808.instanceCount;
            default:
                try {
                    i3 = (iArr2[i2 - 1] % i22);
                    iArr2[i2 + 1] = (i1 / 3294);
                    iArr2[i2] = (iArr2[i2] / -109);
                } catch (ArithmeticException a_e) {}
            }
        }
        long meth_res = Float.floatToIntBits(f) + i1 + i2 + i3 + i21 + i22 + (b2 ? 1 : 0) + Float.floatToIntBits(f4) +
            s + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=4;
        int i23=42187;
        int i24=-2755;
        int i25=-1798;
        int i26=-5743;
        int i27=8;
        int i28=3;
        int i29=-142;
        int i30=8;
        int[] iArr3 =new int[N];
        float f5=-2.165F;
        float[] fArr =new float[N];
        long l=3608705886L;
        byte by1=2;

        FuzzerUtils.init(iArr3, -60);
        FuzzerUtils.init(fArr, 0.960F);

        i += (int) (((-Test0808.instanceCount) - (i % 127.2070)) / (((long) ((i * dFld) + (-i))) | 1));
        switch (((41985 >>> 1) % 2) + 72) {
        case 72:
            Test0808.instanceCount += ((Test0808.instanceCount++) - iMeth(f5, i));
            for (i23 = 4; i23 < 128; ++i23) {
                i25 = 1;
                while (++i25 < 202) {
                    i24 >>= (int) Test0808.instanceCount;
                    i24 = (int) Test0808.instanceCount;
                    for (l = i23; l < 1; ++l) {
                        iArr3[i25 - 1] = i24;
                        i26 += (int)(l ^ i);
                        Test0808.instanceCount -= l;
                        i26 = i24;
                        i = 0;
                    }
                }
                for (i27 = 10; i27 < 202; i27++) {
                    switch ((i23 % 4) + 49) {
                    case 49:
                        Test0808.instanceCount -= l;
                        i26 += i23;
                        for (i29 = i27; i29 < 2; i29++) {
                            i24 <<= Test0808.sFld;
                            i26 <<= by1;
                            Test0808.lArrFld[i23] = -8620;
                            switch ((i23 % 8) + 126) {
                            case 126:
                            case 127:
                                Test0808.instanceCount += (((i29 * f5) + i27) - i30);
                                i24 <<= (int) Test0808.instanceCount;
                                break;
                            case 128:
                                fArr[i27] += i26;
                                Test0808.instanceCount += (i29 * i29);
                                if (Test0808.bFld) break;
                                i30 = (int)-4239859476285902682L;
                                break;
                            case 129:
                                i30 = (int) Test0808.instanceCount;
                                i30 ^= (int) Test0808.instanceCount;
                                break;
                            case 130:
                                dFld = i24;
                                break;
                            case 131:
                                Test0808.instanceCount ^= i25;
                                break;
                            case 132:
                                Test0808.sFld1 = (short) i28;
                                break;
                            case 133:
                                i28 = (int)l;
                                break;
                            default:
                                i30 += i30;
                            }
                        }
                    case 50:
                        if (true) break;
                        break;
                    case 51:
                        Test0808.instanceCount %= (Test0808.sFld1 | 1);
                        break;
                    case 52:
                        f5 += (i27 + i30);
                    }
                }
            }
            break;
        case 73:
        default:
            iFld &= i28;
        }

        FuzzerUtils.out.println("i f5 i23 = " + i + "," + Float.floatToIntBits(f5) + "," + i23);
        FuzzerUtils.out.println("i24 i25 l = " + i24 + "," + i25 + "," + l);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 by1 = " + i29 + "," + i30 + "," + by1);
        FuzzerUtils.out.println("iArr3 fArr = " + FuzzerUtils.checkSum(iArr3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0808.instanceCount dFld Test0808.sFld = " + Test0808.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0808.sFld);
        FuzzerUtils.out.println("Test0808.bFld Test0808.sFld1 iFld = " + (Test0808.bFld ? 1 : 0) + "," + Test0808.sFld1 + "," + iFld);
        FuzzerUtils.out.println("Test0808.lArrFld = " + FuzzerUtils.checkSum(Test0808.lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0808 _instance = new Test0808();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
