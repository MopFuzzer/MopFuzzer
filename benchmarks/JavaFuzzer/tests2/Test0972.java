// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0972 {

    public static final int N = 400;

    public static long instanceCount=-39217L;
    public static volatile byte byFld=36;
    public static float fFld=-86.1012F;
    public double dFld=48.25733;
    public long lFld=-6L;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0972.iArrFld, 14);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i4=9374, i5=-53, i6=-243, i7=-14, i8=11, i9=-1, i10=4;
        float f3=1.913F;
        boolean b=true;

        for (i4 = 8; 175 > i4; i4++) {
            short s1=-15194;
            i6 = s1;
            Test0972.iArrFld = Test0972.iArrFld;
            i5 ^= 0;
            i5 = (int)f3;
            for (i7 = 1; i7 < 9; ++i7) {
                for (i9 = 1; i9 < 2; i9++) {
                    i6 -= s1;
                    f3 = Test0972.byFld;
                    i8 += i10;
                    Test0972.instanceCount >>= i8;
                    s1 += (short) (i9 | Test0972.byFld);
                    Test0972.instanceCount |= i8;
                    i8 += (((i9 * i6) + i10) - i5);
                    if (b) continue;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + Float.floatToIntBits(f3) + i7 + i8 + i9 + i10 + (b ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(byte by) {

        int i3=-62513, i11=10168, i12=-64, i13=7, i14=-63973, i15=12, i16=-67;
        short s2=11042;

        i3 -= iMeth1();
        for (i11 = 7; 143 > i11; ++i11) {
            for (i13 = 1; 12 > i13; ++i13) {
                if (true) {
                    for (i15 = 1; 2 > i15; i15++) {
                        s2 -= (short)i15;
                        i16 = (int)7L;
                    }
                    Test0972.instanceCount ^= Test0972.instanceCount;
                    i3 = (int) Test0972.instanceCount;
                } else {
                    i14 = i11;
                    i3 = i3;
                }
                Test0972.instanceCount = i3;
                Test0972.instanceCount += (i13 | Test0972.instanceCount);
                Test0972.instanceCount = i16;
                i12 = (int) Test0972.instanceCount;
            }
        }
        long meth_res = by + i3 + i11 + i12 + i13 + i14 + i15 + i16 + s2;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f1, float f2, int i2) {

        short s=21076;
        int i17=-51586, i18=0, i19=50135, i20=13, i21=1, i22=-59410, i23=-18924;
        float f4=60.481F;
        float[] fArr =new float[N];
        boolean b1=false;
        double[] dArr =new double[N];

        FuzzerUtils.init(fArr, 0.180F);
        FuzzerUtils.init(dArr, 2.92058);

        s = (short) (((1.513F % (lMeth(Test0972.byFld) | 1)) + f2) + i2);
        if (false) {
            i17 = 1;
            do {
                Test0972.instanceCount += (((i17 * f4) + i17) - i2);
            } while (++i17 < 135);
            for (i18 = 5; i18 < 289; i18++) {
                for (i20 = 1; i20 < 6; ++i20) {
                    f1 += i2;
                    Test0972.instanceCount >>= Test0972.instanceCount;
                    for (i22 = i20; i22 < 2; i22++) {
                        if (b1) {
                            if (b1) break;
                            switch (((i20 % 6) * 5) + 15) {
                            case 34:
                                fArr[i20] = f4;
                                i2 = (int) Test0972.instanceCount;
                            case 20:
                                if (b1) break;
                                break;
                            case 41:
                                i2 = (int) Test0972.instanceCount;
                            case 38:
                                Test0972.instanceCount += (i22 * i22);
                            case 24:
                                dArr[i22] = 32L;
                                break;
                            case 17:
                                Test0972.instanceCount += (i22 * i22);
                                break;
                            default:
                                try {
                                    Test0972.iArrFld[i18 - 1] = (-47834 / i22);
                                    i23 = (i22 % -6313);
                                    i21 = (i21 % -62345);
                                } catch (ArithmeticException a_e) {}
                            }
                        } else {
                            i23 += i22;
                        }
                    }
                }
            }
        } else if (b1) {
            Test0972.instanceCount = i2;
        } else if (b1) {
            f4 = i19;
        }
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i2 + s + i17 + Float.floatToIntBits(f4) +
            i18 + i19 + i20 + i21 + i22 + i23 + (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-7;
        int i1=-11;
        int i24=-110;
        int i25=3;
        int i26=-23274;
        int i27=-171;
        int i28=9;
        int[] iArr =new int[N];
        float f=104.985F;
        float[] fArr1 =new float[N];
        boolean b2=false;
        long l=177L;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(lArr, -47526837546445430L);
        FuzzerUtils.init(fArr1, 4.889F);

        for (i = 3; i < 171; i++) {
            i1 *= (--i1);
            switch (((((++i1) >>> 1) % 4) * 5) + 54) {
            case 74:
                iArr[i + 1] += (int)(i1 - lArr[i]);
                f += (i1 - iMeth(f, Test0972.fFld, i));
                i1 += i;
                switch ((((i1 >>> 1) % 6) * 5) + 91) {
                case 94:
                    i1 += i;
                case 117:
                    switch (((i % 1) * 5) + 116) {
                    case 117:
                        iArr[i + 1] = (int)dFld;
                        if (true) {
                            Test0972.instanceCount = Test0972.instanceCount;
                        }
                        break;
                    default:
                        fArr1[i] = i;
                        Test0972.iArrFld[i - 1] *= (int) dFld;
                        for (i24 = 7; 149 > i24; ++i24) {
                            for (i26 = i; 2 > i26; i26++) {
                                b2 = true;
                            }
                            for (l = 1; l < 2; ++l) {
                                switch ((((i27 >>> 1) % 1) * 5) + 75) {
                                case 78:
                                    i28 += (int)f;
                                    if (b2) break;
                                }
                                iArr[i - 1] <<= 20428;
                                i1 += (int)(l * l);
                                Test0972.instanceCount += -35549;
                                i28 *= i27;
                            }
                            if (b2) break;
                            dFld = i1;
                            i1 += (43954 + (i24 * i24));
                            b2 = b2;
                        }
                        f *= -3;
                    }
                case 101:
                    f += i;
                    break;
                case 118:
                    i27 = i27;
                    break;
                case 106:
                    i1 = (int) Test0972.fFld;
                    break;
                case 105:
                    i28 *= (int)lFld;
                default:
                    i1 = i25;
                }
            case 72:
                i1 = (int)lFld;
            case 64:
                i27 = (int)dFld;
                break;
            case 58:
                fArr1[i - 1] *= i25;
                break;
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 b2 l = " + i27 + "," + (b2 ? 1 : 0) + "," + l);
        FuzzerUtils.out.println("i28 iArr lArr = " + i28 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0972.instanceCount Test0972.byFld Test0972.fFld = " + Test0972.instanceCount + "," + Test0972.byFld +
                "," + Float.floatToIntBits(Test0972.fFld));
        FuzzerUtils.out.println("dFld lFld Test0972.iArrFld = " + Double.doubleToLongBits(dFld) + "," + lFld + "," +
                FuzzerUtils.checkSum(Test0972.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0972 _instance = new Test0972();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
