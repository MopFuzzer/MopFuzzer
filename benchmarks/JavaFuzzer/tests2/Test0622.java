// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0622 {

    public static final int N = 400;

    public static long instanceCount=-4151403396L;
    public static int iFld=0;
    public static boolean bFld=false;
    public volatile short sFld=18555;
    public double dFld=1.59146;
    public static byte[] byArrFld =new byte[N];
    public static long[] lArrFld =new long[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0622.byArrFld, (byte) 18);
        FuzzerUtils.init(Test0622.lArrFld, -356696130104321528L);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, byte by, float f1) {

        long l1=-11L;
        int i=3;
        int i1=-10;
        int i2=139;
        int i3=-18;
        int[] iArr =new int[N];
        short s=-109;
        double d=98.83078;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.554F);
        FuzzerUtils.init(iArr, 7272);

        for (l1 = 15; 384 > l1; l1++) {
            if (false) {
                s -= (short)i;
            } else if (false) {
                i <<= 48809;
                Test0622.instanceCount += (l1 + i);
            } else if (false) {
                Test0622.instanceCount = i;
                fArr[(int)(l1)] = l1;
            }
            for (d = 1; 5 > d; d++) {
                for (i2 = 2; i2 > 1; i2--) {
                    i1 -= (int)l1;
                    i3 = by;
                    i1 = by;
                    i += (i2 * i2);
                    iArr[i2] >>>= 6;
                    Test0622.byArrFld[i2 - 1] -= (byte) i1;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + by + Float.floatToIntBits(f1) + l1 + i + s +
            Double.doubleToLongBits(d) + i1 + i2 + i3 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static double dMeth() {

        float f2=-100.103F;
        byte by1=-7;
        int i4=252;
        int i5=12937;
        int i6=54;
        int i7=-13;
        int[] iArr1 =new int[N];
        long l2=13L;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, 11);
        FuzzerUtils.init(lArr, 4L);

        vMeth1(f2, by1, f2);
        i4 = 1;
        do {
            Test0622.instanceCount <<= i4;
            iArr1[i4 - 1] += (int)f2;
            for (l2 = i4; l2 < 17; l2++) {
                switch ((int)(((l2 % 2) * 5) + 29)) {
                case 36:
                    f2 += l2;
                    Test0622.instanceCount += (l2 - f2);
                    break;
                case 37:
                    iArr1[i4] -= Test0622.iFld;
                    break;
                default:
                    i5 += (int) (((l2 * i4) + Test0622.iFld) - Test0622.iFld);
                    for (i6 = 1; i6 > 1; i6--) {
                        Test0622.bFld = Test0622.bFld;
                        lArr[i4 + 1] -= (long)f2;
                        by1 += (byte)(-59083 + (i6 * i6));
                        lArr[i4 + 1] = (long)2.662F;
                    }
                }
            }
        } while ((i4 += 3) < 268);
        long meth_res = Float.floatToIntBits(f2) + by1 + i4 + l2 + i5 + i6 + i7 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth() {

        long l=12L;
        int i8=-37006;
        int i9=24431;
        int[] iArr2 =new int[N];
        float f3=-1.76F;
        short s1=25392;
        double d1=2.72943;

        FuzzerUtils.init(iArr2, 3427);

        l *= (long) (dMeth() - Test0622.iFld);
        i8 = 324;
        while ((i8 -= 2) > 0) {
            i9 = 10;
            do {
                f3 = Test0622.instanceCount;
                Test0622.iFld = Test0622.iFld;
                iArr2[i8] = Test0622.iFld;
                l += (long)f3;
                Test0622.iFld += (i9 * i9);
            } while ((i9 -= 2) > 0);
            l = 6;
            Test0622.iFld = (int) l;
            s1 += (short)i8;
            f3 = f3;
            Test0622.lArrFld[i8] *= i8;
            Test0622.iFld = (int) l;
            Test0622.iFld += (int) d1;
        }
        vMeth_check_sum += l + i8 + i9 + Float.floatToIntBits(f3) + s1 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        float f4=-18.347F;
        float f5=0.449F;
        float[] fArr1 =new float[N];
        int i10=-13, i11=26583, i12=-40, i13=51693, i14=-14, i15=7;
        long l3=-94L;

        FuzzerUtils.init(fArr1, 2.769F);

        vMeth();
        for (f4 = 1; 386 > f4; ++f4) {
            Test0622.instanceCount -= Test0622.iFld;
            fArr1[(int)(f4)] *= sFld;
            Test0622.iFld += (int) (f4 * f4);
            for (i11 = 65; i11 > 4; i11 -= 3) {
                Test0622.instanceCount += -155L;
                l3 = 4;
                do {
                    iArrFld[(int)(l3)] = i10;
                    i12 >>= (int) Test0622.instanceCount;
                    f5 += (((l3 * Test0622.instanceCount) + l3) - i10);
                    iArrFld[(int)(l3 + 1)] -= i10;
                    i10 = (int) Test0622.instanceCount;
                    Test0622.byArrFld[(int) (f4)] = (byte) Test0622.iFld;
                    iArrFld[(int)(f4)] *= (int)f5;
                } while (--l3 > 0);
                for (i13 = 1; i13 < 4; i13++) {
                    Test0622.instanceCount += (i13 - f5);
                }
                sFld ^= (short)l3;
                i14 = -49559;
                i10 <<= i12;
                i15 = 1;
                do {
                    Test0622.instanceCount += (i15 - Test0622.iFld);
                    if (Test0622.bFld) {
                        i12 += i10;
                        i10 = (int)dFld;
                        Test0622.iFld *= (int) dFld;
                    } else {
                        i10 = 111;
                        i12 = i10;
                        iArrFld[(int)(f4 + 1)] &= i13;
                    }
                    f5 = f4;
                } while (++i15 < 4);
            }
        }

        FuzzerUtils.out.println("f4 i10 i11 = " + Float.floatToIntBits(f4) + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 l3 f5 = " + i12 + "," + l3 + "," + Float.floatToIntBits(f5));
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0622.instanceCount Test0622.iFld Test0622.bFld = " + Test0622.instanceCount + "," + Test0622.iFld +
                "," + (Test0622.bFld ? 1 : 0));
        FuzzerUtils.out.println("sFld dFld Test0622.byArrFld = " + sFld + "," + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0622.byArrFld));
        FuzzerUtils.out.println("Test0622.lArrFld iArrFld = " + FuzzerUtils.checkSum(Test0622.lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0622 _instance = new Test0622();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
