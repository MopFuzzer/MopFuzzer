// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:54 2023
public class Test0907 {

    public static final int N = 400;

    public static long instanceCount=-571133763L;
    public static short sFld=18273;
    public volatile double dFld=-7.93954;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0907.iArrFld, 3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f2, int i6) {

        double d1=-45.35728, d2=-2.5508;
        int i7=235;
        int i8=13;
        int i9=40481;
        int i10=-8;
        int i11=1;
        int i12=64;
        int[] iArr =new int[N];
        short s=31208;

        FuzzerUtils.init(iArr, 125);

        i6 = -58358;
        f2 -= Test0907.instanceCount;
        iArr[(i6 >>> 1) % N] *= i6;
        for (d1 = 3; d1 < 325; d1++) {
            for (i8 = 1; i8 < 5; i8++) {
                i6 &= i7;
            }
            i10 = 5;
            while ((i10 -= 3) > 0) {
                i7 -= s;
                for (i11 = 1; 3 > i11; i11++) {
                    i6 >>= i7;
                    i7 <<= i6;
                }
                i6 = (int)d1;
                d2 -= d2;
                if (i9 != 0) {
                }
            }
            iArr[(int)(d1)] >>= i10;
        }
        long meth_res = Float.floatToIntBits(f2) + i6 + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + s + i11 +
            i12 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d, float f1) {

        int i4=-9, i5=46001, i13=-310, i14=-41, i15=254, i16=-4;
        short s1=-9531;
        boolean b=false;

        for (i4 = 7; i4 < 308; i4++) {
            iMeth(f1, -63391);
            for (i13 = 1; i13 < 5; i13++) {
                i14 -= (int)d;
                for (i15 = 2; i15 > 1; --i15) {
                    i14 = s1;
                    switch ((((-51082 >>> 1) % 4) * 5) + 71) {
                    case 81:
                        i16 = (int) Test0907.instanceCount;
                        i16 &= (int)-6736436359316485947L;
                        if (b) continue;
                    case 90:
                        i14 = i15;
                        Test0907.instanceCount = -64948;
                        f1 *= f1;
                        break;
                    case 88:
                        Test0907.instanceCount -= i16;
                        i14 += (int)d;
                    case 85:
                        if (i4 != 0) {
                            vMeth1_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i4 + i5 + i13 +
                                i14 + i15 + i16 + s1 + (b ? 1 : 0);
                            return;
                        }
                        break;
                    default:
                        i14 += (i15 + Test0907.instanceCount);
                    }
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i4 + i5 + i13 + i14 + i15 + i16 +
            s1 + (b ? 1 : 0);
    }

    public void vMeth(int i1, long l) {

        int i2=127, i3=51456, i17=17, i18=6, i19=-232;
        double d3=-83.27282, d4=0.96149, d5=-2.72711;
        float f3=-67.284F;
        boolean b1=true;
        byte by=5;

        for (i2 = 19; i2 < 391; ++i2) {
            vMeth1(d3, f3);
        }
        for (d4 = 4; d4 < 227; d4++) {
            b1 = b1;
            d5 = 1;
            while (++d5 < 7) {
                d3 -= i2;
                l = Test0907.instanceCount;
                if (b1) break;
                Test0907.iArrFld[(int) (d4)] -= i1;
                i3 += i17;
                for (i18 = 1; i18 < 1; ++i18) {
                    l = i17;
                    l += by;
                    Test0907.sFld >>= (short) -34841;
                    if (b1) continue;
                }
            }
        }
        vMeth_check_sum += i1 + l + i2 + i3 + Double.doubleToLongBits(d3) + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(d4) + i17 + (b1 ? 1 : 0) + Double.doubleToLongBits(d5) + i18 + i19 + by;
    }

    public void mainTest(String[] strArr1) {

        float f=65.910F;
        int i=-6, i20=25820, i21=-63211, i22=2, i23=-4225, i24=51666, i25=-58, i26=-10;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)16149);

        f -= sArr[(i >>> 1) % N];
        vMeth(i, Test0907.instanceCount);
        Test0907.iArrFld[(i >>> 1) % N] = -197;
        Test0907.iArrFld[(i20 >>> 1) % N] <<= i20;
        f -= Test0907.sFld;
        for (i21 = 8; i21 < 173; i21++) {
            for (i23 = 152; i23 > 5; --i23) {
                for (i25 = 1; i25 < 2; ++i25) {
                    boolean b2=false;
                    i24 -= i25;
                    if (b2) continue;
                    Test0907.instanceCount += (long) dFld;
                    switch (((i25 >>> 1) % 1) + 38) {
                    case 38:
                        i20 = (int) Test0907.instanceCount;
                        Test0907.instanceCount += (i25 - i);
                        if (b2) {
                            i += i23;
                            switch ((((i20 >>> 1) % 2) * 5) + 22) {
                            case 28:
                                i26 -= (int) Test0907.instanceCount;
                                i24 += i25;
                                Test0907.iArrFld[i25 - 1] *= -30757;
                            case 27:
                                Test0907.instanceCount += (i25 * i25);
                            default:
                                i24 |= 214;
                                i24 *= i22;
                                i22 = (int)dFld;
                                i20 <<= i23;
                            }
                            i *= i22;
                            Test0907.sFld = (short) Test0907.instanceCount;
                        } else if (b2) {
                            Test0907.iArrFld[i25 - 1] >>>= i24;
                            i20 *= (int)2.717F;
                            i = i20;
                        }
                        break;
                    default:
                        Test0907.instanceCount += i23;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i i20 = " + Float.floatToIntBits(f) + "," + i + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0907.instanceCount Test0907.sFld dFld = " + Test0907.instanceCount + "," + Test0907.sFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0907.iArrFld = " + FuzzerUtils.checkSum(Test0907.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0907 _instance = new Test0907();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
