// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0171 {

    public static final int N = 400;

    public static volatile long instanceCount=-3085365991L;
    public double dFld=-2.34567;
    public static short sFld=-23134;
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0171.fArrFld, 80.603F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i4=-12;
        int i5=45530;
        int i6=-86;
        int i7=5;
        int i8=12;
        int i9=-35164;
        int[] iArr =new int[N];
        int[][] iArr1 =new int[N][N];
        float f2=45.44F, f3=2.927F;
        double d2=-61.8395;

        FuzzerUtils.init(iArr, -248);
        FuzzerUtils.init(iArr1, 53551);

        iArr[(i4 >>> 1) % N] = i4;
        iArr1 = FuzzerUtils.int2array(N, (int)-11282);
        i4 *= (int) Test0171.instanceCount;
        for (i5 = 3; 153 > i5; ++i5) {
            for (f2 = 1; f2 < 11; f2++) {
                Test0171.instanceCount = 36657;
                switch ((int)((f2 % 2) + 25)) {
                case 25:
                    i4 <<= i6;
                    Test0171.instanceCount += (long) f2;
                    i6 |= (int) Test0171.instanceCount;
                case 26:
                    for (i8 = 1; i8 < 2; i8++) {
                        i4 = (int) Test0171.instanceCount;
                        i4 = i4;
                        i6 -= i8;
                        i6 >>= i4;
                    }
                default:
                    f3 *= (float)d2;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + Float.floatToIntBits(f2) + i7 + i8 + i9 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i1, int i2) {

        float f1=95.88F;
        int i3=-38;
        int i10=9;
        int i11=-10;
        int i12=-10;
        int[] iArr2 =new int[N];
        long l=26139074L;
        byte by=96;
        double d3=-2.112519;

        FuzzerUtils.init(iArr2, -170);

        for (f1 = 14; f1 < 253; ++f1) {
            f = ((iMeth1() % 1116814094L) << 53709);
            for (i10 = 1; i10 < 7; ++i10) {
                for (l = 1; l < 2; l++) {
                    if (i3 != 0) {
                        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + Float.floatToIntBits(f1) + i3 + i10 +
                            i11 + l + i12 + by + Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    Test0171.fArrFld[i10 + 1] += i11;
                    iArr2[i10 - 1] >>= i12;
                    i1 <<= (int) Test0171.instanceCount;
                    i2 = i3;
                    Test0171.instanceCount = i3;
                    by *= (byte)i3;
                    switch (((i10 % 9) * 5) + 76) {
                    case 86:
                        Test0171.instanceCount = -69;
                        i11 <<= i3;
                        break;
                    case 87:
                        Test0171.instanceCount |= Test0171.instanceCount;
                        break;
                    case 103:
                        i1 <<= i12;
                        break;
                    case 116:
                        d3 = i11;
                        break;
                    case 121:
                        i2 += i3;
                        break;
                    case 106:
                        Test0171.instanceCount = i10;
                        break;
                    case 109:
                        iArr2[(int)(l)] = -174;
                        break;
                    case 101:
                        Test0171.instanceCount = -1796858610742929121L;
                        break;
                    case 85:
                        iArr2[(int)(f1 + 1)] -= i10;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + Float.floatToIntBits(f1) + i3 + i10 + i11 + l + i12 + by
            + Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(double d) {

        double d1=87.108704;
        float f4=30.894F;
        int i14=3365;
        int i15=-15529;
        int i16=17;
        int i17=0;
        int i18=11;
        int i19=-8;
        int i20=-126;
        int i21=20917;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, 12);

        d1 = 1;
        do {
            int i13=4188;
            vMeth(f4, i13, i13);
        } while (++d1 < 326);
        for (i14 = 11; i14 < 261; i14++) {
            i16 += (i14 * i14);
        }
        for (i17 = 213; i17 > 3; i17--) {
            Test0171.instanceCount = 245;
            i18 += (((i17 * i18) + i18) - Test0171.instanceCount);
            d = i16;
            Test0171.instanceCount += (i17 * i17);
            f4 += f4;
        }
        for (i19 = 5; 138 > i19; i19++) {
            i21 = 1;
            do {
                i20 += i18;
                i15 = i18;
                try {
                    iArr3[i19 + 1] = (i19 % i19);
                    i18 = (i14 % iArr3[i21 - 1]);
                    i18 = (i21 / -61436);
                } catch (ArithmeticException a_e) {}
            } while (++i21 < 12);
        }
        long meth_res = Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + Float.floatToIntBits(f4) + i14 + i15
            + i16 + i17 + i18 + i19 + i20 + i21 + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=79, i22=-235, i23=-29021, i24=-31796, i25=-46436, i26=108, i27=-3, i28=12, i29=52845, i30=-31964,
            i31=-10389;
        float f5=-118.892F;
        byte[][] byArr =new byte[N][N];
        long[] lArr =new long[N];

        FuzzerUtils.init(byArr, (byte)67);
        FuzzerUtils.init(lArr, -51012L);

        byArr[(-23210 >>> 1) % N][(i >>> 1) % N] *= (byte)iMeth(dFld);
        f5 += i;
        for (i22 = 11; 226 > i22; ++i22) {
            f5 = i;
            Test0171.instanceCount += i22;
            switch ((i22 % 2) + 2) {
            case 2:
                Test0171.instanceCount = (long) dFld;
                i += 12;
                lArr[i22] ^= -59;
                i23 += (i22 - i23);
            case 3:
                i23 = (int)dFld;
                i23 = i23;
            }
        }
        for (i24 = 257; i24 > 16; --i24) {
            dFld *= i23;
            i = (int) Test0171.instanceCount;
            Test0171.instanceCount += (long) f5;
            i23 += (i24 * i);
            Test0171.instanceCount = -247;
            for (i26 = 2; i26 < 104; i26++) {
                i25 = i27;
                i = i26;
                Test0171.instanceCount = i23;
                i += i26;
                for (i28 = i24; 2 > i28; ++i28) {
                    Test0171.sFld += (short) 80;
                }
            }
            i30 = 1;
            while (++i30 < 104) {
                i25 = i;
                i31 = 1;
                do {
                    i27 = i31;
                    Test0171.instanceCount += (i31 * i31);
                } while (++i31 < 1);
            }
        }

        FuzzerUtils.out.println("i f5 i22 = " + i + "," + Float.floatToIntBits(f5) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("byArr lArr = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0171.instanceCount dFld Test0171.sFld = " + Test0171.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0171.sFld);
        FuzzerUtils.out.println("Test0171.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0171.fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0171 _instance = new Test0171();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
