// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0198 {

    public static final int N = 400;

    public static long instanceCount=40738L;
    public static int iFld=248;
    public static volatile float fFld=108.840F;
    public static byte byFld=-11;
    public static double dFld=-120.65914;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0198.lArrFld, -63745L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i9) {

        boolean b1=false;
        int i10=8932, i11=214, i12=26985, i13=-7002, i14=10414, i15=-234;
        float f=0.772F;
        double d=2.112668;

        b1 = b1;
        i9 -= (int)-30794L;
        for (i10 = 231; i10 > 12; i10 -= 2) {
            f = i11;
        }
        i12 = 1;
        do {
            i11 += i12;
            for (i13 = 1; i13 < 5; ++i13) {
                i9 = i11;
            }
            Test0198.instanceCount += (i12 * i11);
        } while (++i12 < 359);
        i15 = 1;
        do {
            i14 -= (int) Test0198.instanceCount;
            i9 += (i15 * i15);
            d = f;
            i14 += (i15 | i11);
            i11 += i15;
        } while (++i15 < 318);
        vMeth_check_sum += i9 + (b1 ? 1 : 0) + i10 + i11 + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(d);
    }

    public static int iMeth1() {

        int i16=-60163;
        int i17=-1;
        int i18=14678;
        int i19=2;
        int i20=14;
        int i21=59802;
        int i22=-22671;
        int[] iArr =new int[N];
        boolean b2=false;
        short s=10236;
        double d1=64.9291;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -2.566F);
        FuzzerUtils.init(iArr, 204);

        vMeth(Test0198.iFld);
        Test0198.iFld = -13;
        for (i16 = 5; 159 > i16; i16++) {
            for (i18 = 1; i18 < 10; ++i18) {
                b2 = b2;
            }
            i20 = 10;
            while ((i20 -= 2) > 0) {
                i19 = (int) Test0198.fFld;
                i17 -= (int)-1.558F;
                Test0198.iFld -= i18;
                fArr[i20] = i19;
            }
            for (i21 = 1; i21 < 10; ++i21) {
                i17 = s;
                d1 += i21;
                i19 = Test0198.iFld;
                iArr[i21] -= i16;
            }
        }
        long meth_res = i16 + i17 + i18 + i19 + (b2 ? 1 : 0) + i20 + i21 + i22 + s + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(byte by) {

        int i6=-149;
        int i7=-15992;
        int i8=16;
        int i23=-131;
        int i24=246;
        int[][] iArr1 =new int[N][N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 2);

        for (i6 = 292; i6 > 12; i6--) {
            if (b) break;
            i8 = 1;
            while (++i8 < 6) {
                i7 *= i8;
                i7 >>= (iMeth1() * i8);
                if (i6 != 0) {
                }
                for (i23 = 1; i23 < 1; i23++) {
                    switch ((((-92 >>> 1) % 6) * 5) + 7) {
                    case 32:
                        Test0198.lArrFld[i23 - 1] -= i8;
                        Test0198.iFld >>>= -47089;
                        iArr1 = iArr1;
                        break;
                    case 13:
                        i7 += Test0198.iFld;
                        i24 ^= -111;
                    case 17:
                        if (b) continue;
                        i7 += i23;
                        break;
                    case 16:
                    case 20:
                        i7 += Test0198.iFld;
                        break;
                    case 31:
                        if (i24 != 0) {
                        }
                    default:
                    }
                }
            }
        }
        long meth_res = by + i6 + i7 + (b ? 1 : 0) + i8 + i23 + i24 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-13;
        int i1=219;
        int i2=-9;
        int i3=-193;
        int i4=55282;
        int i5=-196;
        int[] iArr2 =new int[N];
        short s1=30855;
        boolean b3=true;
        long l=-194L;
        double[] dArr =new double[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(iArr2, 17841);
        FuzzerUtils.init(dArr, -23.114051);
        FuzzerUtils.init(fArr1, 50.41F);

        for (i = 4; 151 > i; i++) {
            i1 *= i;
            for (i2 = 6; 171 > i2; i2++) {
                for (i4 = 1; i4 < 2; ++i4) {
                    Test0198.instanceCount |= iMeth(Test0198.byFld);
                    switch ((i4 % 6) + 85) {
                    case 85:
                        i5 = i2;
                        Test0198.dFld = i4;
                        i1 *= i4;
                        break;
                    case 86:
                        i3 += -147;
                        break;
                    case 87:
                        switch (((i4 % 1) * 5) + 34) {
                        case 37:
                            switch (((i4 % 2) * 5) + 105) {
                            case 112:
                                Test0198.dFld -= i5;
                                iArr2[i + 1] = i;
                                i1 += (-218 + (i4 * i4));
                                break;
                            case 110:
                                i5 += i5;
                                s1 *= (short)i;
                                if (b3) break;
                                Test0198.instanceCount >>>= i5;
                                break;
                            default:
                                Test0198.iFld |= i5;
                            }
                            break;
                        }
                        break;
                    case 88:
                        switch ((i2 % 2) + 109) {
                        case 109:
                            i3 *= (int)-2557446526626995741L;
                            b3 = b3;
                            switch ((((i4 >>> 1) % 8) * 5) + 37) {
                            case 71:
                                Test0198.instanceCount += i;
                                break;
                            case 47:
                                dArr[i4 - 1] *= Test0198.dFld;
                                break;
                            case 43:
                                Test0198.lArrFld[i2 + 1] = i1;
                                i5 = (int)l;
                                break;
                            case 72:
                                iArr2[i4 + 1] = i1;
                                i5 -= i2;
                            case 73:
                                i5 >>= (int) Test0198.instanceCount;
                            case 66:
                                iArr2[i4] = (int)1.109802;
                                break;
                            case 58:
                                s1 *= (short) Test0198.fFld;
                            case 56:
                                fArr1[i4] *= Test0198.instanceCount;
                            }
                            break;
                        case 110:
                            i1 ^= (int) Test0198.instanceCount;
                        default:
                            Test0198.iFld = i;
                        }
                        break;
                    case 89:
                        i5 = Test0198.iFld;
                        break;
                    case 90:
                        i3 = i5;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("s1 b3 l = " + s1 + "," + (b3 ? 1 : 0) + "," + l);
        FuzzerUtils.out.println("iArr2 dArr fArr1 = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0198.instanceCount Test0198.iFld Test0198.fFld = " + Test0198.instanceCount + "," + Test0198.iFld +
                "," + Float.floatToIntBits(Test0198.fFld));
        FuzzerUtils.out.println("Test0198.byFld Test0198.dFld Test0198.lArrFld = " + Test0198.byFld + "," +
                Double.doubleToLongBits(Test0198.dFld) + "," + FuzzerUtils.checkSum(Test0198.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0198 _instance = new Test0198();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
