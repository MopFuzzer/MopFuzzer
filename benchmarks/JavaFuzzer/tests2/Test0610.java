// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0610 {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static byte byFld=122;
    public static double dFld=-1.78174;
    public float fFld=0.488F;
    public static short sFld=-24137;

    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i5=-53279;
        int i6=-9;
        int i7=-32;
        int i8=48973;
        int i9=-158;
        int i10=18212;
        int i11=7;
        int[] iArr =new int[N];
        float f=-2.25F;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-16715);
        FuzzerUtils.init(iArr, -16186);

        Test0610.instanceCount -= i5;
        for (i6 = 4; i6 < 153; i6++) {
            Test0610.byFld >>= (byte) -61884;
            sArr[i6 - 1] = (short)i6;
            for (i8 = 1; i8 < 11; ++i8) {
                f *= 6739315548299290627L;
                for (i10 = 1; i10 < 2; ++i10) {
                    Test0610.instanceCount ^= 33599;
                    i11 = i6;
                    iArr[i8] -= i5;
                    i11 ^= i7;
                    i7 = (int) Test0610.instanceCount;
                    i11 = i7;
                    i9 += (i10 * i10);
                    sArr[(i8 >>> 1) % N] -= (short)i6;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public int iMeth() {

        int i4=23763;
        int i12=42509;
        int i13=-7532;
        int i14=-35544;
        int i15=3;
        int i16=4;
        int[] iArr1 =new int[N];
        short s=1789;

        FuzzerUtils.init(iArr1, -35704);

        i4 = 1;
        while (++i4 < 308) {
            vMeth();
        }
        Test0610.instanceCount += i4;
        for (i12 = 3; i12 < 181; ++i12) {
            i14 = 1;
            do {
                i13 += (i14 * i14);
                s *= (short) Test0610.instanceCount;
                i13 = -135;
                for (i15 = i12; 1 > i15; ++i15) {
                    Test0610.instanceCount = -12681;
                    if (i14 != 0) {
                    }
                    Test0610.instanceCount = i16;
                    i16 += (int) Test0610.dFld;
                    try {
                        i13 = (-792244809 % iArr1[i14]);
                        i16 = (i12 % 238);
                        i16 = (i13 % 106);
                    } catch (ArithmeticException a_e) {}
                    fFld -= fFld;
                }
            } while (++i14 < 9);
        }
        long meth_res = i4 + i12 + i13 + i14 + s + i15 + i16 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public short sMeth(double d, int i, int i1) {

        int i2=28;
        int i3=3723;
        int i17=-22;
        int i18=20133;
        int i19=100;
        int i20=-26242;
        int[][] iArr2 =new int[N][N];

        FuzzerUtils.init(iArr2, -45215);

        for (i2 = 316; i2 > 1; i2 -= 3) {
            iMeth();
            iArr2[i2 + 1][i2 + 1] &= i;
            Test0610.byFld >>= (byte) Test0610.instanceCount;
            Test0610.instanceCount -= i1;
            fFld += (65144L + (i2 * i2));
            try {
                iArr2[i2 + 1][i2 - 1] = (iArr2[i2 - 1][i2 - 1] % i);
                i = (i % 33954);
                i1 = (56455 % iArr2[i2 - 1][i2 - 1]);
            } catch (ArithmeticException a_e) {}
        }
        i = (int)2.51883;
        Test0610.sFld -= (short) i3;
        iArr2[(i >>> 1) % N][(-2085 >>> 1) % N] = i3;
        for (i17 = 10; i17 < 214; i17++) {
            for (i19 = 8; i19 > 1; i19--) {
                i1 -= -3;
                i20 = 37467;
                i = i3;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i + i1 + i2 + i3 + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(iArr2);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i21=-59727;
        int i22=-178;
        int i23=-22960;
        int i24=-65;
        int i25=-20435;
        int i26=-122;
        int i27=-10;
        int i28=194;
        int i29=97;
        int i30=28197;
        int i31=26;
        int[] iArr3 =new int[N];
        double d1=88.105761;
        long l=-5671159892474117368L;
        short[] sArr1 =new short[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr3, -48041);
        FuzzerUtils.init(sArr1, (short)15379);
        FuzzerUtils.init(fArr, 0.448F);

        sMeth(Test0610.dFld, i21, -64085);
        fFld += i21;
        if (true) {
            for (i22 = 1; 235 > i22; i22++) {
                for (d1 = 2; d1 < 107; d1++) {
                    for (i25 = 1; i25 < 2; ++i25) {
                        try {
                            i23 = (-317520781 / iArr3[i25]);
                            i24 = (iArr3[i25] % 28916);
                            i26 = (-62591 / i23);
                        } catch (ArithmeticException a_e) {}
                        i23 += (i25 * fFld);
                        Test0610.instanceCount += (i25 * i25);
                        i21 += Test0610.byFld;
                        sArr1 = sArr1;
                    }
                }
            }
            i21 = i27;
            Test0610.byFld = (byte) i23;
            Test0610.dFld *= Test0610.dFld;
        }
        l = 1;
        while (++l < 378) {
            Test0610.byFld >>= (byte) l;
            for (i28 = 67; i28 > l; i28--) {
                Test0610.instanceCount -= i23;
                for (i30 = 1; i30 < 1; ++i30) {
                    iArr3[(int)(l)] = (int)d1;
                    i23 = i31;
                    fArr[(int)(l)] = fFld;
                    fArr[i30 - 1] %= (i26 | 1);
                    fFld -= Test0610.instanceCount;
                    i24 = i26;
                    Test0610.byFld &= (byte) i26;
                    Test0610.instanceCount += (i30 - i24);
                    i24 = i29;
                    fFld -= i26;
                }
                i21 <<= i29;
            }
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d1 i24 i25 = " + Double.doubleToLongBits(d1) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 l = " + i26 + "," + i27 + "," + l);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 iArr3 sArr1 = " + i31 + "," + FuzzerUtils.checkSum(iArr3) + "," +
            FuzzerUtils.checkSum(sArr1));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0610.instanceCount Test0610.byFld Test0610.dFld = " + Test0610.instanceCount + "," + Test0610.byFld +
                "," + Double.doubleToLongBits(Test0610.dFld));
        FuzzerUtils.out.println("fFld Test0610.sFld = " + Float.floatToIntBits(fFld) + "," + Test0610.sFld);

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0610 _instance = new Test0610();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
