// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0704 {

    public static final int N = 400;

    public static long instanceCount=5189264996489702395L;
    public static volatile double dFld=2.9476;
    public static volatile int iFld=-27000;
    public static boolean bFld=true;
    public static float fFld=-60.621F;
    public static short sFld=29427;
    public static volatile long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0704.lArrFld, -160L);
        FuzzerUtils.init(Test0704.iArrFld, 0);
        FuzzerUtils.init(Test0704.bArrFld, true);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        long l1=3405357100074787341L;
        int i6=0, i7=-196, i8=-54982, i9=-4;
        boolean b=true;
        float f1=-60.178F;

        if (true) {
            for (l1 = 3; l1 < 159; l1++) {
                Test0704.lArrFld[(int) (l1)] += i5;
                b = b;
            }
            try {
                i5 = i5;
                i5 -= (int) Test0704.instanceCount;
                i6 = i5;
                i6 = i6;
            }
            catch (ArithmeticException exc2) {
                for (f1 = 16; f1 < 328; ++f1) {
                    for (i8 = 1; i8 < 5; i8 += 3) {
                        Test0704.iArrFld[(int) (f1 - 1)] = i9;
                        i7 += (i8 * i8);
                        Test0704.instanceCount -= -2L;
                        Test0704.iArrFld = Test0704.iArrFld;
                    }
                }
            }
        } else if (b) {
            i7 ^= -1;
        }
        vMeth1_check_sum += i5 + l1 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i7 + i8 + i9;
    }

    public static void vMeth() {

        int i10=-8, i11=6, i12=0, i13=-2, i14=-6283;
        double d=-39.13361;
        float f2=-17.335F;
        byte by=14;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-23792);

        vMeth1(Test0704.iFld);
        sArr[(Test0704.iFld >>> 1) % N] <<= (short) 0;
        for (i10 = 6; i10 < 311; i10++) {
            Test0704.iFld *= (int) Test0704.instanceCount;
            Test0704.dFld *= i11;
            for (i12 = 1; i12 < 5; i12++) {
                Test0704.instanceCount = 0;
                Test0704.iFld -= i10;
                for (d = 2; d > 1; d -= 2) {
                    i11 = (int)f2;
                    if (Test0704.bFld) break;
                    i13 += (int)(d - by);
                    Test0704.iFld |= i14;
                    i11 -= (int)8L;
                    Test0704.bArrFld = Test0704.bArrFld;
                }
            }
        }
        vMeth_check_sum += i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) + i14 + Float.floatToIntBits(f2) + by +
            FuzzerUtils.checkSum(sArr);
    }

    public static long lMeth(long l, int i4) {

        int i15=-73;
        int i16=-7;
        int i17=48090;
        int i18=69;
        int i19=-44;
        int i20=184;
        int[][] iArr1 =new int[N][N];
        byte[] byArr =new byte[N];
        long[] lArr =new long[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(byArr, (byte)112);
        FuzzerUtils.init(lArr, -92L);
        FuzzerUtils.init(fArr, -83.251F);
        FuzzerUtils.init(iArr1, -103);

        byArr[(i4 >>> 1) % N] = (byte)lArr[(i4 >>> 1) % N];
        vMeth();
        for (i15 = 3; i15 < 146; i15++) {
            i16 = i15;
            Test0704.bFld = true;
            switch ((i15 % 2) + 54) {
            case 54:
                fArr[i15 + 1] *= -45950;
                if (Test0704.bFld) {
                    Test0704.iArrFld[i15 + 1] = (int) l;
                    i4 = i15;
                    for (i17 = 1; i17 < 11; ++i17) {
                        for (i19 = 1; i19 < 2; ++i19) {
                            l -= l;
                            Test0704.iFld = Test0704.iFld;
                            Test0704.iFld *= (int) Test0704.instanceCount;
                        }
                    }
                } else if (Test0704.bFld) {
                    i18 -= (int)l;
                } else {
                    iArr1 = iArr1;
                }
                break;
            case 55:
                l += (long)(2.64F + (i15 * i15));
                break;
            default:
                Test0704.instanceCount += (((i15 * Test0704.instanceCount) + Test0704.instanceCount) - Test0704.fFld);
            }
        }
        long meth_res = l + i4 + i15 + i16 + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-83;
        int i1=155;
        int i2=8;
        int i3=158;
        int i21=-13;
        int i22=13;
        int i23=-1;
        int[] iArr =new int[N];
        float f=-92.41F, f3=-8.904F;

        FuzzerUtils.init(iArr, -29079);

        for (i = 137; i > 6; i -= 3) {
            i1 += (int) (Test0704.instanceCount -= (i1++));
            switch (((i % 1) * 5) + 3) {
            case 6:
                for (i2 = 1; i2 < i; i2++) {
                    Test0704.instanceCount *= (long) (((--iArr[i + 1]) + (-110 - (-(Test0704.instanceCount * 176L)))) +
                            ((Test0704.instanceCount % ((long) (Test0704.dFld) | 1)) + (Test0704.instanceCount + i)));
                    f += ((long)i2 | (long)i2);
                    i3 = (int) (lMeth(Test0704.instanceCount, i) * -19514);
                    Test0704.iFld |= i2;
                    f += (i2 + Test0704.iFld);
                    i3 += (i2 * i2);
                    iArr = iArr;
                    i3 -= 11031;
                }
                Test0704.instanceCount *= Test0704.instanceCount;
            default:
                Test0704.instanceCount = i;
                f3 = 1;
                while (++f3 < 128) {
                    Test0704.lArrFld[i] = 3;
                    Test0704.lArrFld[(int) (f3)] = Test0704.instanceCount;
                    for (i21 = (int)(f3); 5 > i21; ++i21) {
                        Test0704.instanceCount = i22;
                        if (Test0704.bFld) {
                            Test0704.dFld -= i1;
                            Test0704.iFld += (i21 - i1);
                        } else {
                            Test0704.instanceCount += (long) f;
                            Test0704.fFld = -2.587F;
                            i22 = (int) Test0704.instanceCount;
                        }
                        Test0704.instanceCount = Test0704.sFld;
                        Test0704.instanceCount = Test0704.iFld;
                        Test0704.iFld += i21;
                        f += (((i21 * i21) + Test0704.iFld) - i2);
                        Test0704.iArrFld[i] >>= i23;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f f3 = " + i3 + "," + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0704.instanceCount Test0704.dFld Test0704.iFld = " + Test0704.instanceCount + "," +
                Double.doubleToLongBits(Test0704.dFld) + "," + Test0704.iFld);
        FuzzerUtils.out.println("Test0704.bFld Test0704.fFld Test0704.sFld = " + (Test0704.bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0704.fFld) + "," + Test0704.sFld);
        FuzzerUtils.out.println("Test0704.lArrFld Test0704.iArrFld Test0704.bArrFld = " + FuzzerUtils.checkSum(Test0704.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0704.iArrFld) + "," + FuzzerUtils.checkSum(Test0704.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0704 _instance = new Test0704();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
