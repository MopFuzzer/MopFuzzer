// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0749 {

    public static final int N = 400;

    public static long instanceCount=174L;
    public static double dFld=2.36982;
    public static double[][] dArrFld =new double[N][N];

    static {
        FuzzerUtils.init(Test0749.dArrFld, 2.109765);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i5, int i6) {

        int i7=-39, i8=-130, i9=-6, i10=-59144;
        float f2=-116.654F;
        byte by=126;
        boolean b=true;

        for (i7 = 15; i7 < 269; i7++) {
            i6 &= (int) Test0749.instanceCount;
            Test0749.dFld *= f2;
            i5 = (int)l;
        }
        by = by;
        Test0749.dFld = i7;
        switch ((((i6 >>> 1) % 2) * 5) + 2) {
        case 8:
            for (i9 = 5; i9 < 133; i9++) {
                if (b) {
                    i8 *= i8;
                    by *= (byte)f2;
                } else if (b) {
                    i6 = (int)l;
                } else {
                    i5 >>>= (int) Test0749.instanceCount;
                    i5 += (((i9 * i5) + i7) - i7);
                    Test0749.dArrFld[i9 - 1][i9] -= f2;
                }
            }
            break;
        case 5:
            l = -125;
            break;
        }
        vMeth2_check_sum += l + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + by + i9 + i10 + (b ? 1 : 0);
    }

    public static void vMeth1(int i3, int i4) {

        int i11=-3;
        int i12=10;
        int i13=-10;
        int i14=9;
        int i15=-8;
        int[] iArr1 =new int[N];
        float f3=-110.351F;
        boolean b1=true;

        FuzzerUtils.init(iArr1, 46848);

        iArr1[(i4 >>> 1) % N] -= i4;
        vMeth2(Test0749.instanceCount, 0, 52253);
        for (i11 = 6; i11 < 153; ++i11) {
            f3 = -22965;
        }
        iArr1[(i3 >>> 1) % N] <<= (int) Test0749.instanceCount;
        for (i13 = 14; 302 > i13; i13++) {
            i4 = i3;
            switch ((i13 % 5) + 11) {
            case 11:
                b1 = true;
                iArr1 = FuzzerUtils.int1array(N, (int)-10);
                i4 = (int) Test0749.instanceCount;
                break;
            case 12:
                i14 = 51816;
                b1 = b1;
                i3 = -11;
                break;
            case 13:
                i12 <<= i3;
            case 14:
            case 15:
                i14 += (i13 + i15);
                break;
            default:
                i4 += (i13 * i14);
            }
        }
        vMeth1_check_sum += i3 + i4 + i11 + i12 + Float.floatToIntBits(f3) + i13 + i14 + (b1 ? 1 : 0) + i15 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(float f1, int i1) {

        int i2=-5, i16=-4, i17=10, i18=-11213, i19=-6, i20=-1653, i21=-17252;
        boolean b2=true;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 4870729078842706023L);
        FuzzerUtils.init(bArr, false);

        i2 = 1;
        while (++i2 < 350) {
            vMeth1(i2, i1);
        }
        i16 = 290;
        while (--i16 > 0) {
            if (b2) {
                i1 -= i16;
                i1 += (int) Test0749.instanceCount;
                for (i17 = 1; i17 < 6; i17++) {
                    i19 = 1;
                    do {
                        i1 = i17;
                        f1 += (((i19 * i16) + i17) - Test0749.instanceCount);
                        i18 = 83;
                        lArr[i16] += i18;
                    } while (++i19 < 2);
                    for (i20 = i17; 2 > i20; i20++) {
                        bArr[i17 - 1] = b2;
                        Test0749.instanceCount = i21;
                    }
                }
                vMeth_check_sum += Float.floatToIntBits(f1) + i1 + i2 + i16 + i17 + i18 + i19 + i20 + i21 + (b2 ? 1 :
                    0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
                return;
            } else if (b2) {
                i21 |= i17;
            } else {
                Test0749.dFld -= i19;
                vMeth_check_sum += Float.floatToIntBits(f1) + i1 + i2 + i16 + i17 + i18 + i19 + i20 + i21 + (b2 ? 1 :
                    0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
                return;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i1 + i2 + i16 + i17 + i18 + i19 + i20 + i21 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr3) {

        float f=19.417F, f4=0.790F;
        int i=-15;
        int i22=2705;
        int i23=-12;
        int i24=2;
        int i25=34;
        int i26=-232;
        int i27=46441;
        int i28=-6;
        int[] iArr2 =new int[N];
        byte by1=-62;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr2, 239);
        FuzzerUtils.init(lArr1, -7L);

        for (f = 137; f > 6; --f) {
            i = (int) Test0749.instanceCount;
            i += ((++i) * ((i + i) * (i + i)));
            vMeth(f, i);
            iArr2[(int) (f)] = (int) Test0749.instanceCount;
            try {
                i = (i / -39786);
                i = (i / 556614118);
                i = (-200 % i);
            } catch (ArithmeticException a_e) {}
            i = i;
            Test0749.instanceCount &= i;
        }
        i -= (int) Test0749.instanceCount;
        i = i;
        f4 *= i;
        for (i22 = 2; i22 < 157; ++i22) {
            iArr2[i22] <<= (int) Test0749.instanceCount;
            by1 = (byte) Test0749.instanceCount;
        }
        iArr2[(i23 >>> 1) % N] = i;
        for (i24 = 11; i24 < 247; ++i24) {
            iArr2[i24] = by1;
            i25 <<= (int) Test0749.instanceCount;
            for (i26 = 3; i26 < 106; i26++) {
                switch (((i22 >>> 1) % 10) + 104) {
                case 104:
                    lArr1[i26 - 1] <<= 51;
                    Test0749.dFld = Test0749.instanceCount;
                    i -= (int)f;
                    break;
                case 105:
                    i27 -= (int) Test0749.dFld;
                    Test0749.instanceCount <<= Test0749.instanceCount;
                    switch (((i26 % 1) * 5) + 101) {
                    case 102:
                        i27 += (i26 ^ i26);
                        i -= (int) Test0749.instanceCount;
                        i += (((i26 * i) + i24) - i23);
                        break;
                    }
                    iArr2[i26 + 1] = i22;
                    break;
                case 106:
                    f4 = i23;
                    break;
                case 107:
                    try {
                        iArr2[i24 - 1] = (i % i26);
                        i27 = (i23 / i22);
                        i28 = (1 % iArr2[i24 + 1]);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 108:
                    i25 += (int) Test0749.dFld;
                    break;
                case 109:
                    i27 = (int)-122L;
                case 110:
                    i += i26;
                    break;
                case 111:
                    i += 45;
                    break;
                case 112:
                    Test0749.dArrFld[i26 - 1][i26 + 1] /= (i28 | 1);
                    break;
                case 113:
                    iArr2[i26 + 1] -= (int)70.214F;
                    break;
                default:
                    lArr1[i26 + 1] -= i26;
                }
            }
        }

        FuzzerUtils.out.println("f i f4 = " + Float.floatToIntBits(f) + "," + i + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i22 i23 by1 = " + i22 + "," + i23 + "," + by1);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr2 = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0749.instanceCount Test0749.dFld Test0749.dArrFld = " + Test0749.instanceCount + "," +
                Double.doubleToLongBits(Test0749.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0749.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0749 _instance = new Test0749();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
