// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0979 {

    public static final int N = 400;

    public static volatile long instanceCount=107L;
    public static float fFld=2.582F;
    public static short sFld=-5278;
    public static short sFld1=-11347;
    public static double dFld=-49.125707;
    public volatile boolean bFld=true;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0979.lArrFld, 0L);
        FuzzerUtils.init(Test0979.iArrFld, 227);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1) {

        int i7=52260;
        int i8=55748;
        int i9=-203;
        int i10=80;
        int i11=9;
        int i12=8;
        int i13=99;
        int[][] iArr =new int[N][N];
        byte by=-51;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 31.649F);
        FuzzerUtils.init(iArr, 5);

        i7 = Test0979.sFld;
        Test0979.sFld1 -= (short) -146;
        Test0979.dFld -= l1;
        fArr[(143 >>> 1) % N] += i7;
        i8 = 1;
        while (++i8 < 291) {
            i7 ^= i8;
            for (i9 = 6; i9 > 1; --i9) {
                Test0979.lArrFld[i8 - 1] = i9;
                i11 <<= (int) Test0979.instanceCount;
                i10 -= by;
                iArr[i9 + 1][i9 - 1] ^= i11;
                for (i12 = 1; i12 < 2; ++i12) {
                    i13 = i10;
                    i13 = i10;
                    Test0979.lArrFld = FuzzerUtils.long1array(N, (long) 3282931837L);
                }
            }
        }
        vMeth_check_sum += l1 + i7 + i8 + i9 + i10 + i11 + by + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public float fMeth(long l, int i6) {

        float f=6.120F;
        float f1=0.502F;
        float[] fArr1 =new float[N];
        int i14=7;
        int i15=14;
        int i16=-2;
        int[] iArr1 =new int[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr1, 43);
        FuzzerUtils.init(dArr, 41.27784);
        FuzzerUtils.init(fArr1, -116.275F);

        vMeth(Test0979.instanceCount);
        iArr1[(i6 >>> 1) % N] -= i6;
        f = 1;
        do {
            dArr[(int) (f + 1)] = Test0979.instanceCount;
        } while (++f < 131);
        for (i14 = 5; i14 < 397; ++i14) {
            i6 += (i14 * i14);
            if (bFld) {
                Test0979.lArrFld[i14 + 1] = i14;
                for (f1 = 1; f1 < 4; f1++) {
                    Test0979.fFld = l;
                    i6 = i6;
                    Test0979.lArrFld = Test0979.lArrFld;
                }
            } else if (bFld) {
                iArr1[i14 + 1] *= 21265;
                i6 = i6;
                fArr1[i14 + 1] += 16451;
            } else if (bFld) {
                Test0979.instanceCount -= l;
            } else {
                i16 += (int)l;
            }
        }
        long meth_res = l + i6 + Float.floatToIntBits(f) + i14 + i15 + Float.floatToIntBits(f1) + i16 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth() {

        int i1=1, i2=-240, i3=-78, i4=6542, i5=-59679, i17=-25106;

        i1 = 1;
        while (++i1 < 127) {
            for (i2 = 1; i2 < 12; i2++) {
                for (i4 = 1; 2 > i4; ++i4) {
                    Test0979.fFld = fMeth(Test0979.instanceCount, i1);
                    i5 -= (int) Test0979.instanceCount;
                    Test0979.sFld1 += (short) (((i4 * i4) + i4) - i2);
                    i5 += (((i4 * i5) + Test0979.instanceCount) - i1);
                    if (bFld) break;
                    switch (((i1 % 6) * 5) + 21) {
                    case 47:
                        Test0979.dFld -= i4;
                        break;
                    case 38:
                        i3 -= 149;
                        if (bFld) continue;
                        i3 &= i3;
                        break;
                    case 46:
                        i5 *= i17;
                        Test0979.iArrFld[i2] *= (int) Test0979.dFld;
                    case 44:
                        i3 -= i4;
                    case 34:
                        Test0979.instanceCount += (9L + (i4 * i4));
                        break;
                    case 32:
                        Test0979.instanceCount <<= -6366;
                        break;
                    default:
                        Test0979.iArrFld[i2] *= (int) Test0979.instanceCount;
                    }
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-94, i18=56727, i19=-8, i20=-13, i21=-26348, i22=-95, i23=-9, i24=97;
        float f2=2.371F;
        double d=1.120676;
        byte by1=54;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        i <<= (iMeth() - i);
        for (f2 = 7; f2 < 285; ++f2) {
            Test0979.lArrFld[(int) (f2 + 1)] += Test0979.instanceCount;
            i18 <<= (int)-1814671070L;
            Test0979.dFld *= Test0979.instanceCount;
            i19 = 1;
            while (++i19 < 90) {
                for (d = 1; d < 1; d++) {
                    i18 >>= i;
                    Test0979.iArrFld[i19 - 1] >>= i20;
                    Test0979.instanceCount >>= i;
                    Test0979.fFld = f2;
                    Test0979.iArrFld[(int) (d - 1)] += i18;
                    Test0979.instanceCount = i19;
                    i18 = i20;
                    Test0979.instanceCount = i20;
                    i += (int) ((long) d | Test0979.instanceCount);
                }
                i18 += i;
            }
            Test0979.dFld = 32482;
            for (i21 = 1; i21 < 90; i21++) {
                i = -63;
                for (i23 = 1; i23 < 2; i23++) {
                    Test0979.fFld = Test0979.instanceCount;
                    i20 += (int)112L;
                    bArr[i21] = bFld;
                    bFld = bFld;
                    i22 += i23;
                    by1 = (byte)-3446;
                    i += i24;
                    i += by1;
                    if (bFld) break;
                }
            }
        }

        FuzzerUtils.out.println("i f2 i18 = " + i + "," + Float.floatToIntBits(f2) + "," + i18);
        FuzzerUtils.out.println("i19 d i20 = " + i19 + "," + Double.doubleToLongBits(d) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 by1 bArr = " + i24 + "," + by1 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0979.instanceCount Test0979.fFld Test0979.sFld = " + Test0979.instanceCount + "," +
                Float.floatToIntBits(Test0979.fFld) + "," + Test0979.sFld);
        FuzzerUtils.out.println("Test0979.sFld1 Test0979.dFld bFld = " + Test0979.sFld1 + "," + Double.doubleToLongBits(Test0979.dFld)
            + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0979.lArrFld Test0979.iArrFld = " + FuzzerUtils.checkSum(Test0979.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0979.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0979 _instance = new Test0979();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
