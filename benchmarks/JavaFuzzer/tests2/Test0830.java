// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0830 {

    public static final int N = 400;

    public static long instanceCount=-8302069311876796055L;
    public static boolean bFld=true;
    public static byte byFld=68;
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0830.iArrFld, 1);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-171, i7=0, i8=-63990, i9=153, i10=-7, i11=12, i12=52620;
        boolean b=false;
        float f2=-1.9F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1414131956L);

        for (i6 = 11; i6 < 233; ++i6) {
            i7 += i7;
            i8 = 1;
            do {
                if (b) break;
                for (i9 = 1; i9 < 1; i9++) {
                    i10 >>= (int) Test0830.instanceCount;
                    i7 -= i10;
                    Test0830.iArrFld[i6][i9 + 1] += (int) f2;
                    lArr[i8 - 1] -= -248L;
                }
                Test0830.instanceCount += (-31149 + (i8 * i8));
                i7 >>= (int) Test0830.instanceCount;
            } while (++i8 < 7);
            for (i11 = 1; i11 < 7; i11++) {
                i7 = (int) Test0830.instanceCount;
            }
            i12 += i10;
            if (i9 != 0) {
                vMeth1_check_sum += i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 +
                    FuzzerUtils.checkSum(lArr);
                return;
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 +
            FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth() {

        float f3=1.654F;
        int i13=-39;
        byte by=86;

        vMeth1();
        f3 -= 89L;
        i13 -= (int) Test0830.instanceCount;
        Test0830.instanceCount >>= i13;
        i13 -= i13;
        by -= (byte)i13;
        long meth_res = Float.floatToIntBits(f3) + i13 + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(float f1, int i1) {

        int i2=-46650, i3=-93, i4=-6880, i5=-131, i14=5857, i15=-183;
        short s=15192;

        try {
            for (i2 = 17; i2 < 339; ++i2) {
                for (i4 = 5; i4 > 1; i4 -= 2) {
                    i1 = (i1--);
                    f1 *= (((Test0830.instanceCount + i4) - lMeth()) - 5792);
                    i5 += (int)(-2.323F + (i4 * i4));
                    for (i14 = 1; i14 < 3; i14++) {
                        byte by1=71;
                        Test0830.instanceCount |= s;
                        i15 >>= i15;
                        s = (short)f1;
                        Test0830.iArrFld[i2 - 1][i2 - 1] = 176;
                        i15 = -27;
                        by1 = (byte) Test0830.instanceCount;
                        Test0830.iArrFld[i4][i4 - 1] *= i14;
                        i3 += i14;
                    }
                }
            }
        }
        catch (NegativeArraySizeException exc1) {
            Test0830.instanceCount = i4;
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i1 + i2 + i3 + i4 + i5 + i14 + i15 + s;
    }

    public void mainTest(String[] strArr1) {

        int i=5;
        int i16=-26409;
        int i17=-6;
        int i18=88;
        int i19=7;
        int i20=-3;
        int i21=-13;
        int i22=-2;
        int[] iArr =new int[N];
        float f=96.792F;
        float[] fArr =new float[N];
        double d=-2.11027;
        double d1=-19.11113;
        double[] dArr =new double[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, 46458);
        FuzzerUtils.init(fArr, -2.82F);
        FuzzerUtils.init(byArr, (byte)-83);
        FuzzerUtils.init(dArr, 0.78707);

        iArr[(i >>> 1) % N] = (int) (Test0830.instanceCount--);
        Test0830.instanceCount = (long) ((-(-(i - i))) - ((f * i) + fArr[(i >>> 1) % N]));
        vMeth(18.580F, i);
        for (d = 1; d < 122; ++d) {
            for (i17 = (int)(d); i17 < 207; ++i17) {
                byArr[(int)(d)] = (byte)i18;
                Test0830.instanceCount %= (Test0830.instanceCount | 1);
                i16 = (int) Test0830.instanceCount;
                Test0830.iArrFld[i17 + 1][(int) (d)] = (int) 5835558538698160374L;
                Test0830.bFld = Test0830.bFld;
                i16 = (int) Test0830.instanceCount;
                Test0830.instanceCount = i;
            }
            for (d1 = 11; d1 < 207; d1++) {
                Test0830.instanceCount = i16;
                dArr[(int)(d)] += i16;
                i20 = 1;
                while (++i20 < 2) {
                    i16 += i17;
                    i19 = (int) Test0830.instanceCount;
                }
                if (Test0830.bFld) continue;
                i += (int)d1;
                f += (float)d1;
                i /= (int)((long)(f) | 1);
                for (i21 = 1; i21 < 2; i21++) {
                    i = -182;
                    Test0830.iArrFld[(int) (d1)][(int) (d + 1)] = (int) Test0830.instanceCount;
                    switch (((i19 >>> 1) % 3) + 91) {
                    case 91:
                        Test0830.instanceCount += Test0830.byFld;
                        if (Test0830.bFld) break;
                        iArr[(int)(d)] = i22;
                    case 92:
                        Test0830.instanceCount >>= Test0830.instanceCount;
                        break;
                    case 93:
                        i18 = (int) Test0830.instanceCount;
                        break;
                    default:
                        f = Test0830.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f d = " + i + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("d1 i19 i20 = " + Double.doubleToLongBits(d1) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 iArr = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr byArr dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(byArr) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0830.instanceCount Test0830.bFld Test0830.byFld = " + Test0830.instanceCount + "," + (Test0830.bFld ?
                1 : 0) + "," + Test0830.byFld);
        FuzzerUtils.out.println("Test0830.iArrFld = " + FuzzerUtils.checkSum(Test0830.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0830 _instance = new Test0830();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
