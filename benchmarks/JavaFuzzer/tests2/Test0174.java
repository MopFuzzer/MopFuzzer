// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0174 {

    public static final int N = 400;

    public static long instanceCount=-86342923L;
    public short sFld=-22717;
    public static byte byFld=-38;
    public static double dFld=-115.62864;
    public int iFld=143;
    public static float[][] fArrFld =new float[N][N];
    public volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0174.fArrFld, 53.448F);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        long l=8L;
        int i18=43524;
        int i19=0;
        int i20=-11;
        int i21=0;
        int[] iArr1 =new int[N];
        float f3=1.877F;

        FuzzerUtils.init(iArr1, -4);

        l = 1;
        while (++l < 258) {
            boolean b=false;
            i18 += i18;
            i18 = -34378;
            Test0174.dFld *= -29431;
            if (b) continue;
        }
        i19 = 1;
        do {
            f3 = i18;
            i18 |= i18;
            for (i20 = i19; i20 < 5; ++i20) {
                f3 += (((i20 * i19) + i20) - i20);
                i18 |= i20;
                i21 += (((i20 * l) + i18) - i18);
                iArr1[i19 - 1] |= -34;
                i18 = (int)l;
                try {
                    i18 = (i18 / 174);
                    i18 = (i18 / i19);
                    i18 = (58 % i20);
                } catch (ArithmeticException a_e) {}
            }
        } while (++i19 < 308);
        long meth_res = l + i18 + i19 + Float.floatToIntBits(f3) + i20 + i21 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(short s1) {

        int i10=-41;
        int i11=11;
        int i13=33535;
        int i14=-19798;
        int i15=-228;
        int i16=18407;
        int i17=-34;
        int[] iArr =new int[N];
        float f2=-127.889F;
        double d2=2.56813;

        FuzzerUtils.init(iArr, 182);

        for (i10 = 3; i10 < 149; i10++) {
            Test0174.instanceCount <<= -2196565818L;
        }
        for (int i12 : iArr) {
            i13 = 1;
            do {
                i11 = (i11++);
                i11 = i11;
                for (i14 = 1; i14 < 1; ++i14) {
                    iArr[i14] -= (int)f2;
                }
                f2 -= (iArr[i13 + 1] - ((i11 - i13) << (-1L + (++Test0174.instanceCount))));
                Test0174.byFld ^= (byte) Test0174.instanceCount;
                for (i16 = 1; i16 < 1; i16 += 3) {
                    d2 += (Test0174.byFld <<= (byte) (-i15));
                    d2 = (-43 - (-(i10 * i11)));
                    Test0174.instanceCount <<= -19963L;
                    Test0174.instanceCount += Math.abs(Math.max(iMeth1(), i11));
                }
            } while (++i13 < 4);
        }
        long meth_res = s1 + i10 + i11 + i13 + i14 + i15 + Float.floatToIntBits(f2) + i16 + i17 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f1, int i4, int i5) {

        double d1=-32.14230;
        byte by1=-50;
        int i6=41217, i7=-14995, i8=-43240, i9=7;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-18300);

        f1 += (float) (((i4 &= (int) Test0174.instanceCount) * (i5 + i5)) + ((d1 + i4) - (i5 + by1)));
        for (i6 = 372; i6 > 5; i6 -= 2) {
            i4 += (i6 + i5);
            i7 += (i6 | i5);
            for (i8 = 1; i8 < 9; i8++) {
                short s=29029;
                i4 += (i8 * i7);
                if (lMeth(s) < i5) {
                    s += (short)(((i8 * f1) + i7) - i4);
                    try {
                        i4 = (i5 % -159);
                        i9 = (i6 / i8);
                        i4 = (i7 % -1800162401);
                    } catch (ArithmeticException a_e) {}
                } else {
                    if (i6 != 0) {
                    }
                    i5 += (int) Test0174.instanceCount;
                    i7 <<= i9;
                }
                Test0174.instanceCount += i7;
                Test0174.instanceCount = by1;
                sArr[i8] += (short)4611;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i4 + i5 + Double.doubleToLongBits(d1) + by1 + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i1=-123, i2=-43246, i3=-1, i22=-48307, i23=21508, i24=7, i25=-9, i26=-13, i27=-203, i28=110, i29=204,
            i30=2;
        byte by=-47;
        byte[] byArr =new byte[N];
        float f=0.900F;
        double d=-108.124433;
        long[] lArr =new long[N];
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(byArr, (byte)18);
        FuzzerUtils.init(lArr, -3763534457267830430L);
        FuzzerUtils.init(bArr, false);

        Test0174.fArrFld[(i >>> 1) % N][(i >>> 1) % N] += i;
        byArr[(i >>> 1) % N] = (byte)((++by) + ((i - f) - sFld));
        for (i1 = 8; i1 < 190; ++i1) {
            by += (byte)i1;
        }
        i3 = 192;
        while (--i3 > 0) {
            d -= i1;
            i2 = iMeth(f, i1, i1);
            i2 -= i2;
        }
        for (i22 = 6; i22 < 306; ++i22) {
            for (i24 = 1; i24 < 84; ++i24) {
                i = i22;
                d = f;
                Test0174.instanceCount += i24;
                i25 = 10;
            }
            i += i2;
            i %= (int)(i23 | 1);
            switch ((i22 % 9) + 123) {
            case 123:
                i23 += (((i22 * i25) + i24) - i23);
                Test0174.instanceCount += (219 + (i22 * i22));
                for (i26 = i22; 84 > i26; i26++) {
                    lArr[i22 + 1] >>= i27;
                    for (i28 = 1; i28 < 1; ++i28) {
                        Test0174.instanceCount += i3;
                        i25 += (((i28 * i25) + i23) - Test0174.instanceCount);
                        i25 -= i2;
                        Test0174.fArrFld[i28 + 1][i22 + 1] *= iFld;
                        bArr = bArr;
                        Test0174.instanceCount += (i28 * i28);
                        i29 = 7;
                        iArrFld[i22] += (int)f;
                    }
                }
            case 124:
                i23 = i3;
                break;
            case 125:
                iArrFld[i22 + 1] = i29;
                break;
            case 126:
                f = Test0174.instanceCount;
            case 127:
                i23 += i22;
                break;
            case 128:
                f -= 0.44F;
            case 129:
                Test0174.instanceCount += (((i22 * i24) + i26) - i30);
                break;
            case 130:
                Test0174.fArrFld[i22 + 1][i22 - 1] += i23;
                break;
            case 131:
                sFld = (short)i29;
            }
        }

        FuzzerUtils.out.println("i by f = " + i + "," + by + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("d i22 i23 = " + Double.doubleToLongBits(d) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 byArr lArr = " + i30 + "," + FuzzerUtils.checkSum(byArr) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0174.instanceCount sFld Test0174.byFld = " + Test0174.instanceCount + "," + sFld + "," +
                Test0174.byFld);
        FuzzerUtils.out.println("Test0174.dFld iFld Test0174.fArrFld = " + Double.doubleToLongBits(Test0174.dFld) + "," + iFld +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0174.fArrFld)));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0174 _instance = new Test0174();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
