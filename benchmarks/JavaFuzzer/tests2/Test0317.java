// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0317 {

    public static final int N = 400;

    public static long instanceCount=-26025L;
    public static long lFld=-54450L;
    public static double dFld=-85.90509;
    public boolean bFld=true;
    public static volatile byte byFld=57;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0317.iArrFld, 157);
        FuzzerUtils.init(Test0317.lArrFld, -246L);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5, long l1) {

        int i6=3, i7=-5, i8=-33716, i9=-213;
        boolean b=true;
        byte by1=-1;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 0.5209);

        for (i6 = 11; i6 < 241; ++i6) {
            dArr[i6] -= -30;
            l1 += i5;
            for (i8 = 1; i8 < 7; ++i8) {
                if (b) {
                    Test0317.iArrFld[i8] |= i9;
                }
                Test0317.instanceCount = by1;
                i9 += -153;
                Test0317.instanceCount *= i7;
                if (b) break;
                i5 %= (int)(i5 | 1);
                i7 *= (int) Test0317.instanceCount;
                Test0317.iArrFld[i6] -= (int) Test0317.instanceCount;
                if (b) break;
                by1 += (byte)i8;
            }
        }
        long meth_res = i5 + l1 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(byte by, long l, int i4) {


        i4 = (int)(((l + -236) * iMeth1(i4, l)) - i4);
        long meth_res = by + l + i4;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i3=5, i10=-59, i11=-90, i12=-240, i13=2, i14=253, i15=248;
        byte by2=-40;
        byte[] byArr =new byte[N];
        double d=0.30727;
        boolean b1=false, b2=true;

        FuzzerUtils.init(byArr, (byte)-57);

        i3 = iMeth(by2, Test0317.instanceCount, i3);
        Test0317.iArrFld[(i3 >>> 1) % N] -= (int) d;
        for (i10 = 8; i10 < 139; ++i10) {
            for (i12 = 1; i12 < 12; ++i12) {
                b1 = b2;
                i13 -= (int) Test0317.instanceCount;
                by2 >>>= (byte) Test0317.instanceCount;
            }
            Test0317.iArrFld[i10 - 1] ^= (int) Test0317.instanceCount;
            byArr = byArr;
            Test0317.lFld -= i13;
        }
        by2 <<= (byte) Test0317.lFld;
        Test0317.lFld += 14;
        for (i14 = 6; i14 < 139; i14++) {
            if (i13 != 0) {
            }
            i13 *= i15;
        }
        long meth_res = i3 + by2 + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) + (b2 ? 1 : 0) +
            i14 + i15 + FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=3, i1=-27496, i2=57, i16=-57127, i17=-9, i18=-1, i19=-92, i20=-4562, i21=-105;
        float f=51.505F, f1=-98.150F;

        for (i = 9; i < 146; i++) {
            i1 *= (int)f;
            f -= (--f);
            i2 *= (int) (((i1--) - i1) * (-Math.min(Test0317.instanceCount, Test0317.instanceCount)));
        }
        Test0317.iArrFld[(i2 >>> 1) % N] ^= (int) lMeth();
        f1 = 1;
        while (++f1 < 123) {
            Test0317.instanceCount *= (long) Test0317.dFld;
            for (i16 = 204; f1 < i16; i16--) {
                for (i18 = i16; i18 < 1; ++i18) {
                    Test0317.lFld *= i19;
                    Test0317.dFld -= i19;
                    i19 >>= i17;
                    Test0317.dFld -= Test0317.instanceCount;
                    Test0317.instanceCount >>>= i;
                    i1 += (((i18 * Test0317.lFld) + i1) - i18);
                    Test0317.lFld = (long) f;
                }
                if (bFld) continue;
                Test0317.lArrFld[i16 + 1] -= Test0317.instanceCount;
                for (i20 = 1; 1 > i20; ++i20) {
                    Test0317.instanceCount -= -197;
                    i2 += (int) Test0317.lFld;
                    switch (((i19 >>> 1) % 1) + 120) {
                    case 120:
                        Test0317.iArrFld[i16] <<= i;
                        switch ((i20 % 2) + 12) {
                        case 12:
                            if (bFld) continue;
                        case 13:
                            i1 += (i20 | i20);
                            switch ((int)(((f1 % 4) * 5) + 56)) {
                            case 71:
                                i17 *= (int)f1;
                            case 66:
                                i17 <<= (int) Test0317.lFld;
                                fArrFld[i20 + 1][i16 - 1] *= -56.226F;
                                break;
                            case 73:
                                i21 += Test0317.byFld;
                            case 62:
                                Test0317.lFld += i20;
                            }
                            break;
                        }
                        break;
                    default:
                        i1 = (int) Test0317.dFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 f1 i16 = " + i2 + "," + Float.floatToIntBits(f1) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 = " + i20 + "," + i21);

        FuzzerUtils.out.println("Test0317.instanceCount Test0317.lFld Test0317.dFld = " + Test0317.instanceCount + "," + Test0317.lFld +
                "," + Double.doubleToLongBits(Test0317.dFld));
        FuzzerUtils.out.println("bFld Test0317.byFld Test0317.iArrFld = " + (bFld ? 1 : 0) + "," + Test0317.byFld + "," +
                FuzzerUtils.checkSum(Test0317.iArrFld));
        FuzzerUtils.out.println("Test0317.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test0317.lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0317 _instance = new Test0317();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
