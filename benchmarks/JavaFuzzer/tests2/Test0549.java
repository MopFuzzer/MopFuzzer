// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0549 {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public int iFld=14;
    public float fFld=50.186F;
    public static float fFld1=-104.5F;
    public static short sFld=-29633;
    public static double dFld=-82.88334;
    public byte byFld=-53;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0549.lArrFld, 140L);
        FuzzerUtils.init(Test0549.iArrFld, 4);
        FuzzerUtils.init(Test0549.fArrFld, -118.645F);
        FuzzerUtils.init(Test0549.byArrFld, (byte) -95);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i6, long l) {

        int i8=2103;
        int i9=45;
        int i10=933;
        int i11=10;
        int[] iArr1 =new int[N];
        byte by=-78;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr1, -27);
        FuzzerUtils.init(sArr, (short)-2390);

        i6 = i6;
        for (int i7 : iArr1) {
            i6 *= i7;
            switch (((-162 >>> 1) % 6) + 112) {
            case 112:
                for (i8 = 1; 4 > i8; ++i8) {
                    double d1=0.1038;
                    i9 -= i9;
                    by += (byte)d1;
                    for (i10 = 1; i10 < 2; i10++) {
                        i6 = i7;
                        i7 <<= (int) Test0549.instanceCount;
                        i11 = i7;
                        Test0549.lArrFld = Test0549.lArrFld;
                    }
                    i9 = (int)-97L;
                    l = i10;
                    i9 += (i8 * i8);
                }
            case 113:
                Test0549.fFld1 += i10;
                break;
            case 114:
                iArr1[(i9 >>> 1) % N] = (int)-7.68853;
                break;
            case 115:
                Test0549.sFld *= (short) i8;
            case 116:
                i6 += i8;
            case 117:
                i6 >>= i8;
                break;
            default:
                if (i10 != 0) {
                }
            }
        }
        long meth_res = i6 + l + i8 + i9 + by + i10 + i11 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i2, int i3) {

        double d=-2.24441;
        int i4=-52592, i5=-1, i12=-118, i13=37505, i14=18, i15=-3, i16=-228, i17=169;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.568F);

        i3 += (int)(++d);
        for (i4 = 9; 149 > i4; ++i4) {
            fMeth(i4, Test0549.instanceCount);
        }
        for (i12 = 3; 250 > i12; ++i12) {
            fArr = fArr;
            i14 = 1;
            do {
                Test0549.instanceCount = i4;
            } while (++i14 < 7);
            i3 += i12;
            switch (((i12 % 4) * 5) + 35) {
            case 47:
                i15 = 7;
                do {
                    d *= d;
                    for (i16 = 1; i16 < 1; i16++) {
                        Test0549.instanceCount += i16;
                        Test0549.instanceCount *= (long) Test0549.fFld1;
                        i3 += (i16 - i16);
                    }
                } while (--i15 > 0);
                break;
            case 54:
                Test0549.instanceCount = (long) Test0549.fFld1;
            case 36:
                Test0549.instanceCount += (((i12 * Test0549.fFld1) + Test0549.instanceCount) - Test0549.instanceCount);
                break;
            case 46:
                Test0549.instanceCount += i16;
            }
        }
        vMeth1_check_sum += i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i12 + i13 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1) {

        int i18=81;
        int i19=15;
        int i20=2;
        int i21=-109;
        int[] iArr2 =new int[N];
        int[][] iArr3 =new int[N][N];
        int[] iArr4 =new int[N];
        double d2=-40.128081;
        double[] dArr =new double[N];
        boolean b=true;
        boolean[] bArr =new boolean[N];
        byte by1=59;

        FuzzerUtils.init(iArr2, -61170);
        FuzzerUtils.init(iArr3, 5155);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, -1.66301);
        FuzzerUtils.init(iArr4, -7772);

        switch ((((i1 - i) >>> 1) % 2) + 37) {
        case 37:
            Test0549.fFld1 -= -4210390614L;
            vMeth1(i1, i);
            i18 = 1;
            do {
                switch (i18 + 32) {
                case 32:
                    i19 = 1;
                    do {
                        i1 *= (int) Test0549.instanceCount;
                    } while (++i19 < 5);
                    break;
                case 33:
                case 34:
                    i1 *= 30670;
                    for (i20 = 1; i20 < 5; ++i20) {
                        switch (((i18 >>> 1) % 4) + 26) {
                        case 26:
                            i = (int) Test0549.instanceCount;
                            break;
                        case 27:
                            d2 += i19;
                            break;
                        case 28:
                            i *= i19;
                            i21 -= (int) Test0549.fFld1;
                            Test0549.instanceCount <<= i20;
                            break;
                        case 29:
                            Test0549.instanceCount = i19;
                        }
                    }
                    break;
                case 35:
                    if (b) break;
                case 36:
                    Test0549.iArrFld[i18 - 1] = (int) Test0549.fFld1;
                    break;
                case 37:
                    d2 *= Test0549.instanceCount;
                case 38:
                    try {
                        iArr2[i18] = (739949028 % iArr2[(i18 >>> 1) % N]);
                        i1 = (i20 / -9037);
                        Test0549.iArrFld[i18] = (i21 % i);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 39:
                    i1 = (int)16L;
                    break;
                case 40:
                    i21 <<= i;
                    break;
                case 41:
                    i21 >>= i18;
                    break;
                case 42:
                    i1 = i;
                case 43:
                    if (b) continue;
                    break;
                case 44:
                    Test0549.instanceCount *= i19;
                case 45:
                    Test0549.iArrFld[i18 - 1] -= -7;
                    break;
                case 46:
                    iArr2[i18] >>>= 234;
                    break;
                case 47:
                    i21 *= i19;
                case 48:
                    by1 *= (byte)i19;
                    break;
                case 49:
                case 50:
                    Test0549.fFld1 -= i20;
                    break;
                case 51:
                    i = -101;
                    break;
                case 52:
                    Test0549.fFld1 += (i18 + i);
                    break;
                case 53:
                    Test0549.instanceCount -= i1;
                    break;
                case 54:
                    d2 = i;
                case 55:
                    i -= i19;
                    break;
                case 56:
                    i -= i18;
                    break;
                case 57:
                    iArr2[i18 - 1] = (int)d2;
                    break;
                case 58:
                    Test0549.fFld1 += (i18 + i21);
                    break;
                case 59:
                    iArr3 = iArr3;
                    break;
                case 60:
                    Test0549.instanceCount -= Test0549.instanceCount;
                    break;
                case 61:
                    i1 += (i18 | i19);
                    break;
                case 62:
                    i += i18;
                    break;
                case 63:
                    Test0549.fFld1 += (i18 * i21);
                    break;
                case 64:
                    i1 += (((i18 * i1) + i21) - i18);
                    break;
                case 65:
                    Test0549.instanceCount = -54973;
                    break;
                case 66:
                    i21 += (((i18 * by1) + i) - i19);
                    break;
                case 67:
                    i21 += (int) Test0549.fFld1;
                case 68:
                    i1 <<= 1;
                    break;
                case 69:
                    Test0549.lArrFld = Test0549.lArrFld;
                case 70:
                    Test0549.instanceCount = -111L;
                case 71:
                    iArr3[i18 + 1][i18] = (int) Test0549.fFld1;
                    break;
                case 72:
                    bArr[i18] = b;
                    break;
                case 73:
                    i21 = i1;
                    break;
                case 74:
                    Test0549.fFld1 -= Test0549.fFld1;
                    break;
                case 75:
                    i += i18;
                    break;
                case 76:
                    i1 += i;
                case 77:
                    i += (((i18 * i19) + Test0549.fFld1) - Test0549.sFld);
                    break;
                case 78:
                    Test0549.instanceCount += (long) Test0549.fFld1;
                    break;
                case 79:
                    i = (int) Test0549.instanceCount;
                    break;
                case 80:
                    i21 += i18;
                    break;
                case 81:
                    iArr3[i18][i18 - 1] += -15;
                    break;
                case 82:
                case 83:
                    Test0549.instanceCount <<= Test0549.sFld;
                    break;
                case 84:
                    d2 = 70.46595;
                    break;
                case 85:
                    Test0549.fFld1 += Test0549.sFld;
                    break;
                case 86:
                    i = 8;
                    break;
                case 87:
                    i1 = i21;
                    break;
                case 88:
                    i1 = 2;
                    break;
                case 89:
                    i21 >>= i19;
                    break;
                case 90:
                    Test0549.fFld1 -= Test0549.instanceCount;
                    break;
                case 91:
                    try {
                        i = (i1 % -42004);
                        i1 = (i20 / 18652);
                        i = (-33313 / i19);
                    } catch (ArithmeticException a_e) {}
                case 92:
                    i += i18;
                    break;
                case 93:
                    dArr[i18 - 1] -= i20;
                    break;
                case 94:
                    i = i1;
                    break;
                case 95:
                    i += i;
                    break;
                case 96:
                    i1 >>= i;
                case 97:
                    iArr4[i18 - 1] = i21;
                    break;
                case 98:
                    i ^= i;
                    break;
                case 99:
                    i21 = i19;
                    break;
                case 100:
                    i21 >>>= i18;
                case 101:
                    Test0549.instanceCount = Test0549.instanceCount;
                    break;
                default:
                    i += (((i18 * i18) + Test0549.instanceCount) - i18);
                }
            } while (++i18 < 327);
            break;
        case 38:
            i1 = 5;
            break;
        default:
            i1 += -120;
        }
        vMeth_check_sum += i + i1 + i18 + i19 + i20 + i21 + Double.doubleToLongBits(d2) + (b ? 1 : 0) + by1 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(bArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr4);
    }

    public void mainTest(String[] strArr1) {

        float f1=18.567F, f2=0.114F;
        int i23=4;
        int i24=-189;
        int i25=-41977;
        int i26=253;
        int i27=-6010;
        int i28=33;
        int i29=16227;
        int[] iArr =new int[N];
        double[] dArr1 =new double[N];
        boolean[][] bArr1 =new boolean[N][N];

        FuzzerUtils.init(iArr, 133);
        FuzzerUtils.init(dArr1, -2.17513);
        FuzzerUtils.init(bArr1, true);

        Test0549.lArrFld[(iFld >>> 1) % N] = (long) fFld;
        iFld &= iArr[(iFld >>> 1) % N];
        vMeth(127, iFld);
        iArr[(-19205 >>> 1) % N] = (int)fFld;
        switch (((iFld >>> 1) % 5) + 70) {
        case 70:
            fFld *= -9338;
            iFld -= (int) Test0549.instanceCount;
            iFld = -5494;
            Test0549.dFld = Test0549.instanceCount;
        case 71:
            iFld = (int) Test0549.dFld;
            f1 = 1;
            while (++f1 < 222) {
                iFld = 8;
                iFld = 7;
            }
            break;
        case 72:
            for (i23 = 1; i23 < 130; ++i23) {
                i24 <<= iFld;
                iFld += i23;
                Test0549.instanceCount += i23;
            }
            break;
        case 73:
            for (i25 = 1; i25 < 137; i25++) {
                for (i27 = 7; i27 < 184; ++i27) {
                    i28 += (i27 ^ Test0549.instanceCount);
                    Test0549.iArrFld[i27] -= (int) Test0549.instanceCount;
                    Test0549.instanceCount -= i24;
                    Test0549.lArrFld = Test0549.lArrFld;
                    i26 += (((i27 * Test0549.sFld) + iFld) - i26);
                    for (f2 = i27; f2 < 2; f2++) {
                        switch ((int)(((f2 % 1) * 5) + 24)) {
                        case 28:
                            Test0549.iArrFld[(int) (f2 + 1)] -= i28;
                            bArr1[i27][i27] = true;
                            byFld += (byte)i27;
                        }
                        fFld *= i24;
                    }
                }
            }
            break;
        case 74:
        default:
            iFld <<= i24;
        }

        FuzzerUtils.out.println("f1 i23 i24 = " + Float.floatToIntBits(f1) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 f2 i29 = " + i28 + "," + Float.floatToIntBits(f2) + "," + i29);
        FuzzerUtils.out.println("iArr dArr1 bArr1 = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test0549.instanceCount iFld fFld = " + Test0549.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0549.fFld1 Test0549.sFld Test0549.dFld = " + Float.floatToIntBits(Test0549.fFld1) + "," +
                Test0549.sFld + "," + Double.doubleToLongBits(Test0549.dFld));
        FuzzerUtils.out.println("byFld Test0549.lArrFld Test0549.iArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0549.lArrFld)
                + "," + FuzzerUtils.checkSum(Test0549.iArrFld));
        FuzzerUtils.out.println("Test0549.fArrFld Test0549.byArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0549.fArrFld)) + "," + FuzzerUtils.checkSum(Test0549.byArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0549 _instance = new Test0549();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
