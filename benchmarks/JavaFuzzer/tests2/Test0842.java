// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:51 2023
public class Test0842 {

    public static final int N = 400;

    public static volatile long instanceCount=9L;
    public static float fFld=9.750F;
    public int iFld=-241;
    public static double[] dArrFld =new double[N];
    public static float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0842.dArrFld, 0.116217);
        FuzzerUtils.init(Test0842.fArrFld, -50.10F);
        FuzzerUtils.init(Test0842.lArrFld, 5128594620964066962L);
        FuzzerUtils.init(Test0842.iArrFld, -45414);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3) {

        int i4=1, i5=1, i6=-176, i7=214, i8=-13, i9=31593;
        byte by=-39;
        short s=-18940;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -2829572092954415068L);

        Test0842.fFld += i3;
        Test0842.dArrFld[(i3 >>> 1) % N] -= -10;
        i3 = i3;
        for (i4 = 3; i4 < 252; i4++) {
            i5 >>>= i3;
            i5 >>>= (int) Test0842.instanceCount;
            by = (byte)i5;
            for (i6 = 1; i6 < 7; i6++) {
                Test0842.fArrFld[i4] -= s;
                s >>= (short)i7;
                Test0842.instanceCount = i4;
                for (i8 = 2; i8 > i4; i8 -= 2) {
                    i7 += (int)(115.375F + (i8 * i8));
                    Test0842.fFld = Test0842.fFld;
                    if (false) continue;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + by + i6 + i7 + s + i8 + i9 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i10=193;

        iMeth(i10);
        vMeth1_check_sum += i10;
    }

    public void vMeth(int i2, long l) {

        int i11=4, i12=101, i13=-12, i14=7, i15=-3, i16=-11;
        double d=2.54807;

        vMeth1();
        i2 += i2;
        for (i11 = 16; i11 < 261; i11++) {
            for (i13 = i11; i13 < 7; i13++) {
                i12 -= -171;
                for (i15 = i13; i15 < 1; ++i15) {
                    Test0842.instanceCount += (long) d;
                    Test0842.fFld *= i2;
                    l = 52;
                }
                switch ((i11 % 2) + 88) {
                case 88:
                    Test0842.fFld += i13;
                    i14 += (int)l;
                    i2 += i13;
                case 89:
                    i12 *= (int)-45658L;
                }
                d *= l;
            }
        }
        vMeth_check_sum += i2 + l + i11 + i12 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        int i=-218, i1=-5, i17=-22752, i18=-28, i19=170, i20=53585, i21=21319, i22=3743;
        double d1=0.33363;
        short s1=17449;
        byte by1=-121;
        byte[] byArr =new byte[N];
        boolean b=false;

        FuzzerUtils.init(byArr, (byte)111);

        for (i = 286; i > 13; --i) {
            vMeth(i, Test0842.instanceCount);
            for (i17 = i; 92 > i17; ++i17) {
                i18 -= (int)d1;
                i1 -= (int)d1;
            }
            i1 += (i ^ s1);
            Test0842.lArrFld[i - 1] += 29362;
            i1 += (i - i19);
            i19 += (((i * i18) + Test0842.instanceCount) - s1);
            i20 = 1;
            do {
                Test0842.lArrFld[i20 + 1] = 1;
                Test0842.fFld *= Test0842.instanceCount;
                Test0842.fArrFld[i20] = 61422L;
                i18 = (int) Test0842.instanceCount;
                i18 = i;
                Test0842.instanceCount = i;
                Test0842.instanceCount *= -114;
                for (i21 = 1; 1 < i21; i21--) {
                    Test0842.instanceCount = i22;
                    by1 += (byte)(((i21 * i19) + i22) - i1);
                    if (b) {
                        byArr[i20] <<= (byte)i21;
                        i19 *= -5;
                    }
                    i19 += i21;
                    try {
                        i22 = (Test0842.iArrFld[i] / -55443);
                        Test0842.iArrFld[i] = (-46 / i20);
                        i18 = (i1 / -259232392);
                    } catch (ArithmeticException a_e) {}
                    iFld &= i21;
                    i19 = i1;
                    i22 -= 9246;
                    Test0842.instanceCount |= i1;
                }
                iFld += (((i20 * s1) + i1) - i17);
            } while (++i20 < 92);
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 d1 s1 = " + i18 + "," + Double.doubleToLongBits(d1) + "," + s1);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 by1 b = " + i22 + "," + by1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0842.instanceCount Test0842.fFld iFld = " + Test0842.instanceCount + "," +
                Float.floatToIntBits(Test0842.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test0842.dArrFld Test0842.fArrFld Test0842.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0842.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0842.fArrFld)) + "," + FuzzerUtils.checkSum(Test0842.lArrFld));
        FuzzerUtils.out.println("Test0842.iArrFld = " + FuzzerUtils.checkSum(Test0842.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0842 _instance = new Test0842();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
