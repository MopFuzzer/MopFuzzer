// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0639 {

    public static final int N = 400;

    public static long instanceCount=210L;
    public static volatile int iFld=-50486;
    public static boolean bFld=true;
    public double dFld=-13.84562;
    public long lFld=320127482004319410L;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0639.iArrFld, 52682);
        FuzzerUtils.init(Test0639.lArrFld, 5424672338170501692L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static void vMeth(double d1, int i12, long l1) {

        int i13=1, i14=3242;

        for (i13 = 8; 179 > i13; i13++) {
            i12 += (++i12);
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i12 + l1 + i13 + i14;
    }

    public static boolean bMeth() {

        int i20=-20557, i21=40146, i22=67, i23=-33332, i24=25307;
        float f3=0.711F;
        float[] fArr2 =new float[N];
        double d2=1.13712;
        double[] dArr =new double[N];
        boolean b=true;

        FuzzerUtils.init(fArr2, 26.403F);
        FuzzerUtils.init(dArr, 13.59320);

        Test0639.iArrFld[(8622 >>> 1) % N] += Test0639.iFld;
        i20 -= i20;
        for (i21 = 19; i21 < 349; i21++) {
            Test0639.instanceCount = Test0639.iFld;
            i23 = 1;
            do {
                i22 = i22;
            } while (++i23 < 5);
            for (f3 = 1; f3 < 5; f3++) {
                Test0639.instanceCount >>= 5;
                Test0639.iFld <<= -148;
                i24 *= (int)8634380210597897738L;
                fArr2[(int) (f3 + 1)] += Test0639.iFld;
                dArr[(int)(f3)] = d2;
                Test0639.instanceCount = -41696;
            }
            if (b) break;
            Test0639.iFld += (((i21 * Test0639.instanceCount) + Test0639.instanceCount) - i20);
        }
        long meth_res = i20 + i21 + i22 + i23 + Float.floatToIntBits(f3) + i24 + Double.doubleToLongBits(d2) + (b ? 1 :
            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static double dMeth() {

        long l2=-103L;
        int i15=9092, i16=31630, i17=215, i18=921, i19=-83;
        float f2=123.630F;
        float f4=-76.710F;
        float[][] fArr1 =new float[N][N];
        short s=-8777;

        FuzzerUtils.init(fArr1, -1.484F);

        switch (((((int)(l2 * -40)) >>> 1) % 1) + 59) {
        case 59:
            Test0639.iFld += Test0639.iFld;
            for (i15 = 5; i15 < 263; i15++) {
                for (i17 = 1; i17 < 6; i17++) {
                    for (f2 = 1; f2 < 2; f2++) {
                        fArr1[i15 - 1][i15 + 1] -= (s + (f2 * 7));
                        s *= (short)i18;
                        if (bMeth()) {
                            i18 += (int) Math.abs((i15 + f2) + Test0639.iArrFld[i17 + 1]);
                        } else {
                            f4 += i18;
                        }
                        i18 += (int)(((f2 * i19) + f4) - i19);
                        i19 += 100;
                        Test0639.instanceCount >>>= i15;
                        Test0639.iFld = (int) l2;
                        if (i15 != 0) {
                        }
                    }
                }
            }
            break;
        }
        long meth_res = l2 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f2) + i19 + s + Float.floatToIntBits(f4) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(int i3, int i4, long l) {

        double d=-1.108500, d3=65.90757;
        int i5=22;
        int i6=220;
        int i7=13406;
        int i8=0;
        int i9=-1;
        int i10=3;
        int i11=-30932;
        int[] iArr =new int[N];
        float f1=-96.588F;
        float[] fArr =new float[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-109);
        FuzzerUtils.init(iArr, 51);
        FuzzerUtils.init(fArr, 30.402F);

        byArr[(i4 >>> 1) % N] = (byte)(iArr[(i4 >>> 1) % N] + ((i3 + i4) - (++fArr[(i4 >>> 1) % N])));
        switch ((((Math.abs(i4) >>> 1) % 2) * 5) + 86) {
        case 93:
            for (d = 16; d < 344; ++d) {
                for (i6 = 1; i6 < 5; ++i6) {
                    i5 += i6;
                }
                for (i8 = 1; i8 < 5; i8++) {
                    switch ((int)(((d % 9) * 5) + 93)) {
                    case 136:
                        i3 *= (int) ((Float.intBitsToFloat(i9) * Math.abs(Test0639.instanceCount)) - (--f1));
                        l ^= (++i7);
                        for (i10 = (int)(d); i10 < 2; i10++) {
                            switch (i10 % 4) {
                            case 0:
                                switch (((((int)(-(l >> i6))) >>> 1) % 2) + 75) {
                                case 75:
                                    vMeth(dMeth(), Test0639.iFld, Test0639.instanceCount);
                                    i7 += i10;
                                    Test0639.instanceCount += i10;
                                case 76:
                                    if (i3 != 0) {
                                    }
                                    break;
                                default:
                                    f1 += i9;
                                }
                                break;
                            case 1:
                                l = Test0639.iFld;
                                break;
                            case 2:
                                d3 -= l;
                                break;
                            case 3:
                                l = l;
                                break;
                            default:
                                if (i7 != 0) {
                                }
                            }
                        }
                    case 105:
                    case 137:
                        Test0639.iFld = (int) l;
                    case 134:
                        Test0639.bFld = Test0639.bFld;
                        break;
                    case 122:
                    case 114:
                        i4 = i10;
                    case 118:
                        f1 = -65402;
                        break;
                    case 133:
                        Test0639.lArrFld[i8 + 1] = -136;
                        break;
                    case 103:
                        l -= (long)1.644F;
                    default:
                        iArr[(int)(d)] >>= i11;
                    }
                }
            }
            break;
        case 92:
            iArr[(-40614 >>> 1) % N] -= i4;
        }
        long meth_res = i3 + i4 + l + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) +
            i10 + i11 + Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=13, i1=126, i2=102, i25=-39806, i26=125, i27=12, i28=8;
        float f=-74.765F;
        float[][] fArr3 =new float[N][N];
        double[][] dArr1 =new double[N][N];

        FuzzerUtils.init(dArr1, 1.103812);
        FuzzerUtils.init(fArr3, 0.294F);

        for (i = 2; i < 286; ++i) {
            i2 = 1;
            while (++i2 < 89) {
                f *= (iMeth(Test0639.iFld, -31, Test0639.instanceCount) | 22601);
                for (i25 = 1; 1 < i25; --i25) {
                    if (true) {
                        Test0639.iFld = -13;
                        Test0639.iArrFld[i25 + 1] -= (int) Test0639.instanceCount;
                        Test0639.instanceCount *= i2;
                    } else if (true) {
                        Test0639.iArrFld[i25] += i2;
                        Test0639.bFld = Test0639.bFld;
                    }
                    Test0639.lArrFld[i2] = Test0639.instanceCount;
                    i1 *= (int)f;
                    Test0639.lArrFld[i25 + 1] *= (long) -2.542F;
                    Test0639.bFld = Test0639.bFld;
                }
                Test0639.iArrFld[(Test0639.iFld >>> 1) % N] += i25;
                for (i27 = 1; i27 < 1; ++i27) {
                    byte by=119;
                    Test0639.instanceCount += (i27 * i1);
                    i26 |= i27;
                    switch ((i27 % 6) + 88) {
                    case 88:
                        dArr1[i - 1] = dArr1[i27];
                        i1 = (int)dFld;
                        by += (byte)i27;
                        Test0639.instanceCount = i26;
                        break;
                    case 89:
                        i1 += (135 + (i27 * i27));
                        i1 += (i27 * Test0639.instanceCount);
                        break;
                    case 90:
                        i1 += i28;
                        fArr3 = fArr3;
                        i26 *= (int) Test0639.instanceCount;
                        break;
                    case 91:
                        Test0639.iFld >>= 211;
                        i28 -= (int) Test0639.instanceCount;
                    case 92:
                        Test0639.iArrFld[i27 - 1] = 18267;
                        break;
                    case 93:
                        f = lFld;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f i25 i26 = " + Float.floatToIntBits(f) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 dArr1 = " + i27 + "," + i28 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));
        FuzzerUtils.out.println("fArr3 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr3)));

        FuzzerUtils.out.println("Test0639.instanceCount Test0639.iFld Test0639.bFld = " + Test0639.instanceCount + "," + Test0639.iFld +
                "," + (Test0639.bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld lFld Test0639.iArrFld = " + Double.doubleToLongBits(dFld) + "," + lFld + "," +
                FuzzerUtils.checkSum(Test0639.iArrFld));
        FuzzerUtils.out.println("Test0639.lArrFld = " + FuzzerUtils.checkSum(Test0639.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0639 _instance = new Test0639();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  bMeth ->  bMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
