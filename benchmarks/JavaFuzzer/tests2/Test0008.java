// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0008 {

    public static final int N = 400;

    public static long instanceCount=3631780152L;
    public static volatile short sFld=-15092;
    public static volatile float fFld=2.161F;
    public static double dFld=-27.26883;
    public static boolean[] bArrFld =new boolean[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0008.bArrFld, false);
        FuzzerUtils.init(Test0008.lArrFld, 56739L);
    }

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static short sMeth(int i1) {


        i1 >>= (int) Test0008.instanceCount;
        long meth_res = i1;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth(long l) {

        int i10=6, i11=-25100, i12=-69, i13=194, i14=141, i15=8, i16=10;
        boolean b=false;
        short s=-18410;
        float f=-89.803F;

        for (i10 = 11; i10 < 398; ++i10) {
            for (i12 = i10; i12 < 4; i12++) {
                i14 = 1;
                while (++i14 < 1) {
                    if (b) continue;
                    i11 -= s;
                    i11 &= (int) Test0008.instanceCount;
                    f += i14;
                    if (b) {
                        if (i14 != 0) {
                        }
                    }
                    f -= Test0008.instanceCount;
                }
                i13 -= (int)f;
                s = (short)193;
                i15 = 1;
                while (++i15 < 1) {
                    i11 = 62;
                    i16 *= 62457;
                }
            }
        }
        long meth_res = l + i10 + i11 + i12 + i13 + i14 + (b ? 1 : 0) + s + Float.floatToIntBits(f) + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i6, int i7) {

        int i8=155;
        int i9=-48798;
        int i17=3;
        int i18=-3;
        int[] iArr1 =new int[N];
        boolean b1=true;
        double d=-43.36597;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(dArr, -43.11259);
        FuzzerUtils.init(lArr, 60L);
        FuzzerUtils.init(iArr1, -206);

        for (i8 = 13; i8 < 266; ++i8) {
            dArr[i8 + 1] *= iMeth(Test0008.instanceCount);
            for (i17 = 1; i17 < 6; ++i17) {
                int i19=155;
                Test0008.sFld ^= (short) i7;
                switch ((i8 % 3) + 69) {
                case 69:
                    dArr[i8] = Test0008.instanceCount;
                    i7 -= i17;
                    lArr[i17 + 1] += i17;
                    break;
                case 70:
                case 71:
                    Test0008.instanceCount = i19;
                default:
                    iArr1[i8 + 1] = (int) Test0008.instanceCount;
                    i18 += (229 + (i17 * i17));
                    Test0008.bArrFld[i17] = b1;
                }
            }
            Test0008.fFld = Test0008.fFld;
            iArr1[i8] = i8;
            i6 = (int)d;
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i17 + i18 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2) {

        int i3=-1;
        int i4=-56953;
        int i5=-30293;
        int i20=-9;
        int i21=-27851;
        int i22=-10;
        int i23=0;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -202);

        for (i3 = 144; i3 > 7; --i3) {
            try {
                i4 = (i5 % 874590791);
                iArr[i3] = (64899 % iArr[i3 + 1]);
                i2 = (i3 % i2);
            } catch (ArithmeticException a_e) {}
            vMeth1(i3, i5);
            Test0008.instanceCount += (i3 * i2);
            if (i3 != 0) {
                vMeth_check_sum += i2 + i3 + i4 + i5 + i20 + i21 + i22 + i23 + FuzzerUtils.checkSum(iArr);
                return;
            }
            Test0008.fFld += i5;
            for (i20 = 1; 11 > i20; ++i20) {
                Test0008.lArrFld[(i20 >>> 1) % N] -= (long) Test0008.dFld;
                for (i22 = 1; 2 > i22; i22 += 3) {
                    byte by=-8;
                    boolean b2=true;
                    switch ((i3 % 8) + 75) {
                    case 75:
                        iArr[i20] >>>= i21;
                        i23 = i22;
                        i5 += (((i22 * i5) + by) - i5);
                        break;
                    case 76:
                        Test0008.fFld += (i22 + i22);
                        i4 -= (int) Test0008.instanceCount;
                        break;
                    case 77:
                        Test0008.sFld = (short) i4;
                    case 78:
                        i21 += i22;
                        break;
                    case 79:
                        i21 += (((i22 * Test0008.instanceCount) + i22) - i22);
                        break;
                    case 80:
                        if (b2) break;
                    case 81:
                        i5 -= (int) Test0008.instanceCount;
                        break;
                    case 82:
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i20 + i21 + i22 + i23 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=7;
        int i24=9;
        int i25=-7;
        int i26=-4;
        int i27=-30069;
        int i28=-43;
        int i29=95;
        int i30=10;
        int i31=-40034;
        int i32=52185;
        int i33=-71;
        int[] iArr2 =new int[N];
        long l1=-1444089134724318540L;
        byte by1=27;
        boolean b3=true;

        FuzzerUtils.init(iArr2, -11);

        i += (int) (((-244 + (i * i)) % (Test0008.instanceCount | 1)) + sMeth((int) (Test0008.instanceCount + 85)));
        vMeth(64428);
        if (b3) {
            Test0008.fFld *= Test0008.instanceCount;
            switch ((((i >>> 1) % 1) * 5) + 23) {
            case 24:
                for (i24 = 4; i24 < 360; ++i24) {
                    for (i26 = 4; i26 < 71; i26++) {
                        i25 = i26;
                        i <<= i24;
                        for (i28 = 1; i28 < 2; i28++) {
                            i = (int) Test0008.fFld;
                        }
                        Test0008.bArrFld = FuzzerUtils.boolean1array(N, (boolean) true);
                    }
                    i30 = 1;
                    while (++i30 < 71) {
                        Test0008.instanceCount -= (long) -2.600F;
                        iArr2[i30 - 1] += -43292;
                        i29 = i;
                        for (l1 = 1; 1 < l1; l1 -= 3) {
                            i27 *= i31;
                            by1 += (byte)(((l1 * i27) + l1) - i32);
                            Test0008.instanceCount *= 12;
                            Test0008.fFld -= i31;
                            Test0008.fFld -= 251;
                            i27 %= (int)(l1 | 1);
                        }
                        Test0008.instanceCount <<= i30;
                        i31 >>= i32;
                        Test0008.fFld += (12493 + (i30 * i30));
                        Test0008.instanceCount -= i24;
                        i33 = 1;
                        while (++i33 < 1) {
                            i31 += (i33 * i26);
                            i = i28;
                        }
                    }
                }
                break;
            }
        } else {
            iArr2[(i33 >>> 1) % N] -= i28;
        }

        FuzzerUtils.out.println("i i24 i25 = " + i + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 l1 = " + i29 + "," + i30 + "," + l1);
        FuzzerUtils.out.println("i31 by1 i32 = " + i31 + "," + by1 + "," + i32);
        FuzzerUtils.out.println("i33 b3 iArr2 = " + i33 + "," + (b3 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0008.instanceCount Test0008.sFld Test0008.fFld = " + Test0008.instanceCount + "," + Test0008.sFld +
                "," + Float.floatToIntBits(Test0008.fFld));
        FuzzerUtils.out.println("Test0008.dFld Test0008.bArrFld Test0008.lArrFld = " + Double.doubleToLongBits(Test0008.dFld) + "," +
                FuzzerUtils.checkSum(Test0008.bArrFld) + "," + FuzzerUtils.checkSum(Test0008.lArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0008 _instance = new Test0008();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
