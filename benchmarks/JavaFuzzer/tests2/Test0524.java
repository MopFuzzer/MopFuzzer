// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0524 {

    public static final int N = 400;

    public static long instanceCount=-129L;
    public int iFld=42058;
    public short sFld=18766;
    public static double dFld=54.71217;
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0524.fArrFld, 1.806F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6) {

        double d=28.80661;
        short s=23564;

        d *= i6;
        s = (short) Test0524.instanceCount;
        long meth_res = i5 + i6 + Double.doubleToLongBits(d) + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(boolean b, long l1, int i3) {

        float f=1.382F;
        byte by=85;
        int i4=-10;
        int i7=119;
        int i8=-6;
        int[] iArr =new int[N];
        short s1=-5627;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(lArr, 925965067604336137L);

        f = (Integer.reverseBytes(by - i3) / ((i3--) | 1));
        i4 = 1;
        while (++i4 < 158) {
            b = (bArr[i4 - 1] = b);
            i3 *= (-((--i3) * (--i3)));
            i3 -= (i3 | Math.abs(i4));
            iArr[i4] = ((++i3) - i4);
            iMeth(46, i4);
            l1 = i4;
            iArr[i4 - 1] += (int)f;
        }
        for (i7 = 3; i7 < 273; i7++) {
            lArr[i7] <<= -28;
            i8 |= 7;
        }
        i3 = (int)l1;
        iArr[(i3 >>> 1) % N] >>= i3;
        s1 -= (short)27702L;
        vMeth1_check_sum += (b ? 1 : 0) + l1 + i3 + Float.floatToIntBits(f) + by + i4 + i7 + i8 + s1 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i, long l, int i1) {

        int i2=-9;
        int[] iArr1 =new int[N];
        boolean b1=false;
        float f1=105.154F;
        short s2=-4209;
        double d1=-1.110617, d2=30.74545;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr1, -27);
        FuzzerUtils.init(lArr1, 6L);

        i2 = 1;
        while (++i2 < 380) {
            vMeth1(b1, Test0524.instanceCount, i2);
            if (i != 0) {
                vMeth_check_sum += i + l + i1 + i2 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + s2 +
                    Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1) +
                    FuzzerUtils.checkSum(lArr1);
                return;
            }
            i += i2;
            f1 += (((i2 * f1) + s2) - i1);
        }
        i = -11;
        for (int i9 : iArr1) {
            lArr1[(13 >>> 1) % N] = i2;
            i *= (int) Test0524.instanceCount;
        }
        l *= i2;
        d1 -= i2;
        d2 = 1;
        while (++d2 < 181) {
            i += (int)(((d2 * i) + f1) - i);
            b1 = b1;
            l += (long)d2;
        }
        vMeth_check_sum += i + l + i1 + i2 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + s2 + Double.doubleToLongBits(d1)
            + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i10=6;
        int i11=7;
        int i12=-166;
        int i13=55352;
        int i14=59450;
        int i15=-50244;
        int i16=39;
        int i17=12;
        int i18=58084;
        int i20=-37;
        int[] iArr2 =new
                    int[N];
        float f2=-2.99F;
        boolean b2=true;
        byte by1=19;
        double d3=-2.106237;
        long l2=8874859987750082664L;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, -99L);
        FuzzerUtils.init(iArr2, -1);

        vMeth(i10, Test0524.instanceCount, i10);
        for (i11 = 161; i11 > 8; i11 -= 3) {
            lArr2[i11 - 1] /= ((long)(f2) | 1);
            b2 = true;
            for (i13 = 1; i13 < i11; i13++) {
                i12 += i13;
                for (i15 = 1; i15 < 2; ++i15) {
                    Test0524.instanceCount += i15;
                    iArr2[i11 - 1] += i14;
                    if (true) continue;
                }
                i12 <<= i15;
                f2 += -9061195881899996164L;
                for (i17 = i11; i17 < 2; i17++) {
                    int i19=-26;
                    i10 = (int)-1.117667;
                    i16 += (24027 + (i17 * i17));
                    iFld -= 38372;
                    Test0524.fArrFld[i13] *= 1.941F;
                    i12 = i10;
                    sFld -= (short)i14;
                    iFld <<= i13;
                    i14 -= by1;
                    f2 += i11;
                    try {
                        i10 = (i19 % iArr2[i17]);
                        iFld = (i17 % i19);
                        i19 = (31113 / iArr2[i13 - 1]);
                    } catch (ArithmeticException a_e) {}
                }
                for (d3 = 2; 1 < d3; --d3) {
                    switch ((i13 % 10) + 96) {
                    case 96:
                        iFld = i15;
                        l2 >>= i11;
                        Test0524.dFld -= l2;
                        break;
                    case 97:
                        lArr2 = lArr2;
                        break;
                    case 98:
                        i20 = -86;
                        break;
                    case 99:
                        Test0524.instanceCount = i17;
                        break;
                    case 100:
                        iArr2[i13] *= 179;
                    case 101:
                        if (true) break;
                        break;
                    case 102:
                        iFld += i20;
                        break;
                    case 103:
                        i10 = i10;
                        break;
                    case 104:
                        i20 <<= (int)7209538107090281774L;
                        break;
                    case 105:
                    default:
                        iFld <<= i14;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("f2 b2 i13 = " + Float.floatToIntBits(f2) + "," + (b2 ? 1 : 0) + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 by1 = " + i17 + "," + i18 + "," + by1);
        FuzzerUtils.out.println("d3 i20 l2 = " + Double.doubleToLongBits(d3) + "," + i20 + "," + l2);
        FuzzerUtils.out.println("lArr2 iArr2 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0524.instanceCount iFld sFld = " + Test0524.instanceCount + "," + iFld + "," + sFld);
        FuzzerUtils.out.println("Test0524.dFld Test0524.fArrFld = " + Double.doubleToLongBits(Test0524.dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0524.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0524 _instance = new Test0524();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
