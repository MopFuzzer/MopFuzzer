// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0924 {

    public static final int N = 400;

    public static long instanceCount=8927948595031445191L;
    public static volatile float fFld=2.1009F;
    public static byte byFld=-123;
    public volatile boolean bFld=true;
    public static byte[] byArrFld =new byte[N];
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0924.byArrFld, (byte) -23);
        FuzzerUtils.init(Test0924.iArrFld, 186);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, int i7, int i8) {

        int i9=29, i10=-37040, i11=-6, i12=-212, i13=-30888, i14=-14611;
        short s1=27193;
        boolean b=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 16.91F);

        i8 ^= i8;
        i9 = 1;
        while (++i9 < 264) {
            i8 += i9;
        }
        fArr[(i7 >>> 1) % N] = Test0924.fFld;
        i10 = 1;
        while (++i10 < 276) {
            switch ((((i9 >>> 1) % 8) * 5) + 85) {
            case 105:
                for (i11 = i10; 6 > i11; ++i11) {
                    i7 = 175;
                    for (i13 = i11; i13 < 1; i13++) {
                        Test0924.instanceCount += (((i13 * Test0924.instanceCount) + Test0924.instanceCount) - i9);
                        i14 %= (int)(i9 | 1);
                        Test0924.iArrFld[i13 - 1][i11] &= i13;
                        i8 -= i13;
                    }
                    i8 <<= -49;
                    l2 <<= -5508482265159375748L;
                }
                break;
            case 88:
            case 111:
                i7 -= s1;
                break;
            case 89:
                i14 ^= i12;
                break;
            case 119:
                Test0924.iArrFld[i10][i10] >>= i11;
                break;
            case 100:
                b = false;
            case 115:
                Test0924.instanceCount += i14;
                break;
            case 116:
                Test0924.fFld -= Test0924.fFld;
                break;
            }
        }
        vMeth1_check_sum += l2 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + s1 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static float fMeth() {

        int i6=14, i15=-6, i16=12, i17=12733;
        double d1=-72.79427;
        double[] dArr =new double[N];
        byte by=-39;
        long l3=4000656641L;
        boolean b1=true;

        FuzzerUtils.init(dArr, 0.140);

        dArr[(i6 >>> 1) % N] = (d1++);
        vMeth1(Test0924.instanceCount, 226, 8);
        for (i15 = 1; i15 < 263; i15++) {
            Test0924.iArrFld[i15 + 1][i15 + 1] += (int) Test0924.fFld;
            i16 += (i15 - by);
            switch ((((i16 >>> 1) % 2) * 5) + 80) {
            case 84:
                i6 -= -19;
                break;
            case 90:
                for (l3 = 1; l3 < 6; ++l3) {
                    Test0924.iArrFld[i15][(int) (l3)] = i17;
                    if (b1) {
                        Test0924.fFld *= l3;
                        i16 += (int)(l3 * l3);
                        i16 <<= i16;
                    }
                    Test0924.instanceCount -= l3;
                    Test0924.instanceCount = -6415800524044631220L;
                }
                break;
            }
        }
        long meth_res = i6 + Double.doubleToLongBits(d1) + i15 + i16 + by + l3 + i17 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i2, long l, long l1) {

        int i3=-246, i4=143, i5=-5, i18=-64697;
        double d=1.21421;
        float f=42.977F;
        byte by1=94;

        for (i3 = 1; i3 < 325; ++i3) {
            for (d = 1; d < 5; d++) {
                switch (((((--i2) >>> 1) % 2) * 5) + 67) {
                case 75:
                    f = (-(fMeth() - -1.731F));
                    Test0924.instanceCount += (long) (d * d);
                    i4 = i2;
                    break;
                case 74:
                    i5 = by1;
                    i2 -= (int) Test0924.instanceCount;
                    break;
                default:
                    i18 = 1;
                    while ((i18 += 2) < 2) {
                        i2 ^= i18;
                        i4 += (int)-1.352F;
                        i5 = i3;
                        i4 = i18;
                    }
                    Test0924.iArrFld[(int) (d)][(int) (d - 1)] -= -7;
                }
                if (i4 != 0) {
                    vMeth_check_sum += i2 + l + l1 + i3 + i4 + Double.doubleToLongBits(d) + i5 +
                        Float.floatToIntBits(f) + by1 + i18;
                    return;
                }
            }
        }
        vMeth_check_sum += i2 + l + l1 + i3 + i4 + Double.doubleToLongBits(d) + i5 + Float.floatToIntBits(f) + by1 +
            i18;
    }

    public void mainTest(String[] strArr1) {

        int i=9;
        int i1=-48275;
        int i19=8933;
        int i20=56;
        int i21=-103;
        int i22=-11;
        int i23=3141;
        int i24=39;
        int i25=147;
        int[] iArr =new int[N];
        short s=-23992;
        double d2=25.124343, d3=1.105695;

        FuzzerUtils.init(iArr, 3);

        for (i = 8; i < 188; i++) {
            i1 &= (--i1);
            s -= (short) (Test0924.byArrFld[i] - (iArr[i]--));
            i1 <<= i1;
            i1 -= (((i / (i1 | 1)) + i) / ((iArr[i] ^= (iArr[i + 1] = i)) | 1));
            vMeth(-10, Test0924.instanceCount, Test0924.instanceCount);
            if (bFld) {
                Test0924.iArrFld[i - 1][i] ^= i;
                Test0924.byFld += (byte) (((i * i) + i1) - Test0924.byFld);
                for (i19 = 7; 139 > i19; ++i19) {
                    i20 <<= i19;
                }
                Test0924.instanceCount *= 3355873786L;
            }
            switch ((((245 >>> 1) % 7) * 5) + 126) {
            case 153:
                switch (((i % 6) * 5) + 17) {
                case 47:
                    i20 += i;
                    Test0924.iArrFld[i + 1][i + 1] += i19;
                case 37:
                    for (d2 = 5; 139 > d2; d2++) {
                        iArr[i] <<= 124;
                        for (i22 = 1; i22 < 2; ++i22) {
                            i1 = i19;
                            Test0924.fFld -= Test0924.instanceCount;
                            i20 = (int) Test0924.instanceCount;
                            d3 = i1;
                            iArr[i22 + 1] = (int) Test0924.instanceCount;
                        }
                        for (i24 = 1; i24 < 2; ++i24) {
                            i21 = (int)d3;
                            i25 = (int) Test0924.instanceCount;
                            i21 -= i23;
                            i1 += (int) Test0924.fFld;
                            try {
                                i23 = (i24 % i24);
                                i23 = (13781 % i);
                                i23 = (i22 / -132);
                            } catch (ArithmeticException a_e) {}
                        }
                    }
                    break;
                case 25:
                    i25 += (((i * Test0924.instanceCount) + Test0924.instanceCount) - i);
                    break;
                case 33:
                    i23 += (((i * i21) + Test0924.instanceCount) - i23);
                    break;
                case 32:
                    i25 = (int) Test0924.instanceCount;
                    break;
                case 45:
                    i20 <<= i;
                    break;
                }
                break;
            case 139:
                Test0924.iArrFld[i][i - 1] = -71;
                break;
            case 142:
                if (bFld) break;
            case 137:
                s += (short)(((i * i) + i23) - i24);
                break;
            case 138:
                Test0924.iArrFld[i - 1][i - 1] = i24;
                break;
            case 155:
                i1 *= (int) Test0924.fFld;
                break;
            case 145:
                iArr[i] -= (int)1502566098L;
                break;
            }
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i19 i20 d2 = " + i19 + "," + i20 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d3 i24 i25 = " + Double.doubleToLongBits(d3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0924.instanceCount Test0924.fFld Test0924.byFld = " + Test0924.instanceCount + "," +
                Float.floatToIntBits(Test0924.fFld) + "," + Test0924.byFld);
        FuzzerUtils.out.println("bFld Test0924.byArrFld Test0924.iArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0924.byArrFld) + "," + FuzzerUtils.checkSum(Test0924.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0924 _instance = new Test0924();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
