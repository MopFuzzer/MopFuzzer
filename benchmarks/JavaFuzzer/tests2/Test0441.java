// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0441 {

    public static final int N = 400;

    public static long instanceCount=-7170905023177780023L;
    public static double[] dArrFld =new double[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0441.dArrFld, 25.125051);
        FuzzerUtils.init(Test0441.iArrFld, 20332);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i3, int i4, int i5) {

        float f1=-1.125F;
        float[] fArr =new float[N];
        byte by=-34;
        short s=16324;
        int i6=-173, i7=-203, i8=-14952, i9=-14, i10=-107;

        FuzzerUtils.init(fArr, -2.178F);

        fArr[(i4 >>> 1) % N] = f1;
        f1 += Test0441.instanceCount;
        for (double d : Test0441.dArrFld) {
            i5 = by;
            i4 = 27;
            s += (short)f1;
            for (i6 = 1; i6 < 4; ++i6) {
                f1 += (((i6 * f1) + i5) - i8);
                for (i9 = 1; 2 > i9; ++i9) {
                    i5 = (int)d;
                    i8 >>= (int) Test0441.instanceCount;
                    Test0441.iArrFld[i6 - 1] = i8;
                    i10 += (i9 * i9);
                    i3 += i9;
                }
                i4 = i10;
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + by + s + i6 + i7 + i8 + i9 + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public float fMeth(int i2, long l, long l1) {

        int i11=-13, i12=0, i13=0, i14=44042;
        double d1=-65.520;
        boolean b1=false;

        vMeth(42412, i2, i2);
        i11 = 1;
        while (++i11 < 297) {
            for (i12 = 6; i12 > 1; i12--) {
                i14 = 1;
                while ((i14 += 2) < 2) {
                    switch (((i14 >>> 1) % 2) + 108) {
                    case 108:
                        i13 = 14110;
                        switch ((i12 % 7) + 44) {
                        case 44:
                            l = i2;
                            i13 = (int)d1;
                            break;
                        case 45:
                            if (i13 != 0) {
                            }
                            break;
                        case 46:
                            i2 += i14;
                            i13 = 212;
                            break;
                        case 47:
                            i13 += i14;
                            break;
                        case 48:
                            try {
                                i2 = (i12 / i12);
                                i13 = (i14 % -434014351);
                                i2 = (i2 % 12);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 49:
                            d1 = i11;
                            break;
                        case 50:
                            i13 = i11;
                            break;
                        default:
                            b1 = true;
                        }
                        break;
                    case 109:
                        l1 = i2;
                        break;
                    }
                }
            }
        }
        long meth_res = i2 + l + l1 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) + (b1 ? 1 : 0);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth(int i1, boolean b) {

        double d2=-48.81366;
        float f2=1.467F;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-18784);

        fMeth(i1, Test0441.instanceCount, 3L);
        i1 += i1;
        i1 ^= i1;
        i1 *= i1;
        i1 *= (int) Test0441.instanceCount;
        d2 = 1;
        do {
            i1 = i1;
            i1 ^= i1;
            if (b) {
                f2 += (float)d2;
            } else {
                Test0441.iArrFld = Test0441.iArrFld;
            }
            i1 = i1;
            sArr[(int) (d2)] += (short) Test0441.instanceCount;
            i1 >>= i1;
            i1 -= i1;
        } while (++d2 < 369);
        long meth_res = i1 + (b ? 1 : 0) + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-214, i15=-34626, i16=0, i17=-31, i18=-5, i19=119, i20=4, i21=13, i22=-9, i23=-13445, i24=-9255,
            i25=-41127, i26=11, i27=-58610, i28=-40777;
        float f=-1.583F;
        float[] fArr1 =new float[N];
        boolean b2=true;
        boolean[] bArr =new boolean[N];
        double d3=0.26329;
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr1, 2.316F);
        FuzzerUtils.init(lArr, 56L);
        FuzzerUtils.init(bArr, true);

        switch ((((-36 * (i % 27218)) >>> 1) % 2) + 15) {
        case 15:
        case 16:
            f += (((i--) * iMeth(i, b2)) + -81);
            i15 = 1;
            do {
                for (i16 = i15; i16 < 115; i16++) {
                    fArr1[i16] -= 89;
                }
                for (i18 = 5; i18 < 115; i18++) {
                    i20 = 1;
                    while (++i20 < 2) {
                        i19 = (int)d3;
                        Test0441.iArrFld[i15 - 1] >>>= i;
                        if (b2) break;
                    }
                    f = i18;
                    Test0441.iArrFld[i18] = i19;
                    i += i19;
                    f = Test0441.instanceCount;
                    for (i21 = 1; 2 > i21; ++i21) {
                        i23 = i21;
                    }
                    i22 += (int)f;
                    for (i24 = 2; i24 > 1; --i24) {
                        lArr[i18] = i16;
                        i23 = -18636;
                    }
                    i19 = i17;
                    bArr = bArr;
                }
                Test0441.iArrFld[i15 - 1] = (int) Test0441.instanceCount;
                i = (int)f;
                i17 = i;
            } while (++i15 < 218);
            break;
        }
        for (i26 = 4; 134 > i26; i26++) {
            i28 = 1;
            while (++i28 < 193) {
                Test0441.instanceCount >>= i27;
                i19 <<= (int) Test0441.instanceCount;
                i27 *= (int)70.524F;
            }
        }

        FuzzerUtils.out.println("i f b2 = " + i + "," + Float.floatToIntBits(f) + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d3 i21 i22 = " + Double.doubleToLongBits(d3) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("fArr1 lArr bArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0441.instanceCount Test0441.dArrFld Test0441.iArrFld = " + Test0441.instanceCount + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0441.dArrFld)) + "," + FuzzerUtils.checkSum(Test0441.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0441 _instance = new Test0441();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
