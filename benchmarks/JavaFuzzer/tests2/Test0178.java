// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0178 {

    public static final int N = 400;

    public static volatile long instanceCount=5353275793593472570L;
    public static byte byFld=-88;
    public static int iFld=-10;
    public static volatile int iFld1=0;
    public static volatile boolean bFld=false;
    public volatile double dFld=-2.53535;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static volatile boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0178.lArrFld, -3544146567448837449L);
        FuzzerUtils.init(Test0178.iArrFld, -10537);
        FuzzerUtils.init(Test0178.bArrFld, false);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-43434;
        int i7=-21312;
        int i8=77;
        int i9=-158;
        int i10=24751;
        int i11=-5;
        int[] iArr =new int[N];
        boolean b=true;
        short s=-541;

        FuzzerUtils.init(iArr, 253);

        for (i6 = 270; 13 < i6; i6--) {
            double d2=-1.53225;
            d2 += i7;
            for (i8 = 6; i8 > 1; i8--) {
                i9 *= i9;
                for (i10 = 1; 2 > i10; i10++) {
                    Test0178.instanceCount >>>= -156;
                    b = b;
                    Test0178.byFld += (byte) Test0178.instanceCount;
                    s += (short)i10;
                    i9 %= 2527;
                    iArr[i6] >>= 153;
                    i11 += (i10 * i10);
                }
                i7 += i10;
                iArr = iArr;
                Test0178.instanceCount -= Test0178.instanceCount;
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + s + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i4, double d1, int i5) {

        short s1=813;
        int i12=-37;
        int i13=7;
        int[][] iArr1 =new int[N][N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, -95);

        vMeth1();
        Test0178.instanceCount = 557307293512189757L;
        s1 -= (short)i5;
        iArr1[(251 >>> 1) % N][(Test0178.iFld >>> 1) % N] -= -166;
        iArr1[(Test0178.iFld >>> 1) % N][(Test0178.iFld >>> 1) % N] *= Test0178.iFld;
        for (i12 = 11; i12 < 344; i12++) {
            i13 = Test0178.byFld;
            Test0178.instanceCount -= Test0178.instanceCount;
            Test0178.iFld1 += (int) (-7L + (i12 * i12));
            if (b1) {
                i13 += i12;
                i13 -= i4;
                i4 = Test0178.iFld1;
            } else if (b1) {
                iArr1[i12 + 1][i12] = (int) Test0178.instanceCount;
                b1 = b1;
            } else {
                i5 &= Test0178.iFld1;
                vMeth_check_sum += i4 + Double.doubleToLongBits(d1) + i5 + s1 + i12 + i13 + (b1 ? 1 : 0) +
                    FuzzerUtils.checkSum(iArr1);
                return;
            }
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d1) + i5 + s1 + i12 + i13 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth() {


        Test0178.byFld -= (byte) Math.max(Test0178.lArrFld[(-1 >>> 1) % N]--, Test0178.instanceCount);
        Test0178.instanceCount += (-59 - (Test0178.iFld--));
        vMeth(Test0178.iFld, -1.23674, Test0178.iFld);
        long meth_res = 0;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-50, i1=-12, i2=-14, i3=-158, i14=22908, i15=0;
        double d=-56.94337;
        double[][] dArr =new double[N][N];
        short s2=-2696;
        float f=0.352F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -53.235F);
        FuzzerUtils.init(dArr, 96.104911);

        for (i = 4; i < 222; i += 3) {
            d = 1;
            do {
                for (i2 = i; i2 < 1; i2++) {
                    switch ((int)(((d % 2) * 5) + 83)) {
                    case 85:
                        Test0178.instanceCount *= (long) (((i3 = i3) - fMeth()) * d);
                        break;
                    case 87:
                        Test0178.instanceCount = i2;
                        s2 = (short)i1;
                        s2 >>= (short)i;
                        break;
                    }
                    Test0178.instanceCount += i2;
                    Test0178.iFld += i2;
                    switch (((i % 3) * 5) + 96) {
                    case 109:
                        i3 *= 4624;
                        i1 = 31684;
                        break;
                    case 106:
                        fArr[(i3 >>> 1) % N] += 2536;
                        dArr = dArr;
                        break;
                    case 98:
                        i1 += (int)(0.818F + (i2 * i2));
                        break;
                    }
                    if (true) break;
                }
                Test0178.lArrFld[(int) (d - 1)] = 49129;
                Test0178.bFld = Test0178.bFld;
                dFld = 26777;
                Test0178.iArrFld[i] += (int) Test0178.instanceCount;
                Test0178.instanceCount += (long) (-112.259F + (d * d));
                Test0178.byFld -= (byte) Test0178.instanceCount;
                f += (9034 + (d * d));
                Test0178.bArrFld[i] = Test0178.bFld;
                Test0178.iFld1 = i;
            } while (++d < 348);
            f += Test0178.instanceCount;
            for (i14 = 13; i14 < 348; i14++) {
                i3 = Test0178.iFld;
                s2 = (short)5;
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 i3 s2 = " + i2 + "," + i3 + "," + s2);
        FuzzerUtils.out.println("f i14 i15 = " + Float.floatToIntBits(f) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("fArr dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0178.instanceCount Test0178.byFld Test0178.iFld = " + Test0178.instanceCount + "," + Test0178.byFld +
                "," + Test0178.iFld);
        FuzzerUtils.out.println("Test0178.iFld1 Test0178.bFld dFld = " + Test0178.iFld1 + "," + (Test0178.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0178.lArrFld Test0178.iArrFld Test0178.bArrFld = " + FuzzerUtils.checkSum(Test0178.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0178.iArrFld) + "," + FuzzerUtils.checkSum(Test0178.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0178 _instance = new Test0178();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
