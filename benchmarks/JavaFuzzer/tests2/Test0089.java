// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:16 2023
public class Test0089 {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static int[] iArrFld =new int[N];
    public static volatile long[] lArrFld =new long[N];
    public static volatile int[][] iArrFld1 =new int[N][N];

    static {
        FuzzerUtils.init(Test0089.iArrFld, 9);
        FuzzerUtils.init(Test0089.lArrFld, -196L);
        FuzzerUtils.init(Test0089.iArrFld1, 224);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i3, int i4) {

        int i5=-94, i6=7, i7=-20, i8=149, i9=11, i10=-1782;
        float f1=-1.494F;
        float[] fArr =new float[N];
        long l3=1589544715L;
        boolean b=true;

        FuzzerUtils.init(fArr, 1.850F);

        for (i5 = 279; i5 > 7; i5 -= 3) {
            i7 = 1;
            while (++i7 < 17) {
                for (i8 = 1; 1 > i8; ++i8) {
                    f1 = i5;
                    i9 = i8;
                    if (b) {
                        fArr[i8 + 1] += i8;
                        Test0089.lArrFld[i7 + 1] = 6295L;
                        i10 = (int)l3;
                    } else {
                        i9 = (int) Test0089.instanceCount;
                        i9 -= i3;
                        i10 = -42700;
                        Test0089.iArrFld[i5] = (int) Test0089.instanceCount;
                    }
                    if (i10 != 0) {
                    }
                    i10 += (int)(-2.1014F + (i8 * i8));
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + l3 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static double dMeth(long l1, long l2) {

        float f=2.791F, f2=-20.637F;
        int i2=-90, i11=-155, i12=82, i13=169;

        for (f = 7; f < 136; f++) {
            i2 += (int)((l2 - (i2 - f)) * lMeth(i2, -24227));
            Test0089.iArrFld1 = Test0089.iArrFld1;
            l1 &= i2;
            l2 = i2;
            switch ((int)((f % 1) + 21)) {
            case 21:
            default:
                for (i11 = 1; i11 < 12; i11++) {
                    boolean b1=true;
                    b1 = b1;
                    i13 = 1;
                    do {
                        try {
                            i12 = (-1626530980 % i13);
                            i12 = (-143 % i13);
                            i12 = (65 % i2);
                        } catch (ArithmeticException a_e) {}
                        f2 += i11;
                        i2 = (int)l2;
                        i2 = i11;
                    } while (++i13 < 2);
                    if (i13 != 0) {
                    }
                    if (i2 != 0) {
                    }
                }
            }
        }
        long meth_res = l1 + l2 + Float.floatToIntBits(f) + i2 + i11 + i12 + i13 + Float.floatToIntBits(f2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(long l) {

        int i1=-5, i15=-58568, i16=11;
        boolean b2=true;
        double d=0.111904;
        double[] dArr1 =new double[N];
        byte by=-48;

        FuzzerUtils.init(dArr1, 81.30179);

        Test0089.lArrFld[(i1 >>> 1) % N] = ((i1++) * (i1--));
        i1 = Test0089.iArrFld[(18419 >>> 1) % N];
        i1 /= (int) (((long) ((--dArr1[(i1 >>> 1) % N]) + dMeth(-2989334542L, Test0089.instanceCount))) | 1);
        for (int i14 : Test0089.iArrFld) {
            Test0089.instanceCount += i1;
            for (i15 = 1; i15 < 4; ++i15) {
                i16 *= i1;
                i1 *= (int)-3547540230L;
                i16 = 0;
            }
            i14 -= i16;
            b2 = b2;
            Test0089.instanceCount += (long) d;
        }
        i16 = i16;
        i16 -= by;
        Test0089.instanceCount += (long) -76.599F;
        vMeth_check_sum += l + i1 + i15 + i16 + (b2 ? 1 : 0) + Double.doubleToLongBits(d) + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        long l4=-154L;
        int i17=-2;
        int i18=-21583;
        int i20=4653;
        int i21=-2;
        int i22=44758;
        int i23=-44323;
        int[] iArr =new int[N];
        boolean b3=true;
        double d1=2.58644;
        double d2=-57.74582;
        double[] dArr =new double[N];
        short s=-3706;
        float f3=-47.491F;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(dArr, 7.46254);
        FuzzerUtils.init(fArr1, 89.181F);
        FuzzerUtils.init(iArr, -34342);

        dArr = (dArr = dArr);
        for (int i : Test0089.iArrFld) {
            vMeth(Test0089.instanceCount);
            Test0089.iArrFld1[(i >>> 1) % N][(-53291 >>> 1) % N] = i;
        }
        for (l4 = 1; l4 < 191; l4++) {
            i17 += -221;
            Test0089.instanceCount += i17;
            if (b3) break;
            for (d1 = l4; 132 > d1; d1++) {
                int i19=-7627;
                i18 = (int) Test0089.instanceCount;
                Test0089.instanceCount += (long) ((long) d1 ^ i19);
                for (i20 = 1; i20 < 1; ++i20) {
                    Test0089.iArrFld1[(int) (l4)] = Test0089.iArrFld1[(int) (d1 + 1)];
                    Test0089.instanceCount = i19;
                    i18 = i18;
                    i21 = i17;
                    i18 >>= i20;
                }
                Test0089.instanceCount -= s;
                for (i22 = 1; i22 > 1; i22 -= 2) {
                    i21 <<= i21;
                    try {
                        i23 = (i23 % i21);
                        Test0089.iArrFld[(int) (d1 - 1)] = (57504 / i17);
                        i18 = (i23 / 63188);
                    } catch (ArithmeticException a_e) {}
                    i21 += (i22 * i18);
                    fArr1[(int) (l4 - 1)] = Test0089.instanceCount;
                    d2 = i22;
                    i21 += (i22 * i22);
                    f3 += 0.798F;
                    switch (((i19 >>> 1) % 6) + 106) {
                    case 106:
                        i19 += i21;
                        i21 = i20;
                        Test0089.lArrFld[(int) (d1 + 1)] += 13;
                        break;
                    case 107:
                        i19 -= (int)36940L;
                    case 108:
                        iArr = iArr;
                        break;
                    case 109:
                    case 110:
                        b3 = b3;
                        break;
                    case 111:
                        i19 = (int)d1;
                        break;
                    default:
                        if (b3) break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("l4 i17 b3 = " + l4 + "," + i17 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("d1 i18 i20 = " + Double.doubleToLongBits(d1) + "," + i18 + "," + i20);
        FuzzerUtils.out.println("i21 s i22 = " + i21 + "," + s + "," + i22);
        FuzzerUtils.out.println("i23 d2 f3 = " + i23 + "," + Double.doubleToLongBits(d2) + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("dArr fArr1 iArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0089.instanceCount Test0089.iArrFld Test0089.lArrFld = " + Test0089.instanceCount + "," +
                FuzzerUtils.checkSum(Test0089.iArrFld) + "," + FuzzerUtils.checkSum(Test0089.lArrFld));
        FuzzerUtils.out.println("Test0089.iArrFld1 = " + FuzzerUtils.checkSum(Test0089.iArrFld1));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0089 _instance = new Test0089();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
