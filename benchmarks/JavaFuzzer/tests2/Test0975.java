// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0975 {

    public static final int N = 400;

    public static long instanceCount=3L;
    public double dFld=1.15217;
    public static float fFld=-124.60F;
    public static long lFld=9865L;
    public static volatile boolean bFld=true;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0975.iArrFld, 18582);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, int i5) {

        double d=0.43309;
        double[] dArr =new double[N];
        int i6=-26045;
        int i7=-24416;
        int i8=146;
        int i9=254;
        int i10=51;
        int i11=22;
        int i12=7;
        int[] iArr =new int[N];
        float f2=89.868F;

        FuzzerUtils.init(dArr, 0.6832);
        FuzzerUtils.init(iArr, -3);

        i5 -= 9;
        d = Test0975.fFld;
        for (i6 = 6; i6 < 152; ++i6) {
            for (i8 = 1; 11 > i8; ++i8) {
                i5 *= 0;
                i5 += (int)1.109106;
                i7 = i8;
                for (i10 = i8; i10 < 2; i10++) {
                    Test0975.fFld = i8;
                    dArr = dArr;
                }
                i5 += (i8 - Test0975.fFld);
                Test0975.instanceCount -= i7;
                for (f2 = i8; 2 > f2; ++f2) {
                    iArr[i6 - 1] = i11;
                }
                Test0975.instanceCount -= Test0975.lFld;
            }
        }
        long meth_res = i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2)
            + i12 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(boolean b, long l, boolean b1) {

        int i2=51005;
        int i3=-5224;
        int i13=187;
        int i14=-3;
        int i15=-40;
        int[] iArr1 =new int[N];
        byte by1=-25;
        boolean b2=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -1.941F);
        FuzzerUtils.init(iArr1, -57);

        i2 *= (int) (((-(i2 - l)) + 208) + ((Test0975.instanceCount + i2) + 0.6F));
        i3 = 1;
        while (++i3 < 379) {
            l += by1;
            fArr[i3 + 1] = by1;
            if (b1) {
                iMeth(-9, i3);
                Test0975.lFld += i2;
            } else {
                b = b2;
                for (i13 = 1; i13 < 4; i13 += 3) {
                    Test0975.lFld *= (long) Test0975.fFld;
                    iArr1 = iArr1;
                    i15 = 1;
                    do {
                        double d1=-1.76424;
                        Test0975.fFld = i14;
                        d1 += i15;
                        Test0975.instanceCount -= (long) 1.998F;
                    } while (++i15 < 4);
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + l + (b1 ? 1 : 0) + i2 + i3 + by1 + (b2 ? 1 : 0) + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i1, float f, float f1) {

        boolean b3=true;
        int i16=-49997;
        int i17=-6;
        int i18=13;
        int i19=239;
        int[] iArr2 =new int[N];
        double d2=-1.97385;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, -1.93F);
        FuzzerUtils.init(iArr2, -49);

        vMeth1(b3, Test0975.lFld, b3);
        i16 = 1;
        do {
            fArr1[i16] -= i16;
            i17 |= i16;
        } while (++i16 < 132);
        Test0975.instanceCount *= Test0975.lFld;
        Test0975.lFld >>= i1;
        for (i18 = 8; i18 < 169; ++i18) {
            Test0975.lFld -= 8;
            i1 >>= -19874;
            Test0975.instanceCount = i18;
            Test0975.instanceCount >>= Test0975.lFld;
            i19 += (int)d2;
            Test0975.fFld -= (float) d2;
            iArr2[i18] <<= i18;
            i1 >>= 45983;
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + (b3 ? 1 : 0) + i16 + i17 + i18 +
            i19 + Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i20=5, i21=-206, i22=-206, i23=-85, i24=67, i25=49965;
        byte by=-74;
        long l1=-46132L;
        long[] lArr =new long[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(lArr, 165891573L);
        FuzzerUtils.init(bArr, true);

        i = (int) ((--dFld) - ((Test0975.instanceCount + by) * (i * Test0975.instanceCount)));
        i <<= i;
        i += (int) (((i * Test0975.fFld) * (Test0975.fFld - i)) - i);
        vMeth(i, Test0975.fFld, Test0975.fFld);
        Test0975.fFld = -53;
        i &= (int) Test0975.lFld;
        i20 = 1;
        while (++i20 < 167) {
            i -= (int) Test0975.lFld;
            for (l1 = 6; l1 < 150; l1++) {
                i21 += (int) (((l1 * i21) + i21) - Test0975.lFld);
                i *= (int)dFld;
                i += (int) Test0975.instanceCount;
                i = (int) Test0975.instanceCount;
            }
            if (false) {
                Test0975.iArrFld[i20 - 1] *= (int) Test0975.fFld;
                i = (int) Test0975.lFld;
            } else {
                for (i22 = i20; i22 < 150; i22++) {
                    lArr[i20] = i20;
                    Test0975.iArrFld = Test0975.iArrFld;
                    try {
                        i = (Test0975.iArrFld[i22] / i20);
                        i21 = (i21 % i20);
                        Test0975.iArrFld[i20 + 1] = (Test0975.iArrFld[i20 + 1] / i22);
                    } catch (ArithmeticException a_e) {}
                    if (Test0975.bFld) {
                        i23 -= (int)1.749F;
                        bArr[i22 + 1] = Test0975.bFld;
                        i23 *= i23;
                    }
                    for (i24 = 1; i24 < 1; i24++) {
                        Test0975.instanceCount += (((i24 * l1) + i21) - i);
                        i <<= (int)4L;
                        Test0975.fFld += (i24 * i24);
                        i21 = i23;
                        Test0975.instanceCount += (((i24 * i20) + Test0975.fFld) - i22);
                    }
                }
            }
        }

        FuzzerUtils.out.println("i by i20 = " + i + "," + by + "," + i20);
        FuzzerUtils.out.println("l1 i21 i22 = " + l1 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("lArr bArr = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0975.instanceCount dFld Test0975.fFld = " + Test0975.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Float.floatToIntBits(Test0975.fFld));
        FuzzerUtils.out.println("Test0975.lFld Test0975.bFld Test0975.iArrFld = " + Test0975.lFld + "," + (Test0975.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0975.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0975 _instance = new Test0975();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
