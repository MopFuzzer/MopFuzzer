// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0165 {

    public static final int N = 400;

    public static long instanceCount=45604L;
    public static double dFld=57.113341;
    public short sFld=-29389;
    public byte byFld=-114;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0165.iArrFld, 27595);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        float f3=-1.777F;

        i4 = -200;
        Test0165.iArrFld[(i5 >>> 1) % N] -= (int) f3;
        i5 >>>= i4;
        vMeth1_check_sum += i4 + i5 + Float.floatToIntBits(f3);
    }

    public static void vMeth(long l, float f1, float f2) {

        int i=16856, i1=4, i2=14, i3=-57264, i6=-6;
        byte by=-79;
        short s=-32307;
        boolean b1=false;

        for (i = 9; i < 300; ++i) {
            switch ((i % 10) + 38) {
            case 38:
                for (i2 = 1; i2 < 6; i2++) {
                    l += i2;
                    vMeth1(i2, i);
                    i6 = 1;
                    while (++i6 < 2) {
                        Test0165.dFld -= 55.450F;
                        i1 ^= (int) Test0165.instanceCount;
                        Test0165.dFld += i;
                        Test0165.iArrFld[i2] *= (int) 37414L;
                        by >>= (byte) Test0165.instanceCount;
                        l = i;
                        l += (i6 ^ i);
                    }
                    s += (short)(7 + (i2 * i2));
                    Test0165.dFld = l;
                }
                break;
            case 39:
                i1 <<= s;
            case 40:
            case 41:
                Test0165.dFld = f1;
                break;
            case 42:
                if (b1) break;
                break;
            case 43:
                l = i2;
            case 44:
                try {
                    i1 = (i3 % -42131);
                    i1 = (-47134 / Test0165.iArrFld[i]);
                    i3 = (130 / i2);
                } catch (ArithmeticException a_e) {}
            case 45:
                if (b1) break;
                break;
            case 46:
                i3 = (int) Test0165.instanceCount;
                break;
            case 47:
                i1 = by;
                break;
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i + i1 + i2 + i3 + i6 + by + s +
            (b1 ? 1 : 0);
    }

    public static long lMeth(float f, boolean b) {

        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -1.649F);

        vMeth(Test0165.instanceCount, f, f);
        for (int i7 : Test0165.iArrFld) {
            fArr[(i7 >>> 1) % N] *= Test0165.instanceCount;
        }
        long meth_res = Float.floatToIntBits(f) + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b2=false;
        int i8=-9, i9=-165, i10=23481, i11=48978, i12=-228, i13=-99, i14=90;
        float f4=1.228F;
        float[] fArr1 =new float[N];
        short s1=17550;

        FuzzerUtils.init(fArr1, 1.548F);

        Test0165.instanceCount <<= (lMeth(94.190F, b2) << i8);
        for (i9 = 6; i9 < 361; i9 += 2) {
            i8 = i8;
            i10 = i8;
            switch ((i9 % 7) + 117) {
            case 117:
                i10 += (i9 | i9);
                Test0165.dFld %= (i9 | 1);
                switch (((i9 % 1) * 5) + 60) {
                case 63:
                    i8 = i8;
                    Test0165.dFld += i10;
                    i11 = 1;
                    while (++i11 < 142) {
                        i8 += (int) Test0165.instanceCount;
                        i8 += i10;
                    }
                    break;
                default:
                    i10 += -28001;
                    Test0165.instanceCount = 7L;
                    Test0165.instanceCount <<= -6;
                    for (i12 = i9; i12 < 142; ++i12) {
                        i8 += (((i12 * i8) + i13) - sFld);
                        i13 += i9;
                        i14 = 1;
                        while (++i14 < 1) {
                            byFld += (byte)(((i14 * i8) + i12) - i12);
                            i13 = sFld;
                            Test0165.iArrFld[i14 + 1] -= i12;
                        }
                    }
                }
                switch ((i9 % 1) + 100) {
                case 100:
                    i10 = (int) Test0165.instanceCount;
                    i10 >>= i14;
                    break;
                default:
                    f4 += (i9 * i12);
                    i13 -= i8;
                    i10 = s1;
                    i8 = (int) Test0165.instanceCount;
                }
                break;
            case 118:
                i10 += (int)f4;
                break;
            case 119:
            case 120:
                Test0165.dFld = i12;
                break;
            case 121:
                fArr1 = fArr1;
                break;
            case 122:
                Test0165.iArrFld[i9 - 1] *= i8;
            case 123:
                if (b2) break;
                break;
            }
        }

        FuzzerUtils.out.println("b2 i8 i9 = " + (b2 ? 1 : 0) + "," + i8 + "," + i9);
        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 f4 = " + i13 + "," + i14 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("s1 fArr1 = " + s1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0165.instanceCount Test0165.dFld sFld = " + Test0165.instanceCount + "," +
                Double.doubleToLongBits(Test0165.dFld) + "," + sFld);
        FuzzerUtils.out.println("byFld Test0165.iArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0165.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0165 _instance = new Test0165();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
