// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0131 {

    public static final int N = 400;

    public static long instanceCount=3358891684L;
    public static float fFld=5.134F;
    public int iFld=-43410;
    public long[] lArrFld =new long[N];

    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i10, int i11) {

        long l2=14L;
        long[] lArr =new long[N];
        int i12=-9289;
        int i13=2;
        int i14=-12;
        int i15=1;
        int i16=1;
        int i17=-15;
        int[][] iArr2 =new int[N][N];
        short s=-9297;
        byte by=41;
        double d1=0.97868;

        FuzzerUtils.init(lArr, -7884334263522827759L);
        FuzzerUtils.init(iArr2, 53628);

        for (l2 = 7; l2 < 327; ++l2) {
            float f2=2.129F;
            lArr[(int)(l2)] <<= s;
            Test0131.instanceCount -= 13;
            Test0131.instanceCount += (l2 * l2);
            switch ((((i13 >>> 1) % 10) * 5) + 33) {
            case 72:
                for (i14 = 1; i14 < 5; ++i14) {
                    i10 = (int)-23.632F;
                    iArr2[(int)(l2 + 1)][i14] -= i10;
                    i15 += (i14 | Test0131.instanceCount);
                    i11 = i13;
                    i16 = 2;
                    do {
                        i15 += (((i16 * Test0131.instanceCount) + i11) - i12);
                        Test0131.instanceCount *= i10;
                        i10 >>= i12;
                        i10 *= (int)1.94796;
                    } while (--i16 > 0);
                }
                break;
            case 53:
                i11 = (int) Test0131.instanceCount;
                break;
            case 79:
                if (false) continue;
                break;
            case 41:
                i12 -= (int)f2;
                break;
            case 51:
                i15 *= (int) Test0131.instanceCount;
                break;
            case 46:
                i17 = by;
            case 35:
                i10 = i13;
            case 69:
                i10 -= (int)d1;
                break;
            case 37:
            case 55:
                s &= (short)i10;
            }
        }
        vMeth_check_sum += i10 + i11 + l2 + i12 + s + i13 + i14 + i15 + i16 + i17 + by + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public static long lMeth(float f1, int i6, int i7) {

        int i8=-232;
        int i9=-13;
        int i18=19406;
        int i19=13;
        int i20=11147;
        int[] iArr1 =new int[N];
        double d2=-62.70295;
        byte by1=36;

        FuzzerUtils.init(iArr1, 49044);

        for (i8 = 7; i8 < 127; i8++) {
            try {
                i7 = (i9 % -99);
                i6 = (i8 / i6);
                i7 = (i9 / i9);
            } catch (ArithmeticException a_e) {}
            if (((iArr1[i8 - 1] + (i6 * i9)) - ((i6 + Test0131.instanceCount) + i6)) != i7) break;
            vMeth(i8, i9);
            for (i18 = i8; i18 < 13; ++i18) {
                i9 = i9;
                f1 = f1;
                switch (((i8 % 2) * 5) + 114) {
                case 115:
                case 118:
                    d2 -= i9;
                    i20 = 1;
                    while (++i20 < 1) {
                        f1 *= by1;
                        i9 = i19;
                        iArr1[i18] = (int) Test0131.instanceCount;
                        Test0131.instanceCount = i20;
                    }
                    break;
                default:
                    Test0131.instanceCount = Test0131.instanceCount;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + i18 + i19 + Double.doubleToLongBits(d2) + i20 +
            by1 + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vSmallMeth(long l, double d, long l1) {

        int i21=125;

        lMeth(Test0131.fFld, i21, i21);
        vSmallMeth_check_sum += l + Double.doubleToLongBits(d) + l1 + i21;
    }

    public void mainTest(String[] strArr1) {

        int i=-13;
        int i1=77;
        int i2=-17287;
        int i3=34769;
        int i4=11;
        int i5=0;
        int i22=-50998;
        int i23=-26304;
        int i24=-1;
        int i25=-6344;
        int[] iArr =new
                    int[N];
        float f=-1.129F;
        double d3=18.119022;
        double d4=1.71558;
        double[] dArr =new double[N];
        boolean b=true;
        byte by2=26;

        FuzzerUtils.init(iArr, 37);
        FuzzerUtils.init(dArr, -106.14203);

        i <<= i;
        for (i1 = 1; i1 < 216; ++i1) {
            f *= (iArr[i1]++);
            f -= iArr[i1 - 1];
            for (i3 = 5; i3 < 117; i3++) {
                f -= (float)((--dArr[i3]) + 39);
                dArr[i1] += Test0131.instanceCount;
            }
            i5 = 1;
            do {
                for (int smallinvoc = 0; smallinvoc < 1; smallinvoc++)
                    vSmallMeth(Test0131.instanceCount, d3,
                            Test0131.instanceCount);
                b = b;
                try {
                    i4 = (i1 % i5);
                    i = (-29 % i3);
                    i = (988246976 % i3);
                } catch (ArithmeticException a_e) {}
            } while (++i5 < 117);
            by2 |= (byte)i2;
            Test0131.instanceCount <<= i5;
            i22 = 1;
            while (++i22 < 117) {
                lArrFld[i22] = (long)d3;
                i4 = i1;
                i2 = iFld;
                iArr[i1 + 1] += -215;
                i2 = i4;
                if (b) break;
                Test0131.instanceCount += (i22 * Test0131.instanceCount);
                Test0131.instanceCount = -43657;
                b = b;
            }
            for (d4 = 3; d4 < 117; ++d4) {
                dArr[(int)(d4)] -= 13;
                for (i24 = 1; 2 > i24; ++i24) {
                    if (b) break;
                    iFld &= i5;
                    i += i5;
                    i2 = i23;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f i3 i4 = " + Float.floatToIntBits(f) + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 d3 b = " + i5 + "," + Double.doubleToLongBits(d3) + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("by2 i22 d4 = " + by2 + "," + i22 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("iArr dArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0131.instanceCount Test0131.fFld iFld = " + Test0131.instanceCount + "," +
                Float.floatToIntBits(Test0131.fFld) + "," + iFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0131 _instance = new Test0131();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth lMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
