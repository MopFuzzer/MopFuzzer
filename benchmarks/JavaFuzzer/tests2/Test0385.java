// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:30 2023
public class Test0385 {

    public static final int N = 400;

    public static long instanceCount=-1325958678L;
    public static boolean bFld=false;
    public static byte byFld=-111;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0385.iArrFld, 18461);
        FuzzerUtils.init(Test0385.fArrFld, -2.106F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i8, int i9) {

        long l1=44L;
        int i10=6, i11=202, i12=10, i13=2548;
        double d1=79.115722;
        float f3=-89.50F;

        switch (((i8 >>> 1) % 2) + 124) {
        case 124:
            Test0385.iArrFld[(147 >>> 1) % N] <<= i8;
            for (l1 = 7; 328 > l1; ++l1) {
                for (i11 = 1; i11 < 5; ++i11) {
                    Test0385.iArrFld[(int) (l1 + 1)] -= i9;
                    for (d1 = 1; 2 > d1; ++d1) {
                        try {
                            Test0385.iArrFld[(int) (d1 - 1)] = (34624 / i8);
                            Test0385.iArrFld[(int) (d1 + 1)] = (i8 / i11);
                            i9 = (i13 / i9);
                        } catch (ArithmeticException a_e) {}
                        Test0385.bFld = Test0385.bFld;
                        f3 *= Test0385.byFld;
                        i12 += i9;
                        switch (((i10 >>> 1) % 9) + 103) {
                        case 103:
                            i13 += (int)(d1 * i13);
                            i10 = (int)l1;
                            i13 = i13;
                            break;
                        case 104:
                            i10 *= (int)-27425L;
                            break;
                        case 105:
                            i13 += i9;
                        case 106:
                            i12 += (int) (((d1 * Test0385.instanceCount) + i9) - i13);
                            break;
                        case 107:
                            Test0385.iArrFld[(int) (d1)] = i9;
                            break;
                        case 108:
                            try {
                                Test0385.iArrFld[(int) (d1 - 1)] = (i13 % Test0385.iArrFld[(int) (d1 + 1)]);
                                i12 = (-48 % i8);
                                i8 = (i8 / 1408391972);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 109:
                        case 110:
                        case 111:
                            Test0385.byFld += (byte) (d1 * f3);
                        }
                    }
                }
            }
        case 125:
            l -= l;
        default:
            l -= -13;
        }
        vMeth1_check_sum += l + i8 + i9 + l1 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + i13 +
            Float.floatToIntBits(f3);
    }

    public static void vMeth(float f2, boolean b, int i5) {

        int i6=45, i7=1954, i14=12, i15=-8, i16=18414, i17=-127, i18=3, i19=0, i20=-67, i21=-153;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-24);

        for (i6 = 7; i6 < 203; i6++) {
            vMeth1(-32L, i5, i5);
            i7 = 143;
        }
        byArr[(i6 >>> 1) % N] = (byte)-150L;
        i7 <<= i6;
        for (i14 = 7; 126 > i14; ++i14) {
            for (i16 = 1; i16 < 13; i16++) {
                i7 <<= 14;
                Test0385.instanceCount &= i15;
                Test0385.instanceCount *= i14;
            }
            i7 = i6;
            for (i18 = 1; i18 < 13; i18++) {
                for (i20 = 2; 1 < i20; i20--) {
                    i7 = i6;
                    i17 += (((i20 * i17) + i16) - i7);
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f2) + (b ? 1 : 0) + i5 + i6 + i7 + i14 + i15 + i16 + i17 + i18 + i19 +
            i20 + i21 + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(double d, int i2) {

        int i3=5, i4=-1, i22=1, i23=-4, i24=-9, i25=-3, i26=25136, i27=-104;
        float f1=-105.251F;
        short s=-10219;
        long l2=-56080L;
        byte[][] byArr1 =new byte[N][N];

        FuzzerUtils.init(byArr1, (byte)-17);

        Test0385.iArrFld[(i2 >>> 1) % N] ^= i2;
        for (i3 = 9; 258 > i3; ++i3) {
            i2 += (((i3 * f1) + i3) - Test0385.instanceCount);
            i2 += (((i3 * i3) + i4) - i3);
        }
        vMeth(f1, false, i4);
        for (i22 = 3; i22 < 130; i22++) {
            i2 += s;
        }
        i24 = 1;
        while (++i24 < 255) {
            i2 <<= i23;
            for (l2 = 1; l2 < 6; ++l2) {
                i25 += (int)l2;
                for (i26 = 1; i26 < 2; ++i26) {
                    Test0385.iArrFld[(int) (l2)] = (int) -4567730690550395652L;
                    if (Test0385.bFld) break;
                    byArr1[i24] = byArr1[i26 - 1];
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i2 + i3 + i4 + Float.floatToIntBits(f1) + i22 + i23 + s + i24 + l2
            + i25 + i26 + i27 + FuzzerUtils.checkSum(byArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-3;
        int i1=-231;
        int i28=45046;
        int i29=9509;
        int i30=194;
        int i31=-28351;
        int i32=-12132;
        int i33=-8;
        int i34=5;
        int[][] iArr =new int[N][N];
        float f=-1.679F;
        double d2=-2.89849;

        FuzzerUtils.init(iArr, -36856);

        iArr = (iArr = iArr);
        for (i = 308; 9 < i; --i) {
            f += ((i1 * iMeth(d2, 68)) + Test0385.instanceCount);
            iArr[i - 1][i] *= (int)f;
            Test0385.instanceCount += (i ^ Test0385.instanceCount);
            for (i28 = 2; i28 < 84; ++i28) {
                switch (((1 >>> 1) % 1) + 6) {
                case 6:
                    i1 = i29;
                    i30 = 1;
                    do {
                        short s1=-4205;
                        iArr[i28 - 1][i - 1] = i28;
                        i1 = (int)1.7685;
                        iArr[i][i30 - 1] &= (int) Test0385.instanceCount;
                        Test0385.instanceCount |= i1;
                        s1 += (short)(((i30 * i30) + i28) - i);
                        i1 += (int) Test0385.instanceCount;
                        i1 = 806;
                    } while (++i30 < 2);
                    Test0385.instanceCount = 11L;
                    for (i31 = i28; i31 < 2; i31++) {
                        i29 = Test0385.byFld;
                        Test0385.instanceCount <<= Test0385.instanceCount;
                        i29 += i;
                        Test0385.fArrFld[i28 + 1] *= i28;
                        iArr[i28][i31 + 1] = (int)d2;
                        i32 *= (int)-1.30231;
                    }
                    break;
                }
            }
            Test0385.instanceCount -= 4;
            iArr[i][i + 1] -= 12370;
            for (i33 = i; i33 < 84; ++i33) {
                Test0385.instanceCount += -3;
                i1 += (int)d2;
                f += (i33 * i33);
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d2 i28 i29 = " + Double.doubleToLongBits(d2) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 i34 iArr = " + i33 + "," + i34 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0385.instanceCount Test0385.bFld Test0385.byFld = " + Test0385.instanceCount + "," + (Test0385.bFld ?
                1 : 0) + "," + Test0385.byFld);
        FuzzerUtils.out.println("Test0385.iArrFld Test0385.fArrFld = " + FuzzerUtils.checkSum(Test0385.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0385.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0385 _instance = new Test0385();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
