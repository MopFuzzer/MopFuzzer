// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0613 {

    public static final int N = 400;

    public static long instanceCount=178L;
    public static double dFld=9.84532;
    public static short sFld=-31879;
    public static int iFld=-49187;
    public float fFld=-83.127F;
    public static byte byFld=-117;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6, boolean b) {

        int i7=14;
        int i8=-52121;
        int i9=-93;
        int i10=-5;
        int i11=-25831;
        int i12=8;
        int[] iArr =new int[N];
        byte by=56;

        FuzzerUtils.init(iArr, -3);

        for (i7 = 3; i7 < 178; i7++) {
            i5 += (3 + (i7 * i7));
            b = true;
            iArr[i7 + 1] -= 51;
            i9 = 1;
            while (++i9 < 9) {
                i5 = (int) Test0613.instanceCount;
                i5 *= i6;
                Test0613.dFld *= i7;
            }
            for (i10 = 1; i10 < 9; ++i10) {
                if (b) break;
                Test0613.instanceCount ^= Test0613.sFld;
                i6 += (((i10 * Test0613.instanceCount) + by) - i8);
                i12 = 1;
                while (++i12 < 2) {
                    by <<= (byte)i9;
                    i5 -= i5;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + (b ? 1 : 0) + i7 + i8 + i9 + i10 + i11 + by + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i3=8;
        int i4=-1069;
        int i13=23549;
        int i14=-116;
        int[][] iArr1 =new int[N][N];
        double d=0.39910;
        boolean b1=false;
        float f=-53.716F;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, 111);
        FuzzerUtils.init(fArr, -119.576F);

        for (i3 = 2; i3 < 236; i3++) {
            switch ((i3 % 2) + 73) {
            case 73:
                d = 1;
                do {
                    vMeth2(i4, 24758, b1);
                    switch (((i4 >>> 1) % 2) + 57) {
                    case 57:
                        i4 >>= -50127;
                        for (i13 = 1; i13 < 1; ++i13) {
                            if (b1) continue;
                            Test0613.dFld = i3;
                            f += f;
                            iArr1[(int) (d - 1)][i3 + 1] -= Test0613.iFld;
                        }
                        break;
                    case 58:
                        Test0613.iFld *= i3;
                        break;
                    default:
                        fArr[(int)(d)] *= i14;
                        i14 = i4;
                        if (true) break;
                    }
                } while (++d < 7);
                break;
            case 74:
                iArr1[i3 - 1][i3 + 1] += -150;
                break;
            }
        }
        vMeth1_check_sum += i3 + i4 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + i13 + i14 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, -46133);

        vMeth1();
        iArr2 = FuzzerUtils.int1array(N, (int)4);
        vMeth_check_sum += FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        long l=44525L, l1=-14L, l2=-210L;
        int i=-11;
        int i1=152;
        int i2=112;
        int i15=-14166;
        int i17=-6;
        int[] iArr3 =new int[N];
        boolean b2=false;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr3, 0);
        FuzzerUtils.init(bArr, false);

        for (l = 241; l > 12; l--) {
            i += (int)l;
            i *= (i *= -71);
            for (i1 = 1; i1 < 110; ++i1) {
                i2 = (int) (Test0613.instanceCount++);
                vMeth();
                if (b2) continue;
                Test0613.iFld <<= (int) l;
                fFld -= Test0613.instanceCount;
                for (l1 = 1; l1 < 2; l1++) {
                    int i16=8;
                    try {
                        i15 = (-35 / i2);
                        i = (50845 % i15);
                        i2 = (i16 % i2);
                    } catch (ArithmeticException a_e) {}
                }
                switch (((i1 % 2) * 5) + 29) {
                case 31:
                    i15 -= (int)fFld;
                    iArr3[i1 - 1] -= i1;
                    break;
                case 37:
                    if (b2) continue;
                    switch ((int)(((l % 8) * 5) + 122)) {
                    case 136:
                        fFld *= Test0613.iFld;
                        i2 <<= i1;
                        break;
                    case 127:
                        i += Test0613.iFld;
                        i2 = i;
                    case 138:
                        i2 += (i1 ^ Test0613.instanceCount);
                        break;
                    case 157:
                        for (l2 = 1; l2 < 2; ++l2) {
                            i17 = Test0613.sFld;
                            Test0613.instanceCount = i17;
                            Test0613.instanceCount >>= Test0613.iFld;
                            Test0613.instanceCount = i;
                            iArr3 = iArr3;
                            Test0613.iFld -= (int) fFld;
                            i += (int)l2;
                            Test0613.iFld += (int) l;
                        }
                        break;
                    case 142:
                        b2 = true;
                        break;
                    case 126:
                        bArr[i1] = b2;
                    case 144:
                        i2 = Test0613.byFld;
                    case 148:
                        i = Test0613.iFld;
                        break;
                    }
                    break;
                default:
                    if (false) continue;
                }
            }
        }

        FuzzerUtils.out.println("l i i1 = " + l + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 b2 l1 = " + i2 + "," + (b2 ? 1 : 0) + "," + l1);
        FuzzerUtils.out.println("i15 l2 i17 = " + i15 + "," + l2 + "," + i17);
        FuzzerUtils.out.println("iArr3 bArr = " + FuzzerUtils.checkSum(iArr3) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0613.instanceCount Test0613.dFld Test0613.sFld = " + Test0613.instanceCount + "," +
                Double.doubleToLongBits(Test0613.dFld) + "," + Test0613.sFld);
        FuzzerUtils.out.println("Test0613.iFld fFld Test0613.byFld = " + Test0613.iFld + "," + Float.floatToIntBits(fFld) + "," +
                Test0613.byFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0613 _instance = new Test0613();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
