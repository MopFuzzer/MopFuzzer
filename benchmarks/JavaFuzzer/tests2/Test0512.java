// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0512 {

    public static final int N = 400;

    public static long instanceCount=2848359338L;
    public static long lFld=13L;
    public volatile long[] lArrFld =new long[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, float f3) {

        int i5=-51136, i6=-16, i7=-39682, i8=-12, i9=197;
        short s=-5020;
        long l2=3213022776377645210L;
        long[] lArr1 =new long[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 1.593F);
        FuzzerUtils.init(lArr1, -80L);

        for (i5 = 14; i5 < 322; ++i5) {
            s ^= (short)-41257;
            i4 += 3465;
            i7 = 1;
            do {
                f3 += i5;
                i4 = i8;
                fArr = fArr;
                i4 >>= i6;
                f3 -= i7;
                i8 = i4;
            } while (++i7 < 5);
            i4 = (int) Test0512.instanceCount;
            for (l2 = i5; 5 > l2; l2++) {
                Test0512.instanceCount -= i5;
                i6 <<= (int)-2290606114L;
            }
            lArr1[i5] = i5;
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f3) + i5 + i6 + s + i7 + i8 + l2 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth() {

        long l1=25394L;
        int i3=12;
        int i10=3111;
        int i11=4;
        int i12=-5;
        int i13=39;
        int[] iArr1 =new int[N];
        float f2=-2.895F;

        FuzzerUtils.init(iArr1, -54);

        l1 = 219;
        do {
            iArr1[(int)(l1 - 1)] += (int)(((iArr1[(int)(l1)]--) + (i3 + i3)) + (i3 - (f2 + i3)));
            vMeth1(i3, f2);
        } while ((l1 -= 3) > 0);
        i3 <<= i3;
        i3 &= i3;
        iArr1[(i3 >>> 1) % N] <<= 14;
        for (i10 = 11; i10 < 277; i10++) {
            Test0512.lFld += (i10 - i10);
            for (i12 = 1; i12 < 6; ++i12) {
                iArr1[i12 + 1] -= i12;
                iArr1[i10] <<= 10;
            }
            i3 >>>= (int) Test0512.instanceCount;
        }
        long meth_res = l1 + i3 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        float f=2.710F, f1=-62.675F;
        long l=-1252873103444682591L;
        long[] lArr =new long[N];
        int i2=5;
        int[] iArr =new int[N];
        double d=0.41885;
        boolean b=true;

        FuzzerUtils.init(iArr, -57376);
        FuzzerUtils.init(lArr, 26419L);

        f = 1;
        do {
            if (b) {
                for (l = 1; l < 11; l++) {
                    iArr[(int) (f + 1)] >>= (int) Test0512.instanceCount;
                    Test0512.instanceCount <<= (Test0512.instanceCount += i2);
                    f1 = (lArr[(int)(f)]++);
                    i2 *= (-(i2--));
                    i2 = (int) (((-23186 - (--i2)) - iMeth()) % (Test0512.lFld | 1));
                    i2 >>= i2;
                    iArr[(int)(l + 1)] += i2;
                    d = 1;
                    while (++d < 2) {
                        i2 *= 0;
                        iArr[(int)(l + 1)] -= i2;
                        Test0512.instanceCount |= i2;
                    }
                    if (b) continue;
                }
            } else if (b) {
                try {
                    iArr[(int)(f + 1)] = (-3 / i2);
                    iArr[(int)(f + 1)] = (i2 / -33149);
                    i2 = (iArr[(int)(f)] % i2);
                } catch (ArithmeticException a_e) {}
            } else {
                try {
                    i2 = (-31959 / iArr[(int)(f + 1)]);
                    iArr[(int)(f + 1)] = (i2 / i2);
                    i2 = (iArr[(int)(f - 1)] % i2);
                } catch (ArithmeticException a_e) {}
            }
        } while (++f < 149);
        vMeth_check_sum += Float.floatToIntBits(f) + l + i2 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) +
            (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-128;
        int i1=-6;
        int i14=245;
        int i15=-11384;
        int i16=58338;
        int i17=-189;
        int i18=-36748;
        int[] iArr2 =new int[N];
        byte by=-44;
        short s1=22006;
        boolean b1=false;
        float f4=-42.495F;
        long l3=10L;
        double d1=-125.107875;

        FuzzerUtils.init(iArr2, 61577);

        for (i = 4; 397 > i; i++) {
            vMeth();
            i1 += by;
            s1 += (short)i;
            if (b1) continue;
            iArr2[i + 1] >>= i1;
        }
        f4 %= -2337059286L;
        for (l3 = 7; 249 > l3; ++l3) {
            i1 <<= i1;
            by *= (byte)f4;
            i14 += i;
            i1 >>= i1;
            i15 = 1;
            do {
                by += (byte)i14;
                f4 += i1;
            } while (++i15 < 104);
            i1 = -111;
            f4 += i15;
            s1 += (short) (((l3 * i) + Test0512.instanceCount) - i);
            iArr2[(int)(l3)] = -218;
        }
        for (i16 = 398; i16 > 19; --i16) {
            try {
                iArr2[i16 + 1] = (iArr2[i16] % -26);
                i1 = (iArr2[i16] % i15);
                i1 = (i17 % -59433);
            } catch (ArithmeticException a_e) {}
            switch ((((i14 >>> 1) % 4) * 5) + 104) {
            case 114:
                f4 += (i16 - f4);
                Test0512.instanceCount -= -224;
                i1 = 5;
                break;
            case 109:
                i18 = 1;
                while (++i18 < 66) {
                    i1 = i14;
                    i14 = i;
                    Test0512.lFld += (-43613 + (i18 * i18));
                    Test0512.instanceCount = i17;
                }
                break;
            case 112:
                d1 += l3;
                break;
            case 119:
            }
        }

        FuzzerUtils.out.println("i i1 by = " + i + "," + i1 + "," + by);
        FuzzerUtils.out.println("s1 b1 f4 = " + s1 + "," + (b1 ? 1 : 0) + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("l3 i14 i15 = " + l3 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("d1 iArr2 = " + Double.doubleToLongBits(d1) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0512.instanceCount Test0512.lFld lArrFld = " + Test0512.instanceCount + "," + Test0512.lFld + ","
            + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0512 _instance = new Test0512();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
