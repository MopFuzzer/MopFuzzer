// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0739 {

    public static final int N = 400;

    public static volatile long instanceCount=1516082100L;
    public static boolean bFld=true;
    public static float fFld=25.874F;
    public int iFld=20097;
    public int iFld1=-5;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0739.iArrFld, 11);
        FuzzerUtils.init(Test0739.lArrFld, -8L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, int i4, int i5) {

        int i6=-22;
        int i7=-64681;
        int i8=-149;
        int[] iArr =new int[N];
        double d=-1.42416;

        FuzzerUtils.init(iArr, 36141);

        for (i6 = 8; 141 > i6; i6++) {
            Test0739.instanceCount += i4;
            i5 -= (int)f1;
        }
        if (Test0739.bFld) {
            i7 >>= i7;
            i5 = -66;
        }
        d -= -201;
        d = i4;
        iArr[(i5 >>> 1) % N] *= i4;
        i8 = 1;
        do {
            Test0739.instanceCount += (i8 * i8);
            i4 += i8;
            Test0739.instanceCount <<= Test0739.instanceCount;
            if (i4 != 0) {
                vMeth2_check_sum += Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
            Test0739.instanceCount = Test0739.instanceCount;
        } while (++i8 < 273);
        vMeth2_check_sum += Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3) {

        int i9=-14943, i10=-107, i11=-9, i12=-27084, i13=-24381, i14=-53262, i15=24727;

        vMeth2(Test0739.fFld, i3, i2);
        for (i9 = 15; i9 < 257; ++i9) {
            Test0739.iArrFld[i9] /= -146;
            i10 += 64771;
            for (i11 = 1; 7 > i11; i11++) {
                Test0739.bFld = Test0739.bFld;
                Test0739.iArrFld[(46674 >>> 1) % N] -= i3;
                Test0739.instanceCount += Test0739.instanceCount;
                i10 >>>= i11;
            }
            i13 = 1;
            while (++i13 < 7) {
                i10 = (int)-137181613667264066L;
                for (i14 = 1; i14 < 1; i14++) {
                    Test0739.fFld = Test0739.instanceCount;
                    try {
                        Test0739.iArrFld[i9 + 1] = (Test0739.iArrFld[i14 - 1] / i12);
                        i12 = (Test0739.iArrFld[i9 - 1] % i12);
                        i10 = (Test0739.iArrFld[i9] % i9);
                    } catch (ArithmeticException a_e) {}
                    i12 = i9;
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i9 + i10 + i11 + i12 + i13 + i14 + i15;
    }

    public static void vMeth(long l) {

        int i=-99, i1=20904, i16=-162, i17=22846, i18=0, i19=55852, i20=2, i21=41585, i22=238, i23=-11;
        float f=-1.160F;

        for (i = 5; i < 279; i++) {
            i1 -= (int)f;
        }
        vMeth1(i, i);
        for (i16 = 8; i16 < 161; i16++) {
            for (i18 = 1; 10 > i18; ++i18) {
                f = i17;
                for (i20 = 1; i20 < 2; ++i20) {
                    Test0739.iArrFld[i16] %= (int) (i16 | 1);
                    i17 = i1;
                }
                for (i22 = 1; i22 < 2; i22++) {
                    Test0739.instanceCount = i;
                }
                f += i18;
                Test0739.fFld += i18;
                i1 = (int)l;
                Test0739.lArrFld[i18 + 1] *= i22;
            }
        }
        vMeth_check_sum += l + i + i1 + Float.floatToIntBits(f) + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i24=26276, i25=-127, i26=41157, i27=-14, i28=-254, i29=23, i30=-52;
        short s=-781;
        float f2=-1.494F;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 0.104558);

        vMeth(Test0739.instanceCount);
        Test0739.instanceCount -= Test0739.instanceCount;
        for (i24 = 1; i24 < 364; i24++) {
            long l1=-1385180135L;
            for (i26 = 3; 69 > i26; ++i26) {
                double d1=0.73202;
                Test0739.iArrFld[i24] *= (int) d1;
                Test0739.instanceCount = iFld;
                Test0739.iArrFld[i26] = i24;
                iFld1 += (((i26 * iFld1) + i25) - iFld);
                switch ((i24 % 5) + 54) {
                case 54:
                    i27 *= iFld1;
                    dArr[i24 + 1] -= iFld;
                    Test0739.iArrFld = Test0739.iArrFld;
                case 55:
                    s -= (short)208;
                    i25 = i27;
                    Test0739.fFld = i24;
                    break;
                case 56:
                    dArr[i26] /= (Test0739.instanceCount | 1);
                case 57:
                    iFld1 += (i26 + iFld);
                    break;
                case 58:
                    for (i28 = 1; i28 < 2; i28++) {
                        if (Test0739.bFld) break;
                        s += (short)(-6 + (i28 * i28));
                        i29 >>>= i27;
                        Test0739.instanceCount += Test0739.instanceCount;
                        i29 = (int) Test0739.instanceCount;
                        Test0739.iArrFld[i28] = -124;
                    }
                    iFld = iFld1;
                    break;
                default:
                    iFld1 *= (int) Test0739.instanceCount;
                    for (f2 = 1; f2 < 2; ++f2) {
                        i27 >>= i27;
                    }
                    i27 += i26;
                }
            }
            i27 += (((i24 * l1) + i27) - f2);
        }

        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 s i28 = " + i27 + "," + s + "," + i28);
        FuzzerUtils.out.println("i29 f2 i30 = " + i29 + "," + Float.floatToIntBits(f2) + "," + i30);
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0739.instanceCount Test0739.bFld Test0739.fFld = " + Test0739.instanceCount + "," + (Test0739.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0739.fFld));
        FuzzerUtils.out.println("iFld iFld1 Test0739.iArrFld = " + iFld + "," + iFld1 + "," +
                FuzzerUtils.checkSum(Test0739.iArrFld));
        FuzzerUtils.out.println("Test0739.lArrFld = " + FuzzerUtils.checkSum(Test0739.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0739 _instance = new Test0739();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
