// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0132 {

    public static final int N = 400;

    public static long instanceCount=-4661589864204042846L;
    public static boolean bFld=false;
    public static int iFld=-241;
    public static float fFld=1.891F;
    public static double dFld=0.109156;
    public byte byFld=-109;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static double[][] dArrFld =new double[N][N];

    static {
        FuzzerUtils.init(Test0132.lArrFld, -1464L);
        FuzzerUtils.init(Test0132.iArrFld, 194);
        FuzzerUtils.init(Test0132.dArrFld, 0.33058);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f1, double d) {

        int i7=-60814;
        int i8=-216;
        int i9=-9;
        int i10=-8;
        int i11=17208;
        int i12=-193;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 156);

        for (i7 = 19; 382 > i7; i7++) {
            i8 += (((i7 * i7) + i7) - i8);
            for (i9 = 1; i9 < 5; ++i9) {
                for (i11 = 2; i11 > i7; --i11) {
                    if (Test0132.bFld) {
                        i8 += (i11 | i10);
                        if (Test0132.bFld) {
                            Test0132.lArrFld[i7 - 1] = i10;
                            iArr[i11] ^= 31580;
                            i10 *= i7;
                            i10 /= (int) (Test0132.instanceCount | 1);
                        } else if (Test0132.bFld) {
                            Test0132.instanceCount -= (long) f1;
                        } else if (Test0132.bFld) {
                            f1 += (-11248 + (i11 * i11));
                            Test0132.lArrFld[i9 + 1] -= i7;
                        }
                    } else {
                        i8 -= (int) Test0132.instanceCount;
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, long l, float f) {

        int i4=4780, i5=2997, i6=-236;
        double d1=1.35190;

        for (i4 = 2; 223 > i4; i4++) {
            if ((((--f) - Math.abs(-1.79822)) - Test0132.instanceCount) != i6) {
                i3 += i4;
            } else {
                f *= (((i3 << l) + iMeth1(-31.442F, d1)) - i4);
                l += (long)d1;
            }
            if (false) continue;
            i6 >>= i4;
            i3 += (i4 * i4);
            if (i5 != 0) {
                vMeth_check_sum += i3 + l + Float.floatToIntBits(f) + i4 + i5 + i6 + Double.doubleToLongBits(d1);
                return;
            }
            Test0132.instanceCount = 246;
            i6 &= i6;
        }
        Test0132.bFld = Test0132.bFld;
        i3 = i6;
        f *= i6;
        Test0132.instanceCount = i5;
        vMeth_check_sum += i3 + l + Float.floatToIntBits(f) + i4 + i5 + i6 + Double.doubleToLongBits(d1);
    }

    public static int iMeth() {

        int i13=-27418, i14=-46634, i15=14, i16=203, i17=6809, i18=-175;
        short s=8482;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)25211);

        vMeth(Test0132.iFld, Test0132.instanceCount, Test0132.fFld);
        switch (((Test0132.iFld >>> 1) % 5) + 50) {
        case 50:
            for (i13 = 2; i13 < 270; ++i13) {
                for (i15 = 1; i15 < 6; i15++) {
                    for (i17 = 2; i17 > 1; --i17) {
                        Test0132.iFld *= i16;
                        Test0132.instanceCount += (i17 - Test0132.instanceCount);
                        Test0132.iFld <<= (int) Test0132.instanceCount;
                    }
                    Test0132.iArrFld[i15 - 1] -= i17;
                    Test0132.fFld -= (float) Test0132.dFld;
                    i18 -= i17;
                    Test0132.instanceCount *= Test0132.instanceCount;
                }
                sArr[i13] = (short)i15;
                Test0132.instanceCount = 426318627L;
                i16 += i13;
            }
        case 51:
            Test0132.iFld += i18;
            break;
        case 52:
            i16 -= i15;
        case 53:
            i16 = i14;
            break;
        case 54:
            s = (short)3;
        default:
            i16 &= (int) Test0132.instanceCount;
        }
        long meth_res = i13 + i14 + i15 + i16 + i17 + i18 + s + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=10432, i1=147, i2=-12, i19=-3, i20=-46795, i21=3390, i22=-203, i23=34, i24=0, i25=4;
        double d2=-11.113426;
        short s1=12536;

        i += i;
        for (i1 = 2; i1 < 187; i1++) {
            Test0132.lArrFld[i1 + 1] &= iMeth();
        }
        for (i19 = 255; i19 > 1; i19 -= 2) {
            switch ((((i20 >>> 1) % 6) * 5) + 69) {
            case 86:
                Test0132.fFld -= i2;
                byFld += (byte)i19;
                break;
            case 74:
                for (i21 = 7; i21 < 197; i21 += 2) {
                    Test0132.instanceCount /= (i22 | 1);
                    Test0132.dArrFld[i21][i21 + 1] = i22;
                    Test0132.fFld = i1;
                    try {
                        Test0132.iFld = (i1 % 55306);
                        i = (65431 % i21);
                        Test0132.iArrFld[i21 + 1] = (Test0132.iFld % i22);
                    } catch (ArithmeticException a_e) {}
                }
                break;
            case 79:
                i2 = i22;
                i22 -= (int) Test0132.dFld;
                d2 = 1;
                while (++d2 < 197) {
                    i = i20;
                    Test0132.iArrFld[i19 + 1] = Test0132.iFld;
                    for (i23 = 1; i23 < 1; ++i23) {
                        Test0132.lArrFld[i23 - 1] = 13;
                        i <<= 124;
                        i22 = (int)-28.118F;
                        i22 >>>= 0;
                        Test0132.iArrFld[(int) (d2 + 1)] -= (int) Test0132.instanceCount;
                        if (Test0132.bFld) continue;
                        switch ((int)(((d2 % 8) * 5) + 53)) {
                        case 80:
                            i2 += i23;
                            Test0132.iArrFld[(int) (d2 - 1)] = i21;
                            i20 >>>= (int)-6925441760558970773L;
                            break;
                        case 65:
                            i24 = (int)65024L;
                            Test0132.iFld >>= -4;
                            break;
                        case 78:
                        case 90:
                            Test0132.iArrFld[(int) (d2 + 1)] = (int) Test0132.instanceCount;
                            break;
                        case 61:
                            if (Test0132.bFld) break;
                            break;
                        case 93:
                            i2 += (((i23 * i20) + s1) - Test0132.instanceCount);
                            break;
                        case 89:
                            i20 += byFld;
                        case 63:
                            Test0132.iFld *= i25;
                        default:
                            Test0132.iArrFld = Test0132.iArrFld;
                        }
                    }
                }
                break;
            case 87:
                i2 = (int) Test0132.fFld;
                break;
            case 91:
                i2 = i22;
            case 92:
                Test0132.instanceCount ^= Test0132.instanceCount;
                break;
            default:
                Test0132.instanceCount *= 14;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 d2 i23 = " + i22 + "," + Double.doubleToLongBits(d2) + "," + i23);
        FuzzerUtils.out.println("i24 s1 i25 = " + i24 + "," + s1 + "," + i25);

        FuzzerUtils.out.println("Test0132.instanceCount Test0132.bFld Test0132.iFld = " + Test0132.instanceCount + "," + (Test0132.bFld ? 1
                : 0) + "," + Test0132.iFld);
        FuzzerUtils.out.println("Test0132.fFld Test0132.dFld byFld = " + Float.floatToIntBits(Test0132.fFld) + "," +
                Double.doubleToLongBits(Test0132.dFld) + "," + byFld);
        FuzzerUtils.out.println("Test0132.lArrFld Test0132.iArrFld Test0132.dArrFld = " + FuzzerUtils.checkSum(Test0132.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0132.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0132.dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0132 _instance = new Test0132();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
