// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0858 {

    public static final int N = 400;

    public static volatile long instanceCount=-683343473L;
    public static volatile double dFld=-97.82565;
    public float fFld=0.397F;
    public static int[] iArrFld =new int[N];
    public static volatile double[][] dArrFld =new double[N][N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0858.iArrFld, 8);
        FuzzerUtils.init(Test0858.dArrFld, 108.103368);
        FuzzerUtils.init(Test0858.lArrFld, 42037L);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i12, int i13) {

        short s=14061;
        float f=113.713F, f1=0.833F;
        int i14=-3, i15=-93, i16=242;
        boolean b=true;

        s *= (short)i12;
        for (f = 15; 299 > f; f++) {
            Test0858.dFld *= i14;
            for (i15 = 1; i15 < 6; i15++) {
                if (i12 != 0) {
                    vMeth1_check_sum += l + i12 + i13 + s + Float.floatToIntBits(f) + i14 + i15 + i16 +
                        Float.floatToIntBits(f1) + (b ? 1 : 0);
                    return;
                }
                Test0858.iArrFld[i15] += (int) Test0858.instanceCount;
                l = i12;
                i16 >>= i13;
                l -= l;
                f1 = i12;
                i16 += (((i15 * l) + l) - Test0858.instanceCount);
                Test0858.iArrFld = Test0858.iArrFld;
                if (b) continue;
                Test0858.dArrFld[(int) (f)][(i16 >>> 1) % N] *= -2.1590;
            }
            b = b;
        }
        vMeth1_check_sum += l + i12 + i13 + s + Float.floatToIntBits(f) + i14 + i15 + i16 + Float.floatToIntBits(f1) +
            (b ? 1 : 0);
    }

    public static float fMeth(int i9) {

        int i10=-8, i11=7707, i18=-13, i19=-6, i20=-92;
        short s1=1761;
        float f2=-2.749F;

        for (i10 = 6; i10 < 191; i10++) {
            vMeth1(Test0858.instanceCount, -5, i10);
            s1 = (short)i11;
            i11 = (int) Test0858.instanceCount;
            i18 = 1;
            do {
                Test0858.iArrFld[i18] = i9;
                Test0858.instanceCount |= i9;
                i9 >>= i10;
                for (i19 = 1; i19 < 1; i19++) {
                    Test0858.dFld = i18;
                    Test0858.lArrFld[i10] = (long) f2;
                    Test0858.instanceCount += (i19 * i19);
                    i9 -= 24560;
                    i11 += (((i19 * f2) + Test0858.instanceCount) - f2);
                    i20 += (-58802 + (i19 * i19));
                }
            } while (++i18 < 9);
        }
        long meth_res = i9 + i10 + i11 + s1 + i18 + i19 + i20 + Float.floatToIntBits(f2);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth(int i, int i1) {

        int i2=-38499, i3=-14, i4=-15319, i5=-3243, i6=13, i7=-2, i8=85;
        byte by=-30;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -13L);

        i2 = 1;
        do {
            i1 = by;
            lArr[i2 - 1] *= (-(--Test0858.instanceCount));
        } while (++i2 < 353);
        for (i3 = 279; i3 > 4; i3 -= 2) {
            for (i5 = 1; i5 < 11; i5++) {
                i += (i5 * i5);
                i4 *= (int)(-Float.intBitsToFloat(--i6));
            }
            for (i7 = 1; i7 < 11; ++i7) {
                Test0858.instanceCount = (long) ((i5 - -9) + ((++Test0858.iArrFld[i7 - 1]) - fMeth(i8)));
                i *= (int)-8931688186460657137L;
                by = (byte) Test0858.instanceCount;
                fFld *= Test0858.instanceCount;
                Test0858.instanceCount += (long) fFld;
                if (b1) break;
                i1 = i1;
            }
        }
        vMeth_check_sum += i + i1 + i2 + by + i3 + i4 + i5 + i6 + i7 + i8 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=4, i22=-51658, i23=-61732, i24=39, i25=-119, i26=-3, i27=7, i28=6;
        boolean b2=false;
        boolean[] bArr =new boolean[N];
        short s2=-4948;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 98.554F);
        FuzzerUtils.init(bArr, true);

        vMeth(i21, i21);
        i22 = 129;
        while (--i22 > 0) {
            b2 = b2;
            for (i23 = 1; i23 < 194; i23++) {
                i24 -= i21;
                Test0858.iArrFld[i23 - 1] = -2;
                for (i25 = i22; i25 < 2; ++i25) {
                    i21 *= (int) Test0858.instanceCount;
                    Test0858.dFld += i25;
                    fArr[i23 - 1] *= i23;
                    i26 ^= -14;
                    if (false) {
                        i26 += i26;
                        fFld *= Test0858.instanceCount;
                    } else if (b2) {
                        i21 += (int)fFld;
                        Test0858.instanceCount %= (i24 | 1);
                        fFld = i25;
                    } else {
                        Test0858.instanceCount = (long) Test0858.dFld;
                        i21 *= i25;
                        i24 += (((i25 * i21) + i24) - i24);
                        i26 = i25;
                    }
                    i21 += (((i25 * i21) + i24) - i23);
                }
                try {
                    i24 = (Test0858.iArrFld[i22] % -45711);
                    Test0858.iArrFld[i22 + 1] = (80 / i26);
                    i21 = (-37 % Test0858.iArrFld[i23 - 1]);
                } catch (ArithmeticException a_e) {}
                i24 -= i24;
                for (i27 = 1; 2 > i27; i27++) {
                    s2 += (short)(((i27 * i27) + i26) - i26);
                    Test0858.iArrFld[i23 - 1] = (int) Test0858.instanceCount;
                    Test0858.instanceCount += i27;
                    i26 *= -182;
                    bArr[i23] = b2;
                }
            }
        }

        FuzzerUtils.out.println("i21 i22 b2 = " + i21 + "," + i22 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("s2 fArr bArr = " + s2 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0858.instanceCount Test0858.dFld fFld = " + Test0858.instanceCount + "," +
                Double.doubleToLongBits(Test0858.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0858.iArrFld Test0858.dArrFld Test0858.lArrFld = " + FuzzerUtils.checkSum(Test0858.iArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0858.dArrFld)) + "," + FuzzerUtils.checkSum(Test0858.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0858 _instance = new Test0858();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
