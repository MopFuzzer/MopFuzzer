// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0703 {

    public static final int N = 400;

    public static long instanceCount=9105540677609855166L;
    public static double dFld=-39.115537;
    public static float fFld=2.975F;
    public int iFld=-120;
    public volatile boolean bFld=true;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0703.lArrFld, -107L);
        FuzzerUtils.init(Test0703.iArrFld, -6);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i2, int i3) {

        int i4=-5;
        int i5=45508;
        int i6=-6;
        int i7=10;
        int i8=-13;
        int[] iArr =new int[N];
        float f=1.867F;
        boolean b=false;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(bArr, false);

        for (i4 = 283; i4 > 1; --i4) {
            i2 = i5;
            iArr[i4 - 1] = (int)f;
            if (b) break;
            Test0703.instanceCount -= Test0703.instanceCount;
            i3 -= 22350;
            for (i6 = 1; i6 < 6; ++i6) {
                i8 = 1;
                while (++i8 < 2) {
                    iArr[i4] >>= i4;
                    i5 *= 46297;
                    switch (((i8 >>> 1) % 2) + 53) {
                    case 53:
                        if (i2 != 0) {
                        }
                        f = i8;
                        i7 = (int) Test0703.instanceCount;
                        bArr[i4] = b;
                        break;
                    case 54:
                        f -= -46975;
                        break;
                    default:
                        Test0703.lArrFld[i4 + 1] >>= i5;
                    }
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + (b ? 1 : 0) + i6 + i7 + i8 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        double d=103.48693;
        int i=233, i1=225, i9=51939, i10=0;

        for (d = 129; d > 5; d--) {
            i1 = 1;
            while (++i1 < 13) {
                i = (int)(1.73951 + lMeth(i, i1));
                i |= (int)3153977074002905201L;
                i = i1;
                i += i1;
                try {
                    i = (i1 % i1);
                    i = (Test0703.iArrFld[(int) (d - 1)] % i);
                    Test0703.iArrFld[i1 + 1] = (22 / i1);
                } catch (ArithmeticException a_e) {}
                i >>>= i;
                for (i9 = 1; i9 < 1; ++i9) {
                    i10 = i;
                    try {
                        i10 = (i10 / i);
                        i = (56 / i);
                        i10 = (i10 / 40638);
                    } catch (ArithmeticException a_e) {}
                    i10 -= (int)d;
                    Test0703.iArrFld[i9 - 1] *= (int) Test0703.instanceCount;
                    i10 = i10;
                    Test0703.lArrFld[(int) (d)] <<= i9;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i + i1 + i9 + i10;
    }

    public static void vMeth() {


        vMeth1();
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i11=-21438, i12=6, i13=-183, i14=-168, i15=13, i16=10, i17=3, i18=-98, i19=-35915;
        short s=-14239;
        short[] sArr =new short[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(sArr, (short)5149);
        FuzzerUtils.init(dArr, 74.126600);

        sArr = (sArr = (sArr = (sArr = sArr)));
        vMeth();
        for (i11 = 9; i11 < 243; i11++) {
            dArr[i11 - 1][i11] = Test0703.instanceCount;
            for (i13 = 2; i13 < 107; ++i13) {
                i15 = 1;
                do {
                    Test0703.dFld -= i13;
                    Test0703.fFld += -214;
                    i12 = i14;
                    Test0703.fFld += (((i15 * i14) + iFld) - Test0703.instanceCount);
                    Test0703.lArrFld[i13 + 1] = iFld;
                    Test0703.lArrFld = FuzzerUtils.long1array(N, (long) 3032481083L);
                } while (++i15 < 2);
                for (i16 = i13; i16 < 2; i16++) {
                    Test0703.fFld *= Test0703.fFld;
                }
                for (i18 = i11; i18 < 2; i18++) {
                    Test0703.instanceCount += (12 + (i18 * i18));
                    s >>= (short)i12;
                    i14 += (int) Test0703.instanceCount;
                    i17 = (int) Test0703.instanceCount;
                    i14 -= (int) Test0703.instanceCount;
                    if (bFld) break;
                }
                if (bFld) continue;
                i12 += (((i13 * i16) + Test0703.instanceCount) - i11);
                Test0703.iArrFld = FuzzerUtils.int1array(N, (int) -40);
                i12 -= (int) Test0703.instanceCount;
                Test0703.lArrFld[i13] = Test0703.instanceCount;
                Test0703.fFld -= i12;
            }
            Test0703.instanceCount += i14;
            bFld = bFld;
            i12 += i19;
        }

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("s sArr dArr = " + s + "," + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0703.instanceCount Test0703.dFld Test0703.fFld = " + Test0703.instanceCount + "," +
                Double.doubleToLongBits(Test0703.dFld) + "," + Float.floatToIntBits(Test0703.fFld));
        FuzzerUtils.out.println("iFld bFld Test0703.lArrFld = " + iFld + "," + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0703.lArrFld));
        FuzzerUtils.out.println("Test0703.iArrFld = " + FuzzerUtils.checkSum(Test0703.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0703 _instance = new Test0703();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
