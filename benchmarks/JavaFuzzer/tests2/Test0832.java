// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:51 2023
public class Test0832 {

    public static final int N = 400;

    public static long instanceCount=3395006155L;
    public static volatile boolean bFld=true;
    public static byte byFld=107;
    public static float fFld=-2.903F;
    public static int iFld=4;
    public int[] iArrFld =new int[N];
    public static long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0832.lArrFld, 0L);
    }

    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1) {

        float f1=-2.793F;
        int i9=-55683;
        int i10=33603;
        int i11=-219;
        int i12=30;
        int i13=-49;
        int i14=12;
        int i15=-10;
        int i16=4;
        int i17=-51781;
        int[] iArr =new int[N];
        short s=-19770;
        long l2=-2767L;

        FuzzerUtils.init(iArr, 212);

        for (f1 = 15; 354 > f1; f1++) {
            l1 = (long)f1;
        }
        for (i10 = 6; i10 < 223; ++i10) {
            for (i12 = 1; i12 < 7; ++i12) {
                float f2=-2.97F;
                for (i14 = 1; i14 < 2; ++i14) {
                    iArr[(i16 >>> 1) % N] -= i9;
                    i15 >>= (int) Test0832.instanceCount;
                    i9 += i14;
                }
                i11 += -20949;
                i9 *= i11;
                f2 += s;
                i15 -= 34;
                for (l2 = 1; l2 < 2; ++l2) {
                    l1 = (long)f1;
                    i16 += i11;
                }
            }
        }
        vMeth_check_sum += l1 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + s + l2 + i17
            + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i3=201;
        int i4=13;
        int i5=6;
        int i6=215;
        int i7=-175;
        int i8=-8;
        int i18=-50747;
        int[] iArr1 =new int[N];
        double d=-2.100954;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr1, -26715);
        FuzzerUtils.init(bArr, true);

        for (i3 = 7; i3 < 361; i3++) {
            for (i5 = 5; i5 > 1; i5 -= 3) {
                for (i7 = i3; i7 < 5; i7++) {
                    vMeth(Test0832.instanceCount);
                    i4 += i5;
                    d += i5;
                    iArr1[i7 - 1] += i7;
                    d = i5;
                    iArr1[i3 + 1] -= i8;
                }
                i18 = 1;
                do {
                    bArr[i5] = Test0832.bFld;
                    Test0832.instanceCount -= Test0832.instanceCount;
                    i8 >>= (int)1499919697L;
                    if (Test0832.bFld) break;
                    if (i7 != 0) {
                    }
                } while (++i18 < 5);
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + i18 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static byte byMeth(long l, float f, int i1) {

        int i2=-12, i19=-134, i20=4, i21=10, i22=76;
        long l3=-1735667267L;
        double d1=-1.38986;

        i2 = 1;
        do {
            i1 *= (int)(iMeth() * l3);
            i1 *= i2;
            for (i19 = 1; 6 > i19; i19++) {
                for (i21 = 1; i21 < 2; i21++) {
                    Test0832.lArrFld = FuzzerUtils.long2array(N, (long) 89L);
                    i20 += (((i21 * Test0832.instanceCount) + f) - l);
                    i1 = i20;
                    f += 12;
                    i20 += i21;
                    d1 += 9;
                    if (Test0832.bFld) continue;
                    i22 = Test0832.byFld;
                    Test0832.instanceCount -= 14;
                    Test0832.instanceCount *= -36695;
                }
            }
        } while (++i2 < 291);
        long meth_res = l + Float.floatToIntBits(f) + i1 + i2 + l3 + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(d1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-5522, i23=76, i24=176, i25=14, i26=116, i27=-30643, i28=53288, i29=4, i30=21702, i31=55;
        double d2=0.80572;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(sArr, (short)16025);

        iArrFld[(i >>> 1) % N] = iArrFld[(117 >>> 1) % N];
        i -= (int) (Math.abs(i - 2716250900591010103L) + byMeth(142L, Test0832.fFld, 0));
        for (i23 = 17; i23 < 298; ++i23) {
            if (false) {
                Test0832.fFld += 26119L;
                for (i25 = i23; i25 < 89; i25++) {
                    Test0832.byFld = (byte) i27;
                    d2 -= i27;
                    for (i28 = 1; i28 < 1; i28++) {
                        sArr[i28][i25] += (short)i26;
                        i27 = (int)5242684341947573637L;
                        if (Test0832.bFld) break;
                        i24 = i26;
                        d2 = Test0832.fFld;
                        i <<= Test0832.iFld;
                    }
                    i -= (int) Test0832.instanceCount;
                    i26 += i28;
                    Test0832.lArrFld[i25 - 1][i25 - 1] = i25;
                    i = i24;
                    for (i30 = 1; i30 < 1; i30++) {
                        Test0832.iFld ^= i28;
                        if (Test0832.bFld) continue;
                        Test0832.instanceCount <<= Test0832.iFld;
                        switch ((i30 % 1) + 12) {
                        case 12:
                            iArrFld[i25] = (int) Test0832.instanceCount;
                            Test0832.instanceCount >>= i30;
                            switch ((i30 % 8) + 113) {
                            case 113:
                                Test0832.instanceCount -= Test0832.instanceCount;
                                Test0832.instanceCount *= 3407471585161516385L;
                                Test0832.byFld = Test0832.byFld;
                                break;
                            case 114:
                                i26 = -125;
                                break;
                            case 115:
                                Test0832.iFld = i;
                                break;
                            case 116:
                                Test0832.fFld = (float) d2;
                                break;
                            case 117:
                                i24 += (i30 * i30);
                            case 118:
                                i31 = i25;
                                break;
                            case 119:
                                Test0832.instanceCount += (((i30 * i24) + i24) - Test0832.fFld);
                                break;
                            case 120:
                                Test0832.instanceCount = i26;
                                break;
                            }
                            break;
                        default:
                            Test0832.instanceCount += Test0832.instanceCount;
                        }
                    }
                }
            } else if (Test0832.bFld) {
                iArrFld[i23] += (int) Test0832.instanceCount;
            } else {
                i26 -= i24;
            }
        }

        FuzzerUtils.out.println("i i23 i24 = " + i + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d2 i28 i29 = " + Double.doubleToLongBits(d2) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 sArr = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0832.instanceCount Test0832.bFld Test0832.byFld = " + Test0832.instanceCount + "," + (Test0832.bFld ?
                1 : 0) + "," + Test0832.byFld);
        FuzzerUtils.out.println("Test0832.fFld Test0832.iFld iArrFld = " + Float.floatToIntBits(Test0832.fFld) + "," + Test0832.iFld +
            "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0832.lArrFld = " + FuzzerUtils.checkSum(Test0832.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0832 _instance = new Test0832();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
