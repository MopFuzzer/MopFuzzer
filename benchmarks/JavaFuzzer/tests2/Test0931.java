// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0931 {

    public static final int N = 400;

    public static long instanceCount=1818243488L;
    public static int iFld=0;
    public static double dFld=-1.90902;
    public long[] lArrFld =new long[N];
    public int[] iArrFld =new int[N];
    public static volatile boolean[] bArrFld =new boolean[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0931.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5) {

        int i6=3;
        int i7=-35248;
        int i8=72;
        int i9=10897;
        int i10=8;
        int i11=223;
        int[] iArr1 =new int[N];
        short s=-4388;
        double d1=-86.96338;

        FuzzerUtils.init(iArr1, -138);

        i4 -= i5;
        Test0931.iFld <<= i5;
        for (i6 = 166; i6 > 5; i6 -= 2) {
            for (i8 = 1; 19 > i8; ++i8) {
                Test0931.instanceCount += (i8 - s);
                iArr1[i8] = i6;
                iArr1[i8] += i8;
                i7 >>>= -6;
            }
            i4 *= i7;
            Test0931.instanceCount += (63 + (i6 * i6));
            iArr1[i6] = i4;
            d1 -= 2;
            for (i10 = 1; 19 > i10; i10++) {
                if (i8 != 0) {
                    vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + s + Double.doubleToLongBits(d1) + i10 + i11 +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
                Test0931.iFld -= i7;
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + s + Double.doubleToLongBits(d1) + i10 + i11 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i3) {

        int i12=-16622;
        int i13=-5;
        int i14=-189;
        int i15=41582;
        int[][] iArr2 =new int[N][N];
        float f1=9.718F;
        float[] fArr =new float[N];
        byte by1=84;
        boolean b=false;

        FuzzerUtils.init(fArr, -21.471F);
        FuzzerUtils.init(iArr2, -13);

        fArr[(Test0931.iFld >>> 1) % N] = Test0931.iFld;
        if (b) {
            vMeth2(i3, i3);
            for (i12 = 243; i12 > 9; i12--) {
                f1 -= i13;
                Test0931.instanceCount >>= i3;
                iArr2[i12][i12] = i13;
                Test0931.dFld = i13;
                Test0931.iFld ^= i12;
            }
            for (i14 = 10; i14 < 341; ++i14) {
                by1 >>>= (byte) Test0931.iFld;
                if (false) continue;
                try {
                    i3 = (210 % i14);
                    i13 = (i14 / i14);
                    Test0931.iFld = (88 / i13);
                } catch (ArithmeticException a_e) {}
                iArr2[i14][i14 + 1] -= -64557;
                Test0931.instanceCount += Test0931.iFld;
            }
        } else if (b) {
            i13 = Test0931.iFld;
        }
        vMeth1_check_sum += i3 + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + by1 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public void vMeth() {

        int i=-25723, i1=101, i2=13, i16=-26, i17=-39321, i18=-41565, i19=14;
        float f=1.649F;
        byte by=-105;
        double d=2.47714;

        for (i = 10; 266 > i; i++) {
            lArrFld = (lArrFld = (lArrFld = FuzzerUtils.long1array(N, (long)4015145858868250593L)));
            i2 = 1;
            do {
                f += (90 + (i2 * i2));
            } while (++i2 < 6);
            by = (byte) (Test0931.iFld = (int) ((i1 -= 160) - (i2 * d)));
            vMeth1(i);
        }
        for (i16 = 22; i16 < 384; i16++) {
            iArrFld[i16 - 1] = i17;
            iArrFld = iArrFld;
        }
        Test0931.bArrFld = Test0931.bArrFld;
        for (i18 = 373; 18 < i18; i18 -= 2) {
            i19 += (i18 * i18);
            Test0931.instanceCount += i18;
        }
        Test0931.iFld -= (int) Test0931.instanceCount;
        i17 = i;
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + by + Double.doubleToLongBits(d) + i16 + i17 + i18 +
            i19;
    }

    public void mainTest(String[] strArr1) {

        int i20=0;
        int i21=14;
        int i22=-7;
        int i23=-50451;
        int i24=-6;
        int i25=117;
        int i26=-11;
        int i27=14;
        int[][] iArr =new int[N][N];
        byte by2=9;
        short s1=-29994;
        boolean b1=true;
        float f2=91.92F;

        FuzzerUtils.init(iArr, 7);

        iArr[(Test0931.iFld >>> 1) % N][(-4472 >>> 1) % N] = 37969;
        vMeth();
        Test0931.iFld = Test0931.iFld;
        for (i20 = 8; i20 < 278; i20++) {
            for (i22 = i20; 93 > i22; ++i22) {
                by2 -= (byte) Test0931.instanceCount;
                i21 *= s1;
                switch (((i20 % 6) * 5) + 93) {
                case 99:
                    if (b1) break;
                    Test0931.iFld += (i22 * i22);
                    i21 *= i22;
                    break;
                case 122:
                    fArrFld[i20 - 1] = Test0931.instanceCount;
                    i23 *= i23;
                    Test0931.instanceCount = i20;
                    break;
                case 118:
                    for (i24 = 1; 1 > i24; i24++) {
                        i23 += i24;
                        try {
                            Test0931.iFld = (1792019988 % i21);
                            i25 = (i20 / i21);
                            i23 = (118 / i22);
                        } catch (ArithmeticException a_e) {}
                    }
                    f2 = (float) Test0931.dFld;
                    for (i26 = 1; i26 > i22; i26 -= 2) {
                        Test0931.instanceCount -= 22008;
                        Test0931.iFld += (int) Test0931.dFld;
                        iArrFld[i26] = (int) Test0931.instanceCount;
                        lArrFld = lArrFld;
                        b1 = b1;
                        iArr[i20][i22 + 1] *= (int) Test0931.dFld;
                        Test0931.instanceCount -= i22;
                        try {
                            i25 = (iArrFld[i22 + 1] / i27);
                            Test0931.iFld = (1634054945 % iArr[i20][i20]);
                            Test0931.iFld = (i22 / iArr[i22 + 1][i26 - 1]);
                        } catch (ArithmeticException a_e) {}
                        i27 += (int) Test0931.instanceCount;
                        f2 = i23;
                    }
                    break;
                case 106:
                    i27 += (i22 ^ i21);
                case 119:
                    i23 = 45328;
                    break;
                case 107:
                    fArrFld[i22 - 1] -= (float) Test0931.dFld;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 by2 s1 = " + i23 + "," + by2 + "," + s1);
        FuzzerUtils.out.println("b1 i24 i25 = " + (b1 ? 1 : 0) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f2 i26 i27 = " + Float.floatToIntBits(f2) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0931.instanceCount Test0931.iFld Test0931.dFld = " + Test0931.instanceCount + "," + Test0931.iFld +
                "," + Double.doubleToLongBits(Test0931.dFld));
        FuzzerUtils.out.println("lArrFld iArrFld Test0931.bArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test0931.bArrFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0931 _instance = new Test0931();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
