// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0452 {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public volatile byte byFld=-65;
    public short sFld=-5558;
    public long[] lArrFld =new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public float fMeth() {

        int i2=-6933;

        i2 = (int) Test0452.instanceCount;
        i2 = (int) Test0452.instanceCount;
        long meth_res = i2;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth1() {

        int i1=238;
        int i3=-3691;
        int i4=-1;
        int i5=-74;
        int[] iArr =new int[N];
        boolean b=true;
        float f=0.462F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)95);
        FuzzerUtils.init(iArr, -13);

        byArr[(i1 >>> 1) % N] = (byte) ((i1 += (++i1)) >> Test0452.instanceCount);
        byFld *= (byte)fMeth();
        iArr[(i1 >>> 1) % N] <<= i1;
        Test0452.instanceCount = i1;
        for (i3 = 4; i3 < 289; i3++) {
            i1 += i3;
            i5 = 1;
            do {
                Test0452.instanceCount += -3398;
                lArrFld[i3] = i3;
                i4 <<= (int) Test0452.instanceCount;
                lArrFld[i5 + 1] += Test0452.instanceCount;
                if (b) continue;
                if (b) continue;
                Test0452.instanceCount += (((i5 * f) + i4) - i3);
                lArrFld[i5 - 1] -= Test0452.instanceCount;
            } while (++i5 < 6);
        }
        vMeth1_check_sum += i1 + i3 + i4 + i5 + (b ? 1 : 0) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        int i=38710, i6=0, i7=204, i8=-29220, i9=-58862, i10=-30913;
        float f1=-35.72F;
        short s=-15514;

        i = 1;
        do {
            vMeth1();
            Test0452.instanceCount = i;
            Test0452.instanceCount &= byFld;
            try {
                i6 = (i / i);
                i6 = (i6 / 1254);
                i6 = (i % i);
            } catch (ArithmeticException a_e) {}
            f1 += i6;
            i6 += (((i * Test0452.instanceCount) + i6) - Test0452.instanceCount);
            lArrFld = lArrFld;
        } while (++i < 215);
        for (i7 = 10; i7 < 201; ++i7) {
            i8 += (i7 * i);
            i8 += (i7 * i6);
            lArrFld[i7] += i6;
            for (i9 = 1; i9 < 8; ++i9) {
                s += (short)i9;
                Test0452.instanceCount += (((i9 * i8) + i6) - i8);
            }
        }
        vMeth_check_sum += i + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + s;
    }

    public void mainTest(String[] strArr1) {

        int i11=9;
        int i12=2;
        int i13=14581;
        int i14=-5;
        int i15=-53863;
        int i17=2219;
        int i18=60197;
        int i19=-13;
        int[] iArr1 =new int[N];
        float f2=-62.1006F, f3=-14.251F, f4=2.621F;
        double d=2.106184, d1=-2.32596;

        FuzzerUtils.init(iArr1, -40);

        vMeth();
        for (i11 = 127; i11 > 2; i11--) {
            i12 = i11;
            Test0452.instanceCount -= (long) f2;
            for (i13 = 11; i13 < 201; ++i13) {
                Test0452.instanceCount -= i11;
                switch ((i13 % 2) + 40) {
                case 40:
                case 41:
                    if (true) break;
                    for (f3 = 1; f3 < 2; ++f3) {
                        i12 += (int)f3;
                        i15 = i12;
                    }
                    i14 |= (int) Test0452.instanceCount;
                default:
                    d = 1;
                    do {
                        i14 >>>= 52;
                    } while (++d < 2);
                    iArr1[i13 - 1] -= (int)d;
                    sFld += (short)i15;
                }
                f2 *= Test0452.instanceCount;
                i12 += (int)d;
                lArrFld[i13 + 1] ^= i12;
                f2 *= i11;
            }
            Test0452.instanceCount = (long) 1.946F;
            for (f4 = 8; f4 < 201; f4++) {
                i15 += (int)f4;
                iArr1[(int)(f4)] >>>= i15;
                i15 = i12;
                iArr1[i11 + 1] &= -1;
                iArr1[i11] /= (int) (Test0452.instanceCount | 1);
            }
        }
        for (i18 = 6; i18 < 349; ++i18) {
            i17 += i12;
        }
        d1 -= d1;

        FuzzerUtils.out.println("i11 i12 f2 = " + i11 + "," + i12 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i13 i14 f3 = " + i13 + "," + i14 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i15 d f4 = " + i15 + "," + Double.doubleToLongBits(d) + "," +
            Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("d1 iArr1 = " + Double.doubleToLongBits(d1) + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0452.instanceCount byFld sFld = " + Test0452.instanceCount + "," + byFld + "," + sFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0452 _instance = new Test0452();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
