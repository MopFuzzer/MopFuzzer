// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0873 {

    public static final int N = 400;

    public static long instanceCount=2626761032397777511L;
    public static volatile byte byFld=-109;
    public static long lFld=51814L;
    public static double[][] dArrFld =new double[N][N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0873.dArrFld, -72.29944);
        FuzzerUtils.init(Test0873.iArrFld, 4932);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7) {

        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(bArr, true);

        bArr[(i7 >>> 1) % N] = bArr[(i7 >>> 1) % N];
        vMeth1_check_sum += i7 + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i3, int i4) {

        float f1=-56.270F;
        int i5=-28;
        int i6=97;
        int i8=30113;
        int i9=-10485;
        int[] iArr =new int[N];
        boolean b=true;
        boolean[] bArr1 =new boolean[N];

        FuzzerUtils.init(iArr, -6);
        FuzzerUtils.init(bArr1, false);

        i4 &= (int) (((i4 - Test0873.instanceCount) - (Test0873.instanceCount + f1)) + (-73 + i4));
        switch (((((++i4) >>> 1) % 3) * 5) + 126) {
        case 129:
            for (i5 = 6; 385 > i5; i5 += 3) {
                f1 += i5;
                vMeth1(i6);
                try {
                    i3 = (-206 % i8);
                    i8 = (i5 % i8);
                    i8 = (53 / iArr[i5]);
                } catch (ArithmeticException a_e) {}
                i4 -= i3;
                if (b) continue;
                f1 += i4;
            }
            i9 = 1;
            while (++i9 < 383) {
                i3 += (int)-1.497F;
                f1 += Test0873.instanceCount;
                iArr[i9 + 1] *= i4;
                bArr1[i9] = b;
                iArr[i9 + 1] >>= i4;
            }
        case 140:
            i3 |= Test0873.byFld;
            break;
        case 132:
            i8 = i3;
            break;
        default:
            Test0873.byFld += (byte) i9;
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i8 + (b ? 1 : 0) + i9 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr1);
    }

    public long lMeth(int i2, long l) {


        vMeth(i2, -139);
        Test0873.instanceCount *= 109;
        long meth_res = i2 + l;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=13;
        int i1=-1;
        int i10=-4393;
        int i11=12;
        int i12=-14;
        int i13=-243;
        int[] iArr1 =new int[N];
        double d=46.86740;
        long l1=7828590309524583707L;
        boolean b1=true;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr1, -28572);
        FuzzerUtils.init(sArr, (short)-30150);

        for (i = 292; i > 8; --i) {
            float f=1.508F;
            f += f;
            d -= lMeth(i1, 6L);
            Test0873.instanceCount = (long) f;
            iArr1[i + 1] = i1;
            for (i10 = 1; i10 < 89; ++i10) {
                i1 *= Test0873.byFld;
                for (l1 = 1; l1 < 2; l1++) {
                    i1 *= -212;
                    sArr[(int)(l1)] >>= (short)i11;
                    if (b1) continue;
                    i1 += (int) (((l1 * Test0873.instanceCount) + i) - f);
                    Test0873.dArrFld[(int) (l1 + 1)][i - 1] += 0.694F;
                    Test0873.byFld = (byte) -17;
                    i11 += (int)l1;
                    iArr1[i] = i11;
                }
                f = 7;
                Test0873.dArrFld[i10 - 1][i10 + 1] = -13;
                if (false) continue;
                i13 = 1;
                while (++i13 < 2) {
                    i11 += (int)3473L;
                    Test0873.iArrFld[i - 1] = (int) -9120L;
                    switch (((i % 5) * 5) + 70) {
                    case 85:
                        switch (((i % 8) * 5) + 71) {
                        case 111:
                            try {
                                Test0873.iArrFld[i + 1] = (i13 / i11);
                                Test0873.iArrFld[i13] = (i1 / Test0873.iArrFld[i10]);
                                i1 = (i10 / i11);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 75:
                            Test0873.iArrFld[i + 1] *= (int) -66.734F;
                            break;
                        case 86:
                            i12 = i;
                            break;
                        case 101:
                            i11 += (i13 * i13);
                            Test0873.dArrFld[i10 - 1][i + 1] = l1;
                        case 99:
                            i1 *= 19443;
                            break;
                        case 85:
                            i11 -= -49928;
                            break;
                        case 84:
                            d = i10;
                            break;
                        case 81:
                            iArr1[i13] = i10;
                            break;
                        default:
                            Test0873.instanceCount = 14;
                        }
                        break;
                    case 93:
                        i1 += i10;
                        break;
                    case 71:
                        Test0873.lFld += 1724557151L;
                    case 77:
                        i1 = i11;
                        break;
                    case 89:
                        i12 += (((i13 * i) + i10) - i12);
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i10 i11 l1 = " + i10 + "," + i11 + "," + l1);
        FuzzerUtils.out.println("i12 b1 i13 = " + i12 + "," + (b1 ? 1 : 0) + "," + i13);
        FuzzerUtils.out.println("iArr1 sArr = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0873.instanceCount Test0873.byFld Test0873.lFld = " + Test0873.instanceCount + "," + Test0873.byFld +
                "," + Test0873.lFld);
        FuzzerUtils.out.println("Test0873.dArrFld Test0873.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0873.dArrFld)) + "," + FuzzerUtils.checkSum(Test0873.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0873 _instance = new Test0873();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
