// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:48 2023
public class Test0774 {

    public static final int N = 400;

    public static long instanceCount=-38979L;
    public static short sFld=6365;
    public static boolean bFld=true;
    public volatile double dFld=70.100048;
    public static volatile boolean[][] bArrFld =new boolean[N][N];

    static {
        FuzzerUtils.init(Test0774.bArrFld, true);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i9=10;
        int i10=211;
        int i11=-2131;
        int i12=-219;
        int i13=-216;
        int i14=26334;
        int i15=6;
        int i16=10869;
        int i17=-33;
        int i18=-56954;
        int i19=138;
        int[] iArr2 =new int[N];
        byte by=33;

        FuzzerUtils.init(iArr2, 98);

        Test0774.sFld *= (short) -7;
        i9 += Test0774.sFld;
        for (i10 = 10; 189 > i10; i10++) {
            if (Test0774.bFld) continue;
        }
        for (i12 = 15; i12 < 368; ++i12) {
            Test0774.instanceCount >>>= Test0774.sFld;
            for (i14 = 5; i14 > 1; i14--) {
                i13 = (int) Test0774.instanceCount;
            }
            Test0774.instanceCount -= Test0774.sFld;
            i15 *= by;
        }
        for (i16 = 302; i16 > 13; i16--) {
            for (i18 = 6; i18 > 1; --i18) {
                iArr2 = iArr2;
                Test0774.bArrFld[i16][i16 + 1] = true;
                iArr2[i16 - 1] -= i19;
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + i14 + i15 + by + i16 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l1, long l2, int i8) {

        float f1=2.740F;
        double d=1.66511;
        int i20=34032, i21=-13, i22=10, i23=180, i24=10, i25=1152;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -13L);

        i8 += (i8 + Math.max((int)(f1 % ((long)(d) | 1)), iMeth1()));
        for (i20 = 4; i20 < 136; i20++) {
            l2 -= (long)d;
            for (i22 = 1; i22 < 12; ++i22) {
                for (i24 = 2; i24 > 1; i24--) {
                    l1 += -38383;
                    i21 += Test0774.sFld;
                    lArr[i22 - 1] ^= i24;
                    if (Test0774.bFld) break;
                    i25 = (int)l2;
                    i8 += (18640 + (i24 * i24));
                    i23 = -63152;
                    i25 += (54064 + (i24 * i24));
                    Test0774.instanceCount ^= i24;
                    i23 |= i20;
                }
            }
        }
        vMeth_check_sum += l1 + l2 + i8 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i20 + i21 + i22 + i23
            + i24 + i25 + FuzzerUtils.checkSum(lArr);
    }

    public int iMeth(long l, int i2, int i3) {

        int i4=180;
        int i5=-4864;
        int i6=2;
        int i7=83;
        int[] iArr1 =new int[N];
        float f2=2.338F;
        byte by1=-48;

        FuzzerUtils.init(iArr1, -127);

        for (i4 = 2; i4 < 121; i4++) {
            i3 -= Math.min(Math.min(--i5, iArr1[i4 - 1]), i2);
            for (i6 = 1; i6 < 13; ++i6) {
                vMeth(l, Test0774.instanceCount, i7);
                Test0774.instanceCount += (i6 - i3);
                f2 = i4;
                switch (((i6 % 2) * 5) + 69) {
                case 77:
                    switch (((14 >>> 1) % 10) + 61) {
                    case 61:
                        i7 += i6;
                        i7 >>= i2;
                        l += (((i6 * i3) + l) - i2);
                        i3 += (i6 * i6);
                        break;
                    case 62:
                        iArr1[i6] = -220;
                        iArr1[i4] = (int)l;
                        i2 = i5;
                    case 63:
                        by1 += (byte)i6;
                        break;
                    case 64:
                        i2 = 182;
                        break;
                    case 65:
                        if (i4 != 0) {
                        }
                    case 66:
                    case 67:
                    case 68:
                        iArr1 = iArr1;
                        break;
                    case 69:
                        dFld = -37930;
                        break;
                    case 70:
                        i7 *= (int)83.257F;
                    }
                    break;
                case 78:
                    i5 += (i6 * i6);
                default:
                    i7 -= i5;
                }
            }
        }
        long meth_res = l + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + by1 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i1=-20493;
        int i26=-2;
        int[] iArr =new int[N];
        float f=120.846F;
        float f3=-72.682F;
        float[] fArr =new float[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, 12);
        FuzzerUtils.init(dArr, -29.100149);
        FuzzerUtils.init(fArr, 12.55F);

        for (int i : iArr) {
            i1 = 1;
            while (++i1 < 63) {
                f /= (iMeth(-1L, i, i) | 1);
                i = i1;
                for (f3 = 1; f3 < 1; f3++) {
                    Test0774.sFld <<= (short) i26;
                    dArr[i1] -= i;
                    switch (((i >>> 1) % 10) + 39) {
                    case 39:
                        f += (((f3 * i1) + Test0774.instanceCount) - i);
                        Test0774.sFld = (short) 49615;
                        break;
                    case 40:
                    case 41:
                        Test0774.sFld += (short) f;
                        iArr[i1 - 1] -= i26;
                        Test0774.bFld = Test0774.bFld;
                        break;
                    case 42:
                    case 43:
                        i += (int) (((f3 * i1) + i) - Test0774.instanceCount);
                        i26 -= (int)dFld;
                        break;
                    case 44:
                        switch (((i >>> 1) % 5) + 41) {
                        case 41:
                            i26 += (int)(f3 - f3);
                            Test0774.instanceCount <<= 62688;
                            i26 = i1;
                            break;
                        case 42:
                            i26 += (int) (((f3 * f3) + i1) - Test0774.instanceCount);
                            Test0774.instanceCount += Test0774.instanceCount;
                        case 43:
                            Test0774.instanceCount += (long) (f3 + i);
                            f = i;
                            Test0774.bFld = Test0774.bFld;
                            break;
                        case 44:
                            iArr[i1 - 1] += i1;
                            break;
                        case 45:
                            f = 118.618F;
                            i += (int)((long)f3 ^ i1);
                            i26 += (int) ((long) f3 | Test0774.instanceCount);
                            fArr[(int)(f3)] %= (i1 | 1);
                        default:
                            i26 *= (int)f3;
                        }
                    case 45:
                        i26 *= i;
                        break;
                    case 46:
                        if (Test0774.bFld) continue;
                    case 47:
                        i26 += (int) (((f3 * Test0774.instanceCount) + Test0774.instanceCount) - Test0774.sFld);
                        break;
                    case 48:
                    default:
                        Test0774.instanceCount += (long) dFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i1 f f3 = " + i1 + "," + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i26 iArr dArr = " + i26 + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0774.instanceCount Test0774.sFld Test0774.bFld = " + Test0774.instanceCount + "," + Test0774.sFld +
                "," + (Test0774.bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld Test0774.bArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0774.bArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0774 _instance = new Test0774();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
