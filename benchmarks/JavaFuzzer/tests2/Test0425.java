// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0425 {

    public static final int N = 400;

    public static long instanceCount=5773364640569599788L;
    public static double dFld=36.99807;
    public static int iFld=246;

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        long l=60L;
        long[] lArr =new long[N];
        int i8=129;
        int i9=-8;
        int i10=3433;
        int i11=54500;
        int[] iArr2 =new int[N];
        short s=9044;
        boolean b=false;
        double d=-1.109319;
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr, 20725129L);
        FuzzerUtils.init(iArr2, -23);
        FuzzerUtils.init(dArr, -24.121571);

        l = 1;
        do {
            i8 = 1;
            while (++i8 < 7) {
                i9 += (int) Test0425.instanceCount;
                i9 = i9;
                i9 = (int)l;
                for (i10 = 1; i10 < 1; i10++) {
                    i9 >>>= i9;
                    Test0425.instanceCount /= (s | 1);
                    lArr[(int)(l)] = i10;
                    i9 = i8;
                    iArr2[(int)(l + 1)] *= i10;
                    if (b) break;
                }
                Test0425.instanceCount *= (long) d;
                i11 = i10;
                dArr[i8] -= i10;
            }
        } while (++l < 232);
        long meth_res = l + i8 + i9 + i10 + i11 + s + (b ? 1 : 0) + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i7=-35421;
        int i12=-57062;
        int i13=11;
        int i14=29802;
        int i15=-21766;
        int[] iArr1 =new int[N];
        short s1=-6205;
        float f1=-8.345F, f2=-36.786F, f3=-59.982F;

        FuzzerUtils.init(iArr1, -31250);

        iArr1[(-5 >>> 1) % N] = (int)(((-13 - i7) - lMeth()) + s1);
        i12 = 1;
        while (++i12 < 387) {
            i13 = 4;
            do {
                f1 += i13;
            } while (--i13 > 0);
            if (true) continue;
            i7 = (int)f2;
            i7 += (i12 * i12);
            i7 = i13;
            for (i14 = 1; i14 < 4; ++i14) {
                f1 -= i12;
            }
            Test0425.dFld = i7;
            f3 = 1;
            while (++f3 < 4) {
                Test0425.instanceCount -= (long) Test0425.dFld;
                i7 = (int)f2;
                i15 += (int)(f3 * f3);
            }
        }
        vMeth_check_sum += i7 + s1 + i12 + i13 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i14 + i15 +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1);
    }

    public static short sMeth(byte by, int i1) {

        int i2=-46653;
        int i3=-7;
        int i4=6;
        int i5=-9;
        int i6=-6;
        int i16=-40993;
        int[][] iArr =new int[N][N];
        float f=80.750F;
        float f4=-1.35F;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(fArr, 0.780F);

        for (i2 = 148; i2 > 8; --i2) {
            for (i4 = 1; 11 > i4; ++i4) {
                Test0425.instanceCount = ((by * (i6 - i1)) - ((Test0425.instanceCount * i6) + Math.abs(i3)));
                i6 += iArr[i4 + 1][i2 + 1];
                i1 >>>= i5;
            }
            fArr[i2 - 1] = f;
            vMeth();
            f += i3;
            f += (((i2 * i6) + i1) - i1);
            Test0425.instanceCount = -2;
            try {
                i6 = (i1 % 12258);
                i6 = (i2 / 57375);
                i5 = (i5 / -41077);
            } catch (ArithmeticException a_e) {}
            i6 = -12;
            for (f4 = i2; f4 < 11; ++f4) {
                i3 = i3;
                i3 = (int)f;
            }
        }
        long meth_res = by + i1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + Float.floatToIntBits(f4) + i16 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=26310;
        int i17=-203;
        int i18=12;
        int i19=138;
        int i20=236;
        int i21=1460;
        int i22=-43416;
        int i23=-127;
        int i24=-38;
        int i25=-35936;
        int[] iArr3 =new int[N];
        float f5=0.954F;
        boolean b1=false;
        byte by1=-5;

        FuzzerUtils.init(iArr3, -51954);

        i = (int)-25.641F;
        Test0425.instanceCount = (sMeth((byte) (-13), 10) * Test0425.instanceCount);
        i17 = 1;
        do {
            i += (73 + (i17 * i17));
            i >>= i;
            f5 += Test0425.instanceCount;
            for (i18 = 5; i18 < 253; ++i18) {
                i19 += (i18 | i);
                switch ((i18 % 2) + 31) {
                case 31:
                    Test0425.instanceCount -= -20784;
                    break;
                case 32:
                    i19 *= i;
                    i += (((i18 * i18) + i) - i17);
                    i = i19;
                    break;
                default:
                    Test0425.instanceCount = 13;
                    i19 += i18;
                }
                b1 = b1;
                if (b1) continue;
            }
            for (i20 = i17; i20 < 253; ++i20) {
                iArr3[i17 + 1] *= (int) Test0425.instanceCount;
                Test0425.instanceCount += i20;
                by1 += (byte)i20;
                Test0425.iFld *= i;
                for (i22 = 1; i22 < 1; i22++) {
                    f5 += i19;
                    i19 += i21;
                    iArr3[i22 - 1] <<= (int) Test0425.instanceCount;
                    iArr3[i20] -= i20;
                }
                for (i24 = 1; i24 < 1; ++i24) {
                    f5 += (((i24 * f5) + i25) - i17);
                    Test0425.iFld -= -2614;
                }
            }
        } while ((i17 += 3) < 298);

        FuzzerUtils.out.println("i i17 f5 = " + i + "," + i17 + "," + Float.floatToIntBits(f5));
        FuzzerUtils.out.println("i18 i19 b1 = " + i18 + "," + i19 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 by1 = " + i20 + "," + i21 + "," + by1);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 iArr3 = " + i25 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0425.instanceCount Test0425.dFld Test0425.iFld = " + Test0425.instanceCount + "," +
                Double.doubleToLongBits(Test0425.dFld) + "," + Test0425.iFld);

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0425 _instance = new Test0425();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
