// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0141 {

    public static final int N = 400;

    public static long instanceCount=-26949L;
    public static byte byFld=-32;
    public volatile int iFld=111;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0141.lArrFld, 6801L);
        FuzzerUtils.init(Test0141.iArrFld, 3);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, long l) {

        float f3=1.49F;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 162);

        iArr[(i4 >>> 1) % N] = i4;
        Test0141.instanceCount = -39777;
        Test0141.lArrFld[(40947 >>> 1) % N] = -64194;
        i4 += i4;
        Test0141.instanceCount = (long) f3;
        long meth_res = i4 + l + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f2, int i, int i1) {

        int i2=-155;
        int i3=-36;
        int i6=10;
        int i7=34316;
        int i8=53;
        int[] iArr1 =new int[N];
        float f4=2.21F;
        boolean b=true;
        long l1=465638287L;

        FuzzerUtils.init(iArr1, -5);

        i2 = 1;
        do {
            Test0141.instanceCount -= (((i3--) - Test0141.instanceCount) * iMeth(i2, Test0141.instanceCount));
        } while (++i2 < 234);
        Test0141.instanceCount = i1;
        iArr1[(i >>> 1) % N] = (int) Test0141.instanceCount;
        for (int i5 : iArr1) {
            f4 = 1;
            do {
                b = false;
                for (i6 = 1; i6 < 1; ++i6) {
                    i8 -= (int)f4;
                    Test0141.instanceCount += i6;
                    iArr1[(int) (f4 + 1)] ^= Test0141.byFld;
                    i1 += i5;
                    i = (int) Test0141.instanceCount;
                    l1 = 37;
                }
                Test0141.instanceCount -= i3;
            } while (++f4 < 4);
        }
        vMeth_check_sum += Float.floatToIntBits(f2) + i + i1 + i2 + i3 + Float.floatToIntBits(f4) + (b ? 1 : 0) + i6 +
            i7 + i8 + l1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vSmallMeth(float f, float f1) {

        int i9=33434;

        vMeth(f, i9, i9);
        i9 = i9;
        vSmallMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i9;
    }

    public void mainTest(String[] strArr1) {

        float f5=75.554F;
        int i10=33, i11=9, i12=-15593, i13=-101, i14=-7, i15=115, i16=-11;
        short s=-4561;
        boolean b1=false;
        double d=-2.124843;

        for (int smallinvoc=0; smallinvoc<788; smallinvoc++) vSmallMeth(f5, f5);
        switch (((i10 >>> 1) % 1) + 122) {
        case 122:
            for (i11 = 226; i11 > 2; --i11) {
                i13 = 1;
                do {
                    for (i14 = 1; i14 < 1; i14++) {
                        f5 += (31 + (i14 * i14));
                        Test0141.instanceCount += -8;
                        Test0141.iArrFld = Test0141.iArrFld;
                        i15 -= i12;
                        f5 = i16;
                        switch ((i13 % 7) + 22) {
                        case 22:
                            f5 += i14;
                            f5 += s;
                        case 23:
                            i12 += (((i14 * Test0141.byFld) + i11) - i11);
                            Test0141.instanceCount = i11;
                            byArrFld[i11] >>>= (byte)i10;
                            break;
                        case 24:
                            Test0141.iArrFld[(i16 >>> 1) % N] <<= i16;
                        case 25:
                            i15 -= (int)f5;
                            Test0141.iArrFld = FuzzerUtils.int1array(N, (int) -7);
                            i16 += (34 + (i14 * i14));
                            i16 += (int) Test0141.instanceCount;
                            break;
                        case 26:
                            i10 += i14;
                            if (b1) break;
                            s += (short)d;
                            break;
                        case 27:
                            switch ((i13 % 4) + 111) {
                            case 111:
                                d = -14295;
                                i15 += (((i14 * i15) + i13) - f5);
                                i12 += (int) Test0141.instanceCount;
                                f5 += (((i14 * i11) + i15) - i13);
                                break;
                            case 112:
                                i12 = -41159;
                                break;
                            case 113:
                            case 114:
                                i15 = (int)-234L;
                                break;
                            default:
                                i12 += (i14 * i14);
                            }
                        case 28:
                            i15 = (int) Test0141.instanceCount;
                        default:
                            iFld *= i11;
                        }
                    }
                } while (++i13 < 112);
            }
            break;
        }

        FuzzerUtils.out.println("f5 i10 i11 = " + Float.floatToIntBits(f5) + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 s = " + i15 + "," + i16 + "," + s);
        FuzzerUtils.out.println("b1 d = " + (b1 ? 1 : 0) + "," + Double.doubleToLongBits(d));

        FuzzerUtils.out.println("Test0141.instanceCount Test0141.byFld iFld = " + Test0141.instanceCount + "," + Test0141.byFld + "," +
            iFld);
        FuzzerUtils.out.println("Test0141.lArrFld Test0141.iArrFld byArrFld = " + FuzzerUtils.checkSum(Test0141.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0141.iArrFld) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0141 _instance = new Test0141();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
