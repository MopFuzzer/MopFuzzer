// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0546 {

    public static final int N = 400;

    public static long instanceCount=-216L;
    public static long lFld=-25L;
    public static short sFld=-13142;
    public boolean bFld=false;
    public static double[] dArrFld =new double[N];
    public volatile short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0546.dArrFld, 1.52084);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=-19029;
        int i6=-11631;
        int i7=-43705;
        int i8=-40755;
        int i9=93;
        int[] iArr1 =new int[N];
        boolean b=false, b1=false;

        FuzzerUtils.init(iArr1, -47801);

        i5 = 1;
        while (++i5 < 193) {
            for (i6 = 1; i6 < 8; ++i6) {
                byte by1=-41;
                i7 = i7;
                by1 = (byte)7;
                for (i8 = 1; i8 < 2; ++i8) {
                    i9 += i8;
                    Test0546.dArrFld[i8 + 1] -= i6;
                    i7 += i8;
                    i9 += (i8 | i8);
                    iArr1 = iArr1;
                    i9 -= i5;
                    if (b) continue;
                    if (b1) break;
                    i7 *= (int) Test0546.instanceCount;
                }
                Test0546.lFld |= 22025L;
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1() {

        int i2=-242;
        int i3=14;
        int i4=-16375;
        int i10=13;
        int i11=-115;
        int i12=76;
        int[] iArr =new int[N];
        byte by=-40;
        boolean b2=true;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(bArr, true);

        i2 -= iArr[(i2 >>> 1) % N];
        i2 >>>= (by * iArr[(i2 >>> 1) % N]);
        for (i3 = 9; i3 < 224; ++i3) {
            vMeth2();
            i4 += (int) Test0546.lFld;
            i10 = 1;
            while (++i10 < 7) {
                i2 *= i4;
                i4 -= i2;
                Test0546.instanceCount -= i3;
                Test0546.sFld += (short) (((i10 * i10) + i3) - Test0546.lFld);
                i4 *= i4;
                if (b2) {
                    for (i11 = 1; 1 < i11; i11 -= 2) {
                        Test0546.instanceCount >>= i2;
                        i2 = i2;
                    }
                } else if (true) {
                    iArr[i3 - 1] += i4;
                } else if (b2) {
                    bArr[i3 + 1] = b2;
                } else {
                    i12 += i3;
                }
            }
        }
        vMeth1_check_sum += i2 + by + i3 + i4 + i10 + i11 + i12 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i, int i1) {


        vMeth1();
        vMeth_check_sum += i + i1;
    }

    public void mainTest(String[] strArr1) {

        int i13=9;
        int i14=-200;
        int i15=-103;
        int i16=-181;
        int i17=-61763;
        int i18=5;
        int i19=-2957;
        int i20=-54331;
        int i21=-46;
        int i22=7;
        int[] iArr2 =new
                    int[N];
        double d=0.35672;
        long l=-238961173L;
        long[] lArr =new long[N];
        float f=55.489F, f1=2.290F;
        boolean[] bArr1 =new boolean[N];

        FuzzerUtils.init(iArr2, -14);
        FuzzerUtils.init(bArr1, false);
        FuzzerUtils.init(lArr, 22939L);

        vMeth(i13, i13);
        switch ((((i13 >>> 1) % 3) * 5) + 11) {
        case 21:
            i14 = 1;
            while (++i14 < 301) {
                switch ((i14 % 6) + 66) {
                case 66:
                    for (i15 = 84; i15 > 2; i15--) {
                        i16 += i15;
                        iArr2[i14 - 1] %= (int)(i16 | 1);
                    }
                    i16 = (int)d;
                    bArr1 = FuzzerUtils.boolean1array(N, (boolean)false);
                    break;
                case 67:
                    if (bFld) {
                        for (i17 = 2; i17 < 84; i17 += 2) {
                            i16 *= (int)l;
                            f += f;
                            l = Test0546.sFld;
                            iArr2[i14 + 1] += (int)f1;
                            i13 += (-3059 + (i17 * i17));
                            for (i19 = 3; i19 > 1; --i19) {
                                i18 = (int)l;
                                if (bFld) break;
                                sArrFld[i17 + 1] = (short)244;
                            }
                            i13 += i13;
                            for (i21 = 3; i21 > 1; i21 -= 2) {
                                iArr2[i14 - 1] += i16;
                                if (false) {
                                    i20 += (i21 * i21);
                                    lArr = lArr;
                                    i13 = -60;
                                    i20 >>= (int) Test0546.lFld;
                                }
                                i13 = i19;
                            }
                        }
                        d *= i20;
                    } else {
                        d = l;
                    }
                    break;
                case 68:
                    f -= i13;
                    break;
                case 69:
                    Test0546.lFld = i18;
                    break;
                case 70:
                    try {
                        i18 = (i16 / -123);
                        i20 = (i13 / 195);
                        iArr2[i14] = (i18 % i16);
                    } catch (ArithmeticException a_e) {}
                case 71:
                    iArr2[i14 + 1] += (int)l;
                    break;
                }
            }
            break;
        case 25:
        case 22:
            i18 += (int) Test0546.lFld;
        }

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 d i17 = " + i16 + "," + Double.doubleToLongBits(d) + "," + i17);
        FuzzerUtils.out.println("i18 l f = " + i18 + "," + l + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("f1 i19 i20 = " + Float.floatToIntBits(f1) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 iArr2 = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("bArr1 lArr = " + FuzzerUtils.checkSum(bArr1) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0546.instanceCount Test0546.lFld Test0546.sFld = " + Test0546.instanceCount + "," + Test0546.lFld +
                "," + Test0546.sFld);
        FuzzerUtils.out.println("bFld Test0546.dArrFld sArrFld = " + (bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0546.dArrFld)) + "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0546 _instance = new Test0546();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
