// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0917 {

    public static final int N = 400;

    public static volatile long instanceCount=-100L;
    public static short sFld=10078;
    public static volatile int iFld=7;
    public static boolean bFld=true;
    public static double dFld=-42.105508;
    public static int[][] iArrFld =new int[N][N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0917.iArrFld, -10);
        FuzzerUtils.init(Test0917.fArrFld, -1.714F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i5=-40, i6=153, i7=21877, i8=52455, i9=9908, i10=65089;
        float f=98.663F;
        long l=3153734941L;

        for (i5 = 2; i5 < 305; ++i5) {
            i6 += (((i5 * i5) + Test0917.instanceCount) - i6);
            f -= i6;
            try {
                i6 = (244 / i5);
                i6 = (37691 % i5);
                i6 = (i5 % i6);
            } catch (ArithmeticException a_e) {}
            for (i7 = i5; i7 < 5; ++i7) {
                i8 += (i7 - i5);
                switch ((((i7 >>> 1) % 3) * 5) + 30) {
                case 36:
                    for (l = 1; l < 1; ++l) {
                        i6 &= i5;
                        Test0917.iArrFld[(int) (l)][i7] <<= 204;
                        i9 = (int)l;
                        f += (l + l);
                        i9 += (int)(l * l);
                        i6 += i6;
                    }
                    Test0917.iArrFld[i7 - 1] = Test0917.iArrFld[i5];
                    break;
                case 38:
                    i8 /= -11543;
                    break;
                case 45:
                    Test0917.sFld += (short) i10;
                default:
                    i10 *= (int)f;
                }
            }
        }
        long meth_res = i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + l + i9 + i10;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth() {

        int i4=7;
        int i11=-11;
        int i12=-13;
        int i14=-14;
        int i15=-148;
        int i16=74;
        int[] iArr =new int[N];
        float f1=2.615F;
        double d=-1.11846;
        boolean b=true;
        byte[] byArr =new byte[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 98);
        FuzzerUtils.init(byArr, (byte)115);
        FuzzerUtils.init(lArr, 2797726678L);

        iArr[(i4 >>> 1) % N] *= (int) (dMeth() - Test0917.iFld);
        for (i11 = 5; i11 < 155; i11 += 2) {
            Test0917.iArrFld[i11] = Test0917.iArrFld[i11 + 1];
            Test0917.fArrFld[i11] /= ((long) (f1) | 1);
        }
        try {
            byArr[(Test0917.iFld >>> 1) % N] = (byte) i12;
            Test0917.iFld += (int) Test0917.instanceCount;
            i14 = 1;
            while (++i14 < 158) {
                i15 = 1;
                do {
                    lArr[i15] += (long)d;
                    switch (((i14 % 10) * 5) + 83) {
                    case 89:
                        Test0917.instanceCount = Test0917.instanceCount;
                        i16 = 1;
                        do {
                            if (false) continue;
                            b = true;
                        } while (++i16 < 1);
                        break;
                    case 96:
                        Test0917.iFld *= i15;
                        break;
                    case 131:
                    case 119:
                        i12 &= (int)26L;
                        break;
                    case 91:
                        if (i11 != 0) {
                            vMeth_check_sum += i4 + i11 + i12 + Float.floatToIntBits(f1) + i14 + i15 +
                                Double.doubleToLongBits(d) + i16 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                                FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        break;
                    case 85:
                        i4 >>= 22701;
                    case 116:
                        lArr[i14] -= 64569;
                        break;
                    case 104:
                        i12 *= i14;
                    case 97:
                        Test0917.sFld &= (short) i16;
                        break;
                    case 108:
                        f1 += i15;
                        break;
                    default:
                        i12 = i4;
                    }
                } while (++i15 < 10);
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            Test0917.iArrFld[(Test0917.iFld >>> 1) % N][(i16 >>> 1) % N] >>= i4;
        }
        vMeth_check_sum += i4 + i11 + i12 + Float.floatToIntBits(f1) + i14 + i15 + Double.doubleToLongBits(d) + i16 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1) {

        int i2=10, i3=-7, i17=1498;
        byte by=-102;
        boolean b1=true;
        double d1=-78.54293;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)23915);

        for (i2 = 3; i2 < 139; i2++) {
            i3 += (int) (-((i3 >> i2) + (Test0917.instanceCount - i3)));
            if (false) {
                vMeth();
            } else if (b1) {
                Test0917.iFld *= (int) Test0917.instanceCount;
                i17 = 1;
                while (++i17 < 12) {
                    by = (byte) Test0917.instanceCount;
                    switch ((i17 % 7) + 108) {
                    case 108:
                        if (b1) break;
                        break;
                    case 109:
                        i1 += (i17 + i17);
                        Test0917.iArrFld[i2 + 1][i2 - 1] = i3;
                        i3 += i2;
                        if (b1) continue;
                        break;
                    case 110:
                        Test0917.instanceCount += (long) d1;
                        Test0917.iFld *= (int) Test0917.instanceCount;
                        break;
                    case 111:
                        sArr[i2 + 1] <<= (short)110;
                        break;
                    case 112:
                        i3 *= 247;
                        break;
                    case 113:
                        Test0917.instanceCount += i17;
                        break;
                    case 114:
                        Test0917.iFld = (int) Test0917.instanceCount;
                        break;
                    }
                }
            } else if (b1) {
                Test0917.iArrFld[i2 - 1][i2 - 1] <<= i17;
            }
        }
        long meth_res = i1 + i2 + i3 + i17 + by + (b1 ? 1 : 0) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-75, i18=-11, i19=2, i20=56, i21=-48663, i22=59, i23=2570;
        double d2=-69.101242;
        float f2=0.757F;
        long[] lArr1 =new long[N];
        short[][] sArr1 =new short[N][N];
        byte[][] byArr1 =new byte[N][N];

        FuzzerUtils.init(lArr1, -6L);
        FuzzerUtils.init(sArr1, (short)7496);
        FuzzerUtils.init(byArr1, (byte)76);

        i -= iMeth(Test0917.iFld);
        for (i18 = 194; 9 < i18; i18 -= 3) {
            if (Test0917.bFld) {
                i19 += i19;
                for (i20 = 1; i18 > i20; i20++) {
                    for (d2 = 1; d2 < 2; ++d2) {
                        if (Test0917.bFld) break;
                        switch (((i21 >>> 1) % 4) + 98) {
                        case 98:
                            Test0917.instanceCount = i18;
                            i21 = (int) Test0917.instanceCount;
                            Test0917.bFld = Test0917.bFld;
                            break;
                        case 99:
                            Test0917.instanceCount = i19;
                            break;
                        case 100:
                            f2 += (float)(((d2 * i19) + i) - f2);
                            if (Test0917.bFld) break;
                            lArr1[i20 + 1] = i;
                            Test0917.dFld += Test0917.instanceCount;
                        case 101:
                            i22 = i23;
                            break;
                        default:
                            i22 += i21;
                            i19 *= i20;
                            Test0917.instanceCount += (long) (d2 * d2);
                            i21 += (int)(((d2 * i) + i23) - i18);
                        }
                        sArr1[i18 + 1][(int)(d2)] = (short)-244;
                    }
                    i21 += i;
                    Test0917.instanceCount >>= 134;
                    i22 >>= (int) Test0917.instanceCount;
                    Test0917.iFld -= Test0917.sFld;
                    i19 += i21;
                    Test0917.bFld = Test0917.bFld;
                    f2 = Test0917.instanceCount;
                }
                byArr1[i18][i18 + 1] -= (byte)i22;
            } else {
                if (Test0917.bFld) continue;
            }
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 d2 = " + i20 + "," + i21 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i22 f2 i23 = " + i22 + "," + Float.floatToIntBits(f2) + "," + i23);
        FuzzerUtils.out.println("lArr1 sArr1 byArr1 = " + FuzzerUtils.checkSum(lArr1) + "," +
            FuzzerUtils.checkSum(sArr1) + "," + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0917.instanceCount Test0917.sFld Test0917.iFld = " + Test0917.instanceCount + "," + Test0917.sFld +
                "," + Test0917.iFld);
        FuzzerUtils.out.println("Test0917.bFld Test0917.dFld Test0917.iArrFld = " + (Test0917.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0917.dFld) + "," + FuzzerUtils.checkSum(Test0917.iArrFld));
        FuzzerUtils.out.println("Test0917.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0917.fArrFld)));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0917 _instance = new Test0917();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
