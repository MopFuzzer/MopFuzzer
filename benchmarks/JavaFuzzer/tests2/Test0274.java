// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0274 {

    public static final int N = 400;

    public static long instanceCount=-2556933586L;
    public static byte byFld=-97;
    public static int iFld=6;
    public float fFld=-2.653F;
    public int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0274.fArrFld, -2.583F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4) {

        short s=-23362;
        int i5=-12;
        int i6=9;
        int i7=58;
        int i8=-1;
        int[][] iArr =new int[N][N];
        boolean b=true;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, -150);
        FuzzerUtils.init(dArr, 0.59009);

        iArr[(i4 >>> 1) % N][(i4 >>> 1) % N] -= -135;
        for (double d : dArr) {
            i4 ^= s;
            Test0274.byFld >>= (byte) Test0274.instanceCount;
            i5 = 1;
            do {
                Test0274.instanceCount += i5;
                i4 += i5;
            } while (++i5 < 4);
            i6 = 1;
            while (++i6 < 4) {
                for (i7 = 1; i7 < 1; ++i7) {
                    iArr[i6 - 1][i7] <<= (int)2298051119531014141L;
                    i4 -= (int)d;
                    if (b) {
                        i4 += (int)-2.801F;
                        i8 <<= i5;
                        try {
                            i8 = (i8 / i8);
                            iArr[i6 + 1][(i7 >>> 1) % N] = (i4 % i7);
                            i4 = (i7 % -22128);
                        } catch (ArithmeticException a_e) {}
                        vMeth2_check_sum += i4 + s + i5 + i6 + i7 + i8 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    } else if (b) {
                        iArr[i6] = FuzzerUtils.int1array(N, (int)-12);
                        vMeth2_check_sum += i4 + s + i5 + i6 + i7 + i8 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    } else {
                        Test0274.instanceCount >>= i6;
                    }
                }
            }
        }
        vMeth2_check_sum += i4 + s + i5 + i6 + i7 + i8 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(float f, int i2, int i3) {

        int i9=-20195;
        int i10=4;
        int i11=0;
        int i12=-8;
        int i13=23315;
        int i14=16;
        int[] iArr1 =new int[N];
        float f1=-2.159F;
        short s1=10653;

        FuzzerUtils.init(iArr1, -7573);

        vMeth2(i3);
        for (i9 = 1; i9 < 219; i9++) {
            for (i11 = i9; i11 < 7; ++i11) {
                iArr1[i9] -= (int)111.131033;
                i10 = i2;
                Test0274.instanceCount <<= Test0274.instanceCount;
                if (i12 != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f) + i2 + i3 + i9 + i10 + i11 + i12 + i13 +
                        Float.floatToIntBits(f1) + i14 + s1 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
            i3 ^= i10;
            i13 = 1;
            do {
                for (f1 = 1; f1 < 1; ++f1) {
                    i3 *= s1;
                    i2 += (int)f1;
                    i2 = i12;
                    f %= (s1 | 1);
                }
            } while (++i13 < 7);
        }
        Test0274.byFld += (byte) 227;
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + i3 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) +
            i14 + s1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l, long l1) {

        int i=82;
        int i1=-38;
        int i15=-234;
        int i16=51774;
        int i18=-22303;
        int[] iArr2 =new int[N];
        float f2=-3.869F;
        double d1=-2.1635;
        double d2=1.29845;
        double[] dArr1 =new double[N];
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(iArr2, -39242);
        FuzzerUtils.init(dArr1, -2.98480);
        FuzzerUtils.init(sArr, (short)18660);

        for (i = 285; i > 12; i--) {
            vMeth1(f2, i1, 23050);
            iArr2[i + 1] += (int) Test0274.instanceCount;
            iArr2[i] += i;
            i1 = i1;
        }
        for (i15 = 6; i15 < 359; i15++) {
            i16 -= (int)1.636F;
            for (d1 = i15; d1 < 5; ++d1) {
                dArr1 = dArr1;
                i18 = i16;
                d2 = f2;
                sArr[(int)(d1 - 1)][i15 - 1] -= (short)10;
                Test0274.instanceCount /= -14L;
                f2 *= i15;
            }
        }
        i1 |= i;
        vMeth_check_sum += l + l1 + i + i1 + Float.floatToIntBits(f2) + i15 + i16 + Double.doubleToLongBits(d1) + i18 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=-61, i20=14, i21=5, i22=-45, i23=-14, i24=-2;
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        double d3=-104.113775;

        FuzzerUtils.init(bArr, false);

        vMeth(Test0274.instanceCount, Test0274.instanceCount);
        Test0274.iFld -= (int) Test0274.instanceCount;
        Test0274.instanceCount *= 62;
        Test0274.iFld = Test0274.iFld;
        i19 = 1;
        do {
            iArrFld[i19 + 1] += (int) Test0274.instanceCount;
            for (i20 = i19; i20 < 65; ++i20) {
                if (b1) {
                    if (b1) break;
                    Test0274.fArrFld[i19] += fFld;
                } else if (true) {
                    i22 = 1;
                    while (--i22 > 0) {
                        i21 += (((i22 * Test0274.instanceCount) + i20) - i19);
                        Test0274.instanceCount -= Test0274.instanceCount;
                        try {
                            i21 = (i21 / i19);
                            i21 = (Test0274.iFld % iArrFld[i20 + 1]);
                            i21 = (i19 % -57265);
                        } catch (ArithmeticException a_e) {}
                        Test0274.iFld = i20;
                        b1 = b1;
                        fFld = Test0274.instanceCount;
                    }
                    for (i23 = 1; i23 < 1; ++i23) {
                        Test0274.iFld += (((i23 * i24) + i20) - i22);
                        i21 >>= i19;
                        Test0274.instanceCount = i22;
                        i21 += (((i23 * Test0274.instanceCount) + i23) - i23);
                        i21 <<= i23;
                        Test0274.byFld -= (byte) d3;
                        i21 >>= i24;
                        bArr[i23] = b1;
                        iArrFld[i19] <<= (int)3031506762L;
                    }
                    bArr[i20 + 1] = true;
                    Test0274.instanceCount -= i19;
                } else if (b1) {
                    i21 = (int) Test0274.instanceCount;
                } else {
                    Test0274.iFld += (((i20 * Test0274.instanceCount) + fFld) - Test0274.instanceCount);
                }
            }
        } while (++i19 < 385);

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("b1 i22 i23 = " + (b1 ? 1 : 0) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 d3 bArr = " + i24 + "," + Double.doubleToLongBits(d3) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0274.instanceCount Test0274.byFld Test0274.iFld = " + Test0274.instanceCount + "," + Test0274.byFld +
                "," + Test0274.iFld);
        FuzzerUtils.out.println("fFld iArrFld Test0274.fArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0274.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0274 _instance = new Test0274();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
