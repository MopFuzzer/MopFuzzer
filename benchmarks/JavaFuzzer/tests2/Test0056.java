// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0056 {

    public static final int N = 400;

    public static volatile long instanceCount=0L;
    public static short sFld=17662;
    public static boolean bFld=true;
    public volatile float fFld=-2.784F;
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0056.iArrFld, 42500);
        FuzzerUtils.init(Test0056.dArrFld, 114.68407);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth1(int i1) {

        short s=4634;
        byte by=88;

        Test0056.instanceCount ^= ((++s) - ((i1++) + (by * i1)));
        i1 *= i1;
        by -= (byte) (--Test0056.instanceCount);
        vMeth1_check_sum += i1 + s + by;
    }

    public static long lMeth(long l, long l1) {

        int i4=-47030, i5=-199, i6=-2236, i7=-4, i8=-5, i9=43955, i10=26;
        double d=-124.31663;

        Test0056.iArrFld[(i4 >>> 1) % N] -= (int) 8851L;
        l *= (long)88.9170;
        i4 += i4;
        i4 = i4;
        i4 *= i4;
        i4 -= (int) Test0056.instanceCount;
        Test0056.iArrFld[(i4 >>> 1) % N] >>= (int) Test0056.instanceCount;
        for (i5 = 2; i5 < 140; i5++) {
            i6 += (i5 * i5);
            for (i7 = i5; i7 < 11; ++i7) {
                for (i9 = 1; i9 < 1; ++i9) {
                    i6 &= 10086;
                    i6 -= (int)l1;
                    d += -16571;
                    l1 += (5 + (i9 * i9));
                }
            }
        }
        long meth_res = l + l1 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        int i2=180, i3=107, i11=-14, i12=-142, i13=-201;
        float f=-1.710F;
        float[] fArr =new float[N];
        double d1=-2.540;
        boolean b=false;

        FuzzerUtils.init(fArr, -1.361F);

        for (i2 = 147; i2 > 2; --i2) {
            f = ((-(-lMeth(-101L, Test0056.instanceCount))) << Test0056.instanceCount);
            i3 = (int)d1;
            i3 = 51469;
            i3 *= -40742;
            i3 *= i2;
            f -= 95.515F;
            i3 -= (int)-14.67598;
            for (i11 = 1; i11 < 11; i11++) {
                Test0056.iArrFld[i11 + 1] *= i12;
                f = Test0056.instanceCount;
                i12 ^= i3;
                fArr[i11] = 3;
            }
            if (b) continue;
            i13 = (int)d1;
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i11 + i12 + (b ? 1 : 0) + i13
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-9, i14=-50471, i15=-10210, i16=0, i17=-22179;
        double d2=2.128352;
        float f1=-2.493F;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 4041995528L);

        Test0056.iArrFld[(-229 >>> 1) % N] += (int) Test0056.dArrFld[(i >>> 1) % N];
        vMeth1(i);
        Test0056.instanceCount -= (lArr[(i >>> 1) % N] + (--i));
        vMeth1(iMeth());
        i = (int) Test0056.instanceCount;
        i = i;
        i *= (int)d2;
        for (i14 = 6; 175 > i14; i14++) {
            for (i16 = 1; i16 < 9; ++i16) {
                Test0056.iArrFld[i14 + 1] -= (int) f1;
                Test0056.sFld = (short) i15;
                if (b1) break;
            }
            Test0056.instanceCount += i17;
            i15 *= i15;
            i = (int)d2;
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + Float.floatToIntBits(f1) + (b1 ? 1
            : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=-139, i19=11, i20=5, i21=-46040;
        double d3=33.53270;

        vMeth();
        i18 = 215;
        do {
            i19 = 1;
            while (++i19 < 117) {
                i20 ^= i18;
                Test0056.iArrFld[i18 - 1] += i20;
                switch (((i19 % 2) * 5) + 49) {
                case 52:
                    i20 = 11989;
                    if (Test0056.bFld) break;
                    Test0056.sFld += (short) (((i19 * Test0056.instanceCount) + fFld) - i19);
                case 50:
                default:
                    i21 = 1;
                    while (++i21 < 1) {
                        Test0056.instanceCount = i19;
                        i20 += (((i21 * Test0056.instanceCount) + i20) - i20);
                        Test0056.iArrFld[i18 + 1] = -52642;
                        fFld = Test0056.instanceCount;
                        switch ((i19 % 10) + 72) {
                        case 72:
                            d3 -= i19;
                            break;
                        case 73:
                            Test0056.instanceCount += i21;
                            if (Test0056.bFld) break;
                            break;
                        case 74:
                            Test0056.instanceCount = i19;
                            i20 >>>= i19;
                            fFld = i20;
                            if (false) {
                                Test0056.instanceCount += (i21 + fFld);
                                d3 -= d3;
                                i20 |= (int) Test0056.instanceCount;
                            } else if (Test0056.bFld) {
                                i20 += (i21 - i19);
                                try {
                                    i20 = (i18 / 12787);
                                    i20 = (i21 % i18);
                                    i20 = (61265726 / i19);
                                } catch (ArithmeticException a_e) {}
                            }
                            break;
                        case 75:
                            i20 += (35849 + (i21 * i21));
                            break;
                        case 76:
                            i20 += (125 + (i21 * i21));
                            break;
                        case 77:
                            Test0056.instanceCount -= i18;
                        case 78:
                            d3 = -91.811F;
                            break;
                        case 79:
                            Test0056.dArrFld[i19 - 1] /= -44.533F;
                        case 80:
                            i20 = i19;
                            break;
                        case 81:
                            i20 >>= i19;
                            break;
                        default:
                            d3 += i20;
                        }
                    }
                }
            }
        } while (--i18 > 0);

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d3 = " + i21 + "," + Double.doubleToLongBits(d3));

        FuzzerUtils.out.println("Test0056.instanceCount Test0056.sFld Test0056.bFld = " + Test0056.instanceCount + "," + Test0056.sFld +
                "," + (Test0056.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld Test0056.iArrFld Test0056.dArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0056.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0056.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0056 _instance = new Test0056();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
