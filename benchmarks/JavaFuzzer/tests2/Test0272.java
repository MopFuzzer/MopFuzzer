// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0272 {

    public static final int N = 400;

    public static long instanceCount=157483471709179710L;
    public static volatile float fFld=0.796F;
    public static double dFld=-83.89412;
    public static boolean bFld=false;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0272.iArrFld, -36355);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i7, byte by) {


        Test0272.iArrFld[(i7 >>> 1) % N] >>= (int) Test0272.instanceCount;
        long meth_res = i7 + by;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i5, int i6) {

        int i8=47946, i9=62402, i10=-129, i11=-65246, i12=47;
        byte by1=120;
        boolean b=false;
        double d=-118.128533, d1=-2.77742;

        Test0272.instanceCount -= (long) fMeth(i8, by1);
        for (i9 = 5; i9 < 139; ++i9) {
            if (b) break;
        }
        i6 += i6;
        i8 = 186;
        Test0272.dFld += -68.24739;
        Test0272.fFld -= i9;
        i11 = 1;
        while (++i11 < 211) {
            for (d = 1; d < 8; d++) {
                i10 -= i5;
                Test0272.instanceCount = i8;
                i10 += (int)(((d * i6) + i5) - i9);
                d1 = 2;
                while (--d1 > 0) {
                    Test0272.instanceCount += (long) (d1 * d1);
                }
                if (b) break;
            }
        }
        vMeth1_check_sum += i5 + i6 + i8 + by1 + i9 + i10 + (b ? 1 : 0) + i11 + Double.doubleToLongBits(d) + i12 +
            Double.doubleToLongBits(d1);
    }

    public static void vMeth(int i2, int i3, int i4) {

        int i13=115, i14=-50875, i15=1432, i16=85, i17=2, i18=27254;
        long[] lArr =new long[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr, 210L);
        FuzzerUtils.init(dArr, 1.52691);

        Test0272.fFld = Math.min(i3++, (int) (lArr[(i3 >>> 1) % N] + i3));
        i4 -= (int)(Math.abs(1.440F) - (++lArr[(i2 >>> 1) % N]));
        if (Test0272.bFld) {
            vMeth1(i4, i2);
            for (i13 = 14; i13 < 255; i13++) {
                for (i15 = 7; i15 > 1; i15--) {
                    if (false) {
                        i16 = (int) Test0272.fFld;
                        if (i13 != 0) {
                            vMeth_check_sum += i2 + i3 + i4 + i13 + i14 + i15 + i16 + i17 + i18 +
                                FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                            return;
                        }
                        for (i17 = 1; 2 > i17; i17++) {
                            Test0272.instanceCount = i15;
                            i4 = (int) Test0272.instanceCount;
                            dArr[i17 - 1] -= i16;
                            Test0272.fFld += (((i17 * i17) + i17) - Test0272.fFld);
                            i18 += (((i17 * Test0272.instanceCount) + i18) - i18);
                        }
                    }
                }
            }
            vMeth_check_sum += i2 + i3 + i4 + i13 + i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(lArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
            return;
        } else {
            i2 += i3;
        }
        vMeth_check_sum += i2 + i3 + i4 + i13 + i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-27381, i1=-54842, i19=215, i20=-126, i21=-12, i22=47;
        short s=-28521;
        byte by2=-27;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.996F);

        for (i = 5; 133 > i; i++) {
            vMeth(-208, 178, i);
            for (i19 = 10; i19 < 196; i19++) {
                for (i21 = 1; i21 < 2; i21++) {
                    Test0272.bFld = Test0272.bFld;
                    if (Test0272.bFld) {
                        i1 = i21;
                        try {
                            i20 = (-50114 / i22);
                            i22 = (i19 / -66);
                            Test0272.iArrFld[i19] = (Test0272.iArrFld[i21 - 1] / -63831);
                        } catch (ArithmeticException a_e) {}
                        try {
                            i20 = (i21 / Test0272.iArrFld[i19 + 1]);
                            i20 = (Test0272.iArrFld[i19 - 1] % i);
                            i20 = (i % Test0272.iArrFld[i - 1]);
                        } catch (ArithmeticException a_e) {}
                        fArr[i + 1] += (float) Test0272.dFld;
                    } else {
                        i1 += s;
                    }
                    if (Test0272.bFld) {
                        i1 += i21;
                        i20 -= (int) Test0272.instanceCount;
                        switch ((((i19 >>> 1) % 6) * 5) + 115) {
                        case 127:
                            Test0272.instanceCount += (i21 ^ (long) Test0272.fFld);
                            break;
                        case 117:
                            Test0272.fFld %= ((long) (Test0272.fFld) | 1);
                            if (true) break;
                            break;
                        case 138:
                            i1 = s;
                            break;
                        case 126:
                        case 143:
                        case 122:
                            i22 = i21;
                            Test0272.iArrFld[i19] ^= i22;
                            i1 = i19;
                        default:
                            i20 = i22;
                        }
                        Test0272.bFld = true;
                    } else if (Test0272.bFld) {
                        Test0272.instanceCount += (((i21 * i19) + Test0272.instanceCount) - by2);
                        s = (short)i1;
                        Test0272.dFld += 10;
                    } else {
                        if (Test0272.bFld) {
                            by2 ^= (byte)i20;
                        } else if (true) {
                            i22 += (-15 + (i21 * i21));
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("s by2 fArr = " + s + "," + by2 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0272.instanceCount Test0272.fFld Test0272.dFld = " + Test0272.instanceCount + "," +
                Float.floatToIntBits(Test0272.fFld) + "," + Double.doubleToLongBits(Test0272.dFld));
        FuzzerUtils.out.println("Test0272.bFld Test0272.iArrFld = " + (Test0272.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0272.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0272 _instance = new Test0272();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
