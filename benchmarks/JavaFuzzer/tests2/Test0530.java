// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0530 {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public static float fFld=-71.226F;
    public static volatile int iFld=-10;
    public boolean bFld=false;
    public long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0530.iArrFld, -114);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i5=-249, i6=-22;
        byte by2=64;

        for (i5 = 12; i5 < 235; i5++) {
            byte by1=-126;
            Test0530.instanceCount = i5;
            i6 = by1;
        }
        by2 = (byte)15.324F;
        long meth_res = i5 + i6 + by2;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i3=-51850;
        int i4=-1;
        int i7=-2;
        int[] iArr =new int[N];
        boolean b=false;
        long l=33361L;
        long[] lArr =new long[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-120);
        FuzzerUtils.init(lArr, 804814778L);
        FuzzerUtils.init(iArr, 18533);

        Test0530.iFld -= (int) Math.abs(Test0530.instanceCount);
        for (byte by : byArr) {
            for (i3 = 1; i3 < 4; ++i3) {
                Test0530.instanceCount = lMeth();
                if (b) break;
                for (l = 1; l < 2; ++l) {
                    i7 <<= i4;
                    i7 = Test0530.iFld;
                    lArr[(int) (l)] = Test0530.instanceCount;
                    Test0530.iFld = Test0530.iFld;
                    iArr[i3] >>= (int)-356500825L;
                    i4 = i4;
                    Test0530.instanceCount -= i7;
                    Test0530.instanceCount = i4;
                }
                Test0530.fFld += (((i3 * i7) + i3) - Test0530.instanceCount);
            }
        }
        vMeth_check_sum += i3 + i4 + (b ? 1 : 0) + l + i7 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i) {

        int i1=-13, i2=-52278, i8=7799;
        float f=-1.244F;
        boolean b1=false;
        short s=16126;
        double d=-1.114786;

        for (i1 = 122; i1 > 1; --i1) {
            vMeth();
            for (f = 1; 13 > f; ++f) {
                b1 = b1;
                Test0530.instanceCount = Test0530.instanceCount;
                i *= Test0530.iFld;
                if (b1) continue;
                b1 = false;
                Test0530.iFld += (int) (((f * i) + i1) - i);
                Test0530.instanceCount ^= s;
                d = Test0530.iFld;
                i2 += i8;
            }
        }
        long meth_res = i + i1 + i2 + Float.floatToIntBits(f) + i8 + (b1 ? 1 : 0) + s + Double.doubleToLongBits(d);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i9=-59321, i10=11, i11=10, i12=-58433, i13=-71, i14=36980;
        double d1=1.70190;
        byte by3=-93;
        float[] fArr =new float[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(fArr, 2.443F);
        FuzzerUtils.init(bArr, false);

        Test0530.fFld = iMeth(Test0530.iFld);
        fArr[(Test0530.iFld >>> 1) % N] = Test0530.instanceCount;
        for (i9 = 3; i9 < 277; ++i9) {
            i10 *= (int) Test0530.instanceCount;
            for (i11 = i9; i11 < 92; ++i11) {
                for (i13 = 1; i13 > 1; i13--) {
                    Test0530.instanceCount += -8;
                    lArrFld[i11 + 1] %= (i12 | 1);
                    try {
                        i12 = (i14 % Test0530.iArrFld[i9 - 1]);
                        i10 = (i13 / 539737819);
                        i14 = (i13 % -41012);
                    } catch (ArithmeticException a_e) {}
                    Test0530.fFld += i10;
                    Test0530.iFld -= 40;
                    i14 += i13;
                    i10 = (int) Test0530.instanceCount;
                    Test0530.instanceCount -= i9;
                    if (bFld) {
                        Test0530.iFld += i14;
                    } else if (bFld) {
                        i10 ^= -2035;
                        Test0530.iFld -= -1;
                        if (bFld) {
                            Test0530.instanceCount = i14;
                            switch ((i11 % 3) + 120) {
                            case 120:
                                i14 = (int)-35272L;
                                i10 += i13;
                                i14 -= i13;
                                Test0530.fFld += (float) d1;
                                break;
                            case 121:
                                Test0530.iArrFld[i13 - 1] += i14;
                                by3 = (byte)-51348;
                                Test0530.instanceCount += (((i13 * Test0530.instanceCount) + Test0530.instanceCount) - i13);
                                lArrFld[i9 - 1] >>= by3;
                                break;
                            case 122:
                                bArr[i9 - 1] = bFld;
                                break;
                            }
                        } else if (bFld) {
                            i12 += i13;
                        } else {
                            Test0530.fFld -= Test0530.fFld;
                        }
                    } else {
                        Test0530.iArrFld[i9] >>>= i10;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("d1 by3 fArr = " + Double.doubleToLongBits(d1) + "," + by3 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0530.instanceCount Test0530.fFld Test0530.iFld = " + Test0530.instanceCount + "," +
                Float.floatToIntBits(Test0530.fFld) + "," + Test0530.iFld);
        FuzzerUtils.out.println("bFld lArrFld Test0530.iArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(lArrFld) +
                "," + FuzzerUtils.checkSum(Test0530.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0530 _instance = new Test0530();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
