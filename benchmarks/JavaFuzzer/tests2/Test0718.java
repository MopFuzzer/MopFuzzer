// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0718 {

    public static final int N = 400;

    public static long instanceCount=7819436719749982175L;
    public static boolean bFld=true;
    public float fFld=-2.506F;
    public static short sFld=8944;
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0718.dArrFld, -2.100252);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static long lMeth(int i4, int i5) {


        i4 = i5;
        long meth_res = i4 + i5;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i10) {

        int i11=-200, i12=232, i13=-134, i14=-9;
        float f1=-66.195F;

        for (i11 = 10; i11 < 189; ++i11) {
            for (i13 = i11; i13 < 9; i13++) {
                if (Test0718.bFld) continue;
                Test0718.dArrFld[i13] += i12;
                Test0718.instanceCount = Test0718.instanceCount;
            }
            i12 = (int)f1;
            Test0718.instanceCount += i12;
        }
        vMeth_check_sum += i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1);
    }

    public static int iMeth1(int i7, int i8, int i9) {

        int i15=-13;
        int i16=12;
        int i17=-6;
        int[] iArr1 =new int[N];
        byte by=-27;

        FuzzerUtils.init(iArr1, 55191);

        i9 *= ((i7++) % (iArr1[(i7 >>> 1) % N] | 1));
        vMeth(i9);
        i8 = (int) Test0718.instanceCount;
        for (i15 = 260; i15 > 16; --i15) {
            float f2=-54.128F;
            i7 += (i15 + Test0718.instanceCount);
            Test0718.instanceCount += i15;
            i17 = 1;
            do {
                iArr1[i15] *= (int) Test0718.instanceCount;
                i8 *= i16;
                Test0718.instanceCount += i15;
                i9 = (int) Test0718.instanceCount;
                i9 -= i16;
            } while ((i17 += 3) < 7);
            f2 *= i9;
        }
        i16 = by;
        i8 ^= (int) Test0718.instanceCount;
        long meth_res = i7 + i8 + i9 + i15 + i16 + i17 + by + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f, double d) {

        int i6=6;
        int i18=155;
        int i19=-26947;
        int i20=-4;
        int i21=-6;
        int i22=1;
        int i23=-55352;
        int[] iArr2 =new int[N];
        byte by1=-42;
        long[] lArr =new long[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr, 51357L);
        FuzzerUtils.init(iArr2, -45387);
        FuzzerUtils.init(fArr, -46.426F);

        i6 -= iMeth1(i6, i6, i6);
        i6 += i6;
        for (i18 = 263; i18 > 7; i18--) {
            switch ((i18 % 8) + 102) {
            case 102:
                i19 = (int)2.367F;
                for (i20 = 1; i20 < 6; ++i20) {
                    Test0718.instanceCount -= Test0718.instanceCount;
                    lArr[i18 + 1] = by1;
                    for (i22 = 1; i22 < 2; i22++) {
                        by1 += (byte)i22;
                        Test0718.instanceCount += i22;
                        iArr2[i22 - 1] += (int)d;
                        i21 *= -12;
                        i21 *= -10;
                        i6 *= by1;
                    }
                }
                break;
            case 103:
                i23 += (((i18 * f) + i18) - i18);
                break;
            case 104:
                i21 += i20;
                break;
            case 105:
                Test0718.instanceCount = i19;
                break;
            case 106:
                i21 = i21;
                break;
            case 107:
                lArr[i18] = (long)f;
            case 108:
                i23 = (int) Test0718.instanceCount;
                break;
            case 109:
                i19 <<= i19;
                break;
            default:
                i21 += 16758;
            }
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + i18 + i19 + i20 + i21 + by1 + i22 +
            i23 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-21015;
        int i1=-12;
        int i2=-5;
        int i3=-154;
        int i24=-13;
        int i25=5;
        int[][] iArr =new int[N][N];
        double d1=0.119191;
        boolean b=false;
        byte by2=109;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -127);
        FuzzerUtils.init(lArr1, -242L);

        for (i = 16; i < 378; ++i) {
            for (i2 = 3; i2 < 70; ++i2) {
                i3 += (int)lMeth(i3, Integer.reverseBytes(i1 = i3));
                i1 += i2;
                i1 = (i1--);
                Test0718.instanceCount *= iArr[i2][i2 + 1];
                switch (((iMeth(fFld, d1) >>> 1) % 10) + 72) {
                case 72:
                    fFld += (((i2 * i) + Test0718.instanceCount) - Test0718.instanceCount);
                case 73:
                    i1 = i;
                    break;
                case 74:
                    iArr[i][i2] += -34614;
                    Test0718.instanceCount += -1;
                    break;
                case 75:
                    if (Test0718.bFld) break;
                    i24 = 2;
                    do {
                        Test0718.instanceCount -= (long) -2.103F;
                        Test0718.instanceCount <<= Test0718.instanceCount;
                    } while (--i24 > 0);
                    iArr[i2][i + 1] = i1;
                    i25 = 1;
                    do {
                        iArr[i2][i + 1] = i2;
                        i3 = i24;
                        i1 >>= -3;
                        Test0718.bFld = b;
                        i3 <<= i;
                        if (b) {
                            d1 += Test0718.instanceCount;
                            fFld *= -1.320F;
                        } else if (Test0718.bFld) {
                            i1 = 6047;
                            lArr1[i] >>= i24;
                        } else {
                            Test0718.instanceCount += i25;
                            i3 <<= i24;
                        }
                        if (Test0718.bFld) continue;
                    } while (++i25 < 2);
                    break;
                case 76:
                    d1 *= 4880550106225783302L;
                    break;
                case 77:
                case 78:
                    Test0718.sFld += (short) (i2 * i2);
                    break;
                case 79:
                    i1 *= (int) Test0718.instanceCount;
                    break;
                case 80:
                    i3 <<= i1;
                    break;
                case 81:
                    d1 += i25;
                    break;
                default:
                    by2 = (byte)i1;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d1 i24 = " + i3 + "," + Double.doubleToLongBits(d1) + "," + i24);
        FuzzerUtils.out.println("i25 b by2 = " + i25 + "," + (b ? 1 : 0) + "," + by2);
        FuzzerUtils.out.println("iArr lArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0718.instanceCount Test0718.bFld fFld = " + Test0718.instanceCount + "," + (Test0718.bFld ? 1 : 0)
            + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0718.sFld Test0718.dArrFld = " + Test0718.sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0718.dArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0718 _instance = new Test0718();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
