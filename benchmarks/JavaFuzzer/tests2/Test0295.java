// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0295 {

    public static final int N = 400;

    public static long instanceCount=-4154443843219643791L;
    public short sFld=30801;
    public byte byFld=-89;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i9=37828, i10=-10280, i11=13, i12=-139;
        double d2=66.7973;
        short s=-32611;
        float f3=-71.891F;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -4009636999L);

        i9 <<= i9;
        lArr[(i9 >>> 1) % N] = i9;
        i9 *= -13;
        d2 -= i9;
        i9 -= i9;
        Test0295.instanceCount <<= i9;
        i9 |= (int) Test0295.instanceCount;
        switch (((i9 >>> 1) % 3) + 115) {
        case 115:
            s = (short) Test0295.instanceCount;
            break;
        case 116:
            Test0295.instanceCount = i9;
            break;
        case 117:
            for (i10 = 11; 207 > i10; i10++) {
                i11 += (i10 * i10);
                for (f3 = 1; f3 < 8; ++f3) {
                    if (b1) continue;
                    i11 -= i10;
                }
            }
            break;
        default:
            Test0295.instanceCount += s;
        }
        long meth_res = i9 + Double.doubleToLongBits(d2) + s + i10 + i11 + Float.floatToIntBits(f3) + i12 + (b1 ? 1 :
            0) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        float f2=-1.420F;
        double d1=-100.46170;
        int i8=34014;
        int i13=-131;
        int i14=189;
        int i15=-48751;
        int[] iArr1 =new int[N];
        long l=232667788L;

        FuzzerUtils.init(iArr1, 39248);

        f2 += (float)(++d1);
        i8 *= iMeth1();
        iArr1[(i8 >>> 1) % N] -= (int) Test0295.instanceCount;
        i8 <<= i8;
        i8 += i8;
        i8 = i8;
        Test0295.instanceCount = (long) f2;
        for (i13 = 4; i13 < 349; ++i13) {
            for (l = 1; l < 5; l++) {
                i15 += (int)-103.42F;
                d1 -= f2;
                iArr1[(i15 >>> 1) % N] *= i14;
                i14 -= i8;
                i15 += i13;
                i15 *= i8;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i8 + i13 + i14 + l + i15 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i5) {

        int i6=-42389;
        int i7=126;
        int i16=-12;
        int i17=-37883;
        int i18=242;
        int i19=-4;
        int[] iArr2 =new int[N];
        float f4=2.282F;
        boolean b2=true;
        byte by=25;

        FuzzerUtils.init(iArr2, 11721);

        for (i6 = 4; i6 < 152; ++i6) {
            vMeth1();
            iArr2[i6] *= (int)f4;
            if (b2) break;
            i5 = i6;
            iArr2[i6 + 1] = i5;
            i7 += (i6 * i6);
            for (i16 = 1; 11 > i16; ++i16) {
                i7 = i16;
                i5 += i17;
                Test0295.instanceCount &= Test0295.instanceCount;
                i17 += (int)113.617F;
            }
        }
        for (i18 = 3; i18 < 183; ++i18) {
            Test0295.instanceCount += i18;
            f4 += (((i18 * i16) + by) - i19);
        }
        vMeth_check_sum += i5 + i6 + i7 + Float.floatToIntBits(f4) + (b2 ? 1 : 0) + i16 + i17 + i18 + i19 + by +
            FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth() {

        double d=21.43415;
        float f1=-120.152F;
        int i4=-4724;

        d = 1;
        do {
            f1 += (float) (((d * sFld) + byFld) - Test0295.instanceCount);
            i4 += (2 + (d * d));
        } while (++d < 233);
        long meth_res = Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i4;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-215;
        int i1=57;
        int i2=210;
        int i3=-9;
        int i20=14;
        int i21=109;
        int[] iArr =new int[N];
        boolean b=false;
        float f=5.809F;
        float[] fArr =new float[N];
        double d3=-1.75627;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -228);
        FuzzerUtils.init(lArr1, 3096648657544958483L);
        FuzzerUtils.init(fArr, -2.945F);

        for (i = 228; i > 13; i -= 2) {
            b = ((++Test0295.instanceCount) < (--i1));
            for (i2 = 3; i2 < 234; ++i2) {
                iArr = iArr;
                switch (((((int)(i3 - f)) >>> 1) % 8) + 91) {
                case 91:
                    iArr[i - 1] /= (int)(iMeth() | 1);
                    break;
                case 92:
                    vMeth(i1);
                    break;
                case 93:
                    d3 += sFld;
                    lArr1[i] = Test0295.instanceCount;
                    Test0295.instanceCount += (((i2 * i) + i2) - i2);
                    lArr1[i + 1] *= (long)f;
                    break;
                case 94:
                    f = i2;
                    if (b) break;
                    break;
                case 95:
                    fArr[i2 + 1] = i3;
                    Test0295.instanceCount -= Test0295.instanceCount;
                    i1 += i3;
                    f += (((i2 * i3) + i2) - i1);
                case 96:
                    for (i20 = 1; i20 < 2; i20 += 2) {
                        lArr1[i20] -= i3;
                        i3 /= (int)(i | 1);
                    }
                    Test0295.instanceCount *= Test0295.instanceCount;
                    iArr[i - 1] += i3;
                    iArr = FuzzerUtils.int1array(N, (int)-12);
                    break;
                case 97:
                    Test0295.instanceCount = (long) d3;
                    switch ((((i2 >>> 1) % 2) * 5) + 4) {
                    case 9:
                        f += (i2 * i20);
                        break;
                    case 14:
                        Test0295.instanceCount -= -15422;
                    }
                    i3 = i20;
                    i1 += (i2 * i2);
                case 98:
                    f = 3913075353L;
                }
            }
        }

        FuzzerUtils.out.println("i i1 b = " + i + "," + i1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i2 i3 f = " + i2 + "," + i3 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d3 i20 i21 = " + Double.doubleToLongBits(d3) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("iArr lArr1 fArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr1) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0295.instanceCount sFld byFld = " + Test0295.instanceCount + "," + sFld + "," + byFld);

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0295 _instance = new Test0295();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
