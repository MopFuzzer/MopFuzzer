// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0071 {

    public static final int N = 400;

    public static volatile long instanceCount=-831185462L;
    public int iFld=209;
    public int[] iArrFld =new int[N];

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(double d, int i3) {

        int i4=-3239;
        int i5=32359;
        int i6=102;
        int i7=42;
        int i8=242;
        int i9=146;
        int[] iArr =new int[N];
        float f1=2.552F;
        long l=-14L;
        short s=-28122;
        byte by=-24;
        boolean b1=false;

        FuzzerUtils.init(iArr, 11);

        for (i4 = 9; i4 < 344; ++i4) {
            i5 -= i3;
            i3 -= (int)f1;
            l = -175;
            for (i6 = 1; i6 < 5; i6++) {
                short s1=18814;
                s += (short)(-11254 + (i6 * i6));
                by *= (byte)i6;
                b1 = b1;
                iArr[i6 + 1] = i7;
                s1 |= (short)i7;
                i5 -= (int)l;
            }
            for (i8 = 1; i8 < 5; i8++) {
                i5 *= (int) Test0071.instanceCount;
                iArr[i8 - 1] -= i7;
                i5 += (int) Test0071.instanceCount;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i3 + i4 + i5 + Float.floatToIntBits(f1) + l + i6 + i7 + s + by +
            (b1 ? 1 : 0) + i8 + i9 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(int i1, float f, int i2) {

        double d1=-70.104000, d2=-27.45193;
        long l1=49L;
        long[] lArr =new long[N];
        int i10=-4;
        int i11=6;
        int i12=8529;
        int[] iArr1 =new int[N];
        boolean b2=false;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, 57976);

        lMeth(9.41006, i2);
        lArr[(i1 >>> 1) % N] *= (long)d1;
        for (l1 = 10; 240 > l1; l1++) {
            for (i11 = 1; i11 < 7; i11 += 3) {
                short s2=-4076;
                d2 = 1;
                while (++d2 < 4) {
                    i12 += (int) (d2 + Test0071.instanceCount);
                    bArr[i11] = false;
                    if (i1 != 0) {
                    }
                    iArr1[(int)(d2 - 1)] *= i10;
                    i12 ^= (int)l1;
                    b2 = false;
                    Test0071.instanceCount += (long) d2;
                }
                i1 -= i12;
                i2 = s2;
                Test0071.instanceCount = i1;
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d1) + l1 + i10 + i11 + i12 +
            Double.doubleToLongBits(d2) + (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i) {

        float f2=91.1006F;
        int i13=11;
        int i14=172;
        int i15=-14;
        int i16=5369;
        int i17=-14;
        int[][] iArr2 =new int[N][N];
        short s3=29987;
        double d3=-5.93931;

        FuzzerUtils.init(iArr2, -8);

        Test0071.instanceCount *= (iMeth1(i, f2, i) - i);
        i13 = 248;
        do {
            s3 = (short)i;
        } while ((i13 -= 3) > 0);
        Test0071.instanceCount += (long) d3;
        i -= i;
        i += i13;
        for (i14 = 11; i14 < 196; ++i14) {
            f2 += i14;
            i += (i14 * i14);
            if (i13 != 0) {
            }
            for (i16 = 1; i16 < 9; ++i16) {
                i15 -= i;
                iArr2[i14][i16] = i16;
                i17 += i16;
                Test0071.instanceCount = i16;
            }
        }
        long meth_res = i + Float.floatToIntBits(f2) + i13 + s3 + Double.doubleToLongBits(d3) + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b=true;
        int i18=-1, i19=13439, i20=-13, i21=-54420, i22=0, i23=1, i24=-7, i25=28457;
        double d4=-39.18203;
        float f3=-2.967F;
        long l2=-13L;
        long[] lArr1 =new long[N];
        byte by1=-3;
        short s4=22430;

        FuzzerUtils.init(lArr1, 10L);

        b = true;
        iMeth(iFld);
        for (i18 = 8; 155 > i18; i18++) {
            i20 = 1;
            while (++i20 < 171) {
                iFld *= iFld;
                iFld ^= iFld;
                i19 -= 39004;
                Test0071.instanceCount += -5620;
                i19 <<= i20;
                d4 *= f3;
                for (l2 = 1; l2 < 1; l2++) {
                    d4 -= f3;
                }
                Test0071.instanceCount *= iFld;
            }
            iFld += i18;
            by1 = (byte)2122337186L;
            iFld -= (int)l2;
            i19 = (int) Test0071.instanceCount;
            i19 += (((i18 * iFld) + Test0071.instanceCount) - s4);
            for (i22 = i18; i22 < 171; i22++) {
                f3 += (i22 - f3);
                lArr1[i18 + 1] = i21;
                for (i24 = 1; i24 > 1; i24 -= 3) {
                    switch (((i18 % 2) * 5) + 104) {
                    case 108:
                        iArrFld[i22 + 1] |= (int)10L;
                        iFld = (int)-1.977F;
                        iArrFld[i18] -= -12;
                        i25 += i19;
                        break;
                    case 110:
                        i23 = i22;
                        iArrFld = iArrFld;
                        iArrFld[i22] += (int)-7478285415513938318L;
                        break;
                    default:
                        d4 /= 11968;
                    }
                }
            }
        }

        FuzzerUtils.out.println("b i18 i19 = " + (b ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 d4 f3 = " + i20 + "," + Double.doubleToLongBits(d4) + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("l2 i21 by1 = " + l2 + "," + i21 + "," + by1);
        FuzzerUtils.out.println("s4 i22 i23 = " + s4 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 lArr1 = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0071.instanceCount iFld iArrFld = " + Test0071.instanceCount + "," + iFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0071 _instance = new Test0071();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
