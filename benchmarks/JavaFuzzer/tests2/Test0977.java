// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0977 {

    public static final int N = 400;

    public static long instanceCount=-48982L;
    public int iFld=-7;
    public float fFld=37.769F;
    public static short sFld=-17061;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0977.iArrFld, -15);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth1(int i5) {

        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 1330328372158922506L);

        i5 += (int)((--i5) + lArr[(i5 >>> 1) % N]);
        vMeth1_check_sum += i5 + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(int i6) {

        double d=-2.3536;
        int i7=136;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 2.742F);

        for (d = 8; d < 184; d += 3) {
            float f=43.628F;
            Test0977.iArrFld[(int) (d)] -= (int) (i7 % (((long) (f * (i7 + 52553))) | 1));
            vMeth1(180);
            i6 = i7;
            Test0977.iArrFld[(int) (d)] = i7;
            f += Test0977.instanceCount;
            fArr[(int)(d + 1)] *= i7;
            Test0977.iArrFld[(int) (d - 1)] ^= i7;
        }
        long meth_res = i6 + Double.doubleToLongBits(d) + i7 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i3=97, i4=-14, i8=15197, i9=208, i10=132, i11=0;
        long l=-8753492584558428797L;
        boolean b=false;
        byte by=2;

        for (i3 = 5; i3 < 379; i3++) {
            vMeth1((int) ((++Test0977.iArrFld[i3]) << lMeth(i3)));
            l &= i4;
            iFld += (-223 + (i3 * i3));
            switch ((((-4 >>> 1) % 1) * 5) + 42) {
            case 46:
                iFld -= i4;
                if (false) continue;
                iFld = i3;
                b = b;
                break;
            default:
                for (i8 = 1; i8 < 5; ++i8) {
                    i9 = 233;
                    i9 *= -4;
                    for (i10 = 1; i10 < 2; i10++) {
                        i11 *= by;
                    }
                    by = (byte) Test0977.instanceCount;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + l + (b ? 1 : 0) + i8 + i9 + i10 + i11 + by;
    }

    public void mainTest(String[] strArr1) {

        int i=249, i1=-54486, i2=-46580, i12=-54096, i13=0, i14=0, i15=-3, i16=-3;
        boolean b1=true;
        double d1=34.24281, d2=-88.3763;

        Test0977.instanceCount = (i++);
        for (i1 = 5; i1 < 311; i1++) {
            vMeth();
            iFld += (-4994 + (i1 * i1));
            Test0977.iArrFld[i1] = i1;
        }
        for (i12 = 161; 5 < i12; i12--) {
            if (false) {
                fFld = -8346L;
                if (b1) break;
                for (i14 = 4; 161 > i14; i14++) {
                    Test0977.sFld += (short) (((i14 * i1) + fFld) - fFld);
                    d1 *= fFld;
                    i = i12;
                    d1 *= Test0977.instanceCount;
                    b1 = false;
                }
                i15 = -8;
            } else {
                i15 *= (int)-993935202L;
            }
            Test0977.instanceCount /= (i12 | 1);
            for (d2 = 7; d2 < 161; d2++) {
                Test0977.instanceCount *= Test0977.instanceCount;
                i15 = (int)-1.730F;
                iFld = i;
                b1 = true;
                Test0977.instanceCount *= (long) d1;
            }
            i13 -= (int)-25565L;
            i15 += i12;
            Test0977.instanceCount <<= i13;
            try {
                i16 = (56360 / i12);
                Test0977.iArrFld[i12] = (-73 % i);
                i16 = (i12 % i1);
            } catch (ArithmeticException a_e) {}
        }
        Test0977.iArrFld = Test0977.iArrFld;
        fFld = i1;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i12 i13 b1 = " + i12 + "," + i13 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i14 i15 d1 = " + i14 + "," + i15 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("d2 i16 = " + Double.doubleToLongBits(d2) + "," + i16);

        FuzzerUtils.out.println("Test0977.instanceCount iFld fFld = " + Test0977.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0977.sFld Test0977.iArrFld = " + Test0977.sFld + "," + FuzzerUtils.checkSum(Test0977.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0977 _instance = new Test0977();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
