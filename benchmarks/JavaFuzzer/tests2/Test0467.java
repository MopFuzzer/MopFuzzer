// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0467 {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static short sFld=6977;
    public static int iFld=-52869;
    public static byte byFld=-119;
    public volatile float fFld=-53.636F;
    public volatile short[][] sArrFld =new short[N][N];

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, long l2) {

        int i8=13;
        int i9=42429;
        int i10=3;
        int i11=186;
        int[] iArr1 =new int[N];
        double d1=-127.123375;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 2.618F);
        FuzzerUtils.init(iArr1, -14);

        i8 = 1;
        while (++i8 < 271) {
            Test0467.iFld = i8;
            fArr[i8 + 1] -= Test0467.iFld;
            Test0467.iFld -= (int) d1;
            i9 = 1;
            do {
                l1 >>>= Test0467.instanceCount;
                Test0467.iFld = (int) l2;
                Test0467.iFld += (((i9 * Test0467.instanceCount) + Test0467.iFld) - Test0467.iFld);
                for (i10 = 1; i10 < 1; ++i10) {
                    Test0467.iFld += (int) (-126.0F + (i10 * i10));
                    Test0467.iFld -= Test0467.iFld;
                }
                fArr = fArr;
            } while (++i9 < 6);
        }
        iArr1[(i11 >>> 1) % N] = i8;
        iArr1 = iArr1;
        i11 -= i11;
        long meth_res = l1 + l2 + i8 + Double.doubleToLongBits(d1) + i9 + i10 + i11 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(boolean b, int i3) {

        int i4=76;
        int i5=-178;
        int i6=7;
        int i7=1;
        int[] iArr =new int[N];
        float f=-22.846F, f1=1.961F;
        double d=-1.44333;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, -3407159454L);
        FuzzerUtils.init(iArr, 2);

        i3 -= (int)lArr[(i3 >>> 1) % N][(i3 >>> 1) % N];
        for (i4 = 8; i4 < 311; i4++) {
            byte by1=17;
            i5 += (((i4 * i3) + by1) - by1);
            f = 1;
            while (++f < 5) {
                i3 = (int) (i3 = (int) ((++Test0467.instanceCount) * f));
                for (i6 = 1; 1 < i6; i6 -= 3) {
                    iArr[i4] <<= 42;
                    iArr[i6] = (int) ((Test0467.instanceCount - (33257 - (i3 >> i5))) - iArr[(int) (f + 1)]);
                    switch (((i4 % 2) * 5) + 81) {
                    case 90:
                        Test0467.sFld += (short) (by1 / (((long) (++f1)) | 1));
                        d = (Test0467.instanceCount * ((Test0467.sFld - i6) - (lArr[i6 - 1][(int) (f - 1)] <<= i3)));
                        i7 ^= i5;
                        i7 = (--i7);
                    case 82:
                        lArr[i6][i6 + 1] &= Test0467.instanceCount;
                        i3 *= iMeth(Test0467.instanceCount, Test0467.instanceCount);
                        break;
                    default:
                        lArr[i6][(int)(f)] = i4;
                    }
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(long l) {

        int i1=223;
        int i2=-100;
        int i12=-57;
        int i13=13;
        int i14=-8816;
        int i15=25;
        int i16=-248;
        int i17=-229;
        int i18=48;
        int i19=0;
        int[] iArr2 =new int[N];
        boolean b1=true;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -3370L);
        FuzzerUtils.init(iArr2, 40438);

        for (i1 = 7; i1 < 319; i1++) {
            vMeth(b1, i2);
        }
        lArr1[(Test0467.iFld >>> 1) % N] = Test0467.instanceCount;
        for (i12 = 5; i12 < 123; i12++) {
            i13 = (int) Test0467.instanceCount;
            iArr2 = FuzzerUtils.int1array(N, (int)-1);
            i14 = (int)l;
            for (i15 = 1; i15 < 13; ++i15) {
                lArr1[i15 - 1] += 464;
                iArr2[i15 + 1] += -7999;
                lArr1 = FuzzerUtils.long1array(N, (long)11L);
            }
            for (i17 = 1; 13 > i17; i17++) {
                float f2=21.364F;
                i19 *= 34161;
                b1 = b1;
                f2 += Test0467.sFld;
            }
        }
        long meth_res = l + i1 + i2 + (b1 ? 1 : 0) + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-323;
        int i20=-168;
        int i21=9;
        int i22=31;
        int i23=5;
        int i24=-129;
        int i25=65253;
        int[] iArr3 =new int[N];
        byte by=-36;
        double d2=0.105869;
        short s=-25555;
        boolean b2=true;
        long[] lArr2 =new long[N];
        float[][] fArr1 =new float[N][N];

        FuzzerUtils.init(iArr3, 8397);
        FuzzerUtils.init(lArr2, 5099724871985872994L);
        FuzzerUtils.init(fArr1, -106.373F);

        i += (int) ((by + fMeth(Test0467.instanceCount)) + -12);
        i += by;
        for (i20 = 3; i20 < 214; ++i20) {
            for (i22 = 119; i22 > 1; i22--) {
                i += (i22 - Test0467.instanceCount);
                for (i24 = 1; i24 < 2; ++i24) {
                    d2 -= s;
                    sArrFld[i20][i24] -= (short)i21;
                    switch ((i20 % 5) + 94) {
                    case 94:
                        i23 = Test0467.iFld;
                        iArr3[i24] += (int) Test0467.instanceCount;
                        if (b2) {
                            i23 += (((i24 * i22) + i20) - i23);
                            lArr2[i24 + 1] <<= i20;
                        } else if (b2) {
                            lArr2[i22 + 1] = 13;
                            i21 ^= i24;
                            iArr3[i22 - 1] >>= Test0467.byFld;
                        } else if (b2) {
                            fFld += (float)d2;
                        } else {
                            i23 >>= i22;
                            fArr1 = fArr1;
                            fFld = -9;
                            if (b2) break;
                        }
                        iArr3[i24 + 1] += 14;
                    case 95:
                        iArr3[i24 + 1] >>= 2;
                        i21 += i24;
                    case 96:
                    case 97:
                        Test0467.instanceCount += (i24 | Test0467.iFld);
                        d2 = Test0467.instanceCount;
                        d2 += i20;
                        Test0467.instanceCount = Test0467.instanceCount;
                    case 98:
                        if (false) continue;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i by i20 = " + i + "," + by + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 d2 = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("s b2 iArr3 = " + s + "," + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("lArr2 fArr1 = " + FuzzerUtils.checkSum(lArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0467.instanceCount Test0467.sFld Test0467.iFld = " + Test0467.instanceCount + "," + Test0467.sFld +
                "," + Test0467.iFld);
        FuzzerUtils.out.println("Test0467.byFld fFld sArrFld = " + Test0467.byFld + "," + Float.floatToIntBits(fFld) + "," +
            FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0467 _instance = new Test0467();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
