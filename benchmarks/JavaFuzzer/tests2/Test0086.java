// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0086 {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static short sFld=-29897;
    public static float fFld=0.927F;
    public static double dFld=-112.25054;
    public static byte byFld=-40;
    public static long[] lArrFld =new long[N];
    public short[][] sArrFld =new short[N][N];

    static {
        FuzzerUtils.init(Test0086.lArrFld, 61873L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static void vSmallMeth() {

        int i2=141;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -67L);

        lArr[(i2 >>> 1) % N] += i2;
        vSmallMeth_check_sum += i2 + FuzzerUtils.checkSum(lArr);
    }

    public static short sMeth() {

        int i5=-24699;
        int i6=-228;
        int i7=-59403;
        int i8=22002;
        int i9=-95;
        int i10=-169;
        int[] iArr1 =new int[N];
        boolean b=false;
        float[] fArr =new float[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr1, -35672);
        FuzzerUtils.init(fArr, 0.576F);
        FuzzerUtils.init(dArr, 0.4458);

        for (i5 = 4; i5 < 230; i5++) {
            Test0086.instanceCount += i5;
        }
        i7 = 1;
        while (++i7 < 257) {
            Test0086.fFld -= Test0086.fFld;
            i6 &= 67;
            for (i8 = 1; i8 < 6; ++i8) {
                byte by=60;
                iArr1[i8] += -7682;
                fArr[i7] -= i9;
                dArr[i7 + 1] += i9;
                by = (byte) Test0086.fFld;
                i10 = 1;
                do {
                    i9 += i10;
                    b = b;
                    i9 = i10;
                } while (++i10 < 2);
                i9 -= (int)-2L;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth() {

        int i4=-33165;
        int i11=3438;
        int i12=-13;
        int i13=233;
        int i14=-128;
        int[] iArr =new int[N];
        long l=-6243536722086470868L;

        FuzzerUtils.init(iArr, -37);

        i4 -= i4;
        l = 1;
        do {
            iArr[(int) (l)] += (Test0086.sFld + (16290 + (i4--)));
            iArr[(int) (l)] <<= (int) (Test0086.instanceCount++);
            if (sMeth() > i4) break;
            for (i11 = 1; i11 < 5; ++i11) {
                Test0086.instanceCount = i11;
                Test0086.instanceCount *= i4;
                iArr[i11 + 1] = i12;
                for (i13 = 1; 2 > i13; i13++) {
                    iArr[i13 + 1] -= -158;
                }
                iArr[(int)(l - 1)] *= i11;
            }
            i12 *= i14;
            Test0086.instanceCount += i4;
            i12 = i14;
        } while (++l < 368);
        long meth_res = i4 + l + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, short s) {

        int i15=-3995, i16=-12, i17=53982, i18=8708, i19=13, i20=-168;

        i3 = (Math.min(Integer.reverseBytes(i3), iMeth()) * Test0086.sFld);
        for (i15 = 9; 163 > i15; ++i15) {
            for (i17 = i15; i17 < 10; i17++) {
                Test0086.instanceCount -= i17;
                for (i19 = 1; i19 < 1; i19++) {
                    i3 *= i20;
                    i3 += (((i19 * i15) + i15) - Test0086.fFld);
                    i16 -= i15;
                    i20 += (((i19 * i16) + i17) - i3);
                    Test0086.sFld >>= (short) i19;
                    i16 += 203;
                    i20 = i17;
                    Test0086.dFld = i3;
                    Test0086.fFld *= i3;
                    i18 = (int) Test0086.fFld;
                }
            }
        }
        vMeth_check_sum += i3 + s + i15 + i16 + i17 + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i=0;
        int i1=10;
        int i21=-27798;
        int i22=-9007;
        int i23=40;
        int i24=-39475;
        int i25=112;
        int i26=0;
        int i27=-105;
        int i28=-14;
        int[][] iArr2 =new
                    int[N][N];
        long l1=64238L;
        double d=-109.48527;

        FuzzerUtils.init(iArr2, 38139);

        for (i = 14; 347 > i; i += 3) {
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth();
            vMeth(i1, Test0086.sFld);
            i1 = (int) Test0086.instanceCount;
        }
        i1 -= i1;
        iArr2 = iArr2;
        for (l1 = 4; l1 < 215; l1++) {
            Test0086.lArrFld[(int) (l1 + 1)] %= -8;
        }
        i1 = (int) Test0086.dFld;
        for (i22 = 3; 343 > i22; ++i22) {
            Test0086.byFld = (byte) i22;
            for (d = 4; 74 > d; d++) {
                i25 = 1;
                do {
                    i21 <<= i25;
                    Test0086.sFld += (short) i23;
                    iArr2[i25][(int)(d)] -= i21;
                    Test0086.instanceCount >>= i;
                    Test0086.instanceCount += (7 + (i25 * i25));
                    Test0086.sFld >>= (short) 113;
                } while (++i25 < 2);
                i24 += (int)(d + i21);
                Test0086.fFld *= Test0086.fFld;
            }
            for (i26 = 4; i26 < 74; i26++) {
                i21 -= i28;
                Test0086.dFld = -8;
                iArr2[i22 - 1][i22] = i1;
                Test0086.instanceCount += i;
                i24 += (int) Test0086.fFld;
                sArrFld[i26] = sArrFld[i26];
                i24 += (i26 * i26);
            }
            i21 += (((i22 * l1) + i23) - i1);
        }

        FuzzerUtils.out.println("i i1 l1 = " + i + "," + i1 + "," + l1);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d i24 i25 = " + Double.doubleToLongBits(d) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0086.instanceCount Test0086.sFld Test0086.fFld = " + Test0086.instanceCount + "," + Test0086.sFld +
                "," + Float.floatToIntBits(Test0086.fFld));
        FuzzerUtils.out.println("Test0086.dFld Test0086.byFld Test0086.lArrFld = " + Double.doubleToLongBits(Test0086.dFld) + "," +
                Test0086.byFld + "," + FuzzerUtils.checkSum(Test0086.lArrFld));
        FuzzerUtils.out.println("sArrFld = " + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0086 _instance = new Test0086();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
