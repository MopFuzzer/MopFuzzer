// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0374 {

    public static final int N = 400;

    public static volatile long instanceCount=-47833L;
    public static byte byFld=33;
    public static double dFld=-1.7649;
    public static short sFld=-19015;
    public static volatile int iFld=-205;
    public static int iFld1=6955;
    public int iFld2=64756;
    public static int iFld3=13;
    public int iFld4=80;
    public float fFld=-88.6F;
    public static int[][] iArrFld =new int[N][N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0374.iArrFld, -16134);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static float fMeth(long l) {

        int i3=-123;
        int[] iArr =new int[N];
        double d1=-119.30411;

        FuzzerUtils.init(iArr, -68);

        iArr[(36819 >>> 1) % N] = -97;
        Test0374.instanceCount = (i3--);
        l += Math.max((int) (Math.abs(i3) - (Test0374.instanceCount - d1)), (-(-60 * i3)) - i3);
        long meth_res = l + i3 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth2() {

        int i6=3359, i7=26, i8=-22619, i9=1, i10=78, i11=16695;
        float f2=19.395F;
        long l1=-167L, l2=-4759500926008909306L;
        boolean b=true;

        for (i6 = 6; 324 > i6; i6++) {
            i8 = 1;
            do {
                i7 >>= -150;
                for (i9 = 1; 3 > i9; ++i9) {
                    Test0374.iArrFld[i9 - 1][i6 + 1] -= Test0374.byFld;
                    f2 += i6;
                }
                l1 <<= Test0374.sFld;
                for (l2 = 1; l2 < 3; l2 += 3) {
                    Test0374.iArrFld[i6 - 1][i6] /= (int) (Test0374.sFld | 1);
                    Test0374.sFld -= (short) 1903446972L;
                    if (b) {
                        if (b) continue;
                        Test0374.sFld = (short) i11;
                    } else {
                        f2 += (float) Test0374.dFld;
                        f2 += (l2 * l2);
                    }
                }
            } while ((i8 += 2) < 5);
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f2) + l1 + l2 + i11 + (b ? 1 : 0);
    }

    public static void vMeth1(float f1, int i5, short s) {

        int i12=-11, i13=-214, i14=25096, i15=221, i16=226;
        double d2=1.9685;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -57583L);

        vMeth2();
        for (i12 = 7; i12 < 180; ++i12) {
            f1 += (((i12 * i5) + f1) - i5);
            Test0374.iArrFld[i12 - 1][i12] <<= i12;
            for (d2 = 1; d2 < 9; ++d2) {
                i5 += (int)(d2 * d2);
                Test0374.iArrFld[i12][i12 + 1] = -62589;
                Test0374.iArrFld[(int) (d2 + 1)] = Test0374.iArrFld[(int) (d2 + 1)];
                for (i15 = i12; i15 < 2; ++i15) {
                    Test0374.instanceCount = -77;
                    i14 = i15;
                    lArr[i15] += i13;
                    Test0374.instanceCount += (((i15 * f1) + i13) - Test0374.iFld);
                    i16 = 62730;
                    i13 *= i12;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i5 + s + i12 + i13 + Double.doubleToLongBits(d2) + i14 + i15 +
            i16 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i4=-13;
        int i18=13;
        int i19=-39988;
        int i20=0;
        int[] iArr1 =new int[N];
        float f=0.493F;
        double d3=2.85387;
        double[] dArr =new double[N];
        long l3=-152L;

        FuzzerUtils.init(dArr, 25.82460);
        FuzzerUtils.init(iArr1, 16030);

        Test0374.byFld = (byte) fMeth((long) ((i4++) + (Test0374.dFld + -4L)));
        Test0374.iArrFld[(-7793 >>> 1) % N][(i4 >>> 1) % N] *= (int) (((i4 % ((long) (f) | 1)) * (i4 - i4)) * Test0374.dFld);
        i4 -= i4;
        vMeth1(f, -62820, Test0374.sFld);
        dArr[(i4 >>> 1) % N] = Test0374.dFld;
        for (int i17 : iArr1) {
            iArr1[(i4 >>> 1) % N] = -26914;
            switch ((((i4 >>> 1) % 3) * 5) + 103) {
            case 117:
                Test0374.dFld *= Test0374.instanceCount;
                try {
                    i4 = (i17 / 1318929609);
                    i4 = (-59801 / i17);
                    Test0374.iFld = (Test0374.iArrFld[(Test0374.iFld1 >>> 1) % N][(i17 >>> 1) % N] % i17);
                } catch (ArithmeticException a_e) {}
                for (i18 = 1; i18 < 4; ++i18) {
                    for (d3 = 2; i18 < d3; --d3) {
                        l3 *= i4;
                        i20 += Test0374.byFld;
                        i4 -= i20;
                    }
                }
                break;
            case 105:
                i4 -= 0;
            case 107:
                Test0374.dFld += l3;
                break;
            }
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f) + i18 + i19 + Double.doubleToLongBits(d3) + i20 + l3 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=-107.21270;
        int i=-58674, i1=180, i2=8, i21=-26, i22=-8, i23=-24384;

        for (d = 8; d < 134; d++) {
            for (i1 = 199; i1 > d; i1--) {
                Test0374.instanceCount += (i1 * i1);
            }
            i2 = (int) ((Test0374.instanceCount++) - Math.max(i++, i--));
        }
        vMeth();
        Test0374.iFld -= 761;
        Test0374.iArrFld[(i2 >>> 1) % N] = Test0374.iArrFld[(Test0374.iFld >>> 1) % N];
        for (i21 = 17; i21 < 309; i21 += 2) {
            i23 = 1;
            while (++i23 < 172) {
                i22 >>= i2;
                switch (((i2 >>> 1) % 7) + 10) {
                case 10:
                    iFld2 += (i23 + Test0374.instanceCount);
                    Test0374.dFld = Test0374.iFld3;
                    Test0374.instanceCount += i23;
                    break;
                case 11:
                    switch (((i2 >>> 1) % 2) + 117) {
                    case 117:
                        fArrFld[i23 + 1] += iFld4;
                        Test0374.instanceCount += i23;
                        Test0374.instanceCount -= iFld2;
                        fFld *= 13;
                        break;
                    case 118:
                        iFld2 <<= i1;
                        i22 = i21;
                        fFld += i23;
                        Test0374.dFld *= i2;
                        break;
                    }
                case 12:
                    iFld2 += i23;
                    i -= (int) Test0374.dFld;
                    break;
                case 13:
                    i += i22;
                case 14:
                    iFld4 |= -129;
                    Test0374.instanceCount = Test0374.iFld1;
                    break;
                case 15:
                    i22 %= -51962;
                case 16:
                    fArrFld[i23 - 1] -= iFld4;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i21 i22 = " + i2 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 = " + i23);

        FuzzerUtils.out.println("Test0374.instanceCount Test0374.byFld Test0374.dFld = " + Test0374.instanceCount + "," + Test0374.byFld +
                "," + Double.doubleToLongBits(Test0374.dFld));
        FuzzerUtils.out.println("Test0374.sFld Test0374.iFld Test0374.iFld1 = " + Test0374.sFld + "," + Test0374.iFld + "," + Test0374.iFld1);
        FuzzerUtils.out.println("iFld2 Test0374.iFld3 iFld4 = " + iFld2 + "," + Test0374.iFld3 + "," + iFld4);
        FuzzerUtils.out.println("fFld Test0374.iArrFld fArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0374.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0374 _instance = new Test0374();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
