// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0437 {

    public static final int N = 400;

    public static long instanceCount=8265173350682422931L;
    public static double dFld=0.31736;
    public static volatile boolean bFld=false;
    public static volatile int[] iArrFld =new int[N];
    public static int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0437.iArrFld, 0);
        FuzzerUtils.init(Test0437.iArrFld1, -66);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6) {

        float f1=0.898F;
        short s=7786;
        int i7=108, i8=-160, i9=149, i10=18419;

        f1 = s;
        i7 = 1;
        while (++i7 < 213) {
            f1 -= (float) Test0437.dFld;
            if (true) continue;
            for (i8 = i7; 8 > i8; ++i8) {
                switch ((i8 % 6) + 50) {
                case 50:
                case 51:
                    f1 = i6;
                    break;
                case 52:
                    i5 += -3;
                    switch (((i8 % 2) * 5) + 88) {
                    case 98:
                        i6 = i8;
                        Test0437.bFld = false;
                    case 90:
                        i10 = 1;
                        while (++i10 < 1) {
                            i9 += (int)f1;
                            try {
                                i6 = (-76 % i6);
                                i6 = (i10 % i8);
                                i9 = (i6 % -205);
                            } catch (ArithmeticException a_e) {}
                            Test0437.instanceCount = i7;
                        }
                        break;
                    }
                    break;
                case 53:
                    if (i7 != 0) {
                        vMeth2_check_sum += i5 + i6 + Float.floatToIntBits(f1) + s + i7 + i8 + i9 + i10;
                        return;
                    }
                    break;
                case 54:
                    Test0437.instanceCount += (((i8 * i7) + i10) - i8);
                case 55:
                    s >>= (short)1;
                    break;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + Float.floatToIntBits(f1) + s + i7 + i8 + i9 + i10;
    }

    public static void vMeth1(long l, double d) {

        int i4=6, i11=13, i12=101, i13=-4, i14=6;
        byte by=121;

        Test0437.iArrFld[(i4 >>> 1) % N] = (Test0437.iArrFld[(i4 >>> 1) % N]++);
        by <<= by;
        vMeth2(i4, i4);
        i4 = i4;
        for (i11 = 1; i11 < 175; ++i11) {
            i12 = i11;
            try {
                i4 = (-452852346 % i12);
                i12 = (46582 % Test0437.iArrFld1[i11 + 1]);
                i4 = (i4 / i12);
            } catch (ArithmeticException a_e) {}
            i4 += 54168;
            Test0437.iArrFld1[i11] += i11;
            Test0437.dFld -= i4;
        }
        Test0437.iArrFld[(i11 >>> 1) % N] -= i4;
        i12 -= (int)-242L;
        for (i13 = 9; 338 > i13; ++i13) {
            l <<= -25232;
            l = Test0437.instanceCount;
        }
        vMeth1_check_sum += l + Double.doubleToLongBits(d) + i4 + by + i11 + i12 + i13 + i14;
    }

    public static void vMeth(int i2, boolean b) {

        int i15=11, i16=3, i17=36164, i18=8895, i19=34680, i20=-7, i21=8, i22=-159;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, 3L);

        i2 += Test0437.iArrFld[(246 >>> 1) % N];
        for (int i3 : Test0437.iArrFld) {
            vMeth1(Test0437.instanceCount, 126.64500);
            for (i15 = 1; i15 < 4; i15++) {
                i3 -= (int)-3607293227870026704L;
            }
            bArr[(i16 >>> 1) % N] = true;
            for (i17 = 1; i17 < 4; i17++) {
                if (b) continue;
                for (i19 = 1; i19 < 2; i19++) {
                    b = Test0437.bFld;
                }
                lArr = FuzzerUtils.long1array(N, (long)-156L);
            }
            for (i21 = 1; i21 < 4; ++i21) {
                i20 += (i21 + i18);
                Test0437.instanceCount <<= -12;
                i22 = i18;
            }
        }
        vMeth_check_sum += i2 + (b ? 1 : 0) + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=39, i1=35, i23=6, i24=-6325, i25=41668, i26=44, i27=7, i28=18976;
        float f=89.688F;
        long l1=-4L;
        byte by1=101;

        for (i = 241; i > 6; i--) {
            i1 += (i1++);
            i1 = (int) Test0437.dFld;
            switch ((i % 3) + 121) {
            case 121:
                f += (i * i);
                break;
            case 122:
                i1 *= (int)(f - (++f));
                f += i;
                break;
            case 123:
                vMeth(i1, Test0437.bFld);
                switch ((i % 2) + 64) {
                case 64:
                    i1 += (61334 + (i * i));
                    break;
                case 65:
                    l1 += (128 + (i * i));
                    if (Test0437.bFld) continue;
                    for (i23 = 2; i23 < 107; i23++) {
                        i24 -= i1;
                        f -= i24;
                        switch (((i % 7) * 5) + 124) {
                        case 139:
                            i24 = by1;
                            i1 >>>= i23;
                            break;
                        case 153:
                            l1 = (long)-1.137F;
                            break;
                        case 137:
                            for (i25 = 1; i25 < 2; i25++) {
                                i24 = i23;
                                i26 = 7;
                                i26 = i1;
                                Test0437.instanceCount = i24;
                            }
                            for (i27 = 2; i27 > 1; i27 -= 2) {
                                Test0437.iArrFld[i23] += (int) l1;
                            }
                            break;
                        case 136:
                            Test0437.iArrFld1[i23 - 1] = i23;
                            Test0437.instanceCount -= l1;
                            i28 += 8174;
                            break;
                        case 135:
                            i24 &= i;
                            break;
                        case 126:
                            if (Test0437.bFld) continue;
                            break;
                        case 151:
                            i28 = i26;
                        }
                    }
                }
                break;
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("l1 i23 i24 = " + l1 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("by1 i25 i26 = " + by1 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 = " + i27 + "," + i28);

        FuzzerUtils.out.println("Test0437.instanceCount Test0437.dFld Test0437.bFld = " + Test0437.instanceCount + "," +
                Double.doubleToLongBits(Test0437.dFld) + "," + (Test0437.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0437.iArrFld Test0437.iArrFld1 = " + FuzzerUtils.checkSum(Test0437.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0437.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0437 _instance = new Test0437();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
