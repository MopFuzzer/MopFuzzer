// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:27 2023
public class Test0324 {

    public static final int N = 400;

    public static long instanceCount=36430L;
    public static int iFld=35034;
    public static volatile float fFld=0.60F;
    public static int iFld1=-22877;
    public static double dFld=60.44383;
    public static boolean bFld=false;
    public byte[] byArrFld =new byte[N];
    public long[] lArrFld =new long[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l) {

        double d=1.51321;
        byte by=-50;
        int i6=-6;
        int i7=-4;
        int[] iArr =new int[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 2080);
        FuzzerUtils.init(lArr, -5653L);

        iArr = iArr;
        Test0324.iFld += Test0324.iFld;
        lArr = lArr;
        d = 1;
        do {
            Test0324.iFld <<= (int) Test0324.instanceCount;
            Test0324.iFld = by;
            Test0324.iFld = (int) Test0324.instanceCount;
            try {
                Test0324.iFld = (Test0324.iFld % 8749);
                Test0324.iFld = (Test0324.iFld % iArr[(int) (d - 1)]);
                Test0324.iFld = (Test0324.iFld / 230);
            } catch (ArithmeticException a_e) {}
            for (i6 = 1; i6 < 5; ++i6) {
                if (i7 != 0) {
                }
                i7 = -11606;
                Test0324.instanceCount -= (long) Test0324.fFld;
            }
        } while (++d < 366);
        long meth_res = l + Double.doubleToLongBits(d) + by + i6 + i7 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i8=-47679;
        int i9=-22197;
        int i10=-4;
        int i11=50383;
        int i12=-11;
        int i13=-41178;
        int i14=0;
        int i15=-3616;
        int[] iArr1 =new int[N];
        short s=24471;
        long l1=846439985L;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 66.913F);
        FuzzerUtils.init(iArr1, -222);

        iMeth1(Test0324.instanceCount);
        for (i8 = 12; i8 < 279; ++i8) {
            fArr[i8] += -2;
            for (i10 = 1; 6 > i10; i10++) {
                Test0324.instanceCount *= Test0324.instanceCount;
            }
            for (i12 = 1; i12 < 6; i12++) {
                Test0324.instanceCount |= Test0324.instanceCount;
                for (i14 = i12; i14 < 2; i14++) {
                    i15 <<= s;
                    i13 = (int)-4597535126479124899L;
                }
                iArr1[i8] += i11;
                Test0324.iFld = Test0324.iFld;
                i15 += (((i12 * Test0324.iFld) + Test0324.instanceCount) - i13);
                iArr1[i8] = (int)l1;
            }
            iArr1 = iArr1;
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + s + l1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        int i4=133;
        int i5=153;
        int i16=64291;
        int i17=4;
        int[] iArr2 =new int[N];
        boolean b=false;
        boolean b1=true;
        boolean[][] bArr =new boolean[N][N];
        short s1=16765;
        byte by1=122;

        FuzzerUtils.init(iArr2, -164);
        FuzzerUtils.init(bArr, true);

        for (i4 = 18; i4 < 364; ++i4) {
            if (b) break;
            switch (((iMeth() >>> 1) % 5) + 112) {
            case 112:
                Test0324.iFld1 += s1;
                i5 += i5;
                by1 *= (byte) Test0324.iFld1;
            case 113:
                i3 *= -92;
                by1 += (byte)i3;
                for (i16 = 1; i16 < 5; i16++) {
                    Test0324.dFld -= Test0324.instanceCount;
                    b = b1;
                    i5 += (-11 + (i16 * i16));
                    i3 %= (int)32410L;
                    Test0324.instanceCount += (i16 - i3);
                }
                break;
            case 114:
                iArr2[i4] = (int) Test0324.instanceCount;
            case 115:
                bArr[i4 + 1][i4 - 1] = false;
                break;
            case 116:
                i5 ^= 41717;
            default:
                i3 += i4;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + (b ? 1 : 0) + s1 + by1 + i16 + i17 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i=236;
        int i1=2;
        int i18=4;
        int i19=-26;
        int i20=4;
        int i21=-226;
        int i22=62041;
        int i23=53422;
        int[] iArr3 =new int[N];
        float f=-2.993F;
        float[] fArr1 =new float[N];
        double d1=1.49825;

        FuzzerUtils.init(fArr1, 0.842F);
        FuzzerUtils.init(iArr3, 76);

        for (i = 4; i < 228; ++i) {
            vMeth(-16, Test0324.iFld);
            for (i18 = 4; i18 < 112; i18++) {
                i1 *= Test0324.iFld;
                Test0324.bFld = Test0324.bFld;
                Test0324.fFld += (i18 + i19);
                Test0324.instanceCount += i18;
                Test0324.iFld *= (int) f;
            }
            for (i20 = 1; i20 < 112; ++i20) {
                Test0324.iFld1 <<= (int) Test0324.instanceCount;
                i19 *= Test0324.iFld1;
                byArrFld[i] -= (byte)i21;
                Test0324.fFld += i20;
                i19 = (int) Test0324.dFld;
                Test0324.iFld1 += (i20 - i20);
            }
            fArr1[i - 1] *= f;
            Test0324.iFld1 &= i18;
            lArrFld = lArrFld;
            Test0324.iFld1 -= (int) Test0324.dFld;
        }
        if (Test0324.bFld) {
            i22 = 1;
            do {
                iArr3[i22] = i20;
                Test0324.iFld1 *= i19;
                if (Test0324.bFld) continue;
                switch ((i22 % 2) + 102) {
                case 102:
                    for (d1 = 3; d1 < 78; ++d1) {
                        i23 += (int) Test0324.instanceCount;
                        i19 <<= i22;
                        Test0324.iFld = (int) Test0324.instanceCount;
                        i1 = (int) Test0324.instanceCount;
                    }
                case 103:
                    iArr3[i22 + 1] += (int)1.573F;
                    break;
                }
            } while (++i22 < 321);
        } else if (Test0324.bFld) {
            lArrFld[(i18 >>> 1) % N] += 5;
        } else if (Test0324.bFld) {
            Test0324.fFld *= 2;
        } else {
            i1 *= i23;
        }

        FuzzerUtils.out.println("i i1 i18 = " + i + "," + i1 + "," + i18);
        FuzzerUtils.out.println("i19 f i20 = " + i19 + "," + Float.floatToIntBits(f) + "," + i20);
        FuzzerUtils.out.println("i21 i22 d1 = " + i21 + "," + i22 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i23 fArr1 iArr3 = " + i23 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))
            + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0324.instanceCount Test0324.iFld Test0324.fFld = " + Test0324.instanceCount + "," + Test0324.iFld +
                "," + Float.floatToIntBits(Test0324.fFld));
        FuzzerUtils.out.println("Test0324.iFld1 Test0324.dFld Test0324.bFld = " + Test0324.iFld1 + "," +
                Double.doubleToLongBits(Test0324.dFld) + "," + (Test0324.bFld ? 1 : 0));
        FuzzerUtils.out.println("byArrFld lArrFld = " + FuzzerUtils.checkSum(byArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0324 _instance = new Test0324();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
