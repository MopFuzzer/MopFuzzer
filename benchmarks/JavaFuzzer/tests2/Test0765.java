// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0765 {

    public static final int N = 400;

    public static long instanceCount=-89L;
    public static volatile short sFld=10105;
    public static float fFld=2.215F;
    public static boolean bFld=true;
    public static long[] lArrFld =new long[N];
    public static boolean[] bArrFld =new boolean[N];
    public volatile byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0765.lArrFld, 55027L);
        FuzzerUtils.init(Test0765.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        long l=-170L;
        int i3=-14;
        int i4=111;
        int i5=8;
        int[] iArr1 =new int[N];
        float f1=1.171F;

        FuzzerUtils.init(iArr1, -57285);

        for (l = 5; 245 > l; ++l) {
            i3 += (int)l;
            i4 = 1;
            do {
                Test0765.instanceCount >>= 38508;
                for (f1 = 1; f1 < 1; f1++) {
                    i5 <<= (int)-51544L;
                    switch ((int)((l % 1) + 49)) {
                    case 49:
                        i5 <<= i3;
                        break;
                    }
                    i3 = (int)l;
                    Test0765.instanceCount = Test0765.instanceCount;
                    i3 = i4;
                }
                i3 = (int)f1;
                iArr1 = iArr1;
                iArr1[i4 - 1] -= (int)2.799F;
                Test0765.lArrFld[i4] -= i3;
            } while (++i4 < 7);
        }
        vMeth2_check_sum += l + i3 + i4 + Float.floatToIntBits(f1) + i5 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(short s, float f) {

        int i6=0;
        int i7=-197;
        int i8=30831;
        int i9=-12;
        int i10=11;
        int[] iArr2 =new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr2, -8);

        vMeth2();
        i6 -= -12;
        for (i7 = 9; i7 < 366; ++i7) {
            iArr2[i7 - 1] *= -103;
            i8 -= i7;
            Test0765.bArrFld[i7 + 1] = b;
        }
        for (i9 = 312; i9 > 11; i9 -= 2) {
            i8 += (((i9 * i6) + f) - Test0765.instanceCount);
            iArr2[i9 - 1] = i8;
            i6 ^= 221;
            if (true) continue;
            try {
                i10 = (i7 % -1466376446);
                i8 = (i9 / 54609);
                i10 = (iArr2[i9] / 54);
            } catch (ArithmeticException a_e) {}
        }
        Test0765.instanceCount >>= Test0765.instanceCount;
        i10 += i7;
        iArr2 = iArr2;
        vMeth1_check_sum += s + Float.floatToIntBits(f) + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth() {

        int i11=37569;
        int i12=-46056;
        int i13=-7531;
        int i14=31033;
        int i15=6505;
        int[] iArr3 =new int[N];
        long l1=-7517046070943050121L;
        byte by=49;

        FuzzerUtils.init(iArr3, -37966);

        vMeth1(Test0765.sFld, -1.673F);
        for (i11 = 126; i11 > 3; --i11) {
            for (i13 = 1; i13 < 13; ++i13) {
                for (l1 = 1; l1 < 2; l1++) {
                    Test0765.fFld += l1;
                    i12 *= (int) Test0765.instanceCount;
                    i14 -= 6;
                    iArr3 = iArr3;
                }
                Test0765.instanceCount *= i14;
                Test0765.instanceCount *= l1;
                if (true) continue;
            }
            Test0765.instanceCount >>= Test0765.sFld;
        }
        Test0765.sFld = (short) i12;
        Test0765.instanceCount <<= i15;
        by -= (byte) Test0765.fFld;
        vMeth_check_sum += i11 + i12 + i13 + i14 + l1 + i15 + by + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=56384;
        int i1=-48;
        int i2=12;
        int i16=84;
        int i17=-62677;
        int i18=108;
        int i19=-41;
        int i20=-63391;
        int i21=131;
        int i22=7;
        int i23=-58873;
        int i24=10;
        int[] iArr =new int[N];
        double d=0.75486, d1=-13.53798;

        FuzzerUtils.init(iArr, 2);

        Test0765.instanceCount = Math.max(i--, (int) (Test0765.instanceCount * (i * d)));
        for (i1 = 14; i1 < 366; i1++) {
            try {
                i = (i1 / -14237);
                i = (120 % i1);
                iArr[i1 - 1] = (i2 / i1);
            } catch (ArithmeticException a_e) {}
            i += i1;
            vMeth();
        }
        i -= -9;
        Test0765.bFld = false;
        for (i16 = 8; 150 > i16; ++i16) {
            i18 = 1;
            do {
                iArr[i16 + 1] = i2;
                i2 = (int) Test0765.instanceCount;
                Test0765.sFld = (short) i16;
            } while (++i18 < 177);
            Test0765.instanceCount -= i18;
            byArrFld[i16 + 1] -= (byte)i;
            i17 += (i16 * i16);
        }
        for (i19 = 1; 289 > i19; i19++) {
            i2 = i;
            i17 += (i19 * i19);
            d1 = 1;
            while (++d1 < 87) {
                i = i17;
            }
            i2 += (int)-64559L;
            if (Test0765.bFld) continue;
            for (i21 = i19; 87 > i21; ++i21) {
                for (i23 = 1; i23 > i21; i23 -= 3) {
                    Test0765.instanceCount -= (long) 2.103F;
                    i20 = i;
                    i22 >>= (int) Test0765.instanceCount;
                    i22 >>>= i24;
                }
            }
            iArr[i19 - 1] = (int)d;
        }
        iArr[(6 >>> 1) % N] |= (int) Test0765.instanceCount;

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 i16 i17 = " + i2 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d1 i21 i22 = " + Double.doubleToLongBits(d1) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 iArr = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0765.instanceCount Test0765.sFld Test0765.fFld = " + Test0765.instanceCount + "," + Test0765.sFld +
                "," + Float.floatToIntBits(Test0765.fFld));
        FuzzerUtils.out.println("Test0765.bFld Test0765.lArrFld Test0765.bArrFld = " + (Test0765.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0765.lArrFld) + "," + FuzzerUtils.checkSum(Test0765.bArrFld));
        FuzzerUtils.out.println("byArrFld = " + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0765 _instance = new Test0765();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
