// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:31 2023
public class Test0415 {

    public static final int N = 400;

    public static long instanceCount=-1745335465638309180L;
    public static float fFld=1.61F;
    public static double dFld=7.111701;
    public static double dFld1=-80.4468;
    public static boolean bFld=false;
    public int iFld=-11813;
    public static byte[] byArrFld =new byte[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0415.byArrFld, (byte) 28);
        FuzzerUtils.init(Test0415.lArrFld, -40855L);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-38436;
        int i7=158;
        int i8=-20891;
        int i9=-17528;
        int i10=3;
        int i11=-86;
        int[] iArr1 =new int[N];
        double d=59.28464;

        FuzzerUtils.init(iArr1, 134);

        i6 -= (int) Test0415.instanceCount;
        for (i7 = 1; i7 < 359; ++i7) {
            for (d = 1; 5 > d; d++) {
                Test0415.instanceCount *= i8;
                for (i10 = i7; 2 > i10; i10++) {
                    iArr1[(int)(d + 1)] = i9;
                    Test0415.byArrFld = Test0415.byArrFld;
                    Test0415.instanceCount = 154;
                    i8 = (int) Test0415.fFld;
                    Test0415.lArrFld[i7 - 1] = i7;
                    i11 += (i10 ^ Test0415.instanceCount);
                    i8 = 148;
                }
                i9 |= i7;
            }
            Test0415.dFld = i7;
        }
        vMeth1_check_sum += i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth(long l2, int i5) {

        int i12=14, i13=41275, i14=-154, i15=160, i17=2, i18=11;
        short s=7001;

        vMeth1();
        for (i12 = 5; i12 < 343; ++i12) {
            i5 += (int) Test0415.dFld1;
            for (i14 = 1; i14 < 5; ++i14) {
                int i16=-99;
                i16 = (int) Test0415.dFld1;
                i15 <<= i5;
                i16 = i13;
                i15 += i14;
            }
            for (i17 = 5; i17 > 1; i17 -= 3) {
                i5 *= i13;
                l2 >>>= Test0415.instanceCount;
                l2 += (i17 - Test0415.fFld);
            }
            Test0415.instanceCount -= i15;
            Test0415.instanceCount = s;
            if (Test0415.bFld) continue;
        }
        long meth_res = l2 + i5 + i12 + i13 + i14 + i15 + i17 + i18 + s;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i1, int i2, long l) {

        long l1=2632170061L, l3=12L;
        int i3=-119;
        int i4=44995;
        int i19=-91;
        int i20=247;
        int[] iArr =new int[N];
        int[] iArr2 =new int[N];
        short s1=30469;
        byte by=-23;
        float f=2.574F;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr, 23651);
        FuzzerUtils.init(fArr, 75.528F);
        FuzzerUtils.init(iArr2, 0);

        Test0415.instanceCount *= (long) Test0415.fFld;
        for (l1 = 13; l1 < 310; l1++) {
            i4 = 1;
            do {
                switch ((i4 % 2) + 104) {
                case 104:
                    i1 <<= ((iArr[i4]++) | (i1++));
                    fArr[i4 - 1][i4 + 1] *= ((fMeth(l1, i4) - i1) + i4);
                    break;
                case 105:
                    i3 -= (int)0L;
                    i2 = i3;
                    switch (i4 + 14) {
                    case 14:
                        i2 >>>= -125;
                        break;
                    case 15:
                        Test0415.dFld = i3;
                        break;
                    case 16:
                        l += (long)-95.55143;
                        i1 = (int)0L;
                        break;
                    case 17:
                        i1 = i2;
                        Test0415.fFld += (((i4 * i2) + i3) - l1);
                        break;
                    case 18:
                        i2 <<= i4;
                    case 19:
                    case 20:
                        i3 = (int)-62.21559;
                        break;
                    case 21:
                        iArr[(int)(l1)] -= (int)-97.238F;
                    case 22:
                        if (false) break;
                        break;
                    case 23:
                        l *= i3;
                        break;
                    case 24:
                        if (i3 != 0) {
                            vMeth_check_sum += i1 + i2 + l + l1 + i3 + i4 + s1 + by + Float.floatToIntBits(f) + i19 +
                                l3 + i20 + FuzzerUtils.checkSum(iArr) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
                            return;
                        }
                        break;
                    case 25:
                        Test0415.fFld += l;
                        break;
                    case 26:
                        Test0415.bFld = Test0415.bFld;
                        break;
                    case 27:
                        if (Test0415.bFld) break;
                    case 28:
                    case 29:
                        i1 >>= s1;
                        break;
                    case 30:
                        l = i3;
                    case 31:
                        Test0415.dFld = 12L;
                    case 32:
                        i1 += (int)(0.410F + (i4 * i4));
                        break;
                    case 33:
                        i1 = i1;
                        break;
                    case 34:
                    case 35:
                        by = (byte) Test0415.instanceCount;
                        break;
                    case 36:
                        Test0415.fFld -= 55447;
                        break;
                    case 37:
                        iArr[i4 + 1] = (int)l;
                        break;
                    case 38:
                        i2 -= i3;
                        break;
                    case 39:
                        s1 = (short)i2;
                        break;
                    case 40:
                        iArr[(int)(l1 + 1)] += i3;
                        break;
                    case 41:
                        i2 += (i4 * i4);
                    case 42:
                        fArr[(int)(l1 - 1)] = FuzzerUtils.float1array(N, (float)2.116F);
                        break;
                    case 43:
                        iArr[i4 + 1] = i1;
                        break;
                    case 44:
                    case 45:
                        fArr[i4][i4 + 1] = i2;
                        break;
                    case 46:
                        Test0415.bFld = Test0415.bFld;
                        break;
                    case 47:
                        Test0415.byArrFld[i4 + 1] += (byte) i3;
                        break;
                    case 48:
                        f -= -224;
                    case 49:
                        i1 = by;
                        break;
                    case 50:
                        if (Test0415.bFld) continue;
                    case 51:
                        i1 = i4;
                        break;
                    case 52:
                        i1 += (i4 + i3);
                        break;
                    case 53:
                        i1 += i4;
                        break;
                    case 54:
                        l += i4;
                    case 55:
                        iArr2[i4 + 1] = 204;
                        break;
                    case 56:
                        Test0415.fFld = Test0415.fFld;
                        break;
                    case 57:
                        i1 += (i4 * i2);
                        break;
                    case 58:
                        l <<= by;
                        break;
                    case 59:
                        if (Test0415.bFld) break;
                        break;
                    case 60:
                        i1 += (int)(0.514F + (i4 * i4));
                        break;
                    case 61:
                        by += (byte)(i4 * i4);
                        break;
                    case 62:
                        f += (i4 * i4);
                    case 63:
                    case 64:
                        i1 += (((i4 * i2) + i3) - i3);
                        break;
                    case 65:
                        i1 += i4;
                        break;
                    case 66:
                        i3 += i4;
                        break;
                    case 67:
                        l -= -46765L;
                        break;
                    case 68:
                    case 69:
                        i3 = 2;
                        break;
                    case 70:
                        i3 = i1;
                    case 71:
                    case 72:
                        i1 += s1;
                    case 73:
                        iArr[(int)(l1 + 1)] = i19;
                        break;
                    case 74:
                        i3 -= i1;
                        break;
                    case 75:
                        l = i4;
                        break;
                    case 76:
                        Test0415.dFld = i19;
                    case 77:
                        Test0415.bFld = false;
                        break;
                    case 78:
                        i1 = s1;
                        break;
                    case 79:
                        Test0415.lArrFld[i4] = i4;
                        break;
                    case 80:
                        i1 += -52654;
                        break;
                    case 81:
                        i19 &= -11660;
                        break;
                    case 82:
                        l3 += 1692518009433863591L;
                        break;
                    case 83:
                        if (Test0415.bFld) break;
                    default:
                        i20 = i20;
                    }
                default:
                    i20 &= (int)l;
                }
            } while (++i4 < 6);
        }
        vMeth_check_sum += i1 + i2 + l + l1 + i3 + i4 + s1 + by + Float.floatToIntBits(f) + i19 + l3 + i20 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-7;
        int i21=10282;
        int i22=7511;
        int i23=13;
        int i24=3;
        int i25=13;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, 21217);

        i = 308;
        while (--i > 0) {
            vMeth(i, i, 1L);
            i21 = 1;
            do {
                iFld *= (int) Test0415.fFld;
                iFld += (int) Test0415.dFld;
                iFld |= i;
                switch (((i >>> 1) % 2) + 9) {
                case 9:
                    iFld += (26820 + (i21 * i21));
                    Test0415.dFld1 = i21;
                    Test0415.fFld += 3671624721L;
                    iArr3[i21] = (int)-2005812953L;
                case 10:
                    Test0415.instanceCount = (long) Test0415.dFld;
                    iFld = 11;
                    break;
                }
                if (Test0415.bFld) break;
                iFld >>= iFld;
                Test0415.instanceCount += i21;
            } while (++i21 < 82);
            iFld -= (int) Test0415.dFld;
            iFld += 8745;
            Test0415.fFld += (i * i);
            iFld += (int) Test0415.fFld;
            if (false) {
                iFld >>= i;
                for (i22 = 5; i22 < 82; i22++) {
                    Test0415.instanceCount = i23;
                    Test0415.dFld = i;
                    i23 += (int) Test0415.fFld;
                    i23 <<= (int) Test0415.instanceCount;
                    for (i24 = 1; i24 < 2; ++i24) {
                        iArr3[i - 1] -= (int) Test0415.instanceCount;
                        Test0415.instanceCount += (((i24 * i25) + i22) - i23);
                    }
                }
            } else {
                try {
                    i23 = (-301440769 / i24);
                    i25 = (i21 % -192);
                    iFld = (125 % i25);
                } catch (ArithmeticException a_e) {}
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0415.instanceCount Test0415.fFld Test0415.dFld = " + Test0415.instanceCount + "," +
                Float.floatToIntBits(Test0415.fFld) + "," + Double.doubleToLongBits(Test0415.dFld));
        FuzzerUtils.out.println("Test0415.dFld1 Test0415.bFld iFld = " + Double.doubleToLongBits(Test0415.dFld1) + "," + (Test0415.bFld
            ? 1 : 0) + "," + iFld);
        FuzzerUtils.out.println("Test0415.byArrFld Test0415.lArrFld = " + FuzzerUtils.checkSum(Test0415.byArrFld) + "," +
                FuzzerUtils.checkSum(Test0415.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0415 _instance = new Test0415();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
