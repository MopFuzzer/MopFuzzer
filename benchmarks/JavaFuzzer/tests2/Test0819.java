// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0819 {

    public static final int N = 400;

    public static long instanceCount=-33976L;
    public static int iFld=3;
    public static volatile float fFld=69.862F;
    public static volatile short sFld=9965;
    public static boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth() {

        float f=0.701F;

        f += (3.67F - ((++Test0819.instanceCount) + (Test0819.instanceCount + Test0819.instanceCount)));
        vMeth_check_sum += Float.floatToIntBits(f);
    }

    public static void vMeth2(long l1, byte by, long l2) {

        short s=11087;
        long l3=4669679883705447351L;
        int i6=8;
        int i7=-12;
        int i8=12;
        int i9=-124;
        int i10=-5;
        int[] iArr =new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr, 53646);

        l2 = (long) (((Test0819.iFld--) + (s + Test0819.instanceCount)) - ((Test0819.iFld - 1) + (1.414F - (Test0819.iFld +
                Test0819.iFld))));
        for (l3 = 6; l3 < 388; ++l3) {
            l1 += l3;
            vMeth();
            for (i7 = 1; i7 < 4; i7++) {
                Test0819.fFld *= i6;
                Test0819.fFld -= -27752L;
                if (b) {
                    l2 -= i7;
                    i6 = i6;
                    i8 -= (int)l2;
                    iArr = iArr;
                } else if (b) {
                    for (i9 = 1; 2 > i9; i9++) {
                        i10 = i7;
                        Test0819.instanceCount >>= Test0819.iFld;
                    }
                } else {
                    by = (byte) Test0819.fFld;
                }
            }
        }
        vMeth2_check_sum += l1 + by + l2 + s + l3 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i4, long l, int i5) {

        byte by1=6;
        int i12=65;
        int i13=-8552;
        int[] iArr1 =new int[N];
        double d=16.97354;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, 2573);
        FuzzerUtils.init(lArr, 4L);

        vMeth2(Test0819.instanceCount, by1, Test0819.instanceCount);
        for (int i11 : iArr1) {
            i11 = by1;
            i12 = 1;
            while (++i12 < 4) {
                i11 -= (int) Test0819.fFld;
                for (d = 1; d < 1; ++d) {
                    by1 = (byte)i11;
                    iArr1 = iArr1;
                    i4 = (int)l;
                    lArr[(int)(d - 1)] = i4;
                    Test0819.sFld += (short) (((d * i5) + l) - l);
                }
                Test0819.iFld = (int) Test0819.fFld;
                Test0819.instanceCount = (long) Test0819.fFld;
                if (b1) continue;
            }
            if (b1) break;
        }
        vMeth1_check_sum += i4 + l + i5 + by1 + i12 + Double.doubleToLongBits(d) + i13 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr3) {

        int i1=-61679;
        int i2=8;
        int i3=-90;
        int i14=-104;
        int i15=-108;
        int i16=8;
        int i17=-13;
        int i18=50120;
        int i19=-33;
        int i20=-8;
        int i21=7;
        int[] iArr2 =new
                    int[N];
        double d1=-79.81262;

        FuzzerUtils.init(iArr2, -124);

        i1 *= (int)-3L;
        for (i2 = 19; 322 > i2; ++i2) {
            vMeth();
        }
        i1 += -288;
        vMeth1(i2, Test0819.instanceCount, i3);
        i3 += i1;
        i14 = 220;
        do {
            d1 = 1;
            while (++d1 < 338) {
                Test0819.instanceCount += (long) (d1 * i1);
                for (i15 = 1; i15 > 1; i15--) {
                    i1 <<= Test0819.iFld;
                }
                for (i17 = 1; i17 > d1; i17--) {
                    if (Test0819.bFld) continue;
                    Test0819.iFld -= -104;
                    Test0819.iFld <<= i3;
                    i16 = Test0819.iFld;
                }
                i18 += (int)d1;
                i3 *= i16;
                i16 += i1;
                iArr2[(int)(d1 - 1)] = i1;
            }
            iArr2[i14 - 1] -= (int) Test0819.fFld;
            iArr2[i14 + 1] *= Test0819.iFld;
        } while ((i14 -= 3) > 0);
        for (i19 = 7; 146 > i19; ++i19) {
            i18 = (int) Test0819.instanceCount;
            i1 += i14;
            Test0819.instanceCount = i17;
            i21 = 1;
            do {
                i18 ^= i20;
                i18 += (((i21 * Test0819.iFld) + Test0819.instanceCount) - i16);
                Test0819.iFld = i20;
            } while (++i21 < 180);
        }

        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i14 d1 i15 = " + i14 + "," + Double.doubleToLongBits(d1) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0819.instanceCount Test0819.iFld Test0819.fFld = " + Test0819.instanceCount + "," + Test0819.iFld +
                "," + Float.floatToIntBits(Test0819.fFld));
        FuzzerUtils.out.println("Test0819.sFld Test0819.bFld = " + Test0819.sFld + "," + (Test0819.bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0819 _instance = new Test0819();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest vMeth2 vMeth1
//DEBUG  vMeth1 ->  vMeth1 mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
