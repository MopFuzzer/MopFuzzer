// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0753 {

    public static final int N = 400;

    public static long instanceCount=849904798L;
    public static double dFld=0.98025;
    public static long lFld=55731L;
    public static float fFld=60.986F;
    public static short sFld=-13700;
    public static boolean bFld=true;
    public static float fFld1=0.871F;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l, int i6) {

        float f=0.337F;
        float[] fArr =new float[N];
        int i7=7;
        int i8=-2;
        int i9=627;
        int i10=-13202;
        int i11=-18689;
        int i12=-57;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -15416);
        FuzzerUtils.init(fArr, -2.766F);

        i6 |= -8740;
        f = f;
        for (i7 = 153; 7 < i7; i7--) {
            Test0753.dFld += f;
            for (i9 = 11; i9 > 1; i9--) {
                l -= i6;
                iArr1[i9] = (int) Test0753.instanceCount;
                Test0753.instanceCount -= i8;
                l = Test0753.lFld;
                i6 += i9;
            }
        }
        for (float f1 : fArr) {
            for (i11 = 1; 4 > i11; ++i11) {
                Test0753.dFld = l;
                i6 -= (int) Test0753.instanceCount;
                i6 += i11;
            }
        }
        long meth_res = l + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i4, int i5) {

        int i13=56668;
        int i14=1;
        int i15=-211;
        int i16=-61022;
        int i17=-123;
        int i18=-60686;
        int[] iArr =new int[N];
        byte by=3;
        short s=27238;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 62844);
        FuzzerUtils.init(lArr, -484697889032555605L);

        iArr[(-8 >>> 1) % N] <<= (int)lMeth(-4083305179193809513L, 41578);
        for (i13 = 11; i13 < 276; ++i13) {
            i14 <<= i13;
            iArr[i13 - 1] >>= i4;
            Test0753.instanceCount += (i13 * i13);
            i5 = i5;
            i14 += (i13 * i13);
            for (i15 = i13; 6 > i15; i15++) {
                for (i17 = 1; i17 > 1; i17--) {
                    i18 = (int) Test0753.instanceCount;
                    switch ((i15 % 1) + 72) {
                    case 72:
                        Test0753.fFld += (((i17 * Test0753.instanceCount) + i17) - Test0753.instanceCount);
                        lArr[i13] <<= -40909;
                        break;
                    }
                    by = (byte) Test0753.instanceCount;
                    s *= (short) Test0753.fFld;
                }
            }
        }
        long meth_res = i4 + i5 + i13 + i14 + i15 + i16 + i17 + i18 + by + s + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1) {

        int i2=50407, i3=-126, i19=-114, i20=63003, i21=-13, i22=2;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i2 = 152; i2 > 2; i2--) {
            Test0753.instanceCount = iMeth(i3, i3);
            i1 = (int) Test0753.fFld;
            i3 = (int) Test0753.instanceCount;
            for (i19 = 11; i19 > 1; --i19) {
                Test0753.sFld += (short) (i19 | i2);
            }
            i1 += i2;
            Test0753.fFld += (((i2 * Test0753.lFld) + Test0753.instanceCount) - Test0753.instanceCount);
            for (i21 = 1; 11 > i21; i21++) {
                i22 += (32044 + (i21 * i21));
                switch (((i21 % 4) * 5) + 70) {
                case 77:
                    i1 = i20;
                    i1 += (i21 | i2);
                    bArr[i21 + 1] = false;
                    break;
                case 84:
                    i20 >>= i22;
                    break;
                case 81:
                    i22 *= i22;
                case 74:
                    i3 += (i21 * i21);
                    break;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        double d=57.84464;
        int i=59173, i23=-11, i24=254, i25=11, i26=-21790, i27=50563, i28=11, i29=-156, i30=-56436;
        long l1=-2L;
        long[] lArr1 =new long[N];
        float f2=0.842F;
        float[] fArr1 =new float[N];
        byte by1=-9;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)13643);
        FuzzerUtils.init(fArr1, 117.481F);
        FuzzerUtils.init(lArr1, -42438L);

        d += ((++i) + Test0753.instanceCount);
        vMeth(i);
        l1 = 1;
        do {
            switch ((int)((l1 % 9) + 127)) {
            case 127:
                for (f2 = 3; f2 < 116; ++f2) {
                    i23 = i23;
                    i24 = 1;
                    while (++i24 < 2) {
                        i += i;
                        by1 += (byte)(i24 | i24);
                        i >>= i24;
                        Test0753.instanceCount = i;
                        if (Test0753.bFld) continue;
                        Test0753.instanceCount <<= -2;
                        sArr[i24] -= (short)-20.92F;
                        i23 = (int) Test0753.fFld1;
                        fArr1[(int)(f2 - 1)] -= (float)-1.61415;
                        iArrFld[(int)(l1)] = i24;
                    }
                    i += -28331;
                    if (Test0753.bFld) continue;
                    for (i25 = 1; 2 > i25; i25++) {
                        Test0753.lFld = i24;
                    }
                    i23 -= (int)l1;
                    lArr1[(int)(l1 - 1)] = i27;
                    Test0753.fFld += f2;
                }
                for (i28 = 4; i28 < 116; i28++) {
                    Test0753.lFld -= i26;
                    i <<= i;
                    i30 = 1;
                    while (++i30 < 2) {
                        i23 *= -110;
                        Test0753.instanceCount = i27;
                    }
                }
                break;
            case 128:
                Test0753.lFld = Test0753.instanceCount;
                break;
            case 129:
                i27 -= i29;
                break;
            case 130:
                Test0753.instanceCount -= i30;
                break;
            case 131:
                i27 += (int)l1;
                break;
            case 132:
                lArr1[(int)(l1 + 1)] *= i30;
                break;
            case 133:
                i23 += (int)l1;
                break;
            case 134:
                i26 >>>= (int)-199L;
                break;
            case 135:
                lArr1 = FuzzerUtils.long1array(N, (long)134L);
                break;
            }
        } while (++l1 < 216);

        FuzzerUtils.out.println("d i l1 = " + Double.doubleToLongBits(d) + "," + i + "," + l1);
        FuzzerUtils.out.println("f2 i23 i24 = " + Float.floatToIntBits(f2) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("by1 i25 i26 = " + by1 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 sArr fArr1 = " + i30 + "," + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0753.instanceCount Test0753.dFld Test0753.lFld = " + Test0753.instanceCount + "," +
                Double.doubleToLongBits(Test0753.dFld) + "," + Test0753.lFld);
        FuzzerUtils.out.println("Test0753.fFld Test0753.sFld Test0753.bFld = " + Float.floatToIntBits(Test0753.fFld) + "," + Test0753.sFld
                + "," + (Test0753.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0753.fFld1 iArrFld = " + Float.floatToIntBits(Test0753.fFld1) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0753 _instance = new Test0753();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
