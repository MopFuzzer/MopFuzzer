// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0088 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=0;
    public static byte byFld=-84;
    public static int iFld1=-136;
    public static float fFld=13.261F;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0088.lArrFld, 875696831338296168L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i6, int i7, int i8) {

        int i9=19665, i10=13, i11=-58945, i12=-30101, i13=-24753, i14=32075;
        double d=-2.11695;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -2724009338L);

        i8 = Test0088.iFld;
        for (i9 = 3; 392 > i9; i9++) {
            Test0088.byFld >>= (byte) i9;
            for (i11 = 1; i11 < 4; ++i11) {
                for (i13 = i9; i13 < 2; ++i13) {
                    Test0088.iFld -= (int) Test0088.instanceCount;
                    i8 += (int)107.986F;
                    d = i14;
                    lArr[i9 - 1] = i12;
                    i14 += i13;
                    i10 = i12;
                    lArr[i9 - 1] = i10;
                    i6 = (int) Test0088.instanceCount;
                    i6 += (i13 ^ Test0088.instanceCount);
                }
                Test0088.instanceCount %= ((long) (d) | 1);
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(boolean b, int i3, float f) {

        int i4=48348;
        int i5=-5;
        int i15=-6;
        int i16=-55025;
        int i17=230;
        int i18=-145;
        int i19=-170;
        int i20=-5;
        int[] iArr =new int[N];
        double d1=6.72272;

        FuzzerUtils.init(iArr, -1);

        for (i4 = 3; i4 < 198; i4++) {
            Test0088.iFld /= (int) (((-(-lMeth(i3, Test0088.iFld, 5454))) - i3) | 1);
        }
        switch ((((Test0088.iFld1 >>> 1) % 2) * 5) + 93) {
        case 98:
            Test0088.iFld += (int) Test0088.instanceCount;
            Test0088.iFld1 = i4;
            Test0088.iFld1 += Test0088.iFld;
            break;
        case 97:
            for (i15 = 327; i15 > 12; i15--) {
                if (b) {
                    iArr[i15] = (int)d1;
                    f += i16;
                    for (i17 = 1; i17 < 5; ++i17) {
                        for (i19 = 1; i19 < 2; i19++) {
                            Test0088.instanceCount *= (long) f;
                            iArr[i15 + 1] -= i15;
                            iArr[i17] = i16;
                        }
                    }
                    vMeth_check_sum += (b ? 1 : 0) + i3 + Float.floatToIntBits(f) + i4 + i5 + i15 + i16 +
                        Double.doubleToLongBits(d1) + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr);
                    return;
                } else if (b) {
                    Test0088.instanceCount = Test0088.iFld1;
                } else {
                    Test0088.iFld = (int) Test0088.instanceCount;
                }
            }
        default:
            Test0088.byFld *= (byte) Test0088.instanceCount;
        }
        vMeth_check_sum += (b ? 1 : 0) + i3 + Float.floatToIntBits(f) + i4 + i5 + i15 + i16 +
            Double.doubleToLongBits(d1) + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1, long l, int i2) {

        int i21=34228;
        int i22=211;
        int i23=9;
        int i24=-11;
        int i25=-94;
        int[] iArr1 =new int[N];
        short s=12270;
        boolean b1=true;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, 50572);
        FuzzerUtils.init(fArr, 38.820F);

        vMeth(true, Test0088.iFld, Test0088.fFld);
        i1 -= 16432;
        Test0088.lArrFld[(i1 >>> 1) % N] -= i1;
        for (i21 = 7; i21 < 163; i21++) {
            i22 += Test0088.iFld;
            for (i23 = 1; i23 < 10; ++i23) {
                i25 = 2;
                do {
                    Test0088.instanceCount += (i25 * Test0088.byFld);
                    Test0088.instanceCount *= l;
                    i24 |= s;
                    b1 = false;
                    Test0088.iFld -= (int) 121.398F;
                    iArr1[i23 + 1] = (int) Test0088.instanceCount;
                    i2 *= Test0088.iFld1;
                } while (--i25 > 0);
                fArr[i23] = i21;
            }
        }
        long meth_res = i1 + l + i2 + i21 + i22 + i23 + i24 + i25 + s + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-1023;
        int i26=9511;
        int i27=3;
        int i28=-10;
        int i29=5396;
        int[] iArr2 =new int[N];
        double d2=0.107296;
        float f1=-17.486F;
        float[] fArr1 =new float[N];
        boolean b2=true;
        short s1=-21170;

        FuzzerUtils.init(iArr2, -16736);
        FuzzerUtils.init(fArr1, 1.147F);

        i = 1;
        do {
            switch (((i % 3) * 5) + 67) {
            case 75:
                Test0088.iFld |= (int) (Test0088.instanceCount &= (Test0088.iFld << (--Test0088.iFld)));
                iMeth(Test0088.iFld, Test0088.instanceCount, i);
                Test0088.iFld <<= Test0088.byFld;
            case 77:
                Test0088.iFld1 -= (int) Test0088.instanceCount;
                break;
            case 72:
                Test0088.iFld = i;
                for (i26 = 103; 6 < i26; i26--) {
                    i27 >>>= (int) Test0088.instanceCount;
                    iArr2[i] = (int)-21L;
                    i27 = Test0088.iFld;
                }
                Test0088.lArrFld[i + 1] <<= Test0088.instanceCount;
                if (b2) {
                    iArr2[i - 1] >>= (int) Test0088.instanceCount;
                    Test0088.iFld1 -= (int) d2;
                    i28 = 1;
                    do {
                        for (f1 = 1; f1 < 1; f1++) {
                            switch ((((Test0088.iFld1 >>> 1) % 5) * 5) + 48) {
                            case 62:
                                Test0088.instanceCount += (long) f1;
                                iArr2[(int)(f1)] += 117;
                                i27 += (int) Test0088.fFld;
                                break;
                            case 51:
                                fArr1[(int)(f1 - 1)] += 6104421641975127757L;
                                break;
                            case 67:
                                Test0088.fFld += f1;
                                if (b2) break;
                                break;
                            case 56:
                            case 65:
                                Test0088.instanceCount += Test0088.instanceCount;
                                Test0088.lArrFld[(int) (f1 + 1)] = s1;
                                Test0088.iFld += (int) ((long) f1 ^ Test0088.iFld1);
                                Test0088.instanceCount += Test0088.iFld1;
                                break;
                            default:
                                i29 += (int)f1;
                                Test0088.iFld *= (int) d2;
                            }
                        }
                    } while (++i28 < 103);
                } else {
                    Test0088.instanceCount <<= Test0088.instanceCount;
                }
                break;
            default:
                Test0088.instanceCount += Test0088.byFld;
            }
        } while (++i < 244);

        FuzzerUtils.out.println("i i26 i27 = " + i + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d2 i28 f1 = " + Double.doubleToLongBits(d2) + "," + i28 + "," +
            Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i29 b2 s1 = " + i29 + "," + (b2 ? 1 : 0) + "," + s1);
        FuzzerUtils.out.println("iArr2 fArr1 = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0088.instanceCount Test0088.iFld Test0088.byFld = " + Test0088.instanceCount + "," + Test0088.iFld +
                "," + Test0088.byFld);
        FuzzerUtils.out.println("Test0088.iFld1 Test0088.fFld Test0088.lArrFld = " + Test0088.iFld1 + "," +
                Float.floatToIntBits(Test0088.fFld) + "," + FuzzerUtils.checkSum(Test0088.lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0088 _instance = new Test0088();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
