// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0456 {

    public static final int N = 400;

    public static long instanceCount=6804137494412405487L;
    public static float fFld=0.437F;
    public double dFld=1.11746;
    public static byte byFld=76;
    public boolean bFld=false;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0456.iArrFld, 198);
        FuzzerUtils.init(Test0456.fArrFld, 0.203F);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        int i6=-228, i7=6288, i8=57810, i9=180, i10=-7, i11=7;
        short s=18350;

        i4 += (int) Test0456.instanceCount;
        for (i6 = 12; i6 < 392; i6++) {
            for (i8 = i6; i8 < 4; i8++) {
                i7 &= i7;
                i9 = 164;
                i5 >>= -58234;
                Test0456.instanceCount += (((i8 * Test0456.instanceCount) + i5) - Test0456.instanceCount);
                Test0456.instanceCount = -8;
                for (i10 = 1; i10 < 1; i10 += 2) {
                    Test0456.instanceCount &= i5;
                    if (i10 != 0) {
                        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s;
                        return;
                    }
                    s = (short)i11;
                    i9 -= (int)-42L;
                    Test0456.instanceCount += -1679207206L;
                    i5 = i7;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s;
    }

    public static byte byMeth(double d, int i3, boolean b) {

        int i12=27416, i13=37824, i14=11116, i15=-8;
        short s1=16738;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 148683593L);

        vMeth1(i3, 3);
        for (i12 = 3; i12 < 148; ++i12) {
            i3 <<= 4;
            switch (((-2 >>> 1) % 7) + 20) {
            case 20:
                i3 += i13;
                Test0456.instanceCount += i12;
                i3 = i12;
                break;
            case 21:
                i14 = 1;
                while (++i14 < 11) {
                    if (b) continue;
                    try {
                        i3 = (i12 % -857411965);
                        i13 = (-89 % Test0456.iArrFld[i12 - 1]);
                        i13 = (i14 / i13);
                    } catch (ArithmeticException a_e) {}
                    i15 = 1;
                    while (++i15 < 1) {
                        i3 = i14;
                        Test0456.instanceCount += (i15 * i14);
                        lArr[i15 + 1][i12 + 1] -= i13;
                        i3 += (((i15 * i3) + i3) - s1);
                    }
                }
                break;
            case 22:
                Test0456.instanceCount >>= Test0456.instanceCount;
                break;
            case 23:
                Test0456.fFld *= 6;
                break;
            case 24:
                i13 -= (int) Test0456.fFld;
                break;
            case 25:
                Test0456.iArrFld = FuzzerUtils.int1array(N, (int) 0);
            case 26:
                Test0456.byFld >>= Test0456.byFld;
            default:
                i3 += (int)2.62118;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i3 + (b ? 1 : 0) + i12 + i13 + i14 + i15 + s1 +
            FuzzerUtils.checkSum(lArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void vMeth(int i2) {

        int i16=-151, i17=-51944;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -41L);

        Test0456.instanceCount <<= (long) ((byMeth(dFld, i2, bFld) - dFld) + i2);
        i2 = i2;
        for (i16 = 12; 238 > i16; ++i16) {
            lArr1 = lArr1;
        }
        vMeth_check_sum += i2 + i16 + i17 + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=-12, i18=-50797, i19=3, i20=-57895, i21=30, i22=-29635, i23=162, i24=-1, i25=-218;
        long l=17164L;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 2.104036);

        for (i = 11; i < 342; i++) {
            i1 <<= (int) ((i1--) & (i1 >>= (int) (Test0456.fFld * l)));
            i1 = (int) ((Test0456.fFld *= (i1 - i)) % (i | 1));
            Test0456.iArrFld[i] = (int) ((++Test0456.instanceCount) + ((-52930 - (l - dFld)) - (dArr[i - 1]++)));
            vMeth(i);
        }
        l = i;
        for (float f : Test0456.fArrFld) {
            for (i18 = 63; i18 > 1; i18 -= 2) {
                i19 = i1;
                i1 += (i18 - i19);
                Test0456.instanceCount <<= Test0456.instanceCount;
            }
            i1 = i1;
            for (i20 = 2; i20 < 63; i20++) {
                Test0456.instanceCount = i20;
                i1 >>= i18;
                i19 = i1;
                if (false) {
                    i1 <<= i18;
                    for (i22 = 1; i22 < 2; ++i22) {
                        Test0456.instanceCount = i22;
                    }
                    l >>= i;
                    f = i1;
                }
                i23 = -20;
                for (i24 = 2; i24 > i20; i24--) {
                    i23 = i22;
                    i23 *= i;
                    Test0456.iArrFld = Test0456.iArrFld;
                    l ^= i;
                }
                if (bFld) continue;
            }
            i1 = (int) Test0456.instanceCount;
        }

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 dArr = " + i24 + "," + i25 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0456.instanceCount Test0456.fFld dFld = " + Test0456.instanceCount + "," +
                Float.floatToIntBits(Test0456.fFld) + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0456.byFld bFld Test0456.iArrFld = " + Test0456.byFld + "," + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0456.iArrFld));
        FuzzerUtils.out.println("Test0456.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0456.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0456 _instance = new Test0456();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
