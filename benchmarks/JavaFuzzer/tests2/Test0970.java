// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0970 {

    public static final int N = 400;

    public static volatile long instanceCount=-57216L;
    public static boolean bFld=true;

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=-39872;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 13);

        iArr[(-64829 >>> 1) % N][(-33379 >>> 1) % N] -= i1;
        vMeth1_check_sum += i1 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        short s=-4036;
        int i2=5, i3=-20376, i4=47837, i5=0;
        float f=84.649F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 56.29F);

        vMeth1();
        Test0970.instanceCount = s;
        i2 = i2;
        i2 -= (int)f;
        for (float f1 : fArr) {
            for (i3 = 4; i3 > 1; i3 -= 3) {
                i2 *= i4;
                i5 = 1;
                do {
                    if (Test0970.bFld) {
                        Test0970.instanceCount += (i5 * i5);
                    } else if (Test0970.bFld) {
                        i4 = i3;
                        i2 >>= i3;
                    } else {
                        Test0970.instanceCount -= Test0970.instanceCount;
                        i4 -= i4;
                        f1 = i4;
                    }
                } while ((i5 += 2) < 4);
            }
        }
        vMeth_check_sum += s + i2 + Float.floatToIntBits(f) + i3 + i4 + i5 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vSmallMeth(int i) {


        Test0970.instanceCount ^= i;
        vMeth();
        vSmallMeth_check_sum += i;
    }

    public void mainTest(String[] strArr1) {

        int i6=-17272;
        int i7=-64136;
        int i8=-121;
        int i9=46025;
        int i10=9;
        int i11=0;
        int i12=42304;
        int i13=11;
        int i14=-53749;
        int i15=-198;
        int i16=-7;
        int i17=2721;
        int[] iArr1 =new int[N];
        double d=-2.81142;
        double[] dArr =new double[N];
        float f2=87.754F;
        short s1=-31573;
        long l=4961701707359520027L;

        FuzzerUtils.init(iArr1, -232);
        FuzzerUtils.init(dArr, 0.2621);

        for (int smallinvoc=0; smallinvoc<101; smallinvoc++) vSmallMeth(i6);
        try {
            Test0970.instanceCount |= Test0970.instanceCount;
            d += i6;
            for (i7 = 5; i7 < 381; i7++) {
                for (i9 = i7; i9 < 67; i9++) {
                    i10 += (((i9 * i8) + f2) - Test0970.instanceCount);
                    iArr1[i9 - 1] = (int)d;
                    i8 -= (int)f2;
                    i8 += (i9 | (long)f2);
                    i10 = i6;
                    dArr[i9 + 1] = i7;
                    for (i11 = 1; i11 < 1; ++i11) {
                        i10 = -19865;
                        i10 >>>= i10;
                        i8 = (int)f2;
                        i12 += (i11 + i6);
                        i6 = i12;
                        i6 += (((i11 * i10) + s1) - i9);
                        Test0970.bFld = Test0970.bFld;
                    }
                    i10 ^= i10;
                    i6 += i9;
                    iArr1[i9 - 1] = (int)-103.352F;
                }
            }
        }
        catch (NullPointerException exc1) {
            i8 *= i10;
            for (i13 = 9; i13 < 287; ++i13) {
                for (i15 = i13; i15 < 90; i15++) {
                    l >>= i13;
                    Test0970.instanceCount = 50108;
                    iArr1[i15 + 1] <<= -173;
                    i17 -= i12;
                }
            }
        }

        FuzzerUtils.out.println("i6 d i7 = " + i6 + "," + Double.doubleToLongBits(d) + "," + i7);
        FuzzerUtils.out.println("i8 i9 i10 = " + i8 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("f2 i11 i12 = " + Float.floatToIntBits(f2) + "," + i11 + "," + i12);
        FuzzerUtils.out.println("s1 i13 i14 = " + s1 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 l = " + i15 + "," + i16 + "," + l);
        FuzzerUtils.out.println("i17 iArr1 dArr = " + i17 + "," + FuzzerUtils.checkSum(iArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0970.instanceCount Test0970.bFld = " + Test0970.instanceCount + "," + (Test0970.bFld ? 1 : 0));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0970 _instance = new Test0970();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
