// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0863 {

    public static final int N = 400;

    public static long instanceCount=6L;
    public static float fFld=50.990F;
    public int iFld=7;
    public boolean bFld=true;
    public byte byFld=31;
    public static volatile float[] fArrFld =new float[N];
    public long[][] lArrFld =new long[N][N];
    public int[] iArrFld =new int[N];
    public int[] iArrFld1 =new int[N];
    public int[][] iArrFld2 =new int[N][N];

    static {
        FuzzerUtils.init(Test0863.fArrFld, 67.471F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2) {

        int i3=-7014;
        int i4=-9;
        int i5=1;
        int i6=182;
        int i7=-29089;
        int i8=-175;
        int i9=-3;
        int[] iArr =new int[N];
        boolean b=true;
        short[] sArr1 =new short[N];

        FuzzerUtils.init(sArr1, (short)-29772);
        FuzzerUtils.init(iArr, 36);

        for (i3 = 12; i3 < 263; ++i3) {
            sArr1[i3 + 1] = (short)i2;
            i2 -= (int) Test0863.fFld;
        }
        for (i5 = 8; i5 < 168; ++i5) {
            i7 = 1;
            while (++i7 < 10) {
                short s=25189;
                i4 = i3;
                i4 += s;
                for (i8 = 1; i8 < 1; i8++) {
                    Test0863.instanceCount = i8;
                    i4 += 244;
                    if (false) {
                        iArr[i8] = 206;
                        b = b;
                    } else if (b) {
                        Test0863.instanceCount += i8;
                        sArr1[i5 - 1] <<= (short)i3;
                    } else {
                        i6 += (int) Test0863.instanceCount;
                    }
                }
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(sArr1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l2) {

        int i=-700, i1=-6, i10=50448, i11=12;
        byte by=37;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)16422);

        for (i = 261; i > 14; i -= 3) {
            Test0863.fArrFld[i - 1] = ((--sArr[i - 1]) + i);
            vMeth2(i);
            i1 += (int)51.111876;
            for (i10 = 1; i10 < 19; ++i10) {
                i11 += (i10 * i10);
                Test0863.fFld += i10;
                switch (((i10 % 7) * 5) + 126) {
                case 139:
                case 143:
                case 129:
                    i1 = (int)l2;
                    break;
                case 152:
                    i1 -= i10;
                    if (false) break;
                    Test0863.instanceCount = by;
                    Test0863.fFld = i;
                case 146:
                    by &= (byte)-244;
                    i1 -= i10;
                case 150:
                    i11 = 3391;
                    break;
                case 147:
                    l2 += i1;
                default:
                    i1 += i10;
                }
            }
        }
        vMeth1_check_sum += l2 + i + i1 + i10 + i11 + by + FuzzerUtils.checkSum(sArr);
    }

    public void vMeth(long l, long l1) {

        int i12=10;
        int i13=-11;
        int i14=16379;
        int i15=-9;
        int i16=-4;
        int[] iArr1 =new int[N];
        double d=55.61199;
        short s1=17761;

        FuzzerUtils.init(iArr1, -110);

        switch (((((int) (Test0863.fFld - iFld)) >>> 1) % 9) + 109) {
        case 109:
            vMeth1(Test0863.instanceCount);
            for (i12 = 333; 7 < i12; --i12) {
                i13 -= (int)d;
                for (i14 = 1; 5 > i14; i14++) {
                    if (bFld) break;
                    i16 = 1;
                    do {
                        l1 = i14;
                        Test0863.fFld = Test0863.instanceCount;
                        iFld *= i12;
                        iFld += (((i16 * Test0863.fFld) + l1) - s1);
                        lArrFld[i12][i16 - 1] = l;
                    } while (++i16 < 2);
                }
                iFld *= (int)-19.24097;
            }
        case 110:
            i15 = i12;
            break;
        case 111:
        case 112:
            Test0863.fFld -= l;
            break;
        case 113:
            d *= l1;
            break;
        case 114:
            i15 += 48609;
        case 115:
            iArrFld1 = iArrFld1;
            break;
        case 116:
            byFld += (byte)24486;
        case 117:
            i13 ^= i12;
            break;
        default:
            iArr1 = iArrFld;
        }
        vMeth_check_sum += l + l1 + i12 + i13 + Double.doubleToLongBits(d) + i14 + i15 + i16 + s1 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i18=46, i19=60278, i20=24271, i21=-1, i22=24998, i23=-13, i24=12253;
        double d1=0.25702, d2=125.53482;
        float f=-91.600F;

        vMeth(6165L, 102L);
        iFld = iFld;
        for (i18 = 18; i18 < 375; ++i18) {
            byFld = (byte)-209;
        }
        for (d1 = 6; d1 < 260; d1++) {
            f = 1;
            do {
                i19 *= (int) Test0863.fFld;
                d2 -= i18;
                Test0863.fFld += -3327;
            } while (++f < 99);
            iFld -= (int) Test0863.instanceCount;
            if (false) {
                i19 = (int) Test0863.instanceCount;
                switch ((int)(((d1 % 2) * 5) + 12)) {
                case 16:
                    Test0863.fFld -= i18;
                    for (i21 = 3; i21 < 99; ++i21) {
                        i22 = i20;
                        Test0863.instanceCount <<= -172;
                        i19 += (i21 | Test0863.instanceCount);
                        for (i23 = 2; 1 < i23; --i23) {
                            switch (((6 >>> 1) % 10) + 78) {
                            case 78:
                                i20 += (i23 * i23);
                                break;
                            case 79:
                                i22 += (int) Test0863.instanceCount;
                                switch ((i21 % 3) + 41) {
                                case 41:
                                    if (bFld) {
                                        i24 = 4;
                                        i24 &= i24;
                                        Test0863.instanceCount = i23;
                                        try {
                                            i24 = (i21 % 7394);
                                            i22 = (i19 / -30120);
                                            iArrFld[i21] = (19477 % i20);
                                        } catch (ArithmeticException a_e) {}
                                    } else if (true) {
                                        try {
                                            i20 = (i23 / -19435);
                                            iArrFld[i21 - 1] = (-55384 % i18);
                                            i20 = (-112 % i23);
                                        } catch (ArithmeticException a_e) {}
                                    }
                                    iFld += i23;
                                    break;
                                case 42:
                                    Test0863.instanceCount = 4;
                                case 43:
                                    i19 = i24;
                                    break;
                                }
                            case 80:
                                i22 += (i23 + Test0863.instanceCount);
                                break;
                            case 81:
                                Test0863.fFld = f;
                                break;
                            case 82:
                            case 83:
                            case 84:
                                iArrFld2 = FuzzerUtils.int2array(N, (int)27670);
                                break;
                            case 85:
                                Test0863.instanceCount += i18;
                                break;
                            case 86:
                                Test0863.fArrFld[i21] += -6;
                            case 87:
                                i24 -= byFld;
                            }
                        }
                    }
                case 17:
                    Test0863.instanceCount ^= i24;
                    break;
                }
            } else if (bFld) {
                i20 = (int)f;
            }
        }

        FuzzerUtils.out.println("i18 i19 d1 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i20 f d2 = " + i20 + "," + Float.floatToIntBits(f) + "," +
            Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 = " + i24);

        FuzzerUtils.out.println("Test0863.instanceCount Test0863.fFld iFld = " + Test0863.instanceCount + "," +
                Float.floatToIntBits(Test0863.fFld) + "," + iFld);
        FuzzerUtils.out.println("bFld byFld Test0863.fArrFld = " + (bFld ? 1 : 0) + "," + byFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0863.fArrFld)));
        FuzzerUtils.out.println("lArrFld iArrFld iArrFld1 = " + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(iArrFld1));
        FuzzerUtils.out.println("iArrFld2 = " + FuzzerUtils.checkSum(iArrFld2));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0863 _instance = new Test0863();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
