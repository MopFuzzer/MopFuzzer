// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0109 {

    public static final int N = 400;

    public static long instanceCount=60002L;
    public static int iFld=151;
    public float fFld=-1.706F;
    public short sFld=7579;
    public static byte byFld=31;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l1, int i7) {

        int i8=-223;
        int i9=6;
        int i10=4;
        int i11=-4;
        int[] iArr1 =new int[N];
        float f1=0.587F, f2=-2.245F;
        boolean b=true;

        FuzzerUtils.init(iArr1, -67);

        i8 = 1;
        do {
            for (i9 = 1; i9 < 5; ++i9) {
                i7 += (((i9 * i10) + i8) - i8);
                for (f1 = 1; f1 < 2; ++f1) {
                    Test0109.iFld = -152;
                    f2 += l1;
                    switch ((int)((f1 % 9) + 10)) {
                    case 10:
                        l1 = Test0109.iFld;
                        l1 = i9;
                        if (b) continue;
                    case 11:
                        l1 = i9;
                        iArr1[i9 + 1] = (int)l1;
                        l1 = i10;
                        Test0109.iFld >>= (int) 199L;
                        break;
                    case 12:
                        i10 = (int) Test0109.instanceCount;
                        break;
                    case 13:
                        Test0109.iFld += i8;
                        break;
                    case 14:
                        l1 += (-53429 + (f1 * f1));
                    case 15:
                        b = false;
                        break;
                    case 16:
                        l1 = l1;
                        break;
                    case 17:
                        Test0109.iFld = i9;
                        break;
                    case 18:
                        i11 += (int)(-2296588837L + (f1 * f1));
                        break;
                    }
                }
            }
        } while (++i8 < 372);
        long meth_res = l1 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + i11 + Float.floatToIntBits(f2) + (b ? 1 :
            0) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth1() {

        int i4=11;
        int i5=-14950;
        int i6=38194;
        int i12=-58536;
        int i13=-57557;
        int[] iArr =new int[N];
        long l=0L;
        boolean b1=true;
        double d1=82.51588;

        FuzzerUtils.init(iArr, 27519);

        for (i4 = 16; 338 > i4; ++i4) {
            i5 = (++i5);
            for (l = 1; l < 5; l++) {
                iArr[i4] += (int) (((Test0109.instanceCount * -125) * lMeth(-9L, i6)) * i4);
                iArr[(int)(l)] = i5;
                for (i12 = 2; i12 > 1; i12 -= 3) {
                    iArr[i12] <<= (int)24304L;
                    b1 = true;
                    i13 += i4;
                    Test0109.instanceCount *= l;
                    i5 += (((i12 * Test0109.instanceCount) + i12) - i12);
                    Test0109.iFld += (i12 * i6);
                    fFld *= (float)d1;
                    i5 += i12;
                    sFld += (short)(i12 * i12);
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + l + i6 + i12 + i13 + (b1 ? 1 : 0) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(double d) {

        float f=-1.254F, f3=2.964F;
        int i2=-8;
        int i3=-90;
        int i14=15;
        int i15=-6351;
        int i16=-180;
        int i17=18;
        int[] iArr2 =new int[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -175L);
        FuzzerUtils.init(iArr2, -39132);

        Test0109.iFld = (int) ((lArr[(Test0109.iFld >>> 1) % N] - f) + (Math.abs(-247) - Test0109.instanceCount));
        for (i2 = 5; i2 < 152; ++i2) {
            vMeth1();
            for (i14 = 1; i14 < 11; i14++) {
                boolean b2=true;
                fFld *= Test0109.instanceCount;
                if (b2) {
                    i15 ^= (int) Test0109.instanceCount;
                    i15 = (int) Test0109.instanceCount;
                    iArr2 = FuzzerUtils.int1array(N, (int)-8);
                } else if (b2) {
                    i3 += (i14 - f3);
                    Test0109.instanceCount &= -29952;
                    i3 += i2;
                    for (i16 = 1; i16 < 2; ++i16) {
                        lArr[i14] &= i3;
                    }
                    vMeth_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i2 + i3 + i14 + i15 +
                        Float.floatToIntBits(f3) + i16 + i17 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
                    return;
                } else {
                    sFld = (short)-76;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i2 + i3 + i14 + i15 +
            Float.floatToIntBits(f3) + i16 + i17 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=5, i1=20280, i18=9, i19=-1932, i20=38, i21=-2, i22=-109, i23=7;
        double d2=-81.112219;
        boolean b3=true;
        boolean b4=true;
        boolean[] bArr =new boolean[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr1, -35642L);

        for (i = 1; i < 125; ++i) {
            Test0109.instanceCount = (--i1);
        }
        vMeth(d2);
        for (i18 = 6; i18 < 137; ++i18) {
            i19 -= sFld;
            i19 += (i18 + fFld);
            i1 += (i18 | i18);
            Test0109.iFld = 222;
            Test0109.iFld = (int) Test0109.instanceCount;
            Test0109.iFld += i;
            switch (((i1 >>> 1) % 4) + 80) {
            case 80:
            case 81:
                i1 >>>= i1;
                bArr[i18] = b3;
                i19 += (int)13L;
                Test0109.iFld += i18;
                break;
            case 82:
                i20 = 191;
                do {
                    for (i21 = i20; i21 < 2; ++i21) {
                        i1 = (int)1.416F;
                        switch ((i18 % 7) + 101) {
                        case 101:
                            iArrFld[i18 - 1] *= (int)166L;
                            if (b3) {
                                i22 = 39337;
                                lArr1 = lArr1;
                                iArrFld[i20 + 1] = i19;
                                Test0109.iFld = i;
                            } else if (b4) {
                                i23 += (i21 + i23);
                            } else if (false) {
                                i19 += i21;
                                Test0109.instanceCount *= (long) fFld;
                            } else {
                                sFld += (short)i21;
                                lArr1[i21 + 1] -= 31561;
                            }
                            break;
                        case 102:
                            Test0109.instanceCount -= i1;
                            break;
                        case 103:
                            i19 *= (int) Test0109.instanceCount;
                            break;
                        case 104:
                            i19 += (i21 - Test0109.iFld);
                            break;
                        case 105:
                            i22 &= (int) Test0109.instanceCount;
                        case 106:
                            iArrFld = FuzzerUtils.int1array(N, (int)-10);
                            break;
                        case 107:
                            Test0109.iFld <<= (int) -16249L;
                            break;
                        default:
                            Test0109.byFld <<= (byte) i;
                        }
                    }
                } while ((i20 -= 2) > 0);
                break;
            case 83:
                Test0109.instanceCount += (i18 * i18);
                break;
            default:
                i22 = Test0109.iFld;
            }
        }

        FuzzerUtils.out.println("i i1 d2 = " + i + "," + i1 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i18 i19 b3 = " + i18 + "," + i19 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 b4 bArr = " + i23 + "," + (b4 ? 1 : 0) + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0109.instanceCount Test0109.iFld fFld = " + Test0109.instanceCount + "," + Test0109.iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("sFld Test0109.byFld iArrFld = " + sFld + "," + Test0109.byFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0109 _instance = new Test0109();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
