// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0261 {

    public static final int N = 400;

    public static long instanceCount=14L;
    public double dFld=-1.45852;
    public static volatile short sFld=21871;
    public static int iFld=-1;
    public byte byFld=10;
    public static volatile float fFld=36.1002F;
    public long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static volatile double[] dArrFld =new double[N];
    public long[][] lArrFld1 =new long[N][N];

    static {
        FuzzerUtils.init(Test0261.iArrFld, 71);
        FuzzerUtils.init(Test0261.dArrFld, 90.85328);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, float f3, byte by) {

        int i4=21118, i5=102, i6=0, i7=13, i8=-198, i9=-6, i10=182;
        boolean b=false;
        short[] sArr1 =new short[N];

        FuzzerUtils.init(sArr1, (short)-17654);

        i3 = (int)f3;
        for (i4 = 7; 394 > i4; i4++) {
            Test0261.instanceCount = i4;
            if (b) break;
            i5 = (int)f3;
        }
        for (i6 = 11; i6 < 276; i6++) {
            Test0261.iArrFld[i6] += (int) Test0261.instanceCount;
            Test0261.sFld -= (short) i6;
            i7 += (((i6 * f3) + i5) - f3);
            i8 = 1;
            do {
                i7 -= Test0261.iFld;
                try {
                    i9 = (204 / i8);
                    i9 = (11 / i6);
                    Test0261.iFld = (i8 % -40312);
                } catch (ArithmeticException a_e) {}
            } while (++i8 < 6);
            i10 = 1;
            while (++i10 < 6) {
                sArr1[i6] += (short)i9;
            }
            Test0261.iFld = (int) Test0261.instanceCount;
        }
        vMeth2_check_sum += i3 + Float.floatToIntBits(f3) + by + i4 + i5 + (b ? 1 : 0) + i6 + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(sArr1);
    }

    public void vMeth1(int i1, int i2, long l) {

        float f2=-1.343F;
        float[] fArr =new float[N];
        byte by1=111;
        short[] sArr =new short[N];

        FuzzerUtils.init(fArr, -1.112F);
        FuzzerUtils.init(sArr, (short)32526);

        fArr[(i2 >>> 1) % N] = i2;
        sArr[(-11 >>> 1) % N] = (short)(i2 = (int)((i2 + f2) + -2056904734L));
        for (long l1 : lArrFld) {
            vMeth2(i2, -2.718F, by1);
        }
        vMeth1_check_sum += i1 + i2 + l + Float.floatToIntBits(f2) + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(sArr);
    }

    public void vMeth(float f, float f1) {

        int i=-9, i11=82, i12=-212, i13=10, i14=-19358, i15=-88, i16=38631, i17=-143;
        boolean b1=true;

        i /= (int) ((((++i) - (Test0261.instanceCount++)) + (++i)) | 1);
        i -= (int)dFld;
        vMeth1(61, i, Test0261.instanceCount);
        for (i11 = 8; 244 > i11; i11++) {
            switch ((i11 % 9) + 117) {
            case 117:
                if (b1) break;
                for (i13 = i11; i13 < 7; i13++) {
                    Test0261.iArrFld[i11 - 1] *= Test0261.iFld;
                    i12 += i11;
                    if (b1) break;
                }
                Test0261.iArrFld[i11 + 1] -= i;
            case 118:
                for (i15 = 1; 7 > i15; i15++) {
                    Test0261.iArrFld[i15 + 1] = i14;
                    try {
                        Test0261.iArrFld[i15] = (i / i);
                        Test0261.iArrFld[i11 - 1] = (i16 % i);
                        i14 = (i17 % i17);
                    } catch (ArithmeticException a_e) {}
                    i <<= i14;
                }
                break;
            case 119:
                Test0261.instanceCount -= i16;
                break;
            case 120:
                byFld *= (byte)6;
                break;
            case 121:
                Test0261.iFld += i13;
                break;
            case 122:
                i12 <<= (int) Test0261.instanceCount;
                break;
            case 123:
                Test0261.iArrFld[i11 + 1] += i;
            case 124:
            case 125:
                lArrFld[i11] <<= Test0261.instanceCount;
                break;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i + i11 + i12 + (b1 ? 1 : 0) + i13 +
            i14 + i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i18=34, i19=-2, i20=-55955, i21=-1, i22=-32576, i23=38756, i24=35438, i25=6961, i26=7, i27=6;
        float f4=-36.517F;

        vMeth(-2.925F, Test0261.fFld);
        lArrFld[(-4 >>> 1) % N] += byFld;
        for (i18 = 19; i18 < 350; ++i18) {
            Test0261.iFld += i18;
            i19 = -8934;
        }
        for (i20 = 12; i20 < 225; i20++) {
            i22 = 1;
            while ((i22 += 3) < 118) {
                i19 = Test0261.iFld;
                Test0261.iFld += -52;
                i19 += (-123 + (i22 * i22));
                Test0261.instanceCount += Test0261.sFld;
                Test0261.instanceCount >>= i22;
                dFld = 215;
                i21 = i22;
                for (f4 = 4; f4 > 1; f4 -= 2) {
                    i23 += (int)(f4 * f4);
                    i19 *= (int) Test0261.instanceCount;
                    i21 += Test0261.sFld;
                    Test0261.iArrFld[i20] |= i18;
                    Test0261.iFld += (int) 97584231L;
                    Test0261.dArrFld = Test0261.dArrFld;
                    Test0261.iFld <<= i18;
                    lArrFld1 = lArrFld1;
                }
                Test0261.fFld += i22;
            }
            for (i24 = 118; i24 > 4; i24--) {
                byFld += (byte)i20;
                for (i26 = 1; i26 < 2; ++i26) {
                    Test0261.instanceCount >>= i26;
                    if (false) continue;
                    i19 += byFld;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 f4 = " + i21 + "," + i22 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 = " + i26 + "," + i27);

        FuzzerUtils.out.println("Test0261.instanceCount dFld Test0261.sFld = " + Test0261.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0261.sFld);
        FuzzerUtils.out.println("Test0261.iFld byFld Test0261.fFld = " + Test0261.iFld + "," + byFld + "," +
                Float.floatToIntBits(Test0261.fFld));
        FuzzerUtils.out.println("lArrFld Test0261.iArrFld Test0261.dArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(Test0261.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0261.dArrFld)));
        FuzzerUtils.out.println("lArrFld1 = " + FuzzerUtils.checkSum(lArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0261 _instance = new Test0261();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
