// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0700 {

    public static final int N = 400;

    public static long instanceCount=-5675790873249675606L;
    public static byte byFld=88;
    public static int iFld=-10033;
    public static int iFld1=-60327;
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0700.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, int i3, int i4) {

        int i5=-8, i6=-39257, i7=-1;
        short s1=16095;
        double d1=-14.2016;
        float f1=27.1021F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 1.308F);

        i4 -= i3;
        i5 = 1;
        while (++i5 < 288) {
            i6 = 1;
            do {
                i7 = 1;
                do {
                    i4 = i7;
                    s1 += (short) Test0700.instanceCount;
                    switch (((i5 % 2) * 5) + 92) {
                    case 98:
                        d1 = i5;
                        switch (((i5 % 2) * 5) + 32) {
                        case 35:
                            i3 = 43771;
                            break;
                        case 40:
                            i2 <<= (int) Test0700.instanceCount;
                        default:
                            Test0700.iFld += (i7 | Test0700.instanceCount);
                            Test0700.instanceCount += (((i7 * i7) + Test0700.iFld) - f1);
                            fArr[i6 + 1] += s1;
                            if (i5 != 0) {
                                vMeth2_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + s1 + Double.doubleToLongBits(d1) +
                                    Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                                return;
                            }
                        }
                        break;
                    case 95:
                        s1 -= (short)i4;
                        break;
                    default:
                        d1 += i4;
                    }
                } while (++i7 < 1);
            } while (++i6 < 6);
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + s1 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(double d) {

        float f2=2.530F;
        int i8=14579, i9=7;
        short s2=-4629;
        long l=-27832L;

        Test0700.byFld += (byte) Test0700.iFld;
        vMeth2(Test0700.iFld, 10, Test0700.iFld);
        for (f2 = 9; f2 < 342; ++f2) {
            Test0700.byFld = (byte) Test0700.iFld;
            i8 -= s2;
            Test0700.instanceCount -= -1297770515170251679L;
            Test0700.iFld += 80;
            Test0700.instanceCount += (long) ((long) f2 | i8);
            i8 >>>= Test0700.iFld;
            for (l = 1; l < 5; l++) {
                s2 -= (short) Test0700.iFld;
                i9 = i9;
                i9 *= i9;
                i8 += (int) (((l * i9) + i9) - Test0700.iFld1);
                i8 -= Test0700.iFld1;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i8 + s2 + l + i9;
    }

    public void vMeth(int i1, short s, float f) {

        int i10=7;
        int i11=14812;
        int i12=39;
        int i13=-58;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 15709);

        vMeth1(-2.59635);
        Test0700.iFld1 = Test0700.iFld1;
        for (i10 = 256; i10 > 1; --i10) {
            Test0700.instanceCount = i10;
            Test0700.iFld1 -= Test0700.iFld;
            f += i10;
            for (i12 = 1; i12 < 6; ++i12) {
                Test0700.iFld1 *= i1;
                Test0700.iFld1 <<= i10;
                Test0700.iFld1 |= (int) Test0700.instanceCount;
                iArr1[i10] |= -9524;
                iArr1[i12] += (int) Test0700.instanceCount;
            }
            i11 <<= Test0700.iFld;
        }
        Test0700.iFld += (int) f;
        Test0700.instanceCount = Test0700.iFld1;
        vMeth_check_sum += i1 + s + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-89;
        int i14=-8;
        int i15=0;
        int i16=-81;
        int i17=-116;
        int i18=-10;
        int i19=-48704;
        int i20=-215;
        int i21=140;
        int[][] iArr =new int[N][N];
        short s3=20092;
        short[] sArr =new short[N];
        float f3=0.605F;
        boolean b=false;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(dArr, -2.89607);
        FuzzerUtils.init(sArr, (short)-25349);

        i = iArr[(i >>> 1) % N][(i >>> 1) % N];
        vMeth(Test0700.iFld, s3, f3);
        for (i14 = 13; i14 < 253; i14++) {
            for (i16 = 5; i16 < 105; i16++) {
                for (i18 = 1; i18 < 2; ++i18) {
                    i19 = Test0700.byFld;
                    Test0700.bArrFld[i14] = b;
                    Test0700.iFld += (i18 | Test0700.instanceCount);
                    i17 = i19;
                    iArr[i14 - 1][i16] = i14;
                    f3 = (float)0.63987;
                }
                f3 += Test0700.byFld;
                i15 += (i16 ^ i16);
                switch ((i14 % 5) + 62) {
                case 62:
                    i17 = i19;
                    break;
                case 63:
                    Test0700.instanceCount /= (i14 | 1);
                case 64:
                    if (b) break;
                    i15 &= Test0700.iFld;
                    break;
                case 65:
                    Test0700.iFld1 += 105;
                    for (i20 = 1; 2 > i20; ++i20) {
                        Test0700.bArrFld[i14] = false;
                        s3 *= (short)f3;
                        f3 -= Test0700.iFld;
                        switch ((((i14 >>> 1) % 1) * 5) + 107) {
                        case 110:
                            f3 = Test0700.instanceCount;
                            break;
                        default:
                            iArr[i14 + 1][i14] *= Test0700.iFld;
                        }
                        switch ((i20 % 2) + 85) {
                        case 85:
                            dArr[i16 + 1] = i18;
                            Test0700.instanceCount -= 50158;
                            sArr = sArr;
                            break;
                        case 86:
                            i17 = i21;
                            break;
                        }
                    }
                    break;
                case 66:
                    i17 -= (int)f3;
                default:
                    i21 += i16;
                }
            }
        }

        FuzzerUtils.out.println("i s3 f3 = " + i + "," + s3 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("b i20 i21 = " + (b ? 1 : 0) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("iArr dArr sArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0700.instanceCount Test0700.byFld Test0700.iFld = " + Test0700.instanceCount + "," + Test0700.byFld +
                "," + Test0700.iFld);
        FuzzerUtils.out.println("Test0700.iFld1 Test0700.bArrFld = " + Test0700.iFld1 + "," + FuzzerUtils.checkSum(Test0700.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0700 _instance = new Test0700();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
