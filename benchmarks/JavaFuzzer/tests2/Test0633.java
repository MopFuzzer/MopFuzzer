// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0633 {

    public static final int N = 400;

    public static long instanceCount=-39449L;
    public static short sFld=10109;
    public static int iFld=-84;
    public static float fFld=30.402F;
    public static int iFld1=52790;
    public static boolean bFld=false;
    public static volatile long lFld=8045091780900232853L;
    public static long[] lArrFld =new long[N];
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0633.lArrFld, -3846533731L);
        FuzzerUtils.init(Test0633.iArrFld, 8);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i6, int i7, float f) {

        double d=55.28719, d1=-2.99624;
        int i8=-11210;
        int i9=-48439;
        int i10=228;
        int i11=11;
        int[] iArr =new int[N];
        byte by1=-82;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(bArr, false);

        i7 *= (int)f;
        for (d = 135; d > 6; --d) {
            i9 = 1;
            do {
                boolean b1=false;
                d1 = 12;
                switch ((int)((d % 9) + 75)) {
                case 75:
                    iArr[(i6 >>> 1) % N] = Test0633.sFld;
                    i6 += (int)d1;
                    Test0633.instanceCount |= 12;
                    switch ((i9 % 10) + 33) {
                    case 33:
                        i7 += i9;
                        i8 += (i9 + f);
                        break;
                    case 34:
                        for (i10 = 1; 1 < i10; --i10) {
                            i6 = by1;
                            Test0633.lArrFld[i9] = i8;
                            i11 = i6;
                        }
                        break;
                    case 35:
                        if (i7 != 0) {
                        }
                        break;
                    case 36:
                        i8 += Test0633.sFld;
                        break;
                    case 37:
                        f += (((i9 * i10) + i8) - f);
                        break;
                    case 38:
                        i11 = i11;
                    case 39:
                        Test0633.lArrFld[(int) (d - 1)] -= -39218;
                    case 40:
                        bArr[i9 + 1] = b1;
                        break;
                    case 41:
                        i8 += (i9 * i9);
                        break;
                    case 42:
                        if (i6 != 0) {
                        }
                    }
                    break;
                case 76:
                    i8 ^= i10;
                    break;
                case 77:
                    i8 = i7;
                    break;
                case 78:
                    i7 = i8;
                    break;
                case 79:
                    Test0633.lArrFld[(int) (d)] = Test0633.sFld;
                    break;
                case 80:
                    Test0633.instanceCount += (((i9 * Test0633.instanceCount) + i9) - i7);
                    break;
                case 81:
                    i11 = -132;
                    break;
                case 82:
                    by1 &= (byte)202;
                    break;
                case 83:
                    i11 = i10;
                    break;
                default:
                    i11 = -55859;
                }
            } while (++i9 < 12);
        }
        long meth_res = i6 + i7 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i8 + i9 +
            Double.doubleToLongBits(d1) + i10 + i11 + by1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i4, long l, int i5) {

        int i12=-23921, i13=17860, i14=-6, i15=-192, i16=-39823, i17=-3;
        boolean b2=false;
        byte by2=72;

        Test0633.instanceCount -= (-iMeth1(i4, i4, 2.520F));
        for (i12 = 5; i12 < 210; i12++) {
            if (Test0633.iFld != 0) {
            }
            for (i14 = 1; i14 < 8; i14++) {
                i5 *= (int)l;
                i15 = 10;
                i13 += (((i14 * Test0633.fFld) + Test0633.fFld) - Test0633.fFld);
                Test0633.instanceCount <<= i13;
                Test0633.fFld *= i4;
                switch (((i12 % 2) * 5) + 117) {
                case 127:
                    for (i16 = 2; i16 > 1; --i16) {
                        b2 = b2;
                        l >>= by2;
                        b2 = b2;
                        Test0633.instanceCount |= l;
                    }
                    break;
                case 120:
                    l = i15;
                default:
                    l = -207049669L;
                }
            }
        }
        long meth_res = i4 + l + i5 + i12 + i13 + i14 + i15 + i16 + i17 + (b2 ? 1 : 0) + by2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(boolean b, byte by, int i1) {

        int i2=-101, i3=55, i18=23013, i19=-58523;
        double d2=59.39716;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 1.162F);

        for (i2 = 17; i2 < 304; ++i2) {
            if (b) {
                Test0633.lArrFld = (Test0633.lArrFld = (Test0633.lArrFld = (Test0633.lArrFld = Test0633.lArrFld)));
                i3 *= (int) ((++fArr[i2 + 1]) * iMeth(i3, Test0633.instanceCount, Test0633.iFld1));
            }
            if (true) continue;
            Test0633.fFld -= Test0633.instanceCount;
            i3 -= (int)116.520F;
            for (d2 = 1; d2 < 6; d2++) {
                i3 += Test0633.iFld1;
                i19 = 1;
                do {
                    i18 += i18;
                } while (++i19 < 2);
                i3 <<= Test0633.iFld;
                b = false;
                Test0633.fFld += -13;
                Test0633.fFld *= -6;
            }
        }
        long meth_res = (b ? 1 : 0) + by + i1 + i2 + i3 + Double.doubleToLongBits(d2) + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-8;
        int i20=17778;
        int i21=-4005;
        int i22=38;
        int i23=-17024;
        int i24=-11;
        int i25=-28;
        int i26=1;
        int[][] iArr1 =new int[N][N];
        byte by3=-115;
        double d3=100.2817;
        long l1=-245L;

        FuzzerUtils.init(iArr1, 95);

        i = (int) ((dMeth(Test0633.bFld, by3, Test0633.iFld1) - Test0633.instanceCount) - Test0633.iFld);
        Test0633.instanceCount = Test0633.iFld;
        Test0633.iFld = -1;
        switch ((((-7 >>> 1) % 1) * 5) + 10) {
        case 13:
            d3 -= Test0633.iFld;
            Test0633.instanceCount -= (long) d3;
            for (i20 = 356; i20 > 19; i20--) {
                for (i22 = 3; 75 > i22; ++i22) {
                    switch ((i20 % 9) + 24) {
                    case 24:
                        Test0633.iArrFld[i20] += Test0633.iFld;
                        i += (((i22 * Test0633.instanceCount) + l1) - Test0633.lFld);
                        Test0633.iArrFld[i22 - 1] = i23;
                        d3 -= i23;
                        break;
                    case 25:
                        i -= -36767;
                        i = (int)d3;
                        break;
                    case 26:
                        i24 = 1;
                        do {
                            Test0633.instanceCount += Test0633.iFld;
                            Test0633.iFld1 += (int) d3;
                            Test0633.bFld = true;
                            i21 += (int)d3;
                        } while (++i24 < 2);
                        Test0633.iFld += i22;
                        Test0633.bFld = true;
                        if (Test0633.bFld) break;
                        break;
                    case 27:
                        iArr1 = FuzzerUtils.int2array(N, (int)-59);
                        l1 += Test0633.lFld;
                        break;
                    case 28:
                        for (i25 = 1; i25 < 2; ++i25) {
                            Test0633.fFld = i20;
                            i26 += i25;
                            i21 += (i25 + i23);
                        }
                        l1 -= Test0633.lFld;
                        break;
                    case 29:
                        Test0633.instanceCount >>= i20;
                    case 30:
                        Test0633.instanceCount += i25;
                        break;
                    case 31:
                        Test0633.iArrFld[i22 - 1] = (int) d3;
                        break;
                    case 32:
                        Test0633.instanceCount -= Test0633.sFld;
                        break;
                    }
                }
            }
            break;
        }

        FuzzerUtils.out.println("i by3 d3 = " + i + "," + by3 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 l1 i24 = " + i23 + "," + l1 + "," + i24);
        FuzzerUtils.out.println("i25 i26 iArr1 = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0633.instanceCount Test0633.sFld Test0633.iFld = " + Test0633.instanceCount + "," + Test0633.sFld +
                "," + Test0633.iFld);
        FuzzerUtils.out.println("Test0633.fFld Test0633.iFld1 Test0633.bFld = " + Float.floatToIntBits(Test0633.fFld) + "," +
                Test0633.iFld1 + "," + (Test0633.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0633.lFld Test0633.lArrFld Test0633.iArrFld = " + Test0633.lFld + "," +
                FuzzerUtils.checkSum(Test0633.lArrFld) + "," + FuzzerUtils.checkSum(Test0633.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0633 _instance = new Test0633();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
