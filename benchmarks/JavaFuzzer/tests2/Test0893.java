// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0893 {

    public static final int N = 400;

    public static long instanceCount=-3577867741086870348L;
    public float fFld=-86.82F;
    public static boolean bFld=false;
    public static long lFld=2287096469873438935L;
    public static short sFld=-8398;
    public int[] iArrFld =new int[N];
    public double[] dArrFld =new double[N];

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l2, long l3) {

        int i6=1;
        int i7=21716;
        int i8=-1;
        int i9=-19007;
        int i10=-112;
        int[] iArr =new int[N];
        float f=-78.518F;
        byte by=-36;
        short s=29657;

        FuzzerUtils.init(iArr, -11);

        Test0893.bFld = Test0893.bFld;
        Test0893.instanceCount = Test0893.instanceCount;
        l2 >>= i6;
        for (i7 = 3; i7 < 166; ++i7) {
            i6 += (int)f;
            i6 *= i7;
            l3 -= by;
            i6 = i8;
            if (Test0893.bFld) break;
        }
        for (i9 = 159; i9 > 5; i9 -= 2) {
            double d=-1.51124;
            iArr[i9] += s;
            d %= (l2 | 1);
            iArr[i9] &= i7;
            try {
                i10 = (i8 / -163);
                i10 = (i8 / iArr[i9 + 1]);
                i8 = (i9 / -34449);
            } catch (ArithmeticException a_e) {}
        }
        Test0893.bFld = Test0893.bFld;
        long meth_res = l2 + l3 + i6 + i7 + i8 + Float.floatToIntBits(f) + by + i9 + i10 + s +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l1) {

        int i11=126, i12=-91, i13=-105, i14=215, i15=-42400, i16=78, i17=0, i18=-59412;
        float f1=47.288F;
        double d1=-22.22878;

        Test0893.instanceCount = (iMeth1(37053L, l1) + i11);
        Test0893.instanceCount >>= i11;
        Test0893.lFld >>= l1;
        for (i12 = 230; i12 > 1; i12 -= 3) {
            f1 = -62311;
            Test0893.bFld = Test0893.bFld;
        }
        i13 <<= i13;
        i14 = 1;
        while (++i14 < 393) {
            d1 += i13;
            i11 += (((i14 * i12) + i14) - i13);
        }
        for (i15 = 5; 335 > i15; i15++) {
            for (i17 = 1; 5 > i17; i17++) {
                i18 <<= (int) Test0893.lFld;
                i13 += (((i17 * i15) + Test0893.instanceCount) - i11);
                i13 += (i17 ^ i14);
            }
        }
        long meth_res = l1 + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14 + Double.doubleToLongBits(d1) + i15 + i16
            + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i4, long l, int i5) {

        int i19=-2;
        int i20=46805;
        int i21=0;
        int i22=0;
        int[] iArr1 =new int[N];
        long l4=-2172642607L;
        byte by1=-49;

        FuzzerUtils.init(iArr1, -23939);

        i4 ^= (int) ((iMeth(Test0893.instanceCount) + i4) * Test0893.lFld);
        for (i19 = 5; i19 < 192; ++i19) {
            i20 >>= i19;
            i20 += (i19 * i19);
            i21 = 1;
            do {
                i22 = 1;
                do {
                    Test0893.sFld = (short) 2951869305L;
                    i5 = i5;
                    l += Test0893.sFld;
                    iArr1[i19 + 1] -= i21;
                    l4 >>>= 43787;
                    i5 *= by1;
                    l4 += (i22 * i22);
                } while (++i22 < 1);
                iArr1[i19] = i4;
                iArr1 = FuzzerUtils.int1array(N, (int)-57079);
            } while (++i21 < 9);
        }
        long meth_res = i4 + l + i5 + i19 + i20 + i21 + i22 + l4 + by1 + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=63433, i1=18, i2=13, i3=-13, i23=-5290, i24=-51, i25=4;
        byte by2=-21;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 0.474F);
        FuzzerUtils.init(lArr, -7932510713555496103L);

        i = (--i);
        i *= (int)(fFld--);
        for (i1 = 287; i1 > 7; i1 -= 3) {
            i3 = 1;
            while ((i3 += 3) < 269) {
                Test0893.instanceCount += i3;
                i = (int) (lMeth(-252, Test0893.instanceCount, -10) + i1);
                switch (((i3 % 1) * 5) + 83) {
                case 84:
                    i += i3;
                    break;
                }
                i2 = i;
                iArrFld[i3] = Test0893.sFld;
                Test0893.instanceCount += 14720;
                i >>= i1;
            }
            Test0893.lFld -= i1;
            try {
                i = (iArrFld[i1 - 1] % iArrFld[i1]);
                i = (i1 % i3);
                i2 = (i % 148);
            } catch (ArithmeticException a_e) {}
            if (Test0893.bFld) {
                fArr[i1] *= i3;
                i23 = 1;
                do {
                    i = Test0893.sFld;
                    by2 = (byte)7;
                    i += (((i23 * i1) + Test0893.lFld) - Test0893.instanceCount);
                    i += i1;
                    iArrFld[i1 + 1] *= 40843;
                    for (i24 = 1; i24 < 1; i24++) {
                        lArr[i23 + 1] += i1;
                        switch (((-27357 >>> 1) % 1) + 118) {
                        case 118:
                            i2 += i2;
                            break;
                        default:
                            Test0893.instanceCount += (i24 - Test0893.instanceCount);
                            Test0893.instanceCount -= i;
                            Test0893.lFld *= i23;
                        }
                        dArrFld[i23] = i25;
                    }
                } while (++i23 < 269);
            } else if (Test0893.bFld) {
                i25 += (((i1 * i23) + i23) - Test0893.sFld);
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i23 by2 = " + i3 + "," + i23 + "," + by2);
        FuzzerUtils.out.println("i24 i25 fArr = " + i24 + "," + i25 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0893.instanceCount fFld Test0893.bFld = " + Test0893.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + (Test0893.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0893.lFld Test0893.sFld iArrFld = " + Test0893.lFld + "," + Test0893.sFld + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0893 _instance = new Test0893();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
