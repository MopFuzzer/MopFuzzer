// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0289 {

    public static final int N = 400;

    public static long instanceCount=-50758L;
    public int iFld=-33;
    public static volatile double dFld=101.98086;
    public static volatile byte byFld=47;

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4) {

        int i5=1941, i6=-160, i7=-15797, i8=157;
        boolean b=true;

        i5 = 1;
        while (++i5 < 304) {
            Test0289.instanceCount += i4;
            switch ((((i4 >>> 1) % 1) * 5) + 81) {
            case 86:
                i4 = (int) Test0289.instanceCount;
                i4 = i5;
                if (b) break;
                break;
            }
            i4 = i4;
            i4 += (i5 * i5);
            Test0289.dFld = i5;
            i4 += i5;
            Test0289.instanceCount += (i5 * i4);
            for (i6 = 1; 5 > i6; ++i6) {
                i8 = 1;
                while (++i8 < 2) {
                    i4 >>= (int)-631873155L;
                    i7 >>= i7;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + (b ? 1 : 0) + i6 + i7 + i8;
    }

    public static long lMeth(double d1, short s, long l) {

        int i9=49768;
        int i10=-4;
        int i11=-202;
        int i12=9;
        int i13=-29535;
        int i14=-13;
        int i15=-12;
        int i16=14;
        int[] iArr1 =new int[N];
        long l1=-1L;
        boolean b1=false;

        FuzzerUtils.init(iArr1, -104);

        vMeth1(i9);
        for (i10 = 6; i10 < 356; i10++) {
            if (false) {
                i11 = 64192;
            }
            for (i12 = 1; i12 < 5; ++i12) {
                try {
                    i11 = (iArr1[i10] % -176);
                    i13 = (-887755221 / i11);
                    iArr1[i10 - 1] = (i9 % 221);
                } catch (ArithmeticException a_e) {}
            }
            for (i14 = 1; i14 < 5; i14++) {
                s += (short)(i14 * i10);
                if (i14 != 0) {
                }
                Test0289.instanceCount = i10;
                for (l1 = 1; l1 < 2; ++l1) {
                    i15 += (int)(l1 * l1);
                    if (b1) continue;
                    l >>= 546089261994275295L;
                    iArr1[i14 + 1] *= i11;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + s + l + i9 + i10 + i11 + i12 + i13 + i14 + i15 + l1 + i16 + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i3) {

        float f1=77.844F, f2=70.251F;
        short s1=2650;
        int i17=-10;
        int i18=-27565;
        int i19=-10;
        int i20=-208;
        int i21=-10141;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, 7);

        i3 = (int)f1;
        lMeth(Test0289.dFld, (short) (-12351), Test0289.instanceCount);
        s1 += (short)i3;
        for (i17 = 14; i17 < 290; ++i17) {
            for (f2 = 1; f2 < 6; f2 += 3) {
                for (i20 = 1; i20 < 6; ++i20) {
                    i19 += i20;
                    i19 = i18;
                    Test0289.dFld = i19;
                    i21 = i19;
                }
                Test0289.byFld = (byte) Test0289.instanceCount;
                f1 += i18;
                try {
                    i3 = (iArr2[(int)(f2)] / -107);
                    iArr2[i17 + 1] = (i18 % 44390);
                    i3 = (-2065378095 / i18);
                } catch (ArithmeticException a_e) {}
                if (i17 != 0) {
                    vMeth_check_sum += i3 + Float.floatToIntBits(f1) + s1 + i17 + i18 + Float.floatToIntBits(f2) + i19
                        + i20 + i21 + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                i21 = i21;
            }
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f1) + s1 + i17 + i18 + Float.floatToIntBits(f2) + i19 + i20 + i21
            + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-6;
        int i1=62139;
        int i2=-229;
        int i22=-37735;
        int i23=60;
        int[] iArr =new int[N];
        int[] iArr3 =new int[N];
        float f=94.452F;
        double d=-78.31782;
        boolean b2=false;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, 63127);
        FuzzerUtils.init(byArr, (byte)-73);
        FuzzerUtils.init(iArr3, -10);

        i = 1;
        do {
            iFld += (int) (((f + Test0289.instanceCount) + (i * -94)) - iArr[i + 1]);
            for (i1 = 1; i1 < 205; ++i1) {
                iArr[(i1 >>> 1) % N] += (i1 + i1);
                iFld <<= iArr[i + 1];
                f = ((f--) - Integer.reverseBytes((int)(d % ((long)(d) | 1))));
                vMeth(-96);
                i2 = -3;
                b2 = b2;
                switch (((i % 2) * 5) + 73) {
                case 82:
                    Test0289.instanceCount -= Test0289.instanceCount;
                    for (i22 = 1; i22 < 2; i22++) {
                        i2 = i;
                        Test0289.dFld += f;
                        i23 = (int) Test0289.instanceCount;
                        if (false) break;
                        switch (((i1 >>> 1) % 3) + 37) {
                        case 37:
                            switch ((i % 10) + 65) {
                            case 65:
                                iFld += (((i22 * i1) + i23) - Test0289.instanceCount);
                            case 66:
                                iFld = i22;
                                Test0289.byFld >>>= (byte) -14;
                                f %= (i22 | 1);
                                iFld <<= i2;
                                break;
                            case 67:
                                Test0289.dFld *= d;
                                d = i1;
                                break;
                            case 68:
                                byArr[i1 + 1] = (byte) Test0289.instanceCount;
                                try {
                                    i23 = (i % iArr[i1 + 1]);
                                    iArr[i + 1] = (i23 / i);
                                    iArr3[i + 1] = (i2 % iFld);
                                } catch (ArithmeticException a_e) {}
                            case 69:
                                iArr[i22 + 1] |= iFld;
                                i2 += (i22 | i22);
                                Test0289.instanceCount += (i22 * Test0289.instanceCount);
                                break;
                            case 70:
                                f = iFld;
                            case 71:
                                Test0289.instanceCount = i23;
                                break;
                            case 72:
                                f += -4080034791412012497L;
                                break;
                            case 73:
                                if (b2) continue;
                            case 74:
                                iFld <<= 12;
                                break;
                            }
                            break;
                        case 38:
                            iFld += (int) Test0289.instanceCount;
                            break;
                        case 39:
                            Test0289.instanceCount -= i23;
                            break;
                        default:
                            i23 += Test0289.byFld;
                        }
                    }
                    break;
                case 76:
                    iArr = FuzzerUtils.int1array(N, (int)-8);
                    break;
                }
            }
        } while (++i < 122);

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i2 d b2 = " + i2 + "," + Double.doubleToLongBits(d) + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i22 i23 iArr = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("byArr iArr3 = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0289.instanceCount iFld Test0289.dFld = " + Test0289.instanceCount + "," + iFld + "," +
                Double.doubleToLongBits(Test0289.dFld));
        FuzzerUtils.out.println("Test0289.byFld = " + Test0289.byFld);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0289 _instance = new Test0289();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
