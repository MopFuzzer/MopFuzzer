// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0989 {

    public static final int N = 400;

    public static long instanceCount=1473127199065330545L;
    public static volatile long lFld=5974704573618369466L;
    public static int iFld=-9;
    public static float fFld=1.276F;
    public static volatile long[] lArrFld =new long[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0989.lArrFld, 237L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i4) {

        int i5=6;
        int i6=-41792;
        int i7=-21462;
        int i8=-2908;
        int i9=0;
        int i10=241;
        int i11=-4;
        int[] iArr =new int[N];
        double d1=-15.102112;
        long l2=4L;
        byte by=-49;

        FuzzerUtils.init(iArr, 50917);

        for (i5 = 2; i5 < 193; i5++) {
            for (i7 = 1; i7 < 8; ++i7) {
                d1 += i8;
                i9 = 1;
                do {
                    Test0989.instanceCount -= i6;
                    i8 -= (int)d1;
                    l2 += (i9 | i6);
                    i6 = (int) Test0989.instanceCount;
                } while (++i9 < 2);
                Test0989.lArrFld = Test0989.lArrFld;
                i4 = -45861;
                for (i10 = 1; i10 < 2; i10++) {
                    iArr[i5 - 1] = -37733;
                    i8 += i10;
                    by *= (byte)-4;
                }
                l2 += (((i7 * l1) + i9) - i8);
            }
        }
        vMeth2_check_sum += l1 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) + i9 + l2 + i10 + i11 + by +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i3) {

        int i12=-44631, i13=-6, i14=-6;

        vMeth2(Test0989.instanceCount, i3);
        i12 = 1;
        while (++i12 < 132) {
            boolean b=false;
            double d2=32.57624;
            for (i13 = 1; i13 < 12; ++i13) {
                try {
                    i14 = (i14 / i14);
                    i14 = (i12 % i13);
                    i3 = (i12 / -12);
                } catch (ArithmeticException a_e) {}
            }
            Test0989.lArrFld[i12] -= i14;
            switch (((i13 >>> 1) % 1) + 95) {
            case 95:
                if (b) break;
                i3 -= 43825;
                if (i13 != 0) {
                    vMeth1_check_sum += i3 + i12 + i13 + i14;
                    return;
                }
                Test0989.instanceCount -= 86;
            }
            d2 -= 1;
            i3 += (i12 * i12);
            i3 = i12;
            Test0989.lFld -= i12;
            Test0989.iFld += i3;
        }
        vMeth1_check_sum += i3 + i12 + i13 + i14;
    }

    public static void vMeth(int i1, int i2) {

        float f=60.547F;
        double d=2.36648;
        int i15=53464;
        int i16=-2;
        int i17=1;
        int i18=5;
        int i20=-203;
        int i21=11;
        int[] iArr1 =new int[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr1, -48918);
        FuzzerUtils.init(sArr, (short)24978);

        Test0989.instanceCount = (long) (((f--) - (d - f)) * (Test0989.instanceCount++));
        vMeth1(8);
        iArr1 = iArr1;
        for (i15 = 8; i15 < 162; ++i15) {
            for (i17 = 1; i17 < 10; ++i17) {
                Test0989.lFld = i2;
                Test0989.lFld = i1;
                i2 += i17;
                Test0989.lFld -= -210;
                Test0989.instanceCount <<= Test0989.lFld;
                i18 = i16;
            }
            f += i15;
            for (i20 = 1; i20 < 10; i20++) {
                i16 += (((i20 * Test0989.instanceCount) + i16) - i21);
                sArr[i15 - 1] *= (short)f;
            }
        }
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i15 + i16 + i17 + i18 + i20
            + i21 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        long l=-5614737062017558547L;
        int i=7987;
        int i22=28742;
        int i23=-4;
        int i24=-41364;
        int i25=-75;
        int i27=-60554;
        int i28=-47094;
        int i29=11;
        int i30=62;
        int i31=-13;
        int i32=-3;
        int[] iArr2 =new int[N];
        byte by1=84;
        double d3=-2.111207;
        short s=16466;
        boolean b1=true;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -6);

        for (l = 5; l < 144; l++) {
            switch ((int)((l % 1) + 98)) {
            case 98:
                vMeth(i, Test0989.iFld);
                for (i22 = 2; i22 < 180; i22++) {
                    for (i24 = 1; i24 < 2; i24++) {
                        Test0989.iFld = by1;
                        d3 = i22;
                        i25 <<= i24;
                        Test0989.lFld += (i24 * Test0989.iFld);
                        Test0989.lFld = Test0989.iFld;
                        Test0989.instanceCount = 28696;
                        i23 -= -1;
                    }
                    s = (short)-10;
                    bArr[i22] = b1;
                    dArrFld[i22] += Test0989.fFld;
                    i23 += (((i22 * i) + i22) - Test0989.fFld);
                }
                Test0989.lFld += l;
                i23 >>= i;
                break;
            }
        }
        for (int i26 : iArr2) {
            for (i27 = 2; 63 > i27; ++i27) {
                i28 *= i26;
                Test0989.lFld += s;
                by1 ^= (byte)4;
            }
            for (i29 = 1; 63 > i29; ++i29) {
                i28 -= i22;
                for (i31 = 1; i31 < 2; i31 += 2) {
                    Test0989.lFld >>= i22;
                    i30 += (i31 ^ i32);
                    Test0989.lFld >>= i25;
                    d3 -= l;
                }
            }
        }

        FuzzerUtils.out.println("l i i22 = " + l + "," + i + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("by1 d3 s = " + by1 + "," + Double.doubleToLongBits(d3) + "," + s);
        FuzzerUtils.out.println("b1 i27 i28 = " + (b1 ? 1 : 0) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 bArr iArr2 = " + i32 + "," + FuzzerUtils.checkSum(bArr) + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0989.instanceCount Test0989.lFld Test0989.iFld = " + Test0989.instanceCount + "," + Test0989.lFld +
                "," + Test0989.iFld);
        FuzzerUtils.out.println("Test0989.fFld Test0989.lArrFld dArrFld = " + Float.floatToIntBits(Test0989.fFld) + "," +
                FuzzerUtils.checkSum(Test0989.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0989 _instance = new Test0989();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
