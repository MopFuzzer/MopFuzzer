// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0961 {

    public static final int N = 400;

    public static long instanceCount=-347298353L;
    public static double dFld=-121.120380;
    public static float fFld=-62.176F;
    public static long lFld=207L;
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0961.iArrFld, -36261);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i3, byte by) {

        int i4=63;
        int i5=-196;
        int i6=-192;
        int i7=-37141;
        int i8=-5;
        int i9=-3595;
        int[] iArr =new int[N];
        float f1=16.6F, f2=0.448F;
        short s=9852;
        boolean b=true;

        FuzzerUtils.init(iArr, -41894);

        for (i4 = 22; 396 > i4; i4++) {
            i3 += (((i4 * i5) + i5) - i6);
            f1 -= 38530;
            f2 *= Test0961.instanceCount;
            i3 -= i5;
            for (i7 = 1; i7 < 5; ++i7) {
                i3 += (((i7 * i5) + i6) - Test0961.instanceCount);
                if (i3 != 0) {
                }
                i9 = 1;
                do {
                    s >>= (short)-102;
                    s = (short) Test0961.instanceCount;
                    try {
                        i8 = (-29530 / i6);
                        i5 = (63149 % i9);
                        i3 = (iArr[i9] / i6);
                    } catch (ArithmeticException a_e) {}
                    if (b) break;
                    i6 += i9;
                    iArr[i4 - 1] += (int)f1;
                } while ((i9 += 3) < 2);
            }
        }
        long meth_res = i3 + by + i4 + i5 + i6 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i7 + i8 + i9 + s
            + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i1, float f, int i2) {

        byte by1=33;
        short s1=8467;
        int i10=-8, i11=-10, i12=-64770;

        Test0961.dFld *= lMeth(i2, by1);
        i2 = (int) Test0961.instanceCount;
        i2 = s1;
        Test0961.iArrFld[(i1 >>> 1) % N] += i2;
        i10 = 1;
        do {
            i2 = -20125;
            Test0961.instanceCount += (i10 * i10);
            i2 += (i10 * i10);
            if (i1 != 0) {
                vMeth1_check_sum += i1 + Float.floatToIntBits(f) + i2 + by1 + s1 + i10 + i11 + i12;
                return;
            }
            Test0961.iArrFld[i10 + 1] = i2;
            i2 += i10;
            for (i11 = 1; i11 < 5; i11++) {
                try {
                    i2 = (Test0961.iArrFld[i10] / i2);
                    i2 = (-408344820 % i11);
                    i2 = (-62 / i2);
                } catch (ArithmeticException a_e) {}
                i2 *= (int) Test0961.instanceCount;
                f += i10;
            }
        } while (++i10 < 353);
        vMeth1_check_sum += i1 + Float.floatToIntBits(f) + i2 + by1 + s1 + i10 + i11 + i12;
    }

    public static void vMeth() {

        int i=5270, i13=-164, i14=-11, i15=147;
        double d=-1.120786, d1=-1.41175;
        float f3=83.678F;
        byte by2=96;
        short s2=-5893;

        i *= (int) ((++Test0961.instanceCount) * d);
        vMeth1(i, Test0961.fFld, i);
        for (i13 = 5; i13 < 285; i13++) {
            f3 = 1;
            do {
                boolean b1=true;
                if (b1) {
                    for (d1 = 1; d1 < 1; ++d1) {
                        by2 ^= (byte)4196300718593135908L;
                        i = (int) Test0961.instanceCount;
                    }
                    i15 = i15;
                    Test0961.instanceCount = 1615;
                    vMeth_check_sum += i + Double.doubleToLongBits(d) + i13 + i14 + Float.floatToIntBits(f3) +
                        Double.doubleToLongBits(d1) + i15 + by2 + s2;
                    return;
                } else if (b1) {
                    i14 += (int) (((f3 * i13) + Test0961.instanceCount) - i);
                    vMeth_check_sum += i + Double.doubleToLongBits(d) + i13 + i14 + Float.floatToIntBits(f3) +
                        Double.doubleToLongBits(d1) + i15 + by2 + s2;
                    return;
                } else if (false) {
                    s2 *= (short)i14;
                    i >>= by2;
                }
                i15 = (int) Test0961.instanceCount;
                i15 = 5444;
            } while (++f3 < 6);
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i13 + i14 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(d1) + i15 + by2 + s2;
    }

    public void mainTest(String[] strArr1) {

        int i16=6498, i17=1, i18=-4, i19=-11, i20=2, i21=-12;
        double d2=-38.57564;
        short s3=-780;
        byte by3=-28;
        boolean b2=true;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 11L);

        vMeth();
        for (i16 = 10; i16 < 278; ++i16) {
            i17 += (i16 ^ i16);
            Test0961.lFld -= i16;
            i18 *= i18;
            i17 += (i16 * i16);
            Test0961.lFld *= (long) Test0961.fFld;
        }
        i17 *= (int) Test0961.fFld;
        i18 += (int)4490788830220481614L;
        if (b2) {
            i19 = 1;
            while (++i19 < 264) {
                i17 = i17;
                for (d2 = i19; d2 < 95; ++d2) {
                    i17 -= i19;
                    i17 -= i16;
                    i21 = 1;
                    while ((i21 -= 2) > 0) {
                        i20 -= (int)-5L;
                        Test0961.lFld /= (Test0961.instanceCount | 1);
                        Test0961.iArrFld = Test0961.iArrFld;
                        switch ((i19 % 1) + 119) {
                        case 119:
                            Test0961.lFld -= Test0961.instanceCount;
                            s3 &= (short)i20;
                            switch ((i21 % 7) + 123) {
                            case 123:
                                Test0961.instanceCount = by3;
                                break;
                            case 124:
                                i18 = by3;
                                try {
                                    i18 = (i19 % Test0961.iArrFld[i19]);
                                    i20 = (i16 % i21);
                                    i17 = (Test0961.iArrFld[i21 - 1] % i19);
                                } catch (ArithmeticException a_e) {}
                                Test0961.lFld = i20;
                                Test0961.fFld += (-7 + (i21 * i21));
                                break;
                            case 125:
                                i17 >>>= (int) Test0961.lFld;
                                lArr[(int)(d2)] = lArr[i21 - 1];
                            case 126:
                                Test0961.lFld |= i21;
                            case 127:
                                if (b2) continue;
                                break;
                            case 128:
                                i18 += 211;
                                break;
                            case 129:
                                i17 += (i21 * i18);
                            }
                            break;
                        default:
                            i18 = i19;
                        }
                    }
                }
            }
        } else {
            i20 += i16;
        }

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 d2 i20 = " + i19 + "," + Double.doubleToLongBits(d2) + "," + i20);
        FuzzerUtils.out.println("i21 s3 by3 = " + i21 + "," + s3 + "," + by3);
        FuzzerUtils.out.println("b2 lArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0961.instanceCount Test0961.dFld Test0961.fFld = " + Test0961.instanceCount + "," +
                Double.doubleToLongBits(Test0961.dFld) + "," + Float.floatToIntBits(Test0961.fFld));
        FuzzerUtils.out.println("Test0961.lFld Test0961.iArrFld = " + Test0961.lFld + "," + FuzzerUtils.checkSum(Test0961.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0961 _instance = new Test0961();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
