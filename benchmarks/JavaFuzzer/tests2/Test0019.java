// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0019 {

    public static final int N = 400;

    public static long instanceCount=8404307804528201380L;
    public volatile byte byFld=6;
    public static volatile long lFld=523798189L;
    public static volatile int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public int[][] iArrFld1 =new int[N][N];

    static {
        FuzzerUtils.init(Test0019.iArrFld, 8979);
        FuzzerUtils.init(Test0019.fArrFld, -84.697F);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l3, int i8, int i9) {

        int i10=13, i11=-107, i12=-153, i13=20559;
        double d1=-1.119874, d2=2.112464;
        float f3=-1.318F;
        byte by=127;
        boolean b1=true;
        long l4=10L;
        long[] lArr =new long[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(lArr, 3505432962803624048L);
        FuzzerUtils.init(sArr, (short)27717);

        switch ((((-187 >>> 1) % 6) * 5) + 45) {
        case 53:
            for (i10 = 1; i10 < 311; i10++) {
                try {
                    i8 = (i9 / -20427);
                    i9 = (i11 % i9);
                    Test0019.iArrFld[i10 - 1] = (i8 / -38007);
                } catch (ArithmeticException a_e) {}
            }
            i8 = (int)-45.76874;
            lArr[(i9 >>> 1) % N] *= i11;
            for (i12 = 16; i12 < 342; ++i12) {
                l3 ^= i12;
                i11 = (int)d1;
                l3 += i8;
                i13 += (i12 | l3);
            }
            break;
        case 67:
            switch (((3 >>> 1) % 10) + 55) {
            case 55:
                i13 += (int)d1;
                f3 -= l3;
                break;
            case 56:
                d2 = i8;
                i9 <<= -42844;
                break;
            case 57:
                Test0019.iArrFld[(i12 >>> 1) % N] *= -161;
                break;
            case 58:
                by -= (byte)l3;
                break;
            case 59:
                lArr[(i11 >>> 1) % N] += i9;
                break;
            case 60:
                Test0019.iArrFld[(0 >>> 1) % N] += i11;
            case 61:
                l3 %= ((long)(f3) | 1);
            case 62:
                Test0019.instanceCount -= Test0019.instanceCount;
                break;
            case 63:
                i8 *= (int)l3;
            case 64:
                b1 = b1;
            default:
                i9 *= i13;
            }
            break;
        case 48:
            i11 = (int)l3;
            break;
        case 50:
            sArr[(6 >>> 1) % N] = (short)i12;
        case 65:
            d1 *= i12;
        case 68:
            i8 -= (int)l4;
        default:
            i11 = i9;
        }
        long meth_res = l3 + i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(d2) + by + (b1 ? 1 : 0) + l4 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth(long l1) {

        int i3=52211, i4=27964, i5=-55097, i6=-1, i7=-14732;
        float f2=100.842F;
        boolean b=true;
        long l2=-115L;
        double d3=16.41915;
        short s=-12997;

        for (i3 = 11; 225 > i3; i3 += 3) {
            f2 += Integer.reverseBytes(167);
            b = (b = (b = (b = true)));
        }
        for (l2 = 4; 343 > l2; l2 += 2) {
            for (i6 = 1; i6 < 9; i6++) {
                f2 += (((i6 * l1) + Test0019.instanceCount) - i3);
                iMeth1(Test0019.instanceCount, i7, -187);
                i4 *= (int)d3;
                switch (((i6 % 8) * 5) + 48) {
                case 81:
                    f2 -= i5;
                    if (i3 != 0) {
                    }
                    break;
                case 77:
                    s /= (short)-129L;
                    i5 += -60237;
                    f2 += i5;
                    b = b;
                    break;
                case 68:
                    i7 += (i6 + i7);
                    break;
                case 70:
                    if (b) break;
                    break;
                case 78:
                    i7 -= i7;
                case 74:
                    i7 = s;
                    break;
                case 65:
                case 54:
                    i7 += (i6 * i6);
                    break;
                }
            }
        }
        long meth_res = l1 + i3 + i4 + Float.floatToIntBits(f2) + (b ? 1 : 0) + l2 + i5 + i6 + i7 +
            Double.doubleToLongBits(d3) + s;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(long l, int i1, int i2) {

        double d=0.113200;
        float f1=0.161F;
        int i14=-29648, i15=-8650, i16=1, i17=14;

        d += Test0019.iArrFld[(-27704 >>> 1) % N];
        f1 -= ((Test0019.iArrFld[(i2 >>> 1) % N] - (Test0019.instanceCount - i1)) + (fMeth(Test0019.instanceCount) * -25060));
        f1 += i1;
        for (float f4 : Test0019.fArrFld) {
            for (i14 = 1; i14 < 4; ++i14) {
                Test0019.fArrFld[i14 + 1] -= 8L;
            }
            f4 *= i1;
            i2 |= i1;
            i1 = -40693;
            i2 <<= 34;
            for (i16 = 1; i16 < 4; ++i16) {
                i1 += (i16 ^ (long)f1);
            }
            i17 += i14;
        }
        Test0019.iArrFld[(i1 >>> 1) % N] -= (int) l;
        Test0019.iArrFld[(i1 >>> 1) % N] = 5;
        long meth_res = l + i1 + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i14 + i15 + i16 + i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-13, i18=0, i19=50756, i20=155, i21=-45109, i22=-11, i23=116, i24=14, i25=140, i26=-9210;
        float f=-75.970F, f5=-24.812F;
        boolean b2=true;
        double d4=-2.18690;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -3.29269);

        i = (int)(f % (i | 1));
        iMeth(Test0019.instanceCount, i, i);
        i += i;
        for (i18 = 2; 185 > i18; ++i18) {
            i += (i18 | i19);
            Test0019.instanceCount -= -64;
            for (f5 = i18; f5 < 137; f5++) {
                Test0019.iArrFld[(int) (f5 + 1)] = i21;
            }
            i21 += (((i18 * f) + i18) - byFld);
            i20 -= i20;
            Test0019.instanceCount += (((i18 * byFld) + i20) - f5);
            if (b2) continue;
            i += (i18 - f);
        }
        i21 -= (int)f5;
        b2 = b2;
        dArr[(i >>> 1) % N] += -5;
        for (d4 = 2; 333 > d4; d4++) {
            Test0019.iArrFld = Test0019.iArrFld;
            i20 += (int)d4;
            i22 = (int) Test0019.lFld;
            iArrFld1 = iArrFld1;
            byFld >>= (byte)214;
            Test0019.lFld -= i22;
            i19 = i22;
            for (i23 = 2; 76 > i23; i23 += 3) {
                iArrFld1[i23][(int) (d4 - 1)] = (int) Test0019.lFld;
                i19 = (int) Test0019.lFld;
                for (i25 = 1; i25 < 4; ++i25) {
                    Test0019.instanceCount = i23;
                    i24 >>>= i21;
                }
            }
        }

        FuzzerUtils.out.println("i f i18 = " + i + "," + Float.floatToIntBits(f) + "," + i18);
        FuzzerUtils.out.println("i19 f5 i20 = " + i19 + "," + Float.floatToIntBits(f5) + "," + i20);
        FuzzerUtils.out.println("i21 b2 d4 = " + i21 + "," + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 dArr = " + i25 + "," + i26 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0019.instanceCount byFld Test0019.lFld = " + Test0019.instanceCount + "," + byFld + "," +
                Test0019.lFld);
        FuzzerUtils.out.println("Test0019.iArrFld Test0019.fArrFld iArrFld1 = " + FuzzerUtils.checkSum(Test0019.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0019.fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0019 _instance = new Test0019();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
