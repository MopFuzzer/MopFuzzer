// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0200 {

    public static final int N = 400;

    public static long instanceCount=-1616268039L;
    public double dFld=100.118678;
    public static volatile byte byFld=-23;
    public static boolean bFld=true;
    public volatile float fFld=-2.343F;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        double d=60.4723;
        int i10=-10;
        int i11=3;
        int i12=-101;
        int i13=46312;
        int[] iArr1 =new int[N];
        float f=-85.370F;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, -215);
        FuzzerUtils.init(fArr, 0.162F);

        Test0200.byFld += (byte) d;
        for (i10 = 211; 2 < i10; --i10) {
            iArr1[i10 - 1] += (int)f;
            for (i12 = i10; i12 < 8; i12++) {
                Test0200.byFld %= (byte) (i11 | 1);
                i13 *= -761;
                i11 = i11;
                Test0200.instanceCount = (long) d;
                i11 += (((i12 * i13) + i10) - i12);
            }
            fArr[i10] += f;
            i11 *= (int)12L;
            i13 *= i13;
            Test0200.bFld = false;
        }
        i13 >>= 24;
        i13 -= (int) Test0200.instanceCount;
        vMeth2_check_sum += Double.doubleToLongBits(d) + i10 + i11 + Float.floatToIntBits(f) + i12 + i13 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i5) {

        int i6=12;
        int i7=1916;
        int i8=2;
        int i9=88;
        int i14=-141;
        int i15=-5;
        int i16=55688;
        int i17=-26;
        int[] iArr =new int[N];
        float f1=-2.124F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -166);
        FuzzerUtils.init(lArr1, -944083970617072252L);

        for (i6 = 12; i6 < 317; i6++) {
            if (i7 != 0) {
                vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i14 + i15 + i16 + i17 + Float.floatToIntBits(f1) +
                    FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
                return;
            }
            for (i8 = 1; 5 > i8; i8++) {
                iArr[i6] >>= iArr[i8];
            }
            vMeth2();
            for (i14 = 1; i14 < 5; ++i14) {
                i15 += (((i14 * Test0200.instanceCount) + i9) - i14);
                for (i16 = 1; i16 < 2; i16++) {
                    i5 >>>= (int)3597726889L;
                    f1 -= -12;
                    iArr[i14] = (int)f1;
                    Test0200.instanceCount -= i17;
                    lArr1[i6 - 1] = i14;
                }
            }
            i17 <<= (int) Test0200.instanceCount;
            iArr[i6 + 1] += (int)216L;
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i14 + i15 + i16 + i17 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i3, int i4, short s) {

        int i19=28124;
        int i20=-3;
        int i21=5;
        int i22=238;
        int[] iArr2 =new int[N];
        float f2=48.944F;

        FuzzerUtils.init(iArr2, 28042);

        vMeth1(i4);
        for (i19 = 229; i19 > 5; i19--) {
            for (i21 = 1; i21 < 7; ++i21) {
                i3 |= i20;
                i20 = i3;
                i3 |= (int) Test0200.instanceCount;
                i22 += i4;
                i22 = s;
                iArr2[i21] -= (int)122.116557;
                switch (((i22 >>> 1) % 1) + 96) {
                case 96:
                    iArr2[i21 - 1] -= i20;
                    Test0200.instanceCount *= i4;
                    break;
                }
                f2 = 0;
                if (Test0200.bFld) break;
            }
            Test0200.instanceCount -= i20;
        }
        vMeth_check_sum += i3 + i4 + s + i19 + i20 + i21 + i22 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=20046, i1=25843, i2=-6, i23=42843, i24=0, i25=-8, i26=25960, i27=11, i28=-116;
        short s1=-3789;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 223012776L);

        lArr[(117 >>> 1) % N] += (((++iArrFld[(i >>> 1) % N]) - (--i)) + Test0200.instanceCount);
        i >>= (++i);
        Test0200.instanceCount *= (long) ((++i) * ((dFld * -25L) - (-(i * 96))));
        for (i1 = 21; i1 < 398; i1++) {
            Test0200.instanceCount *= (iArrFld[i1]--);
            vMeth(i1, -15195, s1);
            Test0200.instanceCount -= i2;
            for (i23 = 1; i23 < 67; i23 += 3) {
                lArr[i1] ^= s1;
                if (Test0200.bFld) continue;
                fFld += (i23 * i23);
                i2 = (int) Test0200.instanceCount;
                i -= i24;
                i += (((i23 * i24) + i24) - i24);
                i24 <<= (int) Test0200.instanceCount;
                i24 += (i23 * i2);
                fFld = -13;
                i24 += (int)fFld;
            }
            for (i25 = i1; i25 < 67; i25++) {
                switch (((i1 % 2) * 5) + 57) {
                case 67:
                    i24 += (11 + (i25 * i25));
                    i *= -239;
                    for (i27 = i1; i27 < 1; i27++) {
                        i24 &= i23;
                        if (Test0200.bFld) break;
                        switch ((i27 % 5) + 15) {
                        case 15:
                        case 16:
                            fFld += (float)dFld;
                            try {
                                i24 = (43783 % i2);
                                i28 = (-189 % i24);
                                i = (iArrFld[i25 - 1] / i28);
                            } catch (ArithmeticException a_e) {}
                            i2 += i27;
                            break;
                        case 17:
                            Test0200.byFld ^= (byte) Test0200.instanceCount;
                            break;
                        case 18:
                            fFld = fFld;
                        case 19:
                            Test0200.instanceCount = -216;
                            break;
                        default:
                            i2 -= s1;
                        }
                    }
                    break;
                case 59:
                    i2 >>= i;
                    break;
                default:
                    i >>>= (int)-1298853756L;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("s1 i23 i24 = " + s1 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 lArr = " + i28 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0200.instanceCount dFld Test0200.byFld = " + Test0200.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0200.byFld);
        FuzzerUtils.out.println("Test0200.bFld fFld iArrFld = " + (Test0200.bFld ? 1 : 0) + "," + Float.floatToIntBits(fFld) +
            "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0200 _instance = new Test0200();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
