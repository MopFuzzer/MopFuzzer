// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0336 {

    public static final int N = 400;

    public static long instanceCount=31154L;
    public int iFld=-1;
    public static int iFld1=6;
    public static int iFld2=-33244;
    public static int iFld3=56542;
    public static int iFld4=-189;
    public double dFld=72.127158;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=-6;
        int i7=167;
        int i8=-254;
        int i9=13256;
        int i10=-2;
        int[] iArr1 =new int[N];
        short s=19036;
        float f=15.269F;
        double d=0.26966;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -35891);
        FuzzerUtils.init(lArr, -3809980952L);

        i6 = i6;
        s -= (short)i6;
        for (i7 = 16; i7 < 267; i7++) {
            i6 = (int) Test0336.instanceCount;
            iArr1[i7 - 1] >>= i7;
            lArr[i7] -= i7;
            i8 += (int)0L;
            Test0336.iFld1 -= i7;
        }
        f *= i7;
        switch (((i6 >>> 1) % 8) + 12) {
        case 12:
            Test0336.instanceCount -= (long) f;
            d -= i7;
            for (i9 = 221; i9 > 3; i9 -= 2) {
                iArr1[i9 - 1] = -61770;
                iArr1[i9] += i8;
            }
            break;
        case 13:
            lArr[(i6 >>> 1) % N] = Test0336.iFld2;
            break;
        case 14:
            Test0336.iFld1 -= Test0336.iFld2;
        case 15:
            i8 *= (int)d;
            break;
        case 16:
            iArr1[(i8 >>> 1) % N] = i9;
            break;
        case 17:
            i6 = Test0336.iFld2;
            break;
        case 18:
            i10 *= (int) Test0336.instanceCount;
            break;
        case 19:
            Test0336.iFld2 += (int) f;
            break;
        }
        vMeth2_check_sum += i6 + s + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + i10 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i4, int i5) {


        vMeth2();
        vMeth1_check_sum += i4 + i5;
    }

    public static void vMeth(int i, boolean b, int i1) {

        int i2=-147;
        int i3=77;
        int i11=13774;
        int i12=-201;
        int[] iArr2 =new int[N];
        int[][] iArr3 =new int[N][N];
        float f1=-41.192F;
        double d1=-60.14029;
        byte by=100;
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(iArr2, 8);
        FuzzerUtils.init(iArr3, -9);
        FuzzerUtils.init(bArr, false);

        for (i2 = 13; i2 < 278; i2++) {
            switch (((-162 >>> 1) % 1) + 26) {
            case 26:
                vMeth1(Test0336.iFld3, Test0336.iFld2);
                iArr2[i2 - 1] = i3;
                break;
            default:
                Test0336.iFld4 -= (int) Test0336.instanceCount;
                if (false) break;
            }
            iArr2[i2] -= Test0336.iFld4;
        }
        f1 = Test0336.instanceCount;
        iArr3 = iArr3;
        i *= (int) Test0336.instanceCount;
        iArr2[(i3 >>> 1) % N] = (int)d1;
        for (i11 = 276; i11 > 4; --i11) {
            byte by1=29;
            Test0336.iFld4 = by;
            bArr[i11 - 1][i11 + 1] = b;
            Test0336.iFld4 += (((i11 * i2) + by1) - i2);
        }
        vMeth_check_sum += i + (b ? 1 : 0) + i1 + i2 + i3 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) +
            i11 + i12 + by + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        boolean b1=true;
        int i13=64987;
        int i14=94;
        int i15=-61356;
        int i16=135;
        int i17=-50881;
        int i18=6539;
        int i19=-5;
        int[] iArr =new int[N];
        byte by2=-2;

        FuzzerUtils.init(iArr, 12722);

        Test0336.instanceCount = iArr[(-52721 >>> 1) % N];
        iFld -= 27298;
        vMeth(Test0336.iFld4, b1, Test0336.iFld1);
        Test0336.iFld4 += 6468;
        for (i13 = 164; i13 > 6; i13 -= 2) {
            float f2=65.724F;
            dFld += Test0336.iFld3;
            switch ((i13 % 7) + 57) {
            case 57:
                Test0336.iFld4 += i13;
                Test0336.instanceCount *= iFld;
                for (i15 = i13; i15 < 317; i15++) {
                    Test0336.iFld1 += (51612 + (i15 * i15));
                    dFld = Test0336.instanceCount;
                    iArr[(Test0336.iFld4 >>> 1) % N] >>= (int) Test0336.instanceCount;
                    i14 += i13;
                }
                break;
            case 58:
                f2 = i16;
                Test0336.iFld2 -= (int) 60.895F;
                i17 = 317;
                do {
                    dFld *= f2;
                    by2 = (byte)i15;
                    i16 |= i13;
                    for (i18 = 1; i18 < 1; i18++) {
                        i19 >>>= (int) Test0336.instanceCount;
                        i19 -= i18;
                        Test0336.instanceCount = 16340;
                        iArr[i17 - 1] *= iFld;
                        Test0336.iFld3 -= Test0336.iFld2;
                        by2 = (byte) Test0336.instanceCount;
                        i16 = i19;
                        i16 += Test0336.iFld2;
                        iArr = iArr;
                    }
                } while (--i17 > 0);
                break;
            case 59:
                b1 = b1;
                break;
            case 60:
                iArr[i13 - 1] *= i15;
            case 61:
                i19 += (int) Test0336.instanceCount;
                break;
            case 62:
                iArr = FuzzerUtils.int1array(N, (int)16);
                break;
            case 63:
                Test0336.iFld3 += iFld;
            default:
                i14 *= i18;
            }
        }

        FuzzerUtils.out.println("b1 i13 i14 = " + (b1 ? 1 : 0) + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("by2 i18 i19 = " + by2 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0336.instanceCount iFld Test0336.iFld1 = " + Test0336.instanceCount + "," + iFld + "," +
                Test0336.iFld1);
        FuzzerUtils.out.println("Test0336.iFld2 Test0336.iFld3 Test0336.iFld4 = " + Test0336.iFld2 + "," + Test0336.iFld3 + "," +
                Test0336.iFld4);
        FuzzerUtils.out.println("dFld = " + Double.doubleToLongBits(dFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0336 _instance = new Test0336();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
