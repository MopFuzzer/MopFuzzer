// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0348 {

    public static final int N = 400;

    public static long instanceCount=-95L;
    public static short sFld=-20587;
    public static volatile byte byFld=49;
    public static boolean bFld=false;
    public float fFld=0.343F;
    public volatile double dFld=7.86793;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0348.iArrFld, -6);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i7=-56208, i8=831;
        byte by=-4;

        for (i7 = 397; i7 > 6; i7 -= 3) {
            by >>= (byte)i8;
            i8 <<= 184;
        }
        i8 %= (int)(i8 | 1);
        long meth_res = i7 + i8 + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        int i6=-8;
        int i9=205;
        int i10=56276;
        int i11=-29;
        int[] iArr =new int[N];
        short s=-32453;
        boolean b=false;
        boolean[] bArr =new boolean[N];
        double[][] dArr =new double[N][N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, 38689);
        FuzzerUtils.init(dArr, 1.49300);
        FuzzerUtils.init(lArr1, -9360L);

        switch (((((i6--) >>> 1) % 2) * 5) + 11) {
        case 17:
            i6 >>= iMeth();
            break;
        case 19:
            i9 = 193;
            while (--i9 > 0) {
                for (i10 = i9; i10 < 8; i10++) {
                    i6 = s;
                    bArr[i10] = b;
                    switch ((i9 % 2) + 28) {
                    case 28:
                        i6 >>= (int) Test0348.instanceCount;
                        break;
                    case 29:
                        iArr[i9] -= (int)l;
                        i11 *= (int)-13L;
                        dArr[i10 + 1][(i9 >>> 1) % N] = i6;
                        break;
                    }
                }
                i6 *= i10;
                i6 -= i9;
                lArr1[i9 - 1] = Test0348.instanceCount;
                i6 += (i9 * i9);
            }
            break;
        }
        vMeth1_check_sum += l + i6 + i9 + i10 + i11 + s + (b ? 1 : 0) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(float f, int i3, int i4) {

        float f1=0.753F;
        int i5=7, i12=-120, i13=-5;
        short s1=21721;
        byte by1=119;
        boolean b1=true;
        long[][] lArr2 =new long[N][N];

        FuzzerUtils.init(lArr2, -213L);

        for (f1 = 14; f1 < 386; ++f1) {
            vMeth1(8343L);
            for (i12 = (int)(f1); 5 > i12; i12++) {
                i4 += i12;
                i13 += i13;
            }
            Test0348.instanceCount /= ((long) (f) | 1);
            lArr2[(int)(f1 + 1)] = lArr2[(int)(f1)];
            Test0348.instanceCount = s1;
            by1 = (byte)i13;
            Test0348.instanceCount -= 14105;
            b1 = b1;
        }
        Test0348.instanceCount = i3;
        Test0348.iArrFld[(27282 >>> 1) % N] *= by1;
        Test0348.iArrFld[(-1 >>> 1) % N] = (int) Test0348.instanceCount;
        i4 = i4;
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + Float.floatToIntBits(f1) + i5 + i12 + i13 + s1 + by1 +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=3, i1=34122, i2=120, i14=287, i15=-60465, i16=198, i17=13417, i18=-7;
        long l1=130L;
        long l2=16L;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1431124603L);

        lArr[(i >>> 1) % N] >>= (++Test0348.instanceCount);
        i = (int)(-7193L + (i--));
        for (i1 = 17; i1 < 320; i1 += 2) {
            vMeth(-1.663F, -8, i);
            Test0348.sFld *= (short) 45200;
            i14 = 1;
            do {
                i2 += i14;
            } while (++i14 < 166);
            i2 += i1;
            for (l1 = 9; l1 < 166; l1++) {
                for (i16 = 1; i16 < 2; ++i16) {
                    Test0348.iArrFld[i16 - 1] <<= i16;
                    Test0348.sFld += (short) (-126.560F + (i16 * i16));
                    Test0348.instanceCount += i15;
                    i2 = (int)-194L;
                    try {
                        i2 = (Test0348.iArrFld[(int) (l1 + 1)] % Test0348.iArrFld[i16]);
                        i2 = (-55167 / Test0348.iArrFld[i16]);
                        i17 = (-245 / Test0348.iArrFld[i1 + 1]);
                    } catch (ArithmeticException a_e) {}
                    i17 = (int) Test0348.instanceCount;
                    Test0348.byFld += (byte) 0;
                    i ^= -4;
                    i17 |= (int)l1;
                }
                Test0348.instanceCount -= i2;
                i15 += (int)l1;
                i17 <<= (int)l1;
                for (l2 = 1; l2 < 2; l2++) {
                    Test0348.bFld = Test0348.bFld;
                    Test0348.instanceCount = i2;
                    i2 %= (int)((long)(fFld) | 1);
                    Test0348.instanceCount = (long) dFld;
                    lArr[(int)(l1)] += (long)fFld;
                    Test0348.iArrFld = FuzzerUtils.int1array(N, (int) -52749);
                    Test0348.instanceCount = i;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i14 l1 i15 = " + i14 + "," + l1 + "," + i15);
        FuzzerUtils.out.println("i16 i17 l2 = " + i16 + "," + i17 + "," + l2);
        FuzzerUtils.out.println("i18 lArr = " + i18 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0348.instanceCount Test0348.sFld Test0348.byFld = " + Test0348.instanceCount + "," + Test0348.sFld +
                "," + Test0348.byFld);
        FuzzerUtils.out.println("Test0348.bFld fFld dFld = " + (Test0348.bFld ? 1 : 0) + "," + Float.floatToIntBits(fFld) + ","
            + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0348.iArrFld = " + FuzzerUtils.checkSum(Test0348.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0348 _instance = new Test0348();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
