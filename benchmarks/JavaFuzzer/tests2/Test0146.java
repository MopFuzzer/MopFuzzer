// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0146 {

    public static final int N = 400;

    public static long instanceCount=1484002888L;
    public static volatile double dFld=6.129354;
    public static int iFld=9345;
    public float fFld=0.669F;
    public static short sFld=24475;
    public static byte byFld=119;
    public long[] lArrFld =new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        byte by=-71;
        int i9=-27208;
        int i10=-48389;
        int i11=7;
        int[][] iArr1 =new int[N][N];
        float f2=60.152F, f3=2.413F;
        double d=-39.6411;
        boolean b=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr1, -81);
        FuzzerUtils.init(sArr, (short)-22788);

        iArr1[(-10 >>> 1) % N][(-18812 >>> 1) % N] = (int) Test0146.instanceCount;
        Test0146.instanceCount *= Test0146.iFld;
        Test0146.instanceCount -= by;
        for (i9 = 12; i9 < 348; ++i9) {
            i10 += (((i9 * f2) + Test0146.instanceCount) - i10);
            for (d = 1; d < 5; ++d) {
                switch ((int)((d % 1) + 51)) {
                case 51:
                    sArr[i9 + 1] <<= (short)i10;
                    iArr1[i9][(int) (d - 1)] = Test0146.iFld;
                    Test0146.instanceCount |= i9;
                    break;
                default:
                    switch ((int)(((d % 5) * 5) + 121)) {
                    case 127:
                        if (b) break;
                        Test0146.dFld += i9;
                    case 134:
                        by *= (byte)i9;
                        if (b) continue;
                        break;
                    case 141:
                        if (false) continue;
                    case 129:
                        b = b;
                    case 126:
                        f3 = Test0146.instanceCount;
                    }
                }
            }
        }
        long meth_res = by + i9 + i10 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d) + i11 + (b ? 1 : 0) +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(float f1, int i3) {

        int i4=-111;
        int i5=2;
        int i6=-110;
        int i7=5535;
        int i8=-4;
        int[] iArr =new int[N];
        boolean b1=true;
        boolean[] bArr =new boolean[N];
        boolean[] bArr1 =new boolean[N];
        short s=-26379;
        byte by1=-82;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(lArr, 47L);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(bArr1, false);

        switch (((iArr[(i3 >>> 1) % N] >>> 1) % 2) + 55) {
        case 55:
            switch ((((((int) (Test0146.instanceCount * Test0146.instanceCount)) >>> 1) % 10) * 5) + 44) {
            case 72:
                i4 = 1;
                while (++i4 < 332) {
                    i3 = (int)f1;
                    for (i5 = i4; i5 < 5; i5++) {
                        i6 = i5;
                        iArr[i5 - 1] += (int) ((--Test0146.instanceCount) * Test0146.dFld);
                        if (b1) {
                            for (i7 = 1; i7 < 1; ++i7) {
                                i6 = (int)lMeth();
                                Test0146.instanceCount += (i7 | (long) f1);
                                iArr[i5 + 1] = Test0146.iFld;
                                iArr[i4] = i7;
                                iArr[i7 - 1] = (int)18L;
                                i6 += (int) Test0146.dFld;
                            }
                        }
                    }
                }
                break;
            case 88:
                i3 = s;
                break;
            case 49:
                i6 = (int) Test0146.instanceCount;
            case 60:
                lArr = lArr;
                break;
            case 86:
                i3 -= by1;
            case 67:
                iArr[(i5 >>> 1) % N] <<= -27731;
                break;
            case 85:
                i3 >>= i4;
            case 45:
                Test0146.iFld = (int) -10L;
                break;
            case 89:
                s = (short)-597;
            case 48:
                Test0146.iFld += -15350;
                break;
            default:
                Test0146.instanceCount = i5;
            }
        case 56:
            bArr = bArr1;
            break;
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i3 + i4 + i5 + i6 + i7 + i8 + (b1 ? 1 : 0) + s + by1 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(bArr1);
    }

    public static int iMeth(float f, long l) {

        int i1=-10410;
        int i2=-113;
        int i12=33283;
        int i13=-12;
        int[] iArr2 =new int[N];
        byte by2=11;
        boolean b2=false;
        double[] dArr =new double[N];
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(dArr, -2.70218);
        FuzzerUtils.init(iArr2, -7973);
        FuzzerUtils.init(fArr, -22.68F);

        for (i1 = 3; i1 < 172; ++i1) {
            vMeth(f, Test0146.iFld);
            dArr[i1 - 1] = Test0146.instanceCount;
            try {
                Test0146.iFld = (i2 / Test0146.iFld);
                iArr2[i1 + 1] = (iArr2[i1] / iArr2[i1 - 1]);
                i2 = (2048646225 / Test0146.iFld);
            } catch (ArithmeticException a_e) {}
            switch (((i1 % 9) * 5) + 120) {
            case 129:
                try {
                    iArr2[i1 + 1] = (i2 / i1);
                    i2 = (i1 % -4934);
                    Test0146.iFld = (Test0146.iFld % i1);
                } catch (ArithmeticException a_e) {}
                Test0146.iFld ^= Test0146.iFld;
                break;
            case 149:
                i2 <<= i1;
                Test0146.iFld -= i1;
                iArr2[i1] >>= -10;
                for (i12 = 1; i12 < 9; ++i12) {
                    Test0146.iFld -= Test0146.iFld;
                    by2 = (byte)l;
                    Test0146.iFld = (int) 15650L;
                    Test0146.iFld = 46143;
                }
                break;
            case 151:
                Test0146.instanceCount += i1;
                break;
            case 123:
                Test0146.iFld += (-45 + (i1 * i1));
                break;
            case 164:
                b2 = b2;
                break;
            case 157:
                Test0146.dFld = f;
                break;
            case 137:
                i13 *= -20725;
                break;
            case 124:
                fArr = FuzzerUtils.float2array(N, (float)-1.928F);
                break;
            case 161:
                f = i13;
            }
        }
        long meth_res = Float.floatToIntBits(f) + l + i1 + i2 + i12 + i13 + by2 + (b2 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=8;
        int i14=-40680;
        int i15=-56130;
        int i16=153;
        int i17=-5;
        int i18=6;
        int[][] iArr3 =new int[N][N];
        double d1=101.29726;
        long l1=3386L;
        boolean b3=true;
        boolean[] bArr2 =new boolean[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(iArr3, -2804);
        FuzzerUtils.init(bArr2, true);
        FuzzerUtils.init(fArr1, -1.711F);

        i = (iMeth(fFld, Test0146.instanceCount) * i);
        Test0146.iFld = Test0146.iFld;
        iArr3[(-59 >>> 1) % N][(Test0146.iFld >>> 1) % N] >>= -159;
        i -= Test0146.iFld;
        i14 = 1;
        while (++i14 < 179) {
            Test0146.instanceCount %= (Test0146.instanceCount | 1);
        }
        fFld += -107;
        for (i15 = 3; i15 < 156; i15++) {
            fFld -= Test0146.instanceCount;
            try {
                i16 = (i15 / 80);
                Test0146.iFld = (-1495411685 / i15);
                i = (-1461542080 % iArr3[i15 - 1][i15 - 1]);
            } catch (ArithmeticException a_e) {}
            for (d1 = i15; 164 > d1; ++d1) {
                if (b3) {
                    Test0146.iFld += (int) (d1 + fFld);
                } else if (b3) {
                    for (l1 = 1; l1 < 1; ++l1) {
                        i17 = (int)fFld;
                        switch ((int)((l1 % 2) + 8)) {
                        case 8:
                            lArrFld = lArrFld;
                            Test0146.instanceCount *= i14;
                            i -= i15;
                        case 9:
                            i17 = i14;
                            i17 += (int)d1;
                            Test0146.instanceCount <<= Test0146.sFld;
                            lArrFld[(int)(l1 - 1)] = i15;
                            break;
                        }
                        i += i15;
                        bArr2[(int)(d1)] = false;
                        i17 += (int)(-125.765F + (l1 * l1));
                        b3 = b3;
                        Test0146.instanceCount = i17;
                        Test0146.byFld += (byte) (l1 ^ i14);
                        Test0146.instanceCount >>= i18;
                    }
                } else if (b3) {
                    fFld *= 0;
                } else {
                    fArr1[(int)(d1)] /= -1L;
                }
            }
        }

        FuzzerUtils.out.println("i i14 i15 = " + i + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 d1 i17 = " + i16 + "," + Double.doubleToLongBits(d1) + "," + i17);
        FuzzerUtils.out.println("l1 i18 b3 = " + l1 + "," + i18 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("iArr3 bArr2 fArr1 = " + FuzzerUtils.checkSum(iArr3) + "," +
            FuzzerUtils.checkSum(bArr2) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0146.instanceCount Test0146.dFld Test0146.iFld = " + Test0146.instanceCount + "," +
                Double.doubleToLongBits(Test0146.dFld) + "," + Test0146.iFld);
        FuzzerUtils.out.println("fFld Test0146.sFld Test0146.byFld = " + Float.floatToIntBits(fFld) + "," + Test0146.sFld + "," +
                Test0146.byFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0146 _instance = new Test0146();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
