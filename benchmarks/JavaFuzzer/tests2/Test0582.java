// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:39 2023
public class Test0582 {

    public static final int N = 400;

    public static volatile long instanceCount=-38800L;
    public static short sFld=-749;
    public static byte byFld=21;
    public boolean bFld=false;
    public byte[][] byArrFld =new byte[N][N];
    public long[] lArrFld =new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        int i7=-34194;
        int i8=10828;
        int i9=4548;
        int i10=30;
        int i11=-50909;
        int[] iArr1 =new int[N];
        double d2=0.64200;
        double[] dArr =new double[N];
        boolean b=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(dArr, 1.58710);
        FuzzerUtils.init(sArr, (short)13510);
        FuzzerUtils.init(iArr1, 37031);

        dArr[(i5 >>> 1) % N] += i5;
        for (i7 = 6; i7 < 146; ++i7) {
            for (i9 = 1; i9 < 11; i9 += 2) {
                i5 <<= 57915;
                i6 = i9;
                Test0582.byFld = (byte) 229;
                i11 = 1;
                do {
                    sArr[i9] %= (short)-56;
                    Test0582.instanceCount += i7;
                    i8 = 49207;
                    i8 = -222;
                    Test0582.instanceCount = (long) d2;
                    iArr1[i9 + 1] -= i10;
                    if (b) break;
                    try {
                        i8 = (i8 % -218);
                        iArr1[i9] = (43883 / i9);
                        i8 = (i5 / i9);
                    } catch (ArithmeticException a_e) {}
                } while (++i11 < 3);
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d2) + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(double d1, float f) {

        int i3=-8;
        int i4=1639;
        int i12=-157;
        int i13=242;
        int i14=-6;
        int i15=-75;
        int i16=-39866;
        int i17=-55;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, 4);

        for (i3 = 4; i3 < 358; i3++) {
            vMeth1(i4, i4);
            for (i12 = i3; 5 > i12; ++i12) {
                i4 >>= i4;
                try {
                    i13 = (136 % i13);
                    i13 = (-31100 % iArr2[i12 - 1]);
                    i13 = (911374618 % i12);
                } catch (ArithmeticException a_e) {}
            }
            i4 += (i3 * i3);
            d1 -= f;
            if (true) continue;
            for (i14 = 1; 5 > i14; i14 += 3) {
                i13 = i13;
                for (i16 = 5; i16 > 1; i16 -= 3) {
                    iArr2[i3] -= i15;
                }
            }
            i17 = -30812;
            i17 += i17;
            f -= Test0582.instanceCount;
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i3 + i4 + i12 + i13 + i14 + i15 +
            i16 + i17 + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i2, double d) {

        float f1=1.577F;
        float[] fArr =new float[N];
        int i18=-4810;
        int i19=-33134;
        int i20=-57539;
        int[][] iArr3 =new int[N][N];

        FuzzerUtils.init(fArr, 29.852F);
        FuzzerUtils.init(iArr3, -153);

        vMeth(d, f1);
        i2 *= (int)-26.327F;
        for (i18 = 7; 159 > i18; i18++) {
            i2 = -7800;
            if (i18 != 0) {
            }
            fArr = fArr;
            i19 -= i2;
            f1 = f1;
            i19 *= (int)116.744F;
            i2 += (i18 ^ i18);
            i19 += (int)d;
            iArr3[i18 + 1][i18 - 1] = 2;
        }
        i20 = 244;
        do {
            i19 *= i18;
        } while (--i20 > 0);
        i2 >>>= i19;
        long meth_res = i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i18 + i19 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=21815;
        int i1=-1;
        int i21=-13;
        int i22=-11693;
        int i23=-10041;
        int i24=90;
        int i25=1;
        int i26=-50;
        int i27=-236;
        int[] iArr =new int[N];
        int[][] iArr4 =new int[N][N];
        double d3=-2.70055;
        float f2=-1.934F;

        FuzzerUtils.init(iArr, 164);
        FuzzerUtils.init(iArr4, 41130);

        switch (((((int) (i + Test0582.instanceCount)) >>> 1) % 4) + 50) {
        case 50:
            i1 = 1;
            while (++i1 < 213) {
                iArr[i1 + 1] = (Test0582.sFld--);
                byArrFld[i1 - 1][i1] += (byte)(iMeth(i, d3) + f2);
                for (i21 = 7; i21 < 118; i21 += 3) {
                    i22 = i1;
                    i -= -13;
                    i22 = i1;
                }
                i -= (int) Test0582.instanceCount;
                if (bFld) {
                    for (i23 = 5; i23 < 118; i23++) {
                        i24 <<= Test0582.sFld;
                        f2 += i23;
                        for (i25 = 1; i25 < 2; ++i25) {
                            i24 = i25;
                        }
                        i24 |= i23;
                        lArrFld[i23] ^= -6;
                        i += (-12 + (i23 * i23));
                        i27 = 1;
                        while (++i27 < 2) {
                            i += (int)d3;
                            switch (((i24 >>> 1) % 10) + 111) {
                            case 111:
                                Test0582.instanceCount += (47 + (i27 * i27));
                                Test0582.byFld += (byte) 75;
                                break;
                            case 112:
                                d3 *= 123;
                            case 113:
                            case 114:
                                iArr = FuzzerUtils.int1array(N, (int)-8);
                                f2 = -9L;
                                break;
                            case 115:
                                if (false) break;
                                iArr4[i23 - 1][i27] += (int)-79.68757;
                                f2 += 13;
                                break;
                            case 116:
                                i <<= (int) Test0582.instanceCount;
                                break;
                            case 117:
                                Test0582.instanceCount += (((i27 * i) + f2) - f2);
                                break;
                            case 118:
                                i22 -= -35766;
                                break;
                            case 119:
                                byArrFld[i27 + 1][i1 - 1] = (byte) Test0582.instanceCount;
                                break;
                            case 120:
                                Test0582.byFld += (byte) i21;
                                break;
                            }
                        }
                    }
                } else if (bFld) {
                    Test0582.instanceCount >>>= Test0582.instanceCount;
                }
            }
        case 51:
            Test0582.instanceCount *= i24;
        case 52:
            iArr4[(i23 >>> 1) % N] = iArr4[(i24 >>> 1) % N];
            break;
        case 53:
            Test0582.instanceCount = i24;
            break;
        default:
            i24 = i24;
        }

        FuzzerUtils.out.println("i i1 d3 = " + i + "," + i1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("f2 i21 i22 = " + Float.floatToIntBits(f2) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 iArr = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("iArr4 = " + FuzzerUtils.checkSum(iArr4));

        FuzzerUtils.out.println("Test0582.instanceCount Test0582.sFld Test0582.byFld = " + Test0582.instanceCount + "," + Test0582.sFld +
                "," + Test0582.byFld);
        FuzzerUtils.out.println("bFld byArrFld lArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(byArrFld) +
            "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0582 _instance = new Test0582();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
