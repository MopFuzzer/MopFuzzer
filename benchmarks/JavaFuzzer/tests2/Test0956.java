// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0956 {

    public static final int N = 400;

    public static long instanceCount=-11L;
    public static double dFld=120.88747;
    public static byte byFld=78;
    public static double dFld1=0.66145;
    public static int iFld=-128;
    public static boolean bFld=false;
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0956.fArrFld, 0.468F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=86, i6=39424, i7=-127, i8=-100;
        short s1=-14259;
        float f1=39.800F;
        boolean b=true;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-59);

        for (byte by1 : byArr) {
            for (i5 = 1; 4 > i5; i5 += 2) {
                i6 += (((i5 * s1) + Test0956.instanceCount) - by1);
                f1 = i5;
                i6 -= (int) Test0956.dFld;
                b = b;
                i6 += i5;
            }
            if (false) {
                i6 = i6;
            }
            for (i7 = 1; i7 < 4; i7++) {
                b = b;
                Test0956.instanceCount += by1;
                Test0956.instanceCount = -57666;
                Test0956.instanceCount += (i7 * i7);
                Test0956.instanceCount = i8;
            }
        }
        vMeth2_check_sum += i5 + i6 + s1 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i7 + i8 +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1() {

        int i=-169;
        int i1=39010;
        int i2=13;
        int i3=-239;
        int i4=20618;
        int i9=6;
        int i10=-211;
        int[] iArr =new int[N];
        short s=23086;
        boolean b1=false;
        float f2=14.933F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 34.584F);
        FuzzerUtils.init(iArr, 25);

        for (i = 6; i < 220; ++i) {
            i1 = (--i2);
            for (i3 = 1; i3 < 8; i3++) {
                int i11=101;
                switch (((((int) (s + Test0956.instanceCount)) >>> 1) % 9) + 45) {
                case 45:
                    Test0956.dFld = Test0956.instanceCount;
                    vMeth2();
                    break;
                case 46:
                    Test0956.byFld = (byte) i3;
                case 47:
                    Test0956.byFld += (byte) (4370843704102300050L + (i3 * i3));
                    i1 += (13 + (i3 * i3));
                    for (i9 = 1; 2 > i9; ++i9) {
                        i4 >>= i;
                        fArr[i9 + 1] = i3;
                    }
                    break;
                case 48:
                    if (b1) {
                        i2 += (((i3 * i2) + s) - i11);
                        Test0956.instanceCount += (i3 | i3);
                    }
                    break;
                case 49:
                    Test0956.dFld1 += i3;
                    break;
                case 50:
                    i1 += i3;
                    break;
                case 51:
                    iArr[i] += i;
                    break;
                case 52:
                    i4 = i3;
                    break;
                case 53:
                    f2 = (float) Test0956.dFld1;
                    break;
                default:
                    Test0956.instanceCount >>= i1;
                }
            }
        }
        vMeth1_check_sum += i + i1 + i2 + i3 + i4 + s + i9 + i10 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(float f, byte by) {

        int i12=24;
        int i13=-5;
        int i14=-9;
        int i15=-8;
        int i16=8;
        int[] iArr1 =new int[N];
        boolean b2=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, 61121);
        FuzzerUtils.init(lArr, -11L);

        vMeth1();
        for (i12 = 10; i12 < 282; i12++) {
            Test0956.instanceCount += i12;
            switch ((i12 % 4) + 23) {
            case 23:
                for (i14 = 6; i14 > i12; --i14) {
                    f = i15;
                    i13 >>= 7;
                    f *= i14;
                    iArr1[i14 - 1] *= (int) Test0956.instanceCount;
                    i15 += i14;
                    i13 += i14;
                    if (b2) continue;
                    Test0956.instanceCount += (((i14 * i15) + i14) - Test0956.instanceCount);
                    Test0956.instanceCount -= i16;
                }
                Test0956.instanceCount += Test0956.instanceCount;
            case 24:
                i15 += (((i12 * f) + i15) - Test0956.instanceCount);
                break;
            case 25:
            case 26:
                lArr[i12] %= ((long)(f) | 1);
                break;
            default:
                i13 += (27301 + (i12 * i12));
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + by + i12 + i13 + i14 + i15 + (b2 ? 1 : 0) + i16 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        float f3=2.133F;
        int i17=-21512;
        int i18=-43921;
        int i19=52839;
        int i20=-9;
        int i21=-166;
        int i22=70;
        int[][] iArr2 =new int[N][N];
        short s2=-21734;

        FuzzerUtils.init(iArr2, -152);

        vMeth(f3, Test0956.byFld);
        Test0956.iFld = Test0956.byFld;
        for (i17 = 298; i17 > 2; i17--) {
            iArr2[i17][i17] >>>= i17;
            i18 += (int) Test0956.dFld1;
            i18 += (i17 ^ Test0956.byFld);
            Test0956.instanceCount = i18;
            f3 -= Test0956.instanceCount;
            iArr2[(i18 >>> 1) % N][i17 - 1] += Test0956.iFld;
            Test0956.instanceCount -= i17;
            Test0956.instanceCount *= i18;
            Test0956.instanceCount -= i17;
            for (i19 = 4; 85 > i19; ++i19) {
                if (Test0956.bFld) break;
                i20 %= (int) (Test0956.instanceCount | 1);
                Test0956.iFld = (int) Test0956.instanceCount;
                i18 += (int)f3;
                s2 = (short) Test0956.instanceCount;
                Test0956.instanceCount += i20;
                Test0956.iFld = (int) 1.19896;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test0956.instanceCount = i21;
                    Test0956.bFld = Test0956.bFld;
                    switch ((i17 % 2) + 1) {
                    case 1:
                        Test0956.byFld = (byte) i20;
                        break;
                    case 2:
                        i20 = (int) Test0956.instanceCount;
                        i18 -= (int) Test0956.instanceCount;
                        Test0956.fArrFld[i19 + 1] *= i22;
                    }
                    if (true) continue;
                    i20 += i21;
                }
            }
        }

        FuzzerUtils.out.println("f3 i17 i18 = " + Float.floatToIntBits(f3) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 s2 = " + i19 + "," + i20 + "," + s2);
        FuzzerUtils.out.println("i21 i22 iArr2 = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0956.instanceCount Test0956.dFld Test0956.byFld = " + Test0956.instanceCount + "," +
                Double.doubleToLongBits(Test0956.dFld) + "," + Test0956.byFld);
        FuzzerUtils.out.println("Test0956.dFld1 Test0956.iFld Test0956.bFld = " + Double.doubleToLongBits(Test0956.dFld1) + "," +
                Test0956.iFld + "," + (Test0956.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0956.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0956.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0956 _instance = new Test0956();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
