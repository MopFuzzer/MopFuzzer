// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0136 {

    public static final int N = 400;

    public static long instanceCount=-489600802L;
    public static int iFld=-9;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0136.iArrFld, -6);
        FuzzerUtils.init(Test0136.lArrFld, -63757L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6) {

        float f1=115.405F;
        short s=-15687;
        int i7=0, i8=4, i9=-34615, i10=-2665, i11=-45, i12=-35575;
        boolean b=true;
        double d=0.13272;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 16824L);

        Test0136.iFld += -10;
        f1 = 0;
        lArr[(Test0136.iFld >>> 1) % N] = Test0136.iFld;
        Test0136.iFld <<= s;
        if (b) {
            i7 = 1;
            do {
                i8 = 1;
                while (++i8 < 11) {
                    i6 += (i8 * i8);
                    lArr[i7 - 1] *= i7;
                }
                for (i9 = i7; i9 < 11; i9++) {
                    i10 += (int) Test0136.instanceCount;
                    i11 = 1;
                    while (++i11 < 1) {
                        s = (short) Test0136.iFld;
                        try {
                            Test0136.iArrFld[i9 + 1] = (i6 / 17996);
                            i6 = (i12 / i8);
                            i6 = (i11 % i9);
                        } catch (ArithmeticException a_e) {}
                        if (b) continue;
                    }
                }
            } while (++i7 < 139);
        } else if (b) {
            i6 *= i12;
        } else if (false) {
            d = Test0136.instanceCount;
        } else {
            i10 = i12;
        }
        long meth_res = i6 + Float.floatToIntBits(f1) + s + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i2, int i3, long l1) {

        int i4=-10, i5=-60819;

        for (i4 = 14; i4 < 272; ++i4) {
            i3 = (i4 ^ iMeth(i2));
        }
        vMeth1_check_sum += i2 + i3 + l1 + i4 + i5;
    }

    public static void vMeth(int i, long l) {

        int i1=8, i13=213, i14=99, i15=2, i16=8;
        float f2=0.692F;

        i1 = 1;
        do {
            Test0136.instanceCount += i1;
            vMeth1(52, i, l);
            Test0136.iFld <<= Test0136.iFld;
            Test0136.iFld /= 3;
            for (i13 = i1; i13 < 6; i13++) {
                for (i15 = 1; i15 < 1; ++i15) {
                    switch (((-8 >>> 1) % 2) + 119) {
                    case 119:
                        if (Test0136.iFld != 0) {
                            vMeth_check_sum += i + l + i1 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2);
                            return;
                        }
                        Test0136.iArrFld[i13 + 1] -= (int) l;
                        break;
                    case 120:
                    }
                    l %= (i15 | 1);
                    if (false) continue;
                    l |= i13;
                    Test0136.instanceCount *= Test0136.instanceCount;
                    f2 += -58809L;
                }
            }
        } while (++i1 < 262);
        vMeth_check_sum += i + l + i1 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        float f=71.105F, f3=-1.255F;
        int i17=-55907;
        int i18=-10;
        int i19=-3;
        int i20=183;
        int i22=-41;
        int i23=36266;
        int[] iArr =new int[N];
        int[] iArr1 =new int[N];
        boolean b1=false;
        double d1=1.42584;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(iArr, 168);
        FuzzerUtils.init(iArr1, -53457);
        FuzzerUtils.init(byArr, (byte)-56);

        f = (((Test0136.iFld++) - (iArr[(Test0136.iFld >>> 1) % N]++)) * (++iArr[(-28 >>> 1) % N]));
        vMeth(Test0136.iFld, Test0136.instanceCount);
        i17 = 1;
        while (++i17 < 252) {
            iArr1[i17] = 56233;
            Test0136.iFld *= 215;
            Test0136.lArrFld[i17 - 1] = Test0136.instanceCount;
            iArr1[i17 - 1] = -181;
            for (i18 = 5; i18 < 100; i18++) {
                byte by=-72;
                Test0136.iFld *= by;
                Test0136.lArrFld[i17 - 1] -= -1038L;
                for (f3 = 1; f3 < 2; ++f3) {
                    int i21=23;
                    b1 = b1;
                    i19 += -4179;
                    i21 += i17;
                    i21 = (int) Test0136.instanceCount;
                    try {
                        iArr1[i17 + 1] = (i20 / -185);
                        i21 = (i20 / -93);
                        i19 = (-6978 / iArr1[i18 - 1]);
                    } catch (ArithmeticException a_e) {}
                    iArr1[i17] = (int)f;
                    d1 = i20;
                    i21 -= i17;
                    Test0136.instanceCount += (long) f3;
                    byArr[i17][i18 + 1] += (byte) Test0136.iFld;
                }
                by = (byte)i19;
                Test0136.instanceCount = Test0136.instanceCount;
                f -= f;
                for (i22 = 1; i22 < 2; i22++) {
                    i20 += (i22 ^ Test0136.instanceCount);
                    i23 += i22;
                    Test0136.instanceCount -= i17;
                    Test0136.instanceCount |= Test0136.instanceCount;
                }
                Test0136.instanceCount -= (long) f3;
            }
        }

        FuzzerUtils.out.println("f i17 i18 = " + Float.floatToIntBits(f) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 f3 i20 = " + i19 + "," + Float.floatToIntBits(f3) + "," + i20);
        FuzzerUtils.out.println("b1 d1 i22 = " + (b1 ? 1 : 0) + "," + Double.doubleToLongBits(d1) + "," + i22);
        FuzzerUtils.out.println("i23 iArr iArr1 = " + i23 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0136.instanceCount Test0136.iFld Test0136.iArrFld = " + Test0136.instanceCount + "," + Test0136.iFld +
                "," + FuzzerUtils.checkSum(Test0136.iArrFld));
        FuzzerUtils.out.println("Test0136.lArrFld = " + FuzzerUtils.checkSum(Test0136.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0136 _instance = new Test0136();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
