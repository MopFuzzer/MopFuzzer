// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:31 2023
public class Test0400 {

    public static final int N = 400;

    public static volatile long instanceCount=-8583L;
    public static boolean bFld=true;
    public static double[] dArrFld =new double[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0400.dArrFld, -101.93923);
        FuzzerUtils.init(Test0400.iArrFld, -5);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, long l1, int i5) {

        double d=1.115725, d1=0.89844;
        int i6=-90, i7=-63, i8=67, i9=4;
        short s=-28178;
        boolean b=true;

        for (d = 159; d > 1; d -= 2) {
            i7 = 1;
            while (++i7 < 19) {
                s *= (short) Test0400.instanceCount;
                l1 += (-158 + (i7 * i7));
                switch ((i7 % 2) + 83) {
                case 83:
                    if (b) continue;
                    for (i8 = 1; i8 > d; i8 -= 3) {
                        l1 -= i9;
                        f += (((i8 * i6) + i9) - i5);
                        s = (short)i7;
                        l1 += i8;
                        Test0400.instanceCount = i6;
                        if (i9 != 0) {
                            vMeth1_check_sum += Float.floatToIntBits(f) + l1 + i5 + Double.doubleToLongBits(d) + i6 +
                                i7 + s + (b ? 1 : 0) + i8 + i9 + Double.doubleToLongBits(d1);
                            return;
                        }
                        d1 += d;
                    }
                    break;
                case 84:
                    b = true;
                    break;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + l1 + i5 + Double.doubleToLongBits(d) + i6 + i7 + s + (b ? 1 : 0)
            + i8 + i9 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(int i3, int i4) {

        float f1=-98.923F;
        float[] fArr =new float[N];
        int i10=-244;
        int i11=34;
        int i12=-4;
        int i13=84;
        int i14=0;
        int i15=0;
        int[] iArr =new int[N];
        double d2=-29.71010;
        short s1=20501;
        byte by=-13;

        FuzzerUtils.init(fArr, -1.573F);
        FuzzerUtils.init(iArr, 2);

        vMeth1(f1, Test0400.instanceCount, -11986);
        i10 = 1;
        do {
            Test0400.instanceCount += (long) 2.20323;
            i3 += (i10 * i10);
            fArr[i10 + 1] += Test0400.instanceCount;
            for (i11 = i10; i11 < 5; i11++) {
                for (i13 = i10; i13 < 1; ++i13) {
                    i14 += i11;
                }
                d2 -= i4;
                i15 = 1;
                while (++i15 < 1) {
                    switch (((i11 >>> 1) % 10) + 59) {
                    case 59:
                        i4 = s1;
                        break;
                    case 60:
                        iArr[i11 + 1] = s1;
                        if (Test0400.bFld) continue;
                    case 61:
                        Test0400.instanceCount -= i11;
                        break;
                    case 62:
                        i12 += (((i15 * i12) + i11) - Test0400.instanceCount);
                    case 63:
                        i12 <<= 88;
                    case 64:
                        i3 += (i15 * i15);
                        break;
                    case 65:
                        d2 *= 0;
                        break;
                    case 66:
                        by -= (byte)i15;
                        break;
                    case 67:
                        i3 *= i11;
                        break;
                    case 68:
                        iArr[i10 - 1] = i13;
                    default:
                        by = (byte)i10;
                    }
                }
            }
        } while (++i10 < 332);
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 +
            Double.doubleToLongBits(d2) + i15 + s1 + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static double dMeth(long l) {

        int i16=5853;
        int i17=-44;
        int i18=6;
        int i20=40887;
        int i21=223;
        int i22=10;
        int i23=-224;
        int[] iArr1 =new int[N];
        byte by1=-95;

        FuzzerUtils.init(iArr1, -157);

        vMeth(i16, i16);
        l -= i16;
        Test0400.dArrFld[(i16 >>> 1) % N] = -58665;
        for (i17 = 5; i17 < 247; i17++) {
            if (Test0400.bFld) break;
            for (i20 = 1; i20 < 7; i20++) {
                for (i22 = 1; i22 < 2; ++i22) {
                    try {
                        i21 = (37 / iArr1[i17 - 1]);
                        i21 = (71 % i16);
                        i21 = (i20 / 174);
                    } catch (ArithmeticException a_e) {}
                    if (Test0400.bFld) {
                        i18 += (7112 + (i22 * i22));
                    } else if (true) {
                        i21 = i23;
                        iArr1[i22 - 1] <<= i20;
                        i18 += (int)l;
                    } else if (Test0400.bFld) {
                        by1 = (byte)i18;
                        l >>= i22;
                    } else {
                        i16 -= i17;
                    }
                }
            }
        }
        long meth_res = l + i16 + i17 + i18 + i20 + i21 + i22 + i23 + by1 + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=-10, i2=-13, i24=1, i25=35852, i26=211, i27=129, i28=0, i29=28839, i30=-48;
        float f2=0.379F;
        short s2=17309;
        byte by2=119;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 2428276811L);

        i += (int) (--Test0400.instanceCount);
        i -= Math.abs((int) ((i + i) + (47118 + (Test0400.instanceCount + i))));
        for (i1 = 352; 3 < i1; --i1) {
            i *= (int) (dMeth(Test0400.instanceCount) * 89.658F);
            i = (int) Test0400.instanceCount;
            Test0400.iArrFld[i1 - 1] = (int) f2;
            i24 = 1;
            do {
                for (i25 = 1; i25 < 1; ++i25) {
                    Test0400.instanceCount += (i25 * i26);
                    f2 += Test0400.instanceCount;
                    i26 += (i25 | i24);
                    i2 &= i2;
                    i2 = i1;
                    i2 <<= i1;
                    s2 = (short)i26;
                    i26 *= i24;
                }
                i26 += i24;
                Test0400.instanceCount = i;
                f2 += i25;
                Test0400.instanceCount += i24;
            } while (++i24 < 72);
            by2 += by2;
            for (i27 = 3; 72 > i27; i27++) {
                for (i29 = i1; 2 > i29; i29++) {
                    i = (int)-7643013054489941519L;
                    i26 = s2;
                    lArr[i27] = by2;
                }
                if (Test0400.bFld) continue;
            }
            i2 += (int) Test0400.instanceCount;
            Test0400.instanceCount = s2;
        }
        i28 -= (int)861834786104446721L;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f2 i24 i25 = " + Float.floatToIntBits(f2) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 s2 by2 = " + i26 + "," + s2 + "," + by2);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 lArr = " + i30 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0400.instanceCount Test0400.bFld Test0400.dArrFld = " + Test0400.instanceCount + "," + (Test0400.bFld
                ? 1 : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0400.dArrFld)));
        FuzzerUtils.out.println("Test0400.iArrFld = " + FuzzerUtils.checkSum(Test0400.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0400 _instance = new Test0400();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
