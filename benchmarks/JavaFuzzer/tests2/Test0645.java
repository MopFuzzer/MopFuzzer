// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0645 {

    public static final int N = 400;

    public static long instanceCount=-59L;
    public static float fFld=-124.734F;
    public static volatile boolean bFld=true;
    public volatile byte byFld=20;
    public static int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0645.iArrFld, -54180);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        int i9=-18782;
        int i10=-62380;
        int i11=61103;
        int i12=-101;
        int i13=-24979;
        int i14=-27;
        int[][] iArr =new int[N][N];
        float f=-53.4F;
        byte by=127;
        short s=-15772;

        FuzzerUtils.init(iArr, 2);

        for (i9 = 12; i9 < 239; i9++) {
            i10 *= (int)-24.119F;
            f += i9;
            for (i11 = 7; i11 > 1; i11--) {
                switch ((i11 % 1) + 23) {
                case 23:
                    i10 = i10;
                    for (i13 = i9; i13 < 2; i13++) {
                        double d1=-2.60100;
                        i10 += (int) Test0645.instanceCount;
                        i10 ^= i13;
                        try {
                            Test0645.iArrFld[i11 + 1] = (i12 / 24378450);
                            i10 = (i10 % -51250);
                            iArr[i13][i11] = (i14 / -117);
                        } catch (ArithmeticException a_e) {}
                        i14 = i11;
                        switch (((i13 >>> 1) % 3) + 58) {
                        case 58:
                            i14 = 46283;
                            break;
                        case 59:
                            Test0645.instanceCount = i11;
                            by += (byte)(((i13 * by) + i12) - i13);
                            break;
                        case 60:
                            d1 -= by;
                            break;
                        default:
                            iArr[i9][i13] *= i14;
                        }
                    }
                    break;
                default:
                    i10 += (((i11 * i10) + i10) - s);
                }
            }
        }
        vMeth1_check_sum += l1 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + by + s +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i8, long l) {

        int i15=-235, i16=-18216, i17=-45165, i18=-59186, i19=-121, i20=19015;
        double d2=17.28215, d3=-76.26998;
        boolean b=true;

        vMeth1(l);
        for (i15 = 5; i15 < 238; ++i15) {
            for (d2 = i15; 7 > d2; d2++) {
                Test0645.instanceCount = Test0645.instanceCount;
            }
            l = i16;
            i18 = 1;
            do {
                i16 = (int)l;
            } while (++i18 < 7);
            try {
                i16 = (Test0645.iArrFld[i15] % -170);
                i16 = (i18 / 6094);
                i8 = (i17 % 357447018);
            } catch (ArithmeticException a_e) {}
            for (i19 = 1; 7 > i19; i19++) {
                Test0645.fFld += -127.86F;
                i20 *= i19;
                if (b) {
                    d3 = l;
                    i16 = (int) Test0645.instanceCount;
                    i16 += i17;
                }
            }
        }
        long meth_res = i8 + l + i15 + i16 + Double.doubleToLongBits(d2) + i17 + i18 + i19 + i20 +
            Double.doubleToLongBits(d3) + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i2=12, i3=-20, i4=106, i5=26052, i6=-80, i7=-223;
        double d=1.8641;
        byte by1=20;
        boolean b1=true;

        for (i2 = 5; i2 < 185; i2++) {
            for (i4 = 1; i4 < 9; ++i4) {
                if ((((d + i2) - (i3 = i5)) * -9) != (++i3)) continue;
                for (i6 = 2; i6 > i4; i6--) {
                    i3 -= (int)Float.intBitsToFloat(-6036);
                    switch ((i4 % 6) + 111) {
                    case 111:
                        i7 = (int) (((d + d) + iMeth(i7, Test0645.instanceCount)) + Test0645.instanceCount);
                        Test0645.iArrFld[i2] = i7;
                        break;
                    case 112:
                        if (true) break;
                        d = Test0645.fFld;
                        d -= i5;
                        break;
                    case 113:
                        i5 *= 12571;
                        i7 /= (int) ((long) (Test0645.fFld) | 1);
                        d -= by1;
                    case 114:
                        Test0645.instanceCount += i6;
                    case 115:
                    case 116:
                        b1 = b1;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + by1 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=101, i21=1, i22=-1, i23=1;
        double d4=0.22743;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-72);

        i = 1;
        while (++i < 381) {
            Test0645.iArrFld[i - 1] = (i + (i1++));
            vMeth();
            lArrFld[i + 1] = Test0645.instanceCount;
            for (d4 = i; d4 < 66; ++d4) {
                for (i22 = 1; i22 > 1; --i22) {
                    switch ((int)(((d4 % 2) * 5) + 2)) {
                    case 12:
                        switch ((((i22 >>> 1) % 5) * 5) + 127) {
                        case 136:
                            if (true) continue;
                            break;
                        case 139:
                            Test0645.instanceCount -= 120L;
                            i1 += (i22 ^ i);
                            i21 = i23;
                            break;
                        case 142:
                        case 141:
                            byArr[i22 + 1] += (byte)i1;
                            Test0645.iArrFld = Test0645.iArrFld;
                            i23 += (((i22 * i23) + i) - Test0645.instanceCount);
                        case 135:
                            i23 = i1;
                            if (Test0645.bFld) continue;
                        }
                        i23 *= (int) Test0645.instanceCount;
                        Test0645.fFld += i;
                        break;
                    case 9:
                        i1 <<= -124;
                        if (true) {
                            Test0645.bFld = false;
                            Test0645.instanceCount >>= i21;
                        } else {
                            byFld -= (byte)i1;
                            Test0645.instanceCount = Test0645.instanceCount;
                            if (true) {
                                i1 &= i1;
                            }
                            i1 += (i22 * i22);
                        }
                        break;
                    }
                    i21 = i22;
                    Test0645.fFld *= (float) d4;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d4 = " + i + "," + i1 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0645.instanceCount Test0645.fFld Test0645.bFld = " + Test0645.instanceCount + "," +
                Float.floatToIntBits(Test0645.fFld) + "," + (Test0645.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test0645.iArrFld lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0645.iArrFld) +
            "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0645 _instance = new Test0645();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
