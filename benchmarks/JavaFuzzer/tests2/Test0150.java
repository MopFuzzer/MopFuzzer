// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0150 {

    public static final int N = 400;

    public static long instanceCount=35009L;
    public static byte byFld=-26;
    public static int iFld=-11;
    public static short sFld=-12842;
    public static volatile int iFld1=-81;
    public static boolean bFld=false;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0150.iArrFld, -2);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static int iMeth() {

        int i4=130;
        int i5=-6;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 229);

        for (i4 = 5; i4 < 344; ++i4) {
            Test0150.iFld = (++i5);
            iArr = iArr;
        }
        i5 <<= (Test0150.iFld + i5);
        long meth_res = i4 + i5 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f1) {

        int i9=65057, i10=5, i11=11, i12=41521, i13=-217, i14=-2;
        boolean b=true;

        for (i9 = 2; 346 > i9; i9++) {
            Test0150.iFld -= -13;
            Test0150.iArrFld[i9 + 1] += i10;
            try {
                Test0150.iFld = (-99 % Test0150.iArrFld[i9 - 1]);
                Test0150.iFld = (-35 % Test0150.iFld);
                i10 = (-44 % i9);
            } catch (ArithmeticException a_e) {}
            switch ((i9 % 4) + 124) {
            case 124:
                Test0150.iFld += (i9 + i11);
                i11 *= -3;
                if (b) continue;
            case 125:
                for (i12 = 1; i12 < 5; ++i12) {
                    Test0150.iArrFld[i12] >>= (int) Test0150.instanceCount;
                    i13 >>= 8;
                    f1 *= -28469;
                    i14 = 2;
                    do {
                        i13 = Test0150.byFld;
                        i13 -= 9;
                    } while (--i14 > 0);
                }
                break;
            case 126:
                Test0150.iArrFld[i9 + 1] *= Test0150.iFld;
            case 127:
                if (i12 != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f1) + i9 + i10 + i11 + (b ? 1 : 0) + i12 + i13 + i14;
                    return;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i9 + i10 + i11 + (b ? 1 : 0) + i12 + i13 + i14;
    }

    public static int iMeth1(int i6) {

        int i7=-23801, i8=-53494, i15=-15384, i16=44687;
        float f=98.866F;

        for (i7 = 4; i7 < 344; i7++) {
            f += (-(Test0150.instanceCount + (i8 - i8)));
        }
        vMeth1(f);
        switch ((((Test0150.iFld >>> 1) % 1) * 5) + 47) {
        case 49:
            for (i15 = 7; 236 > i15; ++i15) {
                i8 += (i15 + i15);
                i8 <<= (int) Test0150.instanceCount;
            }
        }
        Test0150.instanceCount += Test0150.instanceCount;
        long meth_res = i6 + i7 + i8 + Float.floatToIntBits(f) + i15 + i16;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, byte by, int i2) {

        int i3=-201, i17=-199, i18=-31, i19=-62642, i20=-210;
        float f2=-55.146F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -87L);

        i3 = 1;
        do {
            i2 -= (-iMeth());
            switch (((iMeth1(i3) >>> 1) % 3) + 10) {
            case 10:
                for (i17 = 1; i17 < 4; ++i17) {
                    Test0150.instanceCount |= i17;
                    i18 = (int) Test0150.instanceCount;
                    for (i19 = 1; 2 > i19; ++i19) {
                        Test0150.iArrFld[i17 + 1] = (int) f2;
                        Test0150.sFld -= Test0150.sFld;
                        f2 = Test0150.iFld;
                    }
                    f2 *= i2;
                    Test0150.iArrFld[i17 - 1] *= Test0150.iFld1;
                    lArr[i17] >>= 14834L;
                    Test0150.bFld = Test0150.bFld;
                }
                Test0150.sFld += (short) i3;
                break;
            case 11:
                i18 *= (int) Test0150.instanceCount;
                break;
            case 12:
                lArr[i3 - 1] >>= Test0150.iFld;
                break;
            }
        } while (++i3 < 397);
        vMeth_check_sum += i1 + by + i2 + i3 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-10, i21=-105, i22=8, i23=-54016, i24=205, i25=6, i26=-42, i27=4753;
        float f3=123.1001F;

        i *= ((i++) * (--i));
        Test0150.instanceCount = (++Test0150.byFld);
        vMeth(193, (byte) (65), Test0150.iFld);
        for (i21 = 11; i21 < 376; ++i21) {
            Test0150.iArrFld[i21 + 1] -= (int) Test0150.instanceCount;
            Test0150.instanceCount += (i21 - Test0150.instanceCount);
            Test0150.iFld -= Test0150.sFld;
            i += i21;
        }
        Test0150.byFld -= (byte) Test0150.instanceCount;
        for (i23 = 311; 18 < i23; i23 -= 3) {
            i24 *= (int)-25.232F;
            i -= Test0150.iFld;
            f3 += (i23 * i23);
            switch (((i23 % 2) * 5) + 122) {
            case 128:
                Test0150.iArrFld = Test0150.iArrFld;
                i25 = 1;
                while ((i25 += 3) < 258) {
                    Test0150.iArrFld = Test0150.iArrFld;
                    for (i26 = i23; i26 < 3; ++i26) {
                        if (Test0150.bFld) {
                            Test0150.byFld = (byte) -13;
                            Test0150.iArrFld[i23] = i23;
                            i24 >>= i21;
                            f3 -= Test0150.instanceCount;
                        } else if (Test0150.bFld) {
                            i22 += Test0150.iFld;
                            i22 = i26;
                            Test0150.instanceCount |= -2721086467L;
                            i27 += (((i26 * Test0150.instanceCount) + Test0150.instanceCount) - i27);
                        } else {
                            Test0150.iFld1 >>= (int) Test0150.instanceCount;
                            Test0150.iArrFld[i26] += i21;
                            try {
                                i24 = (19387 / i26);
                                i24 = (i24 / 560925488);
                                Test0150.iFld = (Test0150.iFld / Test0150.iArrFld[i23 - 1]);
                            } catch (ArithmeticException a_e) {}
                        }
                    }
                }
                break;
            case 130:
                i24 >>= i24;
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 f3 = " + i23 + "," + i24 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);

        FuzzerUtils.out.println("Test0150.instanceCount Test0150.byFld Test0150.iFld = " + Test0150.instanceCount + "," + Test0150.byFld +
                "," + Test0150.iFld);
        FuzzerUtils.out.println("Test0150.sFld Test0150.iFld1 Test0150.bFld = " + Test0150.sFld + "," + Test0150.iFld1 + "," + (Test0150.bFld ?
            1 : 0));
        FuzzerUtils.out.println("Test0150.iArrFld = " + FuzzerUtils.checkSum(Test0150.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0150 _instance = new Test0150();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
