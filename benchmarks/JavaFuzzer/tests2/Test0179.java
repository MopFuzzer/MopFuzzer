// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0179 {

    public static final int N = 400;

    public static long instanceCount=-31L;
    public static int iFld=0;
    public static double dFld=1.25868;
    public static boolean bFld=true;
    public static byte byFld=23;
    public int[] iArrFld =new int[N];

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i2) {

        int i3=4, i4=-16, i5=14, i6=-11171, i7=-12149, i8=-137, i9=-4829;
        boolean b=true;
        byte by=122;
        short s=13720;

        Test0179.iFld = Test0179.iFld;
        for (i3 = 3; i3 < 261; i3++) {
            i4 -= (int) Test0179.instanceCount;
            for (i5 = 1; i5 < 6; ++i5) {
                Test0179.instanceCount >>= Test0179.instanceCount;
                i2 = i7;
                if (b) break;
                by -= (byte)i7;
                i4 = i7;
                i6 += i7;
            }
            Test0179.dFld = Test0179.iFld;
            for (i8 = 1; i8 < 6; i8++) {
                Test0179.instanceCount += (6 + (i8 * i8));
            }
            s = s;
            Test0179.instanceCount = i7;
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + by + i8 + i9 + s;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(long l1) {

        double d=-89.114384;
        int i10=-53262;
        int i11=-6;
        int i12=-16866;
        int i13=51;
        int i14=14;
        int i15=3;
        int[] iArr =new int[N];
        float f=1.868F;
        boolean b1=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(sArr, (short)-6038);

        Test0179.iFld >>= Math.max((int) ((Test0179.iFld + d) - (Test0179.instanceCount * d)), (int) (iArr[(Test0179.iFld >>> 1) % N] =
                (int) lMeth(Test0179.iFld)));
        for (i10 = 11; i10 < 328; ++i10) {
            Test0179.instanceCount = (long) f;
            for (i12 = 1; i12 < 5; i12++) {
                f -= i13;
                i11 += i12;
                i13 -= i13;
                l1 = Test0179.iFld;
                Test0179.iFld *= i13;
                sArr[i12] &= (short)l1;
                f *= i10;
                b1 = false;
            }
            for (i14 = 1; i14 < 5; i14 += 3) {
                if (b1) break;
                Test0179.instanceCount >>= Test0179.iFld;
            }
        }
        vMeth_check_sum += l1 + Double.doubleToLongBits(d) + i10 + i11 + Float.floatToIntBits(f) + i12 + i13 + (b1 ? 1
            : 0) + i14 + i15 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public static byte byMeth(int i, long l, int i1) {

        int i16=240;
        int i17=-86;
        int i18=-31030;
        int i19=53723;
        int i20=10;
        int i21=-5;
        int[] iArr1 =new int[N];
        short s1=31920;
        float f1=0.718F;
        byte by1=125;
        long[] lArr =new long[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr1, 236);
        FuzzerUtils.init(lArr, 6106L);
        FuzzerUtils.init(dArr, 108.51350);

        vMeth(l);
        l *= Test0179.iFld;
        iArr1[(i >>> 1) % N] = (int)-8668142789173716250L;
        for (i16 = 14; i16 < 369; i16++) {
            i18 = 5;
            while ((i18 -= 2) > 0) {
                s1 = (short)i;
                lArr[i18] = Test0179.iFld;
                iArr1[i16 + 1] += (int)f1;
            }
            for (i19 = 1; i19 < 5; i19++) {
                i21 = 1;
                do {
                    f1 = 0.925F;
                    i1 %= (int)((long)(f1) | 1);
                    i17 &= by1;
                    i1 = by1;
                    dArr[i19] -= i;
                } while (++i21 < 2);
            }
        }
        long meth_res = i + l + i1 + i16 + i17 + i18 + s1 + Float.floatToIntBits(f1) + i19 + i20 + i21 + by1 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i22=-13, i23=-823, i24=-206, i25=22501, i26=245, i27=-10, i28=12084, i29=192;
        short s2=11436;
        float f2=104.6F, f3=2.433F;
        long l2=6L;

        byMeth(Test0179.iFld, 7L, Test0179.iFld);
        for (i22 = 8; i22 < 169; i22++) {
            byte by2=-49;
            for (i24 = 5; i24 < 156; ++i24) {
                Test0179.dFld -= -221;
            }
            Test0179.instanceCount = s2;
            i23 <<= i22;
            i23 *= i22;
            by2 += (byte)57396;
            iArrFld = iArrFld;
            if (Test0179.bFld) continue;
            Test0179.instanceCount <<= Test0179.instanceCount;
        }
        i25 = i24;
        i25 -= i22;
        f2 = 1;
        while ((f2 += 3) < 253) {
            Test0179.instanceCount -= 0;
            Test0179.iFld <<= i23;
            Test0179.instanceCount = i25;
            for (i26 = 15; i26 < 298; i26++) {
                iArrFld[i26 + 1] >>= i24;
                if (false) continue;
                f3 -= i25;
                Test0179.iFld -= i25;
                for (i28 = 2; i28 > 1; i28 -= 2) {
                    Test0179.iFld -= (int) -82.93109;
                    i25 *= (int) Test0179.instanceCount;
                    i25 = Test0179.byFld;
                    Test0179.instanceCount = i27;
                    if (false) {
                        Test0179.instanceCount = l2;
                        i29 += (i28 * i28);
                    } else {
                        i23 += (-249 + (i28 * i28));
                    }
                }
            }
        }

        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 s2 f2 = " + i25 + "," + s2 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i26 i27 f3 = " + i26 + "," + i27 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i28 i29 l2 = " + i28 + "," + i29 + "," + l2);

        FuzzerUtils.out.println("Test0179.instanceCount Test0179.iFld Test0179.dFld = " + Test0179.instanceCount + "," + Test0179.iFld +
                "," + Double.doubleToLongBits(Test0179.dFld));
        FuzzerUtils.out.println("Test0179.bFld Test0179.byFld iArrFld = " + (Test0179.bFld ? 1 : 0) + "," + Test0179.byFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0179 _instance = new Test0179();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
