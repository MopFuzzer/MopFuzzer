// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0271 {

    public static final int N = 400;

    public static volatile long instanceCount=-11623L;
    public static float fFld=-125.182F;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static byte[] byArrFld =new byte[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0271.iArrFld, 11);
        FuzzerUtils.init(Test0271.lArrFld, 38506L);
        FuzzerUtils.init(Test0271.byArrFld, (byte) -52);
        FuzzerUtils.init(Test0271.fArrFld, -35.932F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, short s) {

        int i5=12, i6=7428;
        double d=1.38080;
        float f=1.54F;

        i3 *= i3;
        for (int i4 : Test0271.iArrFld) {
            for (i5 = 1; 4 > i5; i5++) {
                Test0271.iArrFld[i5] = i5;
                s >>>= (short)-154;
                i4 -= -7;
            }
            if (i4 != 0) {
                vMeth1_check_sum += i3 + s + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f);
                return;
            }
            i4 >>= (int)-37305L;
            Test0271.iArrFld[(i5 >>> 1) % N] -= (int) d;
            Test0271.iArrFld[(i4 >>> 1) % N] = i6;
            f = 1;
            do {
                Test0271.instanceCount += (long) (((f * i5) + i6) - i6);
                i3 <<= (int) Test0271.instanceCount;
            } while (++f < 4);
            i4 = (int) Test0271.instanceCount;
        }
        Test0271.instanceCount += i5;
        vMeth1_check_sum += i3 + s + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f);
    }

    public static int iMeth(long l, long l1) {

        int i1=-145, i2=35662;
        short s1=-31011;
        byte by=-65;
        float f1=-60.378F;

        for (i1 = 4; i1 < 210; i1++) {
            vMeth1(i1, s1);
            i2 -= by;
            Test0271.lArrFld[i1 + 1] = 60939;
            Test0271.iArrFld[i1] += (int) f1;
            Test0271.iArrFld[i1] += i2;
        }
        long meth_res = l + l1 + i1 + i2 + s1 + by + Float.floatToIntBits(f1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i) {

        int i7=-1245, i8=-19, i9=-43019, i10=-23645, i11=-59, i12=-37415;
        long l3=-2787L;
        byte by1=43;

        i = ((i |= iMeth(Test0271.instanceCount, 10401L)) - i);
        for (i7 = 9; i7 < 307; i7++) {
            i = (int) Test0271.instanceCount;
            Test0271.iArrFld[i7 - 1] += i7;
            i = (int) Test0271.fFld;
            for (i9 = 1; i9 < 6; ++i9) {
                i8 *= (int) Test0271.fFld;
                for (i11 = 1; i11 < 2; i11++) {
                    i12 *= i7;
                    switch ((i11 % 7) + 41) {
                    case 41:
                        Test0271.instanceCount += (i11 * i11);
                        if (false) continue;
                        i8 = (int)l3;
                        Test0271.byArrFld[i11 - 1] -= (byte) i11;
                        break;
                    case 42:
                        Test0271.byArrFld[i9] = (byte) -11;
                        break;
                    case 43:
                        if (false) continue;
                        break;
                    case 44:
                        Test0271.iArrFld[i9] = (int) l3;
                        break;
                    case 45:
                        Test0271.fFld -= i;
                        break;
                    case 46:
                        by1 *= by1;
                        break;
                    case 47:
                        i *= -249;
                    default:
                        Test0271.fFld = i;
                    }
                }
            }
        }
        vMeth_check_sum += i + i7 + i8 + i9 + i10 + i11 + i12 + l3 + by1;
    }

    public void mainTest(String[] strArr1) {

        int i13=-8, i14=3, i15=48952, i16=-5, i17=34956, i18=36615, i19=-8, i20=-246, i21=220;
        short s2=-20957;
        boolean b=true;

        vMeth(i13);
        for (i14 = 236; i14 > 1; --i14) {
            try {
                i15 = (i14 % i15);
                i13 = (Test0271.iArrFld[i14] % Test0271.iArrFld[i14]);
                i15 = (i13 / i16);
            } catch (ArithmeticException a_e) {}
            for (i17 = 6; i17 < 107; i17++) {
                switch (((i16 >>> 1) % 2) + 125) {
                case 125:
                    for (i19 = i14; 2 > i19; ++i19) {
                        switch (((i19 % 2) * 5) + 4) {
                        case 6:
                            Test0271.fFld += (i19 - i13);
                        case 12:
                            i20 = -7;
                            break;
                        default:
                            i20 <<= (int)170L;
                            Test0271.fFld += i19;
                            Test0271.fArrFld[i17 + 1] += i14;
                            i15 += i16;
                        }
                        i20 -= (int)-3L;
                        i15 -= i16;
                        Test0271.instanceCount = i19;
                        i18 += (i19 * i19);
                        i13 += (23210 + (i19 * i19));
                        s2 += (short) Test0271.instanceCount;
                        i16 *= i19;
                        i15 %= (int)(i20 | 1);
                    }
                    i18 += (i17 * i18);
                    break;
                case 126:
                    i20 <<= (int) Test0271.instanceCount;
                    i13 += (((i17 * Test0271.fFld) + Test0271.instanceCount) - i13);
                    i21 = 1;
                    do {
                        Test0271.instanceCount *= i21;
                        i18 = i20;
                        if (b) continue;
                    } while (++i21 < 2);
                default:
                    i18 = -71;
                    if (b) break;
                }
            }
        }

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 s2 = " + i19 + "," + i20 + "," + s2);
        FuzzerUtils.out.println("i21 b = " + i21 + "," + (b ? 1 : 0));

        FuzzerUtils.out.println("Test0271.instanceCount Test0271.fFld Test0271.iArrFld = " + Test0271.instanceCount + "," +
                Float.floatToIntBits(Test0271.fFld) + "," + FuzzerUtils.checkSum(Test0271.iArrFld));
        FuzzerUtils.out.println("Test0271.lArrFld Test0271.byArrFld Test0271.fArrFld = " + FuzzerUtils.checkSum(Test0271.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0271.byArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0271.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0271 _instance = new Test0271();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
