// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0033 {

    public static final int N = 400;

    public static long instanceCount=7691541626717013251L;
    public static float fFld=-103.426F;
    public static double dFld=1.122879;
    public static long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];
    public int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0033.lArrFld, 5L);
        FuzzerUtils.init(Test0033.dArrFld, -1.101747);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i7, int i8) {

        int i9=-37613;
        int i10=144;
        int i12=49232;
        int i13=123;
        int i14=0;
        int[] iArr1 =new int[N];
        float f1=-72.884F;
        byte by1=112;
        short s1=5054;

        FuzzerUtils.init(iArr1, 102);

        for (i9 = 17; i9 < 319; i9++) {
            Test0033.fFld = i8;
        }
        i8 = -32833;
        f1 = 1;
        do {
            i12 = 1;
            while (++i12 < 10) {
                Test0033.dArrFld[i12 + 1] += -57891;
                i8 += 29;
                i8 -= by1;
                for (i13 = 1; i13 > 1; i13 -= 3) {
                    iArr1[(int)(f1 + 1)] *= i14;
                    i7 *= i10;
                    i10 += (i13 + i9);
                    Test0033.fFld -= i14;
                    i7 -= s1;
                    i10 %= (int)(i12 | 1);
                }
            }
        } while (++f1 < 154);
        long meth_res = i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + i12 + by1 + i13 + i14 + s1 +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l1) {

        int i1=151;
        int i2=4;
        int i3=32655;
        int i4=-8;
        int i5=-63414;
        int i6=143;
        int[] iArr =new int[N];
        boolean b=true;
        float f=2.442F;
        short s=-18973;
        byte by=-65;
        double d=2.69978;

        FuzzerUtils.init(iArr, 117);

        for (i1 = 8; i1 < 240; i1++) {
            for (i3 = 1; 7 > i3; i3++) {
                b = ((Math.min(i1, 0) - (iArr[i3]--)) >= (++l1));
                for (i5 = 1; i5 < 2; i5++) {
                    switch (((i1 % 4) * 5) + 100) {
                    case 102:
                        i4 ^= (int) (Test0033.lArrFld[i1] - (iArr[i5 + 1]--));
                        break;
                    case 120:
                        f = (i4++);
                        s >>= (short)(i2++);
                        i6 -= (++iArr[(i3 >>> 1) % N]);
                        Test0033.dArrFld[i5] *= by;
                        break;
                    case 101:
                        iArr[i5] *= (int) (((Test0033.instanceCount - i6) - (-121L % (((long) (f + Test0033.fFld)) | 1))) +
                                ((Test0033.fFld -= (float) d) * (i4--)));
                        iArr[i3 + 1] = i1;
                        break;
                    case 114:
                        by *= (byte)(((i1 - i6) - iMeth1(i3, i1)) + i1);
                        i6 = i5;
                        try {
                            iArr[i3 - 1] = (iArr[i5 - 1] % i4);
                            iArr[i5] = (115 % iArr[i1 - 1]);
                            i2 = (-174 % iArr[i5]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    default:
                        f += Test0033.instanceCount;
                    }
                }
            }
        }
        long meth_res = l1 + i1 + i2 + i3 + i4 + (b ? 1 : 0) + i5 + i6 + Float.floatToIntBits(f) + s + by +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(long l, int i) {

        int i15=361, i16=16201, i17=43342, i18=33879;
        double d1=-7.8352;
        long l2=-43047L;
        byte by2=-63;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)5);

        i += iMeth(l);
        for (i15 = 4; i15 < 170; i15++) {
            switch (((i15 % 4) * 5) + 86) {
            case 103:
                iArrFld[i15 - 1][i15] = i16;
                i17 = 1;
                do {
                    Test0033.fFld = i17;
                    byArr = byArr;
                    i18 = 1;
                    while (++i18 < 1) {
                        Test0033.fFld += i;
                        i16 -= (int) Test0033.fFld;
                        iArrFld[i17 + 1] = iArrFld[i17];
                        l += i18;
                        i16 >>= (int) Test0033.instanceCount;
                        d1 -= l2;
                        i += (i18 * i);
                    }
                } while (++i17 < 10);
                break;
            case 90:
                i16 = (int) Test0033.fFld;
                break;
            case 91:
                Test0033.fFld = i;
            case 87:
                by2 <<= (byte)-12;
                break;
            }
        }
        vMeth_check_sum += l + i + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d1) + l2 + by2 +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=-60752, i20=-160, i21=1, i22=-34813, i23=142, i24=-240, i25=-51539, i26=234;
        boolean b1=false;
        long l3=4292535926L;
        byte by3=-121;

        vMeth(Test0033.instanceCount, i19);
        b1 = b1;
        for (l3 = 5; 247 > l3; ++l3) {
            iArrFld[(int)(l3)][(int)(l3)] = 227;
            i20 += (int)(l3 - by3);
            i19 -= i19;
            i20 = i19;
            Test0033.fFld -= i19;
            i20 = -1790;
            iArrFld[(int)(l3 + 1)] = FuzzerUtils.int1array(N, (int)6);
            i19 += (int)l3;
        }
        by3 <<= (byte)l3;
        i21 = 232;
        while (--i21 > 0) {
            i19 = i20;
            Test0033.instanceCount *= i20;
            for (i22 = 4; 108 > i22; ++i22) {
                Test0033.dFld = Test0033.fFld;
                Test0033.instanceCount += (((i22 * Test0033.instanceCount) + i19) - l3);
                Test0033.instanceCount = 12;
                i20 <<= (int)7L;
            }
            iArrFld[i21][i21] = i19;
            i23 = i22;
            i19 *= (int) Test0033.fFld;
        }
        i24 = 1;
        do {
            by3 <<= (byte) Test0033.instanceCount;
            for (i25 = 1; i25 < 69; i25++) {
                switch ((((64844 >>> 1) % 1) * 5) + 126) {
                case 128:
                    Test0033.instanceCount -= i25;
                    i23 *= (int)l3;
                    break;
                default:
                    Test0033.instanceCount += -198;
                }
            }
        } while (++i24 < 366);

        FuzzerUtils.out.println("i19 b1 l3 = " + i19 + "," + (b1 ? 1 : 0) + "," + l3);
        FuzzerUtils.out.println("i20 by3 i21 = " + i20 + "," + by3 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 = " + i25 + "," + i26);

        FuzzerUtils.out.println("Test0033.instanceCount Test0033.fFld Test0033.dFld = " + Test0033.instanceCount + "," +
                Float.floatToIntBits(Test0033.fFld) + "," + Double.doubleToLongBits(Test0033.dFld));
        FuzzerUtils.out.println("Test0033.lArrFld Test0033.dArrFld iArrFld = " + FuzzerUtils.checkSum(Test0033.lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0033.dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0033 _instance = new Test0033();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
