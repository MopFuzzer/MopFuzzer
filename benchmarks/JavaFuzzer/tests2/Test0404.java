// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:31 2023
public class Test0404 {

    public static final int N = 400;

    public static long instanceCount=-686111788L;
    public static double dFld=-1.86763;
    public float fFld=36.338F;
    public long lFld=294728981058716713L;
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0404.iArrFld, -56776);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=7, i9=2, i10=1, i11=136, i12=53213;
        short s1=21759;
        float f=79.583F;

        for (i8 = 4; i8 < 267; ++i8) {
            s1 = (short)f;
            i9 += (i8 * i8);
            Test0404.instanceCount += i8;
            i10 = 1;
            do {
                Test0404.iArrFld[i10][i8 + 1] = i8;
                i9 += i10;
                i9 = i8;
                i9 = (int)f;
                for (i11 = i8; i11 < 1; i11++) {
                    Test0404.dFld /= (Test0404.instanceCount | 1);
                    i9 = i10;
                    i9 += (i11 * i11);
                    s1 *= (short) Test0404.dFld;
                    Test0404.dFld = i11;
                }
            } while (++i10 < 6);
        }
        vMeth2_check_sum += i8 + i9 + s1 + Float.floatToIntBits(f) + i10 + i11 + i12;
    }

    public static void vMeth1(int i4, int i5, int i6) {

        int i7=8460, i13=-7, i14=-10593, i15=-171, i16=179;
        short s=9649, s2=-21509;
        long l=1487070999L;
        long[] lArr =new long[N];
        float f1=117.41F;

        FuzzerUtils.init(lArr, 31L);

        i7 = 1;
        do {
            s += (short)(i7 | i6);
            vMeth2();
            for (i13 = 5; i13 > 1; i13 -= 2) {
                switch ((i7 % 9) + 56) {
                case 56:
                    i4 *= i6;
                case 57:
                case 58:
                case 59:
                    i14 >>= s2;
                    i4 += i6;
                    i6 += i13;
                    lArr[i13] -= i7;
                    break;
                case 60:
                    for (l = i13; 3 > l; ++l) {
                        boolean b=true;
                        if (b) break;
                        if (b) continue;
                        try {
                            i15 = (-6 / i15);
                            i15 = (i14 / 43922);
                            i4 = (i5 % 31065);
                        } catch (ArithmeticException a_e) {}
                        Test0404.instanceCount += (long) f1;
                    }
                    break;
                case 61:
                    i16 >>= i4;
                    break;
                case 62:
                    try {
                        i14 = (i16 % i15);
                        i5 = (-760113124 / i4);
                        Test0404.iArrFld[i7][i13] = (i13 / 1113558331);
                    } catch (ArithmeticException a_e) {}
                case 63:
                    i15 <<= 17;
                    break;
                case 64:
                    i4 += (i13 | l);
                    break;
                }
            }
        } while (++i7 < 321);
        vMeth1_check_sum += i4 + i5 + i6 + i7 + s + i13 + i14 + s2 + l + i15 + Float.floatToIntBits(f1) + i16 +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3, double d1) {

        int i17=11, i18=-4, i19=249, i20=52902, i21=-35664;
        float f2=-17.657F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 2096642360L);

        vMeth1(i3, i3, 27);
        i3 -= (int)121.99021;
        for (i17 = 16; i17 < 256; i17++) {
            try {
                Test0404.iArrFld[i17][i17 - 1] = (i18 / -107);
                i3 = (i18 / -42446);
                Test0404.iArrFld[i17 - 1][i17] = (Test0404.iArrFld[i17][i17 + 1] / i18);
            } catch (ArithmeticException a_e) {}
            i18 += (i17 * i17);
            i18 += (int)1.111601;
            i18 += (int) Test0404.instanceCount;
            for (i19 = 1; i19 < 7; ++i19) {
                i20 += (((i19 * i18) + f2) - i20);
                i18 = (int)f2;
                i18 -= (int) Test0404.dFld;
                try {
                    i18 = (Test0404.iArrFld[i17 - 1][i17] / -19428);
                    i3 = (i20 / i19);
                    i20 = (Test0404.iArrFld[i17 + 1][i19] % 5322);
                } catch (ArithmeticException a_e) {}
                i3 >>= i21;
                lArr1[i19 - 1] += -188L;
                i20 += (int) Test0404.instanceCount;
            }
        }
        vMeth_check_sum += i3 + Double.doubleToLongBits(d1) + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) + i21 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=-7, i2=-106, i22=34050, i23=11317, i24=7, i25=-8, i26=1, i27=62;
        double d=1.111178;
        double d2=-2.72608;
        double[] dArr =new double[N];
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        byte by=31;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 20209L);
        FuzzerUtils.init(dArr, 0.105322);
        FuzzerUtils.init(bArr, false);

        Test0404.iArrFld[(i >>> 1) % N][(-100 >>> 1) % N] -= (int) (d++);
        for (i1 = 16; 320 > i1; i1++) {
            i2 = (i++);
            vMeth(i, d);
            i2 = (int)-6334347710911106063L;
            lArr2 = lArr2;
        }
        Test0404.instanceCount = i2;
        b1 = false;
        for (i22 = 4; i22 < 196; ++i22) {
            switch ((i22 % 4) + 88) {
            case 88:
                i += i2;
                Test0404.instanceCount -= 26058;
                if (b1) break;
                switch ((i22 % 6) + 84) {
                case 84:
                    if (b1) {
                        switch (((i >>> 1) % 6) + 16) {
                        case 16:
                            i24 = 1;
                            while (++i24 < 131) {
                                if (b1) break;
                                if (b1) continue;
                                dArr[i24] -= fFld;
                                i23 *= i1;
                            }
                            for (d2 = 7; d2 < 131; d2++) {
                                for (i26 = 1; 2 > i26; i26++) {
                                    if (b1) break;
                                    fFld += (i26 + fFld);
                                    fFld += (((i26 * i22) + i25) - i);
                                    i23 += (int)(150L + (i26 * i26));
                                    Test0404.instanceCount -= i2;
                                    i23 *= 7;
                                    i23 += (i26 | (long)fFld);
                                }
                            }
                            break;
                        case 17:
                            i23 += i24;
                            break;
                        case 18:
                            i23 = i2;
                        case 19:
                            Test0404.iArrFld[i22 + 1][i22] -= (int) Test0404.instanceCount;
                        case 20:
                            i27 -= i22;
                            break;
                        case 21:
                            i2 = i27;
                            break;
                        }
                    }
                case 85:
                case 86:
                    i25 *= (int)d2;
                    break;
                case 87:
                    i25 -= 16786;
                    break;
                case 88:
                    i27 = i27;
                    break;
                case 89:
                    by -= (byte)-1.44145;
                    break;
                }
                break;
            case 89:
                i25 = i26;
            case 90:
                i23 = 17771;
                break;
            case 91:
                bArr[i22] = b1;
                break;
            default:
                lFld = 247;
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 b1 i22 = " + i2 + "," + (b1 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 i24 d2 = " + i23 + "," + i24 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("by lArr2 dArr = " + by + "," + FuzzerUtils.checkSum(lArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0404.instanceCount Test0404.dFld fFld = " + Test0404.instanceCount + "," +
                Double.doubleToLongBits(Test0404.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("lFld Test0404.iArrFld = " + lFld + "," + FuzzerUtils.checkSum(Test0404.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0404 _instance = new Test0404();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
