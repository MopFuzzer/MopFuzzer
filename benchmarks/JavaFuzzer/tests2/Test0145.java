// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0145 {

    public static final int N = 400;

    public static long instanceCount=-5239287030824793439L;
    public static float fFld=2.149F;
    public static short sFld=-494;
    public static boolean bFld=false;
    public static int iFld=-191;
    public double dFld=0.6915;
    public static byte[] byArrFld =new byte[N];
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static long[][] lArrFld1 =new long[N][N];
    public volatile float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0145.byArrFld, (byte) -75);
        FuzzerUtils.init(Test0145.iArrFld, -49272);
        FuzzerUtils.init(Test0145.lArrFld, 51394L);
        FuzzerUtils.init(Test0145.lArrFld1, 1211833037L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        int i3=49;
        int i4=-12;
        int i5=-40700;
        int i6=-23;
        int i7=39;
        int[] iArr =new int[N];
        double d=60.52100;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 2.477F);
        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(lArr, -24L);

        for (i3 = 1; i3 < 381; ++i3) {
            Test0145.sFld += (short) (i3 * l1);
            i4 = i3;
            i5 = 1;
            do {
                Test0145.fFld -= Test0145.instanceCount;
                i4 *= i5;
                iArr[i3] += (int)d;
            } while (++i5 < 4);
            for (i6 = 4; i3 < i6; --i6) {
                Test0145.byArrFld[i6] -= (byte) -6;
            }
            if (Test0145.bFld) break;
            i4 -= (int) Test0145.fFld;
        }
        for (long l2 : lArr) {
            if (Test0145.bFld) {
                fArr[(i6 >>> 1) % N] += i3;
            } else if (Test0145.bFld) {
                i7 -= i3;
            } else {
                i4 = i5;
            }
        }
        vMeth1_check_sum += l1 + i3 + i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i2) {

        long l3=4039514266263859355L;
        long[] lArr1 =new long[N];
        int i8=218, i9=4864, i11=41891, i12=8, i13=5231;
        byte by=-73;
        float f1=-99.411F;
        double d1=34.51801;

        FuzzerUtils.init(lArr1, -57622L);

        vMeth1(l3);
        for (i8 = 1; i8 < 372; i8++) {
            by += (byte)i8;
        }
        i9 = (int)l3;
        for (int i10 : Test0145.iArrFld) {
            try {
                i9 = (i8 / 140);
                i9 = (Test0145.iArrFld[(i9 >>> 1) % N] / 30266);
                i2 = (-1039398587 / i2);
            } catch (ArithmeticException a_e) {}
        }
        i11 = 1;
        do {
            Test0145.instanceCount = (long) 5.313F;
            f1 = 1;
            do {
                i2 -= (int)113L;
                lArr1[i11] += (long)d1;
                for (i12 = 1; i12 < 1; ++i12) {
                    try {
                        Test0145.iArrFld[i11 + 1] = (i13 / i13);
                        i9 = (-97 / i11);
                        i9 = (459317047 % i2);
                    } catch (ArithmeticException a_e) {}
                    i2 += i12;
                    Test0145.fFld += (i12 + i2);
                }
            } while (++f1 < 5);
        } while (++i11 < 319);
        long meth_res = i2 + l3 + i8 + i9 + by + i11 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i12 +
            i13 + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, long l, int i1) {

        double d2=1.68043;
        int i14=-12, i15=152, i16=-49544, i17=-10, i18=25138;

        i1 = (int) ((++l) * ((Test0145.fFld++) + Math.max(i1, i1)));
        i = (int)(iMeth(i1) << l);
        i1 -= (int)d2;
        if (Test0145.bFld) {
            i14 = 1;
            while (++i14 < 366) {
                i15 = 1;
                while (++i15 < 5) {
                    l = (long)d2;
                    i += i15;
                    Test0145.sFld = (short) i16;
                    for (i17 = 1; i17 > 1; i17 -= 3) {
                        Test0145.iArrFld[i14 + 1] = i18;
                        if (i15 != 0) {
                            vMeth_check_sum += i + l + i1 + Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + i18;
                            return;
                        }
                        Test0145.fFld += i14;
                        i16 += (i17 * i17);
                        if (Test0145.bFld) break;
                    }
                }
            }
        } else if (Test0145.bFld) {
            i = i;
        } else {
            i16 = i14;
        }
        vMeth_check_sum += i + l + i1 + Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + i18;
    }

    public void mainTest(String[] strArr1) {

        int i19=24, i20=-13, i21=123, i22=-9, i23=-7432, i24=9, i25=3, i26=-10, i27=-60002, i28=-253, i29=4,
            i30=-17573, i32=1216, i33=-11;
        byte by1=-64;

        vMeth(Test0145.iFld, Test0145.instanceCount, Test0145.iFld);
        Test0145.iArrFld[(Test0145.iFld >>> 1) % N] -= Test0145.iFld;
        for (i19 = 5; 229 > i19; i19++) {
            Test0145.iFld *= (int) 4L;
        }
        for (i21 = 6; i21 < 136; i21++) {
            i20 >>= i20;
            for (i23 = i21; i23 < 193; ++i23) {
                for (i25 = 1; i25 > 1; i25--) {
                    dFld += Test0145.instanceCount;
                    i24 -= i25;
                    i20 = -14;
                    Test0145.iFld = i21;
                    Test0145.instanceCount = (long) 1.596F;
                    Test0145.lArrFld[i21] -= 42108;
                    Test0145.iFld += i21;
                    Test0145.lArrFld1 = Test0145.lArrFld1;
                }
                for (i27 = 1; i27 < 1; i27++) {
                    Test0145.iArrFld[i21 + 1] &= i22;
                }
            }
            i28 += i19;
            for (i29 = 5; 193 > i29; i29++) {
                Test0145.iArrFld[(i22 >>> 1) % N] = (int) Test0145.instanceCount;
                i28 += (int)1.503F;
                if (Test0145.bFld) break;
            }
            i22 |= Test0145.iFld;
            fArrFld[(i23 >>> 1) % N] += Test0145.fFld;
            for (i32 = 193; i32 > 12; --i32) {
                by1 += (byte)(i32 | i29);
                Test0145.lArrFld[i21 + 1] = 209;
                Test0145.instanceCount = Test0145.sFld;
                Test0145.iFld *= (int) dFld;
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i32 i33 by1 = " + i32 + "," + i33 + "," + by1);

        FuzzerUtils.out.println("Test0145.instanceCount Test0145.fFld Test0145.sFld = " + Test0145.instanceCount + "," +
                Float.floatToIntBits(Test0145.fFld) + "," + Test0145.sFld);
        FuzzerUtils.out.println("Test0145.bFld Test0145.iFld dFld = " + (Test0145.bFld ? 1 : 0) + "," + Test0145.iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0145.byArrFld Test0145.iArrFld Test0145.lArrFld = " + FuzzerUtils.checkSum(Test0145.byArrFld) +
                "," + FuzzerUtils.checkSum(Test0145.iArrFld) + "," + FuzzerUtils.checkSum(Test0145.lArrFld));
        FuzzerUtils.out.println("Test0145.lArrFld1 fArrFld = " + FuzzerUtils.checkSum(Test0145.lArrFld1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0145 _instance = new Test0145();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
