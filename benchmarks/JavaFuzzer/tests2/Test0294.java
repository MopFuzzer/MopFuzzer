// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0294 {

    public static final int N = 400;

    public static long instanceCount=3566778243691899041L;
    public static int iFld=9724;
    public static float fFld=2.263F;
    public static double dFld=0.123098;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        short s=-7025;
        int i5=-160, i6=-23325, i7=-12, i8=-97, i9=8;
        double d1=0.117647;
        long l=-2963356114590755659L;

        Test0294.iFld *= (int) -1L;
        Test0294.iFld = (int) Test0294.instanceCount;
        s -= (short)-32989;
        Test0294.iFld = Test0294.iFld;
        for (i5 = 2; i5 < 275; i5++) {
            for (i7 = 1; i7 < 6; i7++) {
                Test0294.instanceCount = Test0294.iFld;
                i6 += (i7 | (long) Test0294.fFld);
                Test0294.iFld = (int) d1;
                i6 += -84;
                i8 = Test0294.iFld;
                i8 += (i7 | i6);
                for (l = 1; 2 > l; ++l) {
                    i8 += (int)l;
                }
            }
            i8 = (int)l;
        }
        long meth_res = s + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) + l + i9;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        boolean b=true;
        int i10=7;
        int i11=25;
        int i12=-32074;
        int[] iArr =new int[N];
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(dArr, 125.36980);
        FuzzerUtils.init(iArr, -35336);
        FuzzerUtils.init(lArr, -3728530671L);

        for (double d : dArr) {
            Test0294.iFld = iMeth1();
            iArr[(Test0294.iFld >>> 1) % N] = (int) Test0294.instanceCount;
            if (b) {
                Test0294.iFld = (int) 126.316F;
            }
            Test0294.fFld *= Test0294.instanceCount;
            i10 = 1;
            while (++i10 < 4) {
                Test0294.iFld *= i10;
                for (i11 = 1; i11 < 1; ++i11) {
                    Test0294.instanceCount >>= i11;
                    Test0294.iFld += i11;
                    lArr[i11 - 1] -= Test0294.iFld;
                }
                Test0294.instanceCount = i11;
                i12 = (int)d;
            }
            i12 *= i12;
        }
        vMeth_check_sum += (b ? 1 : 0) + i10 + i11 + i12 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public int iMeth(int i2, int i3, int i4) {

        int i13=-45977, i14=7, i15=10, i16=-14, i17=-26619, i18=13, i19=-31339;
        short s1=19892;

        vMeth();
        i13 = 1;
        do {
            Test0294.fFld = i13;
            i2 += (((i13 * Test0294.instanceCount) + s1) - i3);
            for (i14 = i13; i14 < 5; ++i14) {
                Test0294.fFld = -7;
                for (i16 = i14; i16 < 1; ++i16) {
                    i4 >>= i17;
                    Test0294.fFld += i2;
                    Test0294.instanceCount += Test0294.instanceCount;
                }
                Test0294.fFld = (float) Test0294.dFld;
                for (i18 = 1; i18 > i13; i18--) {
                    i15 += (int)45378L;
                    Test0294.iFld += (i18 | i19);
                    i17 -= i13;
                }
            }
        } while (++i13 < 310);
        long meth_res = i2 + i3 + i4 + i13 + s1 + i14 + i15 + i16 + i17 + i18 + i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-215;
        int i1=55427;
        int i20=-39611;
        int i21=-4;
        int i22=33602;
        int i23=31669;
        int i24=66;
        int[] iArr1 =new int[N];
        byte by=-56;
        double d2=2.60449;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -2.107F);
        FuzzerUtils.init(iArr1, 6);

        for (i = 5; i < 196; i++) {
            iMeth(i, -14, -52992);
            i1 = (int) Test0294.instanceCount;
            switch ((((-132 >>> 1) % 2) * 5) + 2) {
            case 11:
                fArr = fArr;
                i1 += (int) Test0294.instanceCount;
                Test0294.iFld &= i;
                Test0294.dFld += 82;
                break;
            case 4:
                for (i20 = 6; i20 < 131; i20++) {
                    i1 = i1;
                    iArr1 = FuzzerUtils.int1array(N, (int)7);
                    Test0294.iFld += (int) (86L + (i20 * i20));
                }
                i21 >>>= (int) Test0294.instanceCount;
                i21 += (i | Test0294.instanceCount);
                i1 = (int) Test0294.instanceCount;
                break;
            }
            Test0294.iFld += (i + i1);
            for (i22 = 131; i22 > 8; i22--) {
                Test0294.instanceCount = Test0294.instanceCount;
                by -= (byte)i;
                i23 *= i22;
                i21 = (int)62L;
            }
            switch ((i % 6) + 24) {
            case 24:
                i21 += (i - i21);
                break;
            case 25:
                i21 &= by;
                fArr = fArr;
                break;
            case 26:
                iArr1[i] <<= i1;
                break;
            case 27:
                for (d2 = 131; d2 > 5; d2--) {
                    Test0294.dFld += i22;
                    Test0294.fFld *= 4;
                    i23 = -146;
                }
                break;
            case 28:
                i1 >>= (int) Test0294.instanceCount;
                break;
            case 29:
                try {
                    i23 = (i24 % 136);
                    i24 = (-1592030168 / i21);
                    Test0294.iFld = (Test0294.iFld % i1);
                } catch (ArithmeticException a_e) {}
                break;
            }
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("by d2 i24 = " + by + "," + Double.doubleToLongBits(d2) + "," + i24);
        FuzzerUtils.out.println("fArr iArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0294.instanceCount Test0294.iFld Test0294.fFld = " + Test0294.instanceCount + "," + Test0294.iFld +
                "," + Float.floatToIntBits(Test0294.fFld));
        FuzzerUtils.out.println("Test0294.dFld = " + Double.doubleToLongBits(Test0294.dFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0294 _instance = new Test0294();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
