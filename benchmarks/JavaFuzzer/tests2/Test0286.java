// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0286 {

    public static final int N = 400;

    public static volatile long instanceCount=-51701L;
    public static short sFld=28176;
    public volatile boolean bFld=true;
    public static byte byFld=81;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0286.lArrFld, 245L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d2, float f1) {

        int i8=46823, i9=-14, i10=-241, i11=99, i12=-129, i13=48668;
        boolean b=false;

        for (i8 = 9; i8 < 155; i8++) {
            for (i10 = 1; i10 < 11; ++i10) {
                i11 = (int)-87L;
                i12 = 1;
                do {
                    i9 = 64294;
                    i9 += (((i12 * i8) + i9) - Test0286.instanceCount);
                    Test0286.sFld = (short) Test0286.instanceCount;
                    i11 -= i9;
                    i9 = i9;
                    i11 = i11;
                    switch (((i10 % 9) * 5) + 30) {
                    case 55:
                        if (b) continue;
                        break;
                    case 36:
                        Test0286.sFld <<= (short) i12;
                        break;
                    case 31:
                        Test0286.sFld -= (short) i12;
                        i9 -= i10;
                        break;
                    case 62:
                        Test0286.instanceCount += i12;
                        break;
                    case 68:
                        Test0286.instanceCount *= i11;
                        break;
                    case 65:
                        i11 -= i9;
                        break;
                    case 41:
                        f1 += 64850L;
                    case 56:
                        Test0286.sFld = (short) Test0286.instanceCount;
                        break;
                    case 52:
                        Test0286.instanceCount += i13;
                        break;
                    default:
                        i13 += (((i12 * f1) + i10) - i8);
                    }
                } while (++i12 < 2);
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + i12 + (b ? 1
            : 0) + i13;
    }

    public static int iMeth1(double d1, long l2) {

        int i7=14, i14=-11, i15=184, i16=249, i17=-12, i18=100, i19=224;
        byte by=43;
        boolean b1=true;
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(bArr, false);

        i7 = 1;
        while (++i7 < 265) {
            l2 -= (Test0286.instanceCount++);
            Test0286.lArrFld[i7] *= (Test0286.sFld <<= (short) ((by - i7) - by));
        }
        vMeth(-41.105887, 90.499F);
        i14 = 1;
        do {
            for (i15 = 1; i15 < 5; i15++) {
                float f2=0.534F;
                i17 = 1;
                while (++i17 < 2) {
                    i16 ^= 13;
                }
                f2 -= 18544;
                for (i18 = 2; i18 > i14; i18--) {
                    i19 += i18;
                    if (b1) break;
                    by = (byte)i19;
                    bArr = bArr;
                    i16 -= i14;
                }
            }
        } while (++i14 < 350);
        long meth_res = Double.doubleToLongBits(d1) + l2 + i7 + by + i14 + i15 + i16 + i17 + i18 + i19 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(bArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, long l1, int i2) {

        float f=121.948F;
        double d=-108.55601;
        int i3=12, i4=-2, i5=4, i6=-2, i20=-13827, i21=12;
        byte by1=-28;

        f = (float)Math.abs(++d);
        for (i3 = 7; i3 < 295; i3++) {
            for (i5 = i3; i5 < 6; i5++) {
                i4 += i5;
                i6 = iMeth1(65.69638, Test0286.instanceCount);
                Test0286.sFld = (short) l;
                for (i20 = 1; i20 > 1; --i20) {
                    i6 *= (int)d;
                    i6 >>= i2;
                    f -= -4;
                    by1 = (byte)i3;
                    i21 *= by1;
                    i4 += i3;
                    Test0286.instanceCount = i2;
                    i4 = i21;
                }
            }
        }
        long meth_res = l + l1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i20 +
            i21 + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=197;
        int i1=4;
        int i22=-226;
        int i23=-132;
        int i24=-27377;
        int i25=13;
        int i26=-10;
        int i27=9921;
        int[] iArr =new int[N];
        long l3=-9L, l4=-236L;
        float f3=1.940F;
        float[] fArr =new float[N];
        double d3=127.74138;

        FuzzerUtils.init(iArr, -42132);
        FuzzerUtils.init(fArr, -1.488F);

        for (i = 3; i < 154; i++) {
            i1 += i;
            try {
                i1 = (i1 / -187);
                i1 = (i / 1371870328);
                iArr[i] = (19117 / i);
            } catch (ArithmeticException a_e) {}
            i1 += (int) (((4 + Test0286.instanceCount) + i1) + ((i1++) % ((12724 * (i1++)) | 1)));
            i1 = iMeth(-7035690594842322491L, Test0286.instanceCount, i);
            i1 += (int) Test0286.instanceCount;
            switch (((i % 7) * 5) + 72) {
            case 90:
                for (i22 = 3; i22 < 166; i22 += 2) {
                    for (i24 = 1; 3 > i24; i24 += 2) {
                        Test0286.instanceCount += i24;
                        l3 += (((i24 * f3) + i22) - i24);
                        Test0286.sFld -= (short) i1;
                    }
                    if (true) continue;
                    i1 += (((i22 * i1) + f3) - i1);
                    i1 = (int)92L;
                    if (bFld) continue;
                    f3 = i25;
                    iArr[i + 1] = (int)l4;
                    f3 *= -122;
                }
                for (i26 = 8; i26 < 166; i26 += 3) {
                    iArr[i + 1] = 205;
                    Test0286.lArrFld[i26 - 1] = Test0286.sFld;
                    i27 += i;
                    l4 = -190;
                    l4 -= (long)-2.798F;
                    Test0286.byFld = (byte) f3;
                    Test0286.byFld = (byte) i22;
                    Test0286.sFld %= (short) (i24 | 1);
                    Test0286.sFld <<= Test0286.byFld;
                }
                break;
            case 77:
                i27 += (i * i22);
            case 98:
                i25 -= (int)115.384F;
            case 75:
                d3 -= l3;
                break;
            case 104:
                if (bFld) continue;
                break;
            case 100:
                fArr[i - 1] = l3;
                break;
            case 93:
                i23 += i24;
                break;
            default:
                if (bFld) continue;
            }
        }

        FuzzerUtils.out.println("i i1 i22 = " + i + "," + i1 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("l3 f3 l4 = " + l3 + "," + Float.floatToIntBits(f3) + "," + l4);
        FuzzerUtils.out.println("i26 i27 d3 = " + i26 + "," + i27 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("iArr fArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0286.instanceCount Test0286.sFld bFld = " + Test0286.instanceCount + "," + Test0286.sFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0286.byFld Test0286.lArrFld = " + Test0286.byFld + "," + FuzzerUtils.checkSum(Test0286.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0286 _instance = new Test0286();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
