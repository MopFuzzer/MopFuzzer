// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0848 {

    public static final int N = 400;

    public static long instanceCount=-8567801007873207535L;
    public static int iFld=-77;
    public static short sFld=-1565;
    public static float fFld=127.254F;
    public static int iFld1=9762;
    public byte byFld=74;
    public short[] sArrFld =new short[N];
    public static int[][] iArrFld =new int[N][N];
    public byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0848.iArrFld, -2);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        double d=-2.70879;
        int i2=194, i3=-5, i4=60122, i5=-66, i6=7664;
        float f1=2.344F;

        Test0848.iFld -= Test0848.iFld;
        Test0848.iArrFld[(Test0848.iFld >>> 1) % N][(Test0848.iFld >>> 1) % N] >>>= 98;
        Test0848.iFld = Test0848.iFld;
        for (d = 10; d < 393; ++d) {
            byte by1=-120;
            Test0848.iFld = by1;
            Test0848.instanceCount = Test0848.instanceCount;
            for (i3 = (int)(d); i3 < 4; i3++) {
                i5 = 1;
                do {
                    double d1=-4.28990;
                    i2 = i3;
                    Test0848.sFld += (short) (((i5 * i5) + i4) - i3);
                    i6 += i5;
                    f1 = Test0848.instanceCount;
                    i4 += (int) Test0848.instanceCount;
                    d1 -= i4;
                    if (i5 != 0) {
                        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + i6 +
                            Float.floatToIntBits(f1);
                        return;
                    }
                } while (++i5 < 1);
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1);
    }

    public static void vMeth(long l1) {

        int i7=-53, i8=-95, i9=-8, i10=-165;

        vMeth1();
        i7 = 1;
        while (++i7 < 126) {
            Test0848.instanceCount = -18929;
            Test0848.iFld -= (int) Test0848.fFld;
            Test0848.instanceCount %= (i7 | 1);
            l1 += (i7 * i7);
        }
        Test0848.iFld = i7;
        Test0848.iFld = i7;
        i8 = 1;
        while (++i8 < 353) {
            switch (i8 % 1) {
            case 0:
                Test0848.iArrFld[i8 + 1][i8 - 1] >>= i8;
            default:
                Test0848.fFld += (((i8 * Test0848.iFld) + l1) - Test0848.iFld1);
                for (i9 = 1; 5 > i9; ++i9) {
                    Test0848.iFld1 >>= i10;
                    i10 = i8;
                }
            }
        }
        vMeth_check_sum += l1 + i7 + i8 + i9 + i10;
    }

    public static int iMeth(long l, int i1, byte by) {


        vMeth(l);
        long meth_res = l + i1 + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-7, i11=-8, i12=0, i13=48332, i14=41, i15=59, i16=-144, i17=252, i18=84, i19=7;
        float f=-7.878F;
        boolean b=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -105L);

        lArr[(i >>> 1) % N] = (long) (((i * f) - sArrFld[(i >>> 1) % N]) - Test0848.instanceCount);
        Test0848.iArrFld[(i >>> 1) % N][(i >>> 1) % N] *= (iMeth(-5469389380552791606L, i, byFld) + Test0848.iFld1);
        i11 = 1;
        do {
            double d2=13.2431;
            for (i12 = 1; 183 > i12; ++i12) {
                Test0848.iFld += (((i12 * i13) + Test0848.instanceCount) - byFld);
                Test0848.instanceCount += (-124L + (i12 * i12));
                Test0848.fFld += i11;
                for (i14 = 1; 2 > i14; ++i14) {
                    Test0848.iFld = -6;
                    Test0848.instanceCount += 40;
                    try {
                        Test0848.iFld = (Test0848.iFld / -30045);
                        i15 = (Test0848.iArrFld[i12 + 1][i12 - 1] / 25632);
                        i = (-111 / i12);
                    } catch (ArithmeticException a_e) {}
                    i *= (int) Test0848.instanceCount;
                    Test0848.fFld = i;
                    i |= -246;
                }
                Test0848.instanceCount -= Test0848.iFld1;
                Test0848.fFld += 17.473F;
                Test0848.fFld -= byFld;
            }
            Test0848.iFld1 = i12;
            d2 -= d2;
            for (i16 = 9; i16 < 183; ++i16) {
                Test0848.iArrFld[i16 + 1][i11] = Test0848.iFld;
                for (i18 = 1; i18 < 2; i18++) {
                    lArr[i18 + 1] = i13;
                    i19 -= 91;
                    i19 -= (int) Test0848.instanceCount;
                    Test0848.instanceCount += i11;
                    try {
                        i19 = (-590561871 % Test0848.iArrFld[i18 - 1][i16]);
                        Test0848.iArrFld[i11][i11] = (-7934 / Test0848.iArrFld[i18 - 1][i16]);
                        Test0848.iArrFld[i11 + 1][i16] = (i16 / -1891271006);
                    } catch (ArithmeticException a_e) {}
                    if (b) {
                        byArrFld[i11 + 1] = (byte)-11;
                        Test0848.instanceCount += Test0848.instanceCount;
                    } else {
                        i15 += (i18 - Test0848.iFld);
                    }
                }
            }
        } while (++i11 < 137);

        FuzzerUtils.out.println("i f i11 = " + i + "," + Float.floatToIntBits(f) + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 b = " + i18 + "," + i19 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0848.instanceCount Test0848.iFld Test0848.sFld = " + Test0848.instanceCount + "," + Test0848.iFld +
                "," + Test0848.sFld);
        FuzzerUtils.out.println("Test0848.fFld Test0848.iFld1 byFld = " + Float.floatToIntBits(Test0848.fFld) + "," + Test0848.iFld1 +
            "," + byFld);
        FuzzerUtils.out.println("sArrFld Test0848.iArrFld byArrFld = " + FuzzerUtils.checkSum(sArrFld) + "," +
                FuzzerUtils.checkSum(Test0848.iArrFld) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0848 _instance = new Test0848();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
