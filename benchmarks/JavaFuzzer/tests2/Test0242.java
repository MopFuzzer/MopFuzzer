// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0242 {

    public static final int N = 400;

    public static long instanceCount=-949L;
    public static volatile float fFld=0.236F;
    public static volatile double dFld=-97.83351;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0242.iArrFld, -165);
        FuzzerUtils.init(Test0242.lArrFld, 11L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth() {

        long l=21491L;
        int i4=39025, i5=-38134, i6=-2, i7=-5, i8=-61549;
        double d=2.1252;
        byte by=48;
        boolean b1=false;

        for (l = 6; l < 149; ++l) {
            i4 = (int)d;
            for (i5 = 1; i5 < 11; ++i5) {
                for (i7 = (int)(l); 2 > i7; ++i7) {
                    i6 += i7;
                    i4 = i6;
                    Test0242.fFld = (float) d;
                    Test0242.instanceCount = i4;
                    if (i6 != 0) {
                    }
                    i6 -= -133;
                    Test0242.fFld += (i7 - l);
                    Test0242.iArrFld[(int) (l + 1)] *= i7;
                    i4 += (i7 - by);
                }
            }
            d += i6;
            if (b1) break;
        }
        long meth_res = l + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + by + (b1 ? 1 : 0);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(int i3, boolean b) {

        int i9=-920, i10=-58864, i11=-152, i12=-7, i13=244;
        byte by1=109;
        double d1=0.37206, d2=69.119950;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        bArr[(i3 >>> 1) % N] = (sMeth() <= 20771);
        i9 = 1;
        do {
            for (i10 = 1; i10 < 5; ++i10) {
                i11 *= by1;
                d1 = d1;
                for (d2 = 1; d2 < 2; d2++) {
                    Test0242.iArrFld[(int) (d2 - 1)] = i12;
                }
                i3 += (i10 + i12);
                switch (((i10 % 2) * 5) + 10) {
                case 14:
                    Test0242.instanceCount -= i11;
                    i3 += (((i10 * Test0242.instanceCount) + Test0242.instanceCount) - i11);
                    break;
                case 15:
                }
                i13 = 1;
                do {
                    i3 = i9;
                    i11 = (int)d1;
                    d1 = i12;
                } while (++i13 < 2);
            }
        } while (++i9 < 319);
        vMeth1_check_sum += i3 + (b ? 1 : 0) + i9 + i10 + i11 + by1 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(d2) + i12 + i13 + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(float f, int i2) {

        boolean b2=false;
        int i14=24869, i15=11974, i16=-13118, i17=-235, i18=-3, i19=-108, i20=-51;
        byte by2=104;

        vMeth1(i2, b2);
        Test0242.instanceCount = -6;
        for (i14 = 153; i14 > 2; i14--) {
            for (i16 = 1; i16 < 10; ++i16) {
                i15 += i16;
                i15 = (int)2.169F;
            }
            i18 = by2;
            i19 = 1;
            while (++i19 < 10) {
                Test0242.lArrFld[i14 - 1] = i16;
                if (true) {
                    i2 -= (int)118.45409;
                    vMeth_check_sum += Float.floatToIntBits(f) + i2 + (b2 ? 1 : 0) + i14 + i15 + i16 + i17 + i18 + by2
                        + i19 + i20;
                    return;
                }
                i15 -= i14;
                i20 = 1;
                while (--i20 > 0) {
                    Test0242.lArrFld[i20] += Test0242.instanceCount;
                    if (b2) continue;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + (b2 ? 1 : 0) + i14 + i15 + i16 + i17 + i18 + by2 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i1=67, i21=12808, i22=39764, i23=11, i24=176, i25=-40309, i26=-22, i27=-39818;
        byte by3=82;
        short s=-28578;

        i = 1;
        while (++i < 189) {
            i1 += i;
            vMeth(Test0242.fFld, i);
            i1 = i;
            Test0242.instanceCount <<= i;
        }
        for (i21 = 392; i21 > 9; --i21) {
            dArrFld[i21] *= -53155;
            i23 = 1;
            do {
                i1 >>= i1;
                i22 -= (int) Test0242.fFld;
                i22 += (22 + (i23 * i23));
                for (i24 = i21; i24 < 1; i24++) {
                    i25 *= (int) Test0242.instanceCount;
                    by3 += (byte)-5;
                    Test0242.dFld = i23;
                    i25 >>>= by3;
                    dArrFld[i24 - 1] = Test0242.fFld;
                    s = (short)i23;
                    i1 = 53211;
                    Test0242.iArrFld = FuzzerUtils.int1array(N, (int) 18462);
                    i25 = i23;
                }
            } while (++i23 < 66);
            Test0242.fFld -= i21;
            for (i26 = i21; 66 > i26; ++i26) {
                dArrFld = dArrFld;
                if (bFld) continue;
                Test0242.instanceCount = Test0242.instanceCount;
                Test0242.instanceCount += i26;
                Test0242.fFld *= Test0242.instanceCount;
                Test0242.fFld += (i26 * Test0242.instanceCount);
                i22 = i26;
            }
        }

        FuzzerUtils.out.println("i i1 i21 = " + i + "," + i1 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 by3 s = " + i25 + "," + by3 + "," + s);
        FuzzerUtils.out.println("i26 i27 = " + i26 + "," + i27);

        FuzzerUtils.out.println("Test0242.instanceCount Test0242.fFld Test0242.dFld = " + Test0242.instanceCount + "," +
                Float.floatToIntBits(Test0242.fFld) + "," + Double.doubleToLongBits(Test0242.dFld));
        FuzzerUtils.out.println("bFld Test0242.iArrFld Test0242.lArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0242.iArrFld) + "," + FuzzerUtils.checkSum(Test0242.lArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0242 _instance = new Test0242();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
