// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0502 {

    public static final int N = 400;

    public static volatile long instanceCount=-6L;
    public static volatile float fFld=2.271F;
    public static volatile float fFld1=64.615F;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0502.iArrFld, 241);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        short s=-3578;
        int i10=-186;
        int i11=-32387;
        int i12=-29963;
        int i13=-127;
        int i14=-181;
        int i15=-211;
        int i16=0;
        int i17=11236;
        int[] iArr =new int[N];
        double d2=1.122002;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, 237);
        FuzzerUtils.init(lArr, 148L);

        iArr[(-59793 >>> 1) % N] = s;
        iArr[(i10 >>> 1) % N] -= (int) Test0502.fFld;
        i11 = 1;
        while (++i11 < 299) {
            lArr[i11] = lArr[i11 + 1];
            for (i12 = 1; i12 < 6; ++i12) {
                d2 = i13;
                i13 -= i13;
            }
            Test0502.fFld -= -11;
            for (i14 = i11; i14 < 6; ++i14) {
                i15 = i13;
                i13 += (((i14 * i10) + Test0502.instanceCount) - i13);
                for (i16 = 1; i14 < i16; i16 -= 3) {
                    try {
                        i15 = (iArr[i16] / 12206);
                        iArr[i16] = (i13 / i15);
                        i15 = (i13 / -61419);
                    } catch (ArithmeticException a_e) {}
                }
                Test0502.instanceCount += (i14 * i14);
                try {
                    i10 = (i12 % i16);
                    i10 = (i14 / i12);
                    i13 = (i15 / 100);
                } catch (ArithmeticException a_e) {}
            }
        }
        long meth_res = s + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(int i9) {

        double d1=-1.125587;
        int i18=-106, i19=18559;
        boolean b=false;
        float f=-77.558F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 57740L);

        i9 >>>= (int)((-Math.abs(i9)) + ((-(--d1)) + iMeth()));
        Test0502.iArrFld[(13 >>> 1) % N] = 0;
        i9 = (int) Test0502.instanceCount;
        Test0502.instanceCount = Test0502.instanceCount;
        i9 = (int) Test0502.fFld;
        lArr1[(i9 >>> 1) % N] += 12;
        Test0502.fFld -= i9;
        Test0502.instanceCount *= Test0502.instanceCount;
        for (i18 = 7; i18 < 126; ++i18) {
            if (b) continue;
            f = 1;
            while (++f < 13) {
                i19 = i9;
                Test0502.fFld1 = i18;
                i19 += (int)(f * i18);
                i9 += (int)((long)f | i18);
            }
        }
        vMeth1_check_sum += i9 + Double.doubleToLongBits(d1) + i18 + i19 + (b ? 1 : 0) + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(long l, int i2, int i3) {

        double d=114.126927;
        int i4=10620, i5=44030, i6=-202, i7=231, i8=198, i20=-22286, i21=101, i22=38;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -63.222F);

        for (d = 4; d < 366; d++) {
            for (i5 = 1; i5 < 5; i5++) {
                Test0502.instanceCount = ((~Math.min(Test0502.instanceCount, Test0502.instanceCount)) + (i3--));
                for (i7 = 1; i7 < 2; i7 += 3) {
                    i2 = (i3++);
                }
            }
            vMeth1(58239);
        }
        i20 = 1;
        while (++i20 < 304) {
            Test0502.iArrFld[i20 - 1] = i3;
            Test0502.bFld = Test0502.bFld;
            if (Test0502.bFld) {
                i6 ^= i4;
                fArr[i20] -= Test0502.fFld;
            } else if (Test0502.bFld) {
                for (i21 = 1; 5 > i21; ++i21) {
                    fArr[i21] -= l;
                    i6 += (10272 + (i21 * i21));
                }
            } else if (false) {
                if (i4 != 0) {
                    vMeth_check_sum += l + i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + i20 + i21 +
                        i22 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            }
        }
        vMeth_check_sum += l + i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=8, i1=14, i23=14, i24=87, i25=5, i26=-4, i27=-151, i28=-7;
        double d3=-14.114342;
        double[] dArr =new double[N];
        short s1=14378;

        FuzzerUtils.init(dArr, 0.38716);

        for (i = 8; i < 131; i += 2) {
            vMeth(Test0502.instanceCount, 27857, i);
            switch ((i % 2) + 21) {
            case 21:
                i1 = i;
                for (i23 = 10; i23 < 216; i23 += 2) {
                    Test0502.instanceCount -= i1;
                    for (i25 = i23; i25 < 4; i25++) {
                        Test0502.instanceCount += i25;
                        Test0502.fFld -= Test0502.instanceCount;
                        Test0502.instanceCount -= -5321049819517188817L;
                        Test0502.iArrFld[i23] += i26;
                        i24 -= (int) Test0502.fFld1;
                        dArr[i25] += i26;
                        Test0502.instanceCount = i23;
                        i24 = i25;
                        Test0502.fFld /= ((long) (d3) | 1);
                        i26 += 1968;
                    }
                    i26 = i25;
                    i1 = i23;
                    i24 -= -11328;
                }
                break;
            case 22:
                i27 = 1;
                while (++i27 < i) {
                    i24 -= (int) Test0502.instanceCount;
                }
                break;
            }
            i1 <<= i25;
            i28 = 1;
            do {
                i1 = i26;
                i24 += s1;
                i1 = (int)1.128095;
                s1 = (short)i25;
                Test0502.instanceCount += i25;
                i1 += i28;
            } while (++i28 < 205);
        }

        FuzzerUtils.out.println("i i1 i23 = " + i + "," + i1 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d3 i27 i28 = " + Double.doubleToLongBits(d3) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("s1 dArr = " + s1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0502.instanceCount Test0502.fFld Test0502.fFld1 = " + Test0502.instanceCount + "," +
                Float.floatToIntBits(Test0502.fFld) + "," + Float.floatToIntBits(Test0502.fFld1));
        FuzzerUtils.out.println("Test0502.bFld Test0502.iArrFld = " + (Test0502.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0502.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0502 _instance = new Test0502();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
