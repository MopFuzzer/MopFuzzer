// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0367 {

    public static final int N = 400;

    public static volatile long instanceCount=-2750L;
    public static short sFld=7502;
    public static int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0367.iArrFld, 0);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i16, int i17) {

        int i18=6, i19=30565, i20=-94, i21=-126, i22=-6, i23=-5, i24=7074;
        short s=30088, s1=6523;
        float f2=-123.962F;
        double d1=1.84250;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -12L);

        for (i18 = 398; i18 > 17; i18 -= 3) {
            i16 += (((i18 * i18) + Test0367.instanceCount) - Test0367.instanceCount);
            s += (short)(-6596725960107197359L + (i18 * i18));
            lArr1[i18] = i18;
            for (i20 = 1; i20 < 12; i20++) {
                for (i22 = 1; i22 < 2; i22++) {
                    i19 = i22;
                    i23 |= i24;
                }
                Test0367.instanceCount -= i18;
                Test0367.instanceCount = (long) f2;
                if (i22 != 0) {
                    vMeth1_check_sum += i16 + i17 + i18 + i19 + s + i20 + i21 + i22 + i23 + i24 +
                        Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + s1 + FuzzerUtils.checkSum(lArr1);
                    return;
                }
                d1 -= i18;
                i21 ^= i20;
                Test0367.instanceCount = s1;
                i19 += (int) Test0367.instanceCount;
            }
        }
        vMeth1_check_sum += i16 + i17 + i18 + i19 + s + i20 + i21 + i22 + i23 + i24 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d1) + s1 + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i8, int i9, int i10) {

        boolean b=true;
        double d=58.51590;
        int i11=5, i12=22576, i13=-3903, i14=35904, i15=44;
        float f3=0.929F;
        long[] lArr =new long[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(lArr, -2079054561L);
        FuzzerUtils.init(byArr, (byte)102);

        b = (b = (Test0367.instanceCount > (d * i9)));
        Test0367.instanceCount >>= ((~(-(i9++))) - ((Test0367.instanceCount++) - (207 * (Test0367.instanceCount * -2))));
        Test0367.instanceCount <<= lArr[(i9 >>> 1) % N];
        Test0367.instanceCount = 3;
        byArr[(i9 >>> 1) % N] -= (byte)127;
        for (i11 = 278; 7 < i11; i11 -= 3) {
            i8 -= Math.abs((int)((i8 + i11) + lArr[i11 - 1]));
            i13 = 1;
            while (++i13 < 17) {
                i8 &= (++i12);
                for (i14 = 1; i14 < 1; ++i14) {
                    vMeth1(i13, i9);
                    i10 = i9;
                }
                i9 += (int)f3;
                if (i9 != 0) {
                    vMeth_check_sum += i8 + i9 + i10 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14
                        + i15 + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
                    return;
                }
                Test0367.iArrFld[i13] -= i12;
            }
        }
        vMeth_check_sum += i8 + i9 + i10 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i4, int i5) {

        int i6=9, i7=70, i25=-31, i26=-39660, i27=-8, i28=60789;
        double d2=101.50385;

        for (i6 = 8; i6 < 149; ++i6) {
            vMeth(i6, i4, -3);
            i7 -= (int)-186L;
            i7 >>= (int) Test0367.instanceCount;
            Test0367.sFld = (short) d2;
            Test0367.instanceCount |= i5;
            Test0367.instanceCount = (long) d2;
            i25 = 1;
            do {
                i7 &= (int) Test0367.instanceCount;
                try {
                    i5 = (1891522693 % i25);
                    i26 = (Test0367.iArrFld[i25 + 1] % Test0367.iArrFld[i6]);
                    i4 = (i5 / -65103);
                } catch (ArithmeticException a_e) {}
                for (i27 = 1; i27 < 1; ++i27) {
                    Test0367.iArrFld[i6] += i5;
                    i4 ^= 6;
                    Test0367.instanceCount += i28;
                    Test0367.instanceCount &= i27;
                }
            } while (++i25 < 11);
        }
        long meth_res = i4 + i5 + i6 + i7 + Double.doubleToLongBits(d2) + i25 + i26 + i27 + i28;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i1=29049, i2=3, i3=-10255, i29=123;
        float f=24.580F;
        float f1=126.792F;
        float[] fArr =new float[N];
        long l=-5L;
        boolean b1=true;
        short s2=-11188;
        double[] dArr =new double[N];

        FuzzerUtils.init(fArr, -1.675F);
        FuzzerUtils.init(dArr, -2.115438);

        i *= (int)f;
        f1 = 1;
        do {
            i += (int) (f1 - Test0367.instanceCount);
            f = i;
            for (i1 = (int)(f1); i1 < 202; ++i1) {
                for (l = 1; l < 1; ++l) {
                    i = i;
                    Test0367.instanceCount ^= ((i++) + iMeth(i2, i2));
                    switch (((i2 >>> 1) % 2) + 5) {
                    case 5:
                        i += (8 + (l * l));
                        try {
                            Test0367.iArrFld[i1 - 1] = (55362 / i1);
                            i29 = (1158241250 % i);
                            i3 = (i1 % 53015);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 6:
                        Test0367.iArrFld[i1] *= i1;
                        fArr[i1 + 1] *= 7;
                        dArr[(int)(f1 + 1)] -= i29;
                        lArrFld[i1] += l;
                        break;
                    default:
                        if (b1) continue;
                        i29 = (int)-6221870616409320001L;
                        Test0367.iArrFld[(int) (l - 1)] = 171;
                        s2 += (short)i1;
                    }
                    i29 |= i2;
                    Test0367.iArrFld[(int) (f1 + 1)] -= (int) 2.38F;
                    Test0367.instanceCount -= i29;
                    s2 += (short)l;
                    Test0367.instanceCount = i;
                    i29 += i1;
                    i2 |= (int)-3771217274L;
                }
                if (b1) break;
                Test0367.instanceCount <<= i1;
                i -= i;
                f -= Test0367.sFld;
            }
        } while (++f1 < 124);

        FuzzerUtils.out.println("i f f1 = " + i + "," + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i1 i2 l = " + i1 + "," + i2 + "," + l);
        FuzzerUtils.out.println("i3 i29 b1 = " + i3 + "," + i29 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("s2 fArr dArr = " + s2 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0367.instanceCount Test0367.sFld Test0367.iArrFld = " + Test0367.instanceCount + "," + Test0367.sFld +
                "," + FuzzerUtils.checkSum(Test0367.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0367 _instance = new Test0367();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
