// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0195 {

    public static final int N = 400;

    public static long instanceCount=-3440618320L;
    public static double dFld=-2.61692;
    public static int iFld=-6;
    public static short sFld=-22514;
    public int iFld1=-154;
    public float[] fArrFld =new float[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i7, long l1) {

        int i8=-72;
        int i9=137;
        int i10=7;
        int i11=1505;
        int i12=1;
        int i13=238;
        int[] iArr1 =new int[N];
        float f1=33.532F;

        FuzzerUtils.init(iArr1, 8);

        for (i8 = 3; i8 < 133; i8++) {
            i7 += (i8 + l1);
            f1 += f1;
            i10 = 1;
            while (++i10 < 12) {
                i9 -= i9;
                f1 = 3109248191817038875L;
            }
            i7 = i9;
            i11 = 1;
            do {
                for (i12 = 1; 1 > i12; i12++) {
                    Test0195.iFld = -64406;
                    Test0195.dFld += i13;
                    switch ((i12 % 1) + 95) {
                    case 95:
                        try {
                            i13 = (i8 % Test0195.iFld);
                            Test0195.iFld = (i13 % iArr1[i11 + 1]);
                            iArr1[i12 + 1] = (iArr1[(i9 >>> 1) % N] % 31031);
                        } catch (ArithmeticException a_e) {}
                        break;
                    default:
                        l1 = i9;
                    }
                    i13 += (((i12 * i8) + f1) - Test0195.iFld);
                }
            } while (++i11 < 12);
        }
        long meth_res = i7 + l1 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        float f=2.15F;
        int i3=-3060;
        int i4=4;
        int i5=4;
        int i6=117;
        int i14=-212;
        int i15=7;
        int[] iArr =new int[N];
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -155);
        FuzzerUtils.init(lArr, 902171693L);

        f += iArr[(Test0195.iFld >>> 1) % N];
        Test0195.iFld -= (int) (((Test0195.instanceCount++) + (Test0195.iFld--)) + (Math.min(-176, Test0195.iFld) * (iArr[(Test0195.iFld >>>
                1) % N] = Test0195.iFld)));
        for (i3 = 14; i3 < 291; ++i3) {
            if (b) continue;
            if (i4 != 0) {
                vMeth1_check_sum += l + Float.floatToIntBits(f) + i3 + i4 + (b ? 1 : 0) + i5 + i6 + i14 + i15 +
                    FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                return;
            }
            for (i5 = 1; i5 < 6; ++i5) {
                l = (++i4);
                Test0195.instanceCount -= iMeth(i5, l);
                i14 = i4;
                iArr[i5 - 1] += i6;
                if (b) continue;
            }
            Test0195.iFld = (int) Test0195.instanceCount;
            i15 = 1;
            do {
                i6 = (int)l;
                lArr[i3 - 1] = i4;
            } while (++i15 < 6);
        }
        vMeth1_check_sum += l + Float.floatToIntBits(f) + i3 + i4 + (b ? 1 : 0) + i5 + i6 + i14 + i15 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i2=12;

        i2 = -28188;
        vMeth1(Test0195.instanceCount);
        vMeth_check_sum += i2;
    }

    public void mainTest(String[] strArr1) {

        int i=14;
        int i1=165;
        int i16=-55899;
        int i17=46486;
        int i18=-108;
        int i19=-11;
        int i20=8;
        int i21=6;
        int[] iArr2 =new int[N];
        float f2=-36.92F;
        byte by=-119;
        boolean b1=true;

        FuzzerUtils.init(iArr2, 14);

        for (i = 5; i < 269; ++i) {
            i1 -= i1;
            Test0195.dFld += (i1 - Math.min(++i1, i1));
            vMeth();
            for (i16 = 2; i16 < 95; i16++) {
                i1 <<= i1;
                for (i18 = 1; i18 < 2; i18++) {
                    f2 = by;
                    Test0195.sFld += (short) (i18 * i18);
                    i19 += i19;
                    i19 <<= iFld1;
                }
                Test0195.instanceCount += (i16 * i16);
                iArr2[i16 + 1] = i16;
                iArr2[i16 + 1] *= i18;
                Test0195.instanceCount = i19;
                for (i20 = i; 2 > i20; i20++) {
                    Test0195.instanceCount *= Test0195.instanceCount;
                    switch ((i % 9) + 90) {
                    case 90:
                        i19 += (i20 * Test0195.instanceCount);
                        Test0195.instanceCount = -242;
                        iArr2 = iArr2;
                        i21 = by;
                    case 91:
                        i19 = (int)f2;
                        iFld1 += (int) Test0195.instanceCount;
                        Test0195.instanceCount -= Test0195.instanceCount;
                        i19 = Test0195.iFld;
                        break;
                    case 92:
                        switch ((i20 % 3) + 66) {
                        case 66:
                            i21 -= (int)1.11639;
                            iArr2 = FuzzerUtils.int1array(N, (int)-27182);
                            break;
                        case 67:
                            Test0195.dFld = 40880;
                            break;
                        case 68:
                            Test0195.dFld *= i18;
                        }
                        break;
                    case 93:
                        Test0195.instanceCount += i21;
                        break;
                    case 94:
                        fArrFld[i16] = 89;
                        break;
                    case 95:
                        if (b1) break;
                        break;
                    case 96:
                    case 97:
                        f2 += Test0195.instanceCount;
                    case 98:
                        i1 -= i21;
                        break;
                    default:
                        iFld1 += (i20 | iFld1);
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i16 = " + i + "," + i1 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f2 by i20 = " + Float.floatToIntBits(f2) + "," + by + "," + i20);
        FuzzerUtils.out.println("i21 b1 iArr2 = " + i21 + "," + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0195.instanceCount Test0195.dFld Test0195.iFld = " + Test0195.instanceCount + "," +
                Double.doubleToLongBits(Test0195.dFld) + "," + Test0195.iFld);
        FuzzerUtils.out.println("Test0195.sFld iFld1 fArrFld = " + Test0195.sFld + "," + iFld1 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0195 _instance = new Test0195();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
