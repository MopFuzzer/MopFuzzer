// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0514 {

    public static final int N = 400;

    public static long instanceCount=4257278478L;
    public int iFld=56;
    public double dFld=39.125489;
    public volatile byte byFld1=-85;
    public static double dFld1=-2.65306;
    public int[] iArrFld =new int[N];
    public volatile float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0514.lArrFld, -46614L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f2) {

        double d1=0.59655;
        int i7=-194, i8=-6, i9=-12, i10=63107, i11=-13, i12=-69, i13=-58664;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, 26836L);

        d1 -= Test0514.instanceCount;
        for (i7 = 1; i7 < 358; ++i7) {
            switch ((i7 % 1) + 60) {
            case 60:
                i8 -= (int)d1;
                i9 = 5;
                do {
                    Test0514.instanceCount -= (long) f2;
                    i8 += (((i9 * i7) + i8) - i9);
                    i8 += (((i9 * i7) + i9) - f2);
                } while (--i9 > 0);
                for (i10 = 1; i10 < 5; i10++) {
                    i11 -= (int) Test0514.instanceCount;
                    for (i12 = 1; i12 < 2; ++i12) {
                        f2 -= i12;
                        i8 -= i7;
                        i13 = -112;
                    }
                }
                break;
            }
            lArr1[i7][i7] = i9;
        }
        long meth_res = Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(int i5, int i6) {

        float f3=55.3F;
        int i14=-21760, i15=6, i16=50126, i17=27962;
        long l=-5L;
        short s=9262;
        boolean b=false;

        i5 <<= iMeth1(f3);
        for (i14 = 11; i14 < 335; i14++) {
            Test0514.instanceCount += (((i14 * Test0514.instanceCount) + i15) - f3);
            i16 = 1;
            while (++i16 < 5) {
                dFld -= i16;
            }
            i15 *= (int) Test0514.instanceCount;
        }
        for (l = 19; l < 310; l++) {
            dFld *= Test0514.instanceCount;
            byFld1 = (byte)-2202045571207791773L;
            i6 -= iFld;
            if (b) {
                switch ((int)(((l % 7) * 5) + 106)) {
                case 118:
                    iFld += (int)l;
                    s = (short)l;
                    i15 <<= 7;
                    break;
                case 131:
                    f3 += (l + i14);
                    break;
                case 135:
                    iArrFld[(int)(l)] = i5;
                    break;
                case 137:
                    Test0514.instanceCount -= (long) dFld;
                    break;
                case 120:
                    i17 = i15;
                case 132:
                    iFld <<= i16;
                    break;
                case 125:
                    i15 += (int)l;
                    break;
                default:
                    fArrFld[(int)(l - 1)] = 19396;
                }
                vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f3) + i14 + i15 + i16 + l + i17 + s + (b ? 1 : 0);
                return;
            } else if (b) {
                Test0514.instanceCount ^= i15;
            }
        }
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f3) + i14 + i15 + i16 + l + i17 + s + (b ? 1 : 0);
    }

    public int iMeth() {

        int i4=14, i18=-8954, i19=2, i20=-40538, i21=-153;
        float f1=1.835F;

        i4 = 1;
        do {
            Test0514.instanceCount *= (long) ((dFld--) + Math.abs(f1));
            vMeth1(-131, i4);
            for (i18 = 1; i18 < 10; ++i18) {
                switch ((i4 % 6) + 119) {
                case 119:
                    switch ((i18 % 10) + 62) {
                    case 62:
                        for (i20 = 1; 2 > i20; ++i20) {
                            Test0514.lArrFld[i4 - 1] += i19;
                            switch ((i4 % 2) + 1) {
                            case 1:
                                i19 -= i20;
                                iArrFld[i20 + 1] ^= -9;
                            case 2:
                                iFld *= (int) Test0514.instanceCount;
                                Test0514.instanceCount = 108;
                                dFld -= Test0514.instanceCount;
                                break;
                            default:
                                iFld *= (int) Test0514.instanceCount;
                            }
                        }
                        break;
                    case 63:
                        iArrFld[i18 - 1] = i4;
                    case 64:
                        i19 += (int)f1;
                    case 65:
                    case 66:
                        f1 += (229 + (i18 * i18));
                        break;
                    case 67:
                        i19 -= i4;
                        break;
                    case 68:
                        fArrFld[i4 - 1] += i20;
                        break;
                    case 69:
                        byFld1 >>= (byte)3;
                        break;
                    case 70:
                        i21 += (i18 * i18);
                        break;
                    case 71:
                        Test0514.dFld1 = i19;
                        break;
                    }
                    break;
                case 120:
                    iFld &= i20;
                case 121:
                    byFld1 += (byte) Test0514.instanceCount;
                    break;
                case 122:
                    Test0514.dFld1 += iFld;
                case 123:
                case 124:
                    i21 %= (int)(i4 | 1);
                }
            }
        } while (++i4 < 158);
        long meth_res = i4 + Float.floatToIntBits(f1) + i18 + i19 + i20 + i21;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr3) {

        float f=25.753F, f4=2.428F;
        int i2=22925, i3=-3, i22=28022, i23=41, i24=129, i25=-3, i26=-47, i27=-50832;
        boolean b1=false;

        f = iFld;
        Test0514.instanceCount += ((iFld = Math.max(iFld, 23)) % ((Test0514.instanceCount++) | 1));
        Test0514.instanceCount <<= (Test0514.instanceCount--);
        for (i2 = 12; i2 < 398; i2 += 2) {
            iMeth();
            i22 = 1;
            while ((i22 += 3) < 130) {
                iFld *= i22;
            }
            for (i23 = 4; i23 < 130; ++i23) {
                i3 += (int) Test0514.instanceCount;
                i24 += (((i23 * iFld) + i22) - Test0514.instanceCount);
                Test0514.instanceCount = (long) -91.831F;
            }
            f -= f;
            i25 = 1;
            while (++i25 < 130) {
                Test0514.lArrFld[i25 - 1] *= iFld;
                i24 -= (int) Test0514.instanceCount;
                Test0514.instanceCount *= 192;
                i3 = byFld1;
                iFld += (-5565 + (i25 * i25));
                f *= i23;
                if (b1) {
                    i3 <<= iFld;
                    i3 -= (int)1.113F;
                    iArrFld[i2 - 1] = iFld;
                    f4 *= -2.921F;
                }
                f *= i23;
                i3 <<= i22;
                f += i3;
            }
            for (i26 = 8; i26 < 130; i26++) {
                iFld += (i26 + i25);
                Test0514.instanceCount = i27;
            }
        }

        FuzzerUtils.out.println("f i2 i3 = " + Float.floatToIntBits(f) + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 f4 b1 = " + i25 + "," + Float.floatToIntBits(f4) + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i26 i27 = " + i26 + "," + i27);

        FuzzerUtils.out.println("Test0514.instanceCount iFld dFld = " + Test0514.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("byFld1 Test0514.dFld1 iArrFld = " + byFld1 + "," + Double.doubleToLongBits(Test0514.dFld1) +
            "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("fArrFld Test0514.lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) +
                "," + FuzzerUtils.checkSum(Test0514.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0514 _instance = new Test0514();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
