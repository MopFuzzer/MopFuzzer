// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:27 2023
public class Test0329 {

    public static final int N = 400;

    public static long instanceCount=-3608270149L;
    public static double dFld=2.60886;
    public static float fFld=1.348F;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0329.iArrFld, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d2, int i13, int i14) {

        int i15=2, i16=-42110, i18=225, i19=12;

        for (i15 = 13; i15 < 397; i15++) {
            for (i18 = i15; i18 < 4; i18++) {
                i19 += (i18 * i18);
                Test0329.instanceCount += i18;
                if (i13 != 0) {
                    vMeth2_check_sum += Double.doubleToLongBits(d2) + i13 + i14 + i15 + i16 + i18 + i19;
                    return;
                }
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d2) + i13 + i14 + i15 + i16 + i18 + i19;
    }

    public static void vMeth1(double d1, int i10, long l) {

        int i11=0, i12=-21605, i20=4, i21=-101, i22=-3;
        short s1=16049;

        i10 -= (int) Math.abs(Test0329.iArrFld[(i10 >>> 1) % N] - (-(i10 + -4)));
        for (i11 = 3; i11 < 293; i11++) {
            if (Test0329.bFld) {
                vMeth2(d1, i12, -146);
                switch ((i11 % 1) + 109) {
                case 109:
                    i10 = 4;
                    i10 += (i11 * i11);
                    s1 = (short)i11;
                    break;
                }
            } else if (Test0329.bFld) {
                i12 -= (int) Test0329.instanceCount;
                Test0329.instanceCount = s1;
                i20 = 1;
                while ((i20 += 3) < 6) {
                    i12 += (i20 * i20);
                    for (i21 = 1; 3 > i21; i21++) {
                        Test0329.instanceCount = i20;
                        Test0329.instanceCount = i12;
                    }
                }
            } else {
                i22 += (-14 + (i11 * i11));
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i10 + l + i11 + i12 + s1 + i20 + i21 + i22;
    }

    public static void vMeth(int i3, int i4) {

        int i5=19257, i6=-7, i7=-59316, i8=-56, i9=212, i23=-58226, i24=14, i25=-49313;

        for (i5 = 2; 138 > i5; ++i5) {
            Test0329.instanceCount += i5;
            Test0329.dFld = i7;
            for (i8 = 1; i8 < 12; ++i8) {
                Test0329.fFld += i8;
            }
            vMeth1(2.98259, i3, Test0329.instanceCount);
            i3 -= i7;
            Test0329.dFld = i9;
            i4 = i4;
        }
        i23 = 1;
        do {
            for (i24 = i23; i24 < 7; ++i24) {
                i25 >>= i4;
                i7 = i7;
                Test0329.instanceCount = -2923;
                i25 = (int) Test0329.instanceCount;
            }
        } while (++i23 < 223);
        vMeth_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + i23 + i24 + i25;
    }

    public void mainTest(String[] strArr1) {

        int i=45024, i1=58415, i2=9, i26=12, i27=-3, i28=-49832, i30=14, i31=-7, i32=-10;
        short s=3990;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 245L);

        i <<= (--s);
        for (i1 = 7; 270 > i1; ++i1) {
            double d=2.70345;
            i2 += (int)((i2++) - (Float.intBitsToFloat(i1) + (-2.245F - (++d))));
            i = (int) (Double.longBitsToDouble(Test0329.instanceCount) + i1);
            lArr[i1 - 1] -= s;
            vMeth(i2, 62191);
            i2 += (((i1 * i1) + i1) - i1);
            s += (short)i1;
        }
        s *= (short)i;
        i26 = 1;
        while (++i26 < 264) {
            Test0329.dFld += Test0329.instanceCount;
        }
        s *= (short)i;
        i27 = 1;
        while (++i27 < 127) {
            i28 = 197;
            while ((i28 -= 2) > 0) {
                i2 -= i2;
                Test0329.fFld += i28;
            }
        }
        for (int i29 : Test0329.iArrFld) {
            i30 = 1;
            while (++i30 < 63) {
                for (i31 = 1; i31 < 1; ++i31) {
                    lArr[i30 - 1] += (long) Test0329.dFld;
                    Test0329.bFld = Test0329.bFld;
                    i32 += (i31 * i31);
                    i32 += (int) Test0329.instanceCount;
                    Test0329.iArrFld[i31 - 1] = i30;
                    try {
                        i29 = (44351 / i27);
                        i29 = (-53443 / i);
                        i32 = (i2 / i30);
                    } catch (ArithmeticException a_e) {}
                    Test0329.instanceCount -= -8720;
                    i32 -= i1;
                    Test0329.instanceCount = i28;
                }
                i32 = (int) Test0329.dFld;
                i32 += (((i30 * i32) + i32) - Test0329.instanceCount);
            }
        }

        FuzzerUtils.out.println("i s i1 = " + i + "," + s + "," + i1);
        FuzzerUtils.out.println("i2 i26 i27 = " + i2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i30 i31 = " + i28 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 lArr = " + i32 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0329.instanceCount Test0329.dFld Test0329.fFld = " + Test0329.instanceCount + "," +
                Double.doubleToLongBits(Test0329.dFld) + "," + Float.floatToIntBits(Test0329.fFld));
        FuzzerUtils.out.println("Test0329.bFld Test0329.iArrFld = " + (Test0329.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0329.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0329 _instance = new Test0329();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
