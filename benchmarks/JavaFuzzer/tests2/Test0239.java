// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0239 {

    public static final int N = 400;

    public static long instanceCount=55442L;
    public float fFld=0.607F;
    public static int iFld=-8;
    public static double dFld=44.99528;
    public static volatile byte byFld=109;
    public float fFld1=-2.604F;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0239.iArrFld, 34542);
        FuzzerUtils.init(Test0239.iArrFld1, -1);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(boolean b1) {

        int i3=52818, i4=-10, i5=12, i6=32, i7=-55592;
        double d1=-100.14851;
        float[] fArr1 =new float[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(fArr1, -1.100F);
        FuzzerUtils.init(lArr1, -1151257378336299768L);

        Test0239.iFld = (int) Test0239.instanceCount;
        for (i3 = 16; i3 < 270; ++i3) {
            fArr1 = FuzzerUtils.float1array(N, (float)13.476F);
            i5 = 1;
            while (++i5 < 6) {
                for (i6 = 1; i6 > 1; i6--) {
                    Test0239.iArrFld[i3 + 1] *= Test0239.iFld;
                    i7 += (((i6 * i6) + i3) - Test0239.iFld);
                    i7 >>>= (int)4457353785206228117L;
                    Test0239.iFld = (int) d1;
                    Test0239.instanceCount &= Test0239.instanceCount;
                    Test0239.iFld <<= i7;
                    Test0239.iFld /= (int) (Test0239.instanceCount | 1);
                    lArr1[i6 + 1] = Test0239.instanceCount;
                }
                i7 = (int) Test0239.instanceCount;
            }
            i4 += -72;
        }
        long meth_res = (b1 ? 1 : 0) + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(byte by1) {

        boolean b2=false;
        long l=-30987L;
        int i8=-2;
        int i9=3;
        int i10=-246;
        int[] iArr =new int[N];
        float f1=126.314F;
        short s=21782;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr, -59974);
        FuzzerUtils.init(sArr, (short)2077);

        Test0239.instanceCount = ((iMeth1(b2) + l) + Test0239.iFld);
        i8 = 1;
        do {
            Test0239.iFld += (int) Test0239.dFld;
            try {
                Test0239.iFld = (Test0239.iArrFld[i8] / 32936);
                Test0239.iArrFld[i8] = (-761783913 % Test0239.iArrFld[i8 - 1]);
                Test0239.iFld = (Test0239.iFld / 23276);
            } catch (ArithmeticException a_e) {}
        } while (++i8 < 140);
        f1 = Test0239.iFld;
        s -= (short)i8;
        b2 = b2;
        l = Test0239.iFld;
        Test0239.iArrFld = iArr;
        Test0239.iFld -= Test0239.iFld;
        l = (long)f1;
        Test0239.iFld = by1;
        for (i9 = 12; i9 < 383; i9++) {
            sArr[i9] = (short)-10;
            if (b2) continue;
        }
        vMeth_check_sum += by1 + (b2 ? 1 : 0) + l + i8 + Float.floatToIntBits(f1) + s + i9 + i10 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public int iMeth(int i2, float f, boolean b) {

        int i11=208;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 37596L);

        vMeth(Test0239.byFld);
        i2 -= (int)fFld1;
        i11 = 1;
        while (++i11 < 262) {
            Test0239.iFld -= i11;
            Test0239.iFld = i11;
            fFld1 *= -33824;
            i2 += i11;
            Test0239.iArrFld = Test0239.iArrFld;
            Test0239.iArrFld[i11 - 1] |= (int) Test0239.instanceCount;
            i2 += (int) Test0239.instanceCount;
            lArr2 = lArr2;
            i2 = i2;
            lArr2[i11 + 1] >>= 61177;
        }
        Test0239.iArrFld[(i11 >>> 1) % N] -= (int) Test0239.instanceCount;
        Test0239.instanceCount = i11;
        long meth_res = i2 + Float.floatToIntBits(f) + (b ? 1 : 0) + i11 + FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=77.51063;
        double[] dArr =new double[N];
        float f2=-16.999F;
        float[] fArr =new float[N];
        int i12=-9604, i13=-127, i14=3, i15=-7279;
        long l1=2234091520878621904L;
        long[][] lArr =new long[N][N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(dArr, 0.19758);
        FuzzerUtils.init(lArr, 14L);
        FuzzerUtils.init(fArr, -26.959F);
        FuzzerUtils.init(bArr, false);

        for (int i : Test0239.iArrFld) {
            Test0239.iArrFld[(i >>> 1) % N] += i;
        }
        for (int i1 : Test0239.iArrFld) {
            byte by=-90;
            fFld = ((i1 += (i1 + i1)) + (i1 = (i1--)));
            dArr[(i1 >>> 1) % N] = Integer.reverseBytes(i1);
            i1 <<= (int)(Math.min(i1 *= 9, i1) - (++lArr[(i1 >>> 1) % N][(i1 >>> 1) % N]));
            by *= (byte)i1;
            fArr[(i1 >>> 1) % N] = (float) (((d++) / -5824873584222827587L) + ((i1 * -121) * iMeth(Test0239.iFld, fFld1,
                bFld)));
            i1 *= i1;
            Test0239.iArrFld[(i1 >>> 1) % N] += i1;
            Test0239.instanceCount = Test0239.iFld;
            for (f2 = 3; f2 < 63; ++f2) {
                if (bFld) {
                    Test0239.iArrFld = Test0239.iArrFld1;
                    i12 -= (int)fFld;
                    Test0239.instanceCount = i1;
                } else {
                    Test0239.iFld += i12;
                }
                for (i13 = 1; i13 < 2; i13++) {
                    i1 = (int)1.121291;
                    Test0239.iFld += (((i13 * fFld1) + Test0239.iFld) - i12);
                    i12 += (i13 - Test0239.iFld);
                }
                by = (byte)i13;
                bArr[(int)(f2 + 1)] = bFld;
                Test0239.instanceCount -= Test0239.iFld;
                i15 = 1;
                do {
                    i12 += (((i15 * i12) + Test0239.instanceCount) - Test0239.iFld);
                    l1 += i1;
                    i12 += i14;
                    Test0239.iFld += (i15 * i15);
                } while (++i15 < 2);
            }
            Test0239.iFld += i14;
        }

        FuzzerUtils.out.println("d f2 i12 = " + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f2) + "," +
            i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("l1 dArr lArr = " + l1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("fArr bArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0239.instanceCount fFld Test0239.iFld = " + Test0239.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0239.iFld);
        FuzzerUtils.out.println("Test0239.dFld Test0239.byFld fFld1 = " + Double.doubleToLongBits(Test0239.dFld) + "," + Test0239.byFld
            + "," + Float.floatToIntBits(fFld1));
        FuzzerUtils.out.println("bFld Test0239.iArrFld Test0239.iArrFld1 = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0239.iArrFld) + "," + FuzzerUtils.checkSum(Test0239.iArrFld1));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0239 _instance = new Test0239();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
