// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:22 2023
public class Test0221 {

    public static final int N = 400;

    public static volatile long instanceCount=4005850401415947868L;
    public long lFld=-2086L;
    public double dFld=0.44452;
    public static int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0221.iArrFld, 120);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6) {

        byte by=-57;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1383206268L);

        i6 *= (int) Test0221.instanceCount;
        i6 %= (int)(by | 1);
        i6 = i6;
        lArr[(0 >>> 1) % N] -= i6;
        vMeth1_check_sum += i6 + by + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l1, double d) {

        int i7=-4421;

        vMeth1(i7);
        vMeth_check_sum += l1 + Double.doubleToLongBits(d) + i7;
    }

    public int iMeth(int i4) {

        short s=-3581;
        float f=-2.18F, f1=-55.842F, f2=-2.475F;
        int i5=25475, i8=-225, i9=-79, i10=-9;

        s *= (short)f;
        for (f1 = 308; f1 > 12; f1--) {
            lFld += (long)(f1 * f1);
        }
        vMeth(Test0221.instanceCount, dFld);
        i8 = 280;
        do {
            i9 = 1;
            do {
                i4 = i4;
                i4 -= -6;
                fArrFld[i9 - 1] -= (float)dFld;
            } while (++i9 < 6);
            for (f2 = 1; f2 < 6; ++f2) {
                lFld = -8;
                dFld -= i8;
                Test0221.iArrFld[(int) (f2 + 1)] = i9;
                i5 += i5;
            }
            i10 -= -65441;
        } while (--i8 > 0);
        long meth_res = i4 + s + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i5 + i8 + i9 +
            Float.floatToIntBits(f2) + i10;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=1432552982867212300L;
        int i=203, i1=15936, i2=-1342, i3=-5, i11=7;
        boolean b=false;
        short s1=25163;
        float f3=1.629F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)108);

        Test0221.iArrFld = (Test0221.iArrFld = (Test0221.iArrFld = (Test0221.iArrFld = Test0221.iArrFld)));
        l = 1;
        do {
            i = 1;
            while (++i < 72) {
                if (b = (((i1++) % -80) <= -15L)) continue;
                i1 += i;
                for (i2 = (int)(l); i2 < 1; ++i2) {
                    Test0221.instanceCount <<= (lFld + (1782 >> iMeth(-52)));
                    s1 &= (short)-24738;
                    try {
                        i1 = (i3 / i3);
                        i1 = (59 / i3);
                        Test0221.iArrFld[i2 - 1] = (-7 / Test0221.iArrFld[i2]);
                    } catch (ArithmeticException a_e) {}
                    Test0221.instanceCount += i3;
                    switch ((i % 8) + 9) {
                    case 9:
                        Test0221.iArrFld[i2 + 1] -= i1;
                        break;
                    case 10:
                        switch ((i % 2) + 84) {
                        case 84:
                            f3 += (((i2 * i11) + i1) - f3);
                            lFld = i3;
                            Test0221.iArrFld[(i >>> 1) % N] = i;
                            break;
                        case 85:
                            i11 &= -35500;
                            Test0221.iArrFld[(int) (l)] *= (int) 3648163042L;
                            Test0221.iArrFld[(i11 >>> 1) % N] >>= 77;
                            break;
                        }
                        Test0221.instanceCount *= (long) dFld;
                        try {
                            i11 = (-830648990 % i2);
                            i3 = (Test0221.iArrFld[(-252 >>> 1) % N] / -144);
                            i1 = (-5062 % Test0221.iArrFld[i - 1]);
                        } catch (ArithmeticException a_e) {}
                    case 11:
                        switch (((i >>> 1) % 10) + 70) {
                        case 70:
                        case 71:
                            Test0221.instanceCount = i;
                            lFld = l;
                            i3 -= (int) Test0221.instanceCount;
                            Test0221.iArrFld[i2 + 1] += i2;
                            break;
                        case 72:
                            byArr[(i11 >>> 1) % N] *= (byte)f3;
                            i3 += i11;
                            lFld = i2;
                            i11 += i2;
                            break;
                        case 73:
                            dArrFld[(int) (l + 1)] = Test0221.instanceCount;
                        case 74:
                            i11 = i2;
                            break;
                        case 75:
                            i3 += (i2 + i3);
                            break;
                        case 76:
                            dFld -= i3;
                            break;
                        case 77:
                            Test0221.iArrFld[i2 - 1] <<= 10;
                            break;
                        case 78:
                            i1 *= -8;
                            break;
                        case 79:
                            dFld -= Test0221.instanceCount;
                            break;
                        default:
                            i1 += (-66 + (i2 * i2));
                        }
                    case 12:
                        i11 *= (int)-2207922006L;
                    case 13:
                    case 14:
                        Test0221.iArrFld[i] -= i11;
                        break;
                    case 15:
                        i11 += i2;
                    case 16:
                        i3 <<= i;
                    default:
                        i1 >>= s1;
                    }
                }
            }
        } while (++l < 350);

        FuzzerUtils.out.println("l i b = " + l + "," + i + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("s1 f3 i11 = " + s1 + "," + Float.floatToIntBits(f3) + "," + i11);
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0221.instanceCount lFld dFld = " + Test0221.instanceCount + "," + lFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0221.iArrFld fArrFld dArrFld = " + FuzzerUtils.checkSum(Test0221.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0221 _instance = new Test0221();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
