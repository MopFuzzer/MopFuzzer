// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0849 {

    public static final int N = 400;

    public static long instanceCount=4163571838L;
    public static volatile double dFld=2.59014;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0849.iArrFld, -24039);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(boolean b) {

        int i7=9;
        int i8=-208;
        int i9=14;
        int i10=-19917;
        int i11=-60091;
        int i12=5;
        int[][] iArr =new int[N][N];
        float f1=36.671F;
        float f2=-80.213F;
        float[] fArr =new float[N];
        byte by=93;
        short s=-3843;
        boolean b1=false;

        FuzzerUtils.init(iArr, -71);
        FuzzerUtils.init(fArr, -73.154F);

        i7 = 0;
        for (i8 = 314; i8 > 5; --i8) {
            for (f1 = i8; f1 < 5; f1++) {
                f2 = i9;
                iArr[(i10 >>> 1) % N][i8] += (int)f2;
                iArr[(int)(f1)] = iArr[(int)(f1)];
                i10 += (int)(f1 - by);
                for (i11 = i8; 1 > i11; i11++) {
                    i7 *= -4;
                    s -= (short)i8;
                    if (b1) break;
                    i10 += (int) Test0849.dFld;
                    i9 += 133;
                    fArr[(int)(f1 + 1)] %= 250;
                    if (b) break;
                }
            }
        }
        vMeth2_check_sum += (b ? 1 : 0) + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + Float.floatToIntBits(f2) + by
            + i11 + i12 + s + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i3, int i4, float f) {

        double d1=0.115860;
        double[] dArr =new double[N];
        int i5=-224;
        int i6=-19192;
        int i13=-130;
        int i14=44175;
        int[] iArr1 =new int[N];
        boolean[] bArr =new boolean[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(dArr, 122.50081);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(sArr, (short)27918);
        FuzzerUtils.init(iArr1, -9);

        dArr[(i3 >>> 1) % N] -= (((++d1) - i4) - (--i4));
        for (i5 = 16; 330 > i5; ++i5) {
            boolean b2=true;
            vMeth2(b2);
            bArr[i5 + 1] = b2;
            f -= 51708;
            i6 *= (int)-11L;
            for (i13 = 1; i13 < 5; i13++) {
                sArr[i5 + 1] = (short)i4;
                i6 *= i3;
                iArr1[i13 + 1] <<= i3;
                i14 *= (int) Test0849.dFld;
                f *= -15909;
                try {
                    i6 = (iArr1[i5 - 1] % 65);
                    iArr1[i5 - 1] = (i13 % 237);
                    i14 = (i6 % 82);
                } catch (ArithmeticException a_e) {}
                b2 = b2;
            }
            i6 = (int) Test0849.instanceCount;
        }
        vMeth1_check_sum += i3 + i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i5 + i6 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(long l, int i2, double d) {

        float f3=-84.620F, f4=8.503F;
        byte by1=-76;
        int i15=-40777, i16=34114, i17=64443;

        vMeth1(i2, i2, f3);
        f3 = by1;
        i15 = 1;
        while (++i15 < 357) {
            Test0849.iArrFld[i15] -= (int) f3;
            f3 += f3;
            i2 = i2;
            f3 += 232L;
            i2 >>= i2;
        }
        for (i16 = 1; i16 < 259; ++i16) {
            i17 = 134;
            i17 = -53554;
            if (bFld) {
                i17 -= i2;
                i2 *= i16;
            } else {
                Test0849.iArrFld[i16] = (int) f4;
            }
        }
        vMeth_check_sum += l + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f3) + by1 + i15 + i16 + i17 +
            Float.floatToIntBits(f4);
    }

    public void mainTest(String[] strArr1) {

        int i=59, i1=22552, i18=-29380, i19=-6, i20=8, i21=-170, i22=11, i23=-17;
        float f5=1.390F;
        float[] fArr1 =new float[N];
        byte by2=-5;
        double[][] dArr1 =new double[N][N];
        long[] lArr =new long[N];

        FuzzerUtils.init(dArr1, 1.125781);
        FuzzerUtils.init(fArr1, 2.416F);
        FuzzerUtils.init(lArr, 55519L);

        for (i = 7; i < 144; i++) {
            vMeth(Test0849.instanceCount, i, Test0849.dFld);
            i18 = 1;
            do {
                i19 = 1;
                do {
                    Test0849.dFld = f5;
                    f5 += (((i19 * i1) + f5) - i18);
                    dArr1[i19 - 1][i19 - 1] -= i18;
                    dArr1 = dArr1;
                    i1 += (i19 * i19);
                    i1 = by2;
                } while (++i19 < 1);
                i1 += i18;
                i1 *= (int)f5;
                i1 = i1;
                i1 = -2;
                switch (((i % 3) * 5) + 34) {
                case 38:
                    i1 *= (int) Test0849.instanceCount;
                    if (bFld) {
                        switch ((i % 10) + 119) {
                        case 119:
                            for (i20 = 1; i20 > 1; i20--) {
                                Test0849.iArrFld[i20] <<= (int) Test0849.instanceCount;
                                i1 = (int) Test0849.instanceCount;
                                i1 |= by2;
                            }
                            for (i22 = 1; i22 < 1; ++i22) {
                                i21 = (int) Test0849.instanceCount;
                                fArr1[i22 + 1] += 51408;
                                i23 <<= i21;
                                Test0849.instanceCount += (i22 * i22);
                                lArr[i - 1] *= i1;
                                i1 += i22;
                                i1 -= i21;
                            }
                        case 120:
                            lArr[i18 - 1] *= Test0849.instanceCount;
                            break;
                        case 121:
                            i1 >>= 30612;
                            break;
                        case 122:
                        case 123:
                            lArr[i18] *= -109;
                        case 124:
                            i23 *= i19;
                            break;
                        case 125:
                        case 126:
                            Test0849.iArrFld[i] *= (int) Test0849.dFld;
                            break;
                        case 127:
                            Test0849.iArrFld[i18 - 1] += i;
                            break;
                        case 128:
                            Test0849.instanceCount += (((i18 * i18) + f5) - Test0849.instanceCount);
                            break;
                        }
                    } else {
                        bArrFld[i18] = bFld;
                    }
                    break;
                case 46:
                    Test0849.instanceCount = Test0849.instanceCount;
                    break;
                case 40:
                    i23 = i20;
                    break;
                default:
                    i23 += (i18 * i18);
                }
            } while (++i18 < 183);
        }

        FuzzerUtils.out.println("i i1 i18 = " + i + "," + i1 + "," + i18);
        FuzzerUtils.out.println("i19 f5 by2 = " + i19 + "," + Float.floatToIntBits(f5) + "," + by2);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 dArr1 fArr1 = " + i23 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0849.instanceCount Test0849.dFld bFld = " + Test0849.instanceCount + "," +
                Double.doubleToLongBits(Test0849.dFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0849.iArrFld bArrFld = " + FuzzerUtils.checkSum(Test0849.iArrFld) + "," +
            FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0849 _instance = new Test0849();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
