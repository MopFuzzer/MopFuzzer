// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0138 {

    public static final int N = 400;

    public static volatile long instanceCount=-2162755604L;
    public int iFld=78;
    public static float fFld=0.227F;
    public static double dFld=0.123312;
    public static byte byFld=-126;
    public static short sFld=14779;
    public int[] iArrFld =new int[N];
    public static volatile int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0138.iArrFld1, 123);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l, short s, int i13) {

        int i14=-20673, i15=108, i16=14, i17=-18;
        boolean b1=false;

        i14 = 1;
        while (++i14 < 152) {
            i13 += (i14 ^ i13);
            if (b1) {
                i15 = 1;
                while (++i15 < 10) {
                    Test0138.fFld += i15;
                    i13 |= i13;
                    i13 += i13;
                    if (b1) break;
                    Test0138.dFld *= Test0138.dFld;
                    Test0138.fFld += (((i15 * i15) + i14) - i13);
                }
                if (b1) continue;
                Test0138.iArrFld1[i14 + 1] /= (int) ((long) (Test0138.fFld) | 1);
            } else if (b1) {
                for (i16 = i14; i16 < 10; ++i16) {
                    i17 += (-31843 + (i16 * i16));
                    i17 *= 40;
                }
            } else if (true) {
                Test0138.fFld = i13;
            }
        }
        long meth_res = l + s + i13 + i14 + i15 + (b1 ? 1 : 0) + i16 + i17;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth() {

        int i11=115, i12=-9, i18=48, i19=-1, i20=82, i21=-222, i22=-28845, i23=11;
        short s1=-8612;
        boolean b2=true;

        for (i11 = 5; i11 < 304; ++i11) {
            Test0138.fFld += (((i11 * i12) + Test0138.fFld) - i11);
        }
        fMeth(Test0138.instanceCount, s1, i11);
        Test0138.iArrFld1[(-7905 >>> 1) % N] = (int) Test0138.dFld;
        for (i18 = 10; i18 < 331; ++i18) {
            Test0138.instanceCount >>= 28897;
            if (b2) {
                if (i18 != 0) {
                }
                for (i20 = 1; i20 < 5; ++i20) {
                    for (i22 = 1; 2 > i22; i22 += 2) {
                        i23 += (((i22 * i18) + i22) - i12);
                        i12 = i12;
                        Test0138.iArrFld1[i18] = s1;
                    }
                    i12 += (((i20 * i22) + i11) - Test0138.byFld);
                    Test0138.iArrFld1[i18 + 1] -= (int) Test0138.dFld;
                }
            }
        }
        long meth_res = i11 + i12 + s1 + i18 + i19 + i20 + i21 + i22 + i23 + (b2 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(byte by, int i3, int i4) {

        int i5=-3, i6=-1285, i7=1, i8=52418, i9=911, i10=63507;
        boolean b=true;

        for (i5 = 19; i5 < 317; ++i5) {
            i3 = (int)(-79.790F - (i6++));
            i4 -= (i6++);
            for (i7 = 1; 6 > i7; ++i7) {
                Test0138.iArrFld1[i7] *= (int) Test0138.fFld;
                for (i9 = 1; i9 < 2; i9++) {
                    if (b) continue;
                    Test0138.iArrFld1 = (Test0138.iArrFld1 = Test0138.iArrFld1);
                    by += (byte) Test0138.instanceCount;
                    Test0138.fFld = 67.243F;
                    Test0138.iArrFld1[i7] = iMeth();
                    i4 += (((i9 * Test0138.instanceCount) + Test0138.instanceCount) - i9);
                }
                Test0138.instanceCount *= by;
                i10 = i10;
                Test0138.sFld += (short) (0 + (i7 * i7));
            }
        }
        vMeth_check_sum += by + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=3, i1=1, i2=-80, i24=0, i25=-94, i26=10, i27=5, i28=-11, i29=38754, i30=-14;
        long l1=-4593L;
        boolean b3=true;
        double d=0.66280;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 1.69539);

        iFld >>= (int) ((++Test0138.fFld) - iFld);
        for (i = 7; 345 > i; ++i) {
            iArrFld[i - 1] >>= (i1++);
            i2 = 1;
            while (++i2 < 74) {
                vMeth((byte)(-9), i2, i2);
                iFld += (((i2 * Test0138.fFld) + Test0138.fFld) - i);
            }
            l1 += i;
        }
        Test0138.sFld >>= (short) i;
        for (i24 = 301; i24 > 11; --i24) {
            i25 += (((i24 * i2) + Test0138.fFld) - Test0138.fFld);
            i25 = i25;
            b3 = b3;
            i25 ^= i24;
            i26 = 1;
            while (++i26 < 87) {
                i27 += (int) Test0138.instanceCount;
                for (d = 1; d < 1; d++) {
                    Test0138.iArrFld1[(int) (d)] >>= i28;
                    Test0138.fFld = Test0138.instanceCount;
                    Test0138.iArrFld1 = Test0138.iArrFld1;
                    i27 *= iFld;
                    i28 += (int)(d * d);
                    Test0138.instanceCount = i25;
                    if (b3) continue;
                    i28 *= i27;
                    dArr = dArr;
                    Test0138.instanceCount = iFld;
                }
                iArrFld[i24] *= -97;
                for (i29 = 1; i29 < 1; i29++) {
                    Test0138.fFld += i29;
                    Test0138.instanceCount <<= i2;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("l1 i24 i25 = " + l1 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b3 i26 i27 = " + (b3 ? 1 : 0) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d i28 i29 = " + Double.doubleToLongBits(d) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 dArr = " + i30 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0138.instanceCount iFld Test0138.fFld = " + Test0138.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0138.fFld));
        FuzzerUtils.out.println("Test0138.dFld Test0138.byFld Test0138.sFld = " + Double.doubleToLongBits(Test0138.dFld) + "," +
                Test0138.byFld + "," + Test0138.sFld);
        FuzzerUtils.out.println("iArrFld Test0138.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0138.iArrFld1));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0138 _instance = new Test0138();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
