// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0941 {

    public static final int N = 400;

    public static long instanceCount=-61885L;
    public int iFld=-42062;
    public boolean bFld=false;
    public static double dFld=-107.57328;
    public static int[] iArrFld =new int[N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0941.iArrFld, 6);
        FuzzerUtils.init(Test0941.sArrFld, (short) 22706);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(short s, int i4) {

        int i5=21, i6=3, i7=64314;
        byte by=-23;
        byte[] byArr =new byte[N];
        boolean b=true;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -77.974F);
        FuzzerUtils.init(byArr, (byte)-65);

        fArr[(i4 >>> 1) % N] -= i4;
        i4 -= i4;
        i4 = (int)-2.400F;
        byArr = byArr;
        i4 = i4;
        for (i5 = 5; i5 < 213; ++i5) {
            Test0941.iArrFld = Test0941.iArrFld;
        }
        i6 = i5;
        Test0941.instanceCount >>= i7;
        for (short s1 : Test0941.sArrFld) {
            if (b) {
                switch ((((i7 >>> 1) % 1) * 5) + 101) {
                case 104:
                    by >>= (byte)i6;
                    i6 *= (int)1.114F;
                    break;
                }
                Test0941.iArrFld = Test0941.iArrFld;
            }
        }
        long meth_res = s + i4 + i5 + i6 + i7 + by + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))
            + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3) {

        short s2=13693;
        float f2=-2.875F;
        float[] fArr1 =new float[N];
        int i8=10;
        int i9=29;
        int i10=-16909;
        int[] iArr =new int[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -100L);
        FuzzerUtils.init(iArr, -132);
        FuzzerUtils.init(fArr1, -1.19F);

        Test0941.instanceCount = (long) (Test0941.dFld - (i3--));
        i3 >>>= iMeth1(s2, i3);
        s2 -= (short)-81.938F;
        for (short s3 : Test0941.sArrFld) {
            f2 *= s2;
            for (i8 = 1; 4 > i8; i8++) {
                i3 *= i9;
                lArr[i8] *= (long)-2.903F;
                switch (((i9 >>> 1) % 6) + 111) {
                case 111:
                    i10 = 1;
                    do {
                        switch (((i8 % 3) * 5) + 99) {
                        case 114:
                            try {
                                iArr[i10] = (i10 / i3);
                                i3 = (i3 % i3);
                                i3 = (Test0941.iArrFld[i10] % i10);
                            } catch (ArithmeticException a_e) {}
                            Test0941.instanceCount >>>= i3;
                            iArr[i8] >>>= i3;
                            i9 = i10;
                            break;
                        case 107:
                            i3 <<= (int) Test0941.instanceCount;
                        case 111:
                            fArr1 = fArr1;
                            break;
                        }
                    } while (++i10 < 2);
                    break;
                case 112:
                case 113:
                    Test0941.iArrFld[i8] = i9;
                case 114:
                case 115:
                    lArr[i8 + 1] *= i8;
                    break;
                case 116:
                    i3 += 3;
                default:
                    i9 = i8;
                }
            }
        }
        vMeth_check_sum += i3 + s2 + Float.floatToIntBits(f2) + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static int iMeth(float f1, long l) {

        int i11=-37457, i12=139, i13=-4;

        vMeth(i11);
        for (i12 = 17; i12 < 384; i12++) {
            i11 -= (int) Test0941.dFld;
        }
        long meth_res = Float.floatToIntBits(f1) + l + i11 + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=143, i1=-81, i2=-18, i14=-7, i15=-1;
        float f=70.813F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -154L);

        i = 1;
        do {
            try {
                iFld = (109 / i);
                iFld = (-254 % i);
                iFld = (64699 % iFld);
            } catch (ArithmeticException a_e) {}
            f = (-(Long.reverseBytes(Test0941.instanceCount) + iFld));
            iFld *= i;
            Test0941.iArrFld = (Test0941.iArrFld = (Test0941.iArrFld = (Test0941.iArrFld = Test0941.iArrFld)));
            for (i1 = 10; i1 < 207; ++i1) {
                if (bFld) continue;
                iFld = (Test0941.iArrFld[i1] += iMeth(f, Test0941.instanceCount));
                for (i14 = 1; i14 < 2; ++i14) {
                    iFld = i2;
                    Test0941.instanceCount = (long) f;
                    if (bFld) continue;
                    Test0941.instanceCount *= Test0941.instanceCount;
                    Test0941.iArrFld[i + 1] = -53830;
                    Test0941.instanceCount += (((i14 * iFld) + iFld) - i2);
                    Test0941.iArrFld = Test0941.iArrFld;
                }
                i15 += (int) Test0941.instanceCount;
                lArr1[i + 1] = iFld;
            }
            Test0941.iArrFld[i - 1] = -6588;
        } while (++i < 121);

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i2 i14 i15 = " + i2 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0941.instanceCount iFld bFld = " + Test0941.instanceCount + "," + iFld + "," + (bFld ? 1 :
            0));
        FuzzerUtils.out.println("Test0941.dFld Test0941.iArrFld Test0941.sArrFld = " + Double.doubleToLongBits(Test0941.dFld) + "," +
                FuzzerUtils.checkSum(Test0941.iArrFld) + "," + FuzzerUtils.checkSum(Test0941.sArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0941 _instance = new Test0941();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
