// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:30 2023
public class Test0391 {

    public static final int N = 400;

    public static volatile long instanceCount=-15643L;
    public static double dFld=0.28561;
    public static float fFld=-58.204F;
    public static boolean bFld=false;
    public static long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0391.lArrFld, -8026865932186151679L);
        FuzzerUtils.init(Test0391.dArrFld, -2.116311);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5, long l, short s) {

        int i6=34;
        int i7=2;
        int i8=-170;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 8);

        i6 = 1;
        do {
            i5 <<= i5;
            iArr = iArr;
            Test0391.dFld = i5;
            if (i6 != 0) {
                vMeth_check_sum += i5 + l + s + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr);
                return;
            }
        } while (++i6 < 247);
        iArr[(i6 >>> 1) % N][(i6 >>> 1) % N] = (int)-75L;
        for (long l2 : Test0391.lArrFld) {
            i5 = -156;
            for (i7 = 1; i7 < 4; i7++) {
                i5 = i7;
                i8 = 4;
                switch ((i7 % 2) + 72) {
                case 72:
                    l += (i7 * i7);
                    i5 = i5;
                    break;
                case 73:
                    i5 = (int)l;
                    break;
                }
            }
        }
        vMeth_check_sum += i5 + l + s + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth1(int i1, int i2) {

        int i3=-26344, i4=-30684, i9=-34, i10=-81, i11=-143;
        short s1=4658;
        double d=-109.117333;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 123.459F);

        for (i3 = 15; 306 > i3; i3++) {
            vMeth(i3, Test0391.instanceCount, s1);
            i2 += i2;
            for (d = 1; d < 6; ++d) {
                for (i10 = 2; i10 > 1; i10 -= 2) {
                    if (i4 != 0) {
                    }
                    Test0391.instanceCount += (long) d;
                    fArr = FuzzerUtils.float1array(N, (float)1.906F);
                    Test0391.instanceCount += (((i10 * Test0391.instanceCount) + i3) - i2);
                    i4 += i3;
                    Test0391.instanceCount += i10;
                    Test0391.instanceCount ^= i11;
                    i1 += s1;
                }
                i9 <<= i9;
                i4 = s1;
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + s1 + Double.doubleToLongBits(d) + i9 + i10 + i11 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth() {

        int i12=24, i13=-105, i14=-249, i15=-17177;
        byte by=-103;
        float f=0.438F;
        double d2=0.102163;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -1.39941);

        Test0391.instanceCount = (long) (-5627 - (Test0391.dFld - lMeth1(48, i12)));
        i13 = 1;
        do {
            dArr[i13] -= -21;
            if (false) {
                by += (byte)(i13 * i13);
            } else if (true) {
                i12 += i13;
                i12 = i13;
                i12 = i13;
            }
            Test0391.instanceCount -= i12;
            for (f = 1; f < 7; ++f) {
                Test0391.lArrFld[i13] -= -184;
                Test0391.fFld += 2;
            }
            for (d2 = 1; d2 < 7; ++d2) {
                i12 = i12;
                i15 <<= -212;
            }
        } while (++i13 < 221);
        long meth_res = i12 + i13 + by + Float.floatToIntBits(f) + i14 + Double.doubleToLongBits(d2) + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-130;
        int i16=-13681;
        int i17=-145;
        int i18=-6776;
        int i19=30432;
        int i20=67;
        int i21=238;
        int[] iArr1 =new int[N];
        short s2=22573;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)16936);
        FuzzerUtils.init(iArr1, -217);

        i -= (int) Test0391.instanceCount;
        lMeth();
        i16 = 1;
        while ((i16 += 3) < 149) {
            i = (int) Test0391.instanceCount;
            i -= i16;
            Test0391.dFld *= i16;
            switch ((((i >>> 1) % 2) * 5) + 75) {
            case 79:
                i17 = 1;
                do {
                    sArr[i17 + 1] = (short)8905;
                    Test0391.fFld += Test0391.instanceCount;
                    i >>= i;
                    Test0391.dFld *= i16;
                } while (++i17 < 212);
                i |= 2;
                Test0391.bFld = Test0391.bFld;
            case 77:
                i += (i16 * i16);
                i *= i;
                i += i16;
                break;
            }
            iArr1[i16 + 1] = i17;
            i = s2;
            Test0391.instanceCount *= i;
            i = i17;
            Test0391.dArrFld[i16] = i17;
            i = s2;
        }
        Test0391.instanceCount = i16;
        for (i18 = 12; i18 < 324; ++i18) {
            Test0391.fFld += i;
            i19 -= (int)-5L;
            for (i20 = i18; i20 < 81; ++i20) {
                i19 *= (int) Test0391.instanceCount;
            }
            Test0391.fFld -= Test0391.instanceCount;
        }

        FuzzerUtils.out.println("i i16 i17 = " + i + "," + i16 + "," + i17);
        FuzzerUtils.out.println("s2 i18 i19 = " + s2 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 sArr = " + i20 + "," + i21 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("iArr1 = " + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0391.instanceCount Test0391.dFld Test0391.fFld = " + Test0391.instanceCount + "," +
                Double.doubleToLongBits(Test0391.dFld) + "," + Float.floatToIntBits(Test0391.fFld));
        FuzzerUtils.out.println("Test0391.bFld Test0391.lArrFld Test0391.dArrFld = " + (Test0391.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0391.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0391.dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0391 _instance = new Test0391();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
