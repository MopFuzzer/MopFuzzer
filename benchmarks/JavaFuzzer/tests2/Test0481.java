// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0481 {

    public static final int N = 400;

    public static long instanceCount=2263117270L;
    public static volatile float fFld=88.318F;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0481.iArrFld, 57);
        FuzzerUtils.init(Test0481.fArrFld, -84.642F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, short s, int i3) {

        int i4=-42392, i5=-14, i6=12, i7=39989, i8=-9;
        float f1=1.1001F;

        for (i4 = 16; 360 > i4; ++i4) {
            i5 |= -38761;
            i3 += (((i4 * f1) + i4) - i4);
            f1 *= i4;
            Test0481.instanceCount += i3;
            i5 += (int)-25.344F;
            l >>>= 5133;
        }
        for (i6 = 1; 266 > i6; ++i6) {
            Test0481.instanceCount = i6;
            i3 -= i8;
        }
        i5 = (int) Test0481.instanceCount;
        i8 = i6;
        i5 *= i6;
        Test0481.instanceCount <<= -24;
        Test0481.iArrFld = Test0481.iArrFld;
        vMeth1_check_sum += l + s + i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + i8;
    }

    public static int iMeth(int i2, float f) {

        short s1=12845;
        float f2=13.856F;
        float[] fArr =new float[N];
        int i9=6, i10=62128;
        boolean b=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -3L);
        FuzzerUtils.init(fArr, 106.97F);

        vMeth1(-4025361103774308168L, s1, i2);
        lArr[(i2 >>> 1) % N] = i2;
        for (long l1 : lArr) {
            l1 -= 10;
            f2 = 1;
            do {
                i2 += (int)f2;
                i2 += (int) ((long) f2 ^ Test0481.instanceCount);
                l1 = s1;
                for (i9 = 1; i9 < 1; ++i9) {
                    b = b;
                    Test0481.iArrFld[(int) (f2)] += i10;
                    fArr[i9] *= i2;
                    i10 %= 155;
                    Test0481.iArrFld[(int) (f2 + 1)] = i10;
                    l1 += i9;
                }
            } while (++f2 < 4);
        }
        long meth_res = i2 + Float.floatToIntBits(f) + s1 + Float.floatToIntBits(f2) + i9 + i10 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-180, i1=55548, i11=8, i12=20766, i13=14160;
        float f3=1.64F;
        float[] fArr1 =new float[N];
        long l2=-10L;
        byte by=-45;

        FuzzerUtils.init(fArr1, 2.807F);

        for (i = 8; i < 342; ++i) {
            i1 = (iMeth(173, f3) + i1);
            for (l2 = 1; l2 < 5; l2++) {
                Test0481.instanceCount += by;
                switch (i % 4) {
                case 0:
                    by <<= (byte)i11;
                    i12 = 1;
                    while (++i12 < 2) {
                        Test0481.iArrFld[(int) (l2)] = (int) l2;
                        i1 += i12;
                    }
                    i11 = -59763;
                    i13 = 1;
                    do {
                        if (i12 != 0) {
                            vMeth_check_sum += i + i1 + Float.floatToIntBits(f3) + l2 + i11 + by + i12 + i13 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                            return;
                        }
                        i11 *= (int)f3;
                        Test0481.iArrFld[i13 + 1] &= i11;
                        i11 -= i13;
                    } while (++i13 < 2);
                case 1:
                    Test0481.iArrFld[i] -= i13;
                    break;
                case 2:
                    fArr1[(int) (l2 + 1)] *= Test0481.instanceCount;
                    break;
                case 3:
                    i1 *= (int)f3;
                    break;
                default:
                    f3 += Test0481.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f3) + l2 + i11 + by + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i14=-31995, i15=50077, i16=-27014, i17=193, i18=13, i19=63074, i20=44, i21=-6, i22=64876, i23=-5,
            i24=-49093;
        double d=-2.116772;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 0.8541);

        vMeth();
        Test0481.instanceCount = 10L;
        i14 = (int)170874824292099957L;
        d -= i14;
        for (i15 = 3; 244 > i15; i15++) {
            i14 = -50441;
            i17 = 1;
            while (++i17 < 104) {
                Test0481.fArrFld[i17] += i17;
            }
            i14 += 150;
            i18 = 104;
            do {
                for (i19 = 1; i19 > 1; i19 -= 2) {
                    i16 = i15;
                    Test0481.fFld += (i19 * i19);
                    i16 = i17;
                }
                dArr[i15 + 1] = i17;
                d -= Test0481.fFld;
                i21 = 1;
                do {
                    d %= (i21 | 1);
                } while (++i21 < 1);
            } while (--i18 > 0);
        }
        i14 = i14;
        i16 -= (int)49.1014F;
        i22 = 1;
        do {
            Test0481.instanceCount += i22;
            i14 += (int) Test0481.instanceCount;
            i16 <<= i16;
            i16 *= (int) Test0481.fFld;
        } while (++i22 < 254);
        i20 -= (int) Test0481.instanceCount;
        i14 = i18;
        for (i23 = 14; 336 > i23; i23++) {
            i20 *= (int)43970604L;
            i20 -= (int) Test0481.instanceCount;
        }

        FuzzerUtils.out.println("i14 d i15 = " + i14 + "," + Double.doubleToLongBits(d) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0481.instanceCount Test0481.fFld Test0481.iArrFld = " + Test0481.instanceCount + "," +
                Float.floatToIntBits(Test0481.fFld) + "," + FuzzerUtils.checkSum(Test0481.iArrFld));
        FuzzerUtils.out.println("Test0481.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0481.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0481 _instance = new Test0481();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
