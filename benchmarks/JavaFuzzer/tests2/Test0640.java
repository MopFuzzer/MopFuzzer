// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0640 {

    public static final int N = 400;

    public static volatile long instanceCount=-1361718426L;
    public static boolean bFld=true;
    public volatile int iFld=-186;
    public static byte byFld=15;
    public static long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0640.lArrFld, -63L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6) {

        int i7=-36808;
        int i8=-21835;
        int i9=6;
        int i10=51;
        int i11=1;
        int i12=-1;
        int[] iArr =new int[N];
        byte by=-96;
        short s=-23795;
        double d=1.30199;
        double[][] dArr =new double[N][N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 36565);
        FuzzerUtils.init(dArr, -55.37961);
        FuzzerUtils.init(lArr, -2334819251L);

        for (i7 = 5; i7 < 286; ++i7) {
            switch ((i7 % 4) + 35) {
            case 35:
                i6 >>= 239;
                for (i9 = i7; i9 < 6; i9++) {
                    by = (byte)i7;
                    i8 -= (int) Test0640.instanceCount;
                    i10 += i9;
                    iArr[i7] = (int) Test0640.instanceCount;
                    i6 = i10;
                    by >>= (byte) Test0640.instanceCount;
                    for (i11 = 1; i11 < 1; i11++) {
                        dArr[i11 - 1][i11] = i12;
                        s = (short)4L;
                        if (Test0640.bFld) continue;
                        lArr[i11 + 1] *= i9;
                    }
                }
                break;
            case 36:
                i12 *= i10;
                break;
            case 37:
                Test0640.instanceCount += (199 + (i7 * i7));
            case 38:
                i8 += (-12 + (i7 * i7));
            default:
                d += 44L;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + i10 + by + i11 + i12 + s + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        int i2=-13, i3=-63175, i4=-16452, i5=-206, i13=13, i14=-132, i15=14448, i16=27867, i17=-58319;
        double d1=1.55490;

        for (i2 = 12; i2 < 272; ++i2) {
            i3 += (int)(-1860538310L + (i2 * i2));
            i3 -= (i3++);
        }
        for (i4 = 10; i4 < 160; ++i4) {
            vMeth2(i4);
            i5 = i2;
            Test0640.lArrFld[i4 - 1][i4 - 1] *= Test0640.instanceCount;
        }
        for (i13 = 16; i13 < 306; i13++) {
            d1 *= i4;
        }
        i15 = 1;
        while (++i15 < 327) {
            i14 += (int)-8L;
        }
        for (i16 = 18; i16 < 334; ++i16) {
            i5 += i5;
            i3 += (96 + (i16 * i16));
            Test0640.bFld = Test0640.bFld;
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 + i17;
    }

    public static void vMeth() {

        int i=-30313, i1=-140, i18=42383, i19=-12606, i20=-128, i21=8, i22=11, i23=36866;
        float f=1.1017F;
        long l=33711L;

        for (i = 4; i < 148; ++i) {
            vMeth1();
        }
        for (i18 = 12; 329 > i18; i18++) {
            i1 += (((i18 * i) + f) - i1);
            i1 *= i19;
            if (Test0640.bFld) break;
            Test0640.instanceCount += (i18 * i18);
            i19 += i;
            for (i20 = 1; i20 < 5; i20++) {
                for (i22 = 2; 1 < i22; i22--) {
                    switch ((i22 % 9) + 79) {
                    case 79:
                        i23 = (int)f;
                        i19 = 17354;
                        Test0640.lArrFld[i20][i18 + 1] |= i;
                        Test0640.instanceCount -= (long) f;
                        break;
                    case 80:
                        Test0640.lArrFld[i20 + 1][i18] ^= i;
                        break;
                    case 81:
                        i23 = (int) Test0640.instanceCount;
                    case 82:
                        Test0640.instanceCount -= i20;
                        break;
                    case 83:
                        i23 += (i22 + i20);
                        break;
                    case 84:
                        if (Test0640.bFld) continue;
                        break;
                    case 85:
                        i19 -= i1;
                        break;
                    case 86:
                        Test0640.instanceCount += i18;
                    case 87:
                        l += i22;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i18 + i19 + Float.floatToIntBits(f) + i20 + i21 + i22 + i23 + l;
    }

    public void mainTest(String[] strArr1) {

        float f1=-2.959F;
        double d2=-1.56006;
        double[] dArr1 =new double[N];
        int i24=3;
        int i25=-117;
        int i26=-5;
        int i27=57581;
        int i28=-30547;
        int i29=12;
        int i30=23844;
        int i31=39518;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(dArr1, 48.92323);
        FuzzerUtils.init(iArr1, 13);

        vMeth();
        iFld *= (int)f1;
        Test0640.lArrFld[(iFld >>> 1) % N][(iFld >>> 1) % N] = Test0640.instanceCount;
        iFld = -8;
        d2 = f1;
        for (i24 = 1; i24 < 376; i24++) {
            i25 += i24;
            i25 -= i24;
            Test0640.lArrFld[i24][i24] += iFld;
            Test0640.instanceCount -= i25;
            Test0640.instanceCount -= i24;
            Test0640.instanceCount *= (long) 2.131025;
            i25 += i24;
            Test0640.instanceCount += (-250 + (i24 * i24));
            f1 += (i24 + i25);
        }
        for (i26 = 19; i26 < 341; ++i26) {
            for (i28 = 2; i28 < 78; i28 += 3) {
                switch ((i26 % 8) + 11) {
                case 11:
                    i25 <<= i24;
                    break;
                case 12:
                    i27 ^= i26;
                    f1 = (float)d2;
                    Test0640.instanceCount -= i28;
                    break;
                case 13:
                    for (i30 = 1; 4 > i30; i30++) {
                        i25 -= (int) Test0640.instanceCount;
                        f1 /= (Test0640.byFld | 1);
                        dArr1 = FuzzerUtils.double1array(N, (double)99.89895);
                        i31 *= (int)230L;
                        if (true) continue;
                        iArr1[i26] -= i24;
                    }
                    Test0640.lArrFld[i28 + 1] = FuzzerUtils.long1array(N, (long) -4L);
                    break;
                case 14:
                    try {
                        i27 = (-136 / i24);
                        i31 = (i30 / iArr1[i28]);
                        i27 = (244 / i30);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 15:
                    i29 += (((i28 * f1) + i29) - i29);
                case 16:
                    d2 -= i30;
                    break;
                case 17:
                    i27 += (i28 - i24);
                    break;
                case 18:
                    i25 = i30;
                    break;
                default:
                    Test0640.instanceCount -= -5;
                }
            }
        }

        FuzzerUtils.out.println("f1 d2 i24 = " + Float.floatToIntBits(f1) + "," + Double.doubleToLongBits(d2) + "," +
            i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 dArr1 iArr1 = " + i31 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))
            + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0640.instanceCount Test0640.bFld iFld = " + Test0640.instanceCount + "," + (Test0640.bFld ? 1 : 0)
            + "," + iFld);
        FuzzerUtils.out.println("Test0640.byFld Test0640.lArrFld = " + Test0640.byFld + "," + FuzzerUtils.checkSum(Test0640.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0640 _instance = new Test0640();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
