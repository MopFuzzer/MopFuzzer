// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0477 {

    public static final int N = 400;

    public static long instanceCount=3L;
    public static double dFld=-2.40676;
    public static volatile int iFld=136;
    public static float fFld=101.569F;
    public static float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0477.fArrFld, -87.102F);
        FuzzerUtils.init(Test0477.iArrFld, -1);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i3=-44;
        int i4=-2600;
        int i5=-184;
        int i6=7;
        int i7=13;
        int[] iArr =new int[N];
        int[] iArr1 =new int[N];
        boolean b=false;
        float f1=1.882F;
        float[] fArr =new float[N];
        short s=21212;
        byte by=78;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 61);
        FuzzerUtils.init(iArr1, 249);
        FuzzerUtils.init(fArr, -87.31F);
        FuzzerUtils.init(lArr, 3622L);

        switch ((((i3 >>> 1) % 8) * 5) + 88) {
        case 94:
            for (i4 = 5; i4 < 133; ++i4) {
                Test0477.instanceCount = i4;
                i3 += (int)172L;
                i3 += 44267;
                b = true;
            }
            for (i6 = 7; i6 < 204; i6++) {
                iArr[i6 - 1] >>= i6;
                i7 = (int) Test0477.instanceCount;
                f1 += 160L;
                Test0477.instanceCount -= (long) f1;
                i7 -= (int) Test0477.dFld;
            }
            iArr1[(i4 >>> 1) % N] -= i6;
            break;
        case 95:
            s >>>= (short)9174409215713163582L;
            by += (byte)i4;
            break;
        case 106:
            fArr[(4471 >>> 1) % N] = 16795;
            break;
        case 107:
            i3 >>= i3;
            break;
        case 125:
            lArr[(-38917 >>> 1) % N] -= Test0477.instanceCount;
        case 119:
            i7 = (int)-1546001768L;
            break;
        case 113:
            i5 += (int)1.43717;
            break;
        case 99:
            lArr[(i7 >>> 1) % N] >>= 5299558946545983228L;
        }
        long meth_res = i3 + i4 + i5 + (b ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f1) + s + by +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, float f) {

        int i2=-28773, i8=4, i9=4, i10=0, i11=13, i12=62140;
        byte by1=66;
        long l1=24730L;
        long[] lArr1 =new long[N];
        short s1=-8389;

        FuzzerUtils.init(lArr1, 12L);

        i2 = (-iMeth());
        for (i8 = 8; i8 < 190; i8 += 3) {
            Test0477.instanceCount = 5486;
            i9 += Test0477.iFld;
            by1 -= (byte)i2;
            Test0477.dFld = Test0477.iFld;
            i2 = Test0477.iFld;
        }
        for (l1 = 10; l1 < 352; l1++) {
            lArr1[(int)(l1)] = by1;
            for (i11 = 1; i11 < 5; i11 += 2) {
                i2 >>= i9;
                s1 >>>= (short) Test0477.iFld;
                i9 += i11;
                Test0477.fArrFld = Test0477.fArrFld;
                if (i2 != 0) {
                    vMeth_check_sum += l + Float.floatToIntBits(f) + i2 + i8 + i9 + by1 + l1 + i10 + i11 + i12 + s1 +
                        FuzzerUtils.checkSum(lArr1);
                    return;
                }
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + i2 + i8 + i9 + by1 + l1 + i10 + i11 + i12 + s1 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vSmallMeth(int i, int i1) {


        vMeth(Test0477.instanceCount, 122.144F);
        Test0477.iFld = i;
        vSmallMeth_check_sum += i + i1;
    }

    public void mainTest(String[] strArr1) {

        int i14=3, i15=3212, i17=2, i18=42657, i19=27, i20=-33683, i21=-53, i23=-8;
        boolean b1=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)16510);

        for (int smallinvoc = 0; smallinvoc < 136; smallinvoc++) vSmallMeth(Test0477.iFld, Test0477.iFld);
        Test0477.iFld = Test0477.iFld;
        for (i14 = 343; i14 > 21; --i14) {
            Test0477.instanceCount += (i14 ^ Test0477.instanceCount);
            Test0477.iFld += (int) Test0477.instanceCount;
            Test0477.fFld += i14;
        }
        for (int i16 : Test0477.iArrFld) {
            i17 = 1;
            do {
                i15 >>= 189;
                i15 += i17;
                Test0477.iArrFld = FuzzerUtils.int1array(N, (int) 9);
                i15 += i14;
                i15 >>>= 10183;
                i16 -= i14;
            } while (++i17 < 63);
            b1 = b1;
            Test0477.iArrFld[(i15 >>> 1) % N] += (int) Test0477.instanceCount;
            Test0477.iFld -= i16;
            Test0477.iFld = i15;
            for (i18 = 3; i18 < 63; i18++) {
                Test0477.iArrFld[i18 - 1] <<= (int) Test0477.instanceCount;
            }
            Test0477.iFld += (int) Test0477.instanceCount;
            Test0477.iFld = -5;
            sArr[(i16 >>> 1) % N] = (short) Test0477.dFld;
        }
        for (i20 = 6; 218 > i20; ++i20) {
            i23 = 1;
            while (++i23 < 118) {
                Test0477.fFld += i23;
            }
            i21 += (i20 * i20);
            if (b1) continue;
        }
        Test0477.iArrFld[(-9 >>> 1) % N] |= i20;
        i15 += i21;

        FuzzerUtils.out.println("i14 i15 i17 = " + i14 + "," + i15 + "," + i17);
        FuzzerUtils.out.println("b1 i18 i19 = " + (b1 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i23 = " + i20 + "," + i21 + "," + i23);
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0477.instanceCount Test0477.dFld Test0477.iFld = " + Test0477.instanceCount + "," +
                Double.doubleToLongBits(Test0477.dFld) + "," + Test0477.iFld);
        FuzzerUtils.out.println("Test0477.fFld Test0477.fArrFld Test0477.iArrFld = " + Float.floatToIntBits(Test0477.fFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0477.fArrFld)) + "," + FuzzerUtils.checkSum(Test0477.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0477 _instance = new Test0477();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
