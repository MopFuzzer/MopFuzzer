// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0098 {

    public static final int N = 400;

    public static long instanceCount=3755160883982485341L;
    public double dFld=-1.20344;
    public float fFld=-82.283F;
    public static volatile long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0098.lArrFld, 6186029909719831814L);
        FuzzerUtils.init(Test0098.iArrFld, 0);
        FuzzerUtils.init(Test0098.bArrFld, false);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        float f1=2.833F;
        int i7=7;
        int i8=5;
        int i9=42;
        int i10=96;
        int i11=-10;
        int[] iArr1 =new int[N];
        double d=0.125934;

        FuzzerUtils.init(iArr1, -53687);

        f1 -= 57;
        for (i7 = 256; 8 < i7; --i7) {
            i8 += (i7 * i7);
            d *= i7;
            Test0098.lArrFld[(-9 >>> 1) % N] -= i7;
            iArr1 = iArr1;
            i9 = 1;
            do {
                i8 = i7;
                try {
                    i8 = (17 / i9);
                    i8 = (-61 / i8);
                    i8 = (i9 % i8);
                } catch (ArithmeticException a_e) {}
                Test0098.instanceCount = Test0098.instanceCount;
                for (i10 = 1; i10 < 1; ++i10) {
                    f1 = 9710;
                    i11 *= i8;
                    i11 += (i10 * i10);
                    Test0098.instanceCount -= i8;
                }
            } while (++i9 < 7);
        }
        long meth_res = Float.floatToIntBits(f1) + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, int i2, int i3) {

        int i4=14;
        int i5=-1;
        int i6=-33012;
        int[] iArr =new int[N];
        float f=61.473F;
        byte by=76;
        short s=-19130;

        FuzzerUtils.init(iArr, -6);

        i4 = 1;
        do {
            for (i5 = i4; i5 < 5; i5++) {
                long l=7188088821277090707L;
                f = ((by - -12L) - (iArr[i4]++));
                by = (byte)(i6 *= ((i3--) - (++i6)));
                l ^= (((6800950498340674915L + (i5 + 10008L)) * iMeth()) - i5);
                switch ((i4 % 7) + 100) {
                case 100:
                    s += (short)(i5 - by);
                    i3 &= i5;
                    break;
                case 101:
                    iArr[i4 + 1] = i5;
                    try {
                        i1 = (i6 % -25854);
                        i6 = (i1 % -490195758);
                        i1 = (i6 / -11332);
                    } catch (ArithmeticException a_e) {}
                    l >>= i2;
                case 102:
                    by ^= (byte) Test0098.instanceCount;
                    i3 = i5;
                    break;
                case 103:
                    Test0098.instanceCount %= (i4 | 1);
                    i2 -= i5;
                    break;
                case 104:
                    i1 += (i5 ^ i4);
                case 105:
                    s = (short)i1;
                    break;
                case 106:
                    iArr[i4] -= (int) Test0098.instanceCount;
                    break;
                }
            }
        } while (++i4 < 326);
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + by + s + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(int i) {

        float f2=20.283F;
        int i12=-25371, i13=40, i14=-23186, i15=-12, i16=4, i17=17759;
        double d1=-2.81480;
        byte by1=43;
        short s1=-2505;

        vMeth(i, 87, i);
        i += i;
        switch (((i >>> 1) % 9) + 15) {
        case 15:
            f2 = i;
            break;
        case 16:
            for (i12 = 16; i12 < 324; ++i12) {
                for (i14 = 1; i14 < 5; ++i14) {
                    i >>= (int) Test0098.instanceCount;
                    i = i13;
                    i13 = i14;
                    d1 -= i13;
                    Test0098.iArrFld[i12 + 1] ^= by1;
                }
                for (i16 = 1; i16 < 5; i16++) {
                    i15 = i17;
                    f2 /= (Test0098.instanceCount | 1);
                    i15 = i17;
                }
            }
        case 17:
            i17 += i;
        case 18:
            Test0098.iArrFld[(i17 >>> 1) % N] = i12;
        case 19:
            i15 -= i16;
        case 20:
            Test0098.iArrFld[(i15 >>> 1) % N] -= s1;
        case 21:
            i -= i15;
        case 22:
            i17 = -10;
        case 23:
            i17 += by1;
            break;
        }
        long meth_res = i + Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d1) + by1 + i16
            + i17 + s1;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=-19762, i19=6, i20=14, i21=-7, i22=-210;
        boolean b=false;
        short s2=23820;
        long[] lArr =new long[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(fArr, -54.91F);

        fMeth(i18);
        Test0098.instanceCount *= (long) dFld;
        Test0098.instanceCount -= Test0098.instanceCount;
        i18 = i18;
        if (b) {
            i18 |= (int) Test0098.instanceCount;
            Test0098.iArrFld[(i18 >>> 1) % N] = i18;
            switch (((-4 >>> 1) % 1) + 79) {
            case 79:
                for (i19 = 316; i19 > 10; --i19) {
                    lArr = FuzzerUtils.long1array(N, (long)0L);
                    i18 |= i19;
                    if (b) break;
                    i21 = 1;
                    while (++i21 < 82) {
                        switch (((i18 >>> 1) % 8) + 31) {
                        case 31:
                        case 32:
                            i18 >>= i21;
                            dFld -= fFld;
                            break;
                        case 33:
                            i18 = 26558;
                            dFld -= i19;
                            break;
                        case 34:
                            i20 += i21;
                            if (b) break;
                            Test0098.iArrFld = Test0098.iArrFld;
                            Test0098.iArrFld[i21 - 1] = (int) Test0098.instanceCount;
                            break;
                        case 35:
                            Test0098.iArrFld[i21] = i21;
                            if (b) break;
                            Test0098.instanceCount += i21;
                            break;
                        case 36:
                            Test0098.iArrFld[i21 - 1] += (int) Test0098.instanceCount;
                            switch ((i21 % 6) + 125) {
                            case 125:
                                i20 = (int) Test0098.instanceCount;
                            case 126:
                                s2 -= (short)i22;
                                i22 += s2;
                            case 127:
                                fFld = -149;
                                break;
                            case 128:
                                i18 += (i21 ^ i22);
                                break;
                            case 129:
                                Test0098.instanceCount += i21;
                                break;
                            case 130:
                                i20 <<= i22;
                            }
                            break;
                        case 37:
                        case 38:
                            s2 += (short)i21;
                            break;
                        }
                    }
                }
                break;
            }
        } else {
            Test0098.bArrFld[(i18 >>> 1) % N] = b;
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("b i21 s2 = " + (b ? 1 : 0) + "," + i21 + "," + s2);
        FuzzerUtils.out.println("i22 lArr fArr = " + i22 + "," + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0098.instanceCount dFld fFld = " + Test0098.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0098.lArrFld Test0098.iArrFld Test0098.bArrFld = " + FuzzerUtils.checkSum(Test0098.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0098.iArrFld) + "," + FuzzerUtils.checkSum(Test0098.bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0098 _instance = new Test0098();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
