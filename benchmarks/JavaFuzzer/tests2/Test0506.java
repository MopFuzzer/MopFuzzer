// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0506 {

    public static final int N = 400;

    public static long instanceCount=1386420339271773702L;
    public volatile int iFld=9;
    public double dFld=-1.109193;
    public int iFld1=164;
    public static byte[] byArrFld =new byte[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0506.byArrFld, (byte) -38);
        FuzzerUtils.init(Test0506.lArrFld, 36924L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i8=11489;

        Test0506.lArrFld[(i8 >>> 1) % N] = (long) -110.87361;
        vMeth_check_sum += i8;
    }

    public static int iMeth1(int i6, float f1, int i7) {

        int i9=-194, i10=13257, i11=39048, i12=135, i13=-46861;
        boolean b=false;
        double d=0.39217;
        short s=-10837;
        byte by=74;

        if (b) {
            vMeth();
            i9 = 1;
            while (++i9 < 198) {
                for (i10 = i9; 8 > i10; i10++) {
                    i6 *= (int)f1;
                    if (b) continue;
                    switch ((i9 % 9) + 17) {
                    case 17:
                        Test0506.instanceCount = 1;
                        for (i12 = i9; i12 < 1; i12++) {
                            i7 += (i12 * i12);
                            d *= f1;
                            i6 >>= (int) Test0506.instanceCount;
                            i13 *= (int) Test0506.instanceCount;
                            i6 -= i9;
                            Test0506.instanceCount += (i12 + i11);
                        }
                    case 18:
                        d -= i11;
                    case 19:
                        s >>>= (short)i6;
                    case 20:
                        Test0506.instanceCount &= 15239;
                        break;
                    case 21:
                        Test0506.byArrFld[i9 + 1] <<= (byte) i6;
                        break;
                    case 22:
                        s += (short)i7;
                    case 23:
                    case 24:
                    case 25:
                        Test0506.instanceCount = i12;
                        break;
                    }
                }
            }
        } else if (b) {
            by = (byte)i12;
        }
        long meth_res = i6 + Float.floatToIntBits(f1) + i7 + i9 + i10 + i11 + (b ? 1 : 0) + i12 + i13 +
            Double.doubleToLongBits(d) + s + by;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        float f=0.639F;
        int i=30;
        int i1=124;
        int i2=80;
        int i3=-87;
        int i4=10;
        int i5=-1;
        int[] iArr =new int[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, -10117);
        FuzzerUtils.init(lArr, -96L);

        f = (((i * Test0506.instanceCount) * (i + i)) + (--f));
        i = iArr[(i >>> 1) % N];
        for (i1 = 23; i1 < 382; ++i1) {
            switch (((i1 % 2) * 5) + 54) {
            case 56:
                switch ((((0 - (i2 * i)) >>> 1) % 1) + 111) {
                case 111:
                    i3 = 1;
                    while (++i3 < 5) {
                        for (i4 = 1; i4 > i1; i4--) {
                            i5 *= 0;
                            Test0506.instanceCount = Test0506.instanceCount;
                            Test0506.byArrFld[i1 + 1] = (byte) (-(--f));
                        }
                        i *= ((i1 * i1) * iMeth1(i4, f, 10));
                        i2 = i4;
                        lArr = FuzzerUtils.long2array(N, (long)-32450L);
                        i += i5;
                        Test0506.instanceCount -= -6232147534253236414L;
                    }
                    break;
                }
                break;
            case 57:
                i2 = i4;
                break;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i + i1 + i2 + i3 + i4 + i5 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f2=-119.871F;
        float[] fArr =new float[N];
        int i14=9;
        int i15=99;
        int i16=-79;
        int i17=-182;
        int i18=-4;
        int i19=-35862;
        int[] iArr1 =new int[N];
        double d1=0.44293;
        double[] dArr =new double[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr1, 12);
        FuzzerUtils.init(fArr, 1.203F);
        FuzzerUtils.init(dArr, 48.65684);
        FuzzerUtils.init(sArr, (short)-30181);

        iFld += (int) (((-Test0506.instanceCount) + (-(iFld - 3000))) + iFld);
        iFld -= iMeth();
        iFld &= iFld;
        f2 = iFld;
        i14 = 1;
        do {
            Test0506.instanceCount += (i14 - iFld);
            iFld >>= -5;
            iFld = (int) Test0506.instanceCount;
        } while (++i14 < 330);
        Test0506.instanceCount = 0;
        iArr1[(i14 >>> 1) % N] += iFld;
        iFld -= (int)dFld;
        fArr[(iFld >>> 1) % N] *= -51439;
        dArr[(i14 >>> 1) % N] *= i14;
        i15 = 1;
        do {
            f2 += i14;
            iFld1 -= iFld1;
            iArr1[i15] = 100;
        } while (++i15 < 398);
        Test0506.instanceCount = (long) -1.106F;
        f2 = iFld;
        for (i16 = 1; i16 < 164; ++i16) {
            iFld += (int)-1.645F;
            Test0506.instanceCount = (long) f2;
            i18 = 154;
            do {
                fArr[i18 + 1] %= (Test0506.instanceCount | 1);
                iFld += i18;
                switch ((i18 % 8) + 120) {
                case 120:
                    f2 += i18;
                    break;
                case 121:
                    for (d1 = 1; d1 < 1; d1++) {
                        iFld %= (int)(i14 | 1);
                        fArr = FuzzerUtils.float1array(N, (float)-70.810F);
                    }
                    break;
                case 122:
                    f2 = -138L;
                case 123:
                    iFld = (int)dFld;
                    break;
                case 124:
                    i19 += iFld1;
                case 125:
                    try {
                        iFld1 = (-127 % i15);
                        iFld = (61 % i18);
                        iFld = (i15 % iArr1[i16]);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 126:
                    iFld = i15;
                case 127:
                    sArr[i18 + 1] += (short) Test0506.instanceCount;
                    break;
                default:
                    dFld = 0;
                }
            } while (--i18 > 0);
        }

        FuzzerUtils.out.println("f2 i14 i15 = " + Float.floatToIntBits(f2) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("d1 i19 iArr1 = " + Double.doubleToLongBits(d1) + "," + i19 + "," +
            FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("fArr dArr sArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0506.instanceCount iFld dFld = " + Test0506.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("iFld1 Test0506.byArrFld Test0506.lArrFld = " + iFld1 + "," +
                FuzzerUtils.checkSum(Test0506.byArrFld) + "," + FuzzerUtils.checkSum(Test0506.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0506 _instance = new Test0506();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
