// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0305 {

    public static final int N = 400;

    public static long instanceCount=-73L;
    public static int iFld=-59;
    public short sFld=-12690;
    public static double dFld=-1.12930;
    public boolean bFld=true;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0305.lArrFld, -107L);
    }

    public static long dMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i10=-169;
        int i11=12;
        int i12=58718;
        int i13=-103;
        int i14=-127;
        int i15=-47137;
        int i16=-244;
        int[][] iArr =new int[N][N];
        short s=-27793;
        boolean b1=true;

        FuzzerUtils.init(iArr, -12131);

        iArr[(-3892 >>> 1) % N][(-19 >>> 1) % N] -= 32831;
        Test0305.iFld += (int) Test0305.dFld;
        i10 = 1;
        do {
            Test0305.instanceCount += i10;
            Test0305.iFld += i10;
            Test0305.instanceCount = i10;
            Test0305.iFld = (int) Test0305.instanceCount;
            Test0305.iFld /= (int) (s | 1);
        } while (++i10 < 352);
        for (i11 = 1; i11 < 153; i11++) {
            for (i13 = 1; i13 < 10; i13++) {
                for (i15 = 1; i15 < 2; i15++) {
                    i12 %= 3;
                    i16 = Test0305.iFld;
                }
                if (b1) continue;
                Test0305.lArrFld = Test0305.lArrFld;
            }
        }
        vMeth_check_sum += i10 + s + i11 + i12 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(int i6, int i7, int i8) {

        int i9=-99;
        int i17=-46145;
        int i18=-5;
        int i19=-205;
        int i20=-16575;
        int i21=-43333;
        int i22=-243;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 6);

        i9 = 1;
        while (++i9 < 256) {
            i8 = (int) Test0305.instanceCount;
            vMeth();
        }
        for (i17 = 16; i17 < 283; i17++) {
            for (i19 = i17; i19 < 6; ++i19) {
                for (i21 = 1; i21 < 1; i21++) {
                    Test0305.dFld = 4;
                    i22 += (int) Test0305.instanceCount;
                    Test0305.instanceCount >>= i18;
                    i22 = i21;
                    Test0305.instanceCount += i20;
                    Test0305.dFld += -31011;
                    Test0305.instanceCount += (((i21 * Test0305.instanceCount) + Test0305.iFld) - i18);
                }
                iArr1[i19 + 1] <<= 39;
                Test0305.iFld += i22;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i17 + i18 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public double dMeth(int i, int i1) {

        int i2=-4, i3=-7771, i4=-130, i5=-1785, i23=39, i24=138;
        float f=-27.950F;
        byte by=27;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        i2 = 1;
        do {
            i3 = 1;
            while (++i3 < 6) {
                f *= (++Test0305.instanceCount);
                Test0305.iFld -= 0;
                for (i4 = 1; i4 < 1; i4++) {
                    boolean b=true;
                    bArr = (bArr = (bArr = (bArr = bArr)));
                    i5 -= (int) (by + (Math.max(i5, i4) + (Test0305.instanceCount * i2)));
                    sFld += (short)i4;
                    if (b) continue;
                    Test0305.iFld >>= (int) (i1 * (fMeth(i, i3, i3) - i4));
                }
                sFld &= (short)i2;
                for (i23 = 1; i23 < 1; i23++) {
                    f = i24;
                    i24 += (i23 * i23);
                    sFld = (short)i;
                }
            }
        } while (++i2 < 265);
        long meth_res = i + i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + by + i23 + i24 +
            FuzzerUtils.checkSum(bArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)100);

        dMeth(4, -1);
        byArr[(3652 >>> 1) % N] >>= (byte) Test0305.iFld;
        Test0305.iFld = Test0305.iFld;
        bFld = bFld;
        Test0305.iFld = Test0305.iFld;

        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0305.instanceCount Test0305.iFld sFld = " + Test0305.instanceCount + "," + Test0305.iFld + "," +
            sFld);
        FuzzerUtils.out.println("Test0305.dFld bFld Test0305.lArrFld = " + Double.doubleToLongBits(Test0305.dFld) + "," + (bFld ? 1
                : 0) + "," + FuzzerUtils.checkSum(Test0305.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0305 _instance = new Test0305();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  fMeth ->  fMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
