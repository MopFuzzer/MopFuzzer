// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0042 {

    public static final int N = 400;

    public static long instanceCount=4042842064L;
    public static volatile float fFld=-2.0F;
    public static volatile double dFld=1.24858;
    public static boolean bFld=false;
    public static float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0042.fArrFld, 0.728F);
        FuzzerUtils.init(Test0042.lArrFld, -778218038L);
    }

    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4) {

        int i5=49;
        int i6=81;
        int i7=-4220;
        int i8=-153;
        int i9=-2;
        int i10=-133;
        int[] iArr1 =new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 1);

        for (i5 = 4; i5 < 242; i5++) {
            iArr1[i5] *= i6;
            Test0042.instanceCount = 1346503165726910838L;
            Test0042.instanceCount = Test0042.instanceCount;
            for (i7 = 7; 1 < i7; i7--) {
                for (i9 = i5; i9 < 2; ++i9) {
                    iArr1[i5 - 1] += i4;
                    if (b) break;
                    Test0042.instanceCount += i9;
                    if (b) {
                        i10 *= i6;
                    } else {
                        Test0042.instanceCount &= i7;
                        b = b;
                        i8 = i7;
                        i8 /= (int) (Test0042.instanceCount | 1);
                    }
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i, byte by1) {

        int i1=3;
        int i2=87;
        int i3=123;
        int i11=15996;
        int i12=186;
        int[] iArr =new int[N];
        short s=-29173;
        boolean b1=true;
        byte[][] byArr =new byte[N][N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr, -9);
        FuzzerUtils.init(byArr, (byte)52);
        FuzzerUtils.init(dArr, -1.93125);

        i1 = 1;
        do {
            s += (short) (((i1 * i) + i1) - Test0042.fFld);
            for (i2 = 1; i2 < 9; ++i2) {
                iArr[i1] -= iMeth1(i);
                i11 = 1;
                while (++i11 < 2) {
                    Test0042.instanceCount += i11;
                    Test0042.instanceCount = (long) Test0042.dFld;
                }
                i12 = 1;
                while (++i12 < 2) {
                    i3 += i1;
                    byArr[i12 - 1] = byArr[i1 + 1];
                    if (b1) break;
                    s += (short) Test0042.instanceCount;
                    i3 = i3;
                    Test0042.fArrFld[i2 + 1] = 9;
                    dArr[i1 - 1][i1 - 1] *= i1;
                }
            }
        } while (++i1 < 174);
        long meth_res = i + by1 + i1 + s + i2 + i3 + i11 + i12 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static byte byMeth(byte by) {

        double d=66.109494;
        int i13=6, i14=-171, i15=-12063, i16=67, i17=99, i19=-33947, i20=-3;
        short s1=-5120;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.950F);

        fArr[(219 >>> 1) % N] = (iMeth(28517, by) - Test0042.fFld);
        for (d = 11; d < 254; d++) {
            for (i14 = 1; i14 < 7; i14++) {
                Test0042.instanceCount += (-29 + (i14 * i14));
                Test0042.lArrFld[i14] *= s1;
                for (i16 = i14; i16 < 2; ++i16) {
                    int i18=-14;
                    Test0042.instanceCount += i14;
                    i17 = (int)1.100647;
                    if (i15 != 0) {
                    }
                    i18 -= (int) Test0042.fFld;
                }
                for (i19 = 1; i19 < 2; i19++) {
                    i17 += (i19 * i17);
                    Test0042.lArrFld[i14 + 1] >>= -4;
                    Test0042.fFld -= 37765L;
                    i17 += i19;
                }
            }
        }
        long meth_res = by + Double.doubleToLongBits(d) + i13 + i14 + i15 + s1 + i16 + i17 + i19 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-11.684F;
        byte by2=80;
        int i21=11;
        int i22=-18971;
        int i23=-207;
        int i24=119;
        int i25=-63091;
        int i26=65;
        int i27=-60;
        int i28=7;
        int i29=-63415;
        int i30=-22208;
        int i31=159;
        int[][] iArr2 =new int[N][N];
        short s2=11813;
        boolean b2=true;

        FuzzerUtils.init(iArr2, -23234);

        f = (float) ((byMeth(by2) + Test0042.dFld) * i21);
        Test0042.instanceCount = -123;
        i22 = 1;
        while (++i22 < 388) {
            i21 ^= i22;
            Test0042.instanceCount <<= by2;
            Test0042.instanceCount = by2;
            for (i23 = 2; i23 < 65; ++i23) {
                Test0042.instanceCount = i23;
            }
            f *= i21;
            for (i25 = 4; i25 < 65; ++i25) {
                i24 += (int) Test0042.instanceCount;
                Test0042.instanceCount = (long) Test0042.fFld;
                i21 = (int) Test0042.instanceCount;
                i27 = 1;
                while (++i27 < 2) {
                    Test0042.fArrFld = FuzzerUtils.float1array(N, (float) 0.493F);
                    i21 += (((i27 * f) + Test0042.instanceCount) - Test0042.instanceCount);
                    Test0042.instanceCount *= by2;
                    i26 = 224;
                    i24 -= i25;
                    s2 += (short)i27;
                }
                Test0042.lArrFld[(i25 >>> 1) % N] = (long) Test0042.dFld;
                i24 = (int)-175L;
            }
            Test0042.instanceCount = i23;
            for (i28 = 3; i28 < 65; i28++) {
                Test0042.bFld = b2;
                Test0042.dFld = i29;
                for (i30 = 1; i30 < 2; i30++) {
                    iArr2[i30][i28 - 1] += -55788;
                    iArr2[i22 - 1][i22 + 1] = (int) Test0042.instanceCount;
                    i24 *= i21;
                }
            }
        }

        FuzzerUtils.out.println("f by2 i21 = " + Float.floatToIntBits(f) + "," + by2 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("s2 i28 i29 = " + s2 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("b2 i30 i31 = " + (b2 ? 1 : 0) + "," + i30 + "," + i31);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0042.instanceCount Test0042.fFld Test0042.dFld = " + Test0042.instanceCount + "," +
                Float.floatToIntBits(Test0042.fFld) + "," + Double.doubleToLongBits(Test0042.dFld));
        FuzzerUtils.out.println("Test0042.bFld Test0042.fArrFld Test0042.lArrFld = " + (Test0042.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0042.fArrFld)) + "," + FuzzerUtils.checkSum(Test0042.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0042 _instance = new Test0042();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
