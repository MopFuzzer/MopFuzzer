// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0135 {

    public static final int N = 400;

    public static long instanceCount=2797L;
    public static double dFld=7.116956;
    public int iFld=-7;
    public static float fFld=76.244F;
    public static float[][] fArrFld =new float[N][N];
    public static boolean[] bArrFld =new boolean[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0135.fArrFld, 50.606F);
        FuzzerUtils.init(Test0135.bArrFld, false);
        FuzzerUtils.init(Test0135.lArrFld, 10L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i6) {

        int i7=-3;
        int i8=9;
        int i9=3;
        int i10=-246;
        int[] iArr =new int[N];
        double d=-14.4813;
        double[] dArr =new double[N];
        float f1=1.54F;
        boolean b=false;
        short s=-24163;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 2);
        FuzzerUtils.init(lArr, -139L);
        FuzzerUtils.init(dArr, 1.72832);

        for (i7 = 7; i7 < 202; i7++) {
            i6 *= (int) Test0135.instanceCount;
            switch ((i7 % 10) + 90) {
            case 90:
                d += -43018;
                i6 = i8;
            case 91:
                f1 += i8;
                if (b) {
                    i8 = i7;
                }
            case 92:
                for (i9 = 8; i9 > 1; --i9) {
                    iArr[i7 - 1] -= i7;
                    i6 = i10;
                    lArr[i7] = -3672386037L;
                    s += (short)f1;
                    iArr[i9 - 1] &= i9;
                    i10 += i9;
                }
            case 93:
                iArr[i7 - 1] >>= i6;
                break;
            case 94:
                i8 = (int)f1;
                break;
            case 95:
                f1 += (float)d;
            case 96:
                dArr[i7] = d;
                break;
            case 97:
                Test0135.instanceCount += i7;
            case 98:
                Test0135.instanceCount = Test0135.instanceCount;
                break;
            case 99:
                lArr[i7] = Test0135.instanceCount;
                break;
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + (b ? 1 : 0) + i9 +
            i10 + s + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(int i4, int i5, float f) {

        int i11=-158;
        int i12=220;
        int i13=-5;
        int i14=5;
        int i15=-8;
        int[] iArr1 =new int[N];
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, 3651614893L);
        FuzzerUtils.init(iArr1, -54054);

        vMeth(195);
        i4 *= (int) Test0135.dFld;
        i11 = 1;
        while (++i11 < 134) {
            lArr1[i11][i11 + 1] += Test0135.instanceCount;
            Test0135.fArrFld[i11 + 1][i11] = -49079;
            for (i12 = 1; i12 < 12; ++i12) {
                i5 /= (int) (Test0135.instanceCount | 1);
                for (i14 = 1; i14 < 2; i14++) {
                    switch ((((i14 >>> 1) % 1) * 5) + 96) {
                    case 101:
                        switch ((((i14 >>> 1) % 1) * 5) + 98) {
                        case 99:
                            i15 *= -11;
                            i15 >>= (int) Test0135.instanceCount;
                            f = Test0135.instanceCount;
                            break;
                        default:
                            iArr1[i11 - 1] = i15;
                            Test0135.instanceCount += i4;
                        }
                        break;
                    default:
                        i4 += (i14 * i14);
                    }
                }
            }
        }
        long meth_res = i4 + i5 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(int i, int i1, int i2) {

        int i3=-51073;
        float f2=0.897F;

        i3 = -241;
        Test0135.instanceCount = iMeth(i1, i, f2);
        vSmallMeth_check_sum += i + i1 + i2 + i3 + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        int i16=1204;
        int i17=39510;
        int i18=-3;
        int i19=11;
        int i20=-53403;
        int i21=0;
        int i22=12;
        int i23=-42;
        int[] iArr2 =new int[N];
        boolean b1=false;
        double[] dArr1 =new double[N];

        FuzzerUtils.init(iArr2, 57522);
        FuzzerUtils.init(dArr1, 90.439);

        for (int smallinvoc=0; smallinvoc<976; smallinvoc++) vSmallMeth(iFld, iFld, iFld);
        i16 = 1;
        do {
            Test0135.bArrFld[i16] = b1;
            Test0135.fFld = (float) Test0135.dFld;
            i17 = 1;
            while (++i17 < 86) {
                Test0135.lArrFld[i17] = i16;
                iFld -= i16;
                iFld *= i16;
            }
            for (i18 = i16; i18 < 86; ++i18) {
                Test0135.lArrFld = Test0135.lArrFld;
                Test0135.fFld -= -7841L;
                iArr2 = iArr2;
                i19 -= (int) Test0135.instanceCount;
                i19 += (int)(-75L + (i18 * i18));
                i19 = i17;
                iFld += (((i18 * i17) + i19) - iFld);
                b1 = true;
                iArr2[i16 - 1] -= iFld;
                Test0135.instanceCount *= 53L;
            }
            i19 -= i18;
            switch (((i16 % 1) * 5) + 56) {
            case 57:
                if (b1) break;
                i19 += i16;
                iArr2[i16] = (int) Test0135.fFld;
                break;
            }
        } while (++i16 < 291);
        for (i20 = 3; i20 < 144; i20++) {
            iFld >>= i20;
        }
        for (i22 = 12; i22 < 335; ++i22) {
            i21 += -16714;
            Test0135.lArrFld[i22] = i19;
            dArr1[i22] += i22;
        }

        FuzzerUtils.out.println("i16 b1 i17 = " + i16 + "," + (b1 ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("iArr2 dArr1 = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0135.instanceCount Test0135.dFld iFld = " + Test0135.instanceCount + "," +
                Double.doubleToLongBits(Test0135.dFld) + "," + iFld);
        FuzzerUtils.out.println("Test0135.fFld Test0135.fArrFld Test0135.bArrFld = " + Float.floatToIntBits(Test0135.fFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0135.fArrFld)) + "," + FuzzerUtils.checkSum(Test0135.bArrFld));
        FuzzerUtils.out.println("Test0135.lArrFld = " + FuzzerUtils.checkSum(Test0135.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0135 _instance = new Test0135();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
