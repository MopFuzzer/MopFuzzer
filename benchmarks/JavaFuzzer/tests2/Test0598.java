// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0598 {

    public static final int N = 400;

    public static volatile long instanceCount=-7960L;
    public static boolean bFld=true;
    public static float fFld=1.604F;
    public static int iFld=-30;
    public static byte byFld=75;
    public static short[] sArrFld =new short[N];
    public static float[][] fArrFld =new float[N][N];
    public static int[] iArrFld =new int[N];
    public long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0598.sArrFld, (short) -17931);
        FuzzerUtils.init(Test0598.fArrFld, 43.534F);
        FuzzerUtils.init(Test0598.iArrFld, -11);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4) {

        int i5=7;
        int i6=4;
        int i7=-203;
        int i8=0;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 177);

        Test0598.instanceCount = -3731;
        i4 = (int) Test0598.instanceCount;
        for (i5 = 13; 296 > i5; ++i5) {
            i4 = i5;
            Test0598.instanceCount -= i5;
            for (i7 = 1; i7 < 6; ++i7) {
                i4 = i6;
                Test0598.fFld = i7;
                iArr1[i7 + 1] += i8;
                Test0598.instanceCount = Test0598.instanceCount;
                Test0598.fFld += Test0598.fFld;
                iArr1[i5 + 1] <<= (int) Test0598.instanceCount;
                i8 += (int)934869565L;
                iArr1[i5] = (int) Test0598.instanceCount;
            }
            i6 += i5;
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2) {

        double d1=105.49050, d2=-96.22385;
        int i3=-209;
        int i9=-31383;
        int[] iArr =new int[N];
        float f=4.368F;
        boolean[] bArr =new boolean[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, -12223);
        FuzzerUtils.init(sArr, (short)-29216);

        for (d1 = 8; d1 < 194; d1++) {
            if (Test0598.bFld = (bArr[(int) (d1)] = false)) break;
            Test0598.instanceCount += (++iArr[(int) (d1 + 1)]);
            vMeth1(i2);
            d2 += i2;
            f = 1;
            do {
                i3 += (int) (((f * i2) + Test0598.fFld) - i3);
                Test0598.sArrFld = sArr;
                iArr[(int)(f)] = (int)f;
                i2 = i3;
            } while (++f < 9);
            i9 = 1;
            do {
                iArr[i9 - 1] = i3;
                Test0598.instanceCount &= i9;
                i3 += (i9 | i9);
                iArr[i9 - 1] = i9;
            } while (++i9 < 9);
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d1) + i3 + Double.doubleToLongBits(d2) +
            Float.floatToIntBits(f) + i9 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth(long l, double d, int i1) {

        int i10=-253;
        int i11=58051;
        int i12=-20734;
        int i13=206;
        int i14=41369;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, 55438);

        i1 *= (++i1);
        vMeth(9);
        for (i10 = 127; i10 > 3; i10 -= 3) {
            for (i12 = 2; 37 > i12; i12++) {
                i11 <<= 9;
                i1 >>= i12;
                Test0598.fFld = 43.204F;
                i1 += i12;
                switch (((i10 % 3) * 5) + 36) {
                case 50:
                    Test0598.fFld -= Test0598.iFld;
                    break;
                case 48:
                    i11 = (int) Test0598.instanceCount;
                    i11 += i12;
                    try {
                        i14 = (iArr2[i12 + 1] / -1337640965);
                        i13 = (-11309 / Test0598.iFld);
                        iArr2[i12 + 1] = (iArr2[i10] % i14);
                    } catch (ArithmeticException a_e) {}
                    i14 = (int)d;
                    break;
                case 51:
                    Test0598.fArrFld = Test0598.fArrFld;
                    break;
                default:
                    iArr2[i12] = Test0598.iFld;
                }
            }
        }
        long meth_res = l + Double.doubleToLongBits(d) + i1 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-45474, i15=10, i16=-228, i18=-1, i19=0, i20=-59, i21=0, i22=12;
        double d3=-2.91761;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -148L);

        i >>= (i--);
        i |= iMeth(13L, d3, 148);
        for (i15 = 1; i15 < 340; ++i15) {
            Test0598.fFld *= Test0598.instanceCount;
        }
        for (int i17 : Test0598.iArrFld) {
            i18 = 63;
            while (--i18 > 0) {
                lArr[i18 - 1] = Test0598.iFld;
            }
            Test0598.iFld = i18;
            d3 -= i;
            for (i19 = 3; i19 < 63; ++i19) {
                Test0598.iArrFld[i19 - 1] = (int) Test0598.instanceCount;
                lArr = FuzzerUtils.long1array(N, (long)13L);
                i20 = (int)d3;
                Test0598.instanceCount >>>= i19;
                Test0598.fFld += i16;
                for (i21 = 2; i19 < i21; --i21) {
                    switch ((i19 % 2) + 97) {
                    case 97:
                        Test0598.iArrFld[i19] -= (int) Test0598.instanceCount;
                        Test0598.iArrFld[i19 + 1] = 40939;
                        Test0598.bFld = Test0598.bFld;
                        Test0598.fFld += 4;
                        break;
                    case 98:
                        Test0598.instanceCount >>= Test0598.instanceCount;
                        break;
                    default:
                        lArrFld = lArrFld;
                        Test0598.instanceCount <<= i17;
                        if (Test0598.bFld) break;
                        i20 -= 28659;
                    }
                    Test0598.byFld = (byte) -14;
                    i16 >>>= i21;
                    d3 = Test0598.instanceCount;
                    Test0598.iFld += (int) Test0598.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i d3 i15 = " + i + "," + Double.doubleToLongBits(d3) + "," + i15);
        FuzzerUtils.out.println("i16 i18 i19 = " + i16 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0598.instanceCount Test0598.bFld Test0598.fFld = " + Test0598.instanceCount + "," + (Test0598.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0598.fFld));
        FuzzerUtils.out.println("Test0598.iFld Test0598.byFld Test0598.sArrFld = " + Test0598.iFld + "," + Test0598.byFld + "," +
                FuzzerUtils.checkSum(Test0598.sArrFld));
        FuzzerUtils.out.println("Test0598.fArrFld Test0598.iArrFld lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0598.fArrFld)) + "," + FuzzerUtils.checkSum(Test0598.iArrFld) +
            "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0598 _instance = new Test0598();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
