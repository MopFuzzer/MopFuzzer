// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0353 {

    public static final int N = 400;

    public static long instanceCount=26L;
    public static int iFld=8;
    public static double dFld=-55.92389;
    public static boolean bFld=true;
    public static double[] dArrFld =new double[N];
    public static long[] lArrFld =new long[N];
    public volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0353.dArrFld, 2.108599);
        FuzzerUtils.init(Test0353.lArrFld, 39459L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(boolean b) {

        int i3=67, i4=-4, i5=2, i6=158;
        double d=2.115171;
        float f1=-16.328F;
        short s=-8484;
        byte by=99;

        Test0353.iFld = Test0353.iFld;
        for (i3 = 21; i3 < 343; ++i3) {
            Test0353.instanceCount += i3;
            i4 = (int) Test0353.instanceCount;
            i4 = i3;
            d = 1;
            do {
                for (i5 = 1; i5 < 1; ++i5) {
                    Test0353.dArrFld[(int) (d - 1)] = f1;
                    Test0353.iFld += (107 + (i5 * i5));
                    Test0353.instanceCount += (long) d;
                    Test0353.iFld = (int) Test0353.instanceCount;
                    i6 += i5;
                    Test0353.instanceCount += s;
                    Test0353.lArrFld[i5] &= Test0353.iFld;
                    Test0353.iFld = by;
                }
            } while (++d < 5);
        }
        long meth_res = (b ? 1 : 0) + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + Float.floatToIntBits(f1) + s +
            by;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, int i2) {

        boolean b1=true;
        boolean[] bArr =new boolean[N];
        int i7=-26374;
        int i8=-45622;
        int[] iArr =new int[N];
        byte by1=119;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 3418758385317512338L);
        FuzzerUtils.init(iArr, 1333);
        FuzzerUtils.init(bArr, true);

        lArr[(90 >>> 1) % N] = 8L;
        l = iMeth1(b1);
        i7 = 1;
        do {
            iArr[i7] += Test0353.iFld;
            Test0353.iFld -= (int) 170L;
            Test0353.dFld *= Test0353.dFld;
            i2 = i7;
            by1 >>= (byte)i2;
        } while (++i7 < 310);
        Test0353.iFld -= i2;
        i2 >>= i2;
        bArr[(i7 >>> 1) % N] = b1;
        i8 = 355;
        while (--i8 > 0) {
            Test0353.dArrFld[i8] *= Test0353.dFld;
            if (i7 != 0) {
            }
            Test0353.iFld -= Test0353.iFld;
        }
        long meth_res = l + i2 + (b1 ? 1 : 0) + i7 + by1 + i8 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        float f=2.773F;
        long l1=46334L, l2=13609L;
        int i9=-5815;
        int i10=-20802;
        int i11=1;
        int[][] iArr1 =new int[N][N];

        FuzzerUtils.init(iArr1, 53311);

        f = (((i1 - 3452) + (++i)) - iMeth(2400029100L, i));
        for (l1 = 4; l1 < 244; l1++) {
            f += i9;
            Test0353.iFld = (int) Test0353.instanceCount;
            for (i10 = (int)(l1); i10 < 7; i10 += 2) {
                l2 = 55;
                if (Test0353.bFld) break;
                iArr1 = FuzzerUtils.int2array(N, (int)176);
                iArr1 = iArr1;
            }
            Test0353.instanceCount += (l1 + l2);
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + l1 + i9 + i10 + i11 + l2 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        float f2=-27.174F, f3=-26.546F;
        int i12=-17996, i13=174, i14=35, i15=478, i16=-12, i17=0, i18=-14, i19=8932, i20=3;
        byte by2=-122;

        vMeth(Test0353.iFld, Test0353.iFld);
        Test0353.dFld = Test0353.iFld;
        Test0353.iFld = (int) -2L;
        f2 = f2;
        Test0353.iFld = Test0353.iFld;
        for (f3 = 190; 4 < f3; --f3) {
            i12 += Test0353.iFld;
            Test0353.iFld >>= Test0353.iFld;
            Test0353.iFld <<= Test0353.iFld;
            for (i13 = (int)(f3); 135 > i13; ++i13) {
                for (i15 = 1; i15 < 1; ++i15) {
                    Test0353.iFld += i15;
                    Test0353.dFld *= f2;
                    i14 += i15;
                    iArrFld[(int) (f3)] += (int) Test0353.instanceCount;
                }
                f2 *= Test0353.iFld;
            }
            iArrFld[(int)(f3)] -= i14;
            switch ((int)((f3 % 7) + 89)) {
            case 89:
                for (i17 = 1; i17 < 135; ++i17) {
                    Test0353.iFld = by2;
                    Test0353.instanceCount = i12;
                    switch ((i17 % 5) + 105) {
                    case 105:
                        by2 += (byte)i17;
                        i12 += i14;
                        i12 = i18;
                        for (i19 = (int)(f3); i19 < 2; ++i19) {
                            i20 -= i19;
                            i20 = (int)f2;
                            i14 -= i20;
                            i16 += (((i19 * Test0353.instanceCount) + i14) - i20);
                        }
                        break;
                    case 106:
                        Test0353.iFld = i13;
                        break;
                    case 107:
                        Test0353.instanceCount = Test0353.iFld;
                        break;
                    case 108:
                        i12 += i19;
                        break;
                    case 109:
                        iArrFld[i17] -= -208;
                    }
                }
                break;
            case 90:
                i18 *= 117;
                break;
            case 91:
                Test0353.iFld += (int) -19.28570;
                break;
            case 92:
                f2 = -11;
            case 93:
                Test0353.instanceCount += (long) ((long) f3 ^ i17);
                break;
            case 94:
                i12 += by2;
                break;
            case 95:
                i12 += (int) (((f3 * Test0353.iFld) + i13) - i18);
            }
        }

        FuzzerUtils.out.println("f2 f3 i12 = " + Float.floatToIntBits(f2) + "," + Float.floatToIntBits(f3) + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("by2 i19 i20 = " + by2 + "," + i19 + "," + i20);

        FuzzerUtils.out.println("Test0353.instanceCount Test0353.iFld Test0353.dFld = " + Test0353.instanceCount + "," + Test0353.iFld +
                "," + Double.doubleToLongBits(Test0353.dFld));
        FuzzerUtils.out.println("Test0353.bFld Test0353.dArrFld Test0353.lArrFld = " + (Test0353.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0353.dArrFld)) + "," + FuzzerUtils.checkSum(Test0353.lArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0353 _instance = new Test0353();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
