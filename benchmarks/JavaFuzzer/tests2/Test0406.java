// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:31 2023
public class Test0406 {

    public static final int N = 400;

    public static long instanceCount=-59966L;
    public static byte byFld=11;
    public static float fFld=-2.398F;
    public double dFld=-1.128925;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d) {

        int i2=40224;
        int[] iArr =new int[N];
        float f1=-101.811F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -57254L);
        FuzzerUtils.init(iArr, -512);

        lArr1[(i2 >>> 1) % N] >>= 11359L;
        iArr[(i2 >>> 1) % N] = i2;
        i2 *= (int) Test0406.instanceCount;
        iArr[(i2 >>> 1) % N] = -56889;
        f1 -= i2;
        vMeth2_check_sum += Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(byte by, float f) {

        int i1=-142;
        int i3=-13;
        int i4=-24275;
        int i5=-7605;
        int i6=-112;
        int i7=-5;
        int i8=-13;
        int[] iArr1 =new int[N];
        double d1=0.20489;
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -163L);
        FuzzerUtils.init(iArr1, 45728);

        Test0406.instanceCount = lArr[(i1 >>> 1) % N];
        vMeth2(d1);
        i1 = i1;
        for (i3 = 18; i3 < 378; ++i3) {
            int i9=-7;
            i1 *= (int)d1;
            i5 = 1;
            while ((i5 += 2) < 5) {
                i1 -= -13509;
                iArr1[i5 + 1] -= (int) Test0406.instanceCount;
                i1 += (((i5 * i1) + i1) - i5);
            }
            if (false) {
                switch ((i3 % 4) + 102) {
                case 102:
                    i6 = 5;
                    while (--i6 > 0) {
                        for (i7 = 1; i7 < 1; i7++) {
                            i1 += (int)1.55F;
                            iArr1[i6 + 1] = i6;
                        }
                    }
                    break;
                case 103:
                    Test0406.instanceCount += (((i3 * f) + f) - Test0406.instanceCount);
                    break;
                case 104:
                    i9 = i9;
                case 105:
                    i4 = i5;
                    break;
                default:
                    Test0406.instanceCount = 7;
                }
            } else if (b) {
                i8 = (int) Test0406.instanceCount;
            } else {
                by = (byte)-23120;
            }
        }
        vMeth1_check_sum += by + Float.floatToIntBits(f) + i1 + Double.doubleToLongBits(d1) + i3 + i4 + i5 + i6 + i7 +
            i8 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l, int i) {

        float f2=2.912F;
        double d2=1.50521;

        vMeth1(Test0406.byFld, f2);
        f2 = 118;
        l += (long)d2;
        if (false) {
        }
        vMeth_check_sum += l + i + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2);
    }

    public void mainTest(String[] strArr1) {

        int i10=-4, i11=75, i12=-44936, i13=9, i14=-16885, i15=10, i16=12, i17=-12, i18=-196, i19=229, i20=3, i21=-7;
        short s=30064;
        boolean b1=false;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 202L);

        vMeth(Test0406.instanceCount, i10);
        iArrFld[(i10 >>> 1) % N] >>>= i10;
        Test0406.instanceCount = (long) Test0406.fFld;
        for (i11 = 224; 8 < i11; i11--) {
            for (i13 = i11; 116 > i13; ++i13) {
                i14 = i13;
                i12 >>= i13;
                i14 += (i13 * i13);
                i10 += (int) Test0406.instanceCount;
            }
            for (i15 = 2; i15 < 116; ++i15) {
                for (i17 = 1; i17 < 2; ++i17) {
                    iArrFld[i11 - 1] >>= i18;
                    i14 += (((i17 * i15) + i12) - Test0406.instanceCount);
                    i10 <<= i18;
                    i10 = i15;
                    lArr2[i15 - 1] <<= Test0406.instanceCount;
                    i12 += (i17 ^ i14);
                    iArrFld[i15] = i16;
                    Test0406.instanceCount = -154;
                    lArr2[i17 - 1] = i17;
                    Test0406.instanceCount *= i15;
                }
                dFld *= i13;
                i12 -= i15;
                Test0406.fFld += (((i15 * i15) + i11) - i17);
                Test0406.instanceCount += i19;
                Test0406.instanceCount *= s;
            }
            for (i20 = i11; i20 < 116; i20++) {
                i10 -= i19;
                if (b1) break;
                i14 -= (int)dFld;
            }
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 s i20 = " + i19 + "," + s + "," + i20);
        FuzzerUtils.out.println("i21 b1 lArr2 = " + i21 + "," + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0406.instanceCount Test0406.byFld Test0406.fFld = " + Test0406.instanceCount + "," + Test0406.byFld +
                "," + Float.floatToIntBits(Test0406.fFld));
        FuzzerUtils.out.println("dFld iArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0406 _instance = new Test0406();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
