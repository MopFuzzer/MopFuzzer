// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0058 {

    public static final int N = 400;

    public static long instanceCount=41720L;
    public static float fFld=63.1005F;
    public static boolean bFld=false;
    public double[] dArrFld =new double[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0058.fArrFld, -67.959F);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1, long l, int i3) {

        int i4=11;
        int i5=-55767;
        int i6=-14;
        int i7=11;
        int i8=-13;
        int i9=-11;
        int[] iArr =new int[N];
        boolean b=false;
        double d1=45.83489;

        FuzzerUtils.init(iArr, -8);

        for (i4 = 1; i4 < 294; ++i4) {
            if (b) {
                iArr[i4] += i4;
                try {
                    iArr[i4 + 1] = (15102 / i4);
                    i5 = (-48739 / i5);
                    i3 = (i3 % i3);
                } catch (ArithmeticException a_e) {}
            } else if (b) {
                try {
                    iArr[i4 + 1] = (iArr[i4] / i5);
                    i5 = (i4 / i5);
                    iArr[i4] = (i4 % i5);
                } catch (ArithmeticException a_e) {}
                i3 -= i4;
                i3 <<= i4;
            } else {
                b = b;
                for (i6 = 1; i6 < 6; ++i6) {
                    i3 -= i3;
                    i5 += i3;
                    if (b) {
                        for (i8 = 1; i8 < 2; ++i8) {
                            d1 *= i9;
                            b = b;
                        }
                    } else if (false) {
                        i3 += (i6 * i6);
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i3 + i4 + i5 + (b ? 1 : 0) + i6 + i7 + i8 + i9 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(short s1, int i2) {

        int i10=-52425, i11=13192;
        byte by1=107;
        float f2=2.254F;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(sArr, (short)9165);

        i2 -= iMeth(Test0058.fFld, Test0058.instanceCount, i2);
        Test0058.fFld += i2;
        i2 = (int) Test0058.instanceCount;
        for (i10 = 3; i10 < 320; ++i10) {
            Test0058.fArrFld[i10] -= 1.876F;
            by1 += (byte)(i10 * i2);
            Test0058.instanceCount += (i10 * i10);
            sArr[i10 + 1][i10] *= (short)i11;
            f2 = 1;
            do {
                Test0058.instanceCount *= i2;
                Test0058.instanceCount %= (i11 | 1);
                i2 += (int)f2;
                i11 <<= (int) Test0058.instanceCount;
                i2 <<= (int) Test0058.instanceCount;
                Test0058.bFld = true;
            } while (++f2 < 5);
        }
        long meth_res = s1 + i2 + i10 + i11 + by1 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(sArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(short s, int i1) {

        float f=57.601F;
        int i12=13, i13=-223, i14=-23645, i15=28570, i16=-31, i17=33;
        byte by2=25;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 8L);

        f = (Test0058.instanceCount % (lMeth(s, i1) | 1));
        i1 = 78;
        for (i12 = 8; i12 < 195; i12++) {
            switch ((i12 % 2) + 22) {
            case 22:
                i1 = (int) Test0058.instanceCount;
                for (i14 = 9; i14 > 1; --i14) {
                    i15 = i15;
                    if (Test0058.bFld) continue;
                    for (i16 = 1; 2 > i16; i16++) {
                        i15 -= i13;
                        i17 ^= 31073;
                        by2 <<= (byte)2;
                        Test0058.instanceCount -= i13;
                        Test0058.instanceCount = i13;
                        lArr[i12] = i1;
                    }
                }
                break;
            case 23:
            default:
                f -= Test0058.instanceCount;
            }
        }
        vMeth_check_sum += s + i1 + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + i16 + i17 + by2 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-23121;
        int i18=13;
        int i19=58;
        int i20=-14;
        int i21=54203;
        int[] iArr1 =new int[N];
        short s2=5917;
        long l1=-7L;

        FuzzerUtils.init(iArr1, 50432);

        for (double d : dArrFld) {
            byte by=-32;
            i = (int) (((Test0058.instanceCount + i) + (i * Test0058.instanceCount)) + ((i--) | (++by)));
            i <<= i;
            Test0058.instanceCount = 181;
            vMeth(s2, i);
            i18 = 1;
            do {
                l1 = 1;
                do {
                    i = (int)-6979150899424160937L;
                    i += (int)(-451650894L + (l1 * l1));
                    by += (byte)i18;
                    i += (int)(((l1 * i) + i18) - i);
                    i <<= (int)l1;
                    Test0058.instanceCount += l1;
                    iArr1[i18] = i18;
                    s2 -= (short)i18;
                    if (true) continue;
                } while ((l1 -= 2) > 0);
                Test0058.fArrFld[i18 + 1] = i18;
                i *= (int) Test0058.fFld;
                Test0058.fArrFld = FuzzerUtils.float1array(N, (float) 0.689F);
                Test0058.fFld = i;
                i = i;
                i += (int)l1;
            } while (++i18 < 63);
            i = (int)d;
        }
        for (float f3 : Test0058.fArrFld) {
            i = i19;
            i19 = i;
            i20 = 63;
            do {
                i21 = 1;
                do {
                    Test0058.fArrFld[i20 - 1] += i18;
                    i = i18;
                } while (++i21 < 1);
            } while (--i20 > 0);
        }

        FuzzerUtils.out.println("i s2 i18 = " + i + "," + s2 + "," + i18);
        FuzzerUtils.out.println("l1 i19 i20 = " + l1 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 iArr1 = " + i21 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0058.instanceCount Test0058.fFld Test0058.bFld = " + Test0058.instanceCount + "," +
                Float.floatToIntBits(Test0058.fFld) + "," + (Test0058.bFld ? 1 : 0));
        FuzzerUtils.out.println("dArrFld Test0058.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0058.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0058 _instance = new Test0058();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
