// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0480 {

    public static final int N = 400;

    public static long instanceCount=-16206L;
    public static volatile double dFld=-1.122674;
    public static int iFld=10714;
    public static short sFld=-18148;
    public int iFld1=-13;
    public long lFld=-23498L;
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0480.fArrFld, 1.830F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l) {

        int i7=-25;
        int i8=9;
        int i9=-189;
        int i10=-14;
        int i11=7;
        int i12=78;
        int[] iArr1 =new int[N];
        long l1=7060L;
        float f=-1.199F;
        byte by=-52;

        FuzzerUtils.init(iArr1, 2125);

        for (i7 = 8; i7 < 146; ++i7) {
            for (l1 = 1; l1 < 11; l1++) {
                iArr1[(int)(l1)] += (int)l1;
                for (i10 = (int)(l1); 2 > i10; i10++) {
                    f -= -79;
                    i11 = (int)124.360F;
                    iArr1[i10 - 1] -= Test0480.iFld;
                    i9 += (i10 | by);
                    i9 |= -80;
                }
                switch ((i7 % 10) + 11) {
                case 11:
                    Test0480.instanceCount += (((l1 * i9) + Test0480.instanceCount) - i9);
                    break;
                case 12:
                    i12 = 2;
                    while (--i12 > 0) {
                        f -= i11;
                    }
                    l *= 65319;
                    break;
                case 13:
                    l += (l1 + i10);
                    break;
                case 14:
                    i11 = i11;
                    break;
                case 15:
                    iArr1[i7] += (int)-14L;
                case 16:
                case 17:
                case 18:
                    Test0480.fArrFld = Test0480.fArrFld;
                    break;
                case 19:
                    i8 += (int) (l1 | Test0480.iFld);
                    break;
                case 20:
                }
            }
        }
        vMeth2_check_sum += l + i7 + i8 + l1 + i9 + i10 + i11 + Float.floatToIntBits(f) + by + i12 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i5, int i6) {

        float f1=-2.670F;
        int i13=13, i14=-60770, i15=5, i16=-30620, i17=-13;
        short[][] sArr =new short[N][N];
        double[] dArr =new double[N];
        long[] lArr =new long[N], lArr1 =new long[N];

        FuzzerUtils.init(sArr, (short)-14991);
        FuzzerUtils.init(dArr, 0.130952);
        FuzzerUtils.init(lArr, -5L);
        FuzzerUtils.init(lArr1, -4053939805L);

        switch ((((Test0480.iFld + Test0480.iFld) >>> 1) % 4) + 77) {
        case 77:
            i5 -= -44517;
            vMeth2(Test0480.instanceCount);
            i5 = Test0480.iFld;
            Test0480.iFld *= Test0480.sFld;
            break;
        case 78:
            Test0480.instanceCount *= (long) f1;
            i13 = 1;
            while (++i13 < 311) {
                for (i14 = 1; i14 < 5; ++i14) {
                    i6 = (int)-105.39987;
                    Test0480.instanceCount = Test0480.instanceCount;
                    sArr = sArr;
                    for (i16 = 1; 2 > i16; i16++) {
                        i5 >>>= (int) Test0480.instanceCount;
                        Test0480.instanceCount += i16;
                        i5 += (-14 + (i16 * i16));
                    }
                }
            }
            break;
        case 79:
            dArr[(i17 >>> 1) % N] *= i13;
            break;
        case 80:
            f1 -= Test0480.iFld;
            break;
        default:
            lArr = lArr1;
        }
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth() {

        int i3=-10, i4=-139, i18=-133, i19=-6, i20=32114, i21=-28562;
        float f2=77.679F;

        for (i3 = 20; i3 < 373; ++i3) {
            vMeth1(i3, i4);
            iFld1 += Test0480.iFld;
            Test0480.iFld = iFld1;
            iFld1 ^= Test0480.iFld;
            for (i18 = 1; i18 < 5; i18++) {
                f2 += (i18 * i18);
                switch ((i3 % 2) + 27) {
                case 27:
                case 28:
                    for (i20 = 2; 1 < i20; i20 -= 2) {
                        i4 *= i4;
                        Test0480.instanceCount *= -169;
                    }
                    i4 += (((i18 * Test0480.iFld) + Test0480.instanceCount) - i21);
                    break;
                default:
                    i4 += i18;
                    Test0480.dFld -= i3;
                    i21 = -254;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i18 + i19 + Float.floatToIntBits(f2) + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        int i=1;
        int i1=1;
        int i2=-51306;
        int i22=4;
        int i23=8;
        int i24=242;
        int i25=219;
        int i26=-180;
        int i27=-1;
        int i28=13;
        int i29=87;
        int[][] iArr =new
                    int[N][N];
        short s=-2362;
        double d=-61.14559;
        boolean b=false;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr, 98);
        FuzzerUtils.init(lArr2, 0L);

        iArr[(i >>> 1) % N][(i >>> 1) % N] = (int) (((Test0480.dFld - i) + (s + 2.621F)) - (Test0480.instanceCount++));
        Test0480.iFld <<= (int) (--Test0480.instanceCount);
        for (i1 = 2; i1 < 348; i1++) {
            vMeth();
            i += (i1 * i1);
            i22 = 1;
            do {
                iFld1 += i22;
                iFld1 += (i22 ^ i23);
                iArr[i22] = iArr[i1 + 1];
                for (d = i1; 1 > d; d++) {
                    iArr[i1 - 1][i22 - 1] = (int) Test0480.instanceCount;
                }
                iArr[i1 + 1][i22 - 1] *= i24;
                if (b) continue;
            } while (++i22 < 73);
            i2 -= (int) Test0480.instanceCount;
            for (i25 = 1; 73 > i25; i25++) {
                if (false) continue;
                i27 = 1;
                do {
                    lArr2[i27 - 1] = Test0480.instanceCount;
                    Test0480.iFld += i27;
                    try {
                        i24 = (i23 % i22);
                        iArr[i27 + 1][i1 + 1] = (i26 % -151);
                        Test0480.iFld = (i24 % -220);
                    } catch (ArithmeticException a_e) {}
                } while (++i27 < 2);
                for (i28 = 1; i28 < 2; i28++) {
                    i24 *= 43332;
                    b = b;
                    Test0480.sFld -= (short) d;
                    Test0480.instanceCount >>= -7592;
                    lFld += (i28 + iFld1);
                    iFld1 = 8;
                    lArr2[i28] += 6;
                    lArr2[i25] = i23;
                    iArr[i28 + 1] = iArr[i25];
                }
            }
        }

        FuzzerUtils.out.println("i s i1 = " + i + "," + s + "," + i1);
        FuzzerUtils.out.println("i2 i22 i23 = " + i2 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d i24 b = " + Double.doubleToLongBits(d) + "," + i24 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 iArr = " + i28 + "," + i29 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0480.instanceCount Test0480.dFld Test0480.iFld = " + Test0480.instanceCount + "," +
                Double.doubleToLongBits(Test0480.dFld) + "," + Test0480.iFld);
        FuzzerUtils.out.println("Test0480.sFld iFld1 lFld = " + Test0480.sFld + "," + iFld1 + "," + lFld);
        FuzzerUtils.out.println("Test0480.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0480.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0480 _instance = new Test0480();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
