// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0288 {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static float fFld=0.1017F;
    public static byte byFld=90;
    public long lFld=-3384725033L;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0288.iArrFld, -13);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i5, short s) {

        int i6=-16;
        int i7=-12;
        int i8=47558;
        int i9=3;
        int i10=8;
        int i11=66;
        int[] iArr =new int[N];
        float f=1.640F;

        FuzzerUtils.init(iArr, 4);

        i5 = 15764;
        iArr[(i5 >>> 1) % N] = i5;
        for (i6 = 12; i6 < 301; ++i6) {
            for (i8 = i6; i8 < 6; ++i8) {
                boolean b=false;
                if (b) break;
                i5 += i8;
                i7 -= i5;
                for (i10 = 1; i10 > 1; --i10) {
                    i11 = i6;
                    f /= (i8 | 1);
                    i5 += i9;
                    iArr[i10 + 1] = (int)-8101L;
                    i5 += (i10 - i11);
                    l1 += i10;
                }
                try {
                    i7 = (i7 % i5);
                    i9 = (i5 % i6);
                    i9 = (iArr[i8] / i6);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth_check_sum += l1 + i5 + s + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth1(long l, int i2) {

        byte by=122;
        byte[] byArr =new byte[N];
        double d2=-99.14287;
        int i3=50665;
        int i4=14;
        int i12=-204;
        int i13=33;
        int i14=6;
        int[] iArr1 =new int[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -23788L);
        FuzzerUtils.init(iArr1, -141);
        FuzzerUtils.init(byArr, (byte)113);

        i2 = (int)(((by + i2) + (d2 + i2)) + ((l + l) * (-84 - Math.abs(i2))));
        for (i3 = 2; 133 > i3; ++i3) {
            short s1=-18144;
            l += (i3 * i4);
            vMeth(2284959957L, i2, s1);
            for (i12 = 1; i12 < 12; i12++) {
                Test0288.fFld = i3;
                switch (((i12 % 6) * 5) + 90) {
                case 96:
                    i14 = 1;
                    do {
                        lArr1 = FuzzerUtils.long1array(N, (long)-224L);
                        switch ((i14 % 1) + 33) {
                        case 33:
                            l *= l;
                            break;
                        }
                        i13 = (int)d2;
                        try {
                            i2 = (i3 % i14);
                            i4 = (293 % i13);
                            iArr1[i12 - 1] = (i2 % -58539);
                        } catch (ArithmeticException a_e) {}
                        byArr[i3 - 1] = by;
                        i4 = i13;
                    } while (++i14 < 2);
                    break;
                case 97:
                    i2 = (int) Test0288.instanceCount;
                    break;
                case 119:
                    Test0288.fFld -= i14;
                    break;
                case 98:
                    i13 = s1;
                    break;
                case 102:
                    i13 = (int) Test0288.instanceCount;
                    break;
                case 94:
                    i2 -= (int) Test0288.instanceCount;
                    break;
                default:
                    l *= (long)d2;
                }
            }
        }
        long meth_res = l + i2 + by + Double.doubleToLongBits(d2) + i3 + i4 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(double d1) {

        int i=0, i15=0, i16=-164, i17=-5, i18=-10275, i19=-30852, i20=-110, i21=10;
        long l2=77074987L;

        i = 1;
        while (++i < 175) {
            int i1=-15;
            i1 += (int) (iMeth1(Test0288.instanceCount, i) - Test0288.instanceCount);
            Test0288.iArrFld[i - 1] *= i1;
            i1 = -15266;
            i1 |= i;
        }
        for (l2 = 8; l2 < 393; l2++) {
            i15 += (int)l2;
        }
        Test0288.byFld *= (byte) i;
        for (i16 = 389; i16 > 10; --i16) {
            for (i18 = 1; i18 < 4; i18++) {
                Test0288.byFld -= (byte) l2;
                for (i20 = 2; i20 > i16; --i20) {
                    d1 -= i19;
                    Test0288.instanceCount = i18;
                    Test0288.byFld *= (byte) i;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i + l2 + i15 + i16 + i17 + i18 + i19 + i20 + i21;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.9791;
        double[] dArr =new double[N];
        int i22=-35211, i23=-44, i24=-7, i25=133, i26=-1, i27=232, i28=-65, i29=-108, i30=-8;
        short s2=-30169;
        short[] sArr =new short[N];
        long l3=-41850L;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, -9L);
        FuzzerUtils.init(dArr, 18.19330);
        FuzzerUtils.init(sArr, (short)24268);

        d = 1;
        do {
            lArr[(int)(d)][(int)(d + 1)] += iMeth(d);
            Test0288.instanceCount += (long) d;
            Test0288.iArrFld[(int) (d - 1)] = i22;
            s2 ^= (short)i22;
            Test0288.instanceCount += (-3 + (d * d));
        } while ((d += 2) < 164);
        for (i23 = 1; i23 < 138; i23++) {
            for (i25 = 3; 183 > i25; ++i25) {
                for (l3 = 2; l3 > 1; l3--) {
                    i27 = i23;
                    i22 -= (int)lFld;
                    lFld >>= -173;
                    i26 += (int)(l3 * l3);
                    lArr[i25 + 1][(int) (l3 - 1)] += Test0288.byFld;
                    dArr[i25 - 1] *= i23;
                    Test0288.iArrFld[i23 - 1] = (int) Test0288.fFld;
                    i22 += (int) (((l3 * Test0288.fFld) + i27) - l3);
                    i26 += (int)l3;
                    lFld = i25;
                }
                for (i28 = 1; i28 < 2; ++i28) {
                    i24 >>= (int)l3;
                    i22 &= (int) Test0288.instanceCount;
                    i26 *= i24;
                    Test0288.fFld = i28;
                    i24 = 141;
                    i29 = i27;
                }
                i30 = 1;
                while (++i30 < 2) {
                    long l4=144L;
                    i24 >>= i25;
                    i27 -= (int) Test0288.instanceCount;
                    sArr[i23] = (short)l4;
                }
            }
        }

        FuzzerUtils.out.println("d i22 s2 = " + Double.doubleToLongBits(d) + "," + i22 + "," + s2);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 l3 i27 = " + i26 + "," + l3 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("lArr dArr sArr = " + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0288.instanceCount Test0288.fFld Test0288.byFld = " + Test0288.instanceCount + "," +
                Float.floatToIntBits(Test0288.fFld) + "," + Test0288.byFld);
        FuzzerUtils.out.println("lFld Test0288.iArrFld = " + lFld + "," + FuzzerUtils.checkSum(Test0288.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0288 _instance = new Test0288();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
