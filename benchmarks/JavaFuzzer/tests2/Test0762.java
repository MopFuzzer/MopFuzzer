// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0762 {

    public static final int N = 400;

    public static long instanceCount=-4023311734L;
    public volatile double dFld=2.83623;
    public static boolean bFld=false;
    public static short sFld=32752;
    public static float fFld=2.383F;
    public byte byFld=89;
    public static long[][] lArrFld =new long[N][N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0762.lArrFld, -3293532306152347920L);
        FuzzerUtils.init(Test0762.byArrFld, (byte) -17);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static void vSmallMeth(double d) {

        int i5=15582;

        i5 *= (int) Test0762.instanceCount;
        vSmallMeth_check_sum += Double.doubleToLongBits(d) + i5;
    }

    public static double dMeth(int i11) {

        float f=2.287F;
        float[] fArr =new float[N];
        double d1=0.82095;
        int i12=43, i13=-18547, i14=10, i15=-8, i16=9, i17=6;
        boolean b=false;
        byte by1=76;

        FuzzerUtils.init(fArr, -2.47F);

        i11 = (int)f;
        fArr[(i11 >>> 1) % N] -= (float)d1;
        if (b) {
            for (i12 = 11; i12 < 270; ++i12) {
                switch (((i12 % 8) * 5) + 69) {
                case 102:
                    b = b;
                    i13 += (i12 + f);
                    i11 += (((i12 * i13) + i13) - i12);
                    for (i14 = 1; i14 < 6; ++i14) {
                        for (i16 = 1; i16 < 2; i16++) {
                            if (b) continue;
                            i15 += (((i16 * i17) + by1) - Test0762.instanceCount);
                            i15 <<= i11;
                            Test0762.lArrFld[i12 + 1][i16] *= i11;
                            i17 -= 8;
                        }
                    }
                    break;
                case 97:
                case 109:
                    i17 -= (int) Test0762.instanceCount;
                case 95:
                    b = b;
                case 100:
                    d1 += 9640;
                    break;
                case 90:
                    i17 *= (int)d1;
                    break;
                case 75:
                    i11 = i12;
                    break;
                case 85:
                    i17 = i14;
                    break;
                }
            }
        } else {
            i13 = (int)d1;
        }
        long meth_res = i11 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i12 + i13 + (b ? 1 : 0) + i14 +
            i15 + i16 + i17 + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth() {

        int i9=-202;
        int i10=-6341;
        int i18=-254;
        int i19=41609;
        int i20=2;
        int i21=7938;
        int i22=68;
        int i23=-11;
        int[][] iArr2 =new int[N][N];
        short s=-4074;
        double d2=0.92807;

        FuzzerUtils.init(iArr2, 37373);

        for (i9 = 3; 216 > i9; i9++) {
            boolean b1=true;
            if (b1) {
                Test0762.instanceCount -= (i10 = (int) ((-113L - (i9 - i9)) + -14));
                i10 = (int)((dMeth(i9) * i10) % (s | 1));
            }
        }
        for (i18 = 157; i18 > 2; --i18) {
            for (i20 = 1; i20 < 10; ++i20) {
                float f1=2.281F;
                for (i22 = 2; i22 > 1; i22--) {
                    Test0762.instanceCount = i19;
                    if (Test0762.bFld) break;
                    i10 += (i22 * i22);
                    d2 *= i21;
                    i10 = (int) Test0762.instanceCount;
                }
                iArr2[i20][i20] = 28131;
                f1 += i20;
                if (Test0762.bFld) break;
            }
        }
        vMeth_check_sum += i9 + i10 + s + i18 + i19 + i20 + i21 + i22 + i23 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static byte byMeth(int i6) {

        int i7=18;
        int i8=0;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 230);

        iArr1 = (iArr1 = (iArr1 = iArr1));
        for (i7 = 9; i7 < 168; ++i7) {
            i6 = (i6++);
            vMeth();
            Test0762.instanceCount = 56754;
            i8 <<= i6;
            i6 += i7;
        }
        long meth_res = i6 + i7 + i8 + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=7;
        int i1=0;
        int i2=3;
        int i3=227;
        int i4=-225;
        int i24=167;
        int i25=62451;
        int i26=76;
        int i27=14723;
        int i28=0;
        int[] iArr =new int[N];
        byte by=-117;

        FuzzerUtils.init(iArr, -60115);

        for (i = 181; i > 2; --i) {
            by = (byte)(i1--);
            i1 = (iArr[i]++);
            i2 = 140;
            while (--i2 > 0) {
                for (i3 = 1; i3 < 1; ++i3) {
                    Test0762.instanceCount = i1;
                }
                Test0762.instanceCount += (((i2 * i1) + i1) - Test0762.instanceCount);
                for (int smallinvoc=0; smallinvoc<1; smallinvoc++) vSmallMeth(Math.sqrt(dFld += (i4 &= i1)));
                i1 = (int)((-(i2 - -2.735F)) - byMeth(i1));
            }
            switch ((((i >>> 1) % 10) * 5) + 118) {
            case 132:
                for (i24 = 2; i24 < 140; i24++) {
                    i26 = 1;
                    do {
                        if (Test0762.bFld) continue;
                        i1 = (int) Test0762.instanceCount;
                        Test0762.instanceCount = (long) dFld;
                    } while (++i26 < 2);
                    Test0762.sFld += (short) (((i24 * Test0762.fFld) + i1) - byFld);
                    for (i27 = 1; i27 < 2; i27++) {
                        Test0762.instanceCount += (long) Test0762.fFld;
                        switch (((i % 8) * 5) + 6) {
                        case 31:
                            i4 += 11;
                            i1 += (10 + (i27 * i27));
                            Test0762.instanceCount += (i27 * i);
                            i1 <<= i4;
                            break;
                        case 33:
                            Test0762.bFld = Test0762.bFld;
                            Test0762.fFld += (((i27 * Test0762.fFld) + i26) - i);
                            Test0762.instanceCount -= i4;
                            i25 >>= i26;
                            break;
                        case 26:
                            i25 >>= i25;
                            Test0762.lArrFld[i24 - 1][i24 + 1] >>= i1;
                            i1 += 21279;
                            break;
                        case 25:
                        case 27:
                            i4 = i;
                            break;
                        case 15:
                            i28 += (-6 + (i27 * i27));
                            break;
                        case 30:
                            i4 |= i28;
                            break;
                        case 10:
                            Test0762.fFld = (float) dFld;
                        default:
                            Test0762.byArrFld[i27] <<= (byte) i25;
                        }
                    }
                }
                break;
            case 161:
                Test0762.instanceCount += (i * i);
                break;
            case 165:
                i1 /= (int)(i1 | 1);
                break;
            case 133:
                i28 = i27;
                break;
            case 130:
                i25 += (((i * Test0762.sFld) + i26) - i28);
                break;
            case 156:
            case 134:
                Test0762.lArrFld[i][i - 1] = i;
                break;
            case 146:
                i4 += i27;
                break;
            case 151:
                iArr[i] = byFld;
                break;
            case 122:
                Test0762.bFld = Test0762.bFld;
                break;
            default:
                if (Test0762.bFld) break;
            }
        }

        FuzzerUtils.out.println("i i1 by = " + i + "," + i1 + "," + by);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0762.instanceCount dFld Test0762.bFld = " + Test0762.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + (Test0762.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0762.sFld Test0762.fFld byFld = " + Test0762.sFld + "," + Float.floatToIntBits(Test0762.fFld) +
            "," + byFld);
        FuzzerUtils.out.println("Test0762.lArrFld Test0762.byArrFld = " + FuzzerUtils.checkSum(Test0762.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0762.byArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0762 _instance = new Test0762();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
