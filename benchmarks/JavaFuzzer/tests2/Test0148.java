// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0148 {

    public static final int N = 400;

    public static volatile long instanceCount=-2094601915957960120L;
    public static float fFld=99.992F;
    public static volatile boolean bFld=false;
    public static byte byFld=113;
    public double dFld=-93.55441;
    public int[] iArrFld =new int[N];
    public static int[][] iArrFld1 =new int[N][N];
    public static volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0148.iArrFld1, -2);
        FuzzerUtils.init(Test0148.dArrFld, 41.97030);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        int i8=46030, i9=-51233;
        short s=-21222;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.947F);

        for (i8 = 11; 273 > i8; ++i8) {
            Test0148.instanceCount -= Test0148.instanceCount;
            i9 -= i8;
            i9 += i8;
            i9 *= i8;
            if (i8 != 0) {
            }
            i9 <<= (int)-3638651576L;
            s &= (short)-12709;
            switch ((i8 % 10) + 113) {
            case 113:
                i9 += (((i8 * i8) + Test0148.instanceCount) - i9);
            case 114:
                if (Test0148.bFld) break;
            case 115:
                Test0148.bFld = Test0148.bFld;
                i9 &= 46906;
                i9 += (((i8 * Test0148.fFld) + Test0148.byFld) - i9);
                i9 = Test0148.byFld;
            case 116:
                i9 = Test0148.byFld;
                break;
            case 117:
                Test0148.fFld = i8;
                break;
            case 118:
                i9 -= i9;
                break;
            case 119:
                i9 += (i8 + i8);
                break;
            case 120:
                fArr = FuzzerUtils.float1array(N, (float)2.780F);
                break;
            case 121:
                i9 = i9;
                break;
            case 122:
                Test0148.fFld += Test0148.instanceCount;
                break;
            }
        }
        long meth_res = i8 + i9 + s + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static double dMeth(int i4, int i5) {

        int i6=-122, i7=0, i10=11, i11=76, i12=-74, i13=-154;
        short s1=32697;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 2678265437L);

        Test0148.fFld *= (--lArr[(i4 >>> 1) % N]);
        if (Test0148.bFld) {
            for (i6 = 11; i6 < 243; ++i6) {
                double d=-50.78779;
                Test0148.instanceCount += i6;
                Test0148.iArrFld1[i6 - 1][i6] >>= (int) ((fMeth() + i4) - Test0148.instanceCount);
                Test0148.instanceCount *= (long) -93.512F;
                for (i10 = i6; i10 < 7; i10++) {
                    for (i12 = i10; i12 < 1; ++i12) {
                        i13 = i4;
                    }
                    i5 = i5;
                    s1 *= (short)-12233;
                }
                Test0148.iArrFld1[i6 + 1] = Test0148.iArrFld1[i6];
                d *= i10;
                s1 += (short)(-1L + (i6 * i6));
                i13 = (int) Test0148.instanceCount;
            }
        } else {
            Test0148.iArrFld1[(i10 >>> 1) % N][(i7 >>> 1) % N] = i4;
        }
        long meth_res = i4 + i5 + i6 + i7 + i10 + i11 + i12 + i13 + s1 + FuzzerUtils.checkSum(lArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(float f1, int i2) {

        int i3=-60507;

        i3 = 1;
        do {
            i2 >>= (--i2);
            Test0148.instanceCount += (14 + (i3 * i3));
        } while ((i3 += 2) < 169);
        switch ((((((int)(-215 - (213 - dMeth(i3, i2)))) >>> 1) % 2) * 5) + 113) {
        case 121:
            i2 |= (int) Test0148.instanceCount;
            break;
        case 119:
            i2 <<= (int) Test0148.instanceCount;
            i2 |= i2;
            Test0148.byFld *= (byte) 31264;
            break;
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i2 + i3;
    }

    public void mainTest(String[] strArr1) {

        int i=-35, i1=-59050, i14=-236, i15=251, i16=330, i17=-227, i18=4241, i19=0, i20=54767, i21=31;
        float f=-109.430F;
        short s2=-25155;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -33284L);

        i = 1;
        while (++i < 396) {
            i1 += (((i * i1) + i1) - i);
            iArrFld[i] = (int) (((Test0148.instanceCount - i) - (-8 - (i1 * f))) * ((i1++) + (Test0148.instanceCount / (i1 |
                1))));
            i1 -= ((iArrFld[i - 1]++) * i);
            vMeth(41.68F, i);
            dFld = i1;
            Test0148.fFld = i;
            i14 = 64;
            while (--i14 > 0) {
                f += Test0148.fFld;
                i1 = (int)dFld;
                Test0148.iArrFld1[i14 + 1] = Test0148.iArrFld1[i + 1];
                Test0148.instanceCount <<= i;
                for (i15 = 1; i15 < 1; ++i15) {
                    i1 += i;
                    i1 += i15;
                    lArr1[i] >>>= i14;
                }
                i16 = -130;
                i16 = -242;
            }
            i1 = i1;
        }
        i1 *= (int) Test0148.instanceCount;
        Test0148.dArrFld[(i15 >>> 1) % N] = -1090340162L;
        for (i17 = 9; i17 < 382; ++i17) {
            i1 = 22511;
            i19 = 1;
            do {
                for (i20 = 1; i20 < 1; ++i20) {
                    s2 = (short)7;
                    i16 ^= Test0148.byFld;
                    Test0148.iArrFld1[i17 - 1][i19 + 1] = (int) Test0148.instanceCount;
                    i21 += (((i20 * i) + i20) - Test0148.byFld);
                    i18 += i18;
                }
            } while (++i19 < 68);
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 s2 = " + i20 + "," + i21 + "," + s2);
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0148.instanceCount Test0148.fFld Test0148.bFld = " + Test0148.instanceCount + "," +
                Float.floatToIntBits(Test0148.fFld) + "," + (Test0148.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0148.byFld dFld iArrFld = " + Test0148.byFld + "," + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0148.iArrFld1 Test0148.dArrFld = " + FuzzerUtils.checkSum(Test0148.iArrFld1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0148.dArrFld)));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0148 _instance = new Test0148();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
