// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0760 {

    public static final int N = 400;

    public static long instanceCount=38270L;
    public static short sFld=29599;
    public float fFld=-49.460F;
    public boolean bFld=false;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0760.lArrFld, 2L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, int i4) {

        int i5=-5, i6=-33157, i7=6, i8=9, i9=-162, i10=-228, i11=1014;
        byte by1=10;
        float f=44.675F, f1=117.390F;
        double d=1.116049;

        for (i5 = 7; 297 > i5; i5 += 2) {
            by1 = (byte)f;
        }
        for (i7 = 2; i7 < 223; i7 += 3) {
            i6 = i8;
            i8 -= (int) Test0760.instanceCount;
            for (f1 = 1; f1 < 21; ++f1) {
                i9 >>= (int) Test0760.instanceCount;
                d += i3;
                i9 = i9;
                Test0760.instanceCount -= (long) f1;
                i4 += (int)(f1 - i7);
                for (i10 = 1; i10 < 2; ++i10) {
                    Test0760.instanceCount *= (long) d;
                    Test0760.instanceCount = -196;
                    i8 = i7;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + i6 + by1 + Float.floatToIntBits(f) + i7 + i8 + Float.floatToIntBits(f1) + i9
            + Double.doubleToLongBits(d) + i10 + i11;
    }

    public static void vMeth1() {

        int i1=89;
        int i2=-33;
        int i12=54698;
        int i13=-14;
        int[] iArr =new int[N];
        byte by2=-71;
        float f2=-2.689F;
        double d1=1.94331;
        double[] dArr =new double[N];
        long l=-3182893007L;

        FuzzerUtils.init(dArr, -88.78647);
        FuzzerUtils.init(iArr, -28444);

        for (i1 = 6; i1 < 243; ++i1) {
            vMeth2(i2, i1);
            i12 = 1;
            while ((i12 += 2) < 7) {
                Test0760.sFld *= (short) Test0760.instanceCount;
            }
            i2 += (i1 ^ i2);
            i2 -= by2;
            dArr[i1 - 1] = Test0760.instanceCount;
            i2 += (int)f2;
            d1 -= f2;
            iArr[i1] <<= i1;
            for (l = 7; l > 1; --l) {
                f2 -= l;
                i13 = i12;
                i13 |= i1;
                i2 <<= i13;
            }
        }
        vMeth1_check_sum += i1 + i2 + i12 + by2 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + l + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(short s, short s1) {

        int i=-127;
        byte by=-12;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -53.592F);

        i = (int)(by += (byte)Math.abs(fArr[(-9268 >>> 1) % N]));
        vMeth1();
        vMeth_check_sum += s + s1 + i + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i14=200;
        int i15=32943;
        int i16=-45500;
        int i17=161;
        int i18=-10;
        int i19=-11;
        int[] iArr1 =new int[N];
        double d2=-2.35466;
        byte by3=-19;

        FuzzerUtils.init(iArr1, -45416);

        vMeth(Test0760.sFld, (short) (7211));
        i14 = 1;
        while (++i14 < 179) {
            i15 = 1;
            while (++i15 < 140) {
                for (i16 = i15; i16 < 1; i16++) {
                    i17 -= (int)53651L;
                    Test0760.instanceCount >>= i15;
                    d2 += i15;
                    iArr1[i16 - 1] <<= i15;
                    Test0760.instanceCount -= i17;
                }
                for (i18 = 1; 1 < i18; --i18) {
                    iArr1[i14 - 1] = i17;
                    i19 = i15;
                    Test0760.lArrFld[i15 - 1] >>= -7025068448263600068L;
                    fFld -= by3;
                    i17 = i18;
                    switch ((i18 % 1) + 4) {
                    case 4:
                        d2 -= by3;
                        Test0760.sFld = (short) Test0760.instanceCount;
                        i17 >>>= i16;
                        if (bFld) {
                            Test0760.lArrFld[i18 - 1] %= (by3 | 1);
                            switch (((i15 % 2) * 5) + 101) {
                            case 111:
                                try {
                                    iArr1[i18 - 1] = (i17 % i19);
                                    iArr1[i18] = (i16 % 12756);
                                    i19 = (-53057 % i15);
                                } catch (ArithmeticException a_e) {}
                                fFld = 6671144566527341052L;
                                Test0760.instanceCount += i18;
                                Test0760.lArrFld[i18] = i14;
                                break;
                            case 102:
                                iArr1[i18 + 1] *= i15;
                                by3 = (byte)i18;
                                Test0760.instanceCount += (i18 * i18);
                                i17 /= (int)(0 | 1);
                                break;
                            default:
                                if (bFld) break;
                            }
                        }
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 d2 i18 = " + i17 + "," + Double.doubleToLongBits(d2) + "," + i18);
        FuzzerUtils.out.println("i19 by3 iArr1 = " + i19 + "," + by3 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0760.instanceCount Test0760.sFld fFld = " + Test0760.instanceCount + "," + Test0760.sFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("bFld Test0760.lArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0760.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0760 _instance = new Test0760();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
