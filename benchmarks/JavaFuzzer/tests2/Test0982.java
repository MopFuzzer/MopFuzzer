// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0982 {

    public static final int N = 400;

    public static long instanceCount=-2019672236930211549L;
    public static float fFld=-1.996F;
    public static double dFld=67.128052;
    public short sFld=14776;
    public long[] lArrFld =new long[N];

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i7=-43, i8=184, i9=83;
        double d2=-46.1499;
        long l=2027976579243093482L;
        boolean b1=true;
        float f=-126.289F;

        Test0982.instanceCount += Test0982.instanceCount;
        i7 = i7;
        Test0982.instanceCount = i7;
        d2 *= 533107674335581650L;
        for (l = 1; l < 292; l++) {
            b1 = false;
            i7 >>= i7;
            i8 = i7;
            i7 = -8;
            for (f = 1; f < 6; f++) {
                i9 += i7;
                i8 -= (int) Test0982.instanceCount;
                if (b1) break;
                if (b1) break;
                i8 = (int)-10L;
            }
        }
        vMeth_check_sum += i7 + Double.doubleToLongBits(d2) + l + i8 + (b1 ? 1 : 0) + Float.floatToIntBits(f) + i9;
    }

    public static int iMeth1() {

        int i10=1;
        int i11=-8;
        int i13=-9;
        int i14=-74;
        int[] iArr1 =new int[N];
        boolean b2=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr1, -246);
        FuzzerUtils.init(sArr, (short)15287);

        vMeth();
        Test0982.instanceCount += Test0982.instanceCount;
        for (i10 = 17; i10 < 328; i10++) {
            i11 = i10;
        }
        Test0982.instanceCount = (long) 1.105F;
        if (b2) {
            for (int i12 : iArr1) {
                Test0982.instanceCount ^= 47003;
                for (i13 = 1; i13 < 4; i13++) {
                    i12 /= (int) ((long) (Test0982.fFld) | 1);
                    Test0982.instanceCount &= i10;
                    i14 += (int) Test0982.instanceCount;
                    Test0982.dFld = -6;
                    i14 -= i10;
                    try {
                        i11 = (i13 / i13);
                        i12 = (-53491 / iArr1[i13 - 1]);
                        iArr1[i13 + 1] = (iArr1[i13 + 1] / i13);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        long meth_res = i10 + i11 + i13 + i14 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(double d, int i2) {

        int i3=162;
        int i4=-16474;
        int i5=-251;
        int i6=19086;
        int i15=32929;
        int[] iArr =new int[N];
        double d1=36.32367;
        double[] dArr =new double[N];
        boolean b=false;
        short s=6072;
        long l1=-10L;

        FuzzerUtils.init(dArr, 2.83770);
        FuzzerUtils.init(iArr, -8);

        i2 = (int) (++Test0982.instanceCount);
        i3 = 279;
        while ((i3 -= 3) > 0) {
            dArr[i3] = (((Test0982.instanceCount * i3) * (i2 * i3)) * i3);
            i2 = (++iArr[i3 - 1]);
            for (d1 = 1; 17 > d1; ++d1) {
                for (i5 = 1; i5 < 2; ++i5) {
                    b = b;
                    if (b) {
                        s >>= (short)Math.max((--i2) + (i4 + 28), iMeth1());
                        i4 += i5;
                        i6 += i2;
                    } else {
                        i4 |= i2;
                    }
                }
            }
            for (l1 = 1; l1 < 17; l1++) {
                lArrFld[(int) (l1 - 1)] += (long) Test0982.fFld;
                Test0982.instanceCount -= s;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i2 + i3 + Double.doubleToLongBits(d1) + i4 + i5 + i6 + (b ? 1 : 0)
            + s + l1 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=37259;
        int i1=-48025;
        int i16=5;
        int i17=-16;
        int i18=44;
        int[] iArr2 =new int[N];
        boolean b3=true;
        double[][] dArr1 =new double[N][N];

        FuzzerUtils.init(iArr2, -7);
        FuzzerUtils.init(dArr1, -1.30399);

        for (i = 12; i < 194; ++i) {
            i1 += Math.min(i1--, iMeth(Test0982.dFld, i));
            Test0982.instanceCount = Test0982.instanceCount;
            Test0982.instanceCount = (long) -75.11458;
            Test0982.dFld -= i1;
            iArr2[i - 1] = i;
            Test0982.instanceCount = Test0982.instanceCount;
            i1 += i;
        }
        i16 = 312;
        while (--i16 > 0) {
            b3 = false;
            Test0982.fFld = i;
            try {
                i1 = (-92 % i);
                i1 = (iArr2[i16 - 1] % iArr2[i16]);
                i1 = (i16 % -361);
            } catch (ArithmeticException a_e) {}
            i1 = i;
            Test0982.instanceCount -= 1046862242L;
            i1 += (-7 + (i16 * i16));
            i1 = i;
            i1 *= (int) Test0982.fFld;
            i1 >>= (int) Test0982.instanceCount;
        }
        dArr1[(i1 >>> 1) % N] = dArr1[(i >>> 1) % N];
        Test0982.instanceCount += (long) Test0982.fFld;
        i1 <<= i16;
        iArr2[(i >>> 1) % N] &= (int) Test0982.instanceCount;
        for (i17 = 7; i17 < 159; ++i17) {
            Test0982.instanceCount += Test0982.instanceCount;
            i1 = i16;
            i1 += (int) Test0982.instanceCount;
            if (b3) continue;
            Test0982.dFld *= -9;
        }
        i1 -= sFld;
        Test0982.instanceCount -= i;

        FuzzerUtils.out.println("i i1 i16 = " + i + "," + i1 + "," + i16);
        FuzzerUtils.out.println("b3 i17 i18 = " + (b3 ? 1 : 0) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("iArr2 dArr1 = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0982.instanceCount Test0982.fFld Test0982.dFld = " + Test0982.instanceCount + "," +
                Float.floatToIntBits(Test0982.fFld) + "," + Double.doubleToLongBits(Test0982.dFld));
        FuzzerUtils.out.println("sFld lArrFld = " + sFld + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0982 _instance = new Test0982();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
