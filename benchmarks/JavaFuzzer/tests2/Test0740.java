// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0740 {

    public static final int N = 400;

    public static long instanceCount=-427282748L;
    public static int iFld=59;
    public volatile boolean bFld=true;
    public static double dFld=8.74689;
    public static short sFld=-17852;
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0740.byArrFld, (byte) 52);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        float f1=0.172F;
        float[] fArr =new float[N];
        int i5=27;
        int i6=-251;
        int i7=-7;
        int i8=-11;
        int i9=-57876;
        int[] iArr =new int[N];
        byte by=47;

        FuzzerUtils.init(iArr, -225);
        FuzzerUtils.init(fArr, -98.22F);

        for (f1 = 7; f1 < 173; ++f1) {
            i5 -= i5;
            iArr[(int) (f1 - 1)] = (int) Test0740.instanceCount;
            Test0740.iFld += (int) f1;
            Test0740.iFld = Test0740.iFld;
            Test0740.dFld += 168;
            by = (byte)i5;
            Test0740.sFld = (short) Test0740.iFld;
            Test0740.iFld = Test0740.iFld;
        }
        for (i6 = 11; 294 > i6; ++i6) {
            switch (((Test0740.iFld >>> 1) % 7) + 48) {
            case 48:
                for (i8 = 1; i8 < 6; i8++) {
                    i9 -= i5;
                    i7 = (int) Test0740.instanceCount;
                    iArr[i6 + 1] <<= (int) Test0740.instanceCount;
                }
                break;
            case 49:
                i5 = by;
                break;
            case 50:
                Test0740.dFld = Test0740.instanceCount;
                break;
            case 51:
                Test0740.instanceCount += i6;
                break;
            case 52:
                Test0740.instanceCount += (((i6 * i6) + i7) - i9);
                break;
            case 53:
                i9 >>= i6;
                break;
            case 54:
            default:
                i7 *= (int) Test0740.instanceCount;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i5 + by + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i2, int i3, int i4) {

        int i10=230, i11=-5, i12=-14049;
        float f3=2.950F;

        i3 = (int)fMeth();
        for (i10 = 11; i10 < 267; ++i10) {
            for (f3 = 6; f3 > 1; f3--) {
                i2 += (int) Test0740.instanceCount;
            }
        }
        i4 = (int) Test0740.instanceCount;
        vMeth_check_sum += i2 + i3 + i4 + i10 + i11 + Float.floatToIntBits(f3) + i12;
    }

    public static void vSmallMeth(int i, int i1, long l) {


        vMeth(Test0740.iFld, Test0740.iFld, i1);
        vSmallMeth_check_sum += i + i1 + l;
    }

    public void mainTest(String[] strArr1) {

        float f=2.73F;
        float f4=0.283F;
        float f5=-2.508F;
        float[][] fArr1 =new float[N][N];
        double d=-2.30185;
        int i13=26730;
        int i14=163;
        int i15=-1;
        int[] iArr1 =new int[N];
        byte by1=26, by2=103;
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr1, -122.888F);
        FuzzerUtils.init(iArr1, -1);
        FuzzerUtils.init(lArr, -2093397340L);

        f = 1;
        while (++f < 294) {
            if (bFld && true) {
                d -= (Test0740.iFld--);
            } else {
                for (int smallinvoc = 0; smallinvoc < 62; smallinvoc++)
                    vSmallMeth(-2, Test0740.iFld, Test0740.instanceCount);
            }
            for (i13 = 2; i13 < 86; i13++) {
                Test0740.iFld += i13;
                i14 += i13;
                switch ((((-13702 >>> 1) % 4) * 5) + 17) {
                case 25:
                    i14 >>= i14;
                    fArr1[i13 + 1][i13] += Test0740.instanceCount;
                    f4 = 1;
                    while (++f4 < 2) {
                        i14 /= (int)-1.376F;
                        iArr1[i13 - 1] = Test0740.sFld;
                    }
                case 28:
                    d += i14;
                    break;
                case 21:
                    lArr[i13 + 1] >>= Test0740.instanceCount;
                    Test0740.instanceCount += i13;
                    iArr1[(int) (f - 1)] = (int) Test0740.instanceCount;
                case 29:
                    Test0740.byArrFld[i13 - 1] += by1;
                    by2 += (byte)(9 + (i13 * i13));
                    break;
                default:
                    Test0740.instanceCount = (long) f;
                    i14 = -61040;
                    if (true) {
                        by2 += (byte) Test0740.instanceCount;
                    } else {
                        i14 = by1;
                        for (f5 = 1; f5 < 2; ++f5) {
                            Test0740.instanceCount -= i15;
                            i14 &= i13;
                            i14 -= (int)58106L;
                            Test0740.instanceCount = (long) f4;
                            iArr1 = FuzzerUtils.int1array(N, (int)41);
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("f d i13 = " + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d) + "," + i13);
        FuzzerUtils.out.println("i14 f4 by1 = " + i14 + "," + Float.floatToIntBits(f4) + "," + by1);
        FuzzerUtils.out.println("by2 f5 i15 = " + by2 + "," + Float.floatToIntBits(f5) + "," + i15);
        FuzzerUtils.out.println("fArr1 iArr1 lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0740.instanceCount Test0740.iFld bFld = " + Test0740.instanceCount + "," + Test0740.iFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0740.dFld Test0740.sFld Test0740.byArrFld = " + Double.doubleToLongBits(Test0740.dFld) + "," +
                Test0740.sFld + "," + FuzzerUtils.checkSum(Test0740.byArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0740 _instance = new Test0740();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  fMeth ->  fMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
