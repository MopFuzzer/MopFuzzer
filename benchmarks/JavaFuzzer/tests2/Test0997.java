// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:59 2023
public class Test0997 {

    public static final int N = 400;

    public static long instanceCount=-72L;
    public int iFld=11;
    public static double dFld=-71.101411;
    public static volatile int iFld1=-10;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0997.lArrFld, 13L);
        FuzzerUtils.init(Test0997.iArrFld, -26879);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i8) {

        int i9=52046, i10=85, i11=232, i12=-34300, i13=-160;
        long l1=-11L;

        for (i9 = 5; i9 < 185; i9++) {
            i8 += (i9 * i9);
            i8 *= 29164;
            Test0997.iArrFld[i9] >>= (int) Test0997.instanceCount;
            i10 += i9;
            for (i11 = 1; i11 < 9; i11++) {
                switch ((i9 % 1) + 28) {
                case 28:
                    for (l1 = 1; l1 < 2; ++l1) {
                        if (i10 != 0) {
                        }
                        i12 -= -204;
                        i12 = 158;
                    }
                    Test0997.instanceCount *= (long) Test0997.dFld;
                    i12 += (i11 * i12);
                    i10 = (int) Test0997.dFld;
                    break;
                default:
                    try {
                        Test0997.iArrFld[i11 - 1] = (Test0997.iArrFld[i9 - 1] / 253);
                        i13 = (Test0997.iArrFld[i11] % i13);
                        i10 = (i11 / Test0997.iArrFld[i11]);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + l1 + i13;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        double d=-78.36117, d1=-1.51217, d2=0.127930;
        int i2=-189;
        int i3=-10;
        int i4=-1;
        int i5=-44521;
        int i6=-59618;
        int i7=140;
        int i14=-45426;
        int i15=-214;
        int[] iArr =new int[N];
        byte by=24;
        boolean b=true;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, 60282);
        FuzzerUtils.init(bArr, false);

        d %= (((long)(d--)) | 1);
        i2 = 1;
        do {
            iArr[i2 + 1] = (-(--by));
            Test0997.lArrFld = (Test0997.lArrFld = (Test0997.lArrFld = Test0997.lArrFld));
            for (d1 = 1; 5 > d1; ++d1) {
                for (i4 = 1; i4 < 2; i4 += 3) {
                    iArr[i4 - 1] = (int)(i5 + ((i3 + 41274) + (1.127327 + (i6 - i5))));
                }
                i7 *= (int) ((Test0997.instanceCount++) + lMeth(i4));
            }
        } while (++i2 < 315);
        for (i14 = 2; i14 < 134; ++i14) {
            int i16=1;
            i3 += i14;
            Test0997.dFld *= i7;
            i3 |= i16;
            i15 += (int)d2;
            bArr[i14 + 1] = b;
            Test0997.lArrFld[i14] >>>= -230;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + by + Double.doubleToLongBits(d1) + i3 + i4 + i5 + i6 + i7
            + i14 + i15 + Double.doubleToLongBits(d2) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i, int i1, long l) {

        int i17=-57319, i18=-168, i19=172, i20=98;
        byte by1=-102;
        boolean b1=false;
        long l2=-8887381083060829034L;

        vMeth1();
        i >>= i;
        i += i1;
        for (i17 = 6; i17 < 177; i17++) {
            switch ((((i18 >>> 1) % 2) * 5) + 25) {
            case 29:
                i19 = 1;
                while (++i19 < 9) {
                    if (b1) {
                        i18 += by1;
                        Test0997.instanceCount = i17;
                        Test0997.dFld = i;
                        i += i19;
                    }
                    for (l2 = 1; l2 < 1; l2++) {
                        Test0997.iArrFld[i19] += (int) l2;
                        Test0997.dFld -= Test0997.iFld1;
                        i1 <<= (int)l;
                    }
                }
                break;
            case 34:
                i1 -= i1;
                break;
            default:
                b1 = b1;
            }
        }
        vMeth_check_sum += i + i1 + l + i17 + i18 + i19 + by1 + (b1 ? 1 : 0) + l2 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i21=-190, i22=50077, i23=19544, i24=-201, i25=10;
        float f=-60.209F;
        long l3=-2431274133L;
        short s=4911;
        boolean b2=true;

        iFld = -51471;
        vMeth(iFld, Test0997.iFld1, Test0997.instanceCount);
        i21 = 1;
        while (++i21 < 325) {
            for (i22 = i21; i22 < 77; i22++) {
                for (i24 = i21; i24 < 1; ++i24) {
                    switch (((i22 % 9) * 5) + 41) {
                    case 43:
                        f = i23;
                        break;
                    case 71:
                        i23 %= (int)(l3 | 1);
                        f = l3;
                        Test0997.iArrFld[i22] = -32;
                        s *= (short)l3;
                    case 45:
                        iFld = (int) Test0997.dFld;
                        break;
                    case 61:
                    case 48:
                        i25 = (int) Test0997.dFld;
                        Test0997.instanceCount += (long) f;
                        break;
                    case 76:
                        Test0997.lArrFld[i21 + 1] = i25;
                        Test0997.lArrFld[i22] -= i22;
                        if (b2) break;
                        i23 = i24;
                        break;
                    case 81:
                        l3 ^= iFld;
                        try {
                            Test0997.iArrFld[i22] = (iFld / i21);
                            iFld = (Test0997.iFld1 / i25);
                            Test0997.iFld1 = (Test0997.iFld1 / 38018);
                        } catch (ArithmeticException a_e) {}
                    case 65:
                        i23 >>= iFld;
                        Test0997.iArrFld[i21] *= -43223;
                        break;
                    case 64:
                    default:
                        i25 += (i24 | Test0997.instanceCount);
                        Test0997.iFld1 -= i21;
                        l3 = i23;
                        i25 += (-9815 + (i24 * i24));
                    }
                    try {
                        Test0997.iFld1 = (iFld / i21);
                        i23 = (i25 % Test0997.iArrFld[i21 - 1]);
                        Test0997.iArrFld[i22] = (Test0997.iArrFld[i24] / i25);
                    } catch (ArithmeticException a_e) {}
                    Test0997.iArrFld[i24 + 1] *= Test0997.iFld1;
                    l3 = i25;
                    i23 += (i24 * i24);
                }
            }
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 f = " + i24 + "," + i25 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("l3 s b2 = " + l3 + "," + s + "," + (b2 ? 1 : 0));

        FuzzerUtils.out.println("Test0997.instanceCount iFld Test0997.dFld = " + Test0997.instanceCount + "," + iFld + "," +
                Double.doubleToLongBits(Test0997.dFld));
        FuzzerUtils.out.println("Test0997.iFld1 Test0997.lArrFld Test0997.iArrFld = " + Test0997.iFld1 + "," +
                FuzzerUtils.checkSum(Test0997.lArrFld) + "," + FuzzerUtils.checkSum(Test0997.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0997 _instance = new Test0997();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
