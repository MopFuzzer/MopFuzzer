// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0285 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static volatile float fFld=-2.669F;
    public static int iFld=19744;
    public double dFld=0.119636;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public static short[] sArrFld =new short[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0285.iArrFld, 74);
        FuzzerUtils.init(Test0285.fArrFld, -102.718F);
        FuzzerUtils.init(Test0285.sArrFld, (short) -24242);
        FuzzerUtils.init(Test0285.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=-6, i4=18740, i6=39, i7=-4052;
        short s1=20462;
        byte by=-34;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-55);

        Test0285.fFld -= Test0285.iFld;
        Test0285.instanceCount <<= Test0285.iFld;
        Test0285.iFld <<= Test0285.iFld;
        for (i3 = 10; i3 < 199; i3++) {
            i4 >>= i3;
            Test0285.iFld -= i3;
            i4 = -8;
            for (i6 = 1; i6 < 8; ++i6) {
                switch ((i6 % 9) + 103) {
                case 103:
                    Test0285.instanceCount *= i6;
                    break;
                case 104:
                    i7 -= i6;
                    Test0285.iFld += (i6 | s1);
                    Test0285.iArrFld[i3 + 1] >>= by;
                    by -= (byte)i7;
                    break;
                case 105:
                    Test0285.iFld = (int) Test0285.instanceCount;
                    break;
                case 106:
                    Test0285.instanceCount = 70;
                case 107:
                    i7 = (int) Test0285.instanceCount;
                    break;
                case 108:
                    Test0285.iFld = Test0285.iFld;
                    break;
                case 109:
                    Test0285.fArrFld[i6 - 1] -= Test0285.instanceCount;
                    break;
                case 110:
                    byArr[i3 - 1] = byArr[i3];
                    break;
                case 111:
                    Test0285.instanceCount += (((i6 * Test0285.instanceCount) + Test0285.instanceCount) - i7);
                    break;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i6 + i7 + s1 + by + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1() {

        float f=39.830F;
        int i2=199, i8=-3636, i9=129, i10=-104, i11=23024, i12=-21681, i13=13299;
        double d=-2.43756;
        byte by1=73;

        f -= (Test0285.iArrFld[(i2 >>> 1) % N]--);
        vMeth2();
        d += d;
        i2 -= i2;
        Test0285.iFld ^= (int) Test0285.instanceCount;
        for (i8 = 325; i8 > 2; i8--) {
            for (i10 = 1; i10 < 5; i10++) {
                Test0285.iArrFld[i10 - 1] -= i8;
                for (i12 = 1; i12 < 2; ++i12) {
                    Test0285.iArrFld[i12 + 1] -= i10;
                    d += i13;
                    Test0285.instanceCount = Test0285.instanceCount;
                    by1 += (byte)i12;
                    i13 = 22;
                    Test0285.sArrFld[i10 - 1] *= (short) i11;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13
            + by1;
    }

    public static void vMeth() {


        vMeth1();
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=96, i1=-38, i14=-11961, i15=-9920, i16=53877, i17=-47;
        short s=-30377;
        long l=-2919969931386654863L;
        long l1=1527L;
        long[] lArr =new long[N];
        byte by2=-127;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -86.574F);
        FuzzerUtils.init(lArr, 0L);

        i = 1;
        do {
            i1 = 1;
            while (++i1 < 175) {
                s = (short) (Test0285.iArrFld[i - 1] = (int) ((fArr[i1 - 1]++) - (Test0285.instanceCount + i)));
            }
            vMeth();
            switch ((i % 8) + 119) {
            case 119:
                l = 1;
                while (++l < 175) {
                    dFld -= Test0285.fFld;
                    i14 = 1;
                    do {
                        Test0285.iFld >>= (int) -41828L;
                        Test0285.iFld += (i14 * i14);
                        if (bFld) continue;
                        Test0285.instanceCount += (i14 * i14);
                    } while (++i14 < 1);
                    Test0285.iFld += (int) Test0285.instanceCount;
                    lArr[(int)(l)] += l;
                    Test0285.iFld += (int) (((l * i1) + Test0285.instanceCount) - by2);
                }
                bFld = bFld;
                for (i15 = 1; 175 > i15; ++i15) {
                    i17 = 2;
                    do {
                        Test0285.iFld = i;
                        Test0285.instanceCount = s;
                        Test0285.instanceCount += (i17 * i15);
                        by2 -= (byte)-217;
                        if (bFld) break;
                        by2 = (byte) Test0285.instanceCount;
                        dFld = dFld;
                    } while ((i17 -= 2) > 0);
                    Test0285.fFld += (i15 * i1);
                    Test0285.instanceCount += i16;
                    Test0285.iArrFld[i15] = i14;
                    s <<= (short)0;
                    i16 = i1;
                }
                break;
            case 120:
                Test0285.instanceCount *= i;
                break;
            case 121:
                Test0285.bArrFld[i] = bFld;
            case 122:
                Test0285.fFld *= i14;
                break;
            case 123:
                Test0285.fFld += (((i * l1) + i1) - i17);
                break;
            case 124:
                dFld += dFld;
                break;
            case 125:
                l1 = i;
                break;
            case 126:
                Test0285.iFld = i1;
            }
        } while (++i < 143);

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("l i14 by2 = " + l + "," + i14 + "," + by2);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("l1 fArr lArr = " + l1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0285.instanceCount Test0285.fFld Test0285.iFld = " + Test0285.instanceCount + "," +
                Float.floatToIntBits(Test0285.fFld) + "," + Test0285.iFld);
        FuzzerUtils.out.println("dFld bFld Test0285.iArrFld = " + Double.doubleToLongBits(dFld) + "," + (bFld ? 1 : 0) +
                "," + FuzzerUtils.checkSum(Test0285.iArrFld));
        FuzzerUtils.out.println("Test0285.fArrFld Test0285.sArrFld Test0285.bArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0285.fArrFld)) + "," + FuzzerUtils.checkSum(Test0285.sArrFld) +
                "," + FuzzerUtils.checkSum(Test0285.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0285 _instance = new Test0285();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
