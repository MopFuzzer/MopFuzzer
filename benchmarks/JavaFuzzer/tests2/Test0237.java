// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0237 {

    public static final int N = 400;

    public static volatile long instanceCount=-9256L;
    public static boolean bFld=true;
    public static volatile float fFld=2.993F;
    public static double[] dArrFld =new double[N];
    public int[] iArrFld =new int[N];
    public byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0237.dArrFld, -2.28439);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f1, int i3, float f2) {

        byte by=-91;
        short s=15687;
        int i4=-21237;
        int i5=229;
        int[] iArr =new int[N];
        double d=-2.113264;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(lArr1, -12L);

        iArr[(i3 >>> 1) % N] += i3;
        iArr[(i3 >>> 1) % N] = by;
        s ^= (short)i3;
        for (i4 = 8; i4 < 270; ++i4) {
            i5 >>= i5;
            i3 <<= (int) Test0237.instanceCount;
            Test0237.bFld = Test0237.bFld;
            lArr1[i4 + 1] = lArr1[i4 + 1];
            i3 += (i4 * i4);
        }
        i5 = i3;
        Test0237.instanceCount += (long) f2;
        iArr[(i5 >>> 1) % N] *= (int)d;
        i5 = (int) Test0237.instanceCount;
        vMeth1_check_sum += Float.floatToIntBits(f1) + i3 + Float.floatToIntBits(f2) + by + s + i4 + i5 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(boolean b) {

        int i2=-155;
        int i6=-242;
        int i7=6;
        int i8=-228;
        int i9=-62040;
        int[] iArr1 =new int[N];
        float f=-1.477F;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, -76356519L);
        FuzzerUtils.init(iArr1, -28188);

        i2 -= (int)(f--);
        vMeth1(f, -248, f);
        for (i6 = 10; i6 < 211; i6++) {
            f += i2;
            if (Test0237.bFld) continue;
            lArr2[i6 - 1] += 6441;
            i2 = i6;
            i2 -= i7;
            for (i8 = 1; i8 < 8; i8++) {
                i2 = i2;
                if (Test0237.bFld) break;
                i9 -= i7;
                if (i2 != 0) {
                }
                try {
                    i2 = (-40280 / i9);
                    i2 = (i9 / -248);
                    i9 = (-10644 / i8);
                } catch (ArithmeticException a_e) {}
            }
        }
        iArr1[(i9 >>> 1) % N] -= i6;
        long meth_res = (b ? 1 : 0) + i2 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(lArr2) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1, long l) {

        short s1=-488;
        int i10=-44469, i11=4, i12=-5, i13=42694;
        float f3=-1.286F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -38L);
        FuzzerUtils.init(fArr, 1.900F);

        lArr[(160 >>> 1) % N] = (long)(((i + i) - (fArr[(i >>> 1) % N]++)) - (33380L * (i + i1)));
        l = i1;
        iMeth(Test0237.bFld);
        Test0237.dArrFld[(134 >>> 1) % N] *= s1;
        for (i10 = 7; i10 < 339; ++i10) {
            if (false) continue;
            i1 += (i10 * i10);
            if (false) continue;
            l = 146;
            for (i12 = 1; i12 < 5; i12++) {
                Test0237.instanceCount += (-5 + (i12 * i12));
                Test0237.instanceCount = i;
                if (Test0237.bFld) continue;
            }
            fArr[i10 - 1] += i1;
            f3 += (3 + (i10 * i10));
        }
        vMeth_check_sum += i + i1 + l + s1 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i14=6, i15=9285, i16=17151, i17=-12, i18=-61, i19=-136;
        short s2=-18686;
        long l1=-3438405492L;
        long[] lArr3 =new long[N];
        double d1=0.75123;

        FuzzerUtils.init(lArr3, -4143933991L);

        vMeth(i14, i14, Test0237.instanceCount);
        i15 = 1;
        while (++i15 < 341) {
            s2 += (short)i15;
        }
        for (i16 = 10; 252 > i16; ++i16) {
            for (l1 = 104; l1 > 2; l1 -= 3) {
                i19 = 1;
                while (++i19 < 4) {
                    float f4=-60.992F;
                    i18 = (int)f4;
                    f4 += i19;
                    iArrFld[(int)(l1 - 1)] = i14;
                    i14 += i19;
                    i17 *= i17;
                    i17 += (i19 | i15);
                    byArrFld[i16] += (byte)f4;
                    i17 = i16;
                    iArrFld[i16] = -3;
                    iArrFld[i19 + 1] -= i14;
                }
                Test0237.fFld -= Test0237.fFld;
                i14 += (int)d1;
                i18 -= (int)l1;
                if (Test0237.bFld) break;
                lArr3[(int)(l1 - 1)] >>>= i16;
            }
            iArrFld = FuzzerUtils.int1array(N, (int)100);
            i14 >>= i19;
            i18 += (i16 * i16);
        }

        FuzzerUtils.out.println("i14 i15 s2 = " + i14 + "," + i15 + "," + s2);
        FuzzerUtils.out.println("i16 i17 l1 = " + i16 + "," + i17 + "," + l1);
        FuzzerUtils.out.println("i18 i19 d1 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("lArr3 = " + FuzzerUtils.checkSum(lArr3));

        FuzzerUtils.out.println("Test0237.instanceCount Test0237.bFld Test0237.fFld = " + Test0237.instanceCount + "," + (Test0237.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0237.fFld));
        FuzzerUtils.out.println("Test0237.dArrFld iArrFld byArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0237.dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0237 _instance = new Test0237();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
