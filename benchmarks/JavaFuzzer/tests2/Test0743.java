// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0743 {

    public static final int N = 400;

    public static long instanceCount=6970565380748804310L;
    public static double dFld=-17.18795;
    public static short sFld=14614;
    public static float fFld=-108.870F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0743.iArrFld, 0);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth() {

        int i7=-144, i8=3, i9=80, i10=-5073, i11=4, i12=-251, i13=-20116;
        float f=-29.124F;
        boolean b1=false;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 221L);

        i7 = i7;
        for (i8 = 7; i8 < 196; ++i8) {
            for (i10 = i8; 8 > i10; ++i10) {
                i9 = i7;
                Test0743.dFld = Test0743.sFld;
                if (true) continue;
                i11 /= (int)(i11 | 1);
            }
            if (false) {
                Test0743.instanceCount -= i7;
            } else if (b1) {
                f = i7;
                i12 = 1;
                do {
                    i13 = 1;
                    do {
                        Test0743.instanceCount += i11;
                        Test0743.iArrFld[i12 - 1] &= i12;
                        lArr[i13][i12] <<= i7;
                    } while (++i13 < 1);
                } while (++i12 < 8);
            } else {
                Test0743.iArrFld[i8] *= (int) 2977576417L;
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + i12 + i13 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static long lMeth(boolean b, int i1) {

        int i2=-14, i3=-1, i4=14, i5=-254, i6=8, i14=-45011;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -12L);

        for (i2 = 15; i2 < 321; ++i2) {
            i1 ^= (-(--i3));
            try {
                i3 = (i4 / i1);
                i3 = (-20593 % i2);
                i3 = (29198 % i3);
            } catch (ArithmeticException a_e) {}
            for (i5 = 1; i5 < 5; i5++) {
                Test0743.instanceCount <<= sMeth();
                i3 -= (int) Test0743.instanceCount;
                Test0743.iArrFld[i5] >>>= i3;
                switch (((i4 >>> 1) % 2) + 90) {
                case 90:
                    Test0743.dFld = i6;
                    i14 = 1;
                    do {
                        lArr1[i14 + 1] += i2;
                        Test0743.dFld += i6;
                        i3 = -4;
                        i6 -= 14;
                    } while (++i14 < 2);
                    break;
                case 91:
                    i6 += i5;
                default:
                    Test0743.fFld *= 2.114F;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i1 + i2 + i3 + i4 + i5 + i6 + i14 + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vSmallMeth(int i) {

        boolean b2=false;

        i *= (int)lMeth(b2, 229);
        vSmallMeth_check_sum += i + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i15=5;

        for (int smallinvoc=0; smallinvoc<336; smallinvoc++) vSmallMeth(i15);

        FuzzerUtils.out.println("i15 = " + i15);

        FuzzerUtils.out.println("Test0743.instanceCount Test0743.dFld Test0743.sFld = " + Test0743.instanceCount + "," +
                Double.doubleToLongBits(Test0743.dFld) + "," + Test0743.sFld);
        FuzzerUtils.out.println("Test0743.fFld Test0743.iArrFld = " + Float.floatToIntBits(Test0743.fFld) + "," +
                FuzzerUtils.checkSum(Test0743.iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0743 _instance = new Test0743();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth vSmallMeth mainTest Test
//DEBUG  sMeth ->  sMeth lMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
