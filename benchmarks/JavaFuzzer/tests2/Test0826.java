// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0826 {

    public static final int N = 400;

    public static long instanceCount=7374594310819925669L;
    public static double dFld=1.113607;
    public static volatile int iFld=-42308;
    public static short sFld=-3802;
    public static byte byFld=-14;
    public volatile float fFld=11.900F;
    public static volatile float fFld1=-115.1020F;
    public static int[] iArrFld =new int[N];
    public static byte[] byArrFld =new byte[N];
    public static float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0826.iArrFld, 3);
        FuzzerUtils.init(Test0826.byArrFld, (byte) -37);
        FuzzerUtils.init(Test0826.fArrFld, 1.45F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        byte by=-24;
        int i3=-9, i4=-198, i5=17761, i6=-36956, i7=-73;
        float f=-1.848F;
        boolean b=true;
        short s=-7559;

        for (int i2 : Test0826.iArrFld) {
            Test0826.instanceCount *= i2;
            i2 *= i2;
            i2 <<= by;
            for (i3 = 1; i3 < 4; ++i3) {
                i5 = i4;
                switch (((i3 % 8) * 5) + 90) {
                case 96:
                    i5 = (int) Test0826.dFld;
                    Test0826.dFld -= i4;
                    i2 *= i2;
                    i2 += i5;
                case 124:
                    for (i6 = 1; i6 < 2; ++i6) {
                        Test0826.iArrFld[i6] *= (int) f;
                        i2 |= i3;
                        i7 += i6;
                    }
                    break;
                case 125:
                    if (b) break;
                    break;
                case 130:
                case 104:
                    i5 >>= s;
                    break;
                case 109:
                    i5 += i3;
                    break;
                case 94:
                    Test0826.iArrFld[i3 + 1] += i3;
                    break;
                case 105:
                    Test0826.iFld *= (int) f;
                }
            }
        }
        long meth_res = by + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + (b ? 1 : 0) + s;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        long l=3L;
        int i8=-134, i9=-97, i10=1, i11=16368, i12=-58677;
        double d=2.34461;
        boolean b1=true;

        l -= iMeth1();
        i = (int)l;
        Test0826.instanceCount += i1;
        for (i8 = 5; i8 < 262; ++i8) {
            i1 += (int) Test0826.instanceCount;
            i1 = i;
            d = 1;
            do {
                Test0826.sFld = (short) i1;
                if (b1) break;
                for (i10 = 1; 1 > i10; ++i10) {
                    Test0826.iArrFld = FuzzerUtils.int1array(N, (int) 0);
                    if (i11 != 0) {
                        vMeth_check_sum += i + i1 + l + i8 + i9 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + i10 + i11
                            + i12;
                        return;
                    }
                    Test0826.dFld -= Test0826.dFld;
                    Test0826.dFld -= i11;
                    l /= (i12 | 1);
                }
            } while (++d < 6);
        }
        vMeth_check_sum += i + i1 + l + i8 + i9 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + i10 + i11 + i12;
    }

    public static int iMeth() {

        boolean b2=true;
        int i14=10;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -188L);

        vMeth(Test0826.iFld, Test0826.iFld);
        Test0826.iFld = Test0826.iFld;
        for (int i13 : Test0826.iArrFld) {
            Test0826.fArrFld[(i13 >>> 1) % N][(i13 >>> 1) % N] -= i13;
            switch (((Test0826.iFld >>> 1) % 2) + 116) {
            case 116:
                Test0826.iArrFld = Test0826.iArrFld;
                i13 -= i13;
                b2 = b2;
                Test0826.iArrFld[(27533 >>> 1) % N] <<= 4;
                break;
            case 117:
                Test0826.iArrFld[(i13 >>> 1) % N] = i13;
                if (false) {
                    lArr[(i13 >>> 1) % N] += i14;
                    if (i14 != 0) {
                    }
                    i13 = i13;
                } else if (b2) {
                    i13 = 124;
                } else {
                    i13 *= i13;
                }
                break;
            }
        }
        long meth_res = (b2 ? 1 : 0) + i14 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i15=-36490, i16=-33860, i17=4, i18=10, i19=219, i20=20265;
        float f1=0.840F;
        long[] lArr1 =new long[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(lArr1, 173L);
        FuzzerUtils.init(sArr, (short)-12651);

        Test0826.dFld -= iMeth();
        for (i15 = 10; 281 > i15; i15++) {
            for (i17 = 4; 93 > i17; i17++) {
                Test0826.byFld *= (byte) Test0826.instanceCount;
                Test0826.instanceCount -= i16;
                i18 -= -82;
                Test0826.dFld -= 25778;
                fFld -= i16;
                Test0826.instanceCount = (long) 1.67997;
                f1 = 1;
                do {
                    Test0826.byFld = (byte) 11;
                    lArr1[i15 + 1] = i17;
                    fFld += 10;
                    if (true) {
                        Test0826.iFld = i15;
                        Test0826.byFld += (byte) i15;
                        Test0826.byFld += (byte) i16;
                        i16 += (int) Test0826.fFld1;
                    } else {
                        Test0826.iFld -= Test0826.iFld;
                        i18 += i15;
                    }
                } while (++f1 < 2);
            }
            switch ((((i16 >>> 1) % 7) * 5) + 73) {
            case 82:
                Test0826.fFld1 += i17;
            case 85:
                for (i19 = 3; i19 < 93; ++i19) {
                    fFld += -60.474F;
                    lArr1[i15 + 1] = Test0826.instanceCount;
                    i20 = i20;
                    i18 = (int) Test0826.instanceCount;
                    i16 = i19;
                }
                i18 += (((i15 * i17) + Test0826.instanceCount) - i19);
                i20 |= (int) Test0826.instanceCount;
                break;
            case 99:
                Test0826.iFld = i15;
                break;
            case 105:
                i20 += (-31022 + (i15 * i15));
            case 84:
                Test0826.instanceCount += 3;
            case 81:
                Test0826.iArrFld[i15] -= (int) Test0826.instanceCount;
                break;
            case 75:
                fFld += (i15 * i20);
                break;
            default:
                Test0826.byFld *= (byte) fFld;
            }
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 f1 i19 = " + i18 + "," + Float.floatToIntBits(f1) + "," + i19);
        FuzzerUtils.out.println("i20 lArr1 sArr = " + i20 + "," + FuzzerUtils.checkSum(lArr1) + "," +
            FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0826.instanceCount Test0826.dFld Test0826.iFld = " + Test0826.instanceCount + "," +
                Double.doubleToLongBits(Test0826.dFld) + "," + Test0826.iFld);
        FuzzerUtils.out.println("Test0826.sFld Test0826.byFld fFld = " + Test0826.sFld + "," + Test0826.byFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0826.fFld1 Test0826.iArrFld Test0826.byArrFld = " + Float.floatToIntBits(Test0826.fFld1) + "," +
                FuzzerUtils.checkSum(Test0826.iArrFld) + "," + FuzzerUtils.checkSum(Test0826.byArrFld));
        FuzzerUtils.out.println("Test0826.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0826.fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0826 _instance = new Test0826();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
