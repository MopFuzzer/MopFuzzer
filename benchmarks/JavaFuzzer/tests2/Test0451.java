// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0451 {

    public static final int N = 400;

    public static volatile long instanceCount=2519253423L;
    public int iFld=168;
    public int iFld1=63549;
    public static double dFld=-21.22572;
    public static int iFld2=-222;
    public static int[] iArrFld =new int[N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0451.iArrFld, 1);
        FuzzerUtils.init(Test0451.byArrFld, (byte) -45);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static void vMeth(int i4, int i5, int i6) {

        float f3=0.429F;

        f3 -= Test0451.instanceCount;
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f3);
    }

    public static int iMeth2(int i7, int i8, double d1) {

        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-32043);

        i7 = (int) (((++sArr[(i7 >>> 1) % N]) % 1.800F) * (i8 % (Test0451.byArrFld[(i7 >>> 1) % N] | 1)));
        vMeth(i7, i8, -151);
        Test0451.iArrFld = Test0451.iArrFld;
        long meth_res = i7 + i8 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(sArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i3, float f2) {

        int i9=-21, i10=54937, i11=112, i12=44, i13=4152;
        boolean b=true;
        double d2=78.16404, d3=2.118914;

        vMeth((i3++) - i3, iMeth2(-198, i3, Test0451.dFld), -16);
        Test0451.instanceCount >>= Test0451.instanceCount;
        f2 = 125;
        for (i9 = 12; i9 < 201; i9 += 2) {
            switch (((i9 >>> 1) % 9) + 78) {
            case 78:
                i10 += i9;
                i3 = 169;
                i11 = 1;
                do {
                    b = b;
                } while (++i11 < 16);
                break;
            case 79:
                for (d2 = 1; d2 < 16; d2++) {
                    for (d3 = 1; d3 < 2; ++d3) {
                        b = b;
                        i12 *= (int) Test0451.instanceCount;
                        if (false) continue;
                    }
                    i12 *= (int)f2;
                }
                break;
            case 80:
                i3 %= (int)(i9 | 1);
                break;
            case 81:
                i3 += 52104;
            case 82:
                f2 = i13;
                break;
            case 83:
                Test0451.instanceCount = -4973686449070389351L;
                break;
            case 84:
                Test0451.instanceCount += Test0451.instanceCount;
                break;
            case 85:
                Test0451.instanceCount >>= i10;
                break;
            case 86:
                i3 += i9;
                break;
            }
        }
        long meth_res = i3 + Float.floatToIntBits(f2) + i9 + i10 + i11 + (b ? 1 : 0) + Double.doubleToLongBits(d2) +
            i12 + Double.doubleToLongBits(d3) + i13;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i, long l) {

        double d=119.2386;
        float f=-1.651F;
        long l1=-14L;

        iFld = (int)(((iFld1 * d) * iFld) + (7 - (f * -8)));
        l1 <<= (56255 - ((-191L | Test0451.instanceCount) >> (++iFld)));
        long meth_res = i + l + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + l1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=-2.526F, f4=104.911F;
        int i1=0;
        int i2=-4;
        int i14=-136;
        int i15=-247;
        int i16=-7;
        int i17=30173;
        int i18=14;
        int[] iArr =new int[N];
        boolean b1=false;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, -8);
        FuzzerUtils.init(lArr, -673997715L);

        iFld <<= iMeth((iFld1 ^ iFld1) - (iArr[(iFld >>> 1) % N]++), (iFld--) + iFld1);
        f1 -= ((671601308L % (Math.max(-14150, iFld1) | 1)) % ((0 - (++Test0451.iArrFld[(iFld >>> 1) % N])) | 1));
        for (i1 = 9; 354 > i1; ++i1) {
            Test0451.iArrFld[i1 + 1] -= (Short.reverseBytes((short) (iFld1 / (iFld1 | 1))) + iMeth1(iFld, f1));
            Test0451.dFld -= i2;
            for (i14 = 73; i14 > 1; i14--) {
                Test0451.instanceCount >>>= iFld1;
                try {
                    i2 = (i2 % 45103);
                    i2 = (i14 / -63531);
                    iFld = (i2 / i2);
                } catch (ArithmeticException a_e) {}
            }
            for (f4 = 3; f4 < 73; ++f4) {
                i17 = 1;
                do {
                    lArr[i1 + 1][i1 + 1] -= Test0451.instanceCount;
                    Test0451.iArrFld[i1 - 1] += iFld;
                    Test0451.instanceCount = Test0451.instanceCount;
                    i16 = -139;
                    i15 -= i17;
                } while (++i17 < 2);
                i18 = 1;
                do {
                    iFld1 = i14;
                    iArr[(int)(f4)] -= (int)f1;
                    if (b1) continue;
                    iFld1 = (int) Test0451.instanceCount;
                    Test0451.dFld += Test0451.dFld;
                    Test0451.instanceCount += i18;
                    i16 += (i18 | i17);
                    Test0451.instanceCount -= i16;
                    i2 = i17;
                    i15 += i1;
                } while (++i18 < 2);
                if (b1) continue;
                Test0451.instanceCount |= iFld;
                i15 += Test0451.iFld2;
                iFld1 = 8472;
            }
        }

        FuzzerUtils.out.println("f1 i1 i2 = " + Float.floatToIntBits(f1) + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i14 i15 f4 = " + i14 + "," + i15 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("b1 iArr lArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0451.instanceCount iFld iFld1 = " + Test0451.instanceCount + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("Test0451.dFld Test0451.iFld2 Test0451.iArrFld = " + Double.doubleToLongBits(Test0451.dFld) + "," +
                Test0451.iFld2 + "," + FuzzerUtils.checkSum(Test0451.iArrFld));
        FuzzerUtils.out.println("Test0451.byArrFld = " + FuzzerUtils.checkSum(Test0451.byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0451 _instance = new Test0451();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 mainTest
//DEBUG  vMeth ->  vMeth iMeth1 mainTest iMeth2
//DEBUG  iMeth2 ->  iMeth2 iMeth1 mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
