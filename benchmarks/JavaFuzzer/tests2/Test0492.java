// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0492 {

    public static final int N = 400;

    public static long instanceCount=-3422140008L;
    public static byte byFld=40;
    public static volatile short sFld=-29477;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0492.iArrFld, 7);
        FuzzerUtils.init(Test0492.lArrFld, 54L);
        FuzzerUtils.init(Test0492.iArrFld1, -43895);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, int i9) {

        int i10=23950, i11=78;
        boolean b=true;

        Test0492.byFld |= (byte) Test0492.instanceCount;
        Test0492.instanceCount -= i8;
        Test0492.instanceCount = i8;
        for (i10 = 3; i10 < 147; i10++) {
            if (b) continue;
            Test0492.instanceCount /= (Test0492.instanceCount | 1);
            Test0492.instanceCount *= 24415;
            Test0492.byFld = (byte) i8;
            if (b) {
                i8 *= i10;
                i11 += (int) Test0492.instanceCount;
                i9 = i9;
            } else {
                Test0492.instanceCount = i10;
                Test0492.lArrFld[i10 + 1] += i10;
                if (true) break;
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + (b ? 1 : 0);
    }

    public static short sMeth(float f, int i3, int i4) {

        int i5=14, i6=-158, i12=157, i13=13;
        double d=1.96079;
        double d1=1.87632;
        double[] dArr =new double[N];
        boolean b1=false;

        FuzzerUtils.init(dArr, -48.13630);

        for (i5 = 9; 292 > i5; i5++) {
            i3 += (((i5 * i4) + i5) - i3);
            vMeth1(i4, i6);
            i4 = -24102;
        }
        dArr[(i5 >>> 1) % N] += d;
        i3 ^= i5;
        i3 = (int) Test0492.instanceCount;
        i12 = 1;
        do {
            for (d1 = i12; d1 < 7; d1++) {
                b1 = b1;
            }
            i6 *= (int) Test0492.instanceCount;
            i6 = i5;
            i4 -= (int) Test0492.instanceCount;
            Test0492.lArrFld[i12] += i12;
            i13 = i12;
        } while (++i12 < 244);
        long meth_res = Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + i12 +
            Double.doubleToLongBits(d1) + i13 + (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(int i1, int i2) {

        float f1=2.47F;
        float[] fArr =new float[N];
        int i14=-51411, i15=8, i16=172, i17=14, i18=174, i19=-42, i20=-222;
        double d2=84.12075;
        boolean b2=false;

        FuzzerUtils.init(fArr, -95.217F);

        fArr[(i1 >>> 1) % N] = sMeth(f1, i2, i1);
        for (i14 = 18; 393 > i14; i14++) {
            i2 = 32836;
            for (d2 = i14; 5 > d2; d2++) {
                i16 += (int) Test0492.instanceCount;
                Test0492.iArrFld[(int) (d2 + 1)] = i1;
                i1 -= (int)f1;
                for (i17 = 1; i17 > 1; i17--) {
                    i18 <<= 3;
                    Test0492.iArrFld[i17 - 1] = i18;
                    if (b2) break;
                }
                Test0492.iArrFld[(int) (d2)] = (int) 2815670175595660159L;
            }
            for (i19 = 1; i19 < 5; ++i19) {
                double d3=0.26844;
                i18 = i16;
                d3 += i16;
            }
        }
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f1) + i14 + i15 + Double.doubleToLongBits(d2) + i16 + i17 +
            i18 + (b2 ? 1 : 0) + i19 + i20 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=0, i21=48, i22=12, i23=-96, i24=-131, i25=-128;

        i = 1;
        while (++i < 343) {
            vMeth(20, 187);
            Test0492.lArrFld[i + 1] = Test0492.instanceCount;
            Test0492.instanceCount += (((i * i) + i) - i);
            i21 = -10;
            for (i22 = i; i22 < 73; i22++) {
                for (i24 = 1; i24 < 1; i24++) {
                    int i26=49;
                    switch ((i % 3) + 86) {
                    case 86:
                        i21 += i24;
                        break;
                    case 87:
                        Test0492.byFld += (byte) i24;
                        Test0492.sFld = (short) i22;
                        break;
                    case 88:
                        Test0492.iArrFld[i22] = -2;
                        break;
                    default:
                        i23 += (((i24 * i21) + i25) - Test0492.byFld);
                        Test0492.iArrFld1[i24] = Test0492.byFld;
                        i21 -= (int) Test0492.instanceCount;
                        i25 = (int) Test0492.instanceCount;
                    }
                    switch ((((-38 >>> 1) % 2) * 5) + 41) {
                    case 46:
                        i26 *= i23;
                        switch (((i21 >>> 1) % 7) + 76) {
                        case 76:
                            Test0492.instanceCount >>= i26;
                        case 77:
                            i23 *= (int) Test0492.instanceCount;
                            bFld = bFld;
                        case 78:
                            Test0492.iArrFld1[i - 1] -= (int) 5.654F;
                            i25 *= i21;
                            i26 = i26;
                            break;
                        case 79:
                            Test0492.lArrFld = Test0492.lArrFld;
                            break;
                        case 80:
                            i26 += (-166 + (i24 * i24));
                            break;
                        case 81:
                            Test0492.instanceCount += (((i24 * i23) + i) - Test0492.instanceCount);
                            i21 = i21;
                            Test0492.instanceCount %= (long) 1.875F;
                            break;
                        case 82:
                            i25 += Test0492.byFld;
                            break;
                        default:
                            Test0492.instanceCount += 134;
                        }
                        break;
                    case 50:
                        Test0492.instanceCount -= 150;
                        break;
                    default:
                        Test0492.byFld = Test0492.byFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);

        FuzzerUtils.out.println("Test0492.instanceCount Test0492.byFld Test0492.sFld = " + Test0492.instanceCount + "," + Test0492.byFld +
                "," + Test0492.sFld);
        FuzzerUtils.out.println("bFld Test0492.iArrFld Test0492.lArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0492.iArrFld) + "," + FuzzerUtils.checkSum(Test0492.lArrFld));
        FuzzerUtils.out.println("Test0492.iArrFld1 = " + FuzzerUtils.checkSum(Test0492.iArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0492 _instance = new Test0492();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
