// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0868 {

    public static final int N = 400;

    public static long instanceCount=-64L;
    public float fFld=0.575F;
    public static byte byFld=34;
    public static boolean bFld=false;
    public static short sFld=17011;
    public static float fFld1=-1.394F;
    public static int iFld=132;
    public int iFld1=0;

    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i9, int i10, int i11) {

        double d1=1.101607;
        int i13=-2;
        int i14=-14;
        int i15=-170;
        int i16=60502;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 10);

        i9 = -52037;
        for (int i12 : iArr1) {
            d1 -= i10;
            for (i13 = 1; i13 < 4; ++i13) {
                for (i15 = 2; i15 > 1; --i15) {
                    switch ((i13 % 6) + 30) {
                    case 30:
                    case 31:
                        if (Test0868.bFld) continue;
                        Test0868.bFld = true;
                        Test0868.instanceCount += (-239 + (i15 * i15));
                        i9 = i14;
                        break;
                    case 32:
                        if (false) {
                        } else {
                            if (Test0868.bFld) break;
                            iArr1[i15] = 53;
                        }
                        Test0868.instanceCount *= i15;
                        break;
                    case 33:
                        iArr1[i15 + 1] = i9;
                        break;
                    case 34:
                        i9 ^= i11;
                        break;
                    case 35:
                        i16 = (int)-13L;
                        break;
                    }
                }
            }
        }
        long meth_res = i9 + i10 + i11 + Double.doubleToLongBits(d1) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i6, float f, long l1) {

        int i7=186, i8=1, i17=12, i18=0, i19=5, i20=2;

        for (i7 = 5; i7 < 275; i7++) {
            switch (((i7 % 1) * 5) + 79) {
            case 80:
                l1 <<= i6;
                i6 |= (int)lMeth(i7, i8, i8);
                switch (((i7 % 2) * 5) + 15) {
                case 21:
                    for (i17 = 1; 6 > i17; i17++) {
                        Test0868.instanceCount = i17;
                    }
                    f += -10;
                    break;
                case 23:
                    i6 += i7;
                    for (i19 = i7; i19 < 6; ++i19) {
                        i6 += (i19 | i8);
                        i18 = Test0868.sFld;
                        i6 &= 31065;
                        i18 += i19;
                    }
                    i6 <<= i6;
                    break;
                default:
                    i18 -= i6;
                }
                break;
            default:
                i8 *= i6;
            }
        }
        long meth_res = i6 + Float.floatToIntBits(f) + l1 + i7 + i8 + i17 + i18 + i19 + i20;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static short sMeth(long l) {

        int i2=13;
        int i3=-204;
        int i4=-3;
        int i5=-220;
        int[] iArr =new int[N];
        double d=-2.112421;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 2.99272);
        FuzzerUtils.init(iArr, 132);

        for (i2 = 18; i2 < 388; i2++) {
            for (i4 = 5; i4 > 1; i4--) {
                l = (-(++Test0868.instanceCount));
                Test0868.byFld = (byte) ((-(-13 + Test0868.byFld)) & (long) (d - l));
                dArr[i2 - 1] -= (i5--);
                try {
                    i3 = (i5 % iArr[i4 + 1]);
                    i5 = (i2 % 925938101);
                    i5 = (i3 % -41756);
                } catch (ArithmeticException a_e) {}
                i3 -= iMeth(i3, 73.84F, -3L);
                i3 -= (int) Test0868.fFld1;
                l += (((i4 * i5) + Test0868.fFld1) - i5);
                Test0868.iFld = i3;
                i5 <<= i4;
            }
            Test0868.fFld1 -= Test0868.fFld1;
            d = Test0868.instanceCount;
            i3 += (int)-5457L;
            iArr[i2 - 1] = i5;
        }
        long meth_res = l + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0;
        int i1=16157;
        int i21=-239;
        int i22=11;
        int i23=3;
        int i24=28510;
        int i25=6768;
        int i26=6;
        int i27=127;
        int i28=32;
        int i29=93;
        int i30=-172;
        int i31=254;
        int[] iArr2 =new int[N];
        short s=-18752;
        double d2=-1.119092;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr2, -2);
        FuzzerUtils.init(fArr, 0.268F);

        for (i = 6; i < 276; i += 2) {
            Test0868.instanceCount -= (long) (i * ((fFld - i) - sMeth(Test0868.instanceCount)));
            Test0868.instanceCount += (i * i);
            i1 += (((i * i1) + Test0868.byFld) - Test0868.instanceCount);
            for (i21 = 8; i21 < 186; i21++) {
                i22 = i1;
                for (i23 = 1; i23 < 2; ++i23) {
                    iArr2[i21 + 1] = 22406;
                    iArr2[i21] = -42;
                    Test0868.iFld *= (int) Test0868.instanceCount;
                    if (Test0868.bFld) continue;
                    i22 *= i24;
                    fArr[i21] -= -232;
                    iArr2[i] = i22;
                }
                s += (short) Test0868.instanceCount;
                Test0868.iFld = -21;
                iFld1 *= (int) Test0868.instanceCount;
                for (i25 = 2; i25 > 1; i25 -= 3) {
                    i26 += (51427 + (i25 * i25));
                    i26 -= i21;
                }
                for (i27 = 2; i27 > 1; i27 -= 3) {
                    fFld = i23;
                }
                i1 = (int)-45.84474;
                fFld *= Test0868.instanceCount;
                switch (((i21 % 8) * 5) + 97) {
                case 121:
                    i28 *= 46;
                    break;
                case 108:
                    for (i29 = 1; i29 < 2; ++i29) {
                        Test0868.byFld += (byte) (i29 * i21);
                        iFld1 = i27;
                        Test0868.instanceCount = (long) d2;
                    }
                    break;
                case 115:
                    i30 = (int) Test0868.fFld1;
                case 120:
                    i30 += i21;
                    break;
                case 106:
                    Test0868.instanceCount -= Test0868.byFld;
                case 137:
                    d2 += i27;
                    break;
                case 101:
                    iArr2[i21 - 1] ^= i;
                case 110:
                    if (Test0868.bFld) break;
                    break;
                default:
                    i24 = i31;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i21 = " + i + "," + i1 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("s i25 i26 = " + s + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 d2 i31 = " + i30 + "," + Double.doubleToLongBits(d2) + "," + i31);
        FuzzerUtils.out.println("iArr2 fArr = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0868.instanceCount fFld Test0868.byFld = " + Test0868.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0868.byFld);
        FuzzerUtils.out.println("Test0868.bFld Test0868.sFld Test0868.fFld1 = " + (Test0868.bFld ? 1 : 0) + "," + Test0868.sFld + "," +
                Float.floatToIntBits(Test0868.fFld1));
        FuzzerUtils.out.println("Test0868.iFld iFld1 = " + Test0868.iFld + "," + iFld1);

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0868 _instance = new Test0868();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
