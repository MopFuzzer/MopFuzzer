// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0038 {

    public static final int N = 400;

    public static long instanceCount=-36980L;
    public static byte byFld=65;
    public int iFld=-5;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0038.iArrFld, 20076);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i4, int i5, int i6) {

        int i7=-6;
        int i8=-88;
        int i9=3;
        int i10=-22453;
        int[] iArr =new int[N];
        boolean b=true;
        float f=-96.334F;
        float[] fArr =new float[N];
        double[] dArr =new double[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(dArr, -1.67241);
        FuzzerUtils.init(lArr, -5880057565923311544L);
        FuzzerUtils.init(fArr, 34.563F);

        i7 = 1;
        do {
            i8 = 9;
            do {
                iArr[i7] += (int)162L;
                for (i9 = i8; i9 < 1; ++i9) {
                    if (b) continue;
                    Test0038.byFld &= (byte) i9;
                    iArr[i7 - 1] &= (int) Test0038.instanceCount;
                    dArr[i7] = Test0038.instanceCount;
                    f += (i9 * i9);
                    lArr[i9 - 1][i9] = 5;
                    i10 ^= i9;
                    i5 >>= i7;
                }
                fArr[i8] -= i7;
                try {
                    i5 = (i9 % i10);
                    i5 = (1972968217 % i7);
                    i5 = (55412 % iArr[i8]);
                } catch (ArithmeticException a_e) {}
                i4 *= (int) Test0038.instanceCount;
            } while (--i8 > 0);
        } while (++i7 < 181);
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth1(short s) {

        int i11=-111;
        int i12=-10;
        int[] iArr1 =new int[N];
        double d=1.40621;

        FuzzerUtils.init(iArr1, 98);

        fMeth(i11, 133, i11);
        i12 = 1;
        while (++i12 < 299) {
            try {
                i11 = (iArr1[i12 - 1] % 32234);
                i11 = (i11 / i11);
                i11 = (-2083341086 % i11);
            } catch (ArithmeticException a_e) {}
            i11 <<= i11;
            Test0038.instanceCount *= (long) d;
        }
        i11 *= i12;
        long meth_res = s + i11 + i12 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i2=6, i3=61, i13=62, i14=-56, i15=-8, i16=9;
        short s1=24048;
        float f1=2.275F, f2=71.76F;

        for (i2 = 2; 245 > i2; i2 += 2) {
            Test0038.byFld = (byte) ((i2 + (i3 >>> i2)) + i3);
            if (i3 < (iMeth1(s1) + i2)) continue;
            for (f1 = 13; f1 > 1; f1 -= 3) {
                Test0038.instanceCount >>>= -6;
            }
        }
        f2 = 1;
        while (++f2 < 337) {
            try {
                i3 = (i2 % i13);
                i3 = (23370 / i13);
                i13 = (60476 / i3);
            } catch (ArithmeticException a_e) {}
            i13 *= i3;
            i13 += i13;
            for (i14 = 1; i14 < 5; i14++) {
                i16 = 1;
                do {
                    Test0038.iArrFld[i16 + 1] >>>= 34913;
                    i3 = (int) Test0038.instanceCount;
                    i13 = i14;
                    i13 -= 9;
                } while (++i16 < 2);
            }
        }
        long meth_res = i2 + i3 + s1 + Float.floatToIntBits(f1) + i13 + Float.floatToIntBits(f2) + i14 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=9, i1=-28090, i17=2, i18=11, i19=42117, i20=-30, i21=32479, i22=11;
        float f3=-113.55F;
        short s2=-26831;
        double d1=-114.117988;
        boolean b1=false;

        try {
            for (i = 8; i < (341 + 400); i++) {
                if (b1) {
                    i1 >>= iMeth();
                    Test0038.iArrFld[i] += i1;
                } else if (b1) {
                    for (i17 = 2; (63 + 400) > i17; ++i17) {
                        i1 += (((i17 * i1) + i) - Test0038.instanceCount);
                        i18 *= i18;
                        for (i19 = i; i19 < 1; ++i19) {
                            i20 += (((i19 * Test0038.byFld) + i20) - Test0038.instanceCount);
                            f3 -= s2;
                            i20 = (int)f3;
                            i1 -= (int) Test0038.instanceCount;
                            Test0038.instanceCount = i1;
                            try {
                                i18 = (-43215 / i19);
                                Test0038.iArrFld[i - 1] = (i20 % i17);
                                i18 = (50309 % i20);
                            } catch (ArithmeticException a_e) {}
                            i18 += i19;
                        }
                        if (b1) {
                            i1 += (((i17 * i1) + i) - i);
                            d1 *= Test0038.instanceCount;
                            if (b1) break;
                        } else {
                            for (i21 = 1; i21 < 1; ++i21) {
                                Test0038.iArrFld[i21] = s2;
                                i20 %= (int)(i21 | 1);
                                i22 *= i1;
                                i20 += (int)f3;
                                Test0038.instanceCount += (i21 * i21);
                            }
                            Test0038.instanceCount += (((i17 * Test0038.instanceCount) + i18) - iFld);
                            iFld += i22;
                        }
                    }
                }
                Test0038.instanceCount += Test0038.instanceCount;
                if (b1) break;
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            i20 = (int) Test0038.instanceCount;
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("f3 s2 d1 = " + Float.floatToIntBits(f3) + "," + s2 + "," +
            Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("b1 i21 i22 = " + (b1 ? 1 : 0) + "," + i21 + "," + i22);

        FuzzerUtils.out.println("Test0038.instanceCount Test0038.byFld iFld = " + Test0038.instanceCount + "," + Test0038.byFld + "," +
            iFld);
        FuzzerUtils.out.println("Test0038.iArrFld = " + FuzzerUtils.checkSum(Test0038.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0038 _instance = new Test0038();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
