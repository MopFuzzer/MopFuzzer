// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0078 {

    public static final int N = 400;

    public static long instanceCount=132L;
    public static float fFld=-110.469F;
    public static boolean bFld=false;
    public static long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0078.lArrFld, 60382L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static void vMeth(int i, long l) {

        int i1=24382;
        int i2=-13;
        int i3=122;
        int i4=1;
        int i5=-64290;
        int i6=72;
        int i7=-11;
        int i8=1;
        int[] iArr =new int[N];
        byte by=-5;
        byte[] byArr =new byte[N];
        short s=-11135;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, 61);
        FuzzerUtils.init(byArr, (byte)65);
        FuzzerUtils.init(bArr, false);

        for (i1 = 6; i1 < 151; i1++) {
            for (i3 = 1; i3 < 11; i3++) {
                i2 = i;
            }
            i5 = 1;
            while (++i5 < 11) {
                i = (int) (--Test0078.lArrFld[i1][i5 - 1]);
                i -= (int)((-(i - i2)) + (iArr[i1 - 1] - 1.295F));
                for (i6 = i1; i6 < 1; ++i6) {
                    Test0078.instanceCount = (((i2 + i2) % ((i6 + i) | 1)) - i2);
                    if ((Test0078.bFld && bArr[i5 - 1]) & (((i--) + (i6 + i5)) != (--Test0078.instanceCount))) {
                        Test0078.fFld = (float) (((i - i6) % (((long) (71.97480 * (Test0078.instanceCount++))) | 1)) + (byArr[i5
                            - 1] + i1));
                    }
                    iArr = (iArr = (iArr = (iArr = FuzzerUtils.int1array(N, (int)-64059))));
                    try {
                        i4 = (i5 / 14068);
                        i4 = (38858 % i1);
                        i7 = (iArr[i1] % 256);
                    } catch (ArithmeticException a_e) {}
                }
                i4 += Math.abs((int) (i4 - (Test0078.instanceCount + by)));
            }
            s -= (short)i8;
            iArr[i1] -= (int)((-i6) * l);
        }
        vMeth_check_sum += i + l + i1 + i2 + i3 + i4 + i5 + i6 + i7 + by + s + i8 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(bArr);
    }

    public static float fMeth(int i18, int i19) {

        int i20=3;
        int i21=18240;
        int[][] iArr1 =new int[N][N];
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, 89);
        FuzzerUtils.init(fArr, -1.102F);

        i18 = i19;
        i19 = i19;
        for (i20 = 13; i20 < 390; i20++) {
            i19 *= i21;
            try {
                i19 = (iArr1[i20 - 1][i20] % i19);
                i21 = (i19 % -28637);
                i21 = (i20 % i20);
            } catch (ArithmeticException a_e) {}
            i21 <<= -23768;
            i18 += -107;
            i19 <<= i18;
            fArr[i20] = i20;
            Test0078.fFld += i20;
        }
        long meth_res = i18 + i19 + i20 + i21 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public long lMeth(int i14, int i15) {

        int i16=-46691, i17=-90, i22=-19654, i23=-97, i24=10, i25=-81;

        for (i16 = 10; 208 > i16; ++i16) {
            i15 += (i16 * i16);
            Test0078.instanceCount *= (long) ((Test0078.lArrFld[i16 + 1][i16] -= (long) fMeth(i14, 14)) + i14);
            for (i22 = 1; 8 > i22; ++i22) {
                Test0078.bFld = Test0078.bFld;
                i15 -= (int)-577161043587881188L;
                i14 += (((i22 * Test0078.instanceCount) + i23) - Test0078.instanceCount);
                for (i24 = 1; 2 > i24; ++i24) {
                    Test0078.instanceCount += (((i24 * i14) + i15) - i15);
                    i14 *= (int) Test0078.instanceCount;
                    i25 = i16;
                    i14 += (int)(2477L + (i24 * i24));
                    i15 += i14;
                    Test0078.fFld += i22;
                    i14 += (i24 | Test0078.instanceCount);
                }
            }
        }
        long meth_res = i14 + i15 + i16 + i17 + i22 + i23 + i24 + i25;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(boolean b, int i10) {

        int i11=12;
        int i12=5;
        int i13=-4696;
        int i26=2;
        int i27=-117;
        int i28=13;
        int[] iArr2 =new int[N];
        long l1=12L;

        FuzzerUtils.init(iArr2, -10);

        for (i11 = 10; 272 > i11; ++i11) {
            switch (((i11 % 9) * 5) + 51) {
            case 83:
                i12 += (i11 ^ i10);
                for (l1 = 1; 6 > l1; l1++) {
                    Test0078.lArrFld[(int) (l1)][i11 - 1] *= ((-19L - lMeth(-176, i13)) + i10);
                    i10 %= (int)(i12 | 1);
                    i26 = 1;
                    do {
                        i13 = i12;
                        Test0078.fFld -= i26;
                        iArr2[i11 - 1] /= (int)51.37F;
                    } while (++i26 < 2);
                    for (i27 = 1; i27 < 2; i27++) {
                        Test0078.instanceCount &= Test0078.instanceCount;
                        Test0078.fFld = i11;
                        i28 += (((i27 * i28) + i10) - i26);
                        i12 = i26;
                    }
                }
                break;
            case 85:
                Test0078.fFld -= -147;
            case 53:
                i12 += (i11 * i11);
            case 72:
                i28 = (int) Test0078.fFld;
                break;
            case 63:
                Test0078.instanceCount = i27;
            case 67:
                Test0078.lArrFld[i11 + 1][i11 + 1] *= l1;
            case 89:
                if (false) break;
            case 76:
            case 69:
                Test0078.instanceCount *= Test0078.instanceCount;
                break;
            }
        }
        long meth_res = (b ? 1 : 0) + i10 + i11 + i12 + l1 + i13 + i26 + i27 + i28 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i9=-9;
        int i29=72;
        int i30=5;
        int i31=-61357;
        int i32=-8;
        int i33=-39287;
        int i34=2;
        int[] iArr3 =new int[N];
        double d=105.41396;
        double d1=-44.48790;
        double[] dArr =new double[N];
        byte by1=11;
        float f=-1.24F;
        short s1=-25288;

        FuzzerUtils.init(iArr3, 110);
        FuzzerUtils.init(dArr, -24.83947);

        vMeth((int) (Test0078.lArrFld[(i9 >>> 1) % N][(i9 >>> 1) % N] * iMeth(true, i9)), Test0078.instanceCount);
        i9 >>= i9;
        Test0078.instanceCount = i9;
        iArr3[(i9 >>> 1) % N] *= (int)107.319F;
        i29 = 1;
        do {
            d += i9;
            i30 = 1;
            do {
                Test0078.fFld *= i9;
            } while (++i30 < 76);
        } while (++i29 < 329);
        by1 = (byte)i9;
        i9 /= (int)(i29 | 1);
        d = i30;
        Test0078.instanceCount *= (long) d;
        if (Test0078.bFld) {
            d *= Test0078.instanceCount;
            i9 += (int) Test0078.fFld;
            Test0078.instanceCount *= by1;
        } else if (Test0078.bFld) {
            switch (((i29 >>> 1) % 1) + 3) {
            case 3:
                i9 += -19823;
                iArr3 = FuzzerUtils.int1array(N, (int)139);
                for (i31 = 9; i31 < 175; i31++) {
                    Test0078.fFld = i30;
                    f = 1;
                    do {
                        i32 %= (int)((long)(d) | 1);
                        i32 += (int)(((f * i9) + i30) - i9);
                        iArr3[i31 + 1] = i32;
                        i9 = 0;
                        Test0078.instanceCount = i32;
                    } while (++f < 151);
                    for (i33 = 2; i33 < 151; ++i33) {
                        i34 -= (int)d1;
                        i32 += (int) Test0078.instanceCount;
                    }
                }
            default:
                iArr3[(i34 >>> 1) % N] <<= 3;
            }
        } else {
            i9 = s1;
        }

        FuzzerUtils.out.println("i9 i29 d = " + i9 + "," + i29 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i30 by1 i31 = " + i30 + "," + by1 + "," + i31);
        FuzzerUtils.out.println("i32 f i33 = " + i32 + "," + Float.floatToIntBits(f) + "," + i33);
        FuzzerUtils.out.println("i34 d1 s1 = " + i34 + "," + Double.doubleToLongBits(d1) + "," + s1);
        FuzzerUtils.out.println("iArr3 dArr = " + FuzzerUtils.checkSum(iArr3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0078.instanceCount Test0078.fFld Test0078.bFld = " + Test0078.instanceCount + "," +
                Float.floatToIntBits(Test0078.fFld) + "," + (Test0078.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0078.lArrFld = " + FuzzerUtils.checkSum(Test0078.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0078 _instance = new Test0078();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
