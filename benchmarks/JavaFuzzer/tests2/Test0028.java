// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0028 {

    public static final int N = 400;

    public static long instanceCount=1530088504L;
    public boolean bFld=true;
    public short sFld=-27247;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0028.iArrFld, 141);
        FuzzerUtils.init(Test0028.lArrFld, 254232331L);
    }

    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public double dMeth(float f2) {

        double d2=28.34002;
        int i8=-14, i9=14, i10=-1, i11=-88, i12=252;
        float[] fArr =new float[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(fArr, 0.231F);
        FuzzerUtils.init(bArr, true);

        for (d2 = 2; d2 < 132; d2++) {
            switch (((4 >>> 1) % 1) + 27) {
            case 27:
                for (i9 = 1; i9 < 12; i9++) {
                    Test0028.instanceCount >>= Test0028.instanceCount;
                    i8 += (int)d2;
                    i10 >>= i8;
                    Test0028.iArrFld[i9 - 1] -= 2;
                }
                fArr[(int)(d2)] *= i8;
                for (i11 = 1; i11 < 12; i11++) {
                    i12 -= (int) Test0028.instanceCount;
                    if (bFld) continue;
                    i10 = i9;
                    bArr[(int)(d2 + 1)] = bFld;
                    i8 -= i9;
                    i12 *= i8;
                }
                break;
            }
        }
        long meth_res = Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) + i8 + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public boolean bMeth() {

        int i4=-8, i5=110, i6=28774, i7=-1, i14=133, i15=-4, i16=161, i17=-14, i18=9, i19=117, i20=12112, i21=-130;
        float f1=-37.281F;
        double d1=2.101408;

        for (i4 = 4; i4 < 188; i4++) {
            f1 -= (float)(((--d1) % ((i4 + i5) | 1)) + (-2.1016F % (((long)(2 * (i5 % -109.348F))) | 1)));
        }
        for (i6 = 5; 165 > i6; i6++) {
            i7 >>>= (int)((f1 + dMeth(f1)) * -5);
            f1 -= f1;
            for (i14 = 1; i14 < 10; i14++) {
                Test0028.instanceCount -= sFld;
            }
        }
        for (i16 = 10; i16 < 268; ++i16) {
            i5 *= (int)d1;
            Test0028.instanceCount += i14;
            i5 -= (int)d1;
            for (i18 = 6; 1 < i18; i18--) {
                for (i20 = 1; i20 < 2; i20++) {
                    i7 -= 32;
                    f1 -= -7;
                }
            }
        }
        long meth_res = i4 + i5 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i6 + i7 + i14 + i15 + i16 +
            i17 + i18 + i19 + i20 + i21;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public int iMeth(double d) {

        int i1=-18, i2=-100, i3=6, i22=94, i23=51984;
        float f=1.889F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 3267026998L);

        for (i1 = 179; i1 > 11; i1 -= 2) {
            Test0028.instanceCount += (((i1 * i2) + i1) - i2);
            for (f = 1; 18 > f; f++) {
                i3 *= (int)Math.sqrt(d);
            }
            i2 += (i1 + i2);
            i2 = (int)f;
        }
        i3 = (int)lArr[(i3 >>> 1) % N];
        i3 >>= -62430;
        bMeth();
        i3 <<= i2;
        for (i22 = 4; i22 < 197; i22++) {
            i3 &= i3;
        }
        Test0028.iArrFld[(i2 >>> 1) % N] <<= i23;
        Test0028.iArrFld[(i3 >>> 1) % N] += 8;
        i2 = (int) Test0028.instanceCount;
        long meth_res = Double.doubleToLongBits(d) + i1 + i2 + Float.floatToIntBits(f) + i3 + i22 + i23 +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-59, i24=2, i25=59062, i26=-27186, i27=101, i28=153;
        long l1=1663305109810985516L;
        float f3=-1.297F, f4=2.643F;
        double d3=0.118750;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-77);

        i = iMeth(2.12378);
        for (l1 = 4; l1 < 320; l1++) {
            if (bFld) break;
        }
        Test0028.instanceCount -= i;
        i24 = -20276;
        f3 *= i24;
        i25 = 1;
        do {
            byte by=-36;
            Test0028.instanceCount >>>= -208;
            i24 *= (int)l1;
            switch ((i25 % 1) + 123) {
            case 123:
                by = (byte)i24;
                switch (((i25 % 4) * 5) + 20) {
                case 25:
                    i26 = 1;
                    while (++i26 < 166) {
                        i24 <<= i26;
                        for (f4 = 1; 1 < f4; f4 -= 3) {
                            i24 += (int)d3;
                            Test0028.lArrFld[i26] = by;
                            f3 *= Test0028.instanceCount;
                            Test0028.iArrFld = Test0028.iArrFld;
                            Test0028.lArrFld[i25] += Test0028.instanceCount;
                            switch ((i25 % 9) + 12) {
                            case 12:
                                d3 = d3;
                                Test0028.instanceCount += (long) (((f4 * sFld) + i25) - i27);
                                Test0028.lArrFld[i26 - 1] = sFld;
                                i24 &= i;
                                break;
                            case 13:
                                Test0028.iArrFld[i26 - 1] += (int) Test0028.instanceCount;
                                Test0028.instanceCount -= i24;
                            case 14:
                                i -= (int)f3;
                                Test0028.instanceCount += i;
                                d3 = -124;
                                break;
                            case 15:
                                f3 += (f4 * f4);
                            case 16:
                                d3 += i24;
                            case 17:
                                i27 -= (int)f4;
                                break;
                            case 18:
                                i27 += (int)(((f4 * i25) + f3) - i);
                                break;
                            case 19:
                                Test0028.instanceCount += (long) (f4 * f4);
                                break;
                            case 20:
                                i24 += (int)f4;
                                break;
                            }
                        }
                    }
                    break;
                case 21:
                    Test0028.iArrFld[i25] >>= i24;
                case 30:
                    bFld = bFld;
                    break;
                case 28:
                    i28 /= 3;
                    break;
                }
                break;
            default:
                byArr[i25] += (byte)i27;
            }
        } while (++i25 < 151);

        FuzzerUtils.out.println("i l1 i24 = " + i + "," + l1 + "," + i24);
        FuzzerUtils.out.println("f3 i25 i26 = " + Float.floatToIntBits(f3) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f4 i27 d3 = " + Float.floatToIntBits(f4) + "," + i27 + "," +
            Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i28 byArr = " + i28 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0028.instanceCount bFld sFld = " + Test0028.instanceCount + "," + (bFld ? 1 : 0) + "," +
            sFld);
        FuzzerUtils.out.println("Test0028.iArrFld Test0028.lArrFld = " + FuzzerUtils.checkSum(Test0028.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0028.lArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0028 _instance = new Test0028();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth bMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
