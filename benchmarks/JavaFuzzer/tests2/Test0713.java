// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0713 {

    public static final int N = 400;

    public static long instanceCount=44702L;
    public static volatile double dFld=-121.20371;
    public static byte byFld=37;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0713.iArrFld, -8);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(boolean b, long l1, int i2) {

        int i3=-17195, i4=-36455, i5=125, i6=0, i7=8, i8=11;
        byte[] byArr =new byte[N];
        float[][] fArr2 =new float[N][N];

        FuzzerUtils.init(byArr, (byte)-8);
        FuzzerUtils.init(fArr2, 0.834F);

        for (byte by : byArr) {
            fArr2[(i2 >>> 1) % N][(i2 >>> 1) % N] = i2;
            if (b) break;
            if (b) break;
            for (i3 = 1; i3 < 4; i3++) {
                i4 = i4;
                i4 -= i4;
            }
            i2 <<= i2;
            for (i5 = 1; i5 < 4; ++i5) {
                for (i7 = 1; 2 > i7; i7 += 2) {
                    l1 = -3599431937581257568L;
                    Test0713.iArrFld[i7] += i7;
                    i6 = i8;
                    i8 -= (int) Test0713.dFld;
                    i6 -= (int)l1;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + l1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        boolean b1=true;
        int i9=-179, i10=-339, i11=24697, i12=2;
        float f1=0.212F;
        float[] fArr1 =new float[N];
        short s=-4438;

        FuzzerUtils.init(fArr1, -46.328F);

        fArr1[(117 >>> 1) % N] += Math.min(iMeth(b1, Test0713.instanceCount, i9), i9);
        for (i10 = 2; i10 < 134; ++i10) {
            float f=65.521F;
            Test0713.dFld += i10;
            i9 = i10;
            if (b1) {
                i11 += (int) Test0713.instanceCount;
                i9 ^= i9;
                Test0713.iArrFld[i10] = (int) Test0713.dFld;
                if (b1) continue;
            }
            i11 += (int)f;
            i11 += (((i10 * i11) + f) - Test0713.instanceCount);
        }
        for (f1 = 3; f1 < 134; f1++) {
            i11 += (157 + (f1 * f1));
            i11 *= s;
        }
        Test0713.iArrFld[(i11 >>> 1) % N] %= (int) (i12 | 1);
        vMeth1_check_sum += (b1 ? 1 : 0) + i9 + i10 + i11 + Float.floatToIntBits(f1) + i12 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(int i1, double d, long l) {

        int i14=14234, i15=-169;
        float f2=126.100F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 2.396F);
        FuzzerUtils.init(lArr, -4265437081929514806L);

        fArr[(i1 >>> 1) % N] -= Math.abs(Math.min(i1, i1) + l);
        vMeth1();
        i14 = 248;
        while (--i14 > 0) {
            f2 += (((i14 * i14) + i1) - i14);
            Test0713.instanceCount = -44805L;
            Test0713.dFld = Test0713.byFld;
        }
        i15 = 1;
        do {
            f2 += (((i15 * i14) + i14) - i14);
            switch (((i15 % 2) * 5) + 80) {
            case 83:
                Test0713.iArrFld[i15 + 1] >>= i14;
                break;
            case 90:
                i1 >>= i14;
            }
            f2 += (((i15 * i1) + i15) - Test0713.instanceCount);
            i1 += i1;
            i1 = -235;
            i1 = i14;
        } while (++i15 < 188);
        vMeth_check_sum += i1 + Double.doubleToLongBits(d) + l + i14 + Float.floatToIntBits(f2) + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=204;

        i = 1;
        do {
            vMeth(i, Test0713.dFld, Test0713.instanceCount);
        } while (++i < 248);

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test0713.instanceCount Test0713.dFld Test0713.byFld = " + Test0713.instanceCount + "," +
                Double.doubleToLongBits(Test0713.dFld) + "," + Test0713.byFld);
        FuzzerUtils.out.println("Test0713.iArrFld = " + FuzzerUtils.checkSum(Test0713.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0713 _instance = new Test0713();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
