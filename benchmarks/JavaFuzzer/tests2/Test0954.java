// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0954 {

    public static final int N = 400;

    public static long instanceCount=-42690L;
    public static boolean bFld=false;
    public double dFld=-29.83730;
    public int iFld=84;
    public static long lFld=-6L;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0954.lArrFld, -1L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i3) {

        int i4=171, i5=-24842, i6=30009, i7=15, i8=4, i9=-182;
        double d=0.14931;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 2.1016F);

        Test0954.lArrFld[(i3 >>> 1) % N] -= (long) 1.53477;
        i3 += (int)-95.889F;
        for (i4 = 2; 239 > i4; i4++) {
            for (i6 = 1; i6 < 7; i6 += 2) {
                i3 -= -22258;
                i5 = 27238;
                i8 = 1;
                while (++i8 < 3) {
                    i5 >>= i3;
                    i7 <<= (int) Test0954.instanceCount;
                    i3 += (i8 * i8);
                }
                i3 += (int)d;
                i9 = 1;
                while (++i9 < 3) {
                    i5 += (32052 + (i9 * i9));
                    fArr1[i6 + 1] = i6;
                    Test0954.bFld = Test0954.bFld;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        int i2=-20784;
        int i10=30911;
        int i11=-10;
        int i12=-14;
        int i13=-48498;
        int[] iArr1 =new int[N];
        byte by=72;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -2.840F);
        FuzzerUtils.init(iArr1, 32319);

        fArr[(i2 >>> 1) % N] += (Test0954.lArrFld[(i2 >>> 1) % N] = lMeth(i2));
        i2 = i2;
        i10 = 1;
        while (++i10 < 156) {
            Test0954.instanceCount = Test0954.instanceCount;
            Test0954.instanceCount = -148L;
            i2 = i10;
            by *= (byte)88;
            i2 = i2;
            for (i11 = 1; 10 > i11; i11++) {
                Test0954.instanceCount -= i11;
                if (Test0954.bFld) break;
                iArr1[i11 + 1] -= i10;
            }
            i13 = 1;
            while (++i13 < 10) {
                Test0954.lArrFld[i10 + 1] = by;
                i2 += (i13 * i12);
            }
        }
        vMeth1_check_sum += i2 + i10 + by + i11 + i12 + i13 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(int i1) {

        float f=-2.702F;
        float[] fArr2 =new float[N];
        int i14=-11, i15=80, i16=14, i17=-42;
        long l=1746730844312698901L;
        short s=23530;
        byte by1=-5;

        FuzzerUtils.init(fArr2, 0.322F);

        vMeth1();
        for (f = 148; f > 6; f -= 2) {
            switch (((i1 >>> 1) % 3) + 127) {
            case 127:
                i14 += (int)((long)f | i1);
            case 128:
                dFld %= (i14 | 1);
                for (l = 1; l < 22; ++l) {
                    Test0954.instanceCount += l;
                    i14 -= i15;
                    for (i16 = 1; i16 < 2; i16++) {
                        if (Test0954.bFld) break;
                        s += (short)-164;
                        i17 += (i16 * i1);
                    }
                    fArr2[(int)(l)] = by1;
                    i14 += (int)(l * l);
                }
                break;
            case 129:
                if (i1 != 0) {
                    vMeth_check_sum += i1 + Float.floatToIntBits(f) + i14 + l + i15 + i16 + i17 + s + by1 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
                    return;
                }
                break;
            default:
                i1 = (int)f;
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i14 + l + i15 + i16 + i17 + s + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
    }

    public void mainTest(String[] strArr1) {

        int i=60593;
        int i18=-5;
        int i19=-199;
        int i20=-8;
        int i21=64479;
        int[][] iArr =new int[N][N];
        short s1=29250;
        byte by2=-52;
        byte[] byArr =new byte[N];
        float f1=0.833F;

        FuzzerUtils.init(iArr, 6475);
        FuzzerUtils.init(byArr, (byte)0);

        iArr[(i >>> 1) % N][(i >>> 1) % N] = (int) (Test0954.instanceCount--);
        vMeth(i);
        for (i18 = 393; i18 > 4; --i18) {
            i20 = 65;
            do {
                if (Test0954.bFld) {
                    i |= (int) Test0954.instanceCount;
                    i = i18;
                    if (Test0954.bFld) break;
                } else {
                    i21 = 1;
                    do {
                        Test0954.instanceCount += i21;
                    } while (++i21 < 1);
                    i |= i;
                    iArr[i20][i18 + 1] ^= 60140;
                    iArr[i20][i18] &= 114;
                }
                i19 += (int)dFld;
                i19 <<= i19;
                if (true) break;
                i19 = i20;
                s1 = (short) Test0954.instanceCount;
                by2 += (byte) (i20 * Test0954.instanceCount);
                Test0954.instanceCount = -246;
                i19 >>>= 237;
            } while (--i20 > 0);
        }
        iArr[(i >>> 1) % N][(iFld >>> 1) % N] = i20;
        Test0954.lFld >>= i20;
        iArr[(iFld >>> 1) % N] = FuzzerUtils.int1array(N, (int)-13);
        f1 = 124;
        do {
            iArr[(int)(f1 + 1)] = iArr[(int)(f1)];
            iFld <<= iFld;
            byArr[(int)(f1)] >>= (byte)2;
            i19 = i;
            i19 -= i20;
        } while (--f1 > 0);

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 s1 = " + i20 + "," + i21 + "," + s1);
        FuzzerUtils.out.println("by2 f1 iArr = " + by2 + "," + Float.floatToIntBits(f1) + "," +
            FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0954.instanceCount Test0954.bFld dFld = " + Test0954.instanceCount + "," + (Test0954.bFld ? 1 : 0)
            + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("iFld Test0954.lFld Test0954.lArrFld = " + iFld + "," + Test0954.lFld + "," +
                FuzzerUtils.checkSum(Test0954.lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0954 _instance = new Test0954();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
