// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0916 {

    public static final int N = 400;

    public static long instanceCount=4L;
    public static byte byFld=111;
    public static float fFld=90.895F;
    public static double dFld=112.63835;
    public int iFld=31234;
    public static byte[] byArrFld =new byte[N];
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public float[] fArrFld =new float[N];
    public long[][] lArrFld1 =new long[N][N];

    static {
        FuzzerUtils.init(Test0916.byArrFld, (byte) -80);
        FuzzerUtils.init(Test0916.iArrFld, -49706);
        FuzzerUtils.init(Test0916.lArrFld, 2496170903L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        double d=0.67302;
        int i11=-49844;
        int i12=-48890;
        int i13=46;
        int i14=-4;
        int i15=253;
        int[] iArr =new int[N];
        float f1=0.863F;

        FuzzerUtils.init(iArr, -26238);

        d = i11;
        for (long l : Test0916.lArrFld) {
            i11 = (int)1.122817;
            for (i12 = 4; 1 < i12; --i12) {
                iArr[i12 - 1] = (int) Test0916.instanceCount;
                for (i14 = i12; i14 < 2; i14++) {
                    i13 = i13;
                }
            }
            i13 += (int)f1;
            l = i15;
            d = i13;
            Test0916.iArrFld[(-79 >>> 1) % N] &= (int) -3061041843L;
            switch (((i11 >>> 1) % 1) + 72) {
            case 72:
                i15 -= i13;
                break;
            default:
                iArr[(i15 >>> 1) % N] = (int)-242L;
                Test0916.iArrFld[(i13 >>> 1) % N] *= (int) Test0916.instanceCount;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i5) {

        int i6=-84, i7=-7295, i8=-7, i9=-240, i10=12;

        for (i6 = 9; i6 < 273; i6++) {
            i5 -= Test0916.byArrFld[i6];
            for (i8 = i6; i8 < 6; ++i8) {
                i10 = 1;
                while (++i10 < 1) {
                    Test0916.byFld += (byte) Test0916.iArrFld[i8];
                    i7 += i10;
                    switch ((i6 % 6) + 89) {
                    case 89:
                        i7 -= (Test0916.iArrFld[i10 - 1]--);
                        switch (((i10 % 1) * 5) + 67) {
                        case 68:
                            Test0916.instanceCount += iMeth();
                            Test0916.byFld >>= (byte) i6;
                            break;
                        default:
                            i5 %= (int)(i9 | 1);
                            if (true) break;
                        }
                        i5 += (i10 ^ i10);
                        break;
                    case 90:
                        Test0916.fFld = i6;
                    case 91:
                    case 92:
                        Test0916.byFld += (byte) (9 + (i10 * i10));
                        break;
                    case 93:
                        Test0916.instanceCount += (((i10 * i7) + i7) - i5);
                        break;
                    case 94:
                        i9 = i5;
                    default:
                        Test0916.instanceCount = i10;
                    }
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10;
    }

    public static void vMeth(int i2, float f, short s) {

        int i3=3, i4=-7588, i16=0, i17=6, i18=249, i19=35, i20=-38710, i21=-49843;
        boolean b=true;

        for (i3 = 11; 340 > i3; ++i3) {
            vMeth1(-10);
            for (i16 = 1; i16 < 5; i16++) {
                for (i18 = 1; 2 > i18; ++i18) {
                    i2 |= i17;
                }
                Test0916.iArrFld[i3 + 1] -= i4;
                i4 += (i16 - i19);
                i2 = i19;
                for (i20 = 1; 2 > i20; ++i20) {
                    i17 += -27;
                    i17 += (int)(0.993F + (i20 * i20));
                    i21 = i19;
                    Test0916.instanceCount = 13;
                    if (b) continue;
                    i2 += (((i20 * i21) + s) - i4);
                }
            }
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + s + i3 + i4 + i16 + i17 + i18 + i19 + i20 + i21 + (b ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=205, i1=-11, i22=166, i23=7, i24=174, i25=25960, i26=-47714, i27=-42406, i28=-14, i29=164, i30=-14687,
            i31=-1;
        short s1=-4132;
        boolean b1=false;

        Test0916.instanceCount -= Test0916.instanceCount;
        i = 1;
        do {
            i1 -= (-(Test0916.byFld--));
        } while (++i < 123);
        vMeth(i, Test0916.fFld, s1);
        for (i22 = 2; 375 > i22; i22 += 3) {
            i24 = 1;
            do {
                for (i25 = 1; 1 > i25; i25 += 2) {
                    Test0916.byFld += (byte) i25;
                    Test0916.instanceCount = (long) Test0916.dFld;
                    Test0916.instanceCount = i24;
                    i27 += (((i25 * i24) + Test0916.instanceCount) - i1);
                }
                for (i28 = i22; i28 < 1; i28++) {
                    if (b1) continue;
                    iFld ^= -2;
                    switch (((i29 >>> 1) % 2) + 36) {
                    case 36:
                        fArrFld[i22] += i27;
                        i26 += (((i28 * i) + i25) - i1);
                        break;
                    case 37:
                        iFld *= s1;
                        iFld >>>= (int) Test0916.instanceCount;
                        break;
                    }
                    i1 += (i28 ^ Test0916.instanceCount);
                    Test0916.iArrFld[i22] -= i22;
                    i23 -= (int)-108L;
                    b1 = true;
                }
                Test0916.instanceCount &= Test0916.instanceCount;
                fArrFld[i24 + 1] = iFld;
                for (i30 = 1; 1 < i30; i30--) {
                    Test0916.fFld = i28;
                    lArrFld1 = lArrFld1;
                    i29 += i30;
                    iFld = Test0916.byFld;
                }
            } while (++i24 < 202);
        }

        FuzzerUtils.out.println("i i1 s1 = " + i + "," + i1 + "," + s1);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 b1 = " + i28 + "," + i29 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i30 i31 = " + i30 + "," + i31);

        FuzzerUtils.out.println("Test0916.instanceCount Test0916.byFld Test0916.fFld = " + Test0916.instanceCount + "," + Test0916.byFld +
                "," + Float.floatToIntBits(Test0916.fFld));
        FuzzerUtils.out.println("Test0916.dFld iFld Test0916.byArrFld = " + Double.doubleToLongBits(Test0916.dFld) + "," + iFld +
                "," + FuzzerUtils.checkSum(Test0916.byArrFld));
        FuzzerUtils.out.println("Test0916.iArrFld Test0916.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test0916.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0916.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("lArrFld1 = " + FuzzerUtils.checkSum(lArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0916 _instance = new Test0916();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
