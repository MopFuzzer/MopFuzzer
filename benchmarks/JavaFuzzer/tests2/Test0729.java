// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0729 {

    public static final int N = 400;

    public static long instanceCount=-1126617899L;
    public static float fFld=1.573F;
    public static byte byFld=19;
    public static volatile boolean bFld=false;
    public static double dFld=-2.39957;
    public static volatile int iFld=133;
    public static long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0729.lArrFld, -57180L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i2) {

        float f=0.262F;

        f = i2;
        Test0729.instanceCount *= i2;
        vMeth_check_sum += i2 + Float.floatToIntBits(f);
    }

    public static int iMeth1() {

        int i3=-96;
        int i4=-2;
        int i5=166;
        int i6=-14;
        int[] iArr1 =new int[N];
        long l=249L;

        FuzzerUtils.init(iArr1, -32794);

        vMeth(-217);
        for (i3 = 13; 219 > i3; i3++) {
            i4 = (int) Test0729.instanceCount;
            iArr1[i3] += i3;
            Test0729.lArrFld[i3][i3] = Test0729.instanceCount;
            try {
                i4 = (i3 / -167);
                iArr1[i3 + 1] = (i3 / i4);
                i4 = (i4 / -51290);
            } catch (ArithmeticException a_e) {}
            i5 = 1;
            do {
                l = 1;
                while (++l < 1) {
                    i4 >>= i4;
                }
                i4 = i5;
                i6 = 1;
                while (++i6 < 1) {
                    Test0729.fFld = -211;
                    Test0729.byFld %= (byte) (i5 | 1);
                    i4 += Test0729.byFld;
                    Test0729.fFld += -25847;
                }
            } while (++i5 < 8);
        }
        long meth_res = i3 + i4 + i5 + l + i6 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i1=-2;
        int i7=0;
        int i8=3;
        int i9=-37282;
        int i10=221;
        int[] iArr2 =new int[N];
        int[][] iArr3 =new int[N][N];
        byte by=46;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 13.150F);
        FuzzerUtils.init(iArr2, -216);
        FuzzerUtils.init(iArr3, -23357);

        i1 ^= -18;
        fArr = fArr;
        by = (byte)((-Math.min(i1, 42716)) * ((37699L + (i1 + i1)) * (-iMeth1())));
        for (i7 = 1; 138 > i7; ++i7) {
            i1 += i7;
            if (Test0729.bFld) {
                iArr2[i7 + 1] -= i7;
                i1 -= i7;
            }
            for (i9 = i7; i9 < 11; i9++) {
                iArr2[i7] += i9;
                Test0729.bFld = false;
                Test0729.fFld *= i1;
                i10 += i9;
                i1 -= i1;
                iArr3 = FuzzerUtils.int2array(N, (int)4);
            }
        }
        long meth_res = i1 + by + i7 + i8 + i9 + i10 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=1;
        int i11=-1;
        int i12=217;
        int i13=25477;
        int i14=226;
        int i15=-12;
        int i16=-59;
        int i17=13;
        int[] iArr =new int[N];
        long l1=-14L;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(iArr, 5);
        FuzzerUtils.init(fArr1, -105.951F);

        Test0729.lArrFld[(i >>> 1) % N][(i >>> 1) % N] = iArr[(i >>> 1) % N];
        i = (iMeth() % (i | 1));
        fArr1[(i >>> 1) % N] = i;
        i = i;
        iArr[(i >>> 1) % N] += i;
        Test0729.fFld -= i;
        i -= (int) Test0729.instanceCount;
        for (i11 = 9; i11 < 162; i11++) {
            i = Test0729.byFld;
        }
        Test0729.instanceCount = i12;
        i12 = i12;
        Test0729.fFld = i12;
        for (i13 = 21; i13 < 372; i13++) {
            i12 <<= i;
            switch (((i13 % 5) * 5) + 79) {
            case 82:
                iArr[i13] = i12;
            case 94:
            case 99:
                Test0729.instanceCount = Test0729.instanceCount;
                Test0729.lArrFld[i13 - 1] = FuzzerUtils.long1array(N, (long) 7576518307786089544L);
                i14 += (int) Test0729.instanceCount;
                break;
            case 83:
            case 87:
                for (l1 = 2; 72 > l1; ++l1) {
                    for (i16 = 1; 2 > i16; i16++) {
                        i += (((i16 * Test0729.fFld) + i15) - Test0729.instanceCount);
                        Test0729.dFld += i11;
                        Test0729.instanceCount = l1;
                        Test0729.iFld += i16;
                        i15 += (((i16 * Test0729.fFld) + i12) - i13);
                    }
                    Test0729.bFld = Test0729.bFld;
                }
                Test0729.iFld -= i17;
                iArr = FuzzerUtils.int1array(N, (int)-41913);
                break;
            }
            i >>= -187;
        }

        FuzzerUtils.out.println("i i11 i12 = " + i + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 l1 = " + i13 + "," + i14 + "," + l1);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("iArr fArr1 = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0729.instanceCount Test0729.fFld Test0729.byFld = " + Test0729.instanceCount + "," +
                Float.floatToIntBits(Test0729.fFld) + "," + Test0729.byFld);
        FuzzerUtils.out.println("Test0729.bFld Test0729.dFld Test0729.iFld = " + (Test0729.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0729.dFld) + "," + Test0729.iFld);
        FuzzerUtils.out.println("Test0729.lArrFld = " + FuzzerUtils.checkSum(Test0729.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0729 _instance = new Test0729();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
