// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0205 {

    public static final int N = 400;

    public static long instanceCount=-6810638483672596632L;
    public static int iFld=5;
    public static byte byFld=65;
    public static volatile long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0205.lArrFld, 14L);
        FuzzerUtils.init(Test0205.iArrFld, -194);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i4=-12;
        int i5=-19750;
        int i6=-3;
        int i7=-2;
        int i8=-121;
        int i9=-15455;
        int i10=9;
        int i11=-230;
        int[] iArr2 =new int[N];
        float f1=0.43F;
        float[] fArr =new float[N];
        boolean b=true;
        long[] lArr =new long[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr2, -43878);
        FuzzerUtils.init(lArr, -13L);
        FuzzerUtils.init(dArr, -2.42841);
        FuzzerUtils.init(fArr, -13.654F);

        iArr2[(Test0205.iFld >>> 1) % N] -= Test0205.iFld;
        i4 = 1;
        while (++i4 < 254) {
            for (i5 = 1; 6 > i5; i5++) {
                double d3=-16.58506;
                f1 *= (float)d3;
                Test0205.iFld = (int) f1;
                Test0205.iFld = i4;
                Test0205.iFld <<= i5;
                lArr[i5] >>= i4;
                if (b) continue;
                i7 >>= (int) Test0205.instanceCount;
                dArr[i5] -= 10;
            }
            for (i8 = 1; i8 < 6; ++i8) {
                for (i10 = 1; i10 < 2; ++i10) {
                    iArr2[i4] += i6;
                    fArr[i4 + 1] = f1;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i7 + i8 + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        long l1=153L;
        float f=31.829F;
        int i=11;
        int i1=-40220;
        int i2=17458;
        int i3=-63916;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 72);

        l1 = 1;
        do {
            double d2=-1.111247;
            f *= (float) ((iArr1[(int) (l1)] - (d2--)) + (Test0205.iFld++));
            for (i = 1; 15 > i; ++i) {
                switch ((int)((l1 % 6) + 15)) {
                case 15:
                    for (i2 = 2; i2 > 1; i2 -= 2) {
                        i1 += (int)f;
                        Test0205.byFld += (byte) (--iArr1[(int) (l1)]);
                        Test0205.iFld += (-25011 + (i2 * i2));
                        Test0205.iFld = (int) (-Math.abs(Math.abs(2.658F)));
                    }
                    iMeth1();
                    i1 &= i2;
                    break;
                case 16:
                    i3 = (int)1.436F;
                    Test0205.iFld = (int) Test0205.instanceCount;
                    iArr1[i - 1] = (int) Test0205.instanceCount;
                    break;
                case 17:
                    i3 = 52039;
                    break;
                case 18:
                    i3 = i3;
                    break;
                case 19:
                    Test0205.iFld += (i | i2);
                    break;
                case 20:
                    Test0205.iFld += (((i * i2) + Test0205.instanceCount) - i2);
                    break;
                }
            }
        } while ((l1 += 3) < 306);
        long meth_res = l1 + Float.floatToIntBits(f) + i + i1 + i2 + i3 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d, double d1, long l) {

        float f2=0.867F;
        float[] fArr1 =new float[N];
        int[] iArr =new int[N];
        double[] dArr1 =new double[N];

        FuzzerUtils.init(iArr, 14);
        FuzzerUtils.init(fArr1, -119.750F);
        FuzzerUtils.init(dArr1, 1.122587);

        iArr[(Test0205.iFld >>> 1) % N] -= (int) (Math.sqrt(++d) + ((l++) * Test0205.iFld));
        Test0205.iFld += (int) ((iMeth() - l) + Test0205.iFld);
        for (int i12 : iArr) {
            iArr[(i12 >>> 1) % N] -= Test0205.iFld;
            Test0205.iFld %= (int) (Test0205.instanceCount | 1);
            Test0205.lArrFld[(i12 >>> 1) % N] = Test0205.iFld;
            f2 *= Test0205.iFld;
            f2 *= 49190;
        }
        for (int i13 : iArr) {
            Test0205.iFld = i13;
        }
        Test0205.iFld += Test0205.iFld;
        iArr[(Test0205.iFld >>> 1) % N] = (int) 2.856F;
        l *= Test0205.iFld;
        Test0205.iFld += Test0205.iFld;
        dArr1[(Test0205.iFld >>> 1) % N] += Test0205.iFld;
        vMeth_check_sum += Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + l + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        double d4=-127.94223;
        int i14=4, i15=-22785, i16=30801, i17=1530, i18=4, i19=2, i20=90, i21=-57268, i22=0, i23=41421;
        float f4=8.518F;
        boolean b1=false;

        vMeth(d4, d4, Test0205.instanceCount);
        Test0205.iArrFld[(Test0205.iFld >>> 1) % N] = (int) Test0205.instanceCount;
        for (i14 = 7; i14 < 384; ++i14) {
            for (i16 = i14; i16 < 67; i16++) {
                d4 += i15;
                Test0205.iArrFld[i14 - 1] *= (int) -175L;
                for (i18 = 1; i18 < 1; i18++) {
                    i15 += (i18 + i19);
                    i19 += (int)1.6477;
                    i17 >>>= (int) Test0205.instanceCount;
                    if (b1) {
                        i17 *= (int)-69.110357;
                        Test0205.instanceCount += (((i18 * i18) + Test0205.iFld) - f4);
                        i17 += i18;
                        Test0205.iArrFld[i14] >>= (int) -56032L;
                    } else {
                        Test0205.instanceCount -= Test0205.iFld;
                        Test0205.instanceCount -= i15;
                        i19 >>= Test0205.byFld;
                    }
                    Test0205.byFld <<= (byte) Test0205.iFld;
                    if (b1) break;
                    Test0205.lArrFld[i18 + 1] += i18;
                }
                Test0205.iFld += i19;
            }
            for (i20 = 2; i20 < 67; ++i20) {
                switch (((i18 >>> 1) % 6) + 5) {
                case 5:
                    for (i22 = 2; i22 > 1; --i22) {
                        i15 += (i22 * i22);
                        Test0205.instanceCount += (((i22 * i15) + Test0205.byFld) - i15);
                    }
                    break;
                case 6:
                    f4 -= 7;
                case 7:
                    Test0205.instanceCount += (((i20 * f4) + f4) - i17);
                    i15 = Test0205.byFld;
                case 8:
                    Test0205.iArrFld[i14 - 1] += i16;
                case 9:
                    Test0205.instanceCount = Test0205.instanceCount;
                    break;
                case 10:
                    i23 -= (int)f4;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("d4 i14 i15 = " + Double.doubleToLongBits(d4) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 f4 b1 = " + i19 + "," + Float.floatToIntBits(f4) + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 = " + i23);

        FuzzerUtils.out.println("Test0205.instanceCount Test0205.iFld Test0205.byFld = " + Test0205.instanceCount + "," + Test0205.iFld +
                "," + Test0205.byFld);
        FuzzerUtils.out.println("Test0205.lArrFld Test0205.iArrFld = " + FuzzerUtils.checkSum(Test0205.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0205.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0205 _instance = new Test0205();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
