// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0129 {

    public static final int N = 400;

    public static long instanceCount=-190L;
    public static byte byFld=-79;
    public int iFld=-43651;
    public static double dFld=1.15839;
    public short sFld=-32537;
    public static boolean bFld=false;
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0129.byArrFld, (byte) -34);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4) {

        int i5=195;
        int i6=-27759;
        int i7=21953;
        int i8=18252;
        int[] iArr1 =new int[N];
        double d1=-1.118239;
        float f=0.71F;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, -215);
        FuzzerUtils.init(fArr, 98.611F);

        Test0129.instanceCount *= Test0129.instanceCount;
        switch ((((-13 >>> 1) % 2) * 5) + 21) {
        case 22:
            i5 = 1;
            while (++i5 < 235) {
                i6 = 1;
                while (++i6 < 7) {
                    for (i7 = 1; i7 < 1; ++i7) {
                        i4 <<= i6;
                        i8 <<= i7;
                        iArr1[i6 + 1] -= i8;
                        d1 += Test0129.instanceCount;
                        fArr[i6 - 1] *= Test0129.instanceCount;
                        Test0129.instanceCount = (long) f;
                        iArr1[i7] -= i8;
                    }
                    f -= i4;
                    iArr1[i5] >>= i5;
                    Test0129.byFld -= (byte) f;
                }
            }
            break;
        case 24:
            iArr1 = iArr1;
            break;
        default:
            Test0129.instanceCount += Test0129.instanceCount;
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i3) {

        int i9=2;
        int i10=-8;
        int i11=36;
        int i12=11;
        int i13=12;
        int[] iArr2 =new int[N];
        float f1=2.213F, f2=-10.237F;
        double d2=2.32606;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -6L);
        FuzzerUtils.init(iArr2, 139);
        FuzzerUtils.init(dArr, -90.17847);

        vMeth2(i3);
        for (i9 = 6; 273 > i9; ++i9) {
            if (false) {
                Test0129.instanceCount = Test0129.instanceCount;
                lArr[i9] <<= 152L;
            }
            f1 = 6;
            do {
                i3 = i3;
                i10 = i3;
                f2 += (f1 - i3);
                Test0129.instanceCount += (long) f1;
                for (d2 = 1; d2 < 1; d2++) {
                    iArr2[(int)(d2 + 1)] /= (int)(i9 | 1);
                }
                for (i12 = 1; i12 < 1; i12++) {
                    dArr[(int) (f1)] = Test0129.instanceCount;
                    iArr2[(14 >>> 1) % N] += i11;
                }
            } while (--f1 > 0);
        }
        vMeth1_check_sum += i3 + i9 + i10 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d2) + i11 + i12 + i13 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i, double d) {

        int i1=-17644;
        int i2=3865;
        int i14=62;
        int i15=-117;
        int i16=-32682;
        int[] iArr =new int[N];
        double d3=-1.123965;
        float f3=0.625F;

        FuzzerUtils.init(iArr, 14);

        for (i1 = 9; i1 < 153; i1++) {
            iArr[i1 + 1] += iArr[i1];
        }
        vMeth1(i2);
        for (d3 = 12; d3 < 317; ++d3) {
            Test0129.instanceCount += (long) (d3 - f3);
            f3 *= i14;
            d -= i1;
            Test0129.instanceCount += (long) (((d3 * i14) + Test0129.instanceCount) - i);
            i14 += (int) (((d3 * Test0129.byFld) + Test0129.byFld) - i2);
            switch ((int)(((d3 % 2) * 5) + 58)) {
            case 66:
                for (i15 = 5; 1 < i15; i15--) {
                    Test0129.instanceCount -= (long) f3;
                    iArr[i15] -= (int) Test0129.instanceCount;
                    i = (int) Test0129.instanceCount;
                }
                Test0129.instanceCount <<= i14;
                break;
            case 64:
                i2 += (int)(((d3 * i) + i15) - i14);
                break;
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + Double.doubleToLongBits(d3) + i14 +
            Float.floatToIntBits(f3) + i15 + i16 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=-48320;
        int i18=-5;
        int i19=-23;
        int i20=-3627;
        int i21=-7;
        int i22=-2;
        int i23=-10;
        int i24=7;
        int i25=-41280;
        int i26=-5;
        int i27=-58;
        int i28=-44443;
        int[] iArr3 =new int[N];
        float f4=-2.814F, f5=0.487F;
        long l=-2275216434096482976L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 1647611515L);
        FuzzerUtils.init(iArr3, -41362);

        vMeth(iFld, Test0129.dFld);
        iFld -= 27;
        iFld = sFld;
        for (i17 = 3; 171 > i17; i17++) {
            for (i19 = 8; i19 < 149; i19++) {
                Test0129.instanceCount += -64567;
                for (i21 = 1; i21 < 2; i21++) {
                    i18 = sFld;
                    i23 += (i21 * i21);
                    i22 *= i17;
                    i20 += (i21 * i21);
                    iFld -= 13;
                    i18 += (i21 - i18);
                }
                lArr1[i19 - 1] = i19;
                for (i24 = 1; 2 > i24; ++i24) {
                    i25 += (int)f4;
                    l += (7519 + (i24 * i24));
                    lArr1[i19] -= -88;
                    try {
                        i23 = (i17 % i20);
                        iArr3[i19] = (i24 / -41);
                        i23 = (iArr3[i19] % i20);
                    } catch (ArithmeticException a_e) {}
                    iArr3[i17] += (int) Test0129.instanceCount;
                }
                Test0129.byFld = (byte) -127;
                i23 = i24;
            }
            Test0129.byFld *= (byte) i17;
            if (Test0129.bFld) {
                for (i26 = 4; i26 < 149; i26++) {
                    for (f5 = 1; f5 < 2; ++f5) {
                        sFld = (short)20786;
                        try {
                            i18 = (-62561 / i18);
                            i22 = (iArr3[i26] / 207);
                            i23 = (iFld % 1104940758);
                        } catch (ArithmeticException a_e) {}
                        Test0129.byArrFld[i17] -= (byte) i25;
                        iArr3[i17 + 1] -= i27;
                    }
                }
            } else {
                l += (-36378 + (i17 * i17));
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f4 l i26 = " + Float.floatToIntBits(f4) + "," + l + "," + i26);
        FuzzerUtils.out.println("i27 f5 i28 = " + i27 + "," + Float.floatToIntBits(f5) + "," + i28);
        FuzzerUtils.out.println("lArr1 iArr3 = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0129.instanceCount Test0129.byFld iFld = " + Test0129.instanceCount + "," + Test0129.byFld + "," +
            iFld);
        FuzzerUtils.out.println("Test0129.dFld sFld Test0129.bFld = " + Double.doubleToLongBits(Test0129.dFld) + "," + sFld + "," +
                (Test0129.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0129.byArrFld = " + FuzzerUtils.checkSum(Test0129.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0129 _instance = new Test0129();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
