// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0490 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static double dFld=60.110441;
    public static long lFld=4117789878L;
    public static int iFld=-22879;
    public static float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0490.fArrFld, 8.726F);
        FuzzerUtils.init(Test0490.iArrFld, 170);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        double d=0.69206;
        int i6=10;
        int i7=-47210;
        int i8=9;
        int[] iArr =new int[N];
        boolean b3=true;

        FuzzerUtils.init(iArr, -32496);

        d = 1;
        while ((d += 2) < 257) {
            for (i6 = 1; i6 < 12; i6++) {
                i7 <<= (int) Test0490.instanceCount;
                Test0490.instanceCount -= Test0490.instanceCount;
                Test0490.dFld = -7851821189633605099L;
            }
            i7 += i6;
            Test0490.fArrFld[(int) (d)] = i6;
            b3 = b3;
            i8 = 1;
            while (++i8 < 12) {
                Test0490.instanceCount = -5197352341121701973L;
            }
            iArr[(int)(d - 1)] -= 66;
        }
        i7 = i7;
        Test0490.instanceCount -= Test0490.lFld;
        vMeth_check_sum += Double.doubleToLongBits(d) + i6 + i7 + (b3 ? 1 : 0) + i8 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(boolean b1, boolean b2, float f1) {

        int i10=72, i11=-251, i12=-52877, i13=-12925, i14=-4;
        boolean[][] bArr1 =new boolean[N][N];

        FuzzerUtils.init(bArr1, false);

        vMeth();
        Test0490.iFld = -88;
        if (b1) {
            bArr1[(Test0490.iFld >>> 1) % N][(Test0490.iFld >>> 1) % N] = b1;
            for (int i9 : Test0490.iArrFld) {
                switch (((Test0490.iFld >>> 1) % 2) + 65) {
                case 65:
                    Test0490.iArrFld[(i9 >>> 1) % N] += i9;
                    Test0490.instanceCount = i9;
                    Test0490.lFld -= i9;
                    for (i10 = 1; i10 < 4; i10++) {
                        for (i12 = 1; 2 > i12; i12++) {
                            i13 >>= Test0490.iFld;
                            if (true) {
                                i14 = i14;
                            } else if (b2) {
                                Test0490.iArrFld[i10 - 1] *= (int) f1;
                            } else if (b1) {
                                Test0490.iFld <<= Test0490.iFld;
                            } else {
                                Test0490.instanceCount >>= 7;
                            }
                        }
                    }
                case 66:
                    i11 += (int)f1;
                }
            }
        } else if (b2) {
            Test0490.instanceCount = 7079846905053983612L;
        } else {
            Test0490.iArrFld[(Test0490.iFld >>> 1) % N] *= 31510;
        }
        long meth_res = (b1 ? 1 : 0) + (b2 ? 1 : 0) + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(bArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i5) {

        boolean b=true;
        boolean[][] bArr =new boolean[N][N];
        float f2=0.789F;
        double d1=1.14556;
        int i16=115, i17=93, i18=-21112, i19=-47375, i20=-9, i21=-331;

        FuzzerUtils.init(bArr, true);

        b = (!(bArr[(i5 >>> 1) % N][(i5 >>> 1) % N] = (63.418F != (17936 + iMeth(b, false, f2)))));
        Test0490.iFld *= i5;
        d1 = 1;
        while (++d1 < 223) {
            Test0490.iFld += (int) (d1 - i5);
            for (i16 = 1; 7 > i16; ++i16) {
                for (i18 = 1; 2 > i18; ++i18) {
                    Test0490.dFld = i18;
                    Test0490.lFld -= i5;
                }
                Test0490.iArrFld[i16 + 1] = i18;
                for (i20 = 1; i20 < 2; ++i20) {
                    Test0490.iArrFld[i20] = Test0490.iFld;
                }
                i17 = (int)25546L;
                i5 = i19;
                Test0490.lFld = i18;
            }
            f2 = -31393;
        }
        long meth_res = i5 + (b ? 1 : 0) + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i16 + i17 + i18 +
            i19 + i20 + i21 + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0;
        int i1=220;
        int i2=-11;
        int i3=53746;
        int i4=80;
        int i22=7;
        int i23=29317;
        int i24=-2993;
        int i25=64;
        int i26=-5;
        int i27=-9;
        int i28=-3202;
        int[][] iArr1 =new int[N][N];
        float f=112.572F;
        boolean b4=false;
        byte by=24;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(iArr1, 4);
        FuzzerUtils.init(sArr, (short)17060);

        i -= (int)Float.intBitsToFloat((int)((i++) + (i - f)));
        for (i1 = 23; i1 < 387; ++i1) {
            Test0490.instanceCount &= (--i);
            f /= (((long) (-Test0490.dFld)) | 1);
            for (i3 = 1; i3 < 69; i3++) {
                i *= (int)(((i % (i2 | 1)) * (i4--)) * (i2 + lMeth(i4)));
                for (i22 = 1; i22 < 2; ++i22) {
                    Test0490.lFld += (-6 + (i22 * i22));
                    i += (int) Test0490.instanceCount;
                    i += Test0490.iFld;
                    i4 = (int)-46367L;
                }
            }
            i2 = -2;
            if (b4) continue;
            i *= i4;
        }
        Test0490.instanceCount %= (Test0490.iFld | 1);
        for (i24 = 8; 203 > i24; i24++) {
            i23 <<= i4;
            i = i1;
            switch (((-231 >>> 1) % 6) + 60) {
            case 60:
                for (i26 = 129; i26 > 6; i26--) {
                    Test0490.iFld *= (int) Test0490.lFld;
                    i27 = i4;
                    i27 = (int)118.759F;
                    Test0490.dFld = f;
                    Test0490.instanceCount += i26;
                    i28 = 1;
                    while (++i28 < 2) {
                        i4 += i2;
                        i25 = i26;
                        Test0490.instanceCount %= (by | 1);
                        iArr1 = iArr1;
                    }
                }
            case 61:
                i = i4;
                break;
            case 62:
                Test0490.iArrFld[i24 + 1] *= 155;
                break;
            case 63:
                sArr[i24 + 1][i24 - 1] -= (short)f;
                break;
            case 64:
                Test0490.fArrFld[i24 + 1] = f;
            case 65:
                iArr1[i24][i24 - 1] -= 40;
            default:
                Test0490.iArrFld[i24] = -50592;
            }
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i22 i23 b4 = " + i22 + "," + i23 + "," + (b4 ? 1 : 0));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 by = " + i27 + "," + i28 + "," + by);
        FuzzerUtils.out.println("iArr1 sArr = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0490.instanceCount Test0490.dFld Test0490.lFld = " + Test0490.instanceCount + "," +
                Double.doubleToLongBits(Test0490.dFld) + "," + Test0490.lFld);
        FuzzerUtils.out.println("Test0490.iFld Test0490.fArrFld Test0490.iArrFld = " + Test0490.iFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0490.fArrFld)) + "," + FuzzerUtils.checkSum(Test0490.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0490 _instance = new Test0490();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
