// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0152 {

    public static final int N = 400;

    public static long instanceCount=43881L;
    public static int iFld=32622;
    public static double dFld=-112.120608;
    public boolean bFld=true;
    public static volatile long[] lArrFld =new long[N];
    public static volatile byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0152.lArrFld, 959535837L);
        FuzzerUtils.init(Test0152.byArrFld, (byte) 48);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, long l3, long l4) {

        int i3=-46634;
        int i4=-7;
        int i5=0;
        int i6=244;
        int[][] iArr1 =new int[N][N];
        byte by1=-47, by2=55;

        FuzzerUtils.init(iArr1, 48856);

        for (i3 = 6; i3 < 189; i3++) {
            Test0152.lArrFld = Test0152.lArrFld;
            i5 = 1;
            do {
                i4 += i5;
                l2 = l2;
            } while ((i5 += 2) < 9);
            Test0152.iFld = 2;
        }
        Test0152.iFld >>= by1;
        Test0152.iFld = by2;
        i4 += i5;
        i4 = i5;
        l4 -= l3;
        by2 = (byte)109;
        Test0152.iFld = (int) Test0152.dFld;
        Test0152.iFld = (int) Test0152.instanceCount;
        iArr1[(i6 >>> 1) % N][(i3 >>> 1) % N] += i6;
        vMeth1_check_sum += l2 + l3 + l4 + i3 + i4 + i5 + by1 + by2 + i6 + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(long l, long l1, int i2) {

        int i7=14969, i8=5, i9=-60935, i10=-6860, i11=110, i12=2, i13=97, i14=3, i15=-119;
        long l5=3108908656727887066L;
        float f=42.625F;
        short s2=-13275;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 2.65638);

        vMeth1(l, Test0152.instanceCount, l);
        for (i7 = 1; i7 < 146; ++i7) {
            for (i9 = 1; i9 < 11; i9++) {
                Test0152.dFld *= -14;
            }
            for (i11 = 1; i11 < 11; ++i11) {
                l5 *= i12;
                switch ((((Test0152.iFld >>> 1) % 3) * 5) + 18) {
                case 24:
                    i13 = 1;
                    do {
                        f -= l5;
                        switch ((i13 % 9) + 50) {
                        case 50:
                            i12 = i9;
                            Test0152.instanceCount += (-1L + (i13 * i13));
                            i12 = (int)l1;
                            i2 = -4;
                            break;
                        case 51:
                            if (false) continue;
                            break;
                        case 52:
                            f += l1;
                            break;
                        case 53:
                            l5 &= i7;
                            break;
                        case 54:
                            l -= Test0152.iFld;
                            break;
                        case 55:
                            i12 += i13;
                            break;
                        case 56:
                            i12 >>= s2;
                            break;
                        case 57:
                            s2 /= (short) (Test0152.iFld | 1);
                            break;
                        case 58:
                            i10 &= i14;
                            break;
                        default:
                            i2 += (i13 | l5);
                        }
                    } while (++i13 < 2);
                    break;
                case 29:
                    l1 |= i11;
                    break;
                case 23:
                    i12 += i11;
                    break;
                default:
                    dArr[i7] = i15;
                }
            }
        }
        long meth_res = l + l1 + i2 + i7 + i8 + i9 + i10 + i11 + i12 + l5 + i13 + Float.floatToIntBits(f) + s2 + i14 +
            i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        short s1=-27927;
        int i1=0;
        int[] iArr =new int[N];
        byte by=74;

        FuzzerUtils.init(iArr, 42722);

        s1 *= (short)(((i1 - i1) + (-i1)) + (++by));
        i1 <<= i1;
        iArr[(i1 >>> 1) % N] = (int)((by + i1) + Math.abs(lMeth(-234L, 3L, 30614)));
        vMeth_check_sum += s1 + i1 + by + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-4;
        int i16=-7;
        int i17=3;
        int i18=-250;
        int i19=148;
        int i20=163;
        int i21=224;
        int i22=0;
        int i23=-143;
        int i24=112;
        int i25=210;
        int i26=240;
        int i27=-25711;
        int[] iArr2 =new int[N];
        short s=9092;
        long l6=7718460296931945952L;
        float f1=-107.38F;

        FuzzerUtils.init(iArr2, 48764);

        i = 1;
        try {
            Test0152.instanceCount = (s++);
            i -= (int) (++Test0152.instanceCount);
        }
        catch (UserDefinedExceptionTest exc1) {
            if (bFld) {
                vMeth();
                for (i16 = 16; i16 < 367; i16++) {
                    for (i18 = i16; 72 > i18; ++i18) {
                        Test0152.instanceCount = Test0152.iFld;
                    }
                    switch (((i16 >>> 1) % 2) + 122) {
                    case 122:
                        Test0152.iFld -= (int) Test0152.instanceCount;
                        Test0152.dFld = 24325;
                        Test0152.iFld -= 8;
                        break;
                    case 123:
                        for (i20 = 2; i20 < 72; ++i20) {
                            Test0152.iFld *= 2;
                            i21 /= (int)(0 | 1);
                            Test0152.dFld *= -235;
                            Test0152.instanceCount >>= Test0152.instanceCount;
                        }
                        iArr2[i16 + 1] |= i16;
                        break;
                    default:
                        if (bFld) {
                            for (i22 = 4; i22 < 72; i22++) {
                                Test0152.iFld <<= i23;
                            }
                            i21 = i;
                            i21 = (int)207L;
                        } else {
                            for (i24 = 4; i24 < 72; i24 += 2) {
                                if (false) continue;
                                Test0152.byArrFld[i16 + 1] /= (byte) (i21 | 1);
                                for (i26 = 3; i26 > 1; i26--) {
                                    l6 += (((i26 * f1) + i) - l6);
                                    Test0152.instanceCount *= l6;
                                }
                            }
                        }
                    }
                }
            } else {
                iArr2[(i26 >>> 1) % N] = (int)61.331F;
            }
        }

        FuzzerUtils.out.println("i s i16 = " + i + "," + s + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 l6 = " + i26 + "," + i27 + "," + l6);
        FuzzerUtils.out.println("f1 iArr2 = " + Float.floatToIntBits(f1) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0152.instanceCount Test0152.iFld Test0152.dFld = " + Test0152.instanceCount + "," + Test0152.iFld +
                "," + Double.doubleToLongBits(Test0152.dFld));
        FuzzerUtils.out.println("bFld Test0152.lArrFld Test0152.byArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0152.lArrFld) + "," + FuzzerUtils.checkSum(Test0152.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0152 _instance = new Test0152();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
