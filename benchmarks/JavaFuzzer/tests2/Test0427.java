// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0427 {

    public static final int N = 400;

    public static long instanceCount=-184L;
    public static short sFld=-23913;
    public static byte byFld=97;
    public static float fFld=52.840F;
    public static double dFld=-15.95917;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0427.iArrFld, 3183);
        FuzzerUtils.init(Test0427.lArrFld, 57087L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i3=-2, i4=-7, i5=-31393, i6=205;
        boolean b=false;
        float f2=123.961F;

        Test0427.instanceCount ^= i3;
        i3 = (int)-89L;
        switch ((((i3 >>> 1) % 8) * 5) + 64) {
        case 92:
            i4 = 1;
            while (++i4 < 252) {
                b = b;
                for (i5 = 1; i5 < 6; i5++) {
                    i3 += (i5 - i4);
                    if (i4 != 0) {
                    }
                    i6 += i6;
                    i6 *= i3;
                    i3 = i5;
                    if (i3 != 0) {
                    }
                }
                Test0427.sFld = (short) -224;
                i6 = 79;
                Test0427.iArrFld[i4 - 1] = i3;
            }
            break;
        case 96:
            f2 = i5;
            break;
        case 99:
            i3 += (int) Test0427.instanceCount;
        case 90:
            i3 = i6;
            break;
        case 74:
            i3 *= (int) Test0427.instanceCount;
        case 86:
            b = b;
            break;
        case 76:
        case 95:
            i6 = i6;
        }
        long meth_res = i3 + i4 + (b ? 1 : 0) + i5 + i6 + Float.floatToIntBits(f2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f, int i1, float f1) {

        int i2=-7394;
        int i7=0;
        int[][] iArr =new int[N][N];
        float f3=-2.191F;
        boolean b1=true;
        double d1=1.13443;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 151L);
        FuzzerUtils.init(iArr, 28732);

        Test0427.iArrFld[(i1 >>> 1) % N] = (--i1);
        if (b1) {
            i2 = 1;
            while (++i2 < 283) {
                lArr[i2] >>= (Test0427.instanceCount >>= i2);
                i1 += ((iMeth1() + i1) + i1);
                if (b1) {
                    f3 = 6;
                    while (--f3 > 0) {
                        i1 ^= i1;
                        i1 += i2;
                        Test0427.byFld *= (byte) Test0427.instanceCount;
                        i7 = 1;
                        do {
                            try {
                                i1 = (-217 % i7);
                                i1 = (i1 % -1688115311);
                                i1 = (214 % i7);
                            } catch (ArithmeticException a_e) {}
                            lArr[(int)(f3)] = i7;
                            i1 += (int)f3;
                            i1 += (((i7 * f1) + i2) - i2);
                        } while (--i7 > 0);
                    }
                } else if (b1) {
                    lArr[i2 + 1] = i2;
                } else {
                    iArr[i2][i2 + 1] *= -16075;
                }
            }
        } else if (b1) {
            d1 += i1;
        }
        long meth_res = Float.floatToIntBits(f) + i1 + Float.floatToIntBits(f1) + i2 + Float.floatToIntBits(f3) + i7 +
            (b1 ? 1 : 0) + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i9=-96, i10=57931, i11=6, i12=-189, i13=149, i14=-51391;
        long l1=6495803328840832615L;

        iMeth(Test0427.fFld, -131, Test0427.fFld);
        i9 = (int) Test0427.instanceCount;
        for (i10 = 2; i10 < 257; i10++) {
            for (l1 = 1; l1 < 6; l1++) {
                for (i13 = 2; i13 > l1; i13 -= 3) {
                    i9 /= (int) ((long) (Test0427.dFld) | 1);
                    if (true) break;
                    i11 = 53;
                    Test0427.dFld /= (l1 | 1);
                    switch ((int)(((l1 % 6) * 5) + 119)) {
                    case 139:
                        i11 += i13;
                        break;
                    case 122:
                        Test0427.iArrFld[i10 - 1] = Test0427.sFld;
                        i9 += (((i13 * Test0427.fFld) + l1) - i14);
                        i14 = i13;
                    case 133:
                    case 128:
                        Test0427.instanceCount += (i13 | i14);
                        break;
                    case 144:
                        Test0427.instanceCount += (0 + (i13 * i13));
                    case 123:
                        i12 += (int)(7106904903229374687L + (i13 * i13));
                        break;
                    default:
                        i12 >>= i13;
                    }
                }
            }
        }
        vMeth_check_sum += i9 + i10 + i11 + l1 + i12 + i13 + i14;
    }

    public void mainTest(String[] strArr1) {

        int i=231, i15=11143, i16=-73, i18=156, i19=-9, i20=-108, i21=10, i22=10, i23=207;
        double d=-5.32626;

        Test0427.sFld = (short) (-6L * ((64985 - (i - i)) + i));
        i = (int)(--d);
        vMeth();
        Test0427.lArrFld[(i >>> 1) % N] += Test0427.instanceCount;
        i -= 45841;
        for (i15 = 4; 314 > i15; ++i15) {
            for (i18 = 81; 3 < i18; --i18) {
                i20 = 1;
                do {
                    Test0427.iArrFld[i18 + 1] |= i18;
                    i *= i20;
                    Test0427.iArrFld[i20] |= i18;
                    Test0427.instanceCount *= Test0427.instanceCount;
                    if (bFld) {
                        Test0427.iArrFld = Test0427.iArrFld;
                        Test0427.instanceCount = i20;
                        Test0427.iArrFld[i18] -= (int) -1.718F;
                        i16 <<= i15;
                    } else {
                        Test0427.dFld = i18;
                    }
                    Test0427.iArrFld[i15 - 1] -= (int) d;
                    Test0427.instanceCount *= -11;
                } while (++i20 < 2);
                i *= i15;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test0427.iArrFld[i18] = (int) Test0427.fFld;
                    if (bFld) break;
                }
                Test0427.iArrFld[i15] *= (int) Test0427.instanceCount;
                i22 *= -12631;
                i23 = 1;
                do {
                    Test0427.byFld += (byte) (i23 + i18);
                    i22 += i21;
                } while (++i23 < 2);
                i19 = (int) Test0427.fFld;
            }
        }

        FuzzerUtils.out.println("i d i15 = " + i + "," + Double.doubleToLongBits(d) + "," + i15);
        FuzzerUtils.out.println("i16 i18 i19 = " + i16 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 = " + i23);

        FuzzerUtils.out.println("Test0427.instanceCount Test0427.sFld Test0427.byFld = " + Test0427.instanceCount + "," + Test0427.sFld +
                "," + Test0427.byFld);
        FuzzerUtils.out.println("Test0427.fFld Test0427.dFld bFld = " + Float.floatToIntBits(Test0427.fFld) + "," +
                Double.doubleToLongBits(Test0427.dFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0427.iArrFld Test0427.lArrFld = " + FuzzerUtils.checkSum(Test0427.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0427.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0427 _instance = new Test0427();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
