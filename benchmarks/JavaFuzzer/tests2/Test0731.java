// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0731 {

    public static final int N = 400;

    public static long instanceCount=834572053890372401L;
    public static volatile int iFld=-19719;
    public static int iFld1=30;
    public volatile double dFld=-2.51017;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0731.lArrFld, 11L);
        FuzzerUtils.init(Test0731.iArrFld, 68);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i1) {

        int i2=-36108, i3=863, i4=-17500, i5=171, i6=-92, i7=12;
        long l=-31731L;
        float f=-125.735F;
        boolean b=true;

        for (i2 = 173; i2 > 5; i2 -= 2) {
            Test0731.iFld += i2;
            if (false) {
                for (l = 18; l > 1; l -= 2) {
                    i4 /= -14;
                    Test0731.instanceCount ^= Test0731.iFld;
                    i5 = 1;
                    do {
                        f += i5;
                        Test0731.instanceCount >>= i2;
                        Test0731.instanceCount /= (Test0731.instanceCount | 1);
                        f += (i5 * i5);
                    } while (++i5 < 3);
                }
                for (i6 = 1; i6 < 18; i6++) {
                    Test0731.iFld += (i6 ^ i7);
                }
                vMeth1_check_sum += i1 + i2 + i3 + l + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + (b ? 1 : 0);
                return;
            } else if (b) {
                f += Test0731.instanceCount;
            } else if (b) {
                i4 += (i2 * i2);
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + l + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + (b ? 1 : 0);
    }

    public static void vMeth(short s, int i) {

        int i8=14;
        int i9=-10782;
        int i10=-55028;
        int i11=-27091;
        int[] iArr =new int[N];
        double d=-98.102241;
        float f1=0.530F;

        FuzzerUtils.init(iArr, -16996);

        vMeth1(Test0731.iFld1);
        Test0731.iFld1 <<= -251;
        for (i8 = 5; i8 < 175; ++i8) {
            Test0731.iFld += (i8 * i8);
            i10 = 9;
            while (--i10 > 0) {
                iArr[i10 - 1] *= i8;
                Test0731.iFld -= (int) d;
                Test0731.iFld = Test0731.iFld;
                i11 = 1;
                do {
                    Test0731.instanceCount *= (long) f1;
                    iArr[i8 + 1] = i;
                    Test0731.lArrFld[i11] += (long) f1;
                    Test0731.iFld = i10;
                    f1 = Test0731.instanceCount;
                    i9 = i11;
                } while (++i11 < 1);
            }
        }
        vMeth_check_sum += s + i + i8 + i9 + i10 + Double.doubleToLongBits(d) + i11 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth() {

        float f2=38.510F;

        vMeth((short)(-8929), -6819);
        f2 *= Test0731.iFld;
        vSmallMeth_check_sum += Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        int i12=0, i13=147, i14=-111, i15=-48294, i16=64603, i17=-47736, i18=-49252;
        byte by=-65;
        double d1=-2.87069;
        float f3=0.943F;

        Test0731.iFld = (Test0731.iFld++);
        for (int smallinvoc=0; smallinvoc<611; smallinvoc++) vSmallMeth();
        for (i12 = 12; i12 < 367; i12++) {
            i13 = Test0731.iFld;
        }
        Test0731.instanceCount -= Test0731.instanceCount;
        for (i14 = 292; i14 > 2; --i14) {
            boolean b1=false;
            b1 = b1;
            switch ((i14 % 4) + 108) {
            case 108:
                Test0731.instanceCount = Test0731.iFld;
                Test0731.iFld1 += (int) Test0731.instanceCount;
                Test0731.iFld1 += (i14 * i14);
                break;
            case 109:
                Test0731.instanceCount += Test0731.iFld;
            case 110:
                i15 += i14;
                by -= (byte)i12;
                for (d1 = i14; 87 > d1; ++d1) {
                    Test0731.iFld -= i12;
                    try {
                        i16 = (Test0731.iFld / 23066);
                        i13 = (i13 / i14);
                        i15 = (Test0731.iFld / Test0731.iArrFld[i14]);
                    } catch (ArithmeticException a_e) {}
                    f3 *= i12;
                    switch ((int)((d1 % 1) + 123)) {
                    case 123:
                        Test0731.iFld += (int) d1;
                        i16 *= (int)d1;
                        Test0731.lArrFld[(int) (d1)] *= i12;
                        break;
                    }
                    Test0731.iFld1 -= (int) Test0731.instanceCount;
                }
                break;
            case 111:
                Test0731.iFld1 <<= Test0731.iFld;
                for (i17 = 4; i17 < 87; i17++) {
                    Test0731.iFld *= (int) Test0731.instanceCount;
                    dFld = i14;
                    i13 *= (int) Test0731.instanceCount;
                    Test0731.iFld1 += i13;
                }
                Test0731.iArrFld[i14] *= i15;
                break;
            default:
                i18 -= i12;
            }
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 by d1 = " + i15 + "," + by + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i16 f3 i17 = " + i16 + "," + Float.floatToIntBits(f3) + "," + i17);
        FuzzerUtils.out.println("i18 = " + i18);

        FuzzerUtils.out.println("Test0731.instanceCount Test0731.iFld Test0731.iFld1 = " + Test0731.instanceCount + "," + Test0731.iFld +
                "," + Test0731.iFld1);
        FuzzerUtils.out.println("dFld Test0731.lArrFld Test0731.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0731.lArrFld) + "," + FuzzerUtils.checkSum(Test0731.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0731 _instance = new Test0731();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
