// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0004 {

    public static final int N = 400;

    public static long instanceCount=-2897550645249922742L;
    public boolean bFld=false;
    public static byte byFld=5;
    public static volatile float fFld=1.151F;
    public double dFld=1.46961;
    public static double[] dArrFld =new double[N];
    public static int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0004.dArrFld, -1.13247);
        FuzzerUtils.init(Test0004.iArrFld, -173);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s1, int i6) {

        int i7=20744;
        int i8=-64666;
        int[] iArr1 =new int[N];
        float f1=-39.445F;

        FuzzerUtils.init(iArr1, 36);

        i6 += (int)-92.914F;
        for (double d1 : Test0004.dArrFld) {
            Test0004.instanceCount = i6;
            for (i7 = 1; 4 > i7; i7++) {
                i8 = -16;
                iArr1 = FuzzerUtils.int1array(N, (int)-95);
                i6 >>= (int) Test0004.instanceCount;
                i6 = (int) Test0004.instanceCount;
                Test0004.instanceCount = -56930;
                i6 = i8;
                f1 -= i8;
            }
        }
        i8 >>= i7;
        iArr1[(246 >>> 1) % N] *= i7;
        i8 ^= Test0004.byFld;
        i8 += i7;
        vMeth1_check_sum += s1 + i6 + i7 + i8 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1);
    }

    public boolean bMeth(int i4, int i5, long l) {

        short s=17261;
        float f=11.448F;
        int i10=30530, i11=-145, i12=8, i13=-221;

        s = (short)f;
        vMeth1(s, 1);
        i10 = 1;
        while (++i10 < 229) {
            Test0004.instanceCount += -145L;
            for (i11 = 1; i11 < 7; i11++) {
                i4 += (((i11 * f) + i12) - i10);
                Test0004.iArrFld[i10 - 1] = i10;
                i13 |= i10;
                i4 += i11;
                l <<= i11;
                f = f;
                try {
                    i12 = (-1666555914 % i5);
                    i13 = (i12 % -33689);
                    i12 = (-13 / i11);
                } catch (ArithmeticException a_e) {}
                i4 -= i10;
                l += 149L;
                i4 &= i4;
            }
        }
        long meth_res = i4 + i5 + l + s + Float.floatToIntBits(f) + i10 + i11 + i12 + i13;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void vMeth(int i1) {

        int i2=13, i3=241, i14=-14, i15=-35411, i16=-14;
        short s2=-21264;

        for (i2 = 10; i2 < 229; ++i2) {
            if (bFld) {
                i1 += (i2 | i3);
                if (bMeth(i3, i3, Test0004.instanceCount)) break;
                i3 ^= Test0004.byFld;
                vMeth_check_sum += i1 + i2 + i3 + i14 + i15 + i16 + s2;
                return;
            } else if (true) {
                i14 -= (int) Test0004.instanceCount;
            }
            i14 += (int) Test0004.fFld;
            i3 += i3;
            i14 += (int)(172L + (i2 * i2));
            for (i15 = 1; i15 < 7; i15 += 2) {
                i3 = i16;
            }
            switch (((i2 >>> 1) % 9) + 46) {
            case 46:
                if (bFld) {
                    s2 += (short)i2;
                    i3 += Test0004.byFld;
                } else if (bFld) {
                    if (bFld) break;
                } else {
                    i1 = i14;
                }
            case 47:
                i16 += (((i2 * i3) + i16) - i15);
                break;
            case 48:
                Test0004.instanceCount = -238;
                break;
            case 49:
                i14 >>= i16;
            case 50:
                i1 = (int)9L;
                break;
            case 51:
                i1 |= i3;
            case 52:
                i1 *= (int) Test0004.fFld;
            case 53:
                Test0004.instanceCount += (i2 ^ i1);
                break;
            case 54:
                bFld = bFld;
                break;
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i14 + i15 + i16 + s2;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.8555;
        int i=-39;
        int i17=-3;
        int i18=-2244;
        int i19=-11;
        int i20=-51271;
        int i21=-87;
        int i22=-146;
        int[] iArr =new int[N];
        short s3=18779;

        FuzzerUtils.init(iArr, 232);

        for (d = 22; d < 376; ++d) {
            i += (int)(d * d);
            bFld = (iArr[(int)(d + 1)] != iArr[(int)(d)]);
            vMeth(i);
            i += Test0004.byFld;
        }
        for (i17 = 12; 308 > i17; ++i17) {
            i *= (int) Test0004.instanceCount;
            i = (int) Test0004.instanceCount;
            for (i19 = 1; i19 < 85; ++i19) {
                fArrFld[i19] = Test0004.instanceCount;
                for (i21 = i19; 2 > i21; i21++) {
                    Test0004.iArrFld[i19] *= i;
                    dFld *= i20;
                    i += (int)dFld;
                    i += (i21 - i17);
                    i18 -= i22;
                    switch ((((-6 >>> 1) % 5) * 5) + 38) {
                    case 46:
                        iArr[i21 - 1] -= (int) Test0004.fFld;
                        i20 += (i21 * i21);
                        bFld = bFld;
                        iArr[i21] = (int)dFld;
                    case 41:
                        s3 &= (short) Test0004.instanceCount;
                        Test0004.fFld += 1639549562L;
                        break;
                    case 49:
                        Test0004.fFld /= 11755;
                        i18 = (int)2.75204;
                        i18 &= i20;
                        i20 += i21;
                        break;
                    case 55:
                        Test0004.byFld = (byte) s3;
                        i = (int) Test0004.instanceCount;
                        i >>= i20;
                        break;
                    case 62:
                        if (bFld) break;
                        break;
                    default:
                        i22 = i18;
                    }
                }
            }
        }

        FuzzerUtils.out.println("d i i17 = " + Double.doubleToLongBits(d) + "," + i + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 s3 = " + i21 + "," + i22 + "," + s3);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0004.instanceCount bFld Test0004.byFld = " + Test0004.instanceCount + "," + (bFld ? 1 : 0) +
                "," + Test0004.byFld);
        FuzzerUtils.out.println("Test0004.fFld dFld Test0004.dArrFld = " + Float.floatToIntBits(Test0004.fFld) + "," +
                Double.doubleToLongBits(dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0004.dArrFld)));
        FuzzerUtils.out.println("Test0004.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test0004.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0004 _instance = new Test0004();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
