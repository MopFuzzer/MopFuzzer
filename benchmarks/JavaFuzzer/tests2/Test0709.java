// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0709 {

    public static final int N = 400;

    public static long instanceCount=30345L;
    public static byte byFld=-117;
    public static int iFld=-455;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0709.iArrFld, 11026);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth() {

        int i10=29959, i11=-18374, i12=-22460, i13=14, i14=30, i15=79;
        double d1=-17.130121;
        float f2=0.486F;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)27126);

        sArr[(i10 >>> 1) % N] = (short)i10;
        i10 += i10;
        i11 = 1;
        while (++i11 < 160) {
            d1 += 80;
            if (false) {
                Test0709.iArrFld[i11] += (int) -2.288F;
                Test0709.iArrFld[i11] *= i10;
                i10 += (((i11 * f2) + i10) - i11);
                Test0709.iArrFld[(i10 >>> 1) % N] -= i10;
            }
            Test0709.byFld -= (byte) 24882;
            i12 = 10;
            do {
                for (i13 = 1; i13 > 1; i13 -= 3) {
                    i15 += (i13 + f2);
                    i10 += (40756 + (i13 * i13));
                    f2 -= i12;
                }
            } while (--i12 > 0);
        }
        long meth_res = i10 + i11 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(sArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth() {

        int i5=-129, i6=-3, i7=16040, i8=9, i9=152;
        float f1=-126.247F;
        double[] dArr =new double[N], dArr1 =new double[N];

        FuzzerUtils.init(dArr, -93.96051);
        FuzzerUtils.init(dArr1, 13.71989);

        for (i5 = 2; i5 < 186; ++i5) {
            for (i7 = 9; i7 > 1; --i7) {
                dArr = (dArr = (dArr = (dArr = dArr1)));
                f1 += i7;
                i9 = 1;
                do {
                    Test0709.instanceCount = (i6--);
                    i6 += sMeth();
                    i6 += 5;
                    Test0709.instanceCount += i9;
                    i6 += (106 + (i9 * i9));
                    Test0709.instanceCount += (i9 | Test0709.byFld);
                } while (++i9 < 2);
                Test0709.instanceCount += Test0709.instanceCount;
                i8 += i7;
                try {
                    Test0709.iArrFld[i7 - 1] = (i5 / i6);
                    Test0709.iFld = (Test0709.iArrFld[i7] % -1159642124);
                    Test0709.iFld = (Test0709.iArrFld[i7 - 1] % -34);
                } catch (ArithmeticException a_e) {}
                Test0709.iArrFld[(55 >>> 1) % N] = i9;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s) {

        int i=-226;
        int i1=23539;
        int i2=0;
        int i3=35632;
        int i4=-56199;
        int i16=-3;
        int i17=10;
        int i18=-184;
        int i19=2;
        int i20=158;
        int[] iArr =new int[N];
        float f=0.75F;
        float[] fArr =new float[N];
        double d=28.27324;
        short[] sArr1 =new short[N];

        FuzzerUtils.init(fArr, -1.626F);
        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(sArr1, (short)-29067);

        i = (int)(((long)(f * i) >> (i + i)) - ((--fArr[(i >>> 1) % N]) + (i + f)));
        for (i1 = 20; i1 < 322; i1++) {
            for (i3 = 1; i3 < 5; i3++) {
                i4 = (int)(((iArr[i1 - 1] -= i4) * (i3 + d)) + (++i4));
            }
            Test0709.instanceCount = iMeth();
            for (i16 = 1; i16 < 5; ++i16) {
                switch (((i4 >>> 1) % 6) + 46) {
                case 46:
                    i18 = 1;
                    do {
                        Test0709.iFld += (i18 - i);
                        i19 = Test0709.iFld;
                        i >>= i20;
                        i20 += 16543;
                        f += (i18 + Test0709.instanceCount);
                        i20 = i3;
                    } while (++i18 < 2);
                    break;
                case 47:
                    i2 |= i;
                    break;
                case 48:
                    i4 -= (int) Test0709.instanceCount;
                    break;
                case 49:
                    sArr1[i16 + 1] -= (short)20;
                    break;
                case 50:
                    Test0709.iFld += i3;
                    break;
                case 51:
                    Test0709.instanceCount = -36594L;
                    break;
                }
            }
        }
        vMeth_check_sum += s + i + Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d) + i16 + i17
            + i18 + i19 + i20 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr1);
    }

    public void mainTest(String[] strArr1) {

        short s1=-29074;
        int i21=-151, i22=3, i23=181, i24=3, i25=204, i26=42;
        double d2=121.66580;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -119L);

        vMeth(s1);
        i21 = 1;
        while (++i21 < 344) {
            Test0709.iFld = Test0709.iFld;
            Test0709.iFld += i21;
            Test0709.iArrFld[i21] *= Test0709.iFld;
            i22 = 73;
            while (--i22 > 0) {
                Test0709.iFld >>>= i22;
                for (i23 = 1; i23 < 1; i23++) {
                    float f3=-2.458F;
                    i24 = (int) Test0709.instanceCount;
                    f3 += Test0709.byFld;
                    Test0709.iFld = i21;
                    switch ((i22 % 2) + 103) {
                    case 103:
                        f3 = (float)d2;
                        break;
                    case 104:
                        Test0709.iArrFld[i21] += i22;
                        s1 = (short)i24;
                        i24 = i21;
                        break;
                    default:
                        i24 >>= i24;
                        i24 = (int) Test0709.instanceCount;
                        f3 = 18.765F;
                        f3 *= 43493L;
                    }
                    Test0709.iArrFld = Test0709.iArrFld;
                    i24 += i23;
                    lArr[i23 - 1] = 148L;
                }
                for (i25 = i21; i25 < 1; ++i25) {
                    switch ((i21 % 2) + 59) {
                    case 59:
                        switch (((i22 % 1) * 5) + 77) {
                        case 80:
                            Test0709.instanceCount <<= i21;
                            break;
                        }
                        lArr[i25 - 1] >>= i26;
                        Test0709.instanceCount = i22;
                        break;
                    case 60:
                        Test0709.byFld += (byte) (i25 * i26);
                        break;
                    default:
                        i24 += (int)-1.25519;
                    }
                }
            }
        }

        FuzzerUtils.out.println("s1 i21 i22 = " + s1 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 d2 = " + i23 + "," + i24 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i25 i26 lArr = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0709.instanceCount Test0709.byFld Test0709.iFld = " + Test0709.instanceCount + "," + Test0709.byFld +
                "," + Test0709.iFld);
        FuzzerUtils.out.println("Test0709.iArrFld = " + FuzzerUtils.checkSum(Test0709.iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0709 _instance = new Test0709();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
