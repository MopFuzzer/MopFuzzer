// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0752 {

    public static final int N = 400;

    public static volatile long instanceCount=-4051122798L;
    public static int iFld=28707;
    public static double dFld=1.50742;
    public static long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0752.lArrFld, -2418189999L);
        FuzzerUtils.init(Test0752.dArrFld, -84.74191);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i5=14, i6=43720;
        short s=-2930;
        double d=0.108440;

        for (i5 = 3; 237 > i5; i5++) {
            Test0752.iFld = s;
            i6 = (int) Test0752.instanceCount;
        }
        d += d;
        vMeth_check_sum += i5 + i6 + s + Double.doubleToLongBits(d);
    }

    public static int iMeth(int i1, int i2) {

        int i3=-13, i4=-34167, i7=6, i8=11, i9=0, i10=-126;
        float f=-112.599F;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-73);

        for (i3 = 2; i3 < 300; ++i3) {
            i4 += (i3 ^ Test0752.iFld);
            i1 += i3;
            vMeth();
            i4 = i2;
            i4 = (int)f;
            i4 += i3;
            i2 += i3;
        }
        for (i7 = 7; i7 < 166; ++i7) {
            i2 = i7;
            byArr[i7 - 1][i7 + 1] = (byte)i4;
            for (i9 = 10; i9 > 1; i9--) {
                f += Test0752.instanceCount;
                f -= Test0752.instanceCount;
                i1 += (i9 - i4);
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l, int i, boolean b) {

        int i11=5;
        int i12=18140;
        int i13=40059;
        int i14=0;
        int[] iArr =new int[N];
        double d1=-112.42743;
        float f1=-1.73F;
        byte[] byArr1 =new byte[N];

        FuzzerUtils.init(byArr1, (byte)-20);
        FuzzerUtils.init(iArr, -44244);

        Test0752.iFld -= iMeth(Test0752.iFld, -51553);
        for (i11 = 17; 304 > i11; i11++) {
            i12 = (int)20.37F;
            Test0752.iFld += (((i11 * Test0752.instanceCount) + i12) - i11);
            Test0752.lArrFld[i11] -= Test0752.iFld;
            switch ((i11 % 8) + 14) {
            case 14:
                i12 -= (int)d1;
                switch ((i11 % 5) + 53) {
                case 53:
                    l += (i11 * i11);
                    break;
                case 54:
                    i = i11;
                    byArr1[i11 - 1] += (byte)2269633270L;
                    break;
                case 55:
                    i = 44140;
                    for (i13 = 1; 6 > i13; i13++) {
                        Test0752.instanceCount %= (i | 1);
                        Test0752.instanceCount += i13;
                    }
                    break;
                case 56:
                    i12 = i14;
                    break;
                case 57:
                    i += (i11 + Test0752.instanceCount);
                    break;
                default:
                    l = i14;
                }
                break;
            case 15:
                Test0752.dArrFld[i11 + 1] += i11;
                break;
            case 16:
                i += (i11 * i11);
                break;
            case 17:
                f1 += Test0752.iFld;
                break;
            case 18:
                l -= i;
                break;
            case 19:
                Test0752.instanceCount -= -18639;
            case 20:
                Test0752.lArrFld[i11 + 1] -= i14;
                break;
            case 21:
                i = 39867;
                break;
            default:
                i14 += (i11 | i);
            }
        }
        long meth_res = l + i + (b ? 1 : 0) + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b1=true;

        lMeth(Test0752.instanceCount, Test0752.iFld, b1);
        Test0752.instanceCount = Test0752.iFld;
        Test0752.dFld += Test0752.iFld;

        FuzzerUtils.out.println("b1 = " + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test0752.instanceCount Test0752.iFld Test0752.dFld = " + Test0752.instanceCount + "," + Test0752.iFld +
                "," + Double.doubleToLongBits(Test0752.dFld));
        FuzzerUtils.out.println("Test0752.lArrFld Test0752.dArrFld = " + FuzzerUtils.checkSum(Test0752.lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0752.dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0752 _instance = new Test0752();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
