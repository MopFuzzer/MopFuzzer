// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0619 {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public static float fFld=-13.63F;
    public static int iFld=-53302;
    public double dFld=0.22364;
    public static long[] lArrFld =new long[N];
    public static int[][] iArrFld =new int[N][N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0619.lArrFld, 2L);
        FuzzerUtils.init(Test0619.iArrFld, 15804);
        FuzzerUtils.init(Test0619.byArrFld, (byte) -114);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8) {

        double d=1.89827;
        double[] dArr =new double[N];
        int i9=12;
        int i10=-16806;
        int[] iArr1 =new int[N];
        short s1=18007;
        byte by=-13;

        FuzzerUtils.init(dArr, 1.51731);
        FuzzerUtils.init(iArr1, -168);

        d = Test0619.fFld;
        i8 -= i8;
        i7 &= i7;
        dArr[(i8 >>> 1) % N] -= 2;
        for (i9 = 9; i9 < 302; ++i9) {
            s1 = (short) Test0619.iFld;
            Test0619.iFld <<= i9;
            i7 += (1 + (i9 * i9));
            Test0619.fFld = by;
            Test0619.iFld += i9;
            Test0619.lArrFld[i9] += -53923;
            i10 >>= i10;
        }
        i7 += i9;
        iArr1[(Test0619.iFld >>> 1) % N] = Test0619.iFld;
        Test0619.iFld >>>= i7;
        vMeth1_check_sum += i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + s1 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(boolean b, int i5, int i6) {

        int i12=-13;
        int i13=-47208;
        int i14=36601;
        int[] iArr2 =new int[N];
        double d1=1.69969;
        double[] dArr1 =new double[N];
        short s2=22241;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)14);
        FuzzerUtils.init(iArr2, 217);
        FuzzerUtils.init(dArr1, -54.90163);

        vMeth1(Test0619.iFld, i5);
        byArr = byArr;
        iArr2[(Test0619.iFld >>> 1) % N] *= i6;
        iArr2[(-11 >>> 1) % N] = (int)13783L;
        for (long l : Test0619.lArrFld) {
            i12 = 1;
            while (++i12 < 4) {
                Test0619.fFld -= Test0619.instanceCount;
            }
            for (i13 = 1; i13 < 4; i13++) {
                switch (((i12 >>> 1) % 6) + 10) {
                case 10:
                    Test0619.fFld = (float) d1;
                    i5 += (((i13 * Test0619.iFld) + i13) - Test0619.instanceCount);
                    i6 = -12;
                    dArr1[i13 - 1] = Test0619.instanceCount;
                    break;
                case 11:
                    i14 = (int)2.741F;
                    b = b;
                case 12:
                    i14 -= s2;
                    break;
                case 13:
                    i6 %= (int)1.610F;
                case 14:
                case 15:
                    Test0619.instanceCount += i12;
                    break;
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i5 + i6 + i12 + i13 + i14 + Double.doubleToLongBits(d1) + s2 +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static long lMeth() {

        float f=38.552F;
        float[] fArr =new float[N];
        int i3=0;
        int i15=19233;
        int i16=30191;
        int i17=-9;
        int[] iArr3 =new int[N];
        short s=-3251;
        long l1=354224038L;
        double d2=0.86656;
        byte by1=-94;

        FuzzerUtils.init(fArr, 0.123F);
        FuzzerUtils.init(iArr3, 11);

        for (f = 14; f < 386; f++) {
            int i4=-5453;
            boolean b1=true;
            if (b1) {
                i3 += (i3 + (s++));
                i4 += (int)fArr[(int)(f + 1)];
                vMeth(b1, i4, i3);
            } else {
                for (i15 = (int)(f); 5 > i15; i15++) {
                    Test0619.instanceCount += i15;
                    i4 += (145 + (i15 * i15));
                    Test0619.iFld += 15317;
                    switch (i15 + 82) {
                    case 82:
                        i4 += (i15 ^ i3);
                        break;
                    case 83:
                        s ^= (short) Test0619.instanceCount;
                        Test0619.iFld <<= i4;
                        try {
                            i3 = (42673 / i15);
                            i3 = (Test0619.iFld % -51161);
                            iArr3[(int)(f)] = (iArr3[i15 + 1] % i4);
                        } catch (ArithmeticException a_e) {}
                    case 84:
                        i4 *= Test0619.iFld;
                        break;
                    case 85:
                        i16 *= 31948;
                        break;
                    case 86:
                        iArr3[(int) (f)] = (int) Test0619.instanceCount;
                        break;
                    case 87:
                        l1 -= Test0619.iFld;
                        break;
                    case 88:
                    case 89:
                        l1 = i4;
                        break;
                    case 90:
                        i16 += (i15 | (long) Test0619.fFld);
                        break;
                    case 91:
                        Test0619.iFld = 0;
                        break;
                    case 92:
                        if (true) break;
                        break;
                    case 93:
                        i4 += (((i15 * Test0619.instanceCount) + i16) - l1);
                    case 94:
                        Test0619.instanceCount &= i16;
                    case 95:
                        Test0619.iFld += (int) f;
                        break;
                    case 96:
                        iArr3[(int) (f)] *= Test0619.iFld;
                    case 97:
                        Test0619.iFld += i15;
                        break;
                    case 98:
                        d2 += i16;
                        break;
                    case 99:
                        i16 += (i15 ^ (long)f);
                        break;
                    case 100:
                        l1 += (i15 * i4);
                    case 101:
                        Test0619.instanceCount += (7000 + (i15 * i15));
                    case 102:
                        iArr3[(int)(f)] -= 11;
                        break;
                    case 103:
                        i4 >>= -216;
                    case 104:
                        i16 = i3;
                        break;
                    case 105:
                        Test0619.instanceCount += l1;
                        break;
                    case 106:
                        Test0619.instanceCount -= i16;
                        break;
                    case 107:
                        if (b1) continue;
                        break;
                    case 108:
                        fArr[i15] += f;
                    case 109:
                        b1 = b1;
                        break;
                    case 110:
                        Test0619.iFld = (int) Test0619.instanceCount;
                        break;
                    case 111:
                        i4 += i15;
                        break;
                    case 112:
                        Test0619.iFld += i3;
                        break;
                    case 113:
                        l1 = i3;
                        break;
                    case 114:
                        Test0619.instanceCount -= i3;
                    case 115:
                        b1 = b1;
                        break;
                    case 116:
                        if (i4 != 0) {
                        }
                    case 117:
                        if (i16 != 0) {
                        }
                        break;
                    case 118:
                        i4 -= Test0619.iFld;
                    case 119:
                        try {
                            iArr3[i15 - 1] = (i3 / 716004588);
                            iArr3[i15] = (i15 / i3);
                            iArr3[(int)(f)] = (-1980947467 / i15);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 120:
                        by1 <<= (byte)i3;
                        break;
                    case 121:
                        fArr[i15 + 1] = Test0619.iFld;
                        break;
                    case 122:
                        i16 += i16;
                        break;
                    case 123:
                        Test0619.iFld = i16;
                        break;
                    case 124:
                        Test0619.instanceCount += i15;
                        break;
                    case 125:
                        Test0619.iArrFld[(int) (f)][i15] >>= i15;
                        break;
                    case 126:
                        try {
                            i4 = (i15 / -18235);
                            i17 = (i4 / iArr3[i15 - 1]);
                            i17 = (Test0619.iFld / i15);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 127:
                        i17 -= (int)d2;
                    case 128:
                        Test0619.fFld += (((i15 * Test0619.instanceCount) + by1) - Test0619.iFld);
                        break;
                    case 129:
                        i16 += (int)l1;
                        break;
                    case 130:
                        Test0619.iArrFld[i15 + 1][i15 - 1] = i16;
                        break;
                    case 131:
                        i3 -= (int)d2;
                        break;
                    case 132:
                        Test0619.iFld &= (int) Test0619.instanceCount;
                    case 133:
                        i4 += (((i15 * i15) + l1) - i4);
                        break;
                    case 134:
                        Test0619.iFld += (int) d2;
                        break;
                    case 135:
                        Test0619.iFld += i17;
                        break;
                    case 136:
                        Test0619.iArrFld[i15] = Test0619.iArrFld[(int) (f - 1)];
                        break;
                    case 137:
                    case 138:
                        i17 += i15;
                        break;
                    case 139:
                        Test0619.iArrFld[(i15 >>> 1) % N][i15 + 1] = (int) Test0619.instanceCount;
                    case 140:
                        l1 *= Test0619.iFld;
                    case 141:
                        i17 -= -75;
                        break;
                    case 142:
                        i4 = by1;
                        break;
                    case 143:
                        Test0619.instanceCount -= Test0619.instanceCount;
                        break;
                    case 144:
                        i17 <<= i17;
                        break;
                    case 145:
                        try {
                            iArr3[(int)(f)] = (i3 % i16);
                            Test0619.iArrFld[(int) (f - 1)][(int) (f + 1)] = (i16 % -33649);
                            Test0619.iArrFld[i15 - 1][i15 - 1] = (i4 / i15);
                        } catch (ArithmeticException a_e) {}
                    case 146:
                        Test0619.iFld %= (int) (i3 | 1);
                        break;
                    case 147:
                        l1 = -157;
                    case 148:
                        i3 <<= i16;
                        break;
                    case 149:
                        s += (short)(((i15 * i17) + i15) - i3);
                        break;
                    case 150:
                        l1 += 48901;
                        break;
                    case 151:
                        i3 = i17;
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i3 + s + i15 + i16 + l1 + Double.doubleToLongBits(d2) + by1 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-7;
        int i2=-129;
        int i18=-27;
        int i19=6;
        int i20=147;
        int i21=-160;
        int i22=1392;
        int i23=-190;
        int[] iArr =new int[N];
        boolean b2=true;
        short s3=-1491;
        byte by2=23;

        FuzzerUtils.init(iArr, -1);

        i = (i--);
        for (int i1 : iArr) {
            iArr = (iArr = (iArr = (iArr = iArr)));
            i2 = 1;
            do {
                i1 = (int) Test0619.instanceCount;
                lMeth();
                i18 = 1;
                do {
                    Test0619.iFld += (i18 * i1);
                    i += (-17166 + (i18 * i18));
                    i1 *= i18;
                    if (b2) continue;
                    Test0619.iFld <<= 1;
                    i *= (int)dFld;
                } while ((i18 += 3) < 1);
                s3 += (short) Test0619.fFld;
                i19 = 1;
                while (++i19 < 1) {
                    s3 = (short) Test0619.instanceCount;
                    by2 = (byte)i;
                    Test0619.iArrFld[i2][i19 - 1] = (int) -42.502F;
                    Test0619.fFld *= 176;
                    iArr[i2] += Test0619.iFld;
                    Test0619.byArrFld[i19 + 1] -= (byte) i19;
                }
                Test0619.instanceCount = Test0619.instanceCount;
                Test0619.fFld += (((i2 * Test0619.instanceCount) + i2) - i1);
            } while (++i2 < 63);
            Test0619.iArrFld[(-40 >>> 1) % N][(Test0619.iFld >>> 1) % N] = i2;
            for (i20 = 1; i20 < 63; i20++) {
                i21 = i18;
                for (i22 = i20; i22 < 2; ++i22) {
                    Test0619.lArrFld = Test0619.lArrFld;
                }
                i1 >>= i2;
            }
            i1 = Test0619.iFld;
        }

        FuzzerUtils.out.println("i i2 i18 = " + i + "," + i2 + "," + i18);
        FuzzerUtils.out.println("b2 s3 i19 = " + (b2 ? 1 : 0) + "," + s3 + "," + i19);
        FuzzerUtils.out.println("by2 i20 i21 = " + by2 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 iArr = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0619.instanceCount Test0619.fFld Test0619.iFld = " + Test0619.instanceCount + "," +
                Float.floatToIntBits(Test0619.fFld) + "," + Test0619.iFld);
        FuzzerUtils.out.println("dFld Test0619.lArrFld Test0619.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0619.lArrFld) + "," + FuzzerUtils.checkSum(Test0619.iArrFld));
        FuzzerUtils.out.println("Test0619.byArrFld = " + FuzzerUtils.checkSum(Test0619.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0619 _instance = new Test0619();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
