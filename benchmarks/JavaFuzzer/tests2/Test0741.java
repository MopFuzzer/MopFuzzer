// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0741 {

    public static final int N = 400;

    public static long instanceCount=9L;
    public double dFld=1.102334;
    public static int iFld=-203;
    public static volatile int iFld1=9;
    public static float fFld=0.748F;
    public volatile int iFld2=9;

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6, long l1) {

        int i7=-1;
        int i8=-10266;
        int i9=44627;
        int i10=14;
        int[] iArr2 =new int[N];
        double d=0.21843, d1=-2.108670;
        boolean b=false;
        byte by1=-2;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr2, -7);
        FuzzerUtils.init(sArr, (short)-2808);

        for (i7 = 8; i7 < 216; i7++) {
            for (d = 1; 8 > d; d++) {
                if (Test0741.iFld != 0) {
                }
                i5 = i5;
                i10 = 1;
                do {
                    d1 = l1;
                    d1 = 14;
                    iArr2[i7 + 1] = i5;
                    i8 = i6;
                    i5 -= i6;
                    sArr[i10] ^= (short)i7;
                    d1 *= i8;
                    if (b) continue;
                    i9 >>= -5899;
                    i5 = by1;
                } while (++i10 < 2);
            }
        }
        long meth_res = i5 + i6 + l1 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + Double.doubleToLongBits(d1) +
            (b ? 1 : 0) + by1 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, int i4, long l) {

        byte by=-9;
        int i11=20748;
        int i12=-4;
        int i13=24632;
        int i14=-9058;
        int[] iArr3 =new int[N];
        double d2=-65.117448;
        boolean b1=true;

        FuzzerUtils.init(iArr3, 11);

        by = (byte) iMeth(33859, Test0741.iFld, Test0741.instanceCount);
        i4 = Test0741.iFld;
        Test0741.iFld1 <<= i3;
        iArr3[(Test0741.iFld1 >>> 1) % N] ^= i3;
        i11 = 1;
        do {
            for (i12 = i11; i12 < 12; i12++) {
                Test0741.iFld += (((i12 * i12) + i11) - i13);
                i13 |= Test0741.iFld1;
            }
            d2 *= i4;
            try {
                i14 = (i11 % i12);
                iArr3[i11 + 1] = (iArr3[i11 + 1] % -121);
                iArr3[i11 - 1] = (-44377 / i4);
            } catch (ArithmeticException a_e) {}
            b1 = b1;
            Test0741.instanceCount <<= Test0741.iFld1;
            d2 = i3;
            Test0741.fFld += i4;
            Test0741.iFld -= (int) Test0741.fFld;
        } while (++i11 < 134);
        vMeth_check_sum += i3 + i4 + l + by + i11 + i12 + i13 + Double.doubleToLongBits(d2) + i14 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr3);
    }

    public static float fMeth() {

        short s1=-32758;
        int i15=13001;
        int i16=-52;
        int i17=-12;
        int[] iArr1 =new int[N];
        byte by2=-39;

        FuzzerUtils.init(iArr1, -233);

        Test0741.iFld = (--s1);
        Test0741.iFld -= (iArr1[(Test0741.iFld >>> 1) % N] + (++Test0741.iFld));
        vMeth(Test0741.iFld, Test0741.iFld, Test0741.instanceCount);
        Test0741.iFld = Test0741.iFld1;
        i15 = 1;
        do {
            Test0741.instanceCount = Test0741.iFld1;
            Test0741.instanceCount += -21170;
            for (i16 = 1; i16 < 11; i16++) {
                Test0741.iFld1 >>>= Test0741.iFld1;
                Test0741.iFld += i16;
                s1 = (short) Test0741.iFld;
                i17 = i15;
                by2 = (byte)i15;
                Test0741.instanceCount += 63215L;
            }
            Test0741.fFld = Test0741.iFld1;
        } while (++i15 < 141);
        long meth_res = s1 + i15 + i16 + i17 + by2 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i1=88;
        int i2=55454;
        int i18=-40;
        int i19=-11;
        int i20=-10;
        int i21=32981;
        int i22=-2;
        int[] iArr4 =new int[N];
        boolean b2=true;
        float[] fArr =new float[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(fArr, 108.1000F);
        FuzzerUtils.init(iArr4, 10);
        FuzzerUtils.init(dArr, 83.86473);

        Test0741.instanceCount >>= -29785;
        for (i1 = 7; i1 < 131; i1++) {
            short s=19347;
            if (((Short.reverseBytes(s) - (-7 - dFld)) * (i2 + (i2 * i1))) <= (-fMeth())) break;
            for (i18 = 1; i18 < 202; i18++) {
                i19 -= i2;
                i19 -= i2;
                for (i20 = 1; i20 < 2; ++i20) {
                    Test0741.instanceCount += (((i20 * i2) + i22) - s);
                    i2 <<= i19;
                    fArr[i20] -= Test0741.iFld;
                    iArr4[i1 + 1] >>= Test0741.iFld;
                    i2 += i2;
                    Test0741.instanceCount += (((i20 * i18) + i1) - i20);
                    Test0741.instanceCount >>= -214;
                    i21 ^= (int)2900805618L;
                    if (b2) {
                        Test0741.fFld = -6;
                        i2 >>>= (int) Test0741.instanceCount;
                        Test0741.instanceCount -= Test0741.instanceCount;
                    } else if (b2) {
                        switch ((i1 % 2) + 82) {
                        case 82:
                            iArr4[i18 + 1] = i18;
                            i21 += -4;
                            switch ((((i18 >>> 1) % 4) * 5) + 66) {
                            case 79:
                                try {
                                    Test0741.iFld1 = (Test0741.iFld % -13);
                                    i19 = (iArr4[i18 + 1] % i18);
                                    i21 = (iArr4[i20] % Test0741.iFld);
                                } catch (ArithmeticException a_e) {}
                                switch ((i20 % 7) + 24) {
                                case 24:
                                    i19 += -26;
                                    Test0741.fFld -= i2;
                                case 25:
                                    dArr[i18 - 1][i18] *= dFld;
                                    Test0741.instanceCount += -37920;
                                    i2 &= (int) Test0741.instanceCount;
                                    break;
                                case 26:
                                    Test0741.instanceCount = Test0741.instanceCount;
                                    break;
                                case 27:
                                    Test0741.iFld += i18;
                                    break;
                                case 28:
                                case 29:
                                    Test0741.iFld1 += (i20 * i20);
                                    break;
                                case 30:
                                    Test0741.instanceCount >>= iFld2;
                                    break;
                                default:
                                }
                                break;
                            case 84:
                                i2 += (int)dFld;
                                break;
                            case 73:
                                i21 += (i20 | i19);
                            case 83:
                                Test0741.instanceCount += (-192 + (i20 * i20));
                                break;
                            }
                            break;
                        case 83:
                            i2 = iFld2;
                            break;
                        }
                    } else {
                        Test0741.iFld1 = (int) Test0741.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i1 i2 i18 = " + i1 + "," + i2 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 b2 fArr = " + i22 + "," + (b2 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr4 dArr = " + FuzzerUtils.checkSum(iArr4) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0741.instanceCount dFld Test0741.iFld = " + Test0741.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0741.iFld);
        FuzzerUtils.out.println("Test0741.iFld1 Test0741.fFld iFld2 = " + Test0741.iFld1 + "," + Float.floatToIntBits(Test0741.fFld) +
            "," + iFld2);

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0741 _instance = new Test0741();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
