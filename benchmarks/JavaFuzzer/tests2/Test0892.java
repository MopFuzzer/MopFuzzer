// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0892 {

    public static final int N = 400;

    public static long instanceCount=1124598043L;
    public static float fFld=2.125F;
    public static double dFld=0.94330;
    public long lFld=-30406L;
    public static int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];
    public short[][] sArrFld =new short[N][N];

    static {
        FuzzerUtils.init(Test0892.iArrFld, -59383);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5) {

        int i6=8, i7=52601, i8=87, i9=-13, i10=-6, i11=27623;
        short s=2032;
        byte by=85;
        float[] fArr1 =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr1, 2.939F);
        FuzzerUtils.init(lArr, -12L);

        Test0892.fFld = i5;
        for (i6 = 7; i6 < 247; i6++) {
            fArr1[i6 + 1] *= (float) Test0892.dFld;
            s -= (short) Test0892.instanceCount;
            for (i8 = 1; i8 < 7; ++i8) {
                by += (byte) (i8 - Test0892.instanceCount);
                lArr[i8] *= (long) Test0892.dFld;
                Test0892.instanceCount = i9;
                i5 = i6;
                Test0892.instanceCount += (-3 + (i8 * i8));
                Test0892.instanceCount &= i5;
                Test0892.instanceCount = i6;
                for (i10 = 1; i10 < 2; ++i10) {
                    Test0892.iArrFld[i6 - 1] *= (int) Test0892.fFld;
                    i5 >>= i10;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + s + i8 + i9 + by + i10 + i11 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l) {

        int i1=50804, i2=11, i3=-9, i4=177, i12=-118, i13=21743, i14=-11, i15=-3103;
        boolean b=true;
        byte[] byArr =new byte[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(byArr, (byte)65);
        FuzzerUtils.init(fArr, -2.112F);

        byArr[(i1 >>> 1) % N] += (byte) Math.min(i1, (int) ((++Test0892.iArrFld[(i2 >>> 1) % N]) + (i1 + l)));
        i1 -= (int)fArr[(i1 >>> 1) % N];
        for (i3 = 10; 392 > i3; ++i3) {
            b = b;
            i4 = ((i1 *= (-iMeth1(i3))) ^ 227);
            b = b;
        }
        i1 >>= -126;
        for (i12 = 3; i12 < 121; i12++) {
            i1 |= i2;
            i4 = i12;
            i1 -= i4;
            l -= i4;
            for (i14 = 1; i14 < 13; ++i14) {
                i15 -= i4;
                b = false;
            }
        }
        long meth_res = l + i1 + i2 + i3 + i4 + (b ? 1 : 0) + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i) {


        i >>>= (int) (iMeth(Test0892.instanceCount) + Test0892.instanceCount);
        Test0892.instanceCount *= i;
        Test0892.iArrFld[(i >>> 1) % N] *= i;
        Test0892.instanceCount |= i;
        Test0892.fFld *= (float) -1.95868;
        long meth_res = i;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=30746, i17=-11965, i18=-244, i19=48118, i20=58493, i21=48291, i22=77, i23=53, i24=213, i25=10,
            i26=-48265, i27=229;
        short s1=-9069;
        byte by1=107;
        long l1=-20430L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -2694255274862612934L);

        Test0892.iArrFld[(5 >>> 1) % N] >>= (int) lMeth(i16);
        for (i17 = 9; 226 > i17; i17++) {
            i18 += (((i17 * s1) + i19) - Test0892.instanceCount);
            lArr1[i17 - 1] += by1;
            fArrFld[i17] = i18;
            Test0892.fFld += (i17 * i17);
            i19 = i17;
        }
        i18 = (int) Test0892.instanceCount;
        for (l1 = 15; l1 < 300; ++l1) {
            for (i21 = 3; i21 < 88; ++i21) {
                for (i23 = 2; i23 > l1; --i23) {
                    lFld += (i23 * i23);
                    i22 = i23;
                }
                Test0892.iArrFld[i21 - 1] = i19;
                for (i25 = (int)(l1); i25 < 2; i25 += 3) {
                    i26 += (int) Test0892.instanceCount;
                    Test0892.fFld += (i25 * i17);
                    i20 *= 53652;
                    Test0892.dFld = 14;
                    switch (((i21 % 2) * 5) + 120) {
                    case 123:
                        i27 >>= i26;
                        lFld += (((i25 * i19) + Test0892.instanceCount) - Test0892.fFld);
                        lFld -= -14;
                        sArrFld[i25 - 1][i21] -= (short)-10915;
                    case 125:
                        switch (((i21 >>> 1) % 7) + 126) {
                        case 126:
                        case 127:
                            i19 += (i25 * i25);
                            Test0892.fFld += i22;
                            i22 |= 141;
                            lFld -= Test0892.instanceCount;
                            break;
                        case 128:
                            i24 += (i25 * i25);
                            break;
                        case 129:
                            Test0892.iArrFld[i21] = (int) l1;
                            break;
                        case 130:
                            i18 &= i27;
                        case 131:
                            i22 = i26;
                            break;
                        case 132:
                            i26 = i17;
                            break;
                        default:
                            fArrFld[(int)(l1 - 1)] = i21;
                        }
                    default:
                        Test0892.iArrFld[i25] = i16;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("s1 i19 by1 = " + s1 + "," + i19 + "," + by1);
        FuzzerUtils.out.println("l1 i20 i21 = " + l1 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0892.instanceCount Test0892.fFld Test0892.dFld = " + Test0892.instanceCount + "," +
                Float.floatToIntBits(Test0892.fFld) + "," + Double.doubleToLongBits(Test0892.dFld));
        FuzzerUtils.out.println("lFld Test0892.iArrFld fArrFld = " + lFld + "," + FuzzerUtils.checkSum(Test0892.iArrFld) + ","
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("sArrFld = " + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0892 _instance = new Test0892();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
