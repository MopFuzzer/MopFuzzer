// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0426 {

    public static final int N = 400;

    public static long instanceCount=-3929489282L;
    public int iFld=-4;
    public boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l2) {

        int i9=-57603, i10=6;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.416F);

        for (i9 = 3; 204 > i9; i9++) {
            if (i9 != 0) {
                vMeth2_check_sum += l2 + i9 + i10 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            i10 = (int)-4L;
            fArr[i9 - 1] += -71.144F;
            i10 = 48254;
        }
        vMeth2_check_sum += l2 + i9 + i10 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i7, short s, long l1) {

        int i11=-166;
        int i12=48870;
        int i13=3;
        int[] iArr =new int[N];
        byte by=42;
        float f1=-82.904F;
        float[] fArr1 =new float[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, 3650);
        FuzzerUtils.init(fArr1, 1.207F);
        FuzzerUtils.init(lArr, 2L);

        i7 = (--i7);
        for (int i8 : iArr) {
            vMeth2(-8L);
            i11 = 1;
            do {
                i8 = i8;
                i8 += i11;
                switch (((-194 >>> 1) % 10) + 73) {
                case 73:
                    Test0426.instanceCount -= by;
                    iArr[i11 + 1] -= (int)f1;
                    break;
                case 74:
                case 75:
                    for (i12 = 1; 1 > i12; i12++) {
                        fArr1[i11 + 1] += -3739399149L;
                        Test0426.instanceCount += (((i12 * f1) + i12) - i8);
                        i13 = 10;
                        i13 >>= i12;
                        i13 = -33779;
                    }
                case 76:
                    i8 = (int)l1;
                    break;
                case 77:
                    i7 = (int) Test0426.instanceCount;
                    break;
                case 78:
                    by <<= (byte)i13;
                    break;
                case 79:
                    i7 += (i11 * Test0426.instanceCount);
                    break;
                case 80:
                    i7 += (i11 ^ Test0426.instanceCount);
                    break;
                case 81:
                    i13 -= (int)l1;
                case 82:
                    lArr[i11][i11 - 1] -= i8;
                    break;
                }
            } while (++i11 < 4);
        }
        vMeth1_check_sum += i7 + s + l1 + i11 + by + Float.floatToIntBits(f1) + i12 + i13 + FuzzerUtils.checkSum(iArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i4, int i5, long l) {

        int i6=-3;
        int i14=-54571;
        int i15=19480;
        int i16=2;
        int i17=0;
        int i18=81;
        int[] iArr1 =new int[N];
        short s1=22184;
        float f2=0.6F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -1356263121759607170L);
        FuzzerUtils.init(iArr1, 13);

        i6 = 1;
        while (++i6 < 321) {
            vMeth1(i6, s1, Test0426.instanceCount);
            lArr1[i6 - 1] = i6;
            for (i14 = 1; i14 < 5; i14++) {
                i5 = (int)l;
                iArr1[i14 - 1] *= -8;
            }
            f2 *= f2;
            for (i16 = 5; i16 > 1; i16 -= 2) {
                i18 = 1;
                while (++i18 < 3) {
                    i15 += i18;
                    Test0426.instanceCount += (i18 * i18);
                    l += i16;
                    i5 += i18;
                }
                l -= i14;
                Test0426.instanceCount &= i15;
            }
        }
        vMeth_check_sum += i4 + i5 + l + i6 + s1 + i14 + i15 + Float.floatToIntBits(f2) + i16 + i17 + i18 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=4, i1=-101, i2=28, i3=4098, i19=-14, i20=-194, i21=-10, i22=-14;
        float f=0.8F;
        float[] fArr2 =new float[N];
        double d=2.22191;
        double d1=125.78021;
        double[] dArr =new double[N];
        short s2=13211;
        short[] sArr =new short[N];
        long[] lArr2 =new long[N];

        FuzzerUtils.init(sArr, (short)-26314);
        FuzzerUtils.init(fArr2, -117.503F);
        FuzzerUtils.init(dArr, 122.35457);
        FuzzerUtils.init(lArr2, -5485232375205697162L);

        switch (((((int) (iFld + Test0426.instanceCount)) >>> 1) % 5) + 48) {
        case 48:
            for (i = 8; i < 149; i++) {
                sArr[i] += (short)(-((f + i) - i1));
                for (i2 = i; i2 < 178; ++i2) {
                    i3 = (int)((--iFld) - Float.intBitsToFloat(--i1));
                    i1 = (~(--iFld));
                    vMeth(11, -20491, Test0426.instanceCount);
                    f *= iFld;
                    i3 -= i;
                    for (d = 1; d < 1; ++d) {
                        fArr2[(int) (d + 1)] -= Test0426.instanceCount;
                        i3 += (int)d;
                        i19 += (int) (((d * i) + Test0426.instanceCount) - Test0426.instanceCount);
                        i3 += (int)d;
                        Test0426.instanceCount <<= i2;
                        Test0426.instanceCount >>= -12;
                        i20 *= i19;
                        i3 = i19;
                        i3 += (int)d;
                    }
                    bFld = bFld;
                    f += (i2 * f);
                    bFld = bFld;
                }
                i1 = s2;
                d1 -= i1;
                Test0426.instanceCount ^= Test0426.instanceCount;
                for (i21 = 5; i21 < 178; ++i21) {
                    Test0426.instanceCount >>= Test0426.instanceCount;
                    i20 += (-8 + (i21 * i21));
                    dArr[i21] -= -22401;
                    Test0426.instanceCount >>= i2;
                }
            }
            break;
        case 49:
            bFld = bFld;
            break;
        case 50:
        case 51:
            lArr2[(i2 >>> 1) % N] -= i20;
        case 52:
            iFld = -54979;
            break;
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 d = " + i2 + "," + i3 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i19 i20 s2 = " + i19 + "," + i20 + "," + s2);
        FuzzerUtils.out.println("d1 i21 i22 = " + Double.doubleToLongBits(d1) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("sArr fArr2 dArr = " + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0426.instanceCount iFld bFld = " + Test0426.instanceCount + "," + iFld + "," + (bFld ? 1 :
            0));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0426 _instance = new Test0426();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
