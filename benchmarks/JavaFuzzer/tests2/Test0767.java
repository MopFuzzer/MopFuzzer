// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0767 {

    public static final int N = 400;

    public static volatile long instanceCount=14L;
    public int iFld=-13285;
    public static double dFld=1.38711;
    public static byte byFld=92;
    public static volatile double dFld1=80.23394;
    public static volatile float fFld=1.684F;
    public volatile long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0767.iArrFld, -12532);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4) {

        long l1=-9161935060690191021L;
        float f2=1.812F;
        byte by=9;
        short s1=-30060;
        int i5=126;
        int i6=2;
        int[] iArr =new int[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, 14);
        FuzzerUtils.init(dArr, -22.122739);

        l1 = 1;
        do {
            iArr[(int) (l1)] >>= (int) Test0767.instanceCount;
            dArr[(int)(l1)] += i4;
            iArr[(int)(l1)] *= (int)f2;
            by += (byte)(l1 + f2);
            f2 = i4;
            Test0767.dFld -= s1;
            for (i5 = 1; i5 < 15; i5++) {
                Test0767.dFld = Test0767.dFld;
                i4 += (13205 + (i5 * i5));
                i4 = (int)f2;
                iArr[(int)(l1)] += i6;
                i6 = -17583;
                Test0767.instanceCount ^= i6;
            }
            iArr = FuzzerUtils.int1array(N, (int)4);
        } while ((l1 += 3) < 313);
        vMeth1_check_sum += i4 + l1 + Float.floatToIntBits(f2) + by + s1 + i5 + i6 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(float f1, short s) {

        int i2=-60845, i3=44939, i8=5, i9=50234, i10=158, i11=6, i12=13353;
        boolean b=false;
        long l2=-3911906559L, l3=176L;

        for (i2 = 12; i2 < 228; ++i2) {
            switch (((i2 % 9) * 5) + 118) {
            case 156:
                vMeth1(i3);
                Test0767.instanceCount += (((i2 * i2) + i2) - f1);
                switch ((i2 % 7) + 75) {
                case 75:
                    for (i8 = 7; i8 > 1; i8--) {
                        s += (short)i8;
                        for (i10 = 1; i10 < 2; ++i10) {
                            i9 -= (int) Test0767.dFld;
                            i11 += i12;
                            i3 = i12;
                            i9 += (((i10 * i8) + i9) - Test0767.instanceCount);
                            i12 *= i9;
                            i3 <<= (int)7227192424757222933L;
                            i11 += (i10 | Test0767.instanceCount);
                        }
                    }
                case 76:
                    i11 *= i11;
                    break;
                case 77:
                    Test0767.iArrFld[i2] -= i2;
                    break;
                case 78:
                    if (b) continue;
                    break;
                case 79:
                    Test0767.byFld += (byte) (((i2 * i3) + i8) - i11);
                    break;
                case 80:
                    Test0767.byFld = (byte) i9;
                    break;
                case 81:
                    Test0767.instanceCount >>= l2;
                default:
                    if (false) break;
                }
                break;
            case 126:
                Test0767.instanceCount -= i9;
                break;
            case 127:
                s = (short) Test0767.dFld;
            case 132:
                Test0767.instanceCount = i10;
                break;
            case 135:
                f1 += l3;
                break;
            case 162:
                i11 += (int) Test0767.dFld1;
                break;
            case 151:
                l2 = l3;
                break;
            case 119:
                l3 += (i2 * i2);
            case 120:
                i9 += (int) Test0767.dFld;
                break;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + s + i2 + i3 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + l2 + l3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1, long l) {

        boolean b1=false;
        double d=-2.67912;
        int i14=46, i15=26062;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-23);

        l >>= iMeth(Test0767.fFld, (short) (14181));
        i1 -= i1;
        b1 = b1;
        Test0767.iArrFld[(i >>> 1) % N] *= 8;
        i += i1;
        byArr[(i1 >>> 1) % N] = (byte)i;
        i1 = i1;
        i1 += (int) Test0767.dFld1;
        if (b1) {
            if (b1) {
                for (d = 8; d < 269; ++d) {
                    i15 = 1;
                    while (++i15 < 6) {
                        i1 -= i14;
                        Test0767.instanceCount *= (long) Test0767.fFld;
                        Test0767.iArrFld[i15] = (int) l;
                    }
                }
            } else if (b1) {
                l = i15;
            } else if (false) {
                Test0767.byFld = (byte) Test0767.dFld1;
            } else {
                i1 -= i1;
                vMeth_check_sum += i + i1 + l + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i14 + i15 +
                    FuzzerUtils.checkSum(byArr);
                return;
            }
        }
        vMeth_check_sum += i + i1 + l + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i14 + i15 +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        float f=1.97F;
        float[] fArr =new float[N];
        int i18=-7067, i19=-41842, i20=52586, i21=3, i22=-103, i23=5, i24=0, i25=1;
        boolean b2=false;
        long l4=3603996964967454028L;

        FuzzerUtils.init(fArr, 1.321F);

        f = (-f);
        iFld = (int) (iFld + ((2.73433 * (++Test0767.dFld)) - (lArrFld[(iFld >>> 1) % N]--)));
        vMeth(iFld, 27092, Test0767.instanceCount);
        i18 = 1;
        do {
            for (i19 = 3; i19 < 94; ++i19) {
                switch ((i19 % 3) + 74) {
                case 74:
                    for (i21 = i19; i21 < 2; ++i21) {
                        Test0767.iArrFld[i19 - 1] += (int) Test0767.fFld;
                        Test0767.instanceCount += i21;
                    }
                    Test0767.iArrFld = Test0767.iArrFld;
                    i22 -= iFld;
                    break;
                case 75:
                    iFld /= (int) (Test0767.instanceCount | 1);
                    i22 += i19;
                    break;
                case 76:
                    fArr[i19] = Test0767.instanceCount;
                    i22 = i23;
                    break;
                default:
                    Test0767.iArrFld[i19 - 1] -= Test0767.byFld;
                    f *= Test0767.instanceCount;
                    b2 = true;
                    for (l4 = 1; l4 < 2; ++l4) {
                        i25 += (20695 + (l4 * l4));
                        iFld += (int)(l4 * l4);
                        i25 += (41 + (l4 * l4));
                        switch (((i18 % 4) * 5) + 38) {
                        case 51:
                            b2 = false;
                            Test0767.instanceCount += 8950L;
                            break;
                        case 39:
                            try {
                                i20 = (i20 / i20);
                                i20 = (-233 / i19);
                                i25 = (Test0767.iArrFld[i18] % i25);
                            } catch (ArithmeticException a_e) {}
                            if (b2) break;
                            Test0767.iArrFld[(int) (l4 + 1)] = iFld;
                            break;
                        case 56:
                            i20 = i19;
                            i22 >>= i21;
                        case 44:
                            i24 = 8;
                            break;
                        default:
                            iFld += (int)(l4 * l4);
                        }
                    }
                }
            }
        } while (++i18 < 268);

        FuzzerUtils.out.println("f i18 i19 = " + Float.floatToIntBits(f) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 b2 l4 = " + i23 + "," + (b2 ? 1 : 0) + "," + l4);
        FuzzerUtils.out.println("i24 i25 fArr = " + i24 + "," + i25 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0767.instanceCount iFld Test0767.dFld = " + Test0767.instanceCount + "," + iFld + "," +
                Double.doubleToLongBits(Test0767.dFld));
        FuzzerUtils.out.println("Test0767.byFld Test0767.dFld1 Test0767.fFld = " + Test0767.byFld + "," +
                Double.doubleToLongBits(Test0767.dFld1) + "," + Float.floatToIntBits(Test0767.fFld));
        FuzzerUtils.out.println("lArrFld Test0767.iArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(Test0767.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0767 _instance = new Test0767();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
