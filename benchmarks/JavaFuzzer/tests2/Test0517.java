// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0517 {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static float fFld=-2.484F;
    public static boolean bFld=true;
    public byte byFld=-46;
    public static long[] lArrFld =new long[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0517.lArrFld, -44333L);
        FuzzerUtils.init(Test0517.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i10, long l1, boolean b1) {

        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 10);

        Test0517.bArrFld[(-59554 >>> 1) % N] = b1;
        iArr[(i10 >>> 1) % N] = (int) Test0517.fFld;
        long meth_res = i10 + l1 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l, int i7) {

        int i8=-35501;
        int i9=-1;
        int i11=108;
        int i12=128;
        int i13=-39763;
        int[] iArr1 =new int[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 104.379F);
        FuzzerUtils.init(iArr1, 194);

        for (i8 = 18; i8 < 360; ++i8) {
            if (Test0517.bFld) {
                l -= ((iMeth(i7, l, Test0517.bFld) - 31820L) - i8);
                try {
                    i9 = (i7 / i9);
                    i9 = (i9 % -38828);
                    i7 = (i7 / i7);
                } catch (ArithmeticException a_e) {}
                l += i9;
            } else if (Test0517.bFld) {
                fArr1[i8] += Test0517.instanceCount;
                Test0517.bArrFld = Test0517.bArrFld;
                i9 = (int)l;
                i7 = -11;
            } else if (Test0517.bFld) {
                Test0517.instanceCount = Test0517.instanceCount;
                Test0517.instanceCount += Test0517.instanceCount;
                for (i11 = 1; i11 < 5; i11++) {
                    i13 = 1;
                    do {
                        l -= 136;
                        Test0517.instanceCount = -3;
                    } while (++i13 < 2);
                }
            } else {
                iArr1[i8] *= -7442;
            }
        }
        long meth_res = l + i7 + i8 + i9 + i11 + i12 + i13 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(int i) {

        int i1=-130, i2=-13, i3=-39643, i4=17, i5=15, i6=-22881;
        short s=25826;
        double d=-1.75517;
        boolean b=false, b2=true;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -58.133F);

        for (i1 = 303; i1 > 7; i1--) {
            Test0517.instanceCount -= ((Test0517.lArrFld[i1 - 1] << Short.reverseBytes(s)) * (Test0517.instanceCount++));
            if (b2) {
                i >>= (int)((-(-(i2--))) * (--d));
            } else if (Test0517.bFld) {
                d -= ((i2--) * i1);
                for (i3 = 1; i3 < 6; i3++) {
                    d = i4;
                    if (b = Test0517.bArrFld[i1]) break;
                    fArr = fArr;
                    for (i5 = 1; 2 > i5; i5++) {
                        byte by=78;
                        Test0517.fFld += ((fArr[i5]--) - i);
                        Test0517.instanceCount += (long) (92.305F + (i5 * i5));
                        Test0517.instanceCount -= lMeth(Test0517.instanceCount, i6);
                        s += (short) (((i5 * i3) + Test0517.instanceCount) - i2);
                        by -= (byte) Test0517.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + s + Double.doubleToLongBits(d) + i3 + i4 + (b ? 1 : 0) + i5 + i6 + (b2 ? 1 :
            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i14=-2;
        int i16=78;
        int i17=35120;
        int i18=16734;
        int i19=31210;
        int i20=104;
        int i21=-9;
        int i22=35;
        int i23=-1;
        int[] iArr2 =new int[N];
        double d1=0.119632;
        long l2=189L;
        long[] lArr =new long[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr2, -125);
        FuzzerUtils.init(byArr, (byte)-95);
        FuzzerUtils.init(lArr, -34484L);

        vMeth(-8895);
        Test0517.lArrFld[(i14 >>> 1) % N] = i14;
        Test0517.instanceCount >>= Test0517.instanceCount;
        for (int i15 : iArr2) {
            Test0517.fFld -= -70.624F;
            Test0517.lArrFld = Test0517.lArrFld;
            for (i16 = 3; i16 < 63; i16++) {
                Test0517.fFld = byFld;
                for (i18 = 1; i18 < 2; ++i18) {
                    i19 >>>= i16;
                    Test0517.instanceCount -= i18;
                    i20 *= i19;
                    i17 = -58528;
                    Test0517.instanceCount = i18;
                    i15 = 12;
                    d1 -= 5;
                    i14 <<= (int) Test0517.instanceCount;
                    byArr = byArr;
                }
                if (false) {
                    for (l2 = 1; l2 < 2; ++l2) {
                        try {
                            iArr2[(int)(l2)] = (i16 % i21);
                            iArr2[(int)(l2 - 1)] = (i17 / i20);
                            iArr2[i16 - 1] = (i17 / 214);
                        } catch (ArithmeticException a_e) {}
                        i17 = (int) Test0517.fFld;
                        Test0517.fFld -= 12L;
                        i14 += (int)(l2 * l2);
                    }
                    for (i22 = 1; i22 < 2; i22++) {
                        iArr2[i22] = (int) Test0517.instanceCount;
                        i20 = i22;
                        lArr[i16 - 1] *= (long)d1;
                        i14 <<= i18;
                        if (Test0517.bFld) break;
                    }
                } else if (Test0517.bFld) {
                    Test0517.instanceCount |= l2;
                } else {
                    i20 += (((i16 * i15) + i15) - i16);
                }
            }
        }

        FuzzerUtils.out.println("i14 i16 i17 = " + i14 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d1 l2 i21 = " + Double.doubleToLongBits(d1) + "," + l2 + "," + i21);
        FuzzerUtils.out.println("i22 i23 iArr2 = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("byArr lArr = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0517.instanceCount Test0517.fFld Test0517.bFld = " + Test0517.instanceCount + "," +
                Float.floatToIntBits(Test0517.fFld) + "," + (Test0517.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test0517.lArrFld Test0517.bArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0517.lArrFld)
                + "," + FuzzerUtils.checkSum(Test0517.bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0517 _instance = new Test0517();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
