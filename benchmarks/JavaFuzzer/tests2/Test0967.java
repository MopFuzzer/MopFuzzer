// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0967 {

    public static final int N = 400;

    public static long instanceCount=8012403279724951L;
    public static short sFld=9655;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0967.iArrFld, -52247);
        FuzzerUtils.init(Test0967.fArrFld, 29.852F);
        FuzzerUtils.init(Test0967.lArrFld, 1L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i10=25, i11=115, i12=156, i13=-7, i14=-122, i15=-178, i16=13, i17=13248;
        float f3=-105.355F;
        byte by=48;

        i10 += Test0967.sFld;
        for (i11 = 13; i11 < 296; i11++) {
            for (i13 = 1; i13 < 6; i13++) {
                i14 <<= (int) Test0967.instanceCount;
                if (Test0967.bFld) continue;
                if (false) continue;
                f3 *= f3;
                Test0967.instanceCount += (27252 + (i13 * i13));
                Test0967.instanceCount += i10;
            }
            Test0967.iArrFld[i11 - 1] += 56004;
        }
        for (i15 = 1; i15 < 171; ++i15) {
            Test0967.instanceCount -= (long) 2.18567;
            i17 = 9;
            do {
                f3 /= -85.517F;
                Test0967.instanceCount += (((i17 * by) + Test0967.instanceCount) - Test0967.instanceCount);
            } while (--i17 > 0);
        }
        vMeth2_check_sum += i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f3) + i15 + i16 + i17 + by;
    }

    public static void vMeth1(double d1, int i7, float f2) {

        int i8=-3781, i9=11973, i18=1748, i19=8, i20=59531;
        float f4=-1.931F;
        byte by1=-82;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (i8 = 142; i8 > 3; i8 -= 2) {
            switch (((i8 % 1) * 5) + 1) {
            case 4:
            default:
                i7 *= ((Test0967.iArrFld[i8]--) - (i7--));
                vMeth2();
                try {
                    Test0967.iArrFld[i8] = (Test0967.iArrFld[i8 + 1] % 56748);
                    Test0967.iArrFld[i8 - 1] = (i9 / i9);
                    i9 = (Test0967.iArrFld[i8 - 1] % i9);
                } catch (ArithmeticException a_e) {}
                i9 = i7;
            }
            Test0967.instanceCount += (((i8 * i9) + f2) - i9);
            for (f4 = 1; f4 < 22; ++f4) {
                d1 += Test0967.sFld;
                i9 += (int)f4;
                Test0967.bFld = Test0967.bFld;
                for (i19 = 1; 2 > i19; ++i19) {
                    bArr[(int) (f4)] = Test0967.bFld;
                    Test0967.instanceCount = i18;
                    i9 += (((i19 * f4) + f2) - by1);
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i7 + Float.floatToIntBits(f2) + i8 + i9 +
            Float.floatToIntBits(f4) + i18 + i19 + i20 + by1 + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth() {

        int i4=9, i5=-9, i6=43, i21=209;
        float f1=0.779F;
        double d2=72.99501, d3=49.77977;
        byte by2=58;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, -2L);

        i4 = 182;
        while (--i4 > 0) {
            i5 *= i5;
            f1 += (((i4 * Test0967.sFld) + i6) - i5);
            vMeth1(d2, i4, f1);
            d2 *= 0.267F;
            Test0967.instanceCount -= by2;
            i5 = (int)41602L;
            d2 += i4;
            for (d3 = i4; d3 < 9; ++d3) {
                Test0967.instanceCount += (long) d3;
                lArr[(int)(d3)][i4] += i4;
                Test0967.sFld -= (short) i21;
                Test0967.instanceCount = i4;
                Test0967.instanceCount >>= -21306;
                i6 >>= by2;
            }
        }
        vMeth_check_sum += i4 + i5 + Float.floatToIntBits(f1) + i6 + Double.doubleToLongBits(d2) + by2 +
            Double.doubleToLongBits(d3) + i21 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-32192, i1=186, i2=0, i3=-48, i22=-177, i23=231, i24=-203, i25=-24541, i26=-14548, i27=5, i28=-8;
        double d=23.37928;
        float f=2.25F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-62);

        for (i = 3; i < 210; i++) {
            for (i2 = i; i2 < 121; ++i2) {
                i1 = (i1++);
                d -= (f++);
                f += (i3--);
                byArr[i] <<= (byte)((i3++) + (Integer.reverseBytes(i1) * i2));
                i3 -= (i2 - Math.min((int) (i1 *= (int) Test0967.instanceCount), i1++));
                f += (i2 * i2);
                vMeth();
                Test0967.fArrFld[i] = Test0967.instanceCount;
                i1 <<= (int) Test0967.instanceCount;
            }
            for (i22 = 2; i22 < 121; ++i22) {
                i24 = 1;
                while (++i24 < 2) {
                    Test0967.instanceCount += (((i24 * Test0967.instanceCount) + i3) - Test0967.instanceCount);
                    Test0967.lArrFld[i24] = i24;
                }
                i3 += i;
                for (i25 = 2; i < i25; i25 -= 3) {
                    i23 += (((i25 * i1) + Test0967.instanceCount) - i3);
                    Test0967.iArrFld[i25 + 1] += i;
                    Test0967.iArrFld = Test0967.iArrFld;
                }
                for (i27 = 1; 2 > i27; ++i27) {
                    switch ((i % 2) + 73) {
                    case 73:
                        if (Test0967.bFld) break;
                        Test0967.instanceCount = i25;
                        break;
                    case 74:
                        Test0967.lArrFld[i27] <<= i3;
                        i28 += (((i27 * i27) + i) - i24);
                        break;
                    default:
                        switch ((i27 % 1) + 57) {
                        case 57:
                            d = f;
                            i3 *= i1;
                            if (Test0967.bFld) continue;
                            break;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d f = " + i3 + "," + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 byArr = " + i28 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0967.instanceCount Test0967.sFld Test0967.bFld = " + Test0967.instanceCount + "," + Test0967.sFld +
                "," + (Test0967.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0967.iArrFld Test0967.fArrFld Test0967.lArrFld = " + FuzzerUtils.checkSum(Test0967.iArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0967.fArrFld)) + "," + FuzzerUtils.checkSum(Test0967.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0967 _instance = new Test0967();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
