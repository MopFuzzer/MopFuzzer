// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0782 {

    public static final int N = 400;

    public static volatile long instanceCount=162L;
    public static short sFld=23221;
    public static int iFld=223;
    public static boolean bFld=true;
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0782.sArrFld, (short) -11362);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long sMeth1_check_sum = 0;

    public static short sMeth1(int i1) {

        int i2=6321, i3=1, i4=39, i5=6;
        float f1=-1.550F;

        i1 ^= i1;
        i2 = 1;
        while (++i2 < 176) {
            i1 = i2;
            i1 = -42588;
            i3 = 1;
            while (++i3 < 9) {
                f1 = f1;
                i1 += (int) Test0782.instanceCount;
                Test0782.instanceCount = i1;
                i1 -= -11195;
                i1 += (((i3 * Test0782.instanceCount) + Test0782.instanceCount) - i2);
            }
            for (i4 = 9; i4 > 1; i4--) {
                i1 *= (int) Test0782.instanceCount;
                i5 += (((i4 * i4) + Test0782.instanceCount) - i3);
                f1 = Test0782.instanceCount;
            }
            i5 = (int) Test0782.instanceCount;
        }
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f1) + i4 + i5;
        sMeth1_check_sum += meth_res;
        return (short)meth_res;
    }

    public static short sMeth(short s, int i) {

        float f=-22.795F;
        int i6=77, i7=18755;
        double d=0.95290;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 7L);

        f = i;
        sMeth1(i);
        i -= (int) Test0782.instanceCount;
        lArr[(i >>> 1) % N] <<= i;
        for (i6 = 339; i6 > 9; i6--) {
            i += i;
            i7 ^= -15777;
            i7 -= -39912;
            Test0782.instanceCount = s;
            i -= s;
            d = 18;
            f -= f;
            f += (i6 + Test0782.instanceCount);
        }
        Test0782.instanceCount = (long) -1.111053;
        long meth_res = s + i + Float.floatToIntBits(f) + i6 + i7 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vSmallMeth() {

        int i8=-162;

        sMeth(Test0782.sFld, i8);
        vSmallMeth_check_sum += i8;
    }

    public void mainTest(String[] strArr1) {

        int i9=-3149;
        int i10=36;
        int i11=165;
        int i12=-6;
        int i13=-4;
        int i14=-11;
        int i15=-5;
        int i16=214;
        int i17=-11;
        int i18=-52233;
        int i19=234;
        int[] iArr =new int[N];
        float f2=85.900F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -1.771F);
        FuzzerUtils.init(iArr, -218);

        for (int smallinvoc=0; smallinvoc<560; smallinvoc++) vSmallMeth();
        for (i9 = 7; i9 < 136; i9 += 2) {
            Test0782.instanceCount = (long) -55.518F;
            i10 += (i9 * i9);
            for (i11 = 9; i11 < 391; i11++) {
                Test0782.instanceCount = i9;
                fArr[i11] -= Test0782.instanceCount;
                f2 -= i12;
                i10 = i11;
                Test0782.instanceCount = i9;
            }
            for (i13 = i9; i13 < 391; ++i13) {
                Test0782.instanceCount = Test0782.instanceCount;
                i10 = (int)-30868L;
                for (i15 = 1; i15 < 1; i15++) {
                    i10 = (int) Test0782.instanceCount;
                    iArr[i13 - 1] = i15;
                    i10 += i15;
                    i10 *= (int) Test0782.instanceCount;
                    i14 *= (int)1L;
                    f2 += (i15 * Test0782.instanceCount);
                    i14 *= i12;
                    i17 -= (int) Test0782.instanceCount;
                    Test0782.instanceCount *= i9;
                    iArr[i9 - 1] -= i14;
                }
                Test0782.instanceCount >>= Test0782.instanceCount;
                i16 += (((i13 * Test0782.iFld) + i15) - i14);
                Test0782.bFld = Test0782.bFld;
                for (i18 = 1; i18 < 1; i18++) {
                    i19 = (int) Test0782.instanceCount;
                    Test0782.sArrFld[i13] &= (short) 198;
                }
            }
        }

        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 f2 i13 = " + i12 + "," + Float.floatToIntBits(f2) + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("fArr iArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0782.instanceCount Test0782.sFld Test0782.iFld = " + Test0782.instanceCount + "," + Test0782.sFld +
                "," + Test0782.iFld);
        FuzzerUtils.out.println("Test0782.bFld Test0782.sArrFld = " + (Test0782.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0782.sArrFld));

        FuzzerUtils.out.println("sMeth1_check_sum: " + sMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0782 _instance = new Test0782();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  sMeth ->  sMeth vSmallMeth mainTest Test
//DEBUG  sMeth1 ->  sMeth1 sMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
