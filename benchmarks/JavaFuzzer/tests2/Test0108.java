// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0108 {

    public static final int N = 400;

    public static long instanceCount=11215L;
    public static short sFld=28967;
    public static byte byFld=-69;
    public long[] lArrFld =new long[N];
    public static byte[] byArrFld =new byte[N];
    public int[] iArrFld =new int[N];
    public short[] sArrFld =new short[N];
    public static volatile int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0108.byArrFld, (byte) 3);
        FuzzerUtils.init(Test0108.iArrFld1, -75);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i10, float f3) {

        int i13=10, i14=164, i15=-52545;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, -13L);

        for (int i11 : Test0108.iArrFld1) {
            int i12=11;
            f3 = f3;
            lArr = lArr;
            lArr[(i10 >>> 1) % N][(i11 >>> 1) % N] <<= -47480;
            try {
                i12 = (i12 % -43);
                i13 = (Test0108.iArrFld1[(i10 >>> 1) % N] / -373410294);
                Test0108.iArrFld1[(i10 >>> 1) % N] = (22 % i11);
            } catch (ArithmeticException a_e) {}
            if (i12 != 0) {
            }
        }
        for (i14 = 2; i14 < 172; i14++) {
            f3 *= f3;
            switch (((i14 % 7) * 5) + 8) {
            case 42:
                i13 += i14;
                Test0108.iArrFld1[i14 - 1] >>= i13;
                break;
            case 23:
                Test0108.iArrFld1[i14] <<= i10;
                i13 = (int) Test0108.instanceCount;
                Test0108.instanceCount -= Test0108.instanceCount;
            case 40:
                Test0108.iArrFld1 = Test0108.iArrFld1;
                break;
            case 10:
                Test0108.instanceCount *= i13;
                break;
            case 13:
                Test0108.instanceCount += -203;
                break;
            case 32:
                Test0108.instanceCount += i10;
                break;
            case 20:
                i10 = (int) Test0108.instanceCount;
                break;
            }
        }
        long meth_res = i10 + Float.floatToIntBits(f3) + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i7, float f2) {

        int i8=95, i9=9121, i18=42632, i19=-17121, i20=-19277, i21=-46;
        double d1=82.43498;

        for (i8 = 6; i8 < 123; i8++) {
            f2 = (Long.reverseBytes((long) (-17.73F + (i7 + i8))) + Test0108.instanceCount);
            Test0108.sFld >>>= (short) (iMeth1(i7, f2) + i9);
            Test0108.iArrFld1[i8] /= (int) 9L;
        }
        for (i18 = 17; i18 < 358; i18++) {
            Test0108.instanceCount = i9;
            Test0108.instanceCount += Test0108.instanceCount;
            Test0108.iArrFld1[i18] -= i7;
            for (i20 = 5; i20 > 1; i20 -= 2) {
                i19 += (((i20 * Test0108.instanceCount) + i21) - f2);
                i9 = (int) Test0108.instanceCount;
                switch (((i18 % 2) * 5) + 59) {
                case 67:
                    i7 >>= i20;
                    i7 *= (int)d1;
                    break;
                case 68:
                    Test0108.iArrFld1[i20 + 1] -= (int) Test0108.instanceCount;
                    break;
                }
            }
        }
        vMeth_check_sum += i7 + Float.floatToIntBits(f2) + i8 + i9 + i18 + i19 + i20 + i21 +
            Double.doubleToLongBits(d1);
    }

    public static int iMeth() {

        int i5=6, i6=3;
        boolean b=false;
        boolean b1=true;
        boolean[] bArr =new boolean[N];
        float f1=-9.855F;

        FuzzerUtils.init(bArr, true);

        for (i5 = 7; i5 < 255; i5++) {
            switch (((i5 % 2) * 5) + 62) {
            case 71:
                if ((b = ((false || b) & (i5 > f1))) & (bArr[i5 + 1] = b)) break;
                i6 += i5;
                break;
            case 69:
                Test0108.instanceCount /= ((-23741L - (243 - Test0108.iArrFld1[i5])) | 1);
                if (b) {
                    vMeth(i5, f1);
                    Test0108.instanceCount *= 22622;
                } else if (b) {
                    i6 += (int)(11019L + (i5 * i5));
                } else if (b1) {
                    switch ((i5 % 8) + 32) {
                    case 32:
                        f1 -= 13;
                        Test0108.instanceCount -= i5;
                        f1 += i5;
                        Test0108.byFld = (byte) -108.847F;
                        break;
                    case 33:
                        Test0108.instanceCount += (((i5 * i6) + i5) - Test0108.instanceCount);
                        break;
                    case 34:
                        Test0108.sFld += (short) f1;
                        break;
                    case 35:
                        if (i6 != 0) {
                        }
                        break;
                    case 36:
                        i6 = i5;
                        break;
                    case 37:
                        Test0108.instanceCount ^= i5;
                        break;
                    case 38:
                        i6 = i6;
                        break;
                    case 39:
                    default:
                        i6 = i6;
                    }
                } else {
                    Test0108.instanceCount = Test0108.instanceCount;
                }
            }
        }
        long meth_res = i5 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=-224, i2=65493, i3=189, i4=-3;
        double d=0.113860;
        double[] dArr =new double[N];
        long l=586600306L;
        float f=-1.170F;
        boolean b2=false, b3=true;

        FuzzerUtils.init(dArr, 105.121536);

        for (i = 2; 127 > i; i++) {
            i1 += i1;
            lArrFld[i] = (long) (d %= (((i - -38263) - (i * Test0108.instanceCount)) | 1));
            i1 = (int)(~l);
            l += (i * Test0108.instanceCount);
            for (f = 5; f < 201; f++) {
                i1 += Test0108.byArrFld[(int) (f)];
                Test0108.instanceCount = i1;
                for (i3 = 1; i3 < 2; ++i3) {
                    float f4=0.64F;
                    iArrFld[i3] += (int)((++dArr[i3]) * (++i4));
                    sArrFld[i3 + 1] = (short)iMeth();
                    i2 = i4;
                    i4 += (-12 + (i3 * i3));
                    switch ((i3 % 7) + 81) {
                    case 81:
                        iArrFld[(int)(f)] <<= i;
                    case 82:
                        Test0108.byFld = (byte) f;
                        i1 += i1;
                        i1 = (int)l;
                        break;
                    case 83:
                        f4 += f4;
                        Test0108.iArrFld1[i + 1] = (int) f;
                        l >>= -1;
                        switch ((i % 4) + 1) {
                        case 1:
                            if (b2) {
                                if (b2) break;
                                i1 *= i;
                            } else if (b2) {
                                i1 *= i4;
                            } else if (b2) {
                                switch ((((i1 >>> 1) % 2) * 5) + 96) {
                                case 99:
                                    i4 += (int) Test0108.instanceCount;
                                    l <<= Test0108.sFld;
                                    l += Test0108.sFld;
                                    break;
                                case 98:
                                    Test0108.instanceCount = (long) f4;
                                default:
                                    d = i3;
                                }
                            } else {
                                d = i2;
                            }
                        case 2:
                            f4 *= Test0108.instanceCount;
                            break;
                        case 3:
                            b2 = b3;
                            break;
                        case 4:
                            i1 = i;
                            break;
                        }
                        break;
                    case 84:
                        Test0108.iArrFld1[(int) (f + 1)] += -5;
                        break;
                    case 85:
                        i2 += (i3 * i3);
                        break;
                    case 86:
                        i2 *= i3;
                        break;
                    case 87:
                        f4 += i3;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("l f i2 = " + l + "," + Float.floatToIntBits(f) + "," + i2);
        FuzzerUtils.out.println("i3 i4 b2 = " + i3 + "," + i4 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("b3 dArr = " + (b3 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0108.instanceCount Test0108.sFld Test0108.byFld = " + Test0108.instanceCount + "," + Test0108.sFld +
                "," + Test0108.byFld);
        FuzzerUtils.out.println("lArrFld Test0108.byArrFld iArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(Test0108.byArrFld) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("sArrFld Test0108.iArrFld1 = " + FuzzerUtils.checkSum(sArrFld) + "," +
                FuzzerUtils.checkSum(Test0108.iArrFld1));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0108 _instance = new Test0108();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
