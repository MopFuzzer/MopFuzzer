// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0287 {

    public static final int N = 400;

    public static long instanceCount=-7L;
    public static volatile short sFld=16300;

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vSmallMeth(byte by) {

        int i1=-19598;
        float f=-65.737F;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 1L);

        i1 *= (int) ((lArr[(i1 >>> 1) % N][(i1 >>> 1) % N] * (f * f)) % (((i1 + Test0287.instanceCount) + (151 +
                (Test0287.instanceCount << 52))) | 1));
        i1 = i1;
        vSmallMeth_check_sum += by + i1 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth1() {

        int i4=-65217;
        int i5=195;
        int i6=154;
        int i7=43839;
        int[] iArr =new int[N];
        long l1=52182L, l2=61L;
        byte by2=113;
        float f1=-2.112F;
        float[] fArr =new float[N];
        boolean b=false;

        FuzzerUtils.init(iArr, -14719);
        FuzzerUtils.init(fArr, -2.803F);

        vSmallMeth((byte)(-16));
        i4 = 1;
        while (++i4 < 139) {
            Test0287.instanceCount = 30992;
            Test0287.instanceCount = i4;
            for (l1 = i4; l1 < 11; l1++) {
                by2 >>= (byte)i5;
                i6 *= i4;
                for (l2 = 1; 1 > l2; ++l2) {
                    if (b) {
                        Test0287.instanceCount = l1;
                        f1 += i6;
                    }
                    i6 = 42815;
                }
            }
            iArr[i4] -= i5;
            Test0287.instanceCount += i5;
            fArr[i4 + 1] = -4630;
        }
        long meth_res = i4 + l1 + i5 + by2 + i6 + l2 + i7 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(double d, long l) {

        int i2=-177, i3=55342, i8=-53190, i9=2, i10=-17575, i11=10, i12=4829, i13=-11, i14=48652;
        byte by1=-31;
        float f2=-105.76F;

        l -= -246;
        for (i2 = 3; i2 < 279; i2++) {
            by1 = (byte)(Integer.reverseBytes(iMeth1()) * i2);
        }
        try {
            l = -52536;
        }
        catch (NegativeArraySizeException exc1) {
            for (i8 = 7; i8 < 265; i8++) {
                i3 <<= (int)l;
                i3 = i9;
            }
            for (i10 = 13; i10 < 288; ++i10) {
                i9 *= i8;
                for (i12 = 6; i12 > i10; i12 -= 2) {
                    f2 -= i9;
                    i14 = 1;
                    while (++i14 < 1) {
                        i13 = i8;
                        i3 = 11;
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + l + i2 + i3 + by1 + i8 + i9 + i10 + i11 + i12 + i13 +
            Float.floatToIntBits(f2) + i14;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-39273;
        int i15=-56294;
        int i16=-38356;
        int i17=11;
        int i18=9;
        int i19=23198;
        int i20=207;
        int i21=64270;
        int i22=14;
        int[] iArr1 =new int[N];
        double d1=38.89760;
        double[] dArr =new double[N];
        float f3=0.295F;
        float[][] fArr1 =new float[N][N];
        byte by3=93;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr1, 2);
        FuzzerUtils.init(dArr, -45.41543);
        FuzzerUtils.init(lArr1, 60999L);
        FuzzerUtils.init(fArr1, -27.250F);

        i >>= i;
        for (int smallinvoc = 0; smallinvoc < 707; smallinvoc++)
            vSmallMeth((byte) (iMeth(d1, Test0287.instanceCount) / (i |
            1)));
        i = (int) Test0287.instanceCount;
        for (i15 = 17; i15 < 288; ++i15) {
            iArr1[i15 - 1] *= 16240;
            i *= (int)f3;
            d1 += 2500465162L;
        }
        for (i17 = 2; i17 < 143; i17++) {
            for (i19 = 178; i19 > 6; i19--) {
                d1 = f3;
                Test0287.instanceCount = i19;
                i *= 23156;
                dArr = dArr;
                for (i21 = 1; 2 > i21; i21++) {
                    try {
                        i22 = (i22 / 11521);
                        i22 = (i16 / iArr1[i19 + 1]);
                        i18 = (i16 / -210);
                    } catch (ArithmeticException a_e) {}
                    Test0287.instanceCount *= i;
                    Test0287.instanceCount -= i20;
                    iArr1[i17 + 1] = 30981;
                    Test0287.instanceCount += (i21 - i21);
                    d1 = i19;
                    switch ((i19 % 10) + 99) {
                    case 99:
                        lArr1[i19 + 1] += -23557;
                        break;
                    case 100:
                        lArr1[(i21 >>> 1) % N] += i22;
                        Test0287.instanceCount *= -50819;
                        switch ((i17 % 7) + 107) {
                        case 107:
                            Test0287.instanceCount = 211;
                            Test0287.instanceCount *= i;
                            i18 <<= Test0287.sFld;
                            by3 = (byte)i18;
                            break;
                        case 108:
                            i18 = i20;
                            break;
                        case 109:
                            i20 *= (int) Test0287.instanceCount;
                            break;
                        case 110:
                            i = i22;
                            break;
                        case 111:
                        case 112:
                            iArr1[i19 - 1] -= i20;
                            break;
                        case 113:
                            f3 += i20;
                            break;
                        }
                        break;
                    case 101:
                        i = i17;
                        break;
                    case 102:
                        i22 <<= -14;
                        break;
                    case 103:
                        Test0287.sFld &= (short) Test0287.instanceCount;
                        break;
                    case 104:
                        Test0287.instanceCount += by3;
                        break;
                    case 105:
                        iArr1[i19 - 1] = i;
                        break;
                    case 106:
                        fArr1[i17 - 1] = FuzzerUtils.float1array(N, (float)14.1020F);
                        break;
                    case 107:
                        fArr1[i19][i19 - 1] -= i18;
                        break;
                    case 108:
                        try {
                            i18 = (-32810 / i16);
                            i16 = (-1381908470 % i16);
                            i16 = (-16446 / iArr1[i17 + 1]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    default:
                        i18 >>= i19;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i d1 i15 = " + i + "," + Double.doubleToLongBits(d1) + "," + i15);
        FuzzerUtils.out.println("i16 f3 i17 = " + i16 + "," + Float.floatToIntBits(f3) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 by3 = " + i21 + "," + i22 + "," + by3);
        FuzzerUtils.out.println("iArr1 dArr lArr1 = " + FuzzerUtils.checkSum(iArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0287.instanceCount Test0287.sFld = " + Test0287.instanceCount + "," + Test0287.sFld);

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0287 _instance = new Test0287();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test iMeth1 iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
