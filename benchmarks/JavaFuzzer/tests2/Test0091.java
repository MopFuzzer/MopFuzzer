// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0091 {

    public static final int N = 400;

    public static long instanceCount=-141L;
    public static int iFld=-39761;
    public static volatile short sFld=16071;
    public static long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];
    public static long[] lArrFld1 =new long[N];

    static {
        FuzzerUtils.init(Test0091.lArrFld, -217L);
        FuzzerUtils.init(Test0091.fArrFld, 0.1009F);
        FuzzerUtils.init(Test0091.lArrFld1, -3121315890L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(boolean b, float f2, long l) {

        double d1=-2.75225;
        int i4=-39531;
        int i5=47149;
        int i6=-63596;
        int i7=167;
        int i8=-140;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 25168);

        Test0091.iFld += (int) d1;
        Test0091.instanceCount = 49028;
        Test0091.lArrFld[(Test0091.iFld >>> 1) % N] = l;
        b = false;
        Test0091.instanceCount = Test0091.instanceCount;
        for (i4 = 9; i4 < 193; i4++) {
            for (i6 = 1; i6 < 9; ++i6) {
                iArr1[i4] -= i4;
                d1 -= Test0091.iFld;
                i8 = 1;
                while (++i8 < 2) {
                    b = true;
                    iArr1 = iArr1;
                    b = false;
                    f2 -= Test0091.instanceCount;
                    Test0091.iFld -= (int) -2.460F;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + Float.floatToIntBits(f2) + l + Double.doubleToLongBits(d1) + i4 + i5 + i6 + i7 +
            i8 + FuzzerUtils.checkSum(iArr1);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth() {

        int i2=-2;
        int i3=-10;
        int i9=59;
        int i10=-43596;
        int[] iArr =new int[N];
        double d=74.123484;
        float f1=60.71F;
        byte by=76;

        FuzzerUtils.init(iArr, -76);

        for (i2 = 9; i2 < 230; i2++) {
            Test0091.iFld |= (int) (d + 47235);
            f1 = 7;
            while ((f1 -= 3) > 0) {
                iArr[i2] += (int)(d--);
                Test0091.sFld *= (short) ((lMeth1(false, f1, Test0091.instanceCount) + f1) + Test0091.iFld);
                for (i9 = 1; i9 < 3; ++i9) {
                    Test0091.iFld >>= by;
                    iArr[i2] *= Test0091.iFld;
                }
                i10 <<= (int) Test0091.instanceCount;
                Test0091.iFld = (int) Test0091.instanceCount;
                iArr[i2 - 1] = i2;
                i10 += (int)((long)f1 | (long)f1);
                i10 = (int) Test0091.instanceCount;
                i3 *= 32;
            }
            Test0091.iFld = (int) 1.682F;
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i9 + i10 + by +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, short s, int i1) {

        float f=-56.544F;
        int i11=19;
        int i12=83;
        int i13=-62910;
        int i14=-13;
        int i15=-7;
        int i16=13;
        int i17=4;
        int i18=-75;
        int i19=-11;
        int i20=186;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, -42);

        f = lMeth();
        iArr2[(i11 >>> 1) % N] = (int) Test0091.instanceCount;
        for (i12 = 1; i12 < 163; ++i12) {
            i14 = 1;
            while (++i14 < 10) {
                Test0091.instanceCount = Test0091.iFld;
                i13 <<= i13;
            }
            i1 *= (int) Test0091.instanceCount;
        }
        Test0091.fArrFld[(i13 >>> 1) % N] -= i;
        for (i15 = 214; i15 > 11; --i15) {
            i16 += i15;
            for (i17 = i15; i17 < 8; i17++) {
                for (i19 = 1; i19 < 1; ++i19) {
                    i16 = i16;
                    i20 -= (int)f;
                    Test0091.fArrFld = Test0091.fArrFld;
                }
            }
        }
        vMeth_check_sum += i + s + i1 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 +
            i20 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        float f3=2.740F, f4=9.686F;
        int i21=-12;
        int i22=21886;
        int i23=-168;
        int i24=250;
        int i25=17;
        int i26=65;
        int i27=-6;
        int i28=-8;
        int i29=3738;
        int[] iArr3 =new int[N];
        boolean b1=true;
        byte by1=-6;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr3, 111);
        FuzzerUtils.init(dArr, 2.90972);

        Test0091.iFld *= (Test0091.iFld - ((Test0091.sFld * Test0091.iFld) + Test0091.iFld));
        vMeth(Test0091.iFld, Test0091.sFld, Test0091.iFld);
        f3 += Test0091.instanceCount;
        Test0091.iFld = -100;
        for (i21 = 2; i21 < 155; i21++) {
            double d2=-2.15460;
            for (i23 = 10; i23 < 164; ++i23) {
                if (b1) continue;
                Test0091.iFld >>= -30050;
                i24 += (int)-2897757156L;
                Test0091.instanceCount += (((i23 * i21) + i24) - i22);
                iArr3 = iArr3;
            }
            Test0091.lArrFld1[i21 + 1] <<= i24;
            f3 = (float)d2;
            Test0091.instanceCount = i24;
            switch ((i21 % 3) + 33) {
            case 33:
                i25 = 1;
                do {
                    Test0091.instanceCount *= Test0091.sFld;
                    Test0091.instanceCount = Test0091.iFld;
                    Test0091.iFld = i21;
                    Test0091.instanceCount <<= Test0091.instanceCount;
                    switch ((((i23 >>> 1) % 4) * 5) + 14) {
                    case 21:
                        d2 += -33746;
                        break;
                    case 18:
                        switch ((((i25 >>> 1) % 6) * 5) + 29) {
                        case 34:
                            dArr[i25 - 1] += Test0091.sFld;
                            Test0091.instanceCount += (((i25 * i24) + Test0091.sFld) - Test0091.instanceCount);
                            for (f4 = 1; f4 < 1; f4 += 3) {
                                try {
                                    i24 = (99 % i22);
                                    Test0091.iFld = (i21 / -1847);
                                    Test0091.iFld = (i22 / Test0091.iFld);
                                } catch (ArithmeticException a_e) {}
                            }
                            for (i27 = 1; i27 > 1; i27--) {
                                i22 = (int)d2;
                                f3 -= (float)d2;
                            }
                            break;
                        case 54:
                            Test0091.sFld -= (short) Test0091.iFld;
                            break;
                        case 45:
                            Test0091.lArrFld[i25] >>= i28;
                        case 35:
                            f3 *= i21;
                            break;
                        case 46:
                            i29 -= by1;
                            break;
                        case 40:
                            i24 += (i25 | i28);
                            break;
                        default:
                            i28 += i25;
                        }
                        break;
                    case 20:
                    case 15:
                        Test0091.iFld -= -174;
                        break;
                    }
                } while (++i25 < 164);
            case 34:
                i28 = -56907;
                break;
            case 35:
                Test0091.iFld += (int) -76.20F;
            }
        }

        FuzzerUtils.out.println("f3 i21 i22 = " + Float.floatToIntBits(f3) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 b1 = " + i23 + "," + i24 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i25 f4 i26 = " + i25 + "," + Float.floatToIntBits(f4) + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("by1 iArr3 dArr = " + by1 + "," + FuzzerUtils.checkSum(iArr3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0091.instanceCount Test0091.iFld Test0091.sFld = " + Test0091.instanceCount + "," + Test0091.iFld +
                "," + Test0091.sFld);
        FuzzerUtils.out.println("Test0091.lArrFld Test0091.fArrFld Test0091.lArrFld1 = " + FuzzerUtils.checkSum(Test0091.lArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0091.fArrFld)) + "," + FuzzerUtils.checkSum(Test0091.lArrFld1));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0091 _instance = new Test0091();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
