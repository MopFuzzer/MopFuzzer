// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0284 {

    public static final int N = 400;

    public static long instanceCount=8030789181814410082L;
    public static float fFld=-2.866F;
    public static volatile long lFld=134L;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0284.iArrFld, -24012);
        FuzzerUtils.init(Test0284.fArrFld, 1.856F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i2, int i3, int i4) {

        int i5=-13, i6=-106, i7=109, i8=-28092, i9=34540;
        boolean b=true;

        i5 = 1;
        while (++i5 < 275) {
            Test0284.instanceCount -= i4;
        }
        i3 ^= (int) Test0284.instanceCount;
        for (i6 = 2; i6 < 298; i6++) {
            i8 = 1;
            do {
                Test0284.instanceCount += (i8 - i6);
                i4 >>= 4;
                if (i4 != 0) {
                }
                Test0284.fFld += i8;
                if (b) {
                    Test0284.iArrFld[i8 - 1] = (int) Test0284.instanceCount;
                    i7 += i2;
                    i9 = 1;
                    while (++i9 < 3) {
                        if (b) continue;
                        i7 = i5;
                    }
                }
            } while ((i8 += 3) < 6);
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        int i10=57448;
        int i11=-211;
        int i12=-59708;
        int i13=11;
        int i14=-3;
        int i15=45423;
        int i16=-10;
        int[][] iArr =new int[N][N];
        byte by=83;
        boolean b1=false;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.43F);
        FuzzerUtils.init(iArr, 67);

        lMeth(i10, i10, i10);
        for (i11 = 14; 236 > i11; ++i11) {
            i10 = 90;
            i12 = by;
            fArr[i11 - 1] += Test0284.instanceCount;
        }
        i10 -= i11;
        i10 ^= (int) Test0284.instanceCount;
        i13 = 1;
        do {
            Test0284.instanceCount += (-4 + (i13 * i13));
        } while (++i13 < 164);
        if (b1) {
            i10 >>>= i12;
            i14 = 296;
            do {
                for (i15 = i14; i15 < 11; ++i15) {
                    Test0284.fFld *= i10;
                    iArr[i15 + 1][i15 + 1] = (int) Test0284.fFld;
                }
            } while ((i14 -= 2) > 0);
        } else if (b1) {
            i10 -= (int) Test0284.instanceCount;
        } else if (false) {
            iArr[(i13 >>> 1) % N][(i13 >>> 1) % N] = -29;
        }
        vMeth1_check_sum += i10 + i11 + i12 + by + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l) {

        int i1=11;
        byte by1=-23;
        byte[] byArr =new byte[N];
        double d=1.15163;

        FuzzerUtils.init(byArr, (byte)113);

        i1 = (int) ((--Test0284.fFld) - Math.abs(i1 * -5));
        vMeth1();
        by1 &= (byte)i1;
        d *= i1;
        byArr = byArr;
        Test0284.fFld = Test0284.fFld;
        vMeth_check_sum += l + i1 + by1 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-20400, i17=-14, i19=5, i20=-50723, i21=36109, i22=109;
        byte by2=-23;
        short s=-9902;
        double d1=70.102465;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -8L);
        FuzzerUtils.init(dArr, 0.19011);

        i = 1;
        while (++i < 165) {
            vMeth(Test0284.lFld);
            i17 >>= by2;
            i17 -= i;
            i17 -= s;
            Test0284.fArrFld[i] -= Test0284.lFld;
            Test0284.fArrFld[i + 1] -= 15833;
            Test0284.iArrFld[i] = s;
            for (i19 = 152; i19 > 3; i19 -= 3) {
                i17 *= (int)d1;
                try {
                    Test0284.iArrFld[i + 1] = (i19 / 5291);
                    Test0284.iArrFld[i + 1] = (i17 / Test0284.iArrFld[i19]);
                    i17 = (-72 / i20);
                } catch (ArithmeticException a_e) {}
                i20 = 29972;
                i20 += (2 + (i19 * i19));
                bFld = bFld;
            }
            by2 *= (byte)i19;
        }
        Test0284.iArrFld[(129 >>> 1) % N] = i17;
        Test0284.fFld = (float) d1;
        i21 = 1;
        do {
            i17 -= -7;
            i20 += i19;
            if (bFld) {
                Test0284.lFld = i20;
                i20 -= i20;
                Test0284.fFld = 12208;
            }
        } while (++i21 < 154);
        Test0284.instanceCount >>>= by2;
        switch (((i21 >>> 1) % 7) + 66) {
        case 66:
            i22 = 200;
            do {
                if (bFld) {
                    i17 = i19;
                    d1 -= i19;
                }
            } while (--i22 > 0);
            break;
        case 67:
            i20 = i21;
            break;
        case 68:
            dArr = dArr;
            break;
        case 69:
            Test0284.lFld = i;
            break;
        case 70:
            Test0284.instanceCount = i21;
        case 71:
            i20 -= -249;
            break;
        case 72:
            i20 = (int)440731626L;
            break;
        default:
            Test0284.iArrFld[(i19 >>> 1) % N] += i21;
        }

        FuzzerUtils.out.println("i i17 by2 = " + i + "," + i17 + "," + by2);
        FuzzerUtils.out.println("s i19 i20 = " + s + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d1 i21 i22 = " + Double.doubleToLongBits(d1) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("lArr dArr = " + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0284.instanceCount Test0284.fFld Test0284.lFld = " + Test0284.instanceCount + "," +
                Float.floatToIntBits(Test0284.fFld) + "," + Test0284.lFld);
        FuzzerUtils.out.println("bFld Test0284.iArrFld Test0284.fArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0284.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0284.fArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0284 _instance = new Test0284();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
