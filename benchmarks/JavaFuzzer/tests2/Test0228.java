// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0228 {

    public static final int N = 400;

    public static long instanceCount=50193L;
    public static byte byFld=-4;
    public static double dFld=-4.47040;
    public static short sFld=12709;
    public static int iFld=19;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0228.iArrFld, -31386);
        FuzzerUtils.init(Test0228.fArrFld, 77.1021F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i5) {

        float f1=-98.631F;
        int i6=2, i8=0, i9=7, i10=30188, i11=-153;
        boolean b=true;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 117L);

        f1 += f1;
        i6 = 374;
        do {
            f1 += Test0228.byFld;
            i5 += i6;
            i5 -= i6;
            if (b) {
                i5 *= (int)-1.635F;
                for (i8 = i6; i8 < 5; ++i8) {
                    for (i10 = i6; i10 < 1; i10++) {
                        i11 += i10;
                        i11 *= (int)104.25F;
                        Test0228.instanceCount = i10;
                        lArr1[i8 - 1] -= i11;
                        i9 = i8;
                        i9 = (int) Test0228.instanceCount;
                    }
                }
            } else {
                b = b;
            }
        } while (--i6 > 0);
        long meth_res = i5 + Float.floatToIntBits(f1) + i6 + i8 + i9 + i10 + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1() {

        int i1=46, i2=-67, i3=-38388, i4=22768, i12=-2, i13=10;
        float f=0.55F;

        for (i1 = 12; i1 < 356; i1++) {
            i2 += (int) Math.abs((i1 + i2) - (Test0228.iArrFld[i1] *= i1));
            i2 += (-4 + (i1 * i1));
            for (i3 = 1; 5 > i3; ++i3) {
                f = (-i4);
                Test0228.instanceCount -= (long) ((f--) - (sMeth(i4) + 54.83128));
                i4 *= i1;
                for (i12 = 1; 2 > i12; ++i12) {
                    i4 = (int)f;
                    i13 += (i12 ^ i2);
                    f += i12;
                    Test0228.dFld -= 17849;
                    Test0228.sFld += (short) f;
                    Test0228.instanceCount += (((i12 * i4) + f) - Test0228.instanceCount);
                    Test0228.dFld = 107.103970;
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i12 + i13;
    }

    public static void vMeth(int i, double d, double d1) {

        float f2=-2.991F;
        long l=-19021L;
        long[] lArr =new long[N];
        int i14=51527, i15=-13, i16=5846;

        FuzzerUtils.init(lArr, 0L);

        i = i;
        lArr[(65334 >>> 1) % N] = (long)(d * i);
        vMeth1();
        f2 = 1;
        while (++f2 < 161) {
            Test0228.iArrFld[(int) (f2)] = (int) l;
            i += (int)1.16752;
            switch (((i >>> 1) % 1) + 114) {
            case 114:
                i += (int)((long)f2 | i);
                i = 10;
                for (i14 = 1; i14 < 10; ++i14) {
                    lArr[i14 - 1] += i15;
                    i = i15;
                }
            default:
                i16 = 1;
                while (++i16 < 10) {
                    float f3=0.684F;
                    f3 += 2L;
                    d1 -= i16;
                }
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + l
            + i14 + i15 + i16 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=4, i18=11, i19=8, i20=-12, i21=11, i22=46250, i23=-3, i24=-147, i25=-10, i26=-11, i27=6;
        float f4=0.728F, f5=2.675F;
        double d2=2.52914, d3=-116.32440;
        boolean b1=false;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 3700046309L);

        vMeth(-5, Test0228.dFld, Test0228.dFld);
        Test0228.fArrFld[(i17 >>> 1) % N] += Test0228.instanceCount;
        for (i18 = 8; 156 > i18; ++i18) {
            Test0228.iArrFld[i18 + 1] = Test0228.byFld;
        }
        Test0228.iArrFld[(i17 >>> 1) % N] *= (int) f4;
        i17 <<= i18;
        for (d2 = 134; d2 > 2; d2--) {
            Test0228.instanceCount += (long) (d2 - i17);
            i19 += i18;
            for (i21 = (int)(d2); i21 < 190; i21++) {
                Test0228.dFld -= i18;
                i19 = (int) Test0228.instanceCount;
                for (f5 = 1; f5 < 1; ++f5) {
                    i19 *= (int) Test0228.instanceCount;
                    i19 = i23;
                    d3 *= i21;
                    f4 += f5;
                    Test0228.instanceCount += (long) f5;
                    lArr2[(int)(d2 - 1)] *= i19;
                    f4 += (((f5 * i18) + i20) - i21);
                }
                Test0228.byFld += (byte) (i21 - Test0228.iFld);
            }
            for (i24 = (int)(d2); i24 < 190; ++i24) {
                for (i26 = (int)(d2); i26 < 1; i26++) {
                    if (b1) break;
                    try {
                        i25 = (Test0228.iArrFld[i26 - 1] / i17);
                        i20 = (i22 % i25);
                        Test0228.iArrFld[i24] = (-232 / i20);
                    } catch (ArithmeticException a_e) {}
                    i25 <<= (int) Test0228.instanceCount;
                    Test0228.dFld = Test0228.instanceCount;
                }
                Test0228.byFld &= (byte) 12;
                i23 = i20;
                f4 += (i24 + Test0228.instanceCount);
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f4 d2 i20 = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d2) + "," +
            i20);
        FuzzerUtils.out.println("i21 i22 f5 = " + i21 + "," + i22 + "," + Float.floatToIntBits(f5));
        FuzzerUtils.out.println("i23 d3 i24 = " + i23 + "," + Double.doubleToLongBits(d3) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b1 lArr2 = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0228.instanceCount Test0228.byFld Test0228.dFld = " + Test0228.instanceCount + "," + Test0228.byFld +
                "," + Double.doubleToLongBits(Test0228.dFld));
        FuzzerUtils.out.println("Test0228.sFld Test0228.iFld Test0228.iArrFld = " + Test0228.sFld + "," + Test0228.iFld + "," +
                FuzzerUtils.checkSum(Test0228.iArrFld));
        FuzzerUtils.out.println("Test0228.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0228.fArrFld)));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0228 _instance = new Test0228();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
