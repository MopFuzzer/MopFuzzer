// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0072 {

    public static final int N = 400;

    public static long instanceCount=3545764798240285857L;
    public static int iFld=2;
    public double dFld=0.89368;
    public double dFld1=0.8984;
    public boolean bFld=false;
    public int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0072.fArrFld, -88.605F);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public void vMeth(int i3) {

        int i4=-21611, i5=91, i6=52809, i7=0;
        float f=-30.57F;
        byte by1=-94;

        i4 = 1;
        while (++i4 < 283) {
            Test0072.instanceCount += (i4 * Test0072.instanceCount);
            dFld += 6603293981714591119L;
            f += Test0072.iFld;
            Test0072.instanceCount <<= i4;
            Test0072.instanceCount += i4;
            Test0072.instanceCount = by1;
            Test0072.iFld = i3;
            Test0072.iFld = (int) Test0072.instanceCount;
            for (i5 = 1; i5 < 6; i5++) {
                switch ((i5 % 1) + 102) {
                case 102:
                    i3 -= i5;
                    f = Test0072.instanceCount;
                    i7 += -30;
                }
                i3 = (int)-8L;
            }
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f) + by1 + i5 + i6 + i7;
    }

    public int iMeth1(long l, int i2, long l1) {

        int i8=-132, i9=16, i10=-75, i11=7, i12=-9;
        float f1=1.262F;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 0.75509);

        dArr[(Test0072.iFld >>> 1) % N] *= (Math.min(i2--, (int) (dFld1 + dFld1)) + ((75 - (Test0072.instanceCount + -3)) *
            (--l1)));
        vMeth(Test0072.iFld);
        for (i8 = 5; i8 < 180; ++i8) {
            for (i10 = 1; 9 > i10; ++i10) {
                Test0072.iFld -= i8;
                i12 = 1;
                do {
                    short s=-14370;
                    Test0072.iFld += (i12 * l);
                    switch (((i10 % 6) * 5) + 50) {
                    case 57:
                        iArrFld[i12] = 3261;
                        i11 += i8;
                        i2 ^= i2;
                        s = (short)i9;
                    case 62:
                        i9 >>= i2;
                        l += (long)f1;
                        i11 = -18338;
                        break;
                    case 73:
                        l1 += 55;
                        break;
                    case 55:
                    case 52:
                        i2 += (i12 | i9);
                    case 54:
                        Test0072.iFld <<= i8;
                        break;
                    }
                } while (++i12 < 2);
            }
        }
        long meth_res = l + i2 + l1 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(byte by) {

        int i=-126, i1=10882, i13=-174, i14=-72;
        float f2=64.855F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-6);

        by >>>= (byte) (dFld - Test0072.iFld);
        byArr[(Test0072.iFld >>> 1) % N] += (byte) Test0072.iFld;
        Test0072.iFld -= (int) ((-(Test0072.instanceCount * Test0072.instanceCount)) - (dFld + 8725398266114529406L));
        for (i = 4; i < 133; i++) {
            i1 -= (((225 >> iMeth1(Test0072.instanceCount, i1, Test0072.instanceCount)) + 134) * i);
            Test0072.iFld += (((i * i1) + i) - f2);
        }
        i13 = 1;
        do {
            i1 -= i13;
            Test0072.iFld -= i1;
            f2 += 1;
            iArrFld[i13] = (int)630769146L;
            i14 = 1;
            do {
                iArrFld[i13] = i14;
                iArrFld[i13 - 1] = i13;
                f2 += by;
            } while ((i14 += 2) < 6);
        } while (++i13 < 274);
        long meth_res = by + i + i1 + Float.floatToIntBits(f2) + i13 + i14 + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by2=61;
        byte[] byArr1 =new byte[N];
        int i15=-237, i16=16717, i17=-10, i18=-15728, i19=244;
        float f3=1.1019F;
        short s1=20354;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr, 4350212654959653192L);
        FuzzerUtils.init(byArr1, (byte)-96);

        iArrFld[(Test0072.iFld >>> 1) % N] = iMeth(by2);
        Test0072.instanceCount -= (long) 50.5852;
        bArr[(Test0072.iFld >>> 1) % N] = bFld;
        lArr[(Test0072.iFld >>> 1) % N] += (long) dFld;
        i15 = 277;
        do {
            Test0072.fArrFld[i15 - 1] *= i15;
        } while ((i15 -= 2) > 0);
        i16 = 1;
        do {
            Test0072.instanceCount += 168;
            Test0072.iFld += i16;
            i17 = 1;
            while (++i17 < 83) {
                iArrFld[i16 + 1] = Test0072.iFld;
                Test0072.instanceCount += (-11 + (i17 * i17));
                f3 *= i15;
                byArr1[i16] *= (byte)i17;
                Test0072.iFld %= (int) (i15 | 1);
                switch ((i17 % 7) + 32) {
                case 32:
                    switch ((((Test0072.iFld >>> 1) % 10) * 5) + 54) {
                    case 82:
                        Test0072.iFld += (int) f3;
                    case 76:
                        Test0072.instanceCount *= 59086;
                        break;
                    case 94:
                        Test0072.instanceCount -= (long) dFld;
                        break;
                    case 89:
                        Test0072.iFld = i16;
                        Test0072.iFld %= (int) (by2 | 1);
                        for (i18 = 1; i18 < 1; i18++) {
                            bFld = bFld;
                            i19 |= -5;
                            i19 += (i18 - s1);
                            by2 += (byte)i18;
                            Test0072.iFld = i19;
                            iArrFld[i17 + 1] += (int)5.9F;
                        }
                    case 98:
                        i19 += s1;
                        break;
                    case 64:
                        i19 -= (int) Test0072.instanceCount;
                        break;
                    case 86:
                        f3 += Test0072.iFld;
                        break;
                    case 87:
                        lArr[i17 + 1] = (long)f3;
                        break;
                    case 65:
                        if (bFld) break;
                        break;
                    case 80:
                        i19 = i17;
                    default:
                        Test0072.instanceCount = -1574810644L;
                    }
                    break;
                case 33:
                    Test0072.iFld += 54852;
                    break;
                case 34:
                    iArrFld[i16 - 1] |= i18;
                    break;
                case 35:
                    iArrFld[i17 - 1] += i17;
                    break;
                case 36:
                    bArr[i16 - 1] = bFld;
                    break;
                case 37:
                    byArr1[i17] <<= (byte)1L;
                    break;
                case 38:
                    Test0072.instanceCount -= Test0072.iFld;
                    break;
                default:
                    dFld *= dFld;
                }
            }
        } while (++i16 < 302);

        FuzzerUtils.out.println("by2 i15 i16 = " + by2 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 f3 i18 = " + i17 + "," + Float.floatToIntBits(f3) + "," + i18);
        FuzzerUtils.out.println("i19 s1 bArr = " + i19 + "," + s1 + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("lArr byArr1 = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0072.instanceCount Test0072.iFld dFld = " + Test0072.instanceCount + "," + Test0072.iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("dFld1 bFld iArrFld = " + Double.doubleToLongBits(dFld1) + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0072.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0072.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0072 _instance = new Test0072();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
