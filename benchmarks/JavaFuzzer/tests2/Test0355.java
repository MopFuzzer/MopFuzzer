// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0355 {

    public static final int N = 400;

    public static long instanceCount=-39463L;
    public static float fFld=-45.592F;
    public double dFld=-76.27608;
    public static volatile byte byFld=103;
    public volatile short sFld=-3810;
    public volatile float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0355.iArrFld, 5269);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, long l) {

        double d1=0.37785;
        int i9=-101;
        int i10=16525;
        int i11=198;
        int i12=35125;
        int i13=-61830;
        int i14=0;
        int[] iArr =new int[N];
        boolean b=true;
        short s1=-14555;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 39381);
        FuzzerUtils.init(lArr, -2810600860286015076L);

        d1 -= Test0355.instanceCount;
        for (i9 = 13; 370 > i9; ++i9) {
            l = l;
            if (b) continue;
            for (i11 = i9; i11 < 5; ++i11) {
                Test0355.fFld -= -41073L;
                i12 += -13;
                s1 *= (short)229;
                i12 >>= (int) Test0355.instanceCount;
                try {
                    i10 = (iArr[i9] % i12);
                    i8 = (-6271 % iArr[i11]);
                    i12 = (i11 % -37);
                } catch (ArithmeticException a_e) {}
            }
            lArr[i9 - 1] -= i9;
            i8 += -6;
            for (i13 = 5; i13 > 1; i13 -= 3) {
                d1 -= i12;
                s1 = (short)i13;
            }
        }
        vMeth1_check_sum += i8 + l + Double.doubleToLongBits(d1) + i9 + i10 + (b ? 1 : 0) + i11 + i12 + s1 + i13 + i14
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static short sMeth(double d, int i5) {

        int i6=3;
        int i7=-126;
        int i15=63802;
        int[] iArr1 =new int[N];
        boolean b1=true;
        float f=0.770F;

        FuzzerUtils.init(iArr1, 95);

        for (i6 = 12; i6 < 217; i6++) {
            vMeth1(i7, Test0355.instanceCount);
            Test0355.instanceCount >>= Test0355.instanceCount;
            if (b1) {
                i7 = (int) Test0355.fFld;
                switch ((i6 % 1) + 67) {
                case 67:
                    Test0355.instanceCount = Test0355.instanceCount;
                    Test0355.instanceCount += (i6 * Test0355.instanceCount);
                    break;
                }
                i7 = (int)d;
            } else {
                for (f = 1; 8 > f; f++) {
                    Test0355.instanceCount += (long) (f * f);
                    iArr1[(int)(f - 1)] = i7;
                    i7 = (int) Test0355.instanceCount;
                    Test0355.instanceCount -= Test0355.instanceCount;
                }
                i5 >>>= i5;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i5 + i6 + i7 + (b1 ? 1 : 0) + Float.floatToIntBits(f) + i15 +
            FuzzerUtils.checkSum(iArr1);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void vMeth() {

        int i4=-9522, i17=62371, i18=1, i19=55012, i20=-135;
        short s=29070;
        double d2=2.101087;

        i4 ^= (int)((long)((fArrFld[(i4 >>> 1) % N]--) * (s--)) << (i4 - (++i4)));
        Test0355.fFld += (((++Test0355.fFld) + (Test0355.instanceCount <<= 8)) / ((long) (Test0355.fFld) | 1));
        i4 += sMeth(d2, i4);
        i4 += i4;
        fArrFld[(i4 >>> 1) % N] -= i4;
        for (int i16 : Test0355.iArrFld) {
            for (i17 = 1; i17 < 4; i17 += 3) {
                s = (short)-2251398001897706743L;
                i18 += i17;
                switch ((i17 % 1) + 80) {
                case 80:
                    for (i19 = 1; i19 < 4; ++i19) {
                        Test0355.instanceCount -= Test0355.instanceCount;
                        Test0355.instanceCount = i16;
                        Test0355.instanceCount *= Test0355.instanceCount;
                        i18 += (int) Test0355.fFld;
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += i4 + s + Double.doubleToLongBits(d2) + i17 + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i1=84, i2=12, i3=-138, i22=-54895, i23=75, i24=210, i25=70, i26=110, i27=-59;
        boolean b2=true;

        for (i = 3; i < 125; i++) {
            for (i2 = i; i2 < 205; ++i2) {
                vMeth();
                fArrFld[i2 - 1] -= Test0355.fFld;
            }
        }
        for (int i21 : Test0355.iArrFld) {
            dFld += i2;
            for (i22 = 63; i22 > 2; --i22) {
                i3 += i22;
                if (b2) {
                    i1 >>= (int)26486L;
                    dArrFld = dArrFld;
                    i21 += (((i22 * Test0355.fFld) + Test0355.byFld) - Test0355.instanceCount);
                    dFld = i23;
                } else {
                    i1 = i2;
                    for (i24 = i22; i24 < 2; i24++) {
                        fArrFld = fArrFld;
                        i23 -= 4;
                        Test0355.iArrFld = Test0355.iArrFld;
                        Test0355.iArrFld[i24 - 1] = i23;
                        Test0355.instanceCount += (i24 * i3);
                        i26 = 26174;
                    }
                }
                i1 >>= i2;
                i21 |= i25;
                i27 = 1;
                while (++i27 < 2) {
                    i1 = i3;
                    i1 -= i23;
                    b2 = b2;
                    i1 -= i26;
                    Test0355.fFld -= sFld;
                    Test0355.iArrFld = Test0355.iArrFld;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i22 i23 = " + i3 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("b2 i24 i25 = " + (b2 ? 1 : 0) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 = " + i26 + "," + i27);

        FuzzerUtils.out.println("Test0355.instanceCount Test0355.fFld dFld = " + Test0355.instanceCount + "," +
                Float.floatToIntBits(Test0355.fFld) + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0355.byFld sFld fArrFld = " + Test0355.byFld + "," + sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("Test0355.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test0355.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0355 _instance = new Test0355();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
