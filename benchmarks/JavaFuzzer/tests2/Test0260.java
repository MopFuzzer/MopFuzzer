// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0260 {

    public static final int N = 400;

    public static long instanceCount=-7045772300925994548L;
    public static int iFld=-4;
    public static float fFld=125.946F;
    public static int iFld1=186;
    public static boolean bFld=false;
    public static short sFld=-5253;
    public double dFld=0.39986;
    public float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0260.iArrFld, 10846);
        FuzzerUtils.init(Test0260.lArrFld, -6693088121274944770L);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=1, i6=16170, i7=-11, i8=-2;
        short s=1759;
        double d2=2.18315;
        boolean b1=false;
        byte by=98;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 64.183F);

        for (i5 = 3; i5 < 190; i5++) {
            Test0260.iFld1 >>= i6;
            i7 = 1;
            while (++i7 < 9) {
                s += (short)i7;
                Test0260.iArrFld[i7] -= i7;
                i6 *= (int) Test0260.instanceCount;
                Test0260.iArrFld[i7] = (int) Test0260.instanceCount;
                for (d2 = i5; d2 < 1; ++d2) {
                    Test0260.instanceCount = s;
                    Test0260.iFld += (int) d2;
                    b1 = b1;
                    fArr[i5] *= Test0260.iFld1;
                    try {
                        i6 = (6368 % i7);
                        Test0260.iFld1 = (Test0260.iFld % -768239053);
                        Test0260.iFld = (157 % i8);
                    } catch (ArithmeticException a_e) {}
                }
            }
            by += (byte)i5;
            Test0260.iFld += (int) (12L + (i5 * i5));
        }
        vMeth1_check_sum += i5 + i6 + i7 + s + Double.doubleToLongBits(d2) + i8 + (b1 ? 1 : 0) + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(double d1) {

        int i1=-64854, i2=-51051, i3=-46906, i4=-182;
        long[] lArr =new long[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(lArr, 191L);
        FuzzerUtils.init(fArr1, -1.265F);

        lArr[(Test0260.iFld >>> 1) % N] = (long) (-((d1 - Test0260.fFld) * Test0260.iFld));
        if (Test0260.bFld) {
            for (i1 = 3; i1 < 205; ++i1) {
                for (i3 = 8; i3 > 1; --i3) {
                    switch ((i3 % 3) + 34) {
                    case 34:
                        vMeth1();
                        Test0260.iArrFld[(Test0260.iFld >>> 1) % N] += 66;
                        break;
                    case 35:
                        fArr1[i3 + 1] *= Test0260.iFld1;
                        Test0260.instanceCount >>>= i2;
                        i4 *= i3;
                    case 36:
                        Test0260.iFld += (30718 + (i3 * i3));
                        if (false) continue;
                        Test0260.instanceCount &= i2;
                        break;
                    }
                    Test0260.instanceCount = Test0260.instanceCount;
                    Test0260.fFld *= 227;
                }
            }
        } else if (Test0260.bFld) {
            Test0260.iFld += 117;
        } else if (Test0260.bFld) {
            Test0260.iFld -= (int) d1;
        } else {
            Test0260.iArrFld[(Test0260.iFld1 >>> 1) % N] = i2;
            vMeth_check_sum += Double.doubleToLongBits(d1) + i1 + i2 + i3 + i4 + FuzzerUtils.checkSum(lArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
            return;
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i1 + i2 + i3 + i4 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static float fMeth(double d, int i) {

        boolean b=false;
        int i9=-34264, i10=2756, i11=-32650;
        float f1=48.791F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -51262L);

        b = (b = b);
        Test0260.instanceCount *= i;
        vMeth(d);
        i = Test0260.iFld1;
        i <<= -16;
        for (i9 = 15; i9 < 269; ++i9) {
            Test0260.iFld += (i9 * i9);
            Test0260.iFld = (int) Test0260.fFld;
            Test0260.iFld1 >>= -7;
        }
        for (f1 = 20; 350 > f1; f1++) {
            i10 = 53776;
            Test0260.iArrFld[(int) (f1)] <<= i;
            if (Test0260.bFld) {
                i10 = -11;
                lArr1[(int)(f1)] *= (long)f1;
            } else if (Test0260.bFld) {
                Test0260.instanceCount = Test0260.instanceCount;
            } else {
                Test0260.iFld >>= (int) Test0260.instanceCount;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i + (b ? 1 : 0) + i9 + i10 + Float.floatToIntBits(f1) + i11 +
            FuzzerUtils.checkSum(lArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d3=95.122343, d4=-2.101036;
        int i12=-8;
        int i13=7;
        int i14=-37222;
        int i15=175;
        int i16=10;
        int i17=193;
        int[][] iArr =new int[N][N];
        byte by1=-68;
        boolean b2=true;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, 54470);
        FuzzerUtils.init(bArr, false);

        for (float f : fArrFld) {
            iArr[(-221 >>> 1) % N][(Test0260.iFld >>> 1) % N] += ((Test0260.iFld++) - ((++Test0260.iFld) * Test0260.iFld));
        }
        Test0260.instanceCount = (++Test0260.instanceCount);
        Test0260.instanceCount = (long) (-44424 - (-126.40F - fMeth(d3, Test0260.iFld1)));
        Test0260.iArrFld[(Test0260.iFld >>> 1) % N] *= Test0260.sFld;
        i12 = 1;
        while (++i12 < 390) {
            Test0260.iFld &= Test0260.iFld;
            for (i13 = 1; 65 > i13; i13++) {
                Test0260.instanceCount = Test0260.instanceCount;
                Test0260.instanceCount = (long) 60.50F;
                Test0260.fFld += (((i13 * Test0260.fFld) + i13) - Test0260.iFld);
                iArr[i13 + 1][i13] = (int) Test0260.instanceCount;
                Test0260.iFld += (int) Test0260.instanceCount;
                d3 -= Test0260.iFld1;
                Test0260.fFld = Test0260.instanceCount;
            }
            for (i15 = 3; 65 > i15; i15++) {
                Test0260.fFld += Test0260.iFld1;
                i14 += (((i15 * i12) + i14) - by1);
                Test0260.fFld += Test0260.iFld1;
                Test0260.instanceCount *= Test0260.iFld;
            }
            Test0260.instanceCount = Test0260.instanceCount;
            if (Test0260.bFld) break;
            Test0260.iArrFld[i12] = i12;
            if (Test0260.bFld) break;
            for (d4 = 2; d4 < 65; d4 += 2) {
                Test0260.iFld -= i12;
            }
            if (b2) continue;
        }
        dFld -= Test0260.instanceCount;
        bArr[(-7869 >>> 1) % N] = b2;
        Test0260.lArrFld[(i13 >>> 1) % N] = i14;

        FuzzerUtils.out.println("d3 i12 i13 = " + Double.doubleToLongBits(d3) + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("by1 d4 i17 = " + by1 + "," + Double.doubleToLongBits(d4) + "," + i17);
        FuzzerUtils.out.println("b2 iArr bArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0260.instanceCount Test0260.iFld Test0260.fFld = " + Test0260.instanceCount + "," + Test0260.iFld +
                "," + Float.floatToIntBits(Test0260.fFld));
        FuzzerUtils.out.println("Test0260.iFld1 Test0260.bFld Test0260.sFld = " + Test0260.iFld1 + "," + (Test0260.bFld ? 1 : 0) + "," +
                Test0260.sFld);
        FuzzerUtils.out.println("dFld fArrFld Test0260.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(Test0260.iArrFld));
        FuzzerUtils.out.println("Test0260.lArrFld = " + FuzzerUtils.checkSum(Test0260.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0260 _instance = new Test0260();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
