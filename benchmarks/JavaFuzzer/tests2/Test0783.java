// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0783 {

    public static final int N = 400;

    public static long instanceCount=-33700L;
    public static double dFld=0.9099;
    public static float fFld=90.404F;
    public static boolean bFld=false;
    public static short sFld=24195;
    public static int iFld=9484;
    public static int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0783.iArrFld, -31053);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, float f, int i8) {

        int i9=39;
        int i10=64217;
        int i11=-198;
        int i12=25;
        int i13=4;
        int i14=-51134;
        int[] iArr =new int[N];
        float f1=0.934F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)35);
        FuzzerUtils.init(iArr, -10);

        i8 = i8;
        i9 = 1;
        while ((i9 += 3) < 238) {
            i8 = i8;
            byArr[i9] <<= (byte)i9;
            for (i10 = 19; i10 > 1; i10--) {
                l1 += i10;
                for (f1 = 1; f1 < 2; f1++) {
                    switch ((i10 % 1) + 45) {
                    case 45:
                        l1 += (long)f1;
                        if (Test0783.bFld) break;
                        try {
                            iArr[i9 + 1] = (-485938624 % i10);
                            i11 = (i9 / -839775325);
                            i8 = (-120 / i11);
                        } catch (ArithmeticException a_e) {}
                    }
                }
                for (i13 = 1; i13 < 2; ++i13) {
                    i11 -= (int)l1;
                    i11 += (i13 * i13);
                    i14 *= i8;
                }
            }
        }
        vMeth2_check_sum += l1 + Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 +
            i14 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i4, double d, int i5) {

        int i6=0, i7=38386, i15=1, i16=23242, i17=68, i18=-12, i19=-48, i20=-7, i21=35380, i22=167;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 69.83F);

        for (i6 = 2; i6 < 252; i6++) {
            vMeth2(Test0783.instanceCount, Test0783.fFld, i4);
            for (i15 = i6; i15 < 7; i15++) {
                i16 = i15;
            }
            Test0783.iArrFld[i6] -= i16;
            for (i17 = 1; i17 < 7; ++i17) {
                Test0783.instanceCount = i17;
                for (i19 = 1; i19 < 2; i19++) {
                    i7 <<= i16;
                }
            }
            for (i21 = 1; i21 < 7; i21++) {
                i7 += i20;
                Test0783.instanceCount = Test0783.sFld;
                fArr[i6] = fArr[i6 - 1];
                i5 /= (int) (Test0783.instanceCount | 1);
                i7 <<= i21;
            }
        }
        vMeth1_check_sum += i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i15 + i16 + i17 + i18 + i19 + i20 + i21 +
            i22 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1, long l) {

        int i2=4, i3=-4, i24=30266, i25=-57135, i26=228;
        byte by=44;
        long l2=-12138L;

        Test0783.dFld = i;
        for (i2 = 2; i2 < 200; ++i2) {
            Test0783.instanceCount += (((i2 * Test0783.fFld) + l) - Test0783.instanceCount);
            switch (((i2 % 7) * 5) + 119) {
            case 152:
                vMeth1(i2, Test0783.dFld, i);
                for (i24 = 1; i24 < 8; ++i24) {
                    Test0783.iArrFld[i2 + 1] = i;
                    i = (int) Test0783.dFld;
                    by = (byte)i;
                    i3 += i3;
                    for (l2 = i24; 2 > l2; l2++) {
                        Test0783.iArrFld[i24] += i;
                        Test0783.iArrFld = FuzzerUtils.int1array(N, (int) 38213);
                        i1 -= 4809;
                        i <<= i1;
                    }
                }
                break;
            case 122:
                Test0783.fFld += (((i2 * by) + Test0783.fFld) - i2);
                break;
            case 121:
                i25 <<= i2;
                break;
            case 141:
                Test0783.fFld *= -1L;
                break;
            case 145:
                i25 += (((i2 * i1) + i3) - i26);
            case 126:
            case 124:
                Test0783.instanceCount >>>= 54059;
                break;
            }
        }
        vMeth_check_sum += i + i1 + l + i2 + i3 + i24 + i25 + by + l2 + i26;
    }

    public void mainTest(String[] strArr1) {

        int i27=26138, i28=12, i29=250, i30=-87, i31=-32266;
        long[] lArr =new long[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(dArr, 0.38260);

        vMeth(-64579, Test0783.iFld, Test0783.instanceCount);
        lArr[(Test0783.iFld >>> 1) % N] -= Test0783.instanceCount;
        fArrFld[(Test0783.iFld >>> 1) % N] += Test0783.iFld;
        Test0783.iArrFld[(Test0783.iFld >>> 1) % N] = -43229;
        lArr[(Test0783.iFld >>> 1) % N] >>= Test0783.iFld;
        Test0783.dFld -= -2072L;
        Test0783.iArrFld[(Test0783.iFld >>> 1) % N] &= Test0783.iFld;
        dArr = FuzzerUtils.double1array(N, (double)111.5858);
        Test0783.iArrFld = Test0783.iArrFld;
        Test0783.iFld += Test0783.iFld;
        Test0783.iFld += Test0783.iFld;
        Test0783.iFld *= (int) Test0783.instanceCount;
        for (i27 = 3; i27 < 246; i27 += 2) {
            i28 += i27;
            for (i29 = 6; i29 < 207; ++i29) {
                Test0783.iFld = i29;
                i31 = 1;
                while (++i31 < 2) {
                    Test0783.dFld = Test0783.instanceCount;
                    if (true) break;
                    Test0783.iArrFld[i31 + 1] ^= i31;
                    Test0783.bFld = false;
                    if (Test0783.bFld) continue;
                    switch (((i30 >>> 1) % 2) + 61) {
                    case 61:
                    case 62:
                        i28 += i31;
                        Test0783.iFld += (int) Test0783.dFld;
                        i28 = (int) Test0783.instanceCount;
                        Test0783.iFld = i27;
                        break;
                    default:
                        Test0783.iArrFld[i29 - 1] |= i27;
                        Test0783.iFld &= Test0783.sFld;
                        Test0783.iArrFld[i31] = i30;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 lArr = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0783.instanceCount Test0783.dFld Test0783.fFld = " + Test0783.instanceCount + "," +
                Double.doubleToLongBits(Test0783.dFld) + "," + Float.floatToIntBits(Test0783.fFld));
        FuzzerUtils.out.println("Test0783.bFld Test0783.sFld Test0783.iFld = " + (Test0783.bFld ? 1 : 0) + "," + Test0783.sFld + "," +
                Test0783.iFld);
        FuzzerUtils.out.println("Test0783.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test0783.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0783 _instance = new Test0783();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
