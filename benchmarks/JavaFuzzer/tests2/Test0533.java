// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0533 {

    public static final int N = 400;

    public static long instanceCount=39677L;
    public static volatile short sFld=-21020;
    public volatile float fFld=119.711F;
    public static double dFld=0.93845;
    public static float[] fArrFld =new float[N];
    public static double[] dArrFld =new double[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0533.fArrFld, -32.135F);
        FuzzerUtils.init(Test0533.dArrFld, 0.45453);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8) {

        int i9=-145, i10=23611, i11=49687, i12=-57, i13=10, i14=52, i15=-108, i16=8436;
        double d=0.99575;
        short s1=27493;
        boolean b=true;
        boolean[] bArr =new boolean[N];
        float f1=-99.330F;

        FuzzerUtils.init(bArr, true);

        for (i9 = 3; i9 < 263; i9++) {
            Test0533.sFld *= (short) d;
            Test0533.instanceCount += (i9 | i8);
            i8 += (int)-126.90369;
            s1 = (short)i10;
            b = b;
            Test0533.instanceCount += i9;
            Test0533.dArrFld[i9] -= -194;
            i8 *= i8;
        }
        for (i11 = 8; i11 < 355; i11++) {
            for (i13 = 5; i13 > i11; --i13) {
                i10 -= i9;
                for (i15 = 1; i15 < 1; i15++) {
                    i16 += (((i15 * f1) + i14) - Test0533.instanceCount);
                    bArr[i13 - 1] = b;
                }
            }
        }
        vMeth2_check_sum += i8 + i9 + i10 + Double.doubleToLongBits(d) + s1 + (b ? 1 : 0) + i11 + i12 + i13 + i14 + i15
            + i16 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(bArr);
    }

    public void vMeth1() {

        int i5=-8;
        int i6=-24;
        int i7=-14982;
        int i17=143;
        int[] iArr =new int[N];
        float f=9.479F;

        FuzzerUtils.init(iArr, 65518);

        i5 -= ((i5++) * (-Integer.reverseBytes(i5)));
        iArr[(i6 >>> 1) % N] -= (i5 + i5);
        i6 = (int) Test0533.fArrFld[(i5 >>> 1) % N];
        for (f = 4; f < 173; f++) {
            vMeth2(i6);
            i17 = 1;
            do {
                boolean b1=true;
                if (b1) continue;
                Test0533.sFld -= (short) -600835447L;
                fFld = -73;
                i5 = -211;
                b1 = true;
                Test0533.dArrFld[(int) (f)] = i17;
                Test0533.instanceCount = i5;
                Test0533.instanceCount >>= i5;
                Test0533.instanceCount = Test0533.instanceCount;
            } while (++i17 < 9);
        }
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f) + i7 + i17 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(int i, int i1, long l) {

        int i2=-57889, i3=203, i4=-48, i18=42257, i19=-19450;
        short s=5711;
        byte by=-84;
        boolean b2=false;
        double d1=2.14300;

        for (i2 = 2; i2 < 282; ++i2) {
            i += ((--s) * i1);
            i1 = (int)((++i1) - ((--l) | by));
            i4 = 1;
            do {
                l += (i4 - i4);
                i3 += i4;
                vMeth1();
                for (i18 = 1; 1 > i18; i18 += 3) {
                    i <<= s;
                    i += (i18 | l);
                    i = i;
                    switch (((i1 >>> 1) % 3) + 115) {
                    case 115:
                        b2 = b2;
                        Test0533.instanceCount += (long) fFld;
                        break;
                    case 116:
                        d1 += l;
                    case 117:
                        lArrFld[i2] >>= i2;
                        break;
                    default:
                        lArrFld[i2 + 1] -= Test0533.instanceCount;
                    }
                }
            } while (++i4 < 6);
        }
        vMeth_check_sum += i + i1 + l + i2 + i3 + s + by + i4 + i18 + i19 + (b2 ? 1 : 0) + Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i20=52;
        int i21=234;
        int i22=116;
        int i23=27901;
        int i24=-19;
        int i25=-248;
        int i26=14;
        int i27=201;
        int i28=-39;
        int i29=-50;
        int i30=-8;
        int[] iArr1 =new int[N];
        boolean b3=false;
        byte by1=-52;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr1, 82);
        FuzzerUtils.init(byArr, (byte)-59);

        vMeth(i20, i20, Test0533.instanceCount);
        i20 *= (int) Test0533.instanceCount;
        for (i21 = 229; i21 > 7; --i21) {
            i22 += i21;
            i20 += i21;
            for (i23 = 7; i23 < 113; i23++) {
                b3 = b3;
            }
            i20 = (int) Test0533.instanceCount;
        }
        for (i25 = 288; i25 > 12; --i25) {
            i20 = (int)fFld;
            i20 = by1;
            for (i27 = i25; i27 < 91; ++i27) {
                i26 += (i27 * i27);
                i29 += (int) Test0533.dFld;
                i30 = 1;
                while (--i30 > 0) {
                    Test0533.dFld = 0.77012;
                    if (b3) {
                        i29 *= (int)4056359186L;
                        i29 = i21;
                        Test0533.instanceCount <<= i21;
                    } else {
                        lArrFld[i27 + 1] = Test0533.instanceCount;
                        i26 >>>= (int) Test0533.instanceCount;
                    }
                    by1 *= (byte)i22;
                    if (b3) continue;
                }
                iArr1[i27 + 1] = i25;
                byArr[i25 - 1] *= (byte)fFld;
                Test0533.instanceCount += (i27 + i23);
                Test0533.instanceCount ^= i27;
            }
            lArrFld[i25] -= i26;
            iArr1[i25 + 1] >>>= (int) Test0533.instanceCount;
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 b3 = " + i23 + "," + i24 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i25 i26 by1 = " + i25 + "," + i26 + "," + by1);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 iArr1 byArr = " + i30 + "," + FuzzerUtils.checkSum(iArr1) + "," +
            FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0533.instanceCount Test0533.sFld fFld = " + Test0533.instanceCount + "," + Test0533.sFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0533.dFld Test0533.fArrFld Test0533.dArrFld = " + Double.doubleToLongBits(Test0533.dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0533.fArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0533.dArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0533 _instance = new Test0533();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
