// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0359 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static boolean bFld=false;
    public static float fFld=2.11F;
    public static volatile double dFld=2.112266;

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i4, int i5) {

        int i6=-34123;
        int i7=4;
        int i8=51682;
        int i9=-94;
        int i10=-41726;
        int[] iArr1 =new int[N];
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -12);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, -133067058L);

        for (i6 = 8; i6 < 208; ++i6) {
            i8 = 1;
            do {
                iArr1[i6 - 1] = i4;
                i9 = 1;
                do {
                    i4 -= (int) Test0359.instanceCount;
                    Test0359.instanceCount += (i9 | Test0359.instanceCount);
                    Test0359.instanceCount >>= i4;
                    bArr[i8 - 1] = Test0359.bFld;
                    Test0359.fFld += i9;
                    Test0359.instanceCount ^= i8;
                } while (++i9 < 2);
                Test0359.instanceCount += (-208 + (i8 * i8));
                i10 -= (int) Test0359.fFld;
                i5 += i9;
                lArr[i6 + 1] = Test0359.instanceCount;
                i4 += i9;
            } while ((i8 += 2) < 8);
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i1, int i2, int i3) {

        int i11=157;
        int i12=14147;
        int i13=7109;
        int i14=-53418;
        int i15=6;
        int i16=-54602;
        int i17=16813;
        int i18=7;
        int[] iArr2 =new int[N];
        short s=-32553;
        byte by=-84;

        FuzzerUtils.init(iArr2, -12);

        lMeth(i2, i2);
        for (i11 = 5; i11 < 183; i11++) {
            for (i13 = 1; i13 < 9; ++i13) {
                iArr2[i11 + 1] = -41404;
                Test0359.instanceCount -= i2;
            }
            Test0359.instanceCount = s;
            Test0359.fFld -= -250L;
            i3 *= (int) Test0359.dFld;
            for (i15 = 1; 9 > i15; i15++) {
                Test0359.fFld += (((i15 * i12) + i13) - i11);
                i1 = i16;
                for (i17 = 1; i17 < 2; ++i17) {
                    Test0359.fFld = i17;
                    i1 = by;
                    iArr2[i15] = (int) Test0359.instanceCount;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i11 + i12 + i13 + i14 + s + i15 + i16 + i17 + i18 + by +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vSmallMeth(double d, long l) {

        int i19=-25;

        vMeth(i19, i19, i19);
        vSmallMeth_check_sum += Double.doubleToLongBits(d) + l + i19;
    }

    public void mainTest(String[] strArr1) {

        int i=10650;
        int i20=-14868;
        int i21=149;
        int i22=-64241;
        int i23=-24367;
        int i24=-228;
        int i25=-27149;
        int i26=-137;
        int i27=45155;
        int i28=179;
        int i29=7;
        int[] iArr =new int[N];
        double d1=-1.3207;
        byte by1=116;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, 52768);
        FuzzerUtils.init(lArr1, 240L);

        iArr[(-192 >>> 1) % N] -= (int) ((Test0359.instanceCount++) + ((i--) - Math.max(Test0359.instanceCount, -241L)));
        for (int smallinvoc = 0; smallinvoc < 358; smallinvoc++) vSmallMeth(d1, Test0359.instanceCount);
        for (i20 = 7; i20 < 383; ++i20) {
            by1 /= (byte)51013;
            lArr1[i20 - 1] &= i21;
            Test0359.bFld = Test0359.bFld;
            if (Test0359.bFld) break;
            Test0359.instanceCount *= by1;
        }
        for (i22 = 212; i22 > 6; --i22) {
            i += (i22 + i24);
            i24 += i22;
            d1 -= i;
            for (i25 = 122; i25 > 4; i25 -= 3) {
                Test0359.instanceCount = i22;
                try {
                    iArr[i25] = (-120 / i);
                    i27 = (iArr[i22 - 1] % 52981932);
                    iArr[i22 - 1] = (-34 / iArr[i25]);
                } catch (ArithmeticException a_e) {}
                i27 = (int) Test0359.instanceCount;
                i23 += (int)-929989009L;
                for (i28 = 1; 4 > i28; i28++) {
                    switch (((i22 % 2) * 5) + 75) {
                    case 82:
                    case 77:
                        switch (((i28 % 4) * 5) + 111) {
                        case 119:
                            i23 = by1;
                            Test0359.instanceCount *= by1;
                            break;
                        case 129:
                            i24 += i28;
                            i23 = i23;
                            Test0359.instanceCount = i;
                            break;
                        case 122:
                            by1 = (byte)i24;
                            lArr1[i25 + 1] = Test0359.instanceCount;
                        case 120:
                            i26 += (-8 + (i28 * i28));
                            i21 += i;
                            break;
                        default:
                            i23 += (i28 - Test0359.instanceCount);
                        }
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i d1 i20 = " + i + "," + Double.doubleToLongBits(d1) + "," + i20);
        FuzzerUtils.out.println("i21 by1 i22 = " + i21 + "," + by1 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 iArr lArr1 = " + i29 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0359.instanceCount Test0359.bFld Test0359.fFld = " + Test0359.instanceCount + "," + (Test0359.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0359.fFld));
        FuzzerUtils.out.println("Test0359.dFld = " + Double.doubleToLongBits(Test0359.dFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0359 _instance = new Test0359();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
