// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0207 {

    public static final int N = 400;

    public static long instanceCount=-253L;
    public static double dFld=0.11477;
    public static boolean bFld=true;
    public static float fFld=17.881F;
    public static int iFld=60;
    public static int[] iArrFld =new int[N];
    public static short[] sArrFld =new short[N];
    public float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0207.iArrFld, -56828);
        FuzzerUtils.init(Test0207.sArrFld, (short) -24908);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i8, double d2) {


        Test0207.sArrFld[(i8 >>> 1) % N] ^= (short) i8;
        long meth_res = i8 + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(float f2, float f3) {

        int i4=-48331, i5=4052, i6=10, i7=7, i9=-32;
        byte by=23;
        short s=-20338;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -4L);

        lArr = (lArr = lArr);
        for (i4 = 14; 265 > i4; i4++) {
            for (i6 = 1; i6 < 6; i6++) {
                f3 *= (by--);
            }
            Test0207.iArrFld[i4 + 1] -= Test0207.iArrFld[i4 + 1];
            Test0207.instanceCount = iMeth(i5, Test0207.dFld);
            Test0207.iArrFld[i4] -= s;
            i9 = 6;
            while (--i9 > 0) {
                if (Test0207.bFld) break;
                Test0207.instanceCount = -24538;
                i5 -= (int)13L;
                i5 &= i6;
                i7 <<= i5;
            }
            Test0207.bFld = false;
            if (Test0207.bFld) continue;
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i4 + i5 + i6 + i7 + by + s + i9 +
            FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(int i2, long l, float f) {

        float f1=-50.655F;
        int i3=-159;
        int i10=56429;
        int[][] iArr =new int[N][N];
        double d1=-78.129451;
        short s1=-31907;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -66);
        FuzzerUtils.init(lArr1, 219L);

        for (f1 = 10; f1 < 189; ++f1) {
            d1 = 1;
            do {
                vMeth1(f, f1);
                i3 += (int)(((d1 * i3) + i2) - i2);
                i10 = 1;
                while (--i10 > 0) {
                    switch ((int)(((f1 % 3) * 5) + 16)) {
                    case 26:
                        Test0207.bFld = true;
                        break;
                    case 31:
                        s1 *= (short)i3;
                        try {
                            Test0207.iArrFld[i10 + 1] = (i3 / i10);
                            Test0207.iArrFld[i10 - 1] = (461015782 / iArr[(int) (d1 + 1)][i10]);
                            i2 = (i2 % -43356);
                        } catch (ArithmeticException a_e) {}
                        i3 += i2;
                        Test0207.iArrFld[(int) (d1 - 1)] *= (int) -2.46052;
                        break;
                    case 20:
                        fArrFld[(int)(f1)][i10 + 1] -= -28476;
                        Test0207.dFld *= -4223470297976907081L;
                        lArr1[(int)(d1)] = i3;
                        i3 |= s1;
                        break;
                    }
                }
            } while (++d1 < 9);
        }
        vMeth_check_sum += i2 + l + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i3 +
            Double.doubleToLongBits(d1) + i10 + s1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=33.25805;
        int i=-20312, i1=-38247, i11=-63695, i12=-2, i14=4, i15=-44;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, -223L);

        for (d = 2; d < 246; d += 2) {
            i1 = 1;
            while (++i1 < 205) {
                Test0207.iArrFld = Test0207.iArrFld;
                vMeth(i1, Test0207.instanceCount, -1.478F);
                Test0207.iArrFld[i1 - 1] = 38;
                i = i1;
                i >>= i;
            }
            if (Test0207.bFld) {
                Test0207.fFld = Test0207.instanceCount;
                if (Test0207.bFld) break;
                Test0207.fFld += i;
            } else {
                switch ((int)((d % 6) + 91)) {
                case 91:
                    for (i11 = 205; i11 > 11; i11--) {
                        int i13=15;
                        i12 = (int) Test0207.instanceCount;
                        i13 = i;
                        i12 += (0 + (i11 * i11));
                        Test0207.fFld *= -112L;
                        if (Test0207.bFld) continue;
                        Test0207.fFld -= i13;
                        i13 += i1;
                        Test0207.bFld = Test0207.bFld;
                        for (i14 = 2; 1 < i14; i14 -= 3) {
                            i = 5902;
                            fArrFld[(int)(d)][i11] *= i13;
                            i15 = -739;
                            if (Test0207.bFld) break;
                            Test0207.iFld = -122;
                            Test0207.iFld -= i14;
                            Test0207.iFld = i13;
                            lArr2[i11] += (long)-79.631F;
                        }
                    }
                case 92:
                    Test0207.iFld = Test0207.iFld;
                case 93:
                    i = Test0207.iFld;
                case 94:
                    i15 = i15;
                case 95:
                    i12 += (-120 + (d * d));
                    break;
                case 96:
                    Test0207.iFld -= i12;
                    break;
                default:
                    i += i12;
                }
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i11 i12 i14 = " + i11 + "," + i12 + "," + i14);
        FuzzerUtils.out.println("i15 lArr2 = " + i15 + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0207.instanceCount Test0207.dFld Test0207.bFld = " + Test0207.instanceCount + "," +
                Double.doubleToLongBits(Test0207.dFld) + "," + (Test0207.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0207.fFld Test0207.iFld Test0207.iArrFld = " + Float.floatToIntBits(Test0207.fFld) + "," +
                Test0207.iFld + "," + FuzzerUtils.checkSum(Test0207.iArrFld));
        FuzzerUtils.out.println("Test0207.sArrFld fArrFld = " + FuzzerUtils.checkSum(Test0207.sArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0207 _instance = new Test0207();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
