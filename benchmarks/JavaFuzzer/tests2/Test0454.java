// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0454 {

    public static final int N = 400;

    public static volatile long instanceCount=1291491412L;
    public static long lFld=13L;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0454.iArrFld, -10);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i3, int i4, int i5) {

        int i6=-2;
        int i7=-206;
        int i8=3;
        int i9=22;
        int i10=1997;
        int i11=-35605;
        int[][] iArr1 =new int[N][N];
        float f=54.6F;
        double d1=-50.81920;
        boolean b=false;
        short s=-30206;
        byte by=-124;

        FuzzerUtils.init(iArr1, -73);

        for (i6 = 227; i6 > 8; i6--) {
            f = (float)d1;
            for (i8 = 1; i8 < 7; i8++) {
                for (i10 = 1; i10 < 2; ++i10) {
                    i4 = 21220;
                    if (b) break;
                    switch (((i8 % 8) * 5) + 60) {
                    case 74:
                        if (b) continue;
                        iArr1[i8][i10 - 1] *= i3;
                        break;
                    case 66:
                        Test0454.instanceCount += (i10 * i5);
                        break;
                    case 71:
                        i5 += s;
                        by = by;
                        i9 += (((i10 * i4) + i4) - i7);
                        break;
                    case 98:
                        by += (byte)i4;
                        try {
                            i11 = (141 / i7);
                            iArr1[i8][i10] = (i8 % i10);
                            i3 = (i5 / 30665);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 73:
                        i11 *= i11;
                        break;
                    case 90:
                        i3 >>= i4;
                    case 70:
                        i4 *= s;
                        break;
                    case 80:
                        Test0454.instanceCount <<= -32037;
                    }
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i8 + i9 + i10
            + i11 + (b ? 1 : 0) + s + by + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth() {

        double d=1.58577;
        long l=13L;
        int i12=-48910, i13=159, i14=61776, i15=-3323;
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        short s1=17276;
        float f1=-96.327F;

        FuzzerUtils.init(bArr, true);

        Test0454.instanceCount = (long) (++d);
        l = 1;
        do {
            int i2=9055;
            i2 >>= byMeth(i2, -13, 74);
            for (i12 = (int)(l); i12 < 5; i12++) {
                Test0454.instanceCount |= 0;
                i2 -= -151;
                bArr[i12] = b1;
                i2 += i2;
                Test0454.instanceCount += s1;
                if (i2 != 0) {
                    vMeth_check_sum += Double.doubleToLongBits(d) + l + i12 + i13 + (b1 ? 1 : 0) + s1 + i14 + i15 +
                        Float.floatToIntBits(f1) + FuzzerUtils.checkSum(bArr);
                    return;
                }
                Test0454.instanceCount = -8;
            }
            i2 <<= -64223;
        } while (++l < 355);
        for (i14 = 9; i14 < 361; ++i14) {
            i13 += (i14 + f1);
            Test0454.iArrFld[i14 - 1] /= (int) ((long) (d) | 1);
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + l + i12 + i13 + (b1 ? 1 : 0) + s1 + i14 + i15 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(bArr);
    }

    public static long lMeth() {

        int i=-162;
        int i1=117;
        int i16=-76;
        int i17=-29170;
        int i18=162;
        int i19=245;
        int[] iArr =new int[N];
        float f2=-2.183F;
        float[] fArr =new float[N];
        boolean b2=true;

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(fArr, 0.323F);

        if (b2) {
            for (i = 8; i < 229; i++) {
                switch ((i % 2) + 113) {
                case 113:
                    try {
                        iArr[i] = (i / i);
                        iArr[i] = (41906438 % i1);
                        i1 = (i % -36);
                    } catch (ArithmeticException a_e) {}
                    vMeth();
                    break;
                case 114:
                    i1 -= (int)f2;
                    for (i16 = 1; 7 > i16; i16++) {
                        Test0454.instanceCount += (i16 * i16);
                        Test0454.iArrFld[i + 1] -= (int) Test0454.instanceCount;
                    }
                    for (i18 = 1; i18 < 7; ++i18) {
                        i1 = (int) Test0454.instanceCount;
                        i1 += i1;
                        i17 = (int) Test0454.instanceCount;
                        fArr[i18] += Test0454.instanceCount;
                        Test0454.instanceCount = i17;
                    }
                }
            }
        } else {
            i17 *= i1;
        }
        long meth_res = i + i1 + Float.floatToIntBits(f2) + i16 + i17 + i18 + i19 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i20=-10, i21=138, i22=14801, i23=205, i24=-11, i25=-11946, i26=-1, i27=-133;
        float f3=103.418F;
        boolean b3=false;
        short s2=13348;
        byte by1=108;
        double d2=2.123132;
        long l1=13343L;

        lMeth();
        i20 = i20;
        i20 += (int)f3;
        f3 = Test0454.instanceCount;
        for (i21 = 5; i21 < 144; ++i21) {
            switch (((i20 >>> 1) % 7) + 92) {
            case 92:
                i22 += (int)(-29970L + (i21 * i21));
                break;
            case 93:
                i23 = 1;
                do {
                    i20 += (i23 * i23);
                    if (b3) continue;
                    i22 /= (int)((long)(f3) | 1);
                    for (i24 = 1; i24 < 1; ++i24) {
                        Test0454.instanceCount += (i24 * i24);
                        Test0454.lFld = 105;
                        i22 = i24;
                        Test0454.lFld = s2;
                        i22 = s2;
                        Test0454.instanceCount -= 637730995649281861L;
                        by1 >>= (byte) Test0454.instanceCount;
                        Test0454.iArrFld[i23] -= i25;
                        if (true) break;
                        i25 *= (int)d2;
                    }
                    for (i26 = 1; i26 < 1; i26++) {
                        f3 -= i22;
                        l1 = i24;
                        Test0454.iArrFld[i23] *= 630;
                        Test0454.iArrFld[i26] = i25;
                        f3 += (i26 - i25);
                    }
                    Test0454.lFld += i21;
                } while (++i23 < 180);
                break;
            case 94:
                try {
                    Test0454.iArrFld[i21 - 1] = (Test0454.iArrFld[i21 - 1] / 45);
                    i20 = (i25 / 24984);
                    Test0454.iArrFld[i21 - 1] = (26 / i27);
                } catch (ArithmeticException a_e) {}
                break;
            case 95:
                b3 = true;
                break;
            case 96:
                try {
                    i25 = (i27 / i22);
                    Test0454.iArrFld[i21 - 1] = (-58 / i24);
                    Test0454.iArrFld[i21] = (Test0454.iArrFld[i21 - 1] % 2823);
                } catch (ArithmeticException a_e) {}
                break;
            case 97:
                i22 += (int) Test0454.lFld;
                break;
            case 98:
                i22 += (i21 + i24);
                break;
            }
        }

        FuzzerUtils.out.println("i20 f3 i21 = " + i20 + "," + Float.floatToIntBits(f3) + "," + i21);
        FuzzerUtils.out.println("i22 i23 b3 = " + i22 + "," + i23 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i24 i25 s2 = " + i24 + "," + i25 + "," + s2);
        FuzzerUtils.out.println("by1 d2 i26 = " + by1 + "," + Double.doubleToLongBits(d2) + "," + i26);
        FuzzerUtils.out.println("i27 l1 = " + i27 + "," + l1);

        FuzzerUtils.out.println("Test0454.instanceCount Test0454.lFld Test0454.iArrFld = " + Test0454.instanceCount + "," + Test0454.lFld +
                "," + FuzzerUtils.checkSum(Test0454.iArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0454 _instance = new Test0454();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
