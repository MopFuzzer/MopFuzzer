// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:27 2023
public class Test0333 {

    public static final int N = 400;

    public static long instanceCount=-14122L;
    public static double dFld=0.99232;
    public float fFld=46.356F;
    public static volatile byte byFld=118;
    public volatile int iFld=61;
    public boolean bFld=true;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by1) {

        int i9=27622;
        int i10=20504;
        int i11=251;
        int i12=-56114;
        int i13=-4;
        int i14=-9;
        int[] iArr1 =new int[N];
        short s=-3052;
        float f=-88.552F;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, 80);
        FuzzerUtils.init(lArr, 7823894987786086329L);

        for (i9 = 12; i9 < 219; i9++) {
            for (i11 = 1; i11 < 8; ++i11) {
                switch (((i11 % 8) * 5) + 17) {
                case 47:
                    switch (((i11 % 5) * 5) + 7) {
                    case 9:
                        s += (short)167;
                        f += (((i11 * i10) + i12) - i10);
                        for (i13 = 1; i13 < 2; ++i13) {
                            boolean b=true;
                            switch (((i11 % 7) * 5) + 78) {
                            case 103:
                                Test0333.dFld /= -10L;
                                i12 *= i12;
                                break;
                            case 85:
                                i10 = i9;
                                break;
                            case 102:
                                if (b) continue;
                                i10 += i13;
                                if (i9 != 0) {
                                    vMeth1_check_sum += by1 + i9 + i10 + i11 + i12 + s + Float.floatToIntBits(f) + i13
                                        + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
                                    return;
                                }
                                break;
                            case 88:
                                i14 <<= i10;
                                break;
                            case 81:
                                i12 = i13;
                                break;
                            case 113:
                                iArr1[i9] = (int)f;
                                break;
                            case 86:
                            }
                        }
                        break;
                    case 24:
                        i14 = i9;
                        break;
                    case 25:
                        i14 = 4;
                    case 19:
                        s |= (short) Test0333.instanceCount;
                        break;
                    case 18:
                        i14 = i10;
                    default:
                        i14 += i13;
                    }
                    break;
                case 48:
                    if (b1) continue;
                case 45:
                    s += (short)i11;
                case 49:
                    lArr[i9 - 1] = i11;
                case 28:
                    Test0333.instanceCount += i11;
                    break;
                case 44:
                    i12 = (int) Test0333.instanceCount;
                    break;
                case 22:
                    i12 -= i9;
                case 57:
                }
            }
        }
        vMeth1_check_sum += by1 + i9 + i10 + i11 + i12 + s + Float.floatToIntBits(f) + i13 + i14 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public int iMeth(int i3, int i4) {


        fFld += i4;
        i3 = (int) (--Test0333.instanceCount);
        long meth_res = i3 + i4;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i7, int i8) {

        int i15=-28415;
        int i16=63971;
        int i17=95;
        int i18=-173;
        int i19=13;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, 10);

        vMeth1(Test0333.byFld);
        Test0333.instanceCount = (long) Test0333.dFld;
        for (i15 = 228; 2 < i15; i15 -= 3) {
            i7 = -8;
            i17 = 1;
            while (++i17 < 21) {
                fFld = Test0333.instanceCount;
                for (i18 = 1; i18 < 1; ++i18) {
                    iArr2 = iArr2;
                    i16 += (int)49357L;
                }
                try {
                    i19 = (iArr2[i17 + 1] % i15);
                    iArr2[i15] = (i16 / 81);
                    iArr2[i17 - 1] = (i17 % 16461);
                } catch (ArithmeticException a_e) {}
                i19 += (int) Test0333.instanceCount;
                i7 = (int)2.119074;
                Test0333.instanceCount = Test0333.instanceCount;
                Test0333.instanceCount >>>= -5;
                fFld *= -4096;
            }
        }
        vMeth_check_sum += i7 + i8 + i15 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth1(byte by) {

        int i5=58805;
        int i6=63954;
        int i20=-6;
        int i21=-30867;
        int i22=96;
        int i23=-13;
        int[] iArr3 =new int[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 13.913F);
        FuzzerUtils.init(iArr3, 5);

        for (i5 = 3; i5 < 212; i5++) {
            Test0333.dFld = (((fArr[i5 + 1]++) + Test0333.instanceCount) * ((i6++) + (Test0333.instanceCount--)));
            vMeth(i6, i6);
            Test0333.instanceCount -= -5;
            i6 += (i5 | i6);
            fFld += fFld;
            for (i20 = 1; i20 < 8; i20++) {
                i21 = i21;
                for (i22 = 2; i22 > 1; i22 -= 3) {
                    try {
                        iArr3[i5] = (10 / i21);
                        iFld = (-818917003 % i6);
                        i6 = (i23 / -1985562062);
                    } catch (ArithmeticException a_e) {}
                    iFld -= (int) Test0333.dFld;
                    iFld += i22;
                    Test0333.dFld = -9;
                    i21 -= (int)fFld;
                    Test0333.dFld = i23;
                }
            }
        }
        long meth_res = by + i5 + i6 + i20 + i21 + i22 + i23 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr3);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-239;
        int i1=-8;
        int i2=58171;
        int i24=43740;
        int i25=63413;
        int i26=56;
        int[] iArr =new int[N];
        int[][] iArr4 =new int[N][N];
        int[] iArr5 =new int[N];
        float f1=-1.565F;
        double[] dArr =new double[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(dArr, 26.78424);
        FuzzerUtils.init(lArr1, 4151035841L);
        FuzzerUtils.init(iArr4, -4);
        FuzzerUtils.init(iArr5, 81);

        i = 1;
        do {
            for (i1 = 64; i1 > 3; i1--) {
                i2 *= (-((i2++) + iArr[i - 1]));
                switch (((i % 9) * 5) + 94) {
                case 110:
                    i2 += (int) Test0333.dFld;
                    i2 += (i1 | i);
                    fFld = (iArr[i]--);
                    Test0333.instanceCount -= (i1 - i1);
                    break;
                case 104:
                case 105:
                    fFld *= iMeth(i2, (int) ((-iMeth1(Test0333.byFld)) * Test0333.dFld));
                    for (f1 = i; f1 < 2; f1 += 3) {
                        i24 = iFld;
                        bFld = bFld;
                        Test0333.byFld = (byte) f1;
                        dArr[(int)(f1)] -= i;
                        iArr[(int)(f1 + 1)] = -13132;
                        i2 = (int) Test0333.instanceCount;
                        fFld -= i24;
                    }
                    break;
                case 97:
                    i24 += (i1 * i1);
                    i2 += (((i1 * i1) + Test0333.instanceCount) - iFld);
                    break;
                case 100:
                    fFld = i24;
                case 103:
                    Test0333.instanceCount |= 4128788378L;
                    i25 = 1;
                    do {
                        switch ((i % 8) + 48) {
                        case 48:
                            lArr1[i - 1] >>= -213L;
                            Test0333.instanceCount += (((i25 * i) + Test0333.instanceCount) - i25);
                            break;
                        case 49:
                            iFld = -8;
                        case 50:
                            try {
                                i2 = (i2 % -28586);
                                iArr4[i - 1][(1601 >>> 1) % N] = (i / i1);
                                i2 = (50533 % i26);
                            } catch (ArithmeticException a_e) {}
                            fFld = i1;
                            iArr5 = iArr4[i];
                            i24 = iFld;
                            break;
                        case 51:
                            i24 <<= i1;
                            break;
                        case 52:
                            i2 = iFld;
                            break;
                        case 53:
                            bFld = bFld;
                            break;
                        case 54:
                            Test0333.instanceCount <<= 0L;
                            break;
                        case 55:
                        default:
                            lArr1[i + 1] *= 28L;
                        }
                    } while (++i25 < 2);
                    break;
                case 111:
                    i24 = i25;
                    break;
                case 134:
                    Test0333.instanceCount = -2;
                    break;
                case 118:
                    iArr5[i + 1] = (int) Test0333.dFld;
                    break;
                }
            }
        } while (++i < 392);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f1 i24 i25 = " + Float.floatToIntBits(f1) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 iArr dArr = " + i26 + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("lArr1 iArr4 iArr5 = " + FuzzerUtils.checkSum(lArr1) + "," +
            FuzzerUtils.checkSum(iArr4) + "," + FuzzerUtils.checkSum(iArr5));

        FuzzerUtils.out.println("Test0333.instanceCount Test0333.dFld fFld = " + Test0333.instanceCount + "," +
                Double.doubleToLongBits(Test0333.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0333.byFld iFld bFld = " + Test0333.byFld + "," + iFld + "," + (bFld ? 1 : 0));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0333 _instance = new Test0333();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 mainTest
//DEBUG  vMeth ->  vMeth iMeth1 mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth1 mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
