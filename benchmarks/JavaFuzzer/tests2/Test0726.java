// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0726 {

    public static final int N = 400;

    public static long instanceCount=-173L;
    public static int iFld=11;
    public static float fFld=14.558F;
    public int iFld1=13;
    public boolean bFld=true;
    public double dFld=-59.65225;
    public static int[] iArrFld =new int[N];
    public int[][] iArrFld1 =new int[N][N];

    static {
        FuzzerUtils.init(Test0726.iArrFld, -44005);
    }

    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1() {

        int i7=223;
        double d=0.65201;

        Test0726.iFld -= (int) Test0726.instanceCount;
        Test0726.iFld = Test0726.iFld;
        Test0726.fFld -= i7;
        d -= -12;
        i7 += (int) Test0726.instanceCount;
        long meth_res = i7 + Double.doubleToLongBits(d);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static byte byMeth(int i2, int i3) {

        int i4=52478, i5=-9358, i8=-4, i9=-187;
        float f=0.432F;
        boolean b=true;
        double d1=-90.78076;
        byte by=-119;
        short s=-14755;

        for (i4 = 17; i4 < 336; ++i4) {
            i2 = (int) (i2 -= (int) (-(Test0726.instanceCount + i3)));
            i2 += (((i4 * f) + i2) - f);
            b = (lMeth1() < i5);
        }
        d1 -= 11;
        f = (float)-1.99387;
        i3 = by;
        for (i8 = 353; i8 > 10; i8--) {
            i2 += (i8 * i8);
            i9 %= (int)(i9 | 1);
            Test0726.fFld *= i9;
            i3 *= 56169;
            if (b) {
                i9 += i8;
                s -= (short)i2;
            } else {
                Test0726.iArrFld[i8] *= i9;
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + (b ? 1 : 0) + Double.doubleToLongBits(d1) + by +
            i8 + i9 + s;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public long lMeth(long l, int i1, long l1) {

        byte by1=-86;
        int i10=0, i11=60189, i12=211, i13=126, i14=162, i15=15, i16=118, i17=-50595;
        short s1=-29180;
        long[] lArr1 =new long[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr1, 3883950632L);
        FuzzerUtils.init(dArr, 0.817);

        byMeth(Test0726.iFld, Test0726.iFld);
        by1 = (byte)iFld1;
        Test0726.iArrFld[(-1 >>> 1) % N] = Test0726.iFld;
        for (i10 = 3; 214 > i10; i10++) {
            lArr1[i10] = Test0726.instanceCount;
            i12 = 1;
            do {
                for (i13 = 1; i13 < 1; ++i13) {
                    Test0726.iArrFld[i10] = by1;
                    dArr[i13 + 1] = Test0726.fFld;
                }
            } while (++i12 < 8);
            for (i15 = 1; i15 < 8; ++i15) {
                s1 -= (short) Test0726.instanceCount;
            }
            i17 = 1;
            while (++i17 < 8) {
                i11 += i12;
                Test0726.iArrFld[i10 - 1] <<= Test0726.iFld;
            }
        }
        i11 *= 7;
        long meth_res = l + i1 + l1 + by1 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + s1 + i17 +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-43, i18=93, i19=164, i20=-5, i21=7, i22=189, i23=-11, i24=26;
        short s2=23394;
        float f1=2.982F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -23978L);
        FuzzerUtils.init(fArr, -100.180F);

        lArr[(i >>> 1) % N] -= lMeth(Test0726.instanceCount, i, Test0726.instanceCount);
        Test0726.iFld = iFld1;
        i18 = 1;
        do {
            iFld1 += (((i18 * i) + i18) - i18);
        } while (++i18 < 363);
        for (i19 = 7; i19 < 257; ++i19) {
            for (i21 = 6; i21 < 101; i21++) {
                Test0726.instanceCount ^= s2;
                Test0726.instanceCount *= (long) Test0726.fFld;
                for (i23 = 1; i23 < 2; ++i23) {
                    boolean b1=false;
                    Test0726.iArrFld[i19] = i;
                    if (b1) break;
                    lArr[i21 - 1] += Test0726.instanceCount;
                }
                Test0726.iFld += i21;
                Test0726.iFld <<= i;
                iFld1 += (((i21 * f1) + i22) - iFld1);
                f1 -= -13328;
                Test0726.iArrFld[i21 + 1] = iFld1;
                iArrFld1 = iArrFld1;
                fArr[i19 + 1] = Test0726.iFld;
            }
            if (bFld) {
                bFld = true;
            }
            lArr[i19 + 1] &= i24;
            i24 = 13;
            f1 *= i18;
            Test0726.iFld >>>= i24;
        }
        i20 += i;
        Test0726.instanceCount -= Test0726.instanceCount;
        iFld1 <<= i21;
        dFld = i19;

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("s2 i23 i24 = " + s2 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("f1 lArr fArr = " + Float.floatToIntBits(f1) + "," + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0726.instanceCount Test0726.iFld Test0726.fFld = " + Test0726.instanceCount + "," + Test0726.iFld +
                "," + Float.floatToIntBits(Test0726.fFld));
        FuzzerUtils.out.println("iFld1 bFld dFld = " + iFld1 + "," + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0726.iArrFld iArrFld1 = " + FuzzerUtils.checkSum(Test0726.iArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0726 _instance = new Test0726();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  byMeth ->  byMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 byMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
