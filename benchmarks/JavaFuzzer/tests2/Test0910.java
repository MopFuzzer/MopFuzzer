// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0910 {

    public static final int N = 400;

    public static volatile long instanceCount=26307L;
    public static int iFld=13933;
    public volatile short sFld=30681;
    public byte byFld=120;
    public static volatile int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];
    public boolean[] bArrFld =new boolean[N];
    public short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0910.iArrFld, 3);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(double d, int i3, int i4) {


        i4 -= -22968;
        i4 = i3;
        long meth_res = Double.doubleToLongBits(d) + i3 + i4;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(long l) {

        double d1=-2.19933;
        int i5=110, i6=-117, i7=51, i8=-13;
        boolean b=true;
        long l1=5440340229818905954L;

        lMeth(d1, Test0910.iFld, Test0910.iFld);
        for (i5 = 228; 8 < i5; i5 -= 3) {
            i6 = (int)d1;
            if (b) break;
            if (false) {
                i6 += (-253 + (i5 * i5));
                Test0910.iArrFld[i5] = i6;
                l1 = 1;
                while (++l1 < 21) {
                    Test0910.iFld >>= i6;
                }
                Test0910.instanceCount -= Test0910.iFld;
                vMeth_check_sum += l + Double.doubleToLongBits(d1) + i5 + i6 + (b ? 1 : 0) + l1 + i7 + i8;
                return;
            }
            Test0910.instanceCount = i6;
            for (i7 = 21; 1 < i7; i7--) {
                Test0910.instanceCount *= Test0910.iFld;
                try {
                    Test0910.iArrFld[i7 - 1] = (i5 % i7);
                    Test0910.iFld = (i5 / i6);
                    i6 = (-15128 / Test0910.iArrFld[i5]);
                } catch (ArithmeticException a_e) {}
                try {
                    i6 = (63555 / i5);
                    i8 = (Test0910.iFld % 11264);
                    Test0910.iArrFld[i7] = (-1711194126 / i5);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d1) + i5 + i6 + (b ? 1 : 0) + l1 + i7 + i8;
    }

    public static float fMeth() {

        byte by=40;

        vMeth(Test0910.instanceCount);
        by *= (byte)46003L;
        long meth_res = by;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=43935, i1=57, i2=-9, i9=-7188, i10=-13, i11=26853, i12=-3;
        float f=37.440F;
        float[] fArr =new float[N];
        double d2=60.60446;
        boolean b1=true;

        FuzzerUtils.init(fArr, 114.446F);

        i = (int) ((++i) * ((Test0910.instanceCount + i) - (Test0910.instanceCount + i)));
        for (i1 = 174; i1 > 7; i1 -= 2) {
            i -= (int) ((Test0910.instanceCount = (-Math.min(-139, i2))) - fMeth());
            for (i9 = 4; i9 < 302; ++i9) {
                for (i11 = 1; i11 < 2; ++i11) {
                    i = i11;
                    try {
                        i2 = (Test0910.iArrFld[i11] / -1225881817);
                        i12 = (i % -1990559472);
                        Test0910.iFld = (Test0910.iFld % -62091);
                    } catch (ArithmeticException a_e) {}
                    Test0910.instanceCount ^= i1;
                    switch (((42248 >>> 1) % 9) + 83) {
                    case 83:
                        fArr[i11 + 1] *= i11;
                        i10 ^= i1;
                        break;
                    case 84:
                        f *= (float)d2;
                        Test0910.iFld += i1;
                        break;
                    case 85:
                        i10 = sFld;
                        lArrFld[i11 + 1] = Test0910.iFld;
                        Test0910.iFld = (int) Test0910.instanceCount;
                    case 86:
                        Test0910.instanceCount += Test0910.instanceCount;
                        break;
                    case 87:
                        i2 += (i11 | i12);
                        switch (((i1 % 10) * 5) + 76) {
                        case 90:
                            switch (((i9 % 10) * 5) + 74) {
                            case 109:
                                sFld += (short)(i11 * i11);
                                Test0910.instanceCount ^= i;
                                Test0910.iArrFld[i1] <<= i9;
                                Test0910.iArrFld = Test0910.iArrFld;
                                break;
                            case 89:
                                i10 = i12;
                                Test0910.instanceCount += (i11 * Test0910.instanceCount);
                                break;
                            case 78:
                                d2 -= byFld;
                                Test0910.instanceCount ^= 16;
                                break;
                            case 97:
                                Test0910.iArrFld[i1 - 1] -= i12;
                            case 98:
                                lArrFld[i1 + 1] = -19348;
                            case 118:
                                i2 += (int)-6L;
                                break;
                            case 123:
                            case 81:
                                b1 = false;
                                break;
                            case 102:
                                if (false) continue;
                                break;
                            case 106:
                                f = i11;
                                break;
                            default:
                                i = byFld;
                            }
                            break;
                        case 119:
                            Test0910.iArrFld[i1] += i12;
                            break;
                        case 125:
                            i2 >>>= i12;
                            break;
                        case 104:
                            Test0910.iFld = (int) Test0910.instanceCount;
                            break;
                        case 122:
                            i12 += i11;
                        case 94:
                            sFld &= (short)i9;
                            break;
                        case 107:
                            Test0910.instanceCount += i11;
                            break;
                        case 113:
                            i12 += i1;
                            break;
                        case 120:
                            bArrFld[i1] = b1;
                            break;
                        case 83:
                            if (b1) continue;
                            break;
                        default:
                            try {
                                i10 = (Test0910.iArrFld[i11] % 50295);
                                i12 = (i2 % Test0910.iFld);
                                i10 = (-81 % Test0910.iArrFld[i11]);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 88:
                        i12 *= (int)f;
                    case 89:
                        f = i;
                        break;
                    case 90:
                        sArrFld[i9] = (short) Test0910.iFld;
                    case 91:
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 f d2 = " + i12 + "," + Float.floatToIntBits(f) + "," +
            Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("b1 fArr = " + (b1 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0910.instanceCount Test0910.iFld sFld = " + Test0910.instanceCount + "," + Test0910.iFld + "," +
            sFld);
        FuzzerUtils.out.println("byFld Test0910.iArrFld lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0910.iArrFld) +
            "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("bArrFld sArrFld = " + FuzzerUtils.checkSum(bArrFld) + "," +
            FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0910 _instance = new Test0910();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
