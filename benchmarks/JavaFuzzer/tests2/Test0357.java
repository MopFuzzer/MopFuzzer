// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0357 {

    public static final int N = 400;

    public static long instanceCount=41L;
    public static int iFld=-20;
    public static double dFld=71.35872;
    public byte byFld=37;
    public static short sFld=-7894;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0357.iArrFld, -26);
        FuzzerUtils.init(Test0357.fArrFld, 0.578F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5) {

        double d1=0.120576, d2=0.17843;
        boolean b=true;
        boolean[] bArr =new boolean[N];
        short s=-1069;
        int i6=0, i7=178, i8=243, i9=-40243, i10=14, i11=-79, i12=0;
        byte by=-53;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-124);
        FuzzerUtils.init(bArr, true);

        i4 /= (int)((long)(d1) | 1);
        d2 = 1;
        do {
            if (b) {
                i4 *= i4;
            } else {
                s -= (short) Test0357.instanceCount;
                for (i6 = 6; 1 < i6; i6--) {
                    for (i8 = 1; i8 < 2; ++i8) {
                        if (i6 != 0) {
                            vMeth2_check_sum += i4 + i5 + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) +
                                (b ? 1 : 0) + s + i6 + i7 + i8 + i9 + i10 + i11 + i12 + by +
                                FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(bArr);
                            return;
                        }
                    }
                }
                vMeth2_check_sum += i4 + i5 + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + (b ? 1 : 0) +
                    s + i6 + i7 + i8 + i9 + i10 + i11 + i12 + by + FuzzerUtils.checkSum(byArr) +
                    FuzzerUtils.checkSum(bArr);
                return;
            }
            for (i10 = 1; 6 > i10; ++i10) {
                if (b) break;
                i12 = 1;
                while (++i12 < 2) {
                    i7 += (i12 ^ i11);
                    byArr[i10 + 1] += by;
                    bArr[i10 - 1] = b;
                }
                try {
                    i4 = (Test0357.iArrFld[i10 - 1] % i8);
                    i11 = (-515783515 / i5);
                    i9 = (Test0357.iArrFld[i10 - 1] / i8);
                } catch (ArithmeticException a_e) {}
            }
        } while (++d2 < 283);
        vMeth2_check_sum += i4 + i5 + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + (b ? 1 : 0) + s + i6
            + i7 + i8 + i9 + i10 + i11 + i12 + by + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth1(float f, int i3) {

        int i13=-4;
        int i14=139;
        int i15=-188;
        int i16=26201;
        int i17=-18605;
        int[][] iArr =new int[N][N];
        float f1=24.1021F;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, 8773);
        FuzzerUtils.init(lArr, 13L);

        iArr = iArr;
        vMeth2(i3, i3);
        iArr[(i3 >>> 1) % N] = iArr[(i3 >>> 1) % N];
        for (i13 = 8; i13 < 292; i13++) {
            Test0357.instanceCount >>= Test0357.instanceCount;
            for (f1 = 1; 6 > f1; ++f1) {
                Test0357.instanceCount = i14;
                for (i16 = 1; i16 < 2; ++i16) {
                    i3 += (int)f1;
                    lArr[i16][(int)(f1 - 1)] = -36702L;
                }
                f += ((long)f1 ^ (long)f1);
                Test0357.fArrFld[(int) (f1)] = -58;
            }
            i17 -= i15;
            Test0357.instanceCount <<= 27468;
            i15 += i15;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i13 + i14 + Float.floatToIntBits(f1) + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l, int i1, int i2) {

        float f2=2.845F;
        int i18=65483, i19=7, i20=-45710, i21=-8;
        short s1=-5316;

        vMeth1(f2, i2);
        i1 -= i1;
        l = 47549L;
        if (false) {
            Test0357.iArrFld[(i1 >>> 1) % N] = (int) f2;
            i2 <<= (int)l;
        } else {
            for (i18 = 7; i18 < 138; ++i18) {
                i19 *= i1;
                for (i20 = 1; i20 < 12; i20++) {
                    i2 = i1;
                    try {
                        i21 = (Test0357.iArrFld[i18] / Test0357.iFld);
                        i19 = (i18 % i2);
                        i19 = (-97 / i21);
                    } catch (ArithmeticException a_e) {}
                    if (i1 != 0) {
                        vMeth_check_sum += l + i1 + i2 + Float.floatToIntBits(f2) + i18 + i19 + i20 + i21 + s1;
                        return;
                    }
                    Test0357.instanceCount -= l;
                    Test0357.iFld += s1;
                    Test0357.dFld = i1;
                }
            }
        }
        vMeth_check_sum += l + i1 + i2 + Float.floatToIntBits(f2) + i18 + i19 + i20 + i21 + s1;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.130806;
        int i=-56387, i22=-10, i23=-11, i24=19853, i25=-165;
        float f3=-79.920F;
        boolean b1=false;
        long l1=-2122953439890840330L;

        for (d = 13; d < 281; d++) {
            vMeth(Test0357.instanceCount, -9, Test0357.iFld);
            if (b1) {
                Test0357.iArrFld[(int) (d + 1)] += Test0357.iFld;
                Test0357.iFld *= Test0357.iFld;
            } else if (b1) {
                Test0357.iArrFld[(int) (d)] <<= i22;
                byFld /= (byte) (Test0357.iFld | 1);
                Test0357.sFld += (short) f3;
                i23 = 1;
                do {
                    for (i24 = (int)(d); i24 < 1; ++i24) {
                        i += (99 + (i24 * i24));
                        f3 = 6875;
                        switch (((i24 % 3) * 5) + 86) {
                        case 91:
                        case 95:
                            i25 -= i;
                            Test0357.iArrFld[i23 + 1] >>>= i22;
                            break;
                        case 100:
                            Test0357.iFld = (int) f3;
                            b1 = b1;
                            Test0357.instanceCount += 58263L;
                            break;
                        default:
                            i += i24;
                            i -= (int)21L;
                        }
                        Test0357.iArrFld[i24 - 1] <<= (int) Test0357.instanceCount;
                        Test0357.instanceCount -= (long) d;
                        f3 *= i25;
                        byFld = (byte)i22;
                        f3 = Test0357.iFld;
                    }
                    Test0357.iFld *= (int) l1;
                    Test0357.instanceCount = l1;
                    Test0357.iArrFld[i23] += (int) l1;
                    l1 += (-50289 + (i23 * i23));
                    i = i22;
                } while (++i23 < 94);
            }
        }

        FuzzerUtils.out.println("d i i22 = " + Double.doubleToLongBits(d) + "," + i + "," + i22);
        FuzzerUtils.out.println("f3 i23 i24 = " + Float.floatToIntBits(f3) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 b1 l1 = " + i25 + "," + (b1 ? 1 : 0) + "," + l1);

        FuzzerUtils.out.println("Test0357.instanceCount Test0357.iFld Test0357.dFld = " + Test0357.instanceCount + "," + Test0357.iFld +
                "," + Double.doubleToLongBits(Test0357.dFld));
        FuzzerUtils.out.println("byFld Test0357.sFld Test0357.iArrFld = " + byFld + "," + Test0357.sFld + "," +
                FuzzerUtils.checkSum(Test0357.iArrFld));
        FuzzerUtils.out.println("Test0357.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0357.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0357 _instance = new Test0357();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
