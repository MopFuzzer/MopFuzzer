// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0745 {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static float fFld=2.876F;
    public static byte byFld=-86;
    public short sFld=-6138;
    public static long[] lArrFld =new long[N];
    public byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0745.lArrFld, -171L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        int i2=-14;
        int i3=46824;
        int i4=14;
        int i5=-1;
        int[] iArr =new int[N];
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        double d2=-101.2604;
        double[] dArr =new double[N];
        short[] sArr1 =new short[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(dArr, 2.38873);
        FuzzerUtils.init(sArr1, (short)-6937);

        i2 = (int) Test0745.fFld;
        switch (((i2 >>> 1) % 6) + 38) {
        case 38:
            i2 = (int) Test0745.instanceCount;
            for (i3 = 3; 271 > i3; ++i3) {
                Test0745.fFld += (i3 * i3);
                i2 /= (int)(i3 | 1);
                i5 = 1;
                while (++i5 < 6) {
                    i4 <<= i2;
                    bArr[i3] = b1;
                    Test0745.byFld >>= (byte) i5;
                    Test0745.byFld += (byte) i5;
                    iArr[i3] += i2;
                    i2 += (int)3L;
                }
                i4 *= -10;
                Test0745.fFld += i2;
            }
            break;
        case 39:
            Test0745.lArrFld[(i4 >>> 1) % N] -= i5;
        case 40:
            d2 = Test0745.instanceCount;
        case 41:
            i2 = -7;
            break;
        case 42:
            d2 -= i5;
        case 43:
            i4 = i4;
            break;
        }
        long meth_res = i2 + i3 + i4 + i5 + (b1 ? 1 : 0) + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(sArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(float f) {

        int i1=-244;
        int i7=8;
        int i8=-51718;
        int i9=12;
        int i10=30205;
        int[] iArr1 =new int[N];
        double d3=0.25263;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-15981);
        FuzzerUtils.init(iArr1, -6);

        i1 = 1;
        do {
            sArr[i1] += (short)fMeth();
            for (i7 = 14; i7 > 1; i7 -= 2) {
                for (i9 = i1; i9 < 3; i9 += 2) {
                    Test0745.instanceCount -= (long) Test0745.fFld;
                    f += (((i9 * f) + Test0745.instanceCount) - Test0745.fFld);
                    Test0745.instanceCount += i10;
                    switch (((i7 >>> 1) % 1) + 3) {
                    case 3:
                    default:
                        switch (((-179 >>> 1) % 10) + 40) {
                        case 40:
                            switch (((i9 >>> 1) % 2) + 71) {
                            case 71:
                                i8 *= 7;
                                break;
                            case 72:
                                i10 |= i7;
                                f -= i8;
                                d3 -= Test0745.instanceCount;
                                break;
                            default:
                                Test0745.instanceCount -= -2036192369L;
                            }
                            break;
                        case 41:
                            i10 += i7;
                            break;
                        case 42:
                            if (i8 != 0) {
                            }
                            break;
                        case 43:
                            Test0745.lArrFld[i9 + 1] = Test0745.instanceCount;
                            break;
                        case 44:
                            i8 = i10;
                        case 45:
                            d3 -= Test0745.instanceCount;
                        case 46:
                            Test0745.instanceCount = Test0745.instanceCount;
                        case 47:
                            iArr1[i1] *= (int) Test0745.fFld;
                            break;
                        case 48:
                            Test0745.instanceCount += (6 + (i9 * i9));
                            break;
                        case 49:
                            i8 += (((i9 * i1) + Test0745.fFld) - i10);
                            break;
                        }
                    }
                }
            }
        } while ((i1 += 3) < 328);
        long meth_res = Float.floatToIntBits(f) + i1 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d3) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(int i, double d, boolean b) {


        i += ((i * iMeth(Test0745.fFld)) + i);
        vSmallMeth_check_sum += i + Double.doubleToLongBits(d) + (b ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        double d4=39.89018;
        double[] dArr1 =new double[N];
        int i11=-27457;
        int i12=-86;
        int i13=-71;
        int i14=-221;
        int i15=136;
        int i16=3;
        int i17=-14;
        int i18=27154;
        int i19=-43099;
        int i20=-13;
        int[] iArr2 =new int[N];
        boolean b2=false;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr2, 13);
        FuzzerUtils.init(dArr1, 119.89201);
        FuzzerUtils.init(fArr, 60.245F);

        for (int smallinvoc=0; smallinvoc<314; smallinvoc++) vSmallMeth(-35105, d4, false);
        for (i11 = 8; i11 < 217; ++i11) {
            switch (((i11 >>> 1) % 9) + 55) {
            case 55:
                Test0745.instanceCount = (long) Test0745.fFld;
                iArr2 = FuzzerUtils.int1array(N, (int)37);
            case 56:
                if (b2) {
                    Test0745.instanceCount += (i11 * i11);
                    if (b2) {
                        Test0745.instanceCount -= i11;
                        for (i13 = 6; i13 < 120; ++i13) {
                            Test0745.byFld += Test0745.byFld;
                            i12 -= 3;
                        }
                        i12 += (int) Test0745.instanceCount;
                    } else {
                        if (b2) continue;
                        for (i15 = 5; i15 < 120; ++i15) {
                            i14 = i13;
                            switch ((((i13 >>> 1) % 10) * 5) + 83) {
                            case 120:
                                try {
                                    i12 = (251 / i14);
                                    iArr2[i11 + 1] = (i16 / iArr2[i11 - 1]);
                                    i16 = (i11 / i16);
                                } catch (ArithmeticException a_e) {}
                                for (i17 = 1; 2 > i17; ++i17) {
                                    i16 += (i17 * i17);
                                    iArr2[i17 + 1] = i19;
                                    i14 >>= i18;
                                    i12 += (-51050 + (i17 * i17));
                                    Test0745.fFld -= i17;
                                    i18 -= i14;
                                    i12 = i20;
                                }
                                break;
                            case 112:
                                sFld >>= (short) Test0745.instanceCount;
                                i18 *= i20;
                                i14 += i15;
                                Test0745.lArrFld = Test0745.lArrFld;
                                break;
                            case 126:
                                Test0745.instanceCount = Test0745.instanceCount;
                                break;
                            case 121:
                                i12 = i16;
                                break;
                            case 117:
                                i12 += (((i15 * i12) + i17) - i16);
                                break;
                            case 94:
                                i14 = (int) Test0745.instanceCount;
                                break;
                            case 111:
                                b2 = b2;
                            case 115:
                                dArr1[i11 - 1] += i17;
                                break;
                            case 107:
                                Test0745.instanceCount -= -114;
                                break;
                            case 89:
                                iArr2[i11] <<= (int) Test0745.instanceCount;
                                break;
                            }
                        }
                    }
                }
                break;
            case 57:
                i19 = i19;
                break;
            case 58:
                i20 += (((i11 * Test0745.fFld) + sFld) - Test0745.fFld);
                break;
            case 59:
                byArrFld[i11] = (byte) Test0745.instanceCount;
                break;
            case 60:
                Test0745.instanceCount -= 21368;
                break;
            case 61:
                sFld = sFld;
            case 62:
                i12 -= (int) Test0745.fFld;
                break;
            case 63:
                fArr[i11 - 1][i11 + 1] -= 0.507F;
            }
        }

        FuzzerUtils.out.println("d4 i11 i12 = " + Double.doubleToLongBits(d4) + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 b2 = " + i13 + "," + i14 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("iArr2 dArr1 fArr = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0745.instanceCount Test0745.fFld Test0745.byFld = " + Test0745.instanceCount + "," +
                Float.floatToIntBits(Test0745.fFld) + "," + Test0745.byFld);
        FuzzerUtils.out.println("sFld Test0745.lArrFld byArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test0745.lArrFld) + ","
            + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0745 _instance = new Test0745();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  fMeth ->  fMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
