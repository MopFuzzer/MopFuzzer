// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0992 {

    public static final int N = 400;

    public static long instanceCount=6L;
    public static double dFld=0.11854;
    public float fFld=64.326F;
    public boolean bFld=false;
    public static byte[][] byArrFld =new byte[N][N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0992.byArrFld, (byte) -22);
        FuzzerUtils.init(Test0992.sArrFld, (short) -18807);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i8=8, i9=7, i10=7, i11=-27108, i12=-5147, i13=-48741, i14=5;
        double d2=-45.100385;
        boolean b=false;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, -2.227F);

        if (true) {
            i8 = i8;
            for (i9 = 4; i9 < 271; i9++) {
                if (b) {
                    fArr[i9 + 1][i9 - 1] /= (i10 | 1);
                    if (true) {
                        Test0992.instanceCount -= i9;
                    } else {
                        Test0992.dFld += i8;
                        for (i11 = 1; i11 < 6; ++i11) {
                            i8 &= i11;
                            for (d2 = 1; d2 < 2; ++d2) {
                                i13 += (int) (((d2 * Test0992.instanceCount) + i11) - i11);
                                i10 <<= i13;
                                i13 += (int)d2;
                                i14 += (int)d2;
                            }
                        }
                    }
                } else if (b) {
                    Test0992.dFld += -203;
                } else {
                    i14 = i8;
                }
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d2) + i13 + i14 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static byte byMeth(double d1, int i7) {

        int i15=-7;
        int i16=28323;
        int i17=-235;
        int i18=-7;
        int[] iArr2 =new int[N];
        float f1=0.280F;
        short s=-30610;
        long l1=-14L;

        FuzzerUtils.init(iArr2, -6);

        vMeth1();
        Test0992.instanceCount = i7;
        for (i15 = 2; i15 < 192; i15 += 3) {
            i16 = (int)f1;
            for (i17 = 24; i17 > 1; i17 -= 3) {
                i7 = (int)818250699L;
                Test0992.instanceCount -= 8;
                i16 <<= (int)-3840951449L;
                f1 += (((i17 * i17) + i15) - i7);
                iArr2[i17 - 1] = i18;
                try {
                    i16 = (2020430797 / i18);
                    i18 = (4359 / i18);
                    iArr2[i17 + 1] = (-96 / i7);
                } catch (ArithmeticException a_e) {}
                s += (short)(-9L + (i17 * i17));
                f1 *= l1;
                i7 <<= s;
            }
            f1 = i17;
        }
        long meth_res = Double.doubleToLongBits(d1) + i7 + i15 + i16 + Float.floatToIntBits(f1) + i17 + i18 + s + l1 +
            FuzzerUtils.checkSum(iArr2);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth() {

        int i1=30193;
        int i2=13;
        int i3=-214;
        int i4=19899;
        int i5=21217;
        int i6=24869;
        int[] iArr1 =new int[N];
        long l=7900225816872882146L;
        double d=65.11388;
        byte by=69;
        float f=-61.737F;

        FuzzerUtils.init(iArr1, -41);

        for (i1 = 14; i1 < 297; ++i1) {
            i2 >>= (++iArr1[i1]);
            i2 ^= (int) ((iArr1[i1 - 1]--) * ((i2 + Test0992.instanceCount) + (i1 - i1)));
            i2 -= (int)l;
            l += i1;
            Test0992.instanceCount += (i1 ^ i2);
            i2 += (i1 * i1);
            d -= ((++Test0992.instanceCount) - (l++));
            by += (byte)(27 - ((-i1) + (f - 8421974797170806467L)));
        }
        for (i3 = 5; 145 > i3; i3++) {
            for (i5 = 1; 11 > i5; i5++) {
                i4 += (((i5 * i6) + i5) - i6);
                Test0992.instanceCount >>= (l - byMeth(Test0992.dFld, i3));
                i4 += i5;
                i4 <<= (int)l;
            }
        }
        vMeth_check_sum += i1 + i2 + l + Double.doubleToLongBits(d) + by + Float.floatToIntBits(f) + i3 + i4 + i5 + i6
            + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=111;
        int i19=-59475;
        int i20=-5;
        int i21=4;
        int i22=-9;
        int i23=26;
        int i24=198;
        int[] iArr =new int[N];
        long l2=1996973652L;
        long[] lArr =new long[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr, -41932L);
        FuzzerUtils.init(iArr, 20700);
        FuzzerUtils.init(dArr, 2.119762);

        lArr[(i >>> 1) % N] += (--iArr[(i >>> 1) % N]);
        vMeth();
        for (i19 = 2; i19 < 308; ++i19) {
            i += (int)fFld;
            i = i19;
            bFld = bFld;
            for (i21 = 1; i21 < 82; ++i21) {
                fFld = Test0992.instanceCount;
                fFld += i22;
                switch ((((i >>> 1) % 2) * 5) + 46) {
                case 53:
                    i20 = i22;
                    i22 += i22;
                    break;
                case 48:
                    Test0992.byArrFld[i21 + 1][i21 - 1] = (byte) i;
                    fFld = -67;
                    switch ((i21 % 4) + 125) {
                    case 125:
                        for (i23 = 2; i23 > 1; --i23) {
                            Test0992.sArrFld[i21 + 1] -= (short) 3;
                            fFld *= Test0992.instanceCount;
                            i20 = (int)fFld;
                        }
                    case 126:
                        i20 -= i23;
                        i = (int)fFld;
                    case 127:
                        i20 += -252;
                        dArr[i19] = i20;
                        i += (((i21 * Test0992.instanceCount) + i21) - i);
                        switch ((((i >>> 1) % 3) * 5) + 72) {
                        case 75:
                            i = 23922;
                            break;
                        case 82:
                        case 76:
                        }
                        break;
                    case 128:
                    }
                default:
                    fFld = fFld;
                }
                fFld -= i22;
                i24 = (int)l2;
            }
        }
        i20 -= i22;

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 l2 lArr = " + i24 + "," + l2 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("iArr dArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0992.instanceCount Test0992.dFld fFld = " + Test0992.instanceCount + "," +
                Double.doubleToLongBits(Test0992.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("bFld Test0992.byArrFld Test0992.sArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0992.byArrFld) + "," + FuzzerUtils.checkSum(Test0992.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0992 _instance = new Test0992();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
