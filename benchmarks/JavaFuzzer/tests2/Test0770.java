// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:48 2023
public class Test0770 {

    public static final int N = 400;

    public static volatile long instanceCount=3392L;
    public static byte byFld=-108;
    public static double dFld=14.70866;
    public static float fFld=-25.595F;
    public static volatile int iFld=-9;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public short[] sArrFld =new short[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0770.iArrFld, 4);
        FuzzerUtils.init(Test0770.lArrFld, -45984L);
    }

    public static long byMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d, int i5) {

        int i6=-5, i7=34806, i8=-20, i9=229, i10=-192, i11=-6574;
        boolean b=true;
        short s=20431;
        float f=44.298F;

        for (i6 = 4; i6 < 262; ++i6) {
            Test0770.instanceCount = i5;
            d *= i5;
            for (i8 = i6; i8 < 6; i8++) {
                Test0770.instanceCount >>>= -3L;
                i9 = (int) Test0770.instanceCount;
                if (b) continue;
                i9 = Test0770.byFld;
            }
            Test0770.instanceCount = -29;
            for (i10 = 1; 6 > i10; i10 += 3) {
                s += (short)i10;
                i9 = -16016;
                f = Test0770.instanceCount;
                i5 = (int)246L;
            }
        }
        f = f;
        vMeth_check_sum += Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + i10 + i11 + s +
            Float.floatToIntBits(f);
    }

    public static long lMeth() {

        long l=-15391L;
        long[][] lArr =new long[N][N];
        int i2=19299;
        int i3=-39438;
        int i4=-12;
        int i12=4;
        int[] iArr =new int[N];
        double d1=-14.83821;
        float f1=32.450F;

        FuzzerUtils.init(iArr, 2);
        FuzzerUtils.init(lArr, 71L);

        for (l = 6; l < 124; l++) {
            switch ((int)((l % 3) + 25)) {
            case 25:
            case 26:
                for (i3 = 1; i3 < 13; ++i3) {
                    vMeth(d1, -26046);
                    i4 *= i4;
                    i12 = 1;
                    while (++i12 < 2) {
                        i2 = i2;
                        i4 *= (int) Test0770.instanceCount;
                        i4 -= i4;
                        iArr[i12] += i2;
                        Test0770.instanceCount += i12;
                        d1 += i4;
                        lArr[i12 - 1] = FuzzerUtils.long1array(N, (long)-216L);
                        Test0770.iArrFld[(int) (l - 1)] -= i2;
                        i2 *= (int)l;
                    }
                }
            case 27:
                i4 -= (int)f1;
                break;
            default:
                f1 += i4;
            }
        }
        long meth_res = l + i2 + i3 + i4 + Double.doubleToLongBits(d1) + i12 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static byte byMeth() {

        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 1.537F);

        lMeth();
        fArr = fArr;
        Test0770.dFld = -2;
        long meth_res = Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=24360, i1=4, i13=7831, i14=-115, i15=-192, i16=7, i17=-62195;
        short s1=-6634;
        float f2=0.448F;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 0.338F);

        for (i = 1; i < 223; ++i) {
            Test0770.iArrFld[(i >>> 1) % N] = (-byMeth());
            for (i13 = 7; 113 > i13; i13++) {
                s1 = (short)f2;
                switch (((i1 >>> 1) % 8) + 84) {
                case 84:
                    Test0770.dFld -= i13;
                    Test0770.iArrFld[i + 1] = i14;
                case 85:
                    Test0770.instanceCount |= i13;
                    Test0770.iArrFld[i13] = (int) Test0770.instanceCount;
                    i14 += i;
                    break;
                case 86:
                    fArr1[i13 + 1] -= -22608;
                    i1 <<= (int) Test0770.instanceCount;
                    for (i15 = 1; i15 < 2; i15++) {
                        i14 <<= i15;
                        Test0770.fFld *= Test0770.instanceCount;
                        i16 >>= -6117;
                        i14 = i14;
                        Test0770.iArrFld[i15 - 1] -= Test0770.iFld;
                        Test0770.iFld -= i15;
                        Test0770.byFld >>= (byte) i1;
                        i16 >>>= i13;
                    }
                    Test0770.dFld *= Test0770.instanceCount;
                    break;
                case 87:
                    Test0770.fFld += (i13 * i13);
                    i16 += (((i13 * i13) + f2) - i13);
                case 88:
                    i17 = 1;
                    while (++i17 < 2) {
                        i16 = (int) Test0770.dFld;
                        Test0770.iArrFld[i17] *= (int) 2990185129L;
                        Test0770.instanceCount += (-37833L + (i17 * i17));
                        s1 <<= (short) Test0770.instanceCount;
                        sArrFld[i13 - 1] = Test0770.byFld;
                    }
                    break;
                case 89:
                    Test0770.iArrFld[i] %= -179;
                    break;
                case 90:
                    bFld = bFld;
                    break;
                case 91:
                    Test0770.lArrFld[i + 1] = -46374;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i13 = " + i + "," + i1 + "," + i13);
        FuzzerUtils.out.println("i14 s1 f2 = " + i14 + "," + s1 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0770.instanceCount Test0770.byFld Test0770.dFld = " + Test0770.instanceCount + "," + Test0770.byFld +
                "," + Double.doubleToLongBits(Test0770.dFld));
        FuzzerUtils.out.println("Test0770.fFld Test0770.iFld bFld = " + Float.floatToIntBits(Test0770.fFld) + "," + Test0770.iFld + ","
            + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0770.iArrFld sArrFld Test0770.lArrFld = " + FuzzerUtils.checkSum(Test0770.iArrFld) + "," +
                FuzzerUtils.checkSum(sArrFld) + "," + FuzzerUtils.checkSum(Test0770.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0770 _instance = new Test0770();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  lMeth ->  lMeth byMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
