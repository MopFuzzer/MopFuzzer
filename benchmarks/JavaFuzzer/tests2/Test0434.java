// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0434 {

    public static final int N = 400;

    public static volatile long instanceCount=248L;
    public static boolean bFld=true;
    public static volatile short sFld=7534;
    public long lFld=3482643025L;
    public int[] iArrFld =new int[N];
    public static int[] iArrFld1 =new int[N];
    public static double[][] dArrFld =new double[N][N];
    public static volatile float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0434.iArrFld1, -233);
        FuzzerUtils.init(Test0434.dArrFld, 0.46677);
        FuzzerUtils.init(Test0434.fArrFld, 2.995F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        float f1=-35.971F, f2=2.548F;
        int i6=-241, i7=-49, i8=226, i9=48135, i10=-31966;
        byte by=-56;
        double d=-2.7287;

        if (true) {
            f1 = i5;
            for (i6 = 5; i6 < 286; i6++) {
                i8 = 1;
                while (++i8 < 6) {
                    try {
                        i7 = (-82 / i5);
                        i5 = (-310094719 / Test0434.iArrFld1[i8 + 1]);
                        i9 = (-81 % i9);
                    } catch (ArithmeticException a_e) {}
                    Test0434.bFld = Test0434.bFld;
                    Test0434.iArrFld1[i6] = by;
                    Test0434.instanceCount -= (long) -89.101662;
                    f1 *= (float)d;
                    Test0434.iArrFld1[i8 + 1] = -2;
                    Test0434.instanceCount = i9;
                    i10 = 1;
                    while (++i10 < 1) {
                        i7 = i5;
                        i9 = i7;
                        f2 += f2;
                    }
                }
            }
        } else {
            i9 -= -7546;
        }
        vMeth1_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + by + Double.doubleToLongBits(d) + i10 +
            Float.floatToIntBits(f2);
    }

    public static void vMeth() {

        int i11=9, i12=107, i13=-2, i14=-23, i15=8;
        short s=22817;
        float f3=-1.721F;

        vMeth1(i11);
        s <<= (short)i11;
        i11 *= (int)-79.665F;
        i11 -= i11;
        for (i12 = 11; i12 < 352; i12++) {
            Test0434.instanceCount += (((i12 * f3) + i12) - i11);
            for (i14 = 5; i14 > 1; i14 -= 3) {
                Test0434.iArrFld1[i12] &= i12;
                i11 += (i14 * i13);
                i13 += (i14 + s);
                Test0434.instanceCount += (i14 * i14);
                if (i14 != 0) {
                    vMeth_check_sum += i11 + s + i12 + i13 + Float.floatToIntBits(f3) + i14 + i15;
                    return;
                }
            }
            i13 = i14;
        }
        i13 = 5;
        Test0434.instanceCount &= i15;
        vMeth_check_sum += i11 + s + i12 + i13 + Float.floatToIntBits(f3) + i14 + i15;
    }

    public int iMeth(int i4) {

        double d1=0.38372;
        int i16=-12, i17=-56901, i18=-47239, i19=188, i20=13655, i21=20720, i22=26026, i23=0, i24=6;
        float f4=-15.175F;
        short s1=-11147;

        vMeth();
        d1 = -83L;
        i16 = 1;
        while (++i16 < 265) {
            for (i17 = 6; i17 > 1; i17 -= 3) {
                for (i19 = 1; i19 < 6; ++i19) {
                    i4 = (int)f4;
                }
                i20 <<= i20;
                Test0434.iArrFld1[i16] *= (int) Test0434.instanceCount;
                for (i21 = i16; i21 < 6; ++i21) {
                    Test0434.iArrFld1[i21] = (int) Test0434.instanceCount;
                }
                switch ((((46633 >>> 1) % 9) * 5) + 51) {
                case 75:
                    for (i23 = 1; 6 > i23; i23++) {
                        i18 *= i19;
                        if (Test0434.bFld) break;
                        if (i4 != 0) {
                        }
                    }
                case 56:
                    i18 += (((i17 * i19) + i20) - i19);
                    break;
                case 73:
                case 65:
                    Test0434.instanceCount = i19;
                case 94:
                    i22 -= i23;
                case 58:
                    i18 = 245;
                    break;
                case 60:
                    i24 = 17127;
                    break;
                case 85:
                    i18 >>= i4;
                    break;
                case 76:
                    f4 = s1;
                    break;
                default:
                    Test0434.instanceCount += (i17 + i24);
                }
            }
        }
        long meth_res = i4 + Double.doubleToLongBits(d1) + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f4) + i21
            + i22 + i23 + i24 + s1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=12359, i1=159, i2=32098, i3=-104, i25=-60, i26=14, i27=-12472, i28=43925, i29=-57, i30=-29;
        float f=-29.608F;
        byte by1=-54;
        long l=-220L;
        long[] lArr =new long[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(lArr, 1563529890183968491L);
        FuzzerUtils.init(sArr, (short)-5514);

        for (i = 2; i < 381; ++i) {
            for (i2 = 4; i2 < 66; ++i2) {
                f += (((i2 * i3) + Test0434.instanceCount) - Test0434.instanceCount);
                iArrFld[i] += iMeth(i2);
                f += (i2 * i);
            }
            i1 = i;
            i3 *= Test0434.sFld;
        }
        switch (((i1 >>> 1) % 8) + 20) {
        case 20:
            lArr[(-58876 >>> 1) % N] += -38649L;
            sArr[(i1 >>> 1) % N] = (short)i1;
            Test0434.sFld = (short) i;
        case 21:
            for (i25 = 1; i25 < 175; i25++) {
                i1 -= by1;
                for (l = 8; l < 144; l += 3) {
                    Test0434.instanceCount -= by1;
                    for (i28 = 4; 1 < i28; i28--) {
                        double d2=110.14722;
                        Test0434.bFld = true;
                        i3 = (int)l;
                        if (Test0434.bFld) {
                            i30 *= i2;
                            d2 = i2;
                            Test0434.dArrFld[(i3 >>> 1) % N][i28 - 1] = i28;
                        } else {
                            Test0434.fArrFld[i25 - 1][i28 + 1] += Test0434.instanceCount;
                            Test0434.instanceCount += (long) f;
                            i3 = (int)lFld;
                        }
                        i3 = i;
                        try {
                            i1 = (i1 / 29483);
                            i27 = (-40859 % iArrFld[(int)(l + 1)]);
                            i29 = (i25 % -12);
                        } catch (ArithmeticException a_e) {}
                        i29 -= (int)-81.102369;
                        d2 -= i;
                    }
                    i26 = i1;
                }
            }
            break;
        case 22:
            i30 >>= i28;
            break;
        case 23:
            lFld = Test0434.sFld;
            break;
        case 24:
            i3 = (int)lFld;
        case 25:
            Test0434.instanceCount >>>= i25;
            break;
        case 26:
            iArrFld[(i27 >>> 1) % N] += i26;
            break;
        case 27:
            i27 = (int)f;
        default:
            Test0434.iArrFld1[(i2 >>> 1) % N] %= 144;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f i25 = " + i3 + "," + Float.floatToIntBits(f) + "," + i25);
        FuzzerUtils.out.println("i26 by1 l = " + i26 + "," + by1 + "," + l);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 lArr sArr = " + i30 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0434.instanceCount Test0434.bFld Test0434.sFld = " + Test0434.instanceCount + "," + (Test0434.bFld ? 1
                : 0) + "," + Test0434.sFld);
        FuzzerUtils.out.println("lFld iArrFld Test0434.iArrFld1 = " + lFld + "," + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0434.iArrFld1));
        FuzzerUtils.out.println("Test0434.dArrFld Test0434.fArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0434.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0434.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0434 _instance = new Test0434();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
