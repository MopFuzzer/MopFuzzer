// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0779 {

    public static final int N = 400;

    public static long instanceCount=-4083473200498083104L;
    public static boolean bFld=false;
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0779.iArrFld, 64213);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {


        Test0779.instanceCount |= Test0779.instanceCount;
        vMeth1_check_sum += 0;
    }

    public static void vMeth(int i7, long l1) {

        int i8=-78, i9=157, i10=238, i11=55629, i12=-227, i13=-22;
        long l2=196L;
        long[] lArr =new long[N];
        double d=2.113135;
        float f1=2.807F;

        FuzzerUtils.init(lArr, -4L);

        vMeth1();
        i7 = -1;
        for (i8 = 241; i8 > 6; --i8) {
            i7 = (int)l1;
            Test0779.iArrFld[i8 - 1] -= (int) l1;
            i7 += i8;
        }
        for (i10 = 6; i10 < 145; ++i10) {
            for (l2 = 1; l2 < 11; ++l2) {
                Test0779.instanceCount <<= i12;
                i9 = i7;
                l1 *= Test0779.instanceCount;
            }
            i12 = (int) Test0779.instanceCount;
        }
        for (d = 13; d < 256; d++) {
            f1 -= i7;
            lArr[(int)(d)] = -60L;
        }
        vMeth_check_sum += i7 + l1 + i8 + i9 + i10 + i11 + l2 + i12 + Double.doubleToLongBits(d) + i13 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1, int i2, long l) {

        int i3=-10;
        int i4=-33315;
        int i5=-38188;
        int i6=48772;
        int[][] iArr =new int[N][N];
        float f=116.245F;
        float[] fArr =new float[N];
        short s=-15449;
        byte by=67;

        FuzzerUtils.init(iArr, 5762);
        FuzzerUtils.init(fArr, 2.822F);

        for (i3 = 4; i3 < 338; i3++) {
            i4 = (int)((l + (f + s)) * (i1--));
            for (i5 = 1; i5 < 5; i5 += 3) {
                boolean b=true;
                l = (long)(106 * (i5 - (f++)));
                l -= (((l % (l | 1)) + (-(by * i4))) << s);
                iArr[i3 + 1][(i2 >>> 1) % N] >>= i5;
                vMeth(i2, Test0779.instanceCount);
                Test0779.bFld = true;
                fArr[i5] += f;
                Test0779.iArrFld[i3 - 1] += i4;
                i2 += (int)l;
                s += (short)(((i5 * i6) + i2) - i5);
                if (true) {
                    if (b) break;
                }
            }
        }
        i1 += i4;
        long meth_res = i1 + i2 + l + i3 + i4 + Float.floatToIntBits(f) + s + i5 + i6 + by + FuzzerUtils.checkSum(iArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-200;

        i = (int)((iMeth(i, i, -3553187516L) - -38820L) - i);

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test0779.instanceCount Test0779.bFld Test0779.iArrFld = " + Test0779.instanceCount + "," + (Test0779.bFld
                ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0779.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0779 _instance = new Test0779();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
