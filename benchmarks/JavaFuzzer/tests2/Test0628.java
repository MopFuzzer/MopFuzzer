// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0628 {

    public static final int N = 400;

    public static long instanceCount=4666L;
    public static float fFld=35.303F;
    public static double dFld=-45.94067;
    public byte byFld=-31;
    public static volatile short sFld=-31743;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0628.iArrFld, -13);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        int i4=-28;
        int i5=12;
        int i6=10;
        int i7=-55233;
        int i8=42767;
        int i9=-208;
        int[] iArr =new int[N];
        boolean b=false;
        float f=114.328F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 2.184F);
        FuzzerUtils.init(lArr, -6176601765439013344L);
        FuzzerUtils.init(iArr, 1);

        for (i4 = 3; i4 < 145; i4++) {
            i5 = (int) Test0628.instanceCount;
            for (i6 = 1; i6 < 11; i6++) {
                i7 += i3;
                for (i8 = 1; 2 > i8; i8++) {
                    fArr[i4] -= i9;
                    if (b) continue;
                    i9 -= (int) Test0628.instanceCount;
                    lArr[i8 + 1] ^= Test0628.instanceCount;
                    Test0628.instanceCount = -3682;
                    i3 -= -113;
                    f = i7;
                    iArr[i8] += i8;
                }
                i9 ^= i6;
                i5 ^= i4;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + Float.floatToIntBits(f) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i2) {

        double d=9.96521;
        float f1=-3.467F;
        int i10=-14;
        int i11=46;
        int i12=242;
        int[] iArr1 =new int[N];
        int[] iArr2 =new int[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr1, 5);
        FuzzerUtils.init(iArr2, 1);
        FuzzerUtils.init(sArr, (short)-14791);

        vMeth1(-15074);
        i2 += (int) Test0628.instanceCount;
        Test0628.instanceCount += Test0628.instanceCount;
        d = 1;
        while (++d < 298) {
            i2 = i2;
            iArr1[(int) (d + 1)] += (int) Test0628.instanceCount;
            i2 /= (int)((long)(f1) | 1);
        }
        i2 *= i2;
        iArr1[(i2 >>> 1) % N] = i2;
        iArr2[(19086 >>> 1) % N] += (int) Test0628.instanceCount;
        i10 = 1;
        while (++i10 < 322) {
            for (i11 = i10; 5 > i11; ++i11) {
                iArr2[i10 + 1] *= i10;
                i2 >>= i10;
                sArr[i11] = (short)i12;
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth(int i1) {

        int i13=2;
        int i14=0;
        int i15=92;
        int i16=-13;
        int i17=3;
        int[][] iArr3 =new int[N][N];
        byte by=-93;

        FuzzerUtils.init(iArr3, -8235);

        i1 *= (int) ((i1++) + ((long) (-1.378F * Test0628.instanceCount) ^ (Test0628.instanceCount * i1)));
        vMeth(i1);
        switch (((116 >>> 1) % 4) + 96) {
        case 96:
            for (i13 = 2; i13 < 223; i13++) {
                i14 += (((i13 * i14) + i14) - i13);
            }
            for (i15 = 9; 229 > i15; i15++) {
                i1 += i15;
                i14 += i15;
                i17 = 1;
                do {
                    iArr3[i17 + 1][i17 + 1] += (int) Test0628.fFld;
                    i16 = i13;
                    switch (((i16 >>> 1) % 6) + 46) {
                    case 46:
                        try {
                            iArr3[i15 + 1][i15] = (i14 / -24577);
                            i1 = (1326127693 / i16);
                            i16 = (i13 / -76);
                        } catch (ArithmeticException a_e) {}
                        i14 += (((i17 * i1) + i14) - i15);
                        break;
                    case 47:
                        Test0628.instanceCount <<= -105L;
                        break;
                    case 48:
                        i14 -= (int) Test0628.fFld;
                        break;
                    case 49:
                        i16 = -166;
                        break;
                    case 50:
                        Test0628.instanceCount += (i17 + i13);
                        break;
                    case 51:
                        i16 += (-6335 + (i17 * i17));
                        break;
                    }
                } while (++i17 < 7);
            }
            break;
        case 97:
            Test0628.instanceCount = Test0628.instanceCount;
            break;
        case 98:
            by += (byte)-37;
            break;
        case 99:
            i1 = i16;
            break;
        default:
            i14 >>= -77;
        }
        long meth_res = i1 + i13 + i14 + i15 + i16 + i17 + by + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-13, i18=45640, i19=152, i20=-58154, i21=-7, i22=13, i23=-50, i24=0, i25=60, i26=25642, i27=-61180,
            i28=11;
        float f2=-2.377F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 4360357330644137963L);

        i /= (int)((i--) | 1);
        i <<= (iMeth(i) - i);
        i -= (int)1.131041;
        i -= (int) Test0628.instanceCount;
        Test0628.fFld *= -170;
        i18 = 1;
        while (++i18 < 295) {
            Test0628.iArrFld[i18 - 1] = i18;
            for (i19 = 2; i19 < 85; i19 += 2) {
                for (f2 = 1; 3 > f2; f2++) {
                    Test0628.dFld *= Test0628.dFld;
                    lArr1[i19 + 1] *= Test0628.instanceCount;
                    Test0628.instanceCount = byFld;
                    i = (int) Test0628.fFld;
                }
                i21 = i;
                Test0628.iArrFld[i18] &= i19;
            }
            for (i22 = 2; 85 > i22; i22 += 2) {
                if (true) break;
            }
        }
        byFld *= (byte) Test0628.dFld;
        byFld += (byte)i18;
        i20 = i18;
        i23 -= i;
        for (i24 = 177; i24 > 6; --i24) {
            i26 = 1;
            while (++i26 < 147) {
                Test0628.fFld = i22;
                switch ((i26 % 8) + 1) {
                case 1:
                    i23 = i21;
                    break;
                case 2:
                    lArr1[i26 - 1] -= i20;
                    for (i27 = 1; i27 < 1; i27 += 2) {
                        i28 += (i27 ^ i27);
                        try {
                            i = (23509 / Test0628.iArrFld[i26 - 1]);
                            i = (i19 % i26);
                            Test0628.iArrFld[i24] = (Test0628.iArrFld[i26 + 1] % 251);
                        } catch (ArithmeticException a_e) {}
                    }
                    break;
                case 3:
                    i25 >>= Test0628.sFld;
                case 4:
                case 5:
                    i20 = (int)-112L;
                case 6:
                    Test0628.iArrFld[i24 - 1] >>= i20;
                    break;
                case 7:
                    Test0628.iArrFld[i26] >>= (int) Test0628.instanceCount;
                    break;
                case 8:
                    i23 = i24;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 f2 i21 = " + i20 + "," + Float.floatToIntBits(f2) + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 lArr1 = " + i28 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0628.instanceCount Test0628.fFld Test0628.dFld = " + Test0628.instanceCount + "," +
                Float.floatToIntBits(Test0628.fFld) + "," + Double.doubleToLongBits(Test0628.dFld));
        FuzzerUtils.out.println("byFld Test0628.sFld Test0628.iArrFld = " + byFld + "," + Test0628.sFld + "," +
                FuzzerUtils.checkSum(Test0628.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0628 _instance = new Test0628();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
