// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0511 {

    public static final int N = 400;

    public static volatile long instanceCount=7426137612604951001L;
    public static volatile double dFld=0.80203;
    public static float fFld=2.678F;
    public static volatile byte byFld=124;
    public static boolean bFld=false;
    public short sFld=-16365;
    public short[] sArrFld =new short[N];
    public static double[] dArrFld =new double[N];
    public static int[][] iArrFld =new int[N][N];
    public static long[] lArrFld =new long[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0511.dArrFld, 0.125972);
        FuzzerUtils.init(Test0511.iArrFld, 8);
        FuzzerUtils.init(Test0511.lArrFld, 7L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f2, long l1) {

        int i6=19459, i7=104, i8=3, i9=6, i10=111;
        byte by=78;

        for (i6 = 10; i6 < 164; ++i6) {
            i7 -= (int)-47904L;
            switch ((((i6 >>> 1) % 1) * 5) + 96) {
            case 99:
                for (i8 = 10; i6 < i8; i8--) {
                    switch ((i6 % 1) + 123) {
                    case 123:
                        i9 += (i8 - i9);
                        l1 += (18 + (i8 * i8));
                        switch ((((i6 >>> 1) % 2) * 5) + 35) {
                        case 39:
                            i7 += (i8 | i8);
                            Test0511.dArrFld[i6 - 1] -= Test0511.dFld;
                        case 41:
                            Test0511.iArrFld[i8][i6] = (int) Test0511.instanceCount;
                            i7 -= (int)3304595530298177968L;
                            by += (byte)i10;
                            i9 += i10;
                            break;
                        }
                        Test0511.iArrFld[i8 - 1][i6 - 1] ^= i10;
                        break;
                    }
                }
                break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + l1 + i6 + i7 + i8 + i9 + by + i10;
    }

    public static void vMeth(short s, long l, int i5) {

        int i11=65533, i12=183, i13=72, i14=-42041, i15=-12;
        long l2=1347535896L;

        vMeth1(Test0511.fFld, -76L);
        i11 = 333;
        do {
            i5 >>= i5;
        } while (--i11 > 0);
        Test0511.instanceCount <<= i11;
        Test0511.dFld = i5;
        l2 = 1;
        while ((l2 += 3) < 311) {
            Test0511.lArrFld[(int) (l2 - 1)] = Test0511.byFld;
            switch ((((250 >>> 1) % 2) * 5) + 116) {
            case 119:
                for (i12 = 1; i12 < 15; ++i12) {
                    for (i14 = 1; i14 < 2; ++i14) {
                        i5 += (i14 * i14);
                        i5 = -26113;
                        i15 += (i14 - i12);
                        Test0511.dFld *= l;
                        i13 = (int)l2;
                    }
                }
            case 120:
                Test0511.iArrFld[(int) (l2 + 1)][(int) (l2 - 1)] = s;
            }
        }
        vMeth_check_sum += s + l + i5 + i11 + l2 + i12 + i13 + i14 + i15;
    }

    public static int iMeth(int i2, int i3, int i4) {

        short s1=-26382;
        int i16=-161;
        int i17=57940;
        int i19=11;
        int[] iArr1 =new int[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)41);
        FuzzerUtils.init(iArr1, -136);

        vMeth(s1, Test0511.instanceCount, i3);
        Test0511.fFld += Test0511.fFld;
        Test0511.instanceCount -= i4;
        Test0511.iArrFld[(1 >>> 1) % N][(i3 >>> 1) % N] = (int) Test0511.instanceCount;
        switch (((-202 >>> 1) % 2) + 97) {
        case 97:
            Test0511.bFld = Test0511.bFld;
            for (i16 = 5; 205 > i16; i16++) {
                Test0511.fFld = (float) Test0511.dFld;
                Test0511.instanceCount -= i4;
                byArr[i16] <<= (byte)i2;
                switch ((((127 >>> 1) % 1) * 5) + 45) {
                case 46:
                    Test0511.byFld += (byte) (((i16 * i16) + i16) - i17);
                    break;
                default:
                    i4 += (i16 * i16);
                    i3 += i16;
                    Test0511.instanceCount += (i16 * i16);
                }
            }
        case 98:
            Test0511.dFld *= Test0511.instanceCount;
        default:
            i19 &= i2;
        }
        long meth_res = i2 + i3 + i4 + s1 + i16 + i17 + i19 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=1;
        int i1=57815;
        int i20=135;
        int i21=-29095;
        int i22=-196;
        int i23=7173;
        int i24=8;
        int[] iArr =new int[N];
        float f=2.829F, f1=0.174F, f3=-2.748F;
        double d=111.55983;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -29);
        FuzzerUtils.init(lArr, 856419957183523784L);

        iArr[(-48739 >>> 1) % N] = Integer.reverseBytes((int) ((Test0511.instanceCount--) * Test0511.instanceCount));
        sArrFld[(i >>> 1) % N] += (short)(Integer.reverseBytes(i * -10) * iArr[(i >>> 1) % N]);
        for (f = 15; 380 > f; f++) {
            i -= (++i1);
            i = (int) ((d -= (Test0511.instanceCount - -49837)) + (iArr[(int) (f + 1)]++));
            i >>= (int) Test0511.instanceCount;
        }
        f1 += 6;
        Test0511.instanceCount <<= (lArr[(i >>> 1) % N] / ((i - iMeth(-22831, i, i1)) | 1));
        for (i20 = 12; i20 < 271; i20++) {
            i *= (int) Test0511.instanceCount;
            Test0511.instanceCount = (long) -2.45F;
            i21 *= i21;
            switch ((((i20 >>> 1) % 2) * 5) + 105) {
            case 113:
                f1 = i;
                break;
            case 107:
                i1 >>>= sFld;
                for (f3 = i20; f3 < 97; ++f3) {
                    for (i23 = 1; i23 < 1; i23++) {
                        i24 = i22;
                        fArrFld[i23] += f1;
                        i21 += 33;
                        i21 += (((i23 * i20) + i21) - i22);
                        i -= sFld;
                        Test0511.instanceCount = Test0511.instanceCount;
                        if (Test0511.bFld) break;
                    }
                    i21 += 9;
                    i = i22;
                    i += (int)f3;
                    i22 = i21;
                    i = (int) Test0511.instanceCount;
                    fArrFld[i20 - 1] = i21;
                }
                break;
            default:
                lArr = Test0511.lArrFld;
            }
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("d f1 i20 = " + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f1) + "," +
            i20);
        FuzzerUtils.out.println("i21 f3 i22 = " + i21 + "," + Float.floatToIntBits(f3) + "," + i22);
        FuzzerUtils.out.println("i23 i24 iArr = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0511.instanceCount Test0511.dFld Test0511.fFld = " + Test0511.instanceCount + "," +
                Double.doubleToLongBits(Test0511.dFld) + "," + Float.floatToIntBits(Test0511.fFld));
        FuzzerUtils.out.println("Test0511.byFld Test0511.bFld sFld = " + Test0511.byFld + "," + (Test0511.bFld ? 1 : 0) + "," + sFld);
        FuzzerUtils.out.println("sArrFld Test0511.dArrFld Test0511.iArrFld = " + FuzzerUtils.checkSum(sArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0511.dArrFld)) + "," + FuzzerUtils.checkSum(Test0511.iArrFld));
        FuzzerUtils.out.println("Test0511.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test0511.lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0511 _instance = new Test0511();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
