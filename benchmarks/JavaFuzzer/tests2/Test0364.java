// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0364 {

    public static final int N = 400;

    public static long instanceCount=-30862L;
    public static float fFld=-2.561F;
    public static volatile short sFld=8492;
    public double dFld=1.87104;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static boolean[] bArrFld =new boolean[N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0364.iArrFld, 62874);
        FuzzerUtils.init(Test0364.lArrFld, -183L);
        FuzzerUtils.init(Test0364.bArrFld, false);
        FuzzerUtils.init(Test0364.sArrFld, (short) 2933);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=0, i6=1, i7=6526, i8=-179, i9=7, i10=-30206, i11=-10478;

        for (i5 = 4; i5 < 163; i5++) {
            i6 -= 206;
            i6 += (((i5 * Test0364.fFld) + Test0364.fFld) - i5);
            i6 *= -13;
            for (i7 = 10; i7 > i5; i7 -= 3) {
                i9 = 1;
                do {
                    Test0364.instanceCount *= (long) Test0364.fFld;
                } while (++i9 < 1);
                i6 = 63385;
                for (i10 = 1; i10 < 1; ++i10) {
                    i11 += (((i10 * i5) + i5) - Test0364.fFld);
                    i6 += i10;
                    i11 += (((i10 * Test0364.instanceCount) + i11) - i10);
                    Test0364.iArrFld[i10 + 1] &= i6;
                    i6 = i8;
                    if (i8 != 0) {
                        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11;
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth(long l, int i4) {

        int i12=-139, i13=-8235, i14=127, i15=39, i16=-149, i17=19551;
        boolean b=false;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 78.96000);

        vMeth1();
        i4 = i4;
        for (i12 = 10; i12 < 175; i12++) {
            Test0364.fFld -= 1884041339L;
            if (b) continue;
            i4 -= Test0364.sFld;
        }
        for (i14 = 3; i14 < 253; i14++) {
            for (i16 = 1; i16 < 7; ++i16) {
                i17 >>= i15;
                i4 -= 4;
                i15 = 107;
                i4 = (int)l;
                i4 = (int) Test0364.fFld;
            }
            dArr[i14 - 1] -= i17;
            Test0364.iArrFld[i14 - 1] += (int) Test0364.fFld;
        }
        vMeth_check_sum += l + i4 + i12 + i13 + (b ? 1 : 0) + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public int iMeth(byte by) {

        int i=-6138, i1=-186, i2=-202, i3=197, i18=208;
        boolean b1=true;

        for (i = 2; i < 225; i++) {
            for (i2 = 1; i2 < 7; ++i2) {
                vMeth(Test0364.instanceCount, -236);
                i1 += (i2 * i1);
                Test0364.instanceCount += i2;
                i18 = 1;
                do {
                    Test0364.instanceCount += (171 + (i18 * i18));
                    Test0364.fFld += 12;
                    i3 += (((i18 * i2) + i) - Test0364.instanceCount);
                    Test0364.lArrFld[i2] <<= 71;
                    Test0364.fFld *= Test0364.fFld;
                } while (++i18 < 2);
                if (true) {
                    if (i18 != 0) {
                    }
                    by *= (byte)i1;
                } else if (b1) {
                    Test0364.bArrFld[i2 + 1] = b1;
                } else {
                    i1 ^= Test0364.sFld;
                }
            }
        }
        long meth_res = by + i + i1 + i2 + i3 + i18 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by1=69;
        int i19=-38449, i21=-185, i22=9910, i23=0, i24=-32356, i25=-6, i26=-6, i27=0;
        double d=2.66851;

        Test0364.instanceCount >>= (long) ((iMeth(by1) * dFld) + i19);
        dFld -= i19;
        i19 *= Test0364.sFld;
        for (int i20 : Test0364.iArrFld) {
            i21 = 1;
            do {
                for (i22 = 1; i22 < 1; ++i22) {
                    Test0364.instanceCount = Test0364.instanceCount;
                    Test0364.sArrFld[i21 - 1] *= (short) -18807;
                    Test0364.fFld *= i19;
                    i23 = i19;
                    i19 >>>= (int)-78L;
                    Test0364.iArrFld[i22 - 1] *= i20;
                    if (true) break;
                    i23 >>>= -26616;
                }
                i20 -= -62;
                for (i24 = 1; i24 < 1; i24++) {
                    try {
                        i19 = (68 % Test0364.iArrFld[i24]);
                        i20 = (118 / i19);
                        i19 = (i24 / -4518);
                    } catch (ArithmeticException a_e) {}
                    i20 = i25;
                    Test0364.instanceCount = i23;
                    i23 += (((i24 * i21) + by1) - Test0364.instanceCount);
                    Test0364.iArrFld[i24] *= (int) Test0364.instanceCount;
                    Test0364.instanceCount = i25;
                    i19 += i24;
                }
                Test0364.instanceCount += (long) dFld;
                for (d = i21; d < 1; d++) {
                    i25 = i24;
                    i19 = i19;
                    i27 = i22;
                    Test0364.instanceCount = (long) Test0364.fFld;
                    i23 += (int) Test0364.instanceCount;
                }
            } while (++i21 < 63);
        }

        FuzzerUtils.out.println("by1 i19 i21 = " + by1 + "," + i19 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 d i26 = " + i25 + "," + Double.doubleToLongBits(d) + "," + i26);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test0364.instanceCount Test0364.fFld Test0364.sFld = " + Test0364.instanceCount + "," +
                Float.floatToIntBits(Test0364.fFld) + "," + Test0364.sFld);
        FuzzerUtils.out.println("dFld Test0364.iArrFld Test0364.lArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0364.iArrFld) + "," + FuzzerUtils.checkSum(Test0364.lArrFld));
        FuzzerUtils.out.println("Test0364.bArrFld Test0364.sArrFld = " + FuzzerUtils.checkSum(Test0364.bArrFld) + "," +
                FuzzerUtils.checkSum(Test0364.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0364 _instance = new Test0364();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
