// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0156 {

    public static final int N = 400;

    public static long instanceCount=-25540L;
    public static float fFld=-76.893F;
    public int iFld=220;
    public static short sFld=28369;
    public long[][] lArrFld =new long[N][N];
    public static long[][] lArrFld1 =new long[N][N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0156.lArrFld1, 2743237034416631146L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1) {

        int i8=-27543;
        int i9=-34831;
        int i10=29520;
        int[] iArr1 =new int[N];
        float f1=2.632F;
        short s1=-19276;
        byte by1=-19;

        FuzzerUtils.init(iArr1, 11);

        for (i8 = 7; i8 < 159; ++i8) {
            Test0156.instanceCount += i8;
            i9 >>>= i8;
            l1 -= i9;
            i9 += (((i8 * i8) + f1) - i9);
            s1 += (short)i8;
            i10 += i8;
            try {
                i10 = (-122 % i9);
                iArr1[i8] = (i10 % 161);
                i10 = (i10 / i9);
            } catch (ArithmeticException a_e) {}
            by1 += (byte)i8;
        }
        vMeth2_check_sum += l1 + i8 + i9 + Float.floatToIntBits(f1) + s1 + i10 + by1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i4, int i5, long l) {

        int i6=-13, i7=7, i11=195, i12=39, i13=12;
        byte by2=63;
        boolean b=false;
        boolean[] bArr =new boolean[N];
        float[] fArr =new float[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(fArr, 0.920F);
        FuzzerUtils.init(sArr, (short)26596);
        FuzzerUtils.init(bArr, true);

        for (i6 = 12; 225 > i6; i6 += 2) {
            i4 += i6;
            fArr[i6 - 1] -= ((i4 * i6) - ((++i5) << (i7 <<= i6)));
            vMeth2(l);
            i5 <<= (int) Test0156.instanceCount;
            if (b) {
                Test0156.fFld += (((i6 * i7) + i6) - by2);
            } else {
                for (i11 = 1; i11 < 15; i11++) {
                    i13 = 1;
                    while (++i13 < 2) {
                        if (true) break;
                        i5 = (int)-14L;
                        sArr[i13] *= (short)i7;
                        Test0156.fFld -= i12;
                        Test0156.fFld -= 123;
                        bArr[i11] = b;
                    }
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + l + i6 + i7 + by2 + (b ? 1 : 0) + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public void vMeth(byte by) {

        int i1=-27, i2=-251, i3=-71;
        short s=-21615;
        double d=-94.90680;
        double[] dArr =new double[N];
        boolean b1=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -9L);
        FuzzerUtils.init(dArr, 0.72923);

        for (i1 = 3; i1 < 272; i1++) {
            lArrFld = (lArrFld = (lArrFld = (Test0156.lArrFld1 = lArrFld)));
            Test0156.instanceCount >>= ((i2--) - ((i1 - -63314) + s));
            for (d = 6; d > 1; --d) {
                vMeth1(i3, i2, -7868092593449470927L);
                if (b1) break;
                if (b1) continue;
                i2 += (int)(127.163F + (d * d));
                i3 *= -32288;
                i2 += (int)d;
                iArrFld[i1] *= (int)d;
            }
            iArrFld = iArrFld;
            i3 += i2;
        }
        dArr = dArr;
        iFld -= i1;
        vMeth_check_sum += by + i1 + i2 + s + Double.doubleToLongBits(d) + i3 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        float f=0.422F;
        double d1=-124.10476;
        int i14=7;
        int i15=-253;
        int i16=141;
        int i17=-74;
        int i18=221;
        int i19=5839;
        int[] iArr =new int[N];
        boolean b2=true;

        FuzzerUtils.init(iArr, 62462);

        for (int i : iArr) {
            Test0156.instanceCount &= (long) ((--Test0156.instanceCount) * ((--i) - (f - 82L)));
            vMeth((byte)(-120));
            d1 /= (Test0156.instanceCount | 1);
            i = (int) Test0156.instanceCount;
        }
        for (i14 = 8; i14 < 200; ++i14) {
            d1 -= Test0156.instanceCount;
            if (false) break;
            i16 = 1;
            while (++i16 < 131) {
                Test0156.fFld = Test0156.instanceCount;
                for (i17 = i14; i17 < 1; i17++) {
                    i15 = (int) Test0156.instanceCount;
                    iArrFld[i17] += i18;
                    d1 -= -5;
                    switch ((i17 % 1) + 50) {
                    case 50:
                        Test0156.instanceCount = i15;
                        i15 += (i17 | iFld);
                        break;
                    default:
                        i18 += i17;
                        Test0156.instanceCount += (i17 - Test0156.instanceCount);
                        iFld -= Test0156.sFld;
                        i15 &= Test0156.sFld;
                    }
                    iFld += (i17 * i15);
                    i18 *= (int)f;
                }
                Test0156.fFld += (-22692 + (i16 * i16));
                f *= Test0156.instanceCount;
                i15 += (11 + (i16 * i16));
                i19 = 1;
                do {
                    b2 = b2;
                    if (b2) continue;
                    i18 = (int) Test0156.instanceCount;
                } while (++i19 < 1);
            }
        }

        FuzzerUtils.out.println("f d1 i14 = " + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d1) + "," +
            i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 b2 = " + i18 + "," + i19 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0156.instanceCount Test0156.fFld iFld = " + Test0156.instanceCount + "," +
                Float.floatToIntBits(Test0156.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test0156.sFld lArrFld Test0156.lArrFld1 = " + Test0156.sFld + "," + FuzzerUtils.checkSum(lArrFld)
                + "," + FuzzerUtils.checkSum(Test0156.lArrFld1));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0156 _instance = new Test0156();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
