// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0529 {

    public static final int N = 400;

    public static long instanceCount=11L;
    public static double dFld=-116.12548;
    public static short sFld=-23231;
    public static int iFld=-6;
    public static byte byFld=-103;
    public static float fFld=-127.324F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0529.iArrFld, 20015);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(float f1, long l) {

        int i8=38656, i9=-62824, i10=-7, i11=-11, i12=0, i13=3;
        double d=-1.67810;
        boolean b=true;

        i8 &= i8;
        for (i9 = 3; i9 < 159; i9++) {
            i8 = (int)l;
            l -= i10;
            for (d = i9; 10 > d; ++d) {
                switch ((int)(((d % 9) * 5) + 36)) {
                case 69:
                    l *= l;
                    break;
                case 79:
                    for (i12 = i9; i12 < 1; i12++) {
                        b = b;
                        Test0529.iArrFld[i12 + 1] = (int) 14L;
                        i13 += (int)l;
                        i11 -= i10;
                        l = 3210392138625292784L;
                        i11 = i9;
                        i8 = 200;
                    }
                case 80:
                    Test0529.iArrFld[i9 - 1] = i9;
                    break;
                case 73:
                    i10 *= i11;
                    break;
                case 61:
                    i10 += i11;
                    break;
                case 51:
                    Test0529.instanceCount += (long) d;
                    break;
                case 70:
                    if (b) continue;
                    break;
                case 57:
                    Test0529.instanceCount += (long) (d - i8);
                    break;
                case 78:
                    Test0529.instanceCount -= (long) d;
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i8 + i9 + i10 + Double.doubleToLongBits(d) + i11 + i12 + i13 +
            (b ? 1 : 0);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static long lMeth(int i4, int i5) {

        int i6=-9, i7=11, i14=60, i15=-11;
        float f2=0.429F;
        boolean b1=false;

        for (i6 = 5; i6 < 308; i6++) {
            i5 <<= (int) (Test0529.instanceCount - (byMeth(f2, Test0529.instanceCount) + i4));
            Test0529.dFld = f2;
            for (i14 = 5; i14 > 1; i14--) {
                byte by=-73;
                Test0529.sFld -= (short) Test0529.instanceCount;
                i4 -= 2;
                Test0529.instanceCount >>= 49429;
                switch ((i14 % 7) + 96) {
                case 96:
                    i4 += (((i14 * i6) + Test0529.instanceCount) - i15);
                    i15 <<= i4;
                    switch (((i7 >>> 1) % 6) + 1) {
                    case 1:
                        Test0529.instanceCount = 206;
                        i4 += (i14 ^ Test0529.instanceCount);
                        Test0529.iArrFld = Test0529.iArrFld;
                        if (b1) continue;
                    case 2:
                        Test0529.iArrFld[i6] = -9;
                        break;
                    case 3:
                        i4 = (int) Test0529.instanceCount;
                        break;
                    case 4:
                        Test0529.instanceCount = by;
                        break;
                    case 5:
                        Test0529.instanceCount = i7;
                        break;
                    case 6:
                        i7 += (((i14 * i7) + i6) - Test0529.instanceCount);
                    }
                    break;
                case 97:
                    i5 += Test0529.sFld;
                case 98:
                case 99:
                    Test0529.instanceCount -= i14;
                    break;
                case 100:
                case 101:
                case 102:
                    i7 >>= i15;
                default:
                    Test0529.iArrFld = Test0529.iArrFld;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + i14 + i15 + (b1 ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i3, float f) {

        int i16=4, i17=-8, i18=155, i19=18910, i20=19180, i21=9, i22=-5788;
        double d1=-2.107273;
        boolean b2=true;
        long l1=-5L;
        long[] lArr =new long[N];
        short s=27108;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -7.382F);
        FuzzerUtils.init(lArr, -1L);

        Test0529.instanceCount += ((--Test0529.iArrFld[(i3 >>> 1) % N]) - (i3 + (Test0529.instanceCount--)));
        Test0529.iArrFld[(i3 >>> 1) % N] -= (int) ((lMeth(i3, i3) + 23) - 10L);
        for (i16 = 5; i16 < 164; i16++) {
            i3 = 91;
            for (i18 = 1; i18 < 10; ++i18) {
                for (d1 = i16; d1 < 2; d1++) {
                    i17 >>= i19;
                    try {
                        i20 = (i18 / 40392);
                        i17 = (i20 % 232);
                        i17 = (i16 / 197);
                    } catch (ArithmeticException a_e) {}
                    Test0529.instanceCount = i18;
                    switch (i16 + 64) {
                    case 64:
                        f += (float)d1;
                        fArr[(i20 >>> 1) % N] -= Test0529.instanceCount;
                        i3 += (int)(((d1 * i16) + i18) - i17);
                        i20 += (int)d1;
                        break;
                    case 65:
                        lArr = lArr;
                        break;
                    case 66:
                        i17 = (int)f;
                        break;
                    case 67:
                        Test0529.instanceCount = i16;
                        break;
                    case 68:
                    case 69:
                        if (b2) continue;
                        break;
                    case 70:
                        fArr[i18 - 1] %= (i3 | 1);
                        break;
                    case 71:
                        f += (float)(((d1 * f) + f) - i3);
                    case 72:
                        Test0529.iArrFld[i16 - 1] = (int) l1;
                    case 73:
                        i3 <<= i18;
                        break;
                    case 74:
                        i20 += (int)(((d1 * f) + i17) - f);
                        break;
                    case 75:
                        fArr[i18] %= (i20 | 1);
                        break;
                    case 76:
                    case 77:
                        i17 = Test0529.iFld;
                    case 78:
                        Test0529.iArrFld[i18] *= i19;
                        break;
                    case 79:
                        lArr[i18 - 1] >>>= i18;
                    case 80:
                        i19 += (int) ((long) d1 ^ Test0529.iFld);
                        break;
                    case 81:
                        Test0529.iFld = i3;
                        break;
                    case 82:
                        i19 *= i20;
                        break;
                    case 83:
                        Test0529.instanceCount = -105;
                        break;
                    case 84:
                        i3 += (int)l1;
                    case 85:
                        Test0529.instanceCount <<= -212L;
                        break;
                    case 86:
                        Test0529.iArrFld[i18 + 1] += (int) Test0529.instanceCount;
                        break;
                    case 87:
                        Test0529.sFld += (short) (d1 * Test0529.sFld);
                    case 88:
                        Test0529.iArrFld[i18] += i18;
                        break;
                    case 89:
                        f = Test0529.instanceCount;
                        break;
                    case 90:
                        Test0529.iArrFld[(int) (d1 + 1)] = Test0529.sFld;
                    case 91:
                        Test0529.iArrFld = Test0529.iArrFld;
                        break;
                    case 92:
                        f = Test0529.iFld;
                        break;
                    case 93:
                        Test0529.instanceCount += (long) (((d1 * Test0529.iFld) + i16) - i21);
                        break;
                    case 94:
                        Test0529.sFld += (short) (((d1 * f) + i19) - l1);
                        break;
                    case 95:
                        Test0529.iArrFld[(int) (d1 + 1)] = Test0529.byFld;
                        break;
                    case 96:
                        if (b2) continue;
                        break;
                    case 97:
                        i3 += (int)d1;
                        break;
                    case 98:
                        i21 = -13880;
                        break;
                    case 99:
                        Test0529.instanceCount = Test0529.instanceCount;
                        break;
                    case 100:
                        f = f;
                    case 101:
                        l1 += i3;
                    case 102:
                        i20 >>>= i17;
                        break;
                    case 103:
                        i3 = Test0529.iFld;
                        break;
                    case 104:
                        i17 = i3;
                        break;
                    case 105:
                        lArr[i16 - 1] = i21;
                        break;
                    case 106:
                        fArr[(i19 >>> 1) % N] = i16;
                    case 107:
                        Test0529.dFld = i3;
                        break;
                    case 108:
                        f = 88.893F;
                        break;
                    case 109:
                        i20 = (int)d1;
                    case 110:
                    case 111:
                        i20 >>= i16;
                        break;
                    case 112:
                        i20 += i16;
                        break;
                    case 113:
                        i17 = s;
                        break;
                    case 114:
                    case 115:
                        Test0529.iFld -= (int) f;
                        break;
                    case 116:
                    case 117:
                        Test0529.sFld += (short) ((long) d1 | i16);
                        break;
                    case 118:
                        if (b2) continue;
                        break;
                    case 119:
                        i20 += (-137 + (d1 * d1));
                        break;
                    case 120:
                        f = i17;
                        break;
                    case 121:
                        l1 -= Test0529.instanceCount;
                        break;
                    case 122:
                        i20 = (int)l1;
                        break;
                    case 123:
                        i3 >>= i18;
                        break;
                    case 124:
                        Test0529.instanceCount -= s;
                    case 125:
                        i3 *= (int)1.125714;
                        break;
                    case 126:
                        try {
                            i19 = (i3 % i18);
                            i22 = (-64174 / Test0529.iArrFld[(int) (d1 - 1)]);
                            i3 = (Test0529.iArrFld[i16 + 1] % i21);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 127:
                        i19 += (int)d1;
                    case 128:
                        i17 = i19;
                    case 129:
                        i3 >>>= s;
                    case 130:
                        l1 = i3;
                    case 131:
                        i21 -= i21;
                        break;
                    case 132:
                        lArr = lArr;
                        break;
                    case 133:
                        i20 <<= (int) Test0529.instanceCount;
                        break;
                    default:
                        if (b2) continue;
                    }
                }
            }
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + i16 + i17 + i18 + i19 + Double.doubleToLongBits(d1) + i20 +
            (b2 ? 1 : 0) + l1 + i21 + s + i22 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=45354, i1=-74, i2=5872, i23=-56886, i24=-11;
        boolean b3=false;

        i = 1;
        do {
            for (i1 = 3; i1 < 82; i1++) {
                i2 |= (i2--);
                vMeth(i2, Test0529.fFld);
                Test0529.dFld = -2;
                Test0529.iFld += (((i1 * Test0529.sFld) + i2) - i1);
                switch ((((Test0529.iFld >>> 1) % 8) * 5) + 102) {
                case 131:
                    Test0529.fFld += i1;
                    break;
                case 139:
                    Test0529.instanceCount = Test0529.instanceCount;
                    i2 += (int)(0.432F + (i1 * i1));
                    break;
                case 121:
                    Test0529.fFld -= i2;
                    i23 = 1;
                    while (++i23 < 2) {
                        Test0529.iFld += (int) Test0529.instanceCount;
                        Test0529.iFld -= (int) Test0529.instanceCount;
                        Test0529.iArrFld[i1] = i1;
                        Test0529.iFld -= (int) 4L;
                        Test0529.instanceCount = i;
                        i2 += i23;
                        Test0529.iFld = (int) Test0529.instanceCount;
                        Test0529.iFld += (((i23 * i) + i1) - i1);
                        Test0529.instanceCount >>= Test0529.iFld;
                    }
                    Test0529.iFld >>= (int) -13475L;
                    break;
                case 108:
                case 117:
                    Test0529.iFld = (int) -1315539522L;
                    Test0529.fFld = i2;
                    Test0529.instanceCount &= Test0529.iFld;
                    break;
                case 128:
                    i24 = 1;
                    while ((i24 += 3) < 2) {
                        i2 = 2;
                        Test0529.instanceCount = Test0529.instanceCount;
                        Test0529.iFld = (int) Test0529.instanceCount;
                        i2 -= i;
                    }
                    break;
                case 111:
                    i2 += (int) Test0529.instanceCount;
                    break;
                case 106:
                    Test0529.iFld += Test0529.iFld;
                    break;
                default:
                    b3 = false;
                }
            }
        } while (++i < 306);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i23 i24 b3 = " + i23 + "," + i24 + "," + (b3 ? 1 : 0));

        FuzzerUtils.out.println("Test0529.instanceCount Test0529.dFld Test0529.sFld = " + Test0529.instanceCount + "," +
                Double.doubleToLongBits(Test0529.dFld) + "," + Test0529.sFld);
        FuzzerUtils.out.println("Test0529.iFld Test0529.byFld Test0529.fFld = " + Test0529.iFld + "," + Test0529.byFld + "," +
                Float.floatToIntBits(Test0529.fFld));
        FuzzerUtils.out.println("Test0529.iArrFld = " + FuzzerUtils.checkSum(Test0529.iArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0529 _instance = new Test0529();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  byMeth ->  byMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
