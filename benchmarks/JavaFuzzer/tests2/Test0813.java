// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0813 {

    public static final int N = 400;

    public static long instanceCount=-95513075L;
    public static boolean bFld=true;
    public static double dFld=-119.23189;
    public static volatile long[] lArrFld =new long[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0813.lArrFld, -4L);
        FuzzerUtils.init(Test0813.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i4) {

        short s=24680;
        int i5=58;
        int[] iArr1 =new int[N];
        float f2=-2.624F;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr1, -13);
        FuzzerUtils.init(fArr, -1.292F);

        s = (short)i4;
        iArr1[(i4 >>> 1) % N] += i4;
        i4 ^= i4;
        i4 += i4;
        try {
            iArr1[(i4 >>> 1) % N] = i4;
            i4 = -12;
            i4 >>= i4;
            i5 = 1;
            while (++i5 < 360) {
                fArr[i5][i5 - 1] -= -5293;
                Test0813.instanceCount += (i5 * i5);
                i4 = i5;
                i4 += i5;
                Test0813.bFld = Test0813.bFld;
                i4 = i5;
            }
        }
        catch (NegativeArraySizeException exc1) {
            i4 = i5;
        }
        finally {
            Test0813.lArrFld[(3 >>> 1) % N] *= (long) f2;
        }
        long meth_res = l1 + i4 + s + i5 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i3=7;
        int i6=0;
        int i7=53850;
        int i8=247;
        int i9=32942;
        int[][] iArr2 =new int[N][N];
        short s1=-2680;

        FuzzerUtils.init(iArr2, -13);

        i3 = 1;
        do {
            if (i3 != 0) {
                vMeth1_check_sum += i3 + i6 + i7 + i8 + i9 + s1 + FuzzerUtils.checkSum(iArr2);
                return;
            }
            iMeth(Test0813.instanceCount, i3);
            for (i6 = 1; i6 < 5; i6++) {
                if (false) continue;
                i7 *= 125;
                i7 += (int) Test0813.instanceCount;
                i7 = i3;
                iArr2[i6][i6 + 1] -= i3;
                for (i8 = 2; i8 > 1; i8--) {
                    i7 %= (int) (Test0813.instanceCount | 1);
                    i7 += i8;
                    iArr2[i6 + 1][i6 - 1] *= i8;
                    if (Test0813.bFld) break;
                    Test0813.instanceCount *= s1;
                }
            }
        } while (++i3 < 374);
        vMeth1_check_sum += i3 + i6 + i7 + i8 + i9 + s1 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i1, int i2) {

        int i10=0, i11=-47335, i12=160;
        short s2=-27300;
        float[] fArr1 =new float[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(fArr1, 71.801F);
        FuzzerUtils.init(dArr, 1.69734);

        vMeth1();
        i10 = 1;
        while ((i10 += 2) < 287) {
            Test0813.instanceCount >>= -26;
        }
        Test0813.bArrFld[(i10 >>> 1) % N] = Test0813.bFld;
        for (i11 = 2; 127 > i11; i11++) {
            switch ((i11 % 1) + 114) {
            case 114:
                i12 += (int) Test0813.dFld;
                if (true) {
                    Test0813.instanceCount = -15;
                    i1 += (i11 ^ i11);
                    i1 += i2;
                    fArr1[i11] = i1;
                } else if (Test0813.bFld) {
                    if (Test0813.bFld) break;
                    Test0813.instanceCount += (((i11 * s2) + i12) - i12);
                    dArr[i11 - 1] -= -11;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i10 + i11 + i12 + s2 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        float f=26.1002F, f1=-75.433F, f3=34.684F;
        int i=-145;
        int i13=0;
        int i14=-89;
        int i15=-43;
        int i16=8;
        int i17=110;
        int i18=-8;
        int i19=34925;
        int[] iArr =new int[N];
        short s3=28378;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(iArr, 3);

        for (long l : lArr) {
            for (f = 2; f < 63; f++) {
                iArr[(int)(f - 1)] *= (int)f;
                f1 -= (--lArr[(int)(f + 1)]);
                if (Test0813.bFld) {
                    if (Test0813.bFld | Test0813.bFld) continue;
                } else if (Test0813.bFld) {
                    vMeth(105, i);
                    i *= (int)l;
                    for (i13 = 1; i13 < 2; i13++) {
                        i >>= i14;
                        f1 -= 220;
                        iArr[(int)(f + 1)] -= i13;
                        i = -25608;
                    }
                    for (i15 = 2; i15 > 1; i15 -= 2) {
                        i = (int)l;
                        f1 += (((i15 * Test0813.instanceCount) + i13) - l);
                        i16 += (int) Test0813.instanceCount;
                    }
                }
                for (i17 = (int)(f); i17 < 2; i17++) {
                    iArr[i17 + 1] <<= i13;
                    if (Test0813.bFld) break;
                    Test0813.dFld = 52;
                    i18 *= i17;
                    f1 += (((i17 * i14) + i17) - i14);
                    f1 = Test0813.instanceCount;
                    Test0813.lArrFld[i17] &= Test0813.instanceCount;
                    i16 %= (int) ((long) (Test0813.dFld) | 1);
                }
                f1 *= (float) Test0813.dFld;
            }
        }
        for (f3 = 16; 349 > f3; f3++) {
            f1 = i16;
            s3 -= (short)i18;
        }

        FuzzerUtils.out.println("f i f1 = " + Float.floatToIntBits(f) + "," + i + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("f3 i19 s3 = " + Float.floatToIntBits(f3) + "," + i19 + "," + s3);
        FuzzerUtils.out.println("lArr iArr = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0813.instanceCount Test0813.bFld Test0813.dFld = " + Test0813.instanceCount + "," + (Test0813.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(Test0813.dFld));
        FuzzerUtils.out.println("Test0813.lArrFld Test0813.bArrFld = " + FuzzerUtils.checkSum(Test0813.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0813.bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0813 _instance = new Test0813();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
