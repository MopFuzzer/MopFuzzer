// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0159 {

    public static final int N = 400;

    public static long instanceCount=4L;
    public int iFld=-14;
    public short sFld=-29862;
    public static float fFld=-1.948F;
    public double dFld=-52.47095;
    public int iFld1=-14;
    public static volatile byte byFld=114;
    public int[][] iArrFld =new int[N][N];
    public float[] fArrFld =new float[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static int iMeth(float f, int i2, int i3) {

        double d=2.124426;

        i3 += (int)(--d);
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + Double.doubleToLongBits(d);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i5=-67;
        int i6=-121;
        int i7=-103;
        int i8=-65;
        int i9=-10147;
        int i10=-12;
        int[] iArr =new int[N];
        boolean b1=true;
        double d1=4.77317;
        float[][] fArr =new float[N][N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -53);
        FuzzerUtils.init(fArr, 0.694F);
        FuzzerUtils.init(lArr, 5068829005997911475L);

        for (i5 = 15; i5 < 351; i5++) {
            long l2=-186L;
            b1 = b1;
            i6 += (int) Test0159.instanceCount;
            i6 = i6;
            switch ((i5 % 8) + 99) {
            case 99:
                switch (((i5 % 10) * 5) + 45) {
                case 80:
                    for (i7 = 1; i7 < 5; ++i7) {
                        i8 = i7;
                        iArr[i5] |= (int) Test0159.instanceCount;
                        if (b1) continue;
                        for (i9 = 1; i9 < 2; i9++) {
                            i6 = (int) Test0159.fFld;
                            fArr[i5 - 1][i5 + 1] = Test0159.instanceCount;
                            b1 = false;
                        }
                        if (true) break;
                    }
                    break;
                case 52:
                    i6 += (((i5 * Test0159.instanceCount) + i5) - i10);
                case 58:
                case 68:
                    i8 += i5;
                    break;
                case 47:
                    iArr[i5] -= (int) Test0159.fFld;
                    break;
                case 55:
                    i10 = i8;
                    break;
                case 78:
                    lArr[i5 - 1] += Test0159.instanceCount;
                    break;
                case 57:
                case 64:
                    i6 += i5;
                case 94:
                    try {
                        i8 = (i10 % 48853);
                        i8 = (i5 / -163);
                        iArr[i5] = (iArr[i5 + 1] / i5);
                    } catch (ArithmeticException a_e) {}
                default:
                    lArr[i5] = Test0159.instanceCount;
                }
                break;
            case 100:
                Test0159.fFld += (float) d1;
                break;
            case 101:
            case 102:
                l2 = 6;
                break;
            case 103:
            case 104:
                if (b1) continue;
                break;
            case 105:
                Test0159.instanceCount = i6;
            case 106:
                i8 += -61;
                break;
            default:
                iArr[i5 + 1] = i5;
            }
        }
        vMeth1_check_sum += i5 + i6 + (b1 ? 1 : 0) + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth1(boolean b) {

        int i4=-212;
        int[] iArr1 =new int[N];
        short s=25628;
        byte by=56;
        double d2=12.87313;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 0.338F);
        FuzzerUtils.init(iArr1, 6);

        Test0159.instanceCount -= (Test0159.instanceCount + (i4--));
        vMeth1();
        i4 -= -5;
        if (false) {
            fArr1[(0 >>> 1) % N] *= Test0159.instanceCount;
            Test0159.instanceCount = -147;
            for (int i11 : iArr1) {
                try {
                    i4 = (i4 / i4);
                    iArr1[(i11 >>> 1) % N] = (iArr1[(i4 >>> 1) % N] / iArr1[(i4 >>> 1) % N]);
                    iArr1[(-249 >>> 1) % N] = (-49268 % i4);
                } catch (ArithmeticException a_e) {}
                i4 = i11;
                Test0159.fFld += Test0159.fFld;
                i4 = i11;
                Test0159.instanceCount &= i4;
                b = b;
                Test0159.fFld += Test0159.instanceCount;
            }
            s += (short)76.972F;
        } else if (true) {
            by *= (byte)i4;
        } else if (b) {
            i4 += i4;
        } else {
            i4 = (int)d2;
        }
        long meth_res = (b ? 1 : 0) + i4 + s + by + Double.doubleToLongBits(d2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(long l, long l1) {

        float f1=0.606F;
        float[] fArr2 =new float[N];
        boolean b2=true;
        int i12=-27708;
        int i13=-3;
        int i14=-1;
        int i15=13;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(fArr2, -1.200F);
        FuzzerUtils.init(iArr2, -12022);

        iFld -= Math.abs(iMeth(f1, iFld, iMeth1(b2)));
        i12 = 1;
        do {
            iFld = (int)l;
            i13 = 6;
            while (--i13 > 0) {
                for (i14 = 1; i14 < 1; ++i14) {
                    fArr2 = FuzzerUtils.float1array(N, (float)12.402F);
                    b2 = b2;
                    dFld = dFld;
                    i15 += (int) Test0159.fFld;
                    switch ((((167 >>> 1) % 1) * 5) + 49) {
                    case 53:
                        iFld = i12;
                        sFld += (short)l1;
                        l |= i15;
                        i15 = (int)dFld;
                        break;
                    default:
                        try {
                            iFld = (i15 / iArr2[i13 - 1]);
                            iFld = (i12 % i14);
                            iFld = (iArr2[i13 - 1] / iFld);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        } while (++i12 < 261);
        vMeth_check_sum += l + l1 + Float.floatToIntBits(f1) + (b2 ? 1 : 0) + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=21470;
        int i1=-82;
        int i16=58883;
        int i17=-57;
        int i18=-146;
        int[] iArr3 =new int[N];
        boolean b3=true;

        FuzzerUtils.init(iArr3, 4);

        iFld = (int) (((Test0159.instanceCount = iFld) * sFld) - ((iFld--) + (--iFld)));
        for (i = 1; i < 285; ++i) {
            if (b3) {
                iFld = (iMeth(Float.intBitsToFloat(i), i1, (int) (Test0159.instanceCount + i)) + Integer.reverseBytes(iFld));
                vMeth(Test0159.instanceCount, Test0159.instanceCount);
            }
            iFld1 += i1;
            for (i16 = i; 89 > i16; i16++) {
                i18 = 1;
                do {
                    Test0159.fFld *= Test0159.byFld;
                    switch ((((6672 >>> 1) % 2) * 5) + 47) {
                    case 56:
                        Test0159.instanceCount = Test0159.instanceCount;
                        switch (((i18 % 6) * 5) + 102) {
                        case 114:
                            iArr3[i - 1] = iFld;
                        case 120:
                            Test0159.instanceCount |= sFld;
                            break;
                        case 111:
                            Test0159.instanceCount = i17;
                            break;
                        case 122:
                            iArr3[i16 + 1] -= i16;
                            iFld = (int) Test0159.fFld;
                            switch (((iFld1 >>> 1) % 4) + 111) {
                            case 111:
                                iFld >>>= iFld;
                                Test0159.instanceCount *= (long) Test0159.fFld;
                                iArrFld = iArrFld;
                                break;
                            case 112:
                                sFld = (short)i16;
                            case 113:
                                i17 -= (int) Test0159.instanceCount;
                                break;
                            case 114:
                                iFld ^= (int) Test0159.instanceCount;
                                i1 = i16;
                                break;
                            }
                            dFld += i17;
                            break;
                        case 113:
                            Test0159.instanceCount = i16;
                            Test0159.fFld += i;
                            break;
                        case 126:
                            i1 = i;
                            iFld1 *= (int)dFld;
                            break;
                        default:
                            i17 *= (int)dFld;
                        }
                        break;
                    case 49:
                        fArrFld[i] -= -126;
                        break;
                    }
                } while (++i18 < 1);
            }
        }

        FuzzerUtils.out.println("i i1 b3 = " + i + "," + i1 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0159.instanceCount iFld sFld = " + Test0159.instanceCount + "," + iFld + "," + sFld);
        FuzzerUtils.out.println("Test0159.fFld dFld iFld1 = " + Float.floatToIntBits(Test0159.fFld) + "," +
            Double.doubleToLongBits(dFld) + "," + iFld1);
        FuzzerUtils.out.println("Test0159.byFld iArrFld fArrFld = " + Test0159.byFld + "," + FuzzerUtils.checkSum(iArrFld) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0159 _instance = new Test0159();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest vMeth
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
