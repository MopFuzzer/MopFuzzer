// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0595 {

    public static final int N = 400;

    public static long instanceCount=-3723520006L;
    public static boolean bFld=true;
    public static int iFld=13;
    public static float fFld=11.294F;
    public static byte byFld=-90;
    public static double dFld=-2.27997;
    public static byte[] byArrFld =new byte[N];
    public long[] lArrFld =new long[N];
    public short[] sArrFld =new short[N];
    public static int[][] iArrFld =new int[N][N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0595.byArrFld, (byte) 65);
        FuzzerUtils.init(Test0595.iArrFld, -34333);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth(int i2) {


        Test0595.instanceCount <<= (long) (-69.53F - ((Test0595.instanceCount--) * (++Test0595.iFld)));
        vMeth_check_sum += i2;
    }

    public static int iMeth1(int i9, int i10) {

        float f1=94.660F;
        byte by1=-126;
        double d3=-1.118401;
        int i11=9, i12=-5;
        short s1=10057;

        i9 = (int)f1;
        by1 = (byte)203;
        Test0595.instanceCount = -1334483851L;
        d3 -= Test0595.iFld;
        Test0595.instanceCount &= i9;
        Test0595.iArrFld[(i10 >>> 1) % N][(i9 >>> 1) % N] >>= i9;
        Test0595.iFld = (int) Test0595.instanceCount;
        i9 *= i11;
        f1 %= (float)-2.99059;
        i12 = 1;
        while (++i12 < 283) {
            Test0595.iFld ^= i11;
            Test0595.instanceCount <<= i12;
            if (Test0595.bFld) {
                s1 = (short)-217;
                Test0595.bFld = Test0595.bFld;
            }
        }
        long meth_res = i9 + i10 + Float.floatToIntBits(f1) + by1 + Double.doubleToLongBits(d3) + i11 + i12 + s1;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i3, int i4) {

        byte by=117;
        int i5=-139, i6=-133, i7=6, i8=-28927;
        double d1=0.5795, d2=7.15497;
        float f=-42.296F;
        float[] fArr =new float[N];
        short s2=-20493;

        FuzzerUtils.init(fArr, 0.837F);

        i4 = (Test0595.byArrFld[(i3 >>> 1) % N] >>= by);
        Test0595.instanceCount ^= (++i4);
        for (i5 = 7; 189 > i5; ++i5) {
            d1 *= 94;
            for (f = i5; f < 9; ++f) {
                switch ((((Test0595.iFld >>> 1) % 5) * 5) + 86) {
                case 87:
                case 96:
                    switch ((((-152 - (i4 - -10)) >>> 1) % 3) + 73) {
                    case 73:
                        for (d2 = f; 1 > d2; d2++) {
                            Test0595.iFld -= (int) (Test0595.instanceCount <<= Test0595.instanceCount);
                            lArrFld[(int) (d2)] -= (long) (((Test0595.instanceCount--) + i6) + (Test0595.instanceCount + d2));
                            sArrFld[(int)(d2 + 1)] = (short)(iMeth1(i7, i5) * i7);
                            i8 >>= i5;
                            Test0595.instanceCount *= i4;
                        }
                        if (i7 != 0) {
                        }
                        Test0595.iArrFld[(int) (f)] = Test0595.iArrFld[(int) (f)];
                        break;
                    case 74:
                        Test0595.iArrFld[(int) (f - 1)][i5 - 1] += (int) Test0595.instanceCount;
                        break;
                    case 75:
                        if (Test0595.bFld) break;
                        break;
                    default:
                        fArr = fArr;
                    }
                case 99:
                    i7 = i3;
                    break;
                case 88:
                    Test0595.iFld |= i7;
                    break;
                case 90:
                default:
                    s2 += (short)(f * i5);
                }
            }
        }
        long meth_res = i3 + i4 + by + i5 + i6 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i7 +
            Double.doubleToLongBits(d2) + i8 + s2 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public long lMeth(long l, short s) {

        double d=-2.26381, d4=2.114353;
        int i1=0, i13=169, i14=84, i15=216, i16=-62054;
        byte by2=-42;
        float f2=2.319F;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (d = 3; d < 331; ++d) {
            i1 = (int)((l *= (i1--)) + d);
            vMeth((int) (((Test0595.iFld - d) + Test0595.iFld) - (iMeth(Test0595.iFld, i1) - l)));
            by2 += (byte)d;
            Test0595.instanceCount = l;
        }
        Test0595.iArrFld[(i1 >>> 1) % N][(Test0595.iFld >>> 1) % N] += i1;
        for (i13 = 7; i13 < 274; i13++) {
            for (i15 = 1; 6 > i15; i15 += 2) {
                switch (((i13 % 2) * 5) + 12) {
                case 15:
                    d4 *= -3;
                    switch ((i13 % 6) + 113) {
                    case 113:
                        f2 += Test0595.instanceCount;
                        bArr[i15] = Test0595.bFld;
                    case 114:
                        i16 += (i15 - i1);
                        l *= i15;
                    case 115:
                        f2 = Test0595.iFld;
                        break;
                    case 116:
                        l >>= Test0595.instanceCount;
                        break;
                    case 117:
                        f2 += (i15 + l);
                        break;
                    case 118:
                        l += (6192858465879377926L + (i15 * i15));
                        break;
                    }
                    break;
                case 16:
                    if (Test0595.bFld) break;
                    break;
                default:
                    i16 <<= i14;
                }
            }
        }
        long meth_res = l + s + Double.doubleToLongBits(d) + i1 + by2 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(d4) + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i17=61064, i18=116, i19=-8, i20=-20504, i21=26, i22=-8;
        short s3=-18499;
        long l1=1252674735L;

        i = 1;
        do {
            if (Test0595.bFld) {
                if (Test0595.bFld = ((lMeth(Test0595.instanceCount, s3) - Test0595.iFld) <= Test0595.iFld)) break;
            } else if (Test0595.bFld) {
                for (i17 = 69; 1 < i17; i17--) {
                    Test0595.iFld >>= (int) Test0595.instanceCount;
                    Test0595.iFld += (int) 54665L;
                    Test0595.instanceCount <<= Test0595.iFld;
                    Test0595.fFld += i17;
                    for (i19 = 2; i19 > 1; --i19) {
                        i20 -= Test0595.byFld;
                        i18 = i20;
                        Test0595.instanceCount += (((i19 * Test0595.fFld) + i17) - Test0595.instanceCount);
                        lArrFld[i] ^= Test0595.iFld;
                        i18 = (int)4084260219L;
                        switch ((i % 2) + 31) {
                        case 31:
                            sArrFld[i + 1] += (short) Test0595.instanceCount;
                            l1 = Test0595.instanceCount;
                            Test0595.iArrFld[i][i19] = i17;
                        case 32:
                            Test0595.instanceCount += l1;
                            i18 -= i;
                            Test0595.byFld -= (byte) Test0595.instanceCount;
                            break;
                        default:
                        }
                        i20 += i19;
                    }
                    i18 = (int) Test0595.fFld;
                    Test0595.fFld = s3;
                    Test0595.fFld += (i17 * i20);
                    i20 *= 4;
                }
                for (i21 = 69; i21 > 4; i21 -= 2) {
                    Test0595.iArrFld[i21 - 1][i21] = 25505;
                    try {
                        Test0595.iFld = (i17 % -56725);
                        i20 = (Test0595.iArrFld[i][i + 1] / -1655628967);
                        i18 = (Test0595.iArrFld[i21 + 1][i21 + 1] / i18);
                    } catch (ArithmeticException a_e) {}
                    l1 -= (long) Test0595.dFld;
                }
            } else {
                Test0595.instanceCount += (((i * i20) + Test0595.instanceCount) - i);
            }
        } while (++i < 367);

        FuzzerUtils.out.println("i s3 i17 = " + i + "," + s3 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("l1 i21 i22 = " + l1 + "," + i21 + "," + i22);

        FuzzerUtils.out.println("Test0595.instanceCount Test0595.bFld Test0595.iFld = " + Test0595.instanceCount + "," + (Test0595.bFld ? 1
                : 0) + "," + Test0595.iFld);
        FuzzerUtils.out.println("Test0595.fFld Test0595.byFld Test0595.dFld = " + Float.floatToIntBits(Test0595.fFld) + "," +
                Test0595.byFld + "," + Double.doubleToLongBits(Test0595.dFld));
        FuzzerUtils.out.println("Test0595.byArrFld lArrFld sArrFld = " + FuzzerUtils.checkSum(Test0595.byArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(sArrFld));
        FuzzerUtils.out.println("Test0595.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test0595.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0595 _instance = new Test0595();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
