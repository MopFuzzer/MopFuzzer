// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:43 2023
public class Test0655 {

    public static final int N = 400;

    public static volatile long instanceCount=13L;
    public static float fFld=-1.48F;
    public static byte byFld=-69;
    public boolean bFld=true;
    public static boolean[] bArrFld =new boolean[N];
    public static volatile byte[] byArrFld =new byte[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0655.bArrFld, true);
        FuzzerUtils.init(Test0655.byArrFld, (byte) -95);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l, int i4) {

        int i5=41559;
        int i6=3320;
        int i7=-38164;
        int i8=-3;
        int i9=-121;
        int i10=7;
        int i11=-196;
        int[] iArr1 =new int[N];
        short s1=-30072;
        byte by=-86;
        double d=86.23252;
        boolean b=true;

        FuzzerUtils.init(iArr1, -9);

        iArr1[(201 >>> 1) % N] += i4;
        for (i5 = 7; i5 < 164; i5++) {
            s1 >>>= (short)i5;
            for (i7 = i5; i7 < 10; ++i7) {
                i8 *= i7;
                l = i7;
                i8 -= 29;
                iArr1[i7 - 1] = i7;
                for (i9 = i7; i9 < 1; ++i9) {
                    i8 -= (int) Test0655.instanceCount;
                }
                switch ((((i9 >>> 1) % 7) * 5) + 119) {
                case 146:
                    i11 = 1;
                    while (++i11 < 1) {
                        iArr1[i7 - 1] += by;
                        i10 += (((i11 * i9) + Test0655.instanceCount) - Test0655.fFld);
                        l -= (long)d;
                    }
                case 154:
                    Test0655.instanceCount += i7;
                case 148:
                    b = b;
                case 123:
                    l += (i7 | i8);
                    break;
                case 151:
                    Test0655.instanceCount += by;
                case 147:
                    i4 = i6;
                    break;
                case 140:
                    i4 >>>= -29323;
                }
            }
        }
        long meth_res = l + i4 + i5 + i6 + s1 + i7 + i8 + i9 + i10 + i11 + by + Double.doubleToLongBits(d) + (b ? 1 :
            0) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i2, int i3) {

        double d1=72.13432;
        int i12=8975;
        int i13=-56839;
        int i14=5;
        int i15=10;
        int i16=7;
        int[] iArr =new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr, 163);

        iArr[(-25208 >>> 1) % N] ^= (int) ((Math.abs(i3) - i2) + ((Test0655.instanceCount--) - lMeth(Test0655.instanceCount,
            i3)));
        Test0655.byFld = (byte) -25104;
        d1 += Test0655.fFld;
        iArr = iArr;
        d1 += Test0655.instanceCount;
        i2 -= i2;
        i12 = 1;
        while (++i12 < 254) {
            Test0655.bArrFld[i12 - 1] = b1;
            i2 += (((i12 * i2) + i12) - i12);
            for (i13 = i12; i13 < 6; ++i13) {
                b1 = false;
                d1 *= -2.438F;
                for (i15 = 1; i15 < 1; i15++) {
                    Test0655.fFld = i3;
                    Test0655.instanceCount |= 159;
                }
            }
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d1) + i12 + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(int i1) {


        Test0655.fFld = (iMeth(i1, i1) - 216);
        i1 -= i1;
        vSmallMeth_check_sum += i1;
    }

    public void mainTest(String[] strArr1) {

        int i=-138, i17=129, i18=-43274, i19=22, i20=-35263, i21=0;
        short s=17733;
        double d2=1.47667;

        i *= (int) ((Test0655.fFld++) - ((s - -17422) + i));
        for (int smallinvoc=0; smallinvoc<658; smallinvoc++) vSmallMeth(i);
        Test0655.instanceCount = -10841;
        Test0655.byArrFld[(-41470 >>> 1) % N] = (byte) Test0655.fFld;
        i *= (int) Test0655.instanceCount;
        Test0655.instanceCount *= i;
        i17 = 1;
        do {
            for (i18 = 4; i18 < 397; i18 += 3) {
                try {
                    iArrFld[i18 + 1] = (-59440 / iArrFld[i18]);
                    i19 = (i % 35288);
                    i = (i19 / -146);
                } catch (ArithmeticException a_e) {}
                Test0655.instanceCount *= i18;
                Test0655.fFld *= -109.856F;
                Test0655.byFld <<= (byte) Test0655.instanceCount;
                if (bFld) break;
                Test0655.fFld += (i18 * i18);
                for (i20 = 1; i20 < 4; i20++) {
                    Test0655.fFld = -6L;
                    i <<= s;
                    switch ((i20 % 8) + 102) {
                    case 102:
                        iArrFld[i17 + 1] += 208;
                        i21 -= i20;
                        i21 -= i17;
                        Test0655.instanceCount -= i20;
                        break;
                    case 103:
                        i = (int) Test0655.instanceCount;
                        i21 >>= (int) Test0655.instanceCount;
                        i += (i20 * Test0655.instanceCount);
                    case 104:
                        i += (i20 + i);
                        Test0655.fFld += (((i20 * i17) + Test0655.instanceCount) - i19);
                        bFld = bFld;
                    case 105:
                        i19 = i;
                        d2 /= ((long) (Test0655.fFld) | 1);
                        break;
                    case 106:
                        i += (((i20 * Test0655.fFld) + s) - Test0655.instanceCount);
                        break;
                    case 107:
                        i -= i20;
                    case 108:
                        Test0655.instanceCount = (long) Test0655.fFld;
                        break;
                    case 109:
                        Test0655.byArrFld[i18 + 1] >>>= (byte) i21;
                        break;
                    default:
                        iArrFld[i18 - 1] >>= i18;
                    }
                }
            }
        } while ((i17 += 3) < 189);

        FuzzerUtils.out.println("i s i17 = " + i + "," + s + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d2 = " + i21 + "," + Double.doubleToLongBits(d2));

        FuzzerUtils.out.println("Test0655.instanceCount Test0655.fFld Test0655.byFld = " + Test0655.instanceCount + "," +
                Float.floatToIntBits(Test0655.fFld) + "," + Test0655.byFld);
        FuzzerUtils.out.println("bFld Test0655.bArrFld Test0655.byArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0655.bArrFld) + "," + FuzzerUtils.checkSum(Test0655.byArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0655 _instance = new Test0655();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
