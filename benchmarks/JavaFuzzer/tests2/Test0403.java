// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:31 2023
public class Test0403 {

    public static final int N = 400;

    public static long instanceCount=-6L;
    public static int iFld=14;
    public static double dFld=35.26928;
    public static byte byFld=65;
    public static boolean bFld=true;
    public float fFld=0.538F;
    public static int iFld1=-96;
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0403.iArrFld, 54954);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i6=61585, i7=-31497, i8=53, i9=-98, i10=-57988, i11=53781, i12=-2595, i13=-63305, i14=10;
        short s=24231;
        float f=-1.853F;

        for (i6 = 11; i6 < 281; ++i6) {
            for (i8 = 1; i8 < 6; i8++) {
                for (i10 = 1; i10 < 2; ++i10) {
                    Test0403.instanceCount += (((i10 * s) + i6) - f);
                    i7 -= 5;
                }
                for (i12 = 1; i12 < 2; i12++) {
                    i7 = i9;
                    Test0403.iFld += -59711;
                    s -= s;
                    Test0403.iFld = i9;
                    i9 -= (int) Test0403.dFld;
                    Test0403.instanceCount += (((i12 * i8) + i14) - Test0403.instanceCount);
                    f += i13;
                }
                i11 *= 9425;
                i14 -= i11;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + s + Float.floatToIntBits(f) + i12 + i13 + i14;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i2, int i3) {

        int i4=-2, i5=2542, i15=79, i16=-17460, i17=6, i18=47857, i19=-52, i20=6;
        float f1=1.402F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 4214199919L);

        for (i4 = 13; i4 < 298; ++i4) {
            lArr[i4] += iMeth1();
            i2 += (i4 * i4);
        }
        for (i15 = 365; i15 > 19; i15 -= 2) {
            i16 -= (int)f1;
        }
        for (i17 = 7; 298 > i17; ++i17) {
            Test0403.instanceCount += i17;
            Test0403.iFld = i18;
            for (i19 = 1; i19 < 6; ++i19) {
                lArr[i19] += i3;
                i18 *= i19;
                f1 = 5L;
                i2 = (int)1.99F;
                i16 = i16;
            }
            i20 += i5;
        }
        long meth_res = i2 + i3 + i4 + i5 + i15 + i16 + Float.floatToIntBits(f1) + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i21=-252, i22=-57523, i23=250, i24=105, i25=113, i26=14;
        short s1=11015;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -2.80463);

        i1 *= (int) (((i + -14.10F) + iMeth(Test0403.iFld, 12)) - Test0403.iFld);
        Test0403.byFld = (byte) Test0403.instanceCount;
        for (i21 = 1; i21 < 236; i21++) {
            if (Test0403.bFld) {
                for (i23 = 1; i23 < 7; i23 += 2) {
                    for (i25 = 3; i25 > i21; i25 -= 3) {
                        i22 += (i25 * i25);
                        dArr[i25 - 1] += 251;
                        Test0403.instanceCount >>= Test0403.instanceCount;
                        i24 = (int) Test0403.instanceCount;
                        Test0403.instanceCount = i26;
                        Test0403.instanceCount = i25;
                        i24 *= i25;
                        i += (i25 * i25);
                        s1 = (short) Test0403.instanceCount;
                    }
                }
            } else if (Test0403.bFld) {
                if (i != 0) {
                    vMeth_check_sum += i + i1 + i21 + i22 + i23 + i24 + i25 + i26 + s1 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
            } else {
                i24 = -13;
            }
        }
        vMeth_check_sum += i + i1 + i21 + i22 + i23 + i24 + i25 + i26 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i27=7, i28=39619, i29=206, i30=211;
        long l=418142525L;
        float f2=1.452F;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 115.763F);

        vMeth(-49349, 5);
        Test0403.iFld = Test0403.iFld;
        fFld = Test0403.instanceCount;
        i27 = 1;
        do {
            Test0403.instanceCount <<= i27;
            Test0403.instanceCount *= 0;
            fFld *= Test0403.instanceCount;
            Test0403.iFld |= i27;
        } while (++i27 < 213);
        fFld *= Test0403.iFld;
        for (l = 356; l > 20; --l) {
            Test0403.iArrFld[(-12 >>> 1) % N] *= -6;
            for (f2 = 75; l < f2; f2 -= 3) {
                Test0403.instanceCount >>= i28;
                Test0403.instanceCount += Test0403.iFld1;
                i30 = 1;
                do {
                    switch ((int)((l % 2) + 27)) {
                    case 27:
                        fArr[(int)(l + 1)][(int)(f2)] *= i27;
                        Test0403.iArrFld = Test0403.iArrFld;
                        break;
                    case 28:
                        i29 = (int) Test0403.instanceCount;
                        i28 &= Test0403.iFld1;
                        Test0403.iArrFld[i30] = 3;
                        i28 >>= i30;
                        break;
                    default:
                        Test0403.iArrFld[i30] = i28;
                        Test0403.instanceCount += Test0403.iFld1;
                        Test0403.iArrFld[(int) (l - 1)] = (int) fFld;
                        Test0403.byFld = (byte) l;
                    }
                    Test0403.iArrFld[i30] = i27;
                    Test0403.bFld = Test0403.bFld;
                    i29 = i29;
                    i29 = (int)231L;
                } while ((i30 += 2) < 1);
            }
        }

        FuzzerUtils.out.println("i27 l i28 = " + i27 + "," + l + "," + i28);
        FuzzerUtils.out.println("f2 i29 i30 = " + Float.floatToIntBits(f2) + "," + i29 + "," + i30);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0403.instanceCount Test0403.iFld Test0403.dFld = " + Test0403.instanceCount + "," + Test0403.iFld +
                "," + Double.doubleToLongBits(Test0403.dFld));
        FuzzerUtils.out.println("Test0403.byFld Test0403.bFld fFld = " + Test0403.byFld + "," + (Test0403.bFld ? 1 : 0) + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0403.iFld1 Test0403.iArrFld = " + Test0403.iFld1 + "," + FuzzerUtils.checkSum(Test0403.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0403 _instance = new Test0403();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
