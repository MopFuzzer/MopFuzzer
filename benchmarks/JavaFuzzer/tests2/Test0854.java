// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0854 {

    public static final int N = 400;

    public static long instanceCount=-92L;
    public static int iFld=-65302;
    public static volatile float fFld=-102.752F;
    public static float fFld1=-24.494F;
    public static boolean bFld=true;
    public static short sFld=-1543;
    public volatile boolean bFld1=false;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public static volatile int[][] iArrFld1 =new int[N][N];

    static {
        FuzzerUtils.init(Test0854.iArrFld, 0);
        FuzzerUtils.init(Test0854.fArrFld, -90.698F);
        FuzzerUtils.init(Test0854.iArrFld1, 152);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;

    public static float fMeth1(int i4, int i5, int i6) {

        int i7=-152;
        int i8=-43;
        int i9=56306;
        int i10=-26512;
        int i11=-6;
        int i12=-225;
        int[] iArr1 =new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 2);

        for (i7 = 20; i7 < 358; i7++) {
            for (i9 = 5; i9 > i7; --i9) {
                i10 += (i9 * i9);
                for (i11 = 1; i11 < 1; i11++) {
                    i6 += (i11 * i11);
                    if (b) continue;
                    i10 += (int)-1.127949;
                    Test0854.bFld = Test0854.bFld;
                    try {
                        i10 = (i11 / 1417506769);
                        Test0854.iFld = (i10 / i7);
                        i12 = (iArr1[i11 - 1] % 211);
                    } catch (ArithmeticException a_e) {}
                    Test0854.fFld += Test0854.sFld;
                    Test0854.sFld = (short) i5;
                    i4 += (i11 * i7);
                }
                Test0854.iFld -= i6;
                i10 <<= i4;
                if (Test0854.bFld) continue;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        fMeth1_check_sum += meth_res;
        return (float)meth_res;
    }

    public float fMeth(int i1, int i2, int i3) {

        double d2=-1.52195;
        int i13=11, i14=-147;
        long l1=-59L;
        byte by=78;

        i2 -= (int) (-((Test0854.instanceCount <<= -219) + fMeth1(i1, Test0854.iFld, i3)));
        i2 = (int)d2;
        Test0854.fFld1 = Test0854.instanceCount;
        for (i13 = 13; i13 < 277; ++i13) {
            l1 = 1;
            do {
                Test0854.iArrFld[i13] -= i1;
                if (true) {
                    Test0854.fFld1 = Test0854.fFld;
                } else if (bFld1) {
                    i3 = i1;
                } else {
                    i1 -= by;
                    Test0854.instanceCount += l1;
                    Test0854.iArrFld[(int) (l1 - 1)] >>= Test0854.iFld;
                }
                Test0854.instanceCount += i1;
                i3 += (int) Test0854.instanceCount;
                Test0854.iFld >>= i1;
            } while (++l1 < 6);
        }
        long meth_res = i1 + i2 + i3 + Double.doubleToLongBits(d2) + i13 + i14 + l1 + by;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth(long l, double d1) {

        byte by1=5;
        int i15=192;
        int i16=166;
        int i17=20;
        int i18=34;
        int i19=-1;
        int i20=-43;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -5);

        iArr[(Test0854.iFld >>> 1) % N] = (int) (~(long) ((Test0854.fFld - Test0854.iFld) * (-(Test0854.fFld - Test0854.iFld))));
        Test0854.iFld <<= (int) (((Test0854.iFld - Test0854.instanceCount) - (Test0854.iFld - Test0854.fFld1)) + (13887 + fMeth(16999,
                Test0854.iFld, -5)));
        if (Test0854.bFld) {
            l = Test0854.iFld;
            Test0854.instanceCount *= by1;
        } else if (Test0854.bFld) {
            for (float f1 : Test0854.fArrFld) {
                Test0854.fArrFld[(i15 >>> 1) % N] -= l;
            }
            for (i16 = 291; i16 > 5; i16 -= 3) {
                for (i18 = 1; i18 < 16; ++i18) {
                    i20 = 1;
                    do {
                        l = -69;
                        Test0854.sFld = (short) i19;
                    } while (++i20 < 2);
                    Test0854.iFld += (int) Test0854.fFld;
                    if (Test0854.bFld) break;
                }
            }
            Test0854.iArrFld1 = Test0854.iArrFld1;
        }
        long meth_res = l + Double.doubleToLongBits(d1) + by1 + i15 + i16 + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-13062, i22=-13, i23=-9, i24=15850, i25=8;
        float f=6.380F;
        double d=-112.73920;
        byte by2=-33;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 10366L);

        i = 1;
        do {
            short s=20502;
            f *= i;
            d *= (++s);
            Test0854.iFld = (iMeth(Test0854.instanceCount, d) * Test0854.iFld);
            Test0854.iFld = (int) Test0854.instanceCount;
            for (i22 = 99; i22 > i; i22 -= 3) {
                Test0854.iArrFld[i + 1] = i;
                lArr[i22] |= i;
                Test0854.instanceCount = i23;
                Test0854.iArrFld1[i + 1][i22 - 1] -= 54007;
                Test0854.iFld >>= s;
                Test0854.iArrFld[i + 1] >>= i;
                for (i24 = i22; i24 < 1; ++i24) {
                    Test0854.iFld &= by2;
                    i25 = -239;
                    switch (((i22 >>> 1) % 3) + 119) {
                    case 119:
                        f *= i;
                        d = i23;
                        Test0854.instanceCount += (long) 69.24142;
                        Test0854.sFld >>= (short) 147;
                        break;
                    case 120:
                        Test0854.iFld *= Test0854.iFld;
                        break;
                    case 121:
                        try {
                            i25 = (i22 % i25);
                            i25 = (35808 % i22);
                            Test0854.iFld = (-53681 % Test0854.iArrFld[i22 - 1]);
                        } catch (ArithmeticException a_e) {}
                        i25 += i25;
                        i25 *= by2;
                        break;
                    default:
                        i25 *= i;
                        i25 &= (int) Test0854.instanceCount;
                        if (true) continue;
                        i25 += (i24 * i22);
                    }
                    i23 += (i24 - i);
                    i25 <<= -5;
                }
            }
        } while (++i < 253);

        FuzzerUtils.out.println("i f d = " + i + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 by2 lArr = " + i25 + "," + by2 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0854.instanceCount Test0854.iFld Test0854.fFld = " + Test0854.instanceCount + "," + Test0854.iFld +
                "," + Float.floatToIntBits(Test0854.fFld));
        FuzzerUtils.out.println("Test0854.fFld1 Test0854.bFld Test0854.sFld = " + Float.floatToIntBits(Test0854.fFld1) + "," +
                (Test0854.bFld ? 1 : 0) + "," + Test0854.sFld);
        FuzzerUtils.out.println("bFld1 Test0854.iArrFld Test0854.fArrFld = " + (bFld1 ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0854.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0854.fArrFld)));
        FuzzerUtils.out.println("Test0854.iArrFld1 = " + FuzzerUtils.checkSum(Test0854.iArrFld1));

        FuzzerUtils.out.println("fMeth1_check_sum: " + fMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0854 _instance = new Test0854();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
