// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0521 {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static boolean bFld=false;
    public byte byFld=87;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0521.lArrFld, 890858273791054172L);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1) {

        int i9=36;
        int i10=-54;
        int i11=13;
        int i12=11;
        int i13=-3;
        int i14=14;
        int i15=49809;
        int i16=-39497;
        int[] iArr1 =new int[N];
        byte by1=-78;
        double d2=1.110991;

        FuzzerUtils.init(iArr1, -61756);

        i9 = 1;
        while (++i9 < 309) {
            i10 -= (int)-2.205F;
            i10 += (((i9 * i10) + by1) - i10);
            i10 += i9;
            for (i11 = i9; 5 > i11; ++i11) {
                i10 = (int)d2;
                iArr1[(i13 >>> 1) % N] *= i13;
                for (i14 = 1; i14 < 1; ++i14) {
                    if (Test0521.bFld) break;
                    if (i12 != 0) {
                        vMeth_check_sum += l1 + i9 + i10 + by1 + i11 + i12 + Double.doubleToLongBits(d2) + i13 + i14 +
                            i15 + i16 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                }
                if (Test0521.bFld) continue;
            }
        }
        i10 = i12;
        i16 = 1;
        do {
            iArr1[i16] >>= -156;
            i12 += (i16 ^ by1);
        } while (++i16 < 238);
        vMeth_check_sum += l1 + i9 + i10 + by1 + i11 + i12 + Double.doubleToLongBits(d2) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i5, int i6, double d1) {

        float f=1.215F;
        int i7=46, i8=65, i17=-5, i18=-3, i19=-228;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 4167617995202643388L);

        lArr1 = (lArr1 = (lArr1 = (lArr1 = lArr1)));
        i6 = (int)(f--);
        for (i7 = 23; i7 < 385; i7++) {
            Test0521.instanceCount *= (--i8);
            vMeth(Test0521.instanceCount);
            for (i17 = 5; i17 > 1; i17 -= 2) {
                i18 = i7;
                i19 = 1;
                do {
                    if (Test0521.bFld) {
                        Test0521.instanceCount >>>= i19;
                        i5 *= i8;
                    } else if (true) {
                        Test0521.instanceCount = i19;
                    } else if (Test0521.bFld) {
                        i18 = i6;
                        i5 >>>= -3;
                        f *= 34761;
                    } else {
                        i18 &= (int) Test0521.instanceCount;
                    }
                } while (++i19 < 3);
            }
        }
        long meth_res = i5 + i6 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i7 + i8 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(byte by, int i4, long l) {

        int i20=-2;
        int i21=-3;
        int i22=166;
        int i23=-179;
        int i24=-211;
        int i25=53;
        int[] iArr2 =new int[N];
        float f1=-1.1F;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr2, -58);
        FuzzerUtils.init(sArr, (short)18512);

        i4 *= iMeth(i4, i4, 112.106587);
        for (i20 = 1; i20 < 163; i20++) {
            for (i22 = 1; i22 < 10; i22++) {
                i4 += (((i22 * i4) + f1) - i21);
                i4 -= (int) Test0521.instanceCount;
                Test0521.lArrFld[(i21 >>> 1) % N] = -127;
                i23 <<= by;
                iArr2[i20] = i23;
                iArr2[i20 + 1] = (int)59932L;
            }
            switch ((i20 % 7) + 20) {
            case 20:
                i4 += (i20 + i23);
                for (i24 = 1; i24 < 10; ++i24) {
                    i23 = i21;
                    Test0521.lArrFld[i20 - 1] = l;
                    Test0521.instanceCount = i23;
                }
                break;
            case 21:
                f1 += (i20 + i24);
                break;
            case 22:
                i25 += (i20 - l);
                break;
            case 23:
            case 24:
                sArr[i20 - 1] >>= (short) Test0521.instanceCount;
                break;
            case 25:
                Test0521.instanceCount += i21;
                break;
            case 26:
                i25 += i20;
                break;
            }
        }
        long meth_res = by + i4 + l + i20 + i21 + i22 + i23 + Float.floatToIntBits(f1) + i24 + i25 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-109.60352, d3=1.51579;
        int i=-56918;
        int i1=-112;
        int i2=58725;
        int i3=6;
        int i26=-1026;
        int i27=-41698;
        int i28=-13;
        int i29=6;
        int i30=49;
        int i31=-214;
        int[] iArr =new
                    int[N];
        float f2=-78.462F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 93);
        FuzzerUtils.init(lArr, -54017L);
        FuzzerUtils.init(fArr, -1.566F);

        d = 1;
        while (++d < 367) {
            for (i = 69; 3 < i; i--) {
                iArr[i - 1] -= (int) ((iArr[(int) (d - 1)]--) + ((++i1) + (Test0521.instanceCount * i)));
                if (Test0521.bFld) continue;
                lArr[i - 1] >>>= i1;
                i1 = (int) (((Test0521.instanceCount - 241) + fArr[(int) (d)]) * (i / ((i1 - Test0521.instanceCount) | 1)));
                i1 += 57038;
            }
            i1 = (int) (++Test0521.instanceCount);
            for (i2 = 69; i2 > 2; i2--) {
                Test0521.instanceCount -= i3;
                iArr[(i >>> 1) % N] += i;
                i3 -= (int) Math.max(Test0521.instanceCount, i1 * (Test0521.instanceCount - i2));
                i3 += (i2 + i3);
                i1 *= (int) Math.abs(dMeth((byte) (-11), i3, Test0521.instanceCount));
                if (Test0521.bFld) continue;
            }
            Test0521.instanceCount += (long) d;
            i3 &= i2;
            Test0521.instanceCount <<= 51;
            iArr[(int) (d + 1)] = (int) Test0521.instanceCount;
            for (i26 = 4; 69 > i26; i26++) {
                i28 = i28;
                iArr[(int)(d - 1)] ^= i3;
                Test0521.instanceCount += Test0521.instanceCount;
                for (i29 = 1; i29 < 2; ++i29) {
                    Test0521.instanceCount *= -81;
                    switch (((i26 % 6) * 5) + 3) {
                    case 21:
                        d3 = Test0521.instanceCount;
                        i27 = i2;
                        i27 = i1;
                        i27 = (int)d3;
                        break;
                    case 30:
                        i1 += -17124;
                    case 14:
                        i30 = (int) Test0521.instanceCount;
                        break;
                    case 15:
                        Test0521.instanceCount >>= -2463;
                        break;
                    case 9:
                        try {
                            i1 = (i2 % 44694);
                            iArr[i26 - 1] = (i3 / -14142);
                            i1 = (i31 % 147);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 27:
                        i30 += (int)f2;
                        break;
                    default:
                        Test0521.instanceCount ^= byFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i26 = " + i2 + "," + i3 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 d3 i31 = " + i30 + "," + Double.doubleToLongBits(d3) + "," + i31);
        FuzzerUtils.out.println("f2 iArr lArr = " + Float.floatToIntBits(f2) + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0521.instanceCount Test0521.bFld byFld = " + Test0521.instanceCount + "," + (Test0521.bFld ? 1 :
            0) + "," + byFld);
        FuzzerUtils.out.println("Test0521.lArrFld = " + FuzzerUtils.checkSum(Test0521.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0521 _instance = new Test0521();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
