// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0099 {

    public static final int N = 400;

    public static volatile long instanceCount=-104L;
    public static boolean bFld=false;
    public float fFld=1.566F;
    public static float[] fArrFld =new float[N];
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0099.fArrFld, 1.580F);
        FuzzerUtils.init(Test0099.iArrFld, -6);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, float f3, boolean b) {

        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -6425367121199339112L);

        lArr[(i5 >>> 1) % N] -= i5;
        vMeth1_check_sum += i5 + Float.floatToIntBits(f3) + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3, float f2, int i4) {

        double d=1.39979;
        int i6=-101, i7=-39765, i8=50;
        float f4=1.109F;
        byte by=-113;

        vMeth1(i3, f2, Test0099.bFld);
        d = -251L;
        for (i6 = 8; i6 < 139; ++i6) {
            for (f4 = 1; f4 < 12; f4 += 2) {
                i7 += (int)f4;
                i7 += (int)f4;
            }
            i3 = i3;
            by += (byte)i6;
            Test0099.instanceCount += Test0099.instanceCount;
            i4 ^= i7;
            i7 += (int)(-20.947F + (i6 * i6));
            i8 = (int)299600553L;
            by |= (byte)i7;
            f2 = Test0099.instanceCount;
            i4 |= i4;
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f2) + i4 + Double.doubleToLongBits(d) + i6 + i7 +
            Float.floatToIntBits(f4) + i8 + by;
    }

    public static int iMeth(long l, int i2) {

        float f5=-107.207F;

        vMeth(i2, f5, i2);
        long meth_res = l + i2 + Float.floatToIntBits(f5);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=87.922F, f1=4.700F;
        int i=14, i1=-55289, i9=25606, i10=-37522, i11=-15496, i12=-145, i13=2617, i14=11, i15=54515, i16=8, i17=-7;
        byte[][] byArr =new byte[N][N];
        short[] sArr =new short[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(byArr, (byte)96);
        FuzzerUtils.init(sArr, (short)8357);
        FuzzerUtils.init(bArr, true);

        f = 1;
        while (++f < 286) {
            byArr[(int) (f)][(int) (f - 1)] += (byte) ((++Test0099.instanceCount) + (sArr[(int) (f)] - (i * i)));
            for (f1 = f; f1 < 88; f1 += 2) {
                byArr[(int) (f1 + 1)][(int) (f - 1)] += (byte) (i - (iMeth(Test0099.instanceCount, i1) - 1));
                i1 -= (int) Test0099.instanceCount;
                fFld *= Test0099.instanceCount;
                for (i9 = 1; i9 < 1; ++i9) {
                    Test0099.fArrFld[(int) (f)] = i11;
                    bArr[(int) (f1)] = Test0099.bFld;
                    i11 <<= (int) Test0099.instanceCount;
                }
            }
            for (i12 = 2; 88 > i12; i12++) {
                Test0099.instanceCount -= -40691;
                i11 *= i13;
                Test0099.iArrFld[(int) (f)] = Test0099.iArrFld[i12];
                i10 += (58793 + (i12 * i12));
                for (i14 = 2; i14 > 1; i14--) {
                    i11 = (int) Test0099.instanceCount;
                    if (Test0099.bFld) continue;
                    i11 = 9;
                    i13 = (int)68L;
                }
                for (i16 = (int)(f); i16 < 2; i16++) {
                    switch (((i16 % 2) * 5) + 123) {
                    case 127:
                        i11 -= (int)f1;
                        i10 = (int) Test0099.instanceCount;
                    case 126:
                        switch ((int)((f % 2) + 3)) {
                        case 3:
                            switch ((int)((f % 1) + 16)) {
                            case 16:
                                fFld += i16;
                                i13 = 15817;
                                fFld -= Test0099.instanceCount;
                            }
                            i1 ^= i14;
                        case 4:
                            Test0099.instanceCount += (i16 ^ Test0099.instanceCount);
                            break;
                        default:
                        }
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i f1 = " + Float.floatToIntBits(f) + "," + i + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i1 i9 i10 = " + i1 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 byArr sArr = " + i17 + "," + FuzzerUtils.checkSum(byArr) + "," +
            FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0099.instanceCount Test0099.bFld fFld = " + Test0099.instanceCount + "," + (Test0099.bFld ? 1 : 0)
            + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0099.fArrFld Test0099.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0099.fArrFld)) + "," + FuzzerUtils.checkSum(Test0099.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0099 _instance = new Test0099();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
