// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0440 {

    public static final int N = 400;

    public static long instanceCount=46697L;
    public static double dFld=2.19370;
    public static int iFld=-14;
    public static short sFld=-3784;
    public int[] iArrFld =new int[N];
    public static int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0440.iArrFld1, -14226);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6) {

        float f=34.27F;
        int i7=2, i8=65, i9=-172, i10=0, i11=201;
        long l2=-1L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -65L);

        f -= i5;
        i7 = 1;
        while (++i7 < 392) {
            i5 += i7;
            switch ((i7 % 5) + 63) {
            case 63:
                i6 -= (int) Test0440.instanceCount;
                i5 %= (int) (Test0440.instanceCount | 1);
                f -= f;
                for (i8 = 1; 4 > i8; i8++) {
                    for (i10 = i7; i10 < 2; i10++) {
                        lArr1[i10 - 1] = (long) Test0440.dFld;
                    }
                    Test0440.instanceCount = i8;
                    Test0440.instanceCount = l2;
                    i6 += (-10 + (i8 * i8));
                    l2 = Test0440.instanceCount;
                    i11 *= (int)f;
                }
                break;
            case 64:
                i11 += (17068 + (i7 * i7));
            case 65:
                i9 += (i7 + Test0440.instanceCount);
            case 66:
                i6 = (int) Test0440.instanceCount;
                break;
            case 67:
                Test0440.instanceCount &= i10;
                break;
            }
        }
        vMeth2_check_sum += i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + i11 + l2 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1(short s, int i2) {

        int i3=-11, i4=55295, i12=-13719, i13=-26345, i14=9388;
        byte by=-14;
        float f1=36.480F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -253L);

        Test0440.instanceCount = (((lArr[(i2 >>> 1) % N]++) + (i2 - i2)) * Test0440.iArrFld1[(i2 >>> 1) % N]);
        for (i3 = 8; i3 < 283; ++i3) {
            vMeth2(71, i4);
        }
        i12 = 1;
        do {
            for (i13 = 5; i13 > i12; --i13) {
                i14 |= (int) Test0440.instanceCount;
                Test0440.iArrFld1[i12 - 1] = 233;
                Test0440.iFld += i13;
                i2 >>= by;
                f1 -= i3;
            }
            Test0440.instanceCount <<= -53;
            Test0440.dFld += Test0440.instanceCount;
            i14 <<= (int) Test0440.instanceCount;
            i4 += i12;
            Test0440.dFld *= Test0440.iFld;
        } while (++i12 < 330);
        vMeth1_check_sum += s + i2 + i3 + i4 + i12 + i13 + i14 + by + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(long l, long l1, int i1) {

        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 5671325713887411786L);

        i1 = (int) (Math.sqrt(++Test0440.dFld) + 107.260F);
        vMeth1(Test0440.sFld, -8);
        lArr2[(Test0440.iFld >>> 1) % N] >>= Test0440.sFld;
        Test0440.iFld += (int) l;
        Test0440.iArrFld1[(-243 >>> 1) % N] = i1;
        vMeth_check_sum += l + l1 + i1 + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=0, i15=-30454, i16=-7332, i17=-19935, i18=-10;
        float f2=100.446F, f3=123.209F;

        iArrFld[(i >>> 1) % N] <<= (++i);
        vMeth(Test0440.instanceCount, Test0440.instanceCount, i);
        f2 = (float) Test0440.dFld;
        i *= (int) Test0440.dFld;
        for (i15 = 6; i15 < 243; ++i15) {
            i17 = 1;
            while (++i17 < 106) {
                iArrFld[i15 - 1] = i16;
                i16 += Test0440.sFld;
                for (f3 = 1; 1 < f3; --f3) {
                    boolean b=true;
                    i18 += (29286 + (f3 * f3));
                    if (b) {
                        f2 *= f3;
                        Test0440.iArrFld1[i15] &= -49865;
                        Test0440.sFld += (short) ((long) f3 ^ i18);
                    } else {
                        Test0440.iFld += (int) Test0440.instanceCount;
                        Test0440.iArrFld1[(int) (f3 + 1)] += (int) 1.97F;
                        Test0440.iFld -= Test0440.iFld;
                    }
                    Test0440.instanceCount += (long) ((long) f3 | i);
                    switch (((i17 % 2) * 5) + 124) {
                    case 134:
                        iArrFld[(int)(f3 - 1)] += i18;
                        Test0440.iArrFld1[(int) (f3)] = i18;
                        i -= (int) Test0440.instanceCount;
                        Test0440.iFld = i;
                        break;
                    case 133:
                        Test0440.iFld += (int) Test0440.instanceCount;
                        Test0440.iFld += i16;
                        i18 -= (int)f3;
                        Test0440.iFld <<= i16;
                    }
                    iArrFld[i17 - 1] += 9;
                }
            }
            Test0440.instanceCount += (i15 * i15);
            i18 += (((i15 * i15) + Test0440.instanceCount) - i15);
        }

        FuzzerUtils.out.println("i f2 i15 = " + i + "," + Float.floatToIntBits(f2) + "," + i15);
        FuzzerUtils.out.println("i16 i17 f3 = " + i16 + "," + i17 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i18 = " + i18);

        FuzzerUtils.out.println("Test0440.instanceCount Test0440.dFld Test0440.iFld = " + Test0440.instanceCount + "," +
                Double.doubleToLongBits(Test0440.dFld) + "," + Test0440.iFld);
        FuzzerUtils.out.println("Test0440.sFld iArrFld Test0440.iArrFld1 = " + Test0440.sFld + "," + FuzzerUtils.checkSum(iArrFld)
                + "," + FuzzerUtils.checkSum(Test0440.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0440 _instance = new Test0440();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
