// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:39 2023
public class Test0581 {

    public static final int N = 400;

    public static long instanceCount=3797321477475749099L;
    public static double dFld=34.82918;
    public static short sFld=13147;
    public static volatile int iFld=-138;
    public static long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];
    public static volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0581.lArrFld, -2L);
        FuzzerUtils.init(Test0581.fArrFld, 0.925F);
        FuzzerUtils.init(Test0581.dArrFld, 0.98818);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, short s, int i3) {

        int i4=79;
        int i5=6032;
        int i6=103;
        int i7=-233;
        int[] iArr =new int[N];
        long l=-2463240120348270075L;
        boolean b=true;
        float f1=0.898F;

        FuzzerUtils.init(iArr, 4);

        iArr[(-21 >>> 1) % N] = (int) Test0581.instanceCount;
        for (i4 = 6; i4 < 303; ++i4) {
            l -= i3;
            Test0581.instanceCount += i4;
            if (b) continue;
            Test0581.instanceCount += (-96 + (i4 * i4));
            iArr[i4 - 1] *= -7;
            i2 = i2;
            i2 += i4;
            i6 = 1;
            while (++i6 < 6) {
                f1 *= i4;
            }
        }
        i7 = 1;
        while ((i7 += 3) < 215) {
            i2 += (i7 + i5);
            i2 *= i6;
            i5 &= 62220;
        }
        vMeth2_check_sum += i2 + s + i3 + i4 + i5 + l + (b ? 1 : 0) + i6 + Float.floatToIntBits(f1) + i7 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i1=216;
        int i8=-44220;
        int i9=-8688;
        int i10=-12;
        int i11=-183;
        int[] iArr1 =new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, 7);

        i1 = (int) ((Math.min(-3, i1) - (Test0581.instanceCount | i1)) * (i1--));
        vMeth2(i1, (short)(-29676), i1);
        i8 = 1;
        do {
            Test0581.dFld -= i8;
            if (b1) {
                i1 = i8;
                Test0581.instanceCount = i1;
                i1 >>>= i8;
                Test0581.instanceCount -= i1;
            } else {
                i9 = 1;
                while (++i9 < 6) {
                    for (i10 = 1; 1 > i10; ++i10) {
                        iArr1[i10] >>= i11;
                        i1 -= 10578;
                        Test0581.instanceCount = i11;
                        i11 *= i10;
                    }
                }
                vMeth1_check_sum += i1 + i8 + (b1 ? 1 : 0) + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
                return;
            }
        } while (++i8 < 269);
        vMeth1_check_sum += i1 + i8 + (b1 ? 1 : 0) + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(float f, int i) {

        int i12=-18861;
        int i13=-1;
        int i14=-33483;
        int i15=50;
        int[] iArr2 =new int[N];
        boolean b2=true;
        boolean[] bArr =new boolean[N];
        long l1=-9146464261899885201L, l2=2514101861294354215L;

        FuzzerUtils.init(iArr2, -74);
        FuzzerUtils.init(bArr, true);

        vMeth1();
        for (i12 = 3; i12 < 245; ++i12) {
            byte by=-22;
            switch (i12 + 39) {
            case 39:
                Test0581.instanceCount += (i12 | (long) f);
                if (b2) {
                    i = i13;
                    iArr2[i12] *= i12;
                    Test0581.instanceCount = (long) Test0581.dFld;
                    iArr2[i12] *= i13;
                } else {
                    if (b2) {
                        for (l1 = 1; l1 < 7; l1++) {
                            switch (((i14 >>> 1) % 3) + 116) {
                            case 116:
                                f = -10738;
                                Test0581.instanceCount = l1;
                                f = i14;
                                break;
                            case 117:
                                Test0581.instanceCount += i;
                                break;
                            case 118:
                                if (i13 != 0) {
                                    vMeth_check_sum += Float.floatToIntBits(f) + i + i12 + i13 + (b2 ? 1 : 0) + l1 +
                                        i14 + i15 + l2 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
                                    return;
                                }
                                break;
                            default:
                                Test0581.lArrFld[i12] -= i14;
                            }
                        }
                    } else if (b2) {
                        i *= (int) Test0581.instanceCount;
                    } else if (b2) {
                        f *= i12;
                    } else {
                        i14 += (i12 * i12);
                    }
                }
                break;
            case 40:
                i15 = i15;
                break;
            case 41:
                iArr2[i12 + 1] >>= i;
                break;
            case 42:
                if (b2) break;
                break;
            case 43:
                i13 += i12;
                break;
            case 44:
                f += i12;
                break;
            case 45:
                Test0581.instanceCount = 11736;
                break;
            case 46:
                Test0581.lArrFld = Test0581.lArrFld;
                break;
            case 47:
                Test0581.instanceCount += (i12 - i13);
            case 48:
                i13 -= (int)l1;
                break;
            case 49:
                Test0581.instanceCount /= (i13 | 1);
                break;
            case 50:
                i15 &= (int) Test0581.instanceCount;
            case 51:
                b2 = b2;
                break;
            case 52:
                i = (int) Test0581.instanceCount;
                break;
            case 53:
                i13 += (i12 ^ i15);
            case 54:
                if (false) continue;
                break;
            case 55:
                i13 = i13;
                break;
            case 56:
                Test0581.sFld = (short) l1;
            case 57:
                i14 = (int) Test0581.instanceCount;
                break;
            case 58:
                by += (byte)i12;
            case 59:
                f *= i;
                break;
            case 60:
                Test0581.fArrFld[i12] -= 254176401L;
                break;
            case 61:
                iArr2[i12] = i13;
                break;
            case 62:
                iArr2[i12] <<= i13;
                break;
            case 63:
            case 64:
                bArr[i12] = b2;
            case 65:
                Test0581.instanceCount += i14;
            case 66:
            case 67:
                l2 = l2;
                break;
            case 68:
                f += i12;
            case 69:
                l2 = i;
                break;
            case 70:
                iArr2[(i15 >>> 1) % N] = (int)f;
                break;
            case 71:
                i13 <<= i15;
                break;
            case 72:
                i15 = (int)l1;
                break;
            case 73:
                i13 += (((i12 * i13) + i) - i14);
                break;
            case 74:
                i15 -= i12;
                break;
            case 75:
                l2 = i14;
                break;
            case 76:
                l2 = i13;
                break;
            case 77:
            case 78:
                i = i15;
                break;
            case 79:
                Test0581.iFld += (int) f;
                break;
            case 80:
            case 81:
                l2 -= Test0581.iFld;
            case 82:
                i += (int) Test0581.dFld;
            case 83:
                i15 += (((i12 * l1) + i14) - f);
                break;
            case 84:
                b2 = b2;
                break;
            case 85:
                i13 += (i12 * i12);
                break;
            case 86:
                Test0581.iFld = (int) l1;
                break;
            case 87:
                i13 <<= 60242;
                break;
            case 88:
                i13 += (((i12 * i13) + Test0581.instanceCount) - by);
            case 89:
                Test0581.lArrFld[i12] = -46793L;
                break;
            case 90:
                iArr2[i12 - 1] = i14;
            case 91:
                i15 += i12;
                break;
            case 92:
                i14 += (((i12 * i12) + i12) - l1);
                break;
            case 93:
                Test0581.dFld -= i14;
                break;
            case 94:
                try {
                    i14 = (Test0581.iFld % -175);
                    i = (i14 / iArr2[i12 - 1]);
                    Test0581.iFld = (i15 / iArr2[i12 + 1]);
                } catch (ArithmeticException a_e) {}
                break;
            case 95:
                i15 >>= i12;
            case 96:
                Test0581.fArrFld = Test0581.fArrFld;
                break;
            case 97:
                Test0581.instanceCount = 1794267530L;
                break;
            case 98:
                Test0581.iFld += i14;
                break;
            case 99:
                Test0581.lArrFld[i12 - 1] *= (long) Test0581.dFld;
                break;
            case 100:
                f = -97;
                break;
            case 101:
                iArr2[i12] *= Test0581.iFld;
                break;
            case 102:
                i14 = Test0581.iFld;
                break;
            case 103:
                if (b2) continue;
            case 104:
                i += (i12 * i12);
            case 105:
                f -= (float) Test0581.dFld;
            case 106:
                if (i != 0) {
                    vMeth_check_sum += Float.floatToIntBits(f) + i + i12 + i13 + (b2 ? 1 : 0) + l1 + i14 + i15 + l2 +
                        FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
                    return;
                }
                break;
            case 107:
                f += 56969;
                break;
            case 108:
                i13 += i12;
                break;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i12 + i13 + (b2 ? 1 : 0) + l1 + i14 + i15 + l2 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        float f2=0.64F, f3=-2.382F;
        int i16=0, i17=-8, i18=29564, i19=-107, i20=14, i21=-192, i22=-125, i23=14;
        double d1=99.47695;
        byte by1=111;
        boolean b3=false;

        vMeth(f2, Test0581.iFld);
        Test0581.lArrFld[(Test0581.iFld >>> 1) % N] = 187L;
        i16 = 1;
        do {
            Test0581.iFld -= (int) Test0581.dFld;
            for (d1 = 2; d1 < 75; d1++) {
                i17 += (int) (((d1 * Test0581.instanceCount) + Test0581.instanceCount) - i16);
                f3 = 1;
                while (++f3 < 2) {
                    switch ((int)((d1 % 2) + 105)) {
                    case 105:
                        i17 += (int)f3;
                        break;
                    case 106:
                        i17 += (int)f3;
                        i17 -= i17;
                        break;
                    }
                    by1 = (byte)0;
                    Test0581.instanceCount += (1 + (f3 * f3));
                    i17 += (int)(f3 * f3);
                    i18 >>>= Test0581.iFld;
                }
                for (i19 = 1; i19 < 2; i19++) {
                    f2 -= -13;
                    Test0581.instanceCount += (((i19 * i17) + Test0581.instanceCount) - f2);
                    i20 += (((i19 * i16) + Test0581.instanceCount) - i16);
                    i18 <<= (int) Test0581.instanceCount;
                }
                i18 += (int) (((d1 * Test0581.instanceCount) + i19) - i19);
                b3 = b3;
                Test0581.dArrFld[(i19 >>> 1) % N] *= 2L;
                f2 = -9;
                Test0581.dArrFld[(int) (d1 - 1)] -= -8;
                b3 = b3;
            }
            for (i21 = i16; 75 > i21; ++i21) {
                i18 += i23;
                i22 += 76;
                f2 /= 225;
            }
        } while (++i16 < 336);

        FuzzerUtils.out.println("f2 i16 d1 = " + Float.floatToIntBits(f2) + "," + i16 + "," +
            Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i17 f3 by1 = " + i17 + "," + Float.floatToIntBits(f3) + "," + by1);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("b3 i21 i22 = " + (b3 ? 1 : 0) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 = " + i23);

        FuzzerUtils.out.println("Test0581.instanceCount Test0581.dFld Test0581.sFld = " + Test0581.instanceCount + "," +
                Double.doubleToLongBits(Test0581.dFld) + "," + Test0581.sFld);
        FuzzerUtils.out.println("Test0581.iFld Test0581.lArrFld Test0581.fArrFld = " + Test0581.iFld + "," +
                FuzzerUtils.checkSum(Test0581.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0581.fArrFld)));
        FuzzerUtils.out.println("Test0581.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0581.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0581 _instance = new Test0581();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
