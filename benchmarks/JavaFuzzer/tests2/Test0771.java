// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:48 2023
public class Test0771 {

    public static final int N = 400;

    public static long instanceCount=10864L;
    public static short sFld=30054;
    public int iFld=14;
    public static volatile boolean bFld=true;
    public static double dFld=1.29792;
    public static float[] fArrFld =new float[N];
    public int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0771.fArrFld, -2.667F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(boolean b, long l2, int i5) {

        int i6=10404, i7=-10, i8=14381, i9=3715;
        byte by1=-70;
        byte[] byArr =new byte[N];
        double[] dArr =new double[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(byArr, (byte)84);
        FuzzerUtils.init(dArr, -74.94721);
        FuzzerUtils.init(lArr1, -2L);

        i5 = (int)-99L;
        byArr[(i5 >>> 1) % N] = (byte)3644684171L;
        i6 = 1;
        do {
            i5 += i6;
            i5 *= i6;
            i5 *= 11;
            i5 = (int)l2;
            for (i7 = i6; i7 < 4; i7++) {
                i9 = 1;
                do {
                    i5 += (i9 * i9);
                    i8 += i7;
                } while (++i9 < 1);
                i8 *= (int)-7882167386321511499L;
                dArr[i7 + 1] = i9;
                l2 = -29138;
            }
            lArr1[i6] += by1;
        } while (++i6 < 382);
        long meth_res = (b ? 1 : 0) + l2 + i5 + i6 + i7 + i8 + i9 + by1 + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(long l, long l1) {

        int i3=-2;
        int i4=6598;
        int i10=9;
        int i11=-14;
        int i12=-232;
        int i13=-158;
        int i14=87;
        int[] iArr2 =new int[N];
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 10L);
        FuzzerUtils.init(iArr2, 6491);

        i3 = 1;
        do {
            lArr[i3 - 1] >>= Test0771.instanceCount;
            i4 = ((iArr2[i3 + 1]--) - ((--i4) - (i4 + i3)));
            Test0771.sFld -= (short) i3;
            dMeth(b1, l, 0);
            i4 = (int)l;
            lArr[i3] += i3;
            i4 |= (int)l;
            if (false) break;
        } while (++i3 < 169);
        i10 = 1;
        do {
            for (i11 = 1; 5 > i11; ++i11) {
                b1 = b1;
                for (i13 = 1; i13 < 2; i13++) {
                    i4 += i13;
                    i4 += i13;
                }
            }
        } while (++i10 < 308);
        vMeth_check_sum += l + l1 + i3 + i4 + (b1 ? 1 : 0) + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth(float f) {

        int i=-13;
        int i1=-3;
        int i2=55195;
        int i15=189;
        int i16=50057;
        int i17=1;
        int[] iArr =new int[N];
        int[] iArr1 =new int[N];
        byte by=-10;

        FuzzerUtils.init(iArr, 150);
        FuzzerUtils.init(iArr1, -37752);

        Test0771.instanceCount *= (--iArr[(i >>> 1) % N]);
        for (i1 = 3; i1 < 301; i1++) {
            Test0771.instanceCount = (long) (((--Test0771.fArrFld[i1]) * (-(Test0771.instanceCount * i1))) - Test0771.instanceCount);
            Test0771.instanceCount += i1;
            iArr1[i1 - 1] *= (Math.min(i, i2) * i2);
            Test0771.instanceCount = (-249 * ((by * i2) - Long.reverseBytes(Test0771.instanceCount)));
            vMeth(21611L, Test0771.instanceCount);
            i2 = -6116;
            i += i1;
            i2 -= (int) Test0771.instanceCount;
            for (i15 = i1; 6 > i15; ++i15) {
                i17 = 1;
                do {
                    iArr = iArr;
                    iArr = iArr;
                    Test0771.instanceCount += i17;
                } while (++i17 < 1);
            }
        }
        long meth_res = Float.floatToIntBits(f) + i + i1 + i2 + by + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=-21325, i19=11, i20=1, i21=243, i22=-23875, i23=-80, i24=-49732, i25=-56, i26=-8;
        float f1=-49.302F;
        byte by2=9;
        byte[] byArr1 =new byte[N];

        FuzzerUtils.init(byArr1, (byte)-23);

        iMeth(0.302F);
        for (i18 = 8; i18 < 302; ++i18) {
            for (i20 = 86; i20 > 1; --i20) {
                iArrFld[i20][i20] *= i21;
            }
            i19 = i20;
            f1 = f1;
            for (i22 = 4; i22 < 86; ++i22) {
                Test0771.instanceCount -= (long) f1;
                i21 *= i18;
                switch (((i18 % 2) * 5) + 52) {
                case 56:
                    switch (((-39653 >>> 1) % 3) + 92) {
                    case 92:
                        i24 = 1;
                        do {
                            Test0771.instanceCount >>= -3;
                        } while (++i24 < 2);
                        i21 += (int)(-1986877789270342200L + (i22 * i22));
                        break;
                    case 93:
                        if (Test0771.bFld) {
                            i25 = 2;
                            do {
                                switch ((i22 % 6) + 127) {
                                case 127:
                                case 128:
                                    switch (((i25 % 4) * 5) + 28) {
                                    case 42:
                                        iArrFld[i22][i18 + 1] = (int) Test0771.instanceCount;
                                        f1 *= i18;
                                        i19 <<= i24;
                                        break;
                                    case 43:
                                        try {
                                            i21 = (i18 / i18);
                                            i23 = (iArrFld[i25][i25] % -619824142);
                                            i19 = (18621 % i23);
                                        } catch (ArithmeticException a_e) {}
                                    case 41:
                                        Test0771.instanceCount = i21;
                                        i23 += i25;
                                        switch ((((i22 >>> 1) % 4) * 5) + 77) {
                                        case 92:
                                            iArrFld[i25][i25] <<= i25;
                                            break;
                                        case 95:
                                            Test0771.instanceCount += 4918;
                                            Test0771.instanceCount += i18;
                                        case 85:
                                            i21 += i21;
                                            break;
                                        case 78:
                                            f1 -= 0.554F;
                                            break;
                                        }
                                        break;
                                    case 39:
                                        byArr1[i22] = (byte)-10;
                                    default:
                                        i21 += i25;
                                    }
                                    break;
                                case 129:
                                    f1 += 3179;
                                    break;
                                case 130:
                                    iArrFld[i22 + 1][i18] -= iFld;
                                    break;
                                case 131:
                                    i23 += (int)(-9.61F + (i25 * i25));
                                    break;
                                case 132:
                                    i21 -= by2;
                                    break;
                                default:
                                    f1 *= f1;
                                }
                            } while (--i25 > 0);
                        } else {
                            i19 *= i26;
                        }
                    case 94:
                        if (Test0771.bFld) break;
                        break;
                    default:
                        Test0771.instanceCount += 27377;
                    }
                    break;
                case 55:
                    Test0771.dFld += Test0771.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 f1 i22 = " + i21 + "," + Float.floatToIntBits(f1) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("by2 i26 byArr1 = " + by2 + "," + i26 + "," + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0771.instanceCount Test0771.sFld iFld = " + Test0771.instanceCount + "," + Test0771.sFld + "," +
            iFld);
        FuzzerUtils.out.println("Test0771.bFld Test0771.dFld Test0771.fArrFld = " + (Test0771.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0771.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0771.fArrFld)));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0771 _instance = new Test0771();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
