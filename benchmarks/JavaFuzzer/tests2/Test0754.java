// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0754 {

    public static final int N = 400;

    public static long instanceCount=3L;
    public static float fFld=0.637F;
    public static double dFld=-1.86089;
    public static volatile int iFld=-14;
    public static short sFld=24890;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0754.lArrFld, -61562L);
        FuzzerUtils.init(Test0754.iArrFld, 220);
        FuzzerUtils.init(Test0754.byArrFld, (byte) 59);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, long l1, int i6) {

        int i7=167;
        int i8=-31423;
        int i9=-211;
        int i10=-2;
        int i11=-9;
        int i12=10300;
        int i13=33;
        int[] iArr1 =new int[N];
        int[] iArr2 =new int[N];
        float f1=-1.871F;
        short s=-16488;

        FuzzerUtils.init(iArr1, -161);
        FuzzerUtils.init(iArr2, -180);

        for (i7 = 3; i7 < 204; ++i7) {
            i8 = i6;
        }
        for (i9 = 13; i9 < 377; ++i9) {
            byte by1=4;
            i8 += (((i9 * f) + by1) - Test0754.instanceCount);
            i8 = (int) Test0754.instanceCount;
            i11 = 1;
            while (++i11 < 5) {
                l1 += i6;
                for (i12 = 1; i12 < 1; i12++) {
                    try {
                        i10 = (i11 / -33);
                        i13 = (i9 / -78);
                        i10 = (-945769478 / iArr1[(i10 >>> 1) % N]);
                    } catch (ArithmeticException a_e) {}
                    switch (((i7 >>> 1) % 5) + 28) {
                    case 28:
                        i10 -= (int) Test0754.dFld;
                        break;
                    case 29:
                        i8 += (i12 - Test0754.iFld);
                        break;
                    case 30:
                        l1 = i11;
                        iArr1 = iArr2;
                        i6 = i8;
                        break;
                    case 31:
                        f1 = i6;
                        break;
                    case 32:
                        s += (short)i12;
                        break;
                    }
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + l1 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 +
            Float.floatToIntBits(f1) + s + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(long l, int i5, byte by) {

        int i14=0;
        int i15=-183;
        int i16=35611;
        int i17=-13;
        int i18=-111;
        int i19=4;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, 110);

        try {
            vMeth2(0.675F, 415805914217927002L, Test0754.iFld);
            for (i14 = 8; i14 < 287; ++i14) {
                if (i15 != 0) {
                    vMeth1_check_sum += l + i5 + by + i14 + i15 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr3);
                    return;
                }
                Test0754.iFld = Test0754.sFld;
                Test0754.iFld = (int) Test0754.fFld;
            }
            i16 = 216;
            while ((i16 -= 3) > 0) {
                i15 -= (int)-35.55380;
            }
            l = Test0754.iFld;
            for (i17 = 14; 372 > i17; ++i17) {
                i5 -= (int) Test0754.dFld;
            }
        }
        catch (NullPointerException exc1) {
            Test0754.instanceCount += i16;
            i19 = 1;
            while (++i19 < 398) {
                iArr3[i19 + 1] <<= i16;
                iArr3[i19] = Test0754.sFld;
            }
        }
        vMeth1_check_sum += l + i5 + by + i14 + i15 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr3);
    }

    public void vMeth(int i4) {

        byte by2=-69;
        int i20=11, i21=4, i22=183, i23=-112;

        vMeth1(Test0754.instanceCount, Test0754.iFld, by2);
        Test0754.dFld -= Test0754.instanceCount;
        i4 *= i4;
        Test0754.iArrFld[(Test0754.iFld >>> 1) % N] = 65000;
        i4 -= Test0754.iFld;
        Test0754.iFld >>= -58;
        for (i20 = 4; 177 > i20; i20 += 3) {
            i21 <<= (int) Test0754.instanceCount;
            Test0754.iFld += (((i20 * Test0754.instanceCount) + Test0754.fFld) - Test0754.instanceCount);
        }
        Test0754.iFld = (int) Test0754.instanceCount;
        Test0754.fFld = Test0754.iFld;
        for (i22 = 6; 130 > i22; i22 += 2) {
            Test0754.lArrFld[i22 - 1] %= (Test0754.instanceCount | 1);
            i23 += (i22 * i22);
            i4 += (int)2959690751L;
        }
        vMeth_check_sum += i4 + by2 + i20 + i21 + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i=-149;
        int i1=45;
        int i2=-5;
        int i3=-42846;
        int i24=11;
        int i25=8116;
        int i26=-12;
        int i27=-127;
        int i28=-131;
        int i29=3514;
        int i30=19945;
        int[] iArr =new int[N];
        float f2=-1.815F;
        boolean b=true;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(iArr, -137);
        FuzzerUtils.init(sArr, (short)-18463);

        for (i = 7; i < 136; i += 3) {
            Test0754.fFld += (12 + (i * i));
            iArr = (iArr = iArr);
        }
        for (i2 = 5; i2 < 250; i2++) {
            i1 += (int) (((i - i2) - iArr[i2]) + (Test0754.instanceCount * (i2 * i3)));
            Test0754.fFld *= (Test0754.lArrFld[i2 + 1] + Test0754.lArrFld[i2]);
            vMeth(i3);
        }
        Test0754.byArrFld[(i3 >>> 1) % N] -= (byte) -208L;
        i1 *= (int)2.112370;
        for (i24 = 8; i24 < 214; i24++) {
            for (i26 = 6; i26 < 122; i26++) {
                i1 = Test0754.iFld;
                Test0754.dFld = i26;
                i25 += (i26 ^ i27);
                Test0754.instanceCount += (((i26 * Test0754.instanceCount) + i) - Test0754.sFld);
                Test0754.instanceCount <<= i2;
                Test0754.iArrFld[(i27 >>> 1) % N] >>>= i3;
            }
            i27 = i24;
            for (f2 = i24; f2 < 122; f2++) {
                i1 -= (int) Test0754.dFld;
                Test0754.instanceCount >>= -194;
                sArr[i24 + 1][(int) (f2 + 1)] += Test0754.sFld;
                for (i29 = 1; 1 > i29; ++i29) {
                    b = b;
                    i28 += 0;
                    i28 *= i2;
                    if (b) continue;
                    Test0754.instanceCount += (i29 * i29);
                    Test0754.fFld += (i29 - Test0754.instanceCount);
                    if (b) continue;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i24 i25 = " + i3 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 f2 = " + i26 + "," + i27 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("b iArr sArr = " + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0754.instanceCount Test0754.fFld Test0754.dFld = " + Test0754.instanceCount + "," +
                Float.floatToIntBits(Test0754.fFld) + "," + Double.doubleToLongBits(Test0754.dFld));
        FuzzerUtils.out.println("Test0754.iFld Test0754.sFld Test0754.lArrFld = " + Test0754.iFld + "," + Test0754.sFld + "," +
                FuzzerUtils.checkSum(Test0754.lArrFld));
        FuzzerUtils.out.println("Test0754.iArrFld Test0754.byArrFld = " + FuzzerUtils.checkSum(Test0754.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0754.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0754 _instance = new Test0754();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
