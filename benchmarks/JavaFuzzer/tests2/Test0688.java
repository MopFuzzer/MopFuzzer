// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0688 {

    public static final int N = 400;

    public static long instanceCount=2357927953L;
    public static volatile short sFld=-28851;
    public static int iFld=38244;
    public static int iFld1=-62;
    public boolean bFld=true;
    public int[] iArrFld =new int[N];
    public static int[] iArrFld1 =new int[N];
    public byte[] byArrFld =new byte[N];
    public volatile float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0688.iArrFld1, -12);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=38728, i9=-28720, i10=-25520, i11=-11, i12=53932, i13=40771, i14=47922;
        double d1=-107.34762;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-123);

        i8 = -2;
        for (i9 = 20; i9 < 388; ++i9) {
            try {
                i8 = (i8 % i10);
                Test0688.iArrFld1[i9 - 1] = (i9 % Test0688.iArrFld1[i9 - 1]);
                i10 = (Test0688.iArrFld1[i9 - 1] % -1609974529);
            } catch (ArithmeticException a_e) {}
            i8 += i9;
        }
        Test0688.iArrFld1[(i9 >>> 1) % N] -= i9;
        for (i11 = 9; i11 < 196; ++i11) {
            Test0688.instanceCount += (long) d1;
            i12 += (i11 - i11);
        }
        Test0688.iArrFld1[(i12 >>> 1) % N] = i8;
        Test0688.instanceCount *= i9;
        byArr[(i11 >>> 1) % N] = (byte)-10;
        Test0688.iArrFld1 = Test0688.iArrFld1;
        for (i13 = 11; i13 < 180; i13++) {
            i14 >>= (int) Test0688.instanceCount;
            i12 <<= (int) Test0688.instanceCount;
        }
        vMeth2_check_sum += i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(int i5) {

        int i6=5, i7=43123, i15=41, i16=1, i17=-13;
        long l1=20L;
        float f1=1.748F;
        boolean b=false;
        short[] sArr =new short[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(sArr, (short)9347);
        FuzzerUtils.init(dArr, -2.127172);

        for (i6 = 1; i6 < 356; ++i6) {
            l1 = 5;
            do {
                sArr[(int) (l1)] >>= (short) ((Test0688.instanceCount * (i5 * i5)) * (-88 * (--i7)));
                i7 ^= (i5--);
            } while (--l1 > 0);
        }
        vMeth2();
        for (i15 = 11; i15 < 182; i15 += 3) {
            dArr[i15 - 1] -= i5;
            Test0688.sFld = (short) l1;
            if (b) {
                i7 += i15;
                f1 += Test0688.instanceCount;
                Test0688.instanceCount = i5;
            } else if (true) {
                i17 %= (int)((long)(f1) | 1);
            }
            i17 += (i15 * i15);
            Test0688.iArrFld1[i15 + 1] *= i17;
        }
        vMeth1_check_sum += i5 + i6 + i7 + l1 + i15 + i16 + Float.floatToIntBits(f1) + i17 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(short s, long l) {

        int i18=7, i19=-39577, i20=12;
        boolean b1=true;

        vMeth1(5);
        if (b1) {
            i18 -= i18;
        } else if (true) {
            Test0688.iArrFld1[(i18 >>> 1) % N] += i18;
        } else if (b1) {
            for (i19 = 8; i19 < 192; ++i19) {
                if (false) continue;
                i20 += (((i19 * i18) + i18) - i20);
                i18 += (((i19 * i18) + Test0688.iFld) - l);
                i18 *= i18;
            }
            Test0688.instanceCount *= i19;
            Test0688.iFld = (int) 18L;
        } else {
            Test0688.iArrFld1[(i19 >>> 1) % N] -= i19;
            i20 = (int) Test0688.instanceCount;
            l *= Test0688.iFld;
        }
        Test0688.iFld = 24;
        vMeth_check_sum += s + l + i18 + i19 + i20 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f=-127.335F;
        int i=-13, i1=23376, i2=49897, i4=-87, i21=9, i22=-39265, i23=105, i24=-208, i25=632, i26=-84;
        double d=110.79230;
        double[] dArr1 =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 25165L);
        FuzzerUtils.init(dArr1, -94.125568);

        f -= iArrFld[(i >>> 1) % N];
        for (i1 = 4; 374 > i1; ++i1) {
            d += Test0688.instanceCount;
            iArrFld = (iArrFld = (iArrFld = (iArrFld = iArrFld)));
            i >>>= (--i2);
        }
        i4 = 1;
        while (++i4 < 309) {
            i = (int) ((long) ((Test0688.sFld * Test0688.instanceCount) - (57537 * (d + i2))) << 6);
            vMeth((short) (-11614), Test0688.instanceCount);
            Test0688.iFld += i4;
            byArrFld[i4 - 1] = (byte) Test0688.iFld1;
            bFld = bFld;
        }
        i21 = 1;
        do {
            Test0688.iArrFld1[i21 + 1] = (int) -240L;
            f -= (float)23.51646;
            Test0688.iFld += (i21 * i21);
            Test0688.iArrFld1[i21 - 1] <<= i21;
            if (false) continue;
            Test0688.instanceCount -= i1;
        } while (++i21 < 288);
        lArr[(-11572 >>> 1) % N] = i1;
        i >>= i2;
        for (i22 = 3; i22 < 127; i22++) {
            d = i1;
            i2 += (((i22 * i22) + Test0688.sFld) - Test0688.sFld);
        }
        dArr1[(i22 >>> 1) % N] -= Test0688.instanceCount;
        for (i24 = 7; 247 > i24; i24++) {
            i = (int)3721L;
            Test0688.iArrFld1[i24 - 1] -= (int) f;
            i26 = 1;
            do {
                fArrFld[(i22 >>> 1) % N] = 2L;
                Test0688.iFld >>= 74;
            } while (++i26 < 105);
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 d i4 = " + i2 + "," + Double.doubleToLongBits(d) + "," + i4);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("lArr dArr1 = " + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0688.instanceCount Test0688.sFld Test0688.iFld = " + Test0688.instanceCount + "," + Test0688.sFld +
                "," + Test0688.iFld);
        FuzzerUtils.out.println("Test0688.iFld1 bFld iArrFld = " + Test0688.iFld1 + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0688.iArrFld1 byArrFld fArrFld = " + FuzzerUtils.checkSum(Test0688.iArrFld1) + "," +
            FuzzerUtils.checkSum(byArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0688 _instance = new Test0688();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
