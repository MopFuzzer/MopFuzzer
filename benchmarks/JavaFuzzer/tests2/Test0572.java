// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0572 {

    public static final int N = 400;

    public static long instanceCount=-7546L;
    public static float fFld=-115.918F;
    public static int iFld=4;
    public static volatile float fFld1=-59.711F;
    public static double dFld=97.33930;
    public static long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0572.lArrFld, 5L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2() {

        int i5=24;
        int i6=-46870;
        int i7=-18332;
        int i8=243;
        int i9=36010;
        int[] iArr3 =new int[N];
        long l1=-3028141056729018080L;
        boolean b=false;

        FuzzerUtils.init(iArr3, -171);

        i5 = 1;
        while (++i5 < 394) {
            iArr3[i5 - 1] -= (int)16L;
            i6 += (118 + (i5 * i5));
            Test0572.fFld = i6;
            switch (((i5 >>> 1) % 1) + 47) {
            case 47:
                for (i7 = 1; 4 > i7; ++i7) {
                    for (l1 = 1; 2 > l1; ++l1) {
                        i8 -= i6;
                        iArr3[i5] = i7;
                        i6 += i9;
                        i6 -= (int)l1;
                        i9 = i8;
                        b = false;
                    }
                    iArr3 = FuzzerUtils.int1array(N, (int)-105);
                    i9 >>= i6;
                }
            default:
                i9 += (i5 - i5);
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + l1 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1() {

        int i2=-8;
        int i3=4;
        int i4=110;
        int i10=187;
        int i11=-11;
        int i12=42425;
        int i13=-2;
        int i14=0;
        int[] iArr2 =new int[N];
        long l2=2566462695L;
        double d=1.18580;

        FuzzerUtils.init(iArr2, 2878);

        iArr2[(i2 >>> 1) % N] >>= ((i2++) - iArr2[(i2 >>> 1) % N]);
        for (i3 = 9; 174 > i3; i3++) {
            Test0572.instanceCount += (((i3 * i4) + Test0572.instanceCount) - i4);
            i4 = iMeth2();
            i4 -= (int) Test0572.fFld;
        }
        for (i10 = 19; i10 < 319; i10++) {
            for (l2 = 1; 6 > l2; ++l2) {
                iArr2[(int)(l2 - 1)] = -38;
                for (i13 = 2; i13 > 1; --i13) {
                    byte by=-92;
                    d *= Test0572.instanceCount;
                    i12 += i13;
                    by = (byte) Test0572.instanceCount;
                    Test0572.iFld += (int) Test0572.fFld1;
                    i4 += i13;
                    by *= (byte) Test0572.instanceCount;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i10 + i11 + l2 + i12 + i13 + i14 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(long l, short s) {

        int i1=-4671;
        int i15=4423;
        int i16=-64321;
        int[] iArr1 =new int[N];
        boolean b1=false;
        float f2=2.992F;
        float[] fArr =new float[N];
        double d1=0.55398;

        FuzzerUtils.init(iArr1, 8466);
        FuzzerUtils.init(fArr, -2.72F);

        Test0572.lArrFld[(118 >>> 1) % N][(i1 >>> 1) % N] += i1;
        l ^= ((Math.max(i1, i1) + iArr1[(i1 >>> 1) % N]) * (i1--));
        for (float f1 : fArr) {
            i1 *= (int)(((++l) + (27078 + i1)) + ((f1 + l) + (i1++)));
            i1 = (int)Long.reverseBytes(--l);
            i1 = (int)(Math.abs(31) * ((-iMeth1()) + l));
            b1 = b1;
            for (i15 = 1; i15 < 4; ++i15) {
                l *= (long)1.36214;
                iArr1[(Test0572.iFld >>> 1) % N] = i15;
                i16 += (i15 * Test0572.instanceCount);
                f2 = 1;
                while ((f2 += 3) < 2) {
                    Test0572.lArrFld[i15 - 1] = Test0572.lArrFld[i15];
                    Test0572.lArrFld[(int) (f2 + 1)][(int) (f2 - 1)] += Test0572.iFld;
                    d1 = Test0572.fFld1;
                }
            }
        }
        long meth_res = l + s + i1 + (b1 ? 1 : 0) + i15 + i16 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1)
            + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=14;
        int i17=-191;
        int i18=224;
        int i19=-104;
        int i20=5;
        int i21=21222;
        int i22=13981;
        int i23=4;
        int i24=-10;
        int i25=8;
        int i26=-236;
        int[] iArr =new
                    int[N];
        float f=1.614F;
        float[] fArr1 =new float[N];
        byte by1=-54, by2=52;

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(fArr1, -2.361F);

        i ^= (int)((++f) + (iArr[(i >>> 1) % N]++));
        i = Math.max(iMeth(-10L, (short)(-14695)), i);
        for (i17 = 12; i17 < 279; i17++) {
            fArr1[i17 - 1] -= Test0572.fFld;
            Test0572.instanceCount = Test0572.instanceCount;
            i *= i17;
            for (i19 = 1; i19 < 94; i19++) {
                i = (int) Test0572.dFld;
                iArr[i17 - 1] = 14277;
                iArr[i17 + 1] += i17;
                iArr[i19] -= Test0572.iFld;
                i21 = 1;
                while (++i21 < 2) {
                    fArr1[i17] -= i19;
                }
            }
            for (i22 = 4; i22 < 94; i22++) {
                Test0572.instanceCount -= by1;
            }
            i23 -= i18;
            i24 = 94;
            while (--i24 > 0) {
                Test0572.instanceCount = (long) Test0572.dFld;
                for (i25 = 1; i25 < 1; ++i25) {
                    i23 = (int) Test0572.instanceCount;
                    iArr = iArr;
                    switch ((i17 % 5) + 118) {
                    case 118:
                        Test0572.iFld -= by1;
                        i18 = i19;
                        i20 += (i25 * i25);
                        switch (((i17 % 2) * 5) + 126) {
                        case 127:
                            Test0572.iFld = -27624;
                            break;
                        case 132:
                            i20 += 79;
                            break;
                        default:
                            i26 *= (int) Test0572.instanceCount;
                        }
                        break;
                    case 119:
                    case 120:
                        i18 = i24;
                        break;
                    case 121:
                        Test0572.instanceCount += 12;
                        break;
                    case 122:
                        by2 -= (byte) Test0572.instanceCount;
                        break;
                    default:
                        Test0572.instanceCount -= (long) 1.890F;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f i17 = " + i + "," + Float.floatToIntBits(f) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("by1 i24 i25 = " + by1 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 by2 iArr = " + i26 + "," + by2 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0572.instanceCount Test0572.fFld Test0572.iFld = " + Test0572.instanceCount + "," +
                Float.floatToIntBits(Test0572.fFld) + "," + Test0572.iFld);
        FuzzerUtils.out.println("Test0572.fFld1 Test0572.dFld Test0572.lArrFld = " + Float.floatToIntBits(Test0572.fFld1) + "," +
                Double.doubleToLongBits(Test0572.dFld) + "," + FuzzerUtils.checkSum(Test0572.lArrFld));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0572 _instance = new Test0572();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
