// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0552 {

    public static final int N = 400;

    public static long instanceCount=-1453407088770207955L;
    public static float fFld=100.716F;
    public static boolean bFld=false;
    public double dFld=6.104913;
    public static boolean[][] bArrFld =new boolean[N][N];

    static {
        FuzzerUtils.init(Test0552.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(boolean b) {

        int i7=-2;
        int i8=25890;
        int i9=-198;
        int[] iArr1 =new int[N];
        byte by=-31;
        double d1=-1.101851;
        boolean b1=true;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.85F);
        FuzzerUtils.init(iArr1, 7);

        if (true) {
            i7 = 1;
            do {
                if (b1) {
                    for (i8 = 1; i8 < 5; ++i8) {
                        by = (byte)i7;
                        i9 += (13 + (i8 * i8));
                        Test0552.instanceCount += (((i8 * Test0552.instanceCount) + i8) - i7);
                        d1 = -11;
                        i9 >>>= i9;
                        i9 += i8;
                        Test0552.fFld = Test0552.fFld;
                        i9 += (i8 ^ Test0552.instanceCount);
                        Test0552.bArrFld[i8 + 1][i8] = b1;
                    }
                    i9 &= 4;
                    fArr[i7] += i7;
                } else if (b1) {
                    Test0552.fFld += (i7 - i7);
                } else if (b) {
                    iArr1[i7] -= (int) Test0552.instanceCount;
                }
            } while (++i7 < 356);
        } else {
            i9 = (int) Test0552.instanceCount;
        }
        vMeth2_check_sum += (b ? 1 : 0) + i7 + i8 + i9 + by + Double.doubleToLongBits(d1) + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i2, double d, int i3) {

        int i4=153;
        int i5=-57047;
        int i6=-23000;
        int i10=244;
        int i11=-211;
        int i12=-65491;
        int i13=-52445;
        int[] iArr =new int[N];
        boolean b2=false;

        FuzzerUtils.init(iArr, 55661);

        Test0552.instanceCount = (long) (d--);
        for (i4 = 279; i4 > 2; i4 -= 2) {
            try {
                iArr[i4 + 1] = (-9381 % i4);
                i6 = (i6 % 53854);
                i2 = (i5 / i2);
            } catch (ArithmeticException a_e) {}
            vMeth2(true);
            iArr[i4] += i5;
            for (i10 = 1; i10 < 11; ++i10) {
                if (b2) {
                    iArr[(i10 >>> 1) % N] = i6;
                    Test0552.instanceCount ^= -17965L;
                } else if (b2) {
                    for (i12 = 2; i12 > 1; --i12) {
                        i3 >>= (int) Test0552.instanceCount;
                    }
                    switch ((i10 % 2) + 42) {
                    case 42:
                    case 43:
                        Test0552.instanceCount = i3;
                        Test0552.fFld -= i2;
                        d += Test0552.fFld;
                        break;
                    }
                } else if (b2) {
                    iArr[i10] += (int) Test0552.instanceCount;
                } else {
                    if (b2) continue;
                }
            }
        }
        vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i10 + i11 + i12 + i13 + (b2 ? 1 : 0)
            + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i1=20488;
        int i14=3;
        int i15=110;
        int i16=-4;
        int i17=-14;
        int[] iArr2 =new int[N];
        double d2=-77.46140;
        double[] dArr =new double[N];
        float f=96.500F;

        FuzzerUtils.init(dArr, 0.14524);
        FuzzerUtils.init(iArr2, 4353);

        i1 = 1;
        do {
            vMeth1(4468, d2, i1);
            dArr[i1 - 1] -= Test0552.instanceCount;
            for (i14 = 8; i14 > 1; i14--) {
                d2 += -4943766561039079604L;
                i15 -= -40;
            }
            iArr2[i1 + 1] = i14;
            iArr2[i1 - 1] = i14;
        } while (++i1 < 207);
        i16 = 206;
        do {
            Test0552.instanceCount |= i15;
            i15 = i16;
            i15 = i1;
            for (f = 1; f < 22; f++) {
                iArr2[(int)(f)] >>= i17;
            }
            if (Test0552.bFld) break;
        } while ((i16 -= 3) > 0);
        vMeth_check_sum += i1 + Double.doubleToLongBits(d2) + i14 + i15 + i16 + Float.floatToIntBits(f) + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-7;
        int i18=1;
        int i19=-9;
        int i20=-51450;
        int i21=0;
        int i22=95;
        int i23=-9;
        int[] iArr3 =new int[N];
        short s=30875;
        float[] fArr1 =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr3, 7);
        FuzzerUtils.init(fArr1, -126.213F);
        FuzzerUtils.init(lArr, 2832174783910100856L);

        Test0552.instanceCount = (i++);
        try {
            i = (int) Test0552.instanceCount;
            vMeth();
            i18 = 1;
            do {
                for (i19 = 78; i19 > 2; i19--) {
                    for (i21 = i18; 2 > i21; ++i21) {
                        i = (int) Test0552.instanceCount;
                        if (Test0552.bFld) {
                            Test0552.instanceCount = i19;
                            switch (((i21 % 2) * 5) + 49) {
                            case 54:
                                iArr3[i19 + 1] ^= i18;
                                if (Test0552.bFld) continue;
                                i = (int)1L;
                                break;
                            case 55:
                                i22 = i18;
                                i20 += (int)dFld;
                                i22 += i18;
                                i22 = i22;
                            default:
                                i -= i21;
                                i |= (int) Test0552.instanceCount;
                                i22 -= i19;
                                fArr1[i18 + 1] = Test0552.fFld;
                            }
                            i = (int) Test0552.instanceCount;
                        } else if (Test0552.bFld) {
                            iArr3[i18 + 1] = (int)-61376L;
                        }
                        i22 += i21;
                    }
                    i23 = 1;
                    do {
                        i = (int) Test0552.fFld;
                        lArr = lArr;
                        s *= (short)8L;
                        i20 += i;
                    } while (++i23 < 2);
                }
            } while (++i18 < 323);
        }
        catch (NullPointerException exc1) {
            iArr3[(i23 >>> 1) % N] = -64;
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 s iArr3 = " + i23 + "," + s + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("fArr1 lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0552.instanceCount Test0552.fFld Test0552.bFld = " + Test0552.instanceCount + "," +
                Float.floatToIntBits(Test0552.fFld) + "," + (Test0552.bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld Test0552.bArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0552.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0552 _instance = new Test0552();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
