// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0962 {

    public static final int N = 400;

    public static long instanceCount=-53475L;
    public static byte byFld=-33;
    public int iFld=158;
    public static int iFld1=21429;
    public float fFld=125.375F;
    public static float[] fArrFld =new float[N];
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0962.fArrFld, -62.838F);
        FuzzerUtils.init(Test0962.lArrFld, -6L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth(int i2) {

        short s=-15115, s1=-28203;
        double d=44.56087;
        int i3=-4, i4=-13053;

        Test0962.instanceCount -= (long) (s - (d++));
        for (i3 = 15; i3 < 346; i3++) {
            i4 *= (--i4);
        }
        Test0962.instanceCount = ((8L + (s1 + i4)) - i2);
        vMeth_check_sum += i2 + s + Double.doubleToLongBits(d) + i3 + i4 + s1;
    }

    public static long lMeth(int i5, int i6) {

        int i7=9635;
        int i8=16099;
        int i9=16411;
        int i10=118;
        int i11=-1;
        int[] iArr =new int[N];
        float f1=2.799F;
        short s2=-15369;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -144L);
        FuzzerUtils.init(iArr, 11);

        lArr[(i5 >>> 1) % N] = (lArr[(i5 >>> 1) % N] -= 0L);
        vMeth(i6);
        i7 = 330;
        while (--i7 > 0) {
            f1 = i5;
        }
        Test0962.fArrFld[(12 >>> 1) % N] -= -64406;
        i5 -= i7;
        i5 += (int)2847925114255622089L;
        i6 = -215;
        for (i8 = 3; i8 < 140; i8++) {
            i6 = i8;
            f1 += (i8 - Test0962.instanceCount);
            Test0962.instanceCount = s2;
            for (i10 = 1; i10 < 11; ++i10) {
                iArr[i8 + 1] -= (int) Test0962.instanceCount;
                i9 -= (int)6L;
            }
        }
        long meth_res = i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + s2 + i10 + i11 + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i, long l, int i1) {

        float f=-102.659F;
        short s3=9944;
        int i12=-15189;
        int i13=30271;
        int i14=137;
        int i15=246;
        int i16=3;
        int i17=-3;
        int i18=-6;
        int i19=-9;
        int[] iArr1 =new int[N];
        double d1=0.120619;

        FuzzerUtils.init(iArr1, -7);

        vMeth(i1);
        f += lMeth(i1, -41452);
        i &= s3;
        f = f;
        for (i12 = 18; 325 > i12; ++i12) {
            f = s3;
            iArr1[i12] *= (int)f;
            iArr1[i12] -= 23171;
        }
        for (i14 = 13; i14 < 237; ++i14) {
            i1 = i1;
            Test0962.instanceCount -= i15;
            for (i16 = i14; i16 < 7; i16++) {
                for (i18 = 1; i18 < 1; i18++) {
                    Test0962.byFld *= (byte) d1;
                    s3 >>= (short)i17;
                }
            }
        }
        long meth_res = i + l + i1 + Float.floatToIntBits(f) + s3 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i20=1;
        int i21=6870;
        int i22=-14615;
        int i23=6071;
        int i24=-13;
        int i25=28955;
        int i26=187;
        int[] iArr2 =new int[N];
        short s4=12412;
        boolean b=false;

        FuzzerUtils.init(iArr2, -45833);

        iMeth(iFld, Test0962.instanceCount, iFld);
        iArr2[(iFld >>> 1) % N] -= (int) Test0962.instanceCount;
        iArr2[(47530 >>> 1) % N] += iFld;
        iFld = iFld;
        iFld += (int) Test0962.instanceCount;
        i20 = 1;
        while (++i20 < 270) {
            iFld -= iFld;
            for (i21 = 4; i21 < 93; i21++) {
                Test0962.lArrFld[i20] = i20;
                iFld += (((i21 * Test0962.iFld1) + fFld) - iFld);
                Test0962.iFld1 += s4;
                iArr2[i21] *= (int)3L;
                switch (((i21 % 3) * 5) + 71) {
                case 82:
                    Test0962.instanceCount = (long) fFld;
                    i22 += -20;
                    fFld += (i21 * i21);
                    break;
                case 83:
                    iArr2[i20 + 1] = (int)fFld;
                    i22 <<= (int) Test0962.instanceCount;
                    b = b;
                    for (i23 = 1; i23 < 2; ++i23) {
                        Test0962.iFld1 *= Test0962.iFld1;
                        Test0962.lArrFld = FuzzerUtils.long1array(N, (long) 10L);
                        Test0962.lArrFld[i20 + 1] >>= i21;
                    }
                    break;
                case 72:
                    Test0962.instanceCount += (((i21 * Test0962.instanceCount) + i25) - fFld);
                    Test0962.iFld1 += (int) Test0962.instanceCount;
                    iArr2[i20 + 1] = s4;
                }
                Test0962.iFld1 -= 8805;
            }
            i26 = 93;
            do {
                b = b;
                iFld += Test0962.iFld1;
            } while (--i26 > 0);
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("s4 b i23 = " + s4 + "," + (b ? 1 : 0) + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0962.instanceCount Test0962.byFld iFld = " + Test0962.instanceCount + "," + Test0962.byFld + "," +
            iFld);
        FuzzerUtils.out.println("Test0962.iFld1 fFld Test0962.fArrFld = " + Test0962.iFld1 + "," + Float.floatToIntBits(fFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0962.fArrFld)));
        FuzzerUtils.out.println("Test0962.lArrFld = " + FuzzerUtils.checkSum(Test0962.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0962 _instance = new Test0962();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
