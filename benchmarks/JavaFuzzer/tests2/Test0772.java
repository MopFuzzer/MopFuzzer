// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:48 2023
public class Test0772 {

    public static final int N = 400;

    public static long instanceCount=62L;
    public static float fFld=0.808F;
    public static float fFld1=-16.418F;
    public static boolean bFld=false;
    public static double dFld=111.116068;
    public volatile int iFld=-6;
    public static double[] dArrFld =new double[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0772.dArrFld, -16.127968);
        FuzzerUtils.init(Test0772.iArrFld, 63119);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(boolean b, float f1, int i3) {

        int i4=13555, i5=0, i6=-8, i7=-20327, i8=152, i9=128;
        short s=25926;
        byte[] byArr =new byte[N];
        float[] fArr =new float[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(byArr, (byte)37);
        FuzzerUtils.init(fArr, 1.362F);
        FuzzerUtils.init(lArr, -789927133477780128L);

        for (byte by : byArr) {
            for (i4 = 4; i4 > 1; --i4) {
                Test0772.instanceCount = 36738;
                for (i6 = 1; i6 < 2; i6++) {
                    i5 -= (int) Test0772.instanceCount;
                    Test0772.instanceCount += (((i6 * i5) + i5) - i7);
                    Test0772.instanceCount += i6;
                    i3 ^= (int)12L;
                    i3 += i3;
                }
                for (i8 = 1; i8 < 2; i8++) {
                    f1 -= s;
                    fArr[i8 + 1] -= Test0772.instanceCount;
                    Test0772.instanceCount *= i5;
                }
                i5 += (i4 ^ Test0772.instanceCount);
                lArr[i4 + 1][i4 - 1] = i9;
            }
        }
        long meth_res = (b ? 1 : 0) + Float.floatToIntBits(f1) + i3 + i4 + i5 + i6 + i7 + i8 + i9 + s +
            FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i1) {

        int i2=-6;
        int i10=10;
        int i11=79;
        int i12=-11;
        int i13=-9;
        int[] iArr =new int[N];
        long l=7L;
        boolean b1=false;

        FuzzerUtils.init(iArr, 200);

        iArr[(i1 >>> 1) % N] -= (--i1);
        i2 = 1;
        do {
            lMeth(false, Test0772.fFld, i1);
            iArr[i2] -= i1;
            i10 = 1;
            while (++i10 < 11) {
                Test0772.fFld1 += (((i10 * i2) + i1) - i1);
                for (l = 1; l < 1; l++) {
                    Test0772.fFld -= i2;
                }
                if (b1) continue;
                for (i12 = i2; i12 < 1; i12++) {
                    i13 += i12;
                    Test0772.instanceCount >>= i13;
                    i11 >>= i10;
                    i1 = i12;
                    i13 &= i2;
                }
            }
        } while (++i2 < 138);
        vMeth1_check_sum += i1 + i2 + i10 + l + i11 + (b1 ? 1 : 0) + i12 + i13 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i14=2;
        int i15=26197;
        int i16=1300;
        int i17=170;
        int i18=4;
        int i19=19392;
        int[] iArr1 =new int[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 2.626F);
        FuzzerUtils.init(iArr1, -124);

        vMeth1(i14);
        i15 = 1;
        do {
            fArr1 = fArr1;
            for (i16 = 1; i16 < 6; ++i16) {
                i14 += (i16 | i15);
                Test0772.instanceCount = i14;
                try {
                    i17 = (i14 % 48845);
                    i14 = (i15 / iArr1[i16]);
                    iArr1[i16] = (i16 % 247);
                } catch (ArithmeticException a_e) {}
                Test0772.instanceCount *= i14;
                iArr1[i16] = (int) Test0772.fFld1;
                iArr1 = FuzzerUtils.int1array(N, (int)-32636);
                for (i18 = 2; i18 > 1; i18--) {
                    if (Test0772.bFld) break;
                    Test0772.instanceCount = -30;
                    i19 += i17;
                    i19 = i18;
                }
            }
        } while (++i15 < 278);
        vMeth_check_sum += i14 + i15 + i16 + i17 + i18 + i19 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=54364, i20=58932, i21=7514, i22=59392, i23=-40861, i24=-195, i25=-14037, i26=118, i27=-64274, i28=9,
            i29=-134;
        float f=-94.916F;
        byte by1=-72;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 4L);

        i = (i++);
        i += (int)((--i) * (f--));
        vMeth();
        i -= i;
        i -= i;
        for (i20 = 9; 163 > i20; ++i20) {
            for (i22 = 5; i22 < 163; i22++) {
                double d=-2.59119;
                i >>>= i22;
                d = i;
            }
            i23 = i24;
            i23 += i20;
            Test0772.dArrFld[i20 - 1] = Test0772.instanceCount;
        }
        for (i25 = 6; i25 < 288; ++i25) {
            Test0772.iArrFld[i25] = i26;
        }
        lArr1[(i23 >>> 1) % N] -= i21;
        lArr1[(i26 >>> 1) % N] += i20;
        for (long l1 : lArr1) {
            switch ((((i23 >>> 1) % 2) * 5) + 15) {
            case 18:
                Test0772.iArrFld[(i21 >>> 1) % N] -= (int) l1;
                i |= (int) Test0772.instanceCount;
                Test0772.iArrFld[(i20 >>> 1) % N] *= (int) Test0772.dFld;
                break;
            case 23:
                if (Test0772.bFld) {
                    i24 -= i24;
                    i27 = 1;
                    while (++i27 < 63) {
                        for (i28 = 1; i27 < i28; --i28) {
                            try {
                                Test0772.iArrFld[i27 + 1] = (-1208054811 / i29);
                                i23 = (i28 % -187);
                                i26 = (Test0772.iArrFld[i27 - 1] / i22);
                            } catch (ArithmeticException a_e) {}
                            Test0772.instanceCount <<= l1;
                            Test0772.instanceCount += i24;
                            i21 = (int) Test0772.instanceCount;
                            Test0772.fFld1 = -33768;
                        }
                    }
                } else if (Test0772.bFld) {
                    i29 += (int)l1;
                } else {
                    Test0772.iArrFld[(iFld >>> 1) % N] += i21;
                }
                break;
            default:
                i *= by1;
            }
        }

        FuzzerUtils.out.println("i f i20 = " + i + "," + Float.floatToIntBits(f) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("by1 lArr1 = " + by1 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0772.instanceCount Test0772.fFld Test0772.fFld1 = " + Test0772.instanceCount + "," +
                Float.floatToIntBits(Test0772.fFld) + "," + Float.floatToIntBits(Test0772.fFld1));
        FuzzerUtils.out.println("Test0772.bFld Test0772.dFld iFld = " + (Test0772.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0772.dFld) + "," + iFld);
        FuzzerUtils.out.println("Test0772.dArrFld Test0772.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0772.dArrFld)) + "," + FuzzerUtils.checkSum(Test0772.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0772 _instance = new Test0772();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
