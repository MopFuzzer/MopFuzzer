// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0097 {

    public static final int N = 400;

    public static long instanceCount=-1030647699649407287L;
    public byte byFld=-13;
    public double dFld=-9.17541;
    public boolean bFld=true;
    public static float fFld=0.625F;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0097.lArrFld, 205L);
        FuzzerUtils.init(Test0097.iArrFld, -32200);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l, long l1, int i6) {

        float f2=0.104F;
        int i7=11;
        int i8=-203;
        int i9=213;
        int i10=-13;
        int i11=-254;
        int[] iArr1 =new int[N];
        short s2=-15290;
        long l2=5920937169591495118L;
        double d2=109.82051;

        FuzzerUtils.init(iArr1, 13170);

        f2 *= (float)-118.19709;
        for (i7 = 8; i7 < 254; i7 += 3) {
            iArr1[i7 + 1] >>= s2;
            iArr1[i7 - 1] += (int)f2;
            for (l2 = 19; l2 > 1; l2--) {
                s2 = (short)i6;
                i6 += (int)l2;
                iArr1 = iArr1;
                for (i10 = 1; 2 > i10; ++i10) {
                    iArr1[i7 - 1] |= i8;
                    i11 >>= i8;
                    l = s2;
                    i11 += (i10 + l2);
                    iArr1[(int)(l2)] >>= (int)-27848L;
                    d2 -= -72;
                }
            }
        }
        long meth_res = l + l1 + i6 + Float.floatToIntBits(f2) + i7 + i8 + s2 + l2 + i9 + i10 + i11 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4, int i5, short s1) {

        float f=112.686F, f1=0.781F;
        double d1=0.65265;
        int i12=-162;
        int i13=46326;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -10454);

        f -= i5;
        iArr[(i5 >>> 1) % N] = (int) (((i5--) + (i4 * Test0097.instanceCount)) - ((i4 + d1) + (d1 - Test0097.instanceCount)));
        f1 = 1;
        do {
            i5 = (-(--i4));
            i4 += (i5++);
            i5 = (++i5);
            i4 = i5;
            iMeth1(Test0097.instanceCount, -20402L, i4);
            f += i4;
            i4 = i5;
            for (i12 = 1; i12 < 5; i12++) {
                Test0097.lArrFld[(int) (f1)] *= -10;
                i4 += (int) Test0097.instanceCount;
                if (i5 != 0) {
                    vMeth_check_sum += i4 + i5 + s1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) +
                        Float.floatToIntBits(f1) + i12 + i13 + FuzzerUtils.checkSum(iArr);
                    return;
                }
            }
            iArr[(int)(f1)] <<= i5;
        } while (++f1 < 308);
        vMeth_check_sum += i4 + i5 + s1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1) + i12 + i13 + FuzzerUtils.checkSum(iArr);
    }

    public int iMeth(int i1) {

        double d=-50.94971, d3=-1.59956;
        short s=19202;
        int i2=-25449, i3=8, i14=33670;

        i1 -= (int)(d + ((i1 * 5) - (s + d)));
        for (i2 = 11; i2 < 367; ++i2) {
            vMeth(i2, i3, s);
            Test0097.iArrFld[(i2 >>> 1) % N] += 48089;
            d3 = 1;
            while (++d3 < 5) {
                i1 += (int)(((d3 * i2) + i3) - i1);
                i3 /= -12786;
                i3 <<= i1;
                switch ((i2 % 2) + 58) {
                case 58:
                    i3 = i1;
                    i14 = 1;
                    while (++i14 < 1) {
                        d += 63;
                        i3 = i1;
                        d -= i2;
                        Test0097.instanceCount = i14;
                    }
                    break;
                case 59:
                    Test0097.instanceCount += (long) d3;
                }
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + s + i2 + i3 + Double.doubleToLongBits(d3) + i14;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i15=4, i16=9, i17=-240, i18=253, i19=-44370, i20=-204;
        short s3=14738;
        short[] sArr =new short[N];
        double d4=2.44598;
        float[] fArr =new float[N];

        FuzzerUtils.init(sArr, (short)-16862);
        FuzzerUtils.init(fArr, -48.738F);

        sArr[(-157 >>> 1) % N] -= (short)(--byFld);
        i = 1;
        while (++i < 227) {
            Test0097.instanceCount >>= iMeth(i);
            for (i15 = 5; i15 < 111; i15++) {
                Test0097.instanceCount *= i15;
                Test0097.lArrFld[i15] -= (long) dFld;
                Test0097.instanceCount += (i15 * i15);
                Test0097.iArrFld[i15 - 1] = i15;
            }
            fArr[i] *= i15;
        }
        for (i17 = 372; i17 > 13; i17 -= 2) {
            dFld -= Test0097.instanceCount;
            switch (((i18 >>> 1) % 9) + 86) {
            case 86:
                i16 += (i17 | Test0097.instanceCount);
                bFld = bFld;
                Test0097.iArrFld[i17] *= (int) Test0097.instanceCount;
                s3 *= (short)i16;
                break;
            case 87:
                i18 >>= i17;
                break;
            case 88:
                for (d4 = i17; d4 < 140; ++d4) {
                    i19 += (int)(d4 * i17);
                    i20 = 1;
                    while ((i20 -= 2) > 0) {
                        dFld += Test0097.fFld;
                        dFld = byFld;
                        i16 = (int) Test0097.fFld;
                        if (bFld) {
                            if (bFld) {
                                i16 *= 23934;
                                Test0097.instanceCount *= Test0097.instanceCount;
                                i16 = i16;
                                i16 += (((i20 * i16) + i19) - i19);
                            } else {
                                Test0097.fFld += i20;
                            }
                        } else if (bFld) {
                            Test0097.instanceCount *= 213;
                        } else {
                            i16 >>= -10;
                        }
                    }
                }
                break;
            case 89:
                if (bFld) continue;
            case 90:
                i16 = i18;
                break;
            case 91:
                bFld = bFld;
                break;
            case 92:
                Test0097.instanceCount = s3;
            case 93:
                i19 >>= i17;
                break;
            case 94:
                s3 = byFld;
            }
        }

        FuzzerUtils.out.println("i i15 i16 = " + i + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 s3 = " + i17 + "," + i18 + "," + s3);
        FuzzerUtils.out.println("d4 i19 i20 = " + Double.doubleToLongBits(d4) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("sArr fArr = " + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0097.instanceCount byFld dFld = " + Test0097.instanceCount + "," + byFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("bFld Test0097.fFld Test0097.lArrFld = " + (bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0097.fFld) + "," + FuzzerUtils.checkSum(Test0097.lArrFld));
        FuzzerUtils.out.println("Test0097.iArrFld = " + FuzzerUtils.checkSum(Test0097.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0097 _instance = new Test0097();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
