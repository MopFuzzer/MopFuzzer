// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0690 {

    public static final int N = 400;

    public static long instanceCount=-26709L;
    public static float fFld=119.801F;
    public static boolean bFld=false;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0690.iArrFld, 24);
        FuzzerUtils.init(Test0690.fArrFld, 2.919F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=2, i3=-12, i4=-6, i5=-7, i6=-159;
        float f1=-2.384F;
        double d=-1.1188;

        Test0690.instanceCount -= (long) -42.516F;
        for (i2 = 8; i2 < 171; i2++) {
            i4 = 10;
            do {
                Test0690.instanceCount |= Test0690.instanceCount;
                i3 *= (int)f1;
                for (i5 = 1; i5 < 1; i5++) {
                    i3 += 42951;
                    i6 = i2;
                    i6 = i2;
                    i3 = (int) Test0690.instanceCount;
                    i3 -= i3;
                    i6 <<= i6;
                }
                i6 += i4;
                d *= i4;
                Test0690.iArrFld[i4 - 1] = i4;
            } while (--i4 > 0);
        }
        vMeth2_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + Double.doubleToLongBits(d);
    }

    public static void vMeth1(int i1, float f) {

        int i7=13, i8=69, i9=-103, i10=2, i11=-25969, i12=2;
        short s=28401;
        double d1=67.30248;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -213L);

        Test0690.instanceCount *= (Test0690.iArrFld[(85 >>> 1) % N]--);
        vMeth2();
        for (i7 = 2; i7 < 384; i7++) {
            Test0690.instanceCount *= i1;
            s += (short)i7;
            Test0690.fArrFld[i7 - 1] *= (float) d1;
            lArr1[i7 - 1] &= Test0690.instanceCount;
            for (i9 = 1; i9 < 4; i9++) {
                for (i11 = 1; i11 < 2; ++i11) {
                    Test0690.iArrFld[i7] = (int) d1;
                }
                Test0690.fArrFld[i9 - 1] = Test0690.instanceCount;
                i10 = i1;
                i8 = -182;
                i10 = i9;
                i1 -= i9;
            }
        }
        vMeth1_check_sum += i1 + Float.floatToIntBits(f) + i7 + i8 + s + Double.doubleToLongBits(d1) + i9 + i10 + i11 +
            i12 + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        int i=-34776, i13=14, i14=2, i15=1, i16=4, i17=29778;
        double d2=2.52141;
        byte by=34;
        boolean b=true;
        short s1=-32270;
        short[] sArr =new short[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 1295943923L);
        FuzzerUtils.init(sArr, (short)7171);

        lArr[(i >>> 1) % N] ^= (i = i);
        i = sArr[(i >>> 1) % N];
        vMeth1(i, -45.155F);
        for (i13 = 10; 163 > i13; i13 += 3) {
            d2 = Test0690.instanceCount;
        }
        i15 = 1;
        do {
            Test0690.instanceCount += (i15 + Test0690.instanceCount);
            try {
                i = (i14 % -55057);
                i = (Test0690.iArrFld[i15 + 1] / -142);
                i14 = (-65452 / Test0690.iArrFld[i15]);
            } catch (ArithmeticException a_e) {}
            by += (byte) (((i15 * Test0690.fFld) + i15) - Test0690.fFld);
        } while (++i15 < 255);
        for (i16 = 9; i16 < 308; ++i16) {
            Test0690.instanceCount += (i16 + i16);
            b = b;
            i *= (int) Test0690.instanceCount;
            Test0690.iArrFld[i16] <<= i13;
            s1 += (short)(i16 * i16);
        }
        vMeth_check_sum += i + i13 + i14 + Double.doubleToLongBits(d2) + i15 + by + i16 + i17 + (b ? 1 : 0) + s1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=-48, i19=-112, i20=13, i21=6, i22=190, i23=0, i24=4, i25=-35304, i26=6, i27=5, i28=191, i29=158;
        short s2=-1780;
        byte by1=-5;
        double d3=-53.55203;
        double d4=1.34739;
        double[] dArr =new double[N];
        long[] lArr2 =new long[N];

        FuzzerUtils.init(dArr, -1.28718);
        FuzzerUtils.init(lArr2, -2232000116298134605L);

        vMeth();
        for (i18 = 283; 2 < i18; i18 -= 2) {
            Test0690.fFld -= 199;
            Test0690.bFld = Test0690.bFld;
            Test0690.iArrFld[i18 + 1] += s2;
            i19 *= (int) Test0690.instanceCount;
            i19 ^= -3;
            for (i20 = 1; i20 < 179; i20++) {
                i21 = -11355;
            }
        }
        dArr[(i19 >>> 1) % N] -= Test0690.fFld;
        Test0690.fFld = Test0690.instanceCount;
        for (i22 = 4; i22 < 128; ++i22) {
            i21 -= by1;
            for (i24 = 11; i24 < 202; ++i24) {
                Test0690.instanceCount -= (long) d3;
                switch (((i22 % 7) * 5) + 76) {
                case 89:
                    for (i26 = i22; 2 > i26; ++i26) {
                        Test0690.fFld -= i23;
                        i23 *= (int)44.65002;
                        if (Test0690.bFld) continue;
                    }
                    i25 >>= -1;
                    break;
                case 81:
                    Test0690.instanceCount = Test0690.instanceCount;
                    i25 *= i20;
                    break;
                case 107:
                    for (d4 = 1; d4 < 2; d4++) {
                        if (false) {
                            i27 >>= -130;
                            i28 += (int)d4;
                        }
                        Test0690.iArrFld[i24] >>>= i23;
                        try {
                            i25 = (i18 % 292972950);
                            i28 = (Test0690.iArrFld[i22 - 1] % -207);
                            i25 = (-1321235164 / Test0690.iArrFld[i24 + 1]);
                        } catch (ArithmeticException a_e) {}
                        i27 += (int)(((d4 * i28) + i18) - i20);
                    }
                    break;
                case 95:
                    i27 = i25;
                    break;
                case 87:
                    Test0690.iArrFld[i24 + 1] *= i29;
                case 88:
                    lArr2[i22 - 1] = Test0690.instanceCount;
                    break;
                case 108:
                    Test0690.instanceCount *= i27;
                    break;
                default:
                    i28 = (int) Test0690.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 s2 = " + i18 + "," + i19 + "," + s2);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 by1 i24 = " + i23 + "," + by1 + "," + i24);
        FuzzerUtils.out.println("i25 d3 i26 = " + i25 + "," + Double.doubleToLongBits(d3) + "," + i26);
        FuzzerUtils.out.println("i27 d4 i28 = " + i27 + "," + Double.doubleToLongBits(d4) + "," + i28);
        FuzzerUtils.out.println("i29 dArr lArr2 = " + i29 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0690.instanceCount Test0690.fFld Test0690.bFld = " + Test0690.instanceCount + "," +
                Float.floatToIntBits(Test0690.fFld) + "," + (Test0690.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0690.iArrFld Test0690.fArrFld = " + FuzzerUtils.checkSum(Test0690.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0690.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0690 _instance = new Test0690();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
