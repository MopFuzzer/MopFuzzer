// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:39 2023
public class Test0584 {

    public static final int N = 400;

    public static long instanceCount=877962834L;
    public static float fFld=-2.422F;
    public int iFld=32542;
    public static short[][] sArrFld =new short[N][N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0584.sArrFld, (short) -7811);
        FuzzerUtils.init(Test0584.lArrFld, 5L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, int i7) {

        int i8=9;
        int i9=254;
        int i10=0;
        int i11=213;
        int i12=-27035;
        int i13=-9;
        int[] iArr2 =new int[N];
        double d1=22.79206;
        boolean b1=false;

        FuzzerUtils.init(iArr2, 32);

        for (i8 = 11; i8 < 370; ++i8) {
            Test0584.instanceCount -= i9;
            i9 += -3677;
            i9 += i8;
            if (b1) {
                switch ((((-103 >>> 1) % 7) * 5) + 65) {
                case 73:
                    for (i10 = 1; i10 < 5; ++i10) {
                        l1 += -146;
                        for (i12 = 1; i12 < 2; i12++) {
                            d1 *= i13;
                            i13 = -149;
                            if (true) continue;
                            i7 = 1;
                            Test0584.lArrFld[i10 - 1] = -51;
                            l1 += (i12 ^ i8);
                        }
                    }
                    break;
                case 89:
                    i7 -= 7;
                    break;
                case 96:
                    Test0584.instanceCount += (((i8 * i9) + Test0584.fFld) - i13);
                case 93:
                    i13 += (int)-40.4481;
                    break;
                case 98:
                    iArr2[i8 - 1] = (int)-252L;
                    break;
                case 82:
                    l1 = i11;
                    break;
                case 92:
                    l1 *= i8;
                    break;
                }
            }
        }
        vMeth1_check_sum += l1 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i5, long l, boolean b) {

        int i6=-3;
        int i14=65;
        int i15=-121;
        int[] iArr1 =new int[N];
        short s=4975;

        FuzzerUtils.init(iArr1, 14);

        b = b;
        Test0584.fFld += (++iArr1[(i5 >>> 1) % N]);
        i5 = (Test0584.sArrFld[(i5 >>> 1) % N][(i5 >>> 1) % N]++);
        i6 = 1;
        while (++i6 < 298) {
            byte by=-71;
            vMeth1(l, -42785);
            i5 >>= i5;
            for (i14 = 1; i14 < 6; i14 += 2) {
                i5 = i5;
            }
            i5 >>= i6;
            i5 += (((i6 * s) + Test0584.instanceCount) - i14);
            Test0584.fFld = i14;
            by += (byte) (((i6 * i14) + i14) - Test0584.fFld);
            l = l;
        }
        i5 = i6;
        Test0584.instanceCount ^= i14;
        long meth_res = i5 + l + (b ? 1 : 0) + i6 + i14 + i15 + s + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3, int i4) {

        double d=-1.82844;
        boolean b2=true;
        int i16=-99;
        int i17=-7;
        int i18=-59463;
        int[][] iArr =new int[N][N];
        short s1=-22418;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 39818L);
        FuzzerUtils.init(iArr, -2);

        i2 -= (int)(lArr[(i2 >>> 1) % N] -= (long)(d++));
        iArr[(i4 >>> 1) % N][(i4 >>> 1) % N] += (int) (Test0584.fFld - i2);
        i3 -= (i2++);
        iArr[(i3 >>> 1) % N][(-4 >>> 1) % N] = (int) (((i4 + i4) - (--d)) - iMeth(i2, Test0584.instanceCount, b2));
        for (i16 = 7; i16 < 152; ++i16) {
            iArr[i16] = iArr[i16];
            i4 -= 6289;
            switch (((i16 % 1) * 5) + 38) {
            case 41:
            }
            i18 = s1;
        }
        vMeth_check_sum += i2 + i3 + i4 + Double.doubleToLongBits(d) + (b2 ? 1 : 0) + i16 + i17 + i18 + s1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=67;
        int i1=7;
        int i19=-4918;
        int i20=-2;
        int i21=33714;
        int i22=-5;
        int[] iArr3 =new int[N];
        byte by1=-70;
        byte by2=-42;
        byte[] byArr =new byte[N];
        double d2=-70.48541, d3=-62.118268, d4=2.7254;
        boolean b3=false;

        FuzzerUtils.init(iArr3, 3);
        FuzzerUtils.init(byArr, (byte)-93);

        for (i = 13; i < 285; i++) {
            vMeth(i1, i1, i1);
        }
        Test0584.fFld += i;
        Test0584.instanceCount = (long) Test0584.fFld;
        i1 += i;
        Test0584.instanceCount <<= i;
        i19 = 1;
        while ((i19 += 2) < 301) {
            switch ((i19 % 7) + 97) {
            case 97:
                i1 -= i;
                i20 = 1;
                do {
                    try {
                        i1 = (i19 / 1429514100);
                        i1 = (i / i);
                        i1 = (-32191 / i);
                    } catch (ArithmeticException a_e) {}
                    for (i21 = 1; i21 < 1; i21++) {
                        by1 = (byte)-7L;
                    }
                    i22 += (int)-2L;
                    Test0584.fFld = i22;
                    i1 &= (int) Test0584.instanceCount;
                    Test0584.instanceCount /= ((long) (d2) | 1);
                    iArr3[i19] <<= i22;
                    i1 *= i20;
                } while (++i20 < 167);
                iArr3[i19] = (int)d3;
                break;
            case 98:
                if (false) continue;
                i1 += (((i19 * i) + i22) - i22);
                d4 = 1;
                do {
                    by2 += (byte)(d4 * d4);
                    d3 += -8;
                    i1 -= (int) Test0584.instanceCount;
                    if (b3) break;
                    byArr[i19] = (byte)12758;
                    i1 *= (int) Test0584.instanceCount;
                    b3 = b3;
                } while (++d4 < 167);
                break;
            case 99:
                byArr[i19 - 1] |= (byte)i21;
                break;
            case 100:
                i22 += -175;
                break;
            case 101:
                Test0584.fFld += i22;
                break;
            case 102:
                Test0584.instanceCount += iFld;
                break;
            case 103:
            default:
                by2 += (byte)d3;
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("by1 d2 d3 = " + by1 + "," + Double.doubleToLongBits(d2) + "," +
            Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("d4 by2 b3 = " + Double.doubleToLongBits(d4) + "," + by2 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("iArr3 byArr = " + FuzzerUtils.checkSum(iArr3) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0584.instanceCount Test0584.fFld iFld = " + Test0584.instanceCount + "," +
                Float.floatToIntBits(Test0584.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test0584.sArrFld Test0584.lArrFld = " + FuzzerUtils.checkSum(Test0584.sArrFld) + "," +
                FuzzerUtils.checkSum(Test0584.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0584 _instance = new Test0584();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
