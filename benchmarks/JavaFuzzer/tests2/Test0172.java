// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0172 {

    public static final int N = 400;

    public static long instanceCount=-2187642117L;
    public static boolean bFld=false;
    public static volatile int iFld=-109;
    public double dFld=0.107826;
    public int iFld1=1;
    public static int[] iArrFld =new int[N];
    public static float[][] fArrFld =new float[N][N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0172.iArrFld, 140);
        FuzzerUtils.init(Test0172.fArrFld, 48.265F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        int i7=10;
        int i8=231;
        int i10=13;
        int i11=-13;
        int[] iArr =new int[N];
        float f2=1.662F;
        byte by=8;
        byte[] byArr =new byte[N];
        boolean b=false;

        FuzzerUtils.init(iArr, -19158);
        FuzzerUtils.init(byArr, (byte)-31);

        i7 -= (int)f2;
        i8 = 1;
        while (++i8 < 397) {
            f2 += (((i8 * i8) + l1) - l1);
        }
        for (int i9 : iArr) {
            iArr[(i8 >>> 1) % N] = by;
            for (i10 = 1; i10 < 4; ++i10) {
                i9 = i7;
                f2 += (((i10 * i9) + i10) - i11);
                iArr[i10] <<= i7;
                by = (byte)i8;
                iArr[i10 - 1] = by;
                i9 += (((i10 * i7) + f2) - i9);
                i11 = i8;
                byArr[i10] -= (byte)f2;
            }
        }
        b = false;
        vMeth1_check_sum += l1 + i7 + Float.floatToIntBits(f2) + i8 + by + i10 + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(long l, int i4, int i5) {

        int i6=-52667;
        int i12=-97;
        int i13=1;
        int i14=165;
        int[] iArr1 =new int[N];
        float f3=0.599F, f4=74.905F;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(dArr, 62.67948);
        FuzzerUtils.init(iArr1, -5);

        if (Test0172.bFld) {
            i6 = 1;
            while (++i6 < 237) {
                float f1=-67.799F;
                dArr[i6][i6] = (i4 <<= (int) ((++f1) - (i6 * Test0172.instanceCount)));
                vMeth1(Test0172.instanceCount);
                i5 += i6;
                i5 <<= i5;
                for (i12 = 1; i12 < 7; ++i12) {
                    i13 += i12;
                    iArr1[i12] = i5;
                    i13 += (i12 * i12);
                }
            }
        } else if (false) {
            i4 = (int)f3;
            for (f4 = 11; f4 < 255; f4++) {
                i4 >>= i4;
                i5 += (int)f4;
                if (i13 != 0) {
                    vMeth_check_sum += l + i4 + i5 + i6 + i12 + i13 + Float.floatToIntBits(f3) +
                        Float.floatToIntBits(f4) + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
            vMeth_check_sum += l + i4 + i5 + i6 + i12 + i13 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) + i14
                + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
            return;
        } else if (Test0172.bFld) {
            l = i4;
        } else {
            f3 *= l;
        }
        vMeth_check_sum += l + i4 + i5 + i6 + i12 + i13 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        int i3=-12, i16=-16072, i17=208;
        long l2=-8269295175971618148L;

        i3 = 1;
        while (++i3 < 221) {
            vMeth(Test0172.instanceCount, i3, i3);
            Test0172.iFld *= (int) Test0172.instanceCount;
            i16 = 1;
            while (++i16 < 7) {
                Test0172.iFld = -6847;
                i17 = 1;
                while (++i17 < 1) {
                    Test0172.iArrFld[i3] -= Test0172.iFld;
                    Test0172.iFld *= i16;
                    Test0172.iFld += i17;
                    l2 |= 212;
                    Test0172.fArrFld[i16] = Test0172.fArrFld[i17];
                    Test0172.bFld = Test0172.bFld;
                    Test0172.iFld >>= (int) l2;
                    Test0172.iFld += (int) 1.84347;
                    l2 = i16;
                }
            }
        }
        long meth_res = i3 + i16 + i17 + l2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-14828, i1=42763, i2=-119, i18=-9, i19=-26187, i20=-74, i21=-12, i22=-10, i23=12496, i24=174;
        float f=83.167F;
        byte by1=-125;

        for (i = 300; i > 15; i--) {
            i1 >>= i1;
            i2 = 1;
            while (++i2 < 88) {
                Test0172.instanceCount -= (long) ((f++) + iMeth());
                for (i18 = 1; i18 < 1; i18++) {
                    Test0172.instanceCount *= i19;
                    Test0172.iFld += i18;
                    lArrFld[i18 - 1] -= -4L;
                }
                by1 += (byte) (((i2 * i1) + i) - Test0172.instanceCount);
                Test0172.iFld -= 66;
                Test0172.bFld = true;
                for (i20 = i2; i20 < 1; ++i20) {
                    Test0172.iArrFld = Test0172.iArrFld;
                    by1 = (byte)i19;
                    i19 -= (int)dFld;
                    f = f;
                    Test0172.instanceCount -= (long) dFld;
                    Test0172.iArrFld[i20 + 1] >>= (int) Test0172.instanceCount;
                }
                Test0172.iFld += (i2 ^ Test0172.instanceCount);
                Test0172.iArrFld[i - 1] <<= i21;
            }
            for (i22 = 4; i22 < 88; i22 += 3) {
                Test0172.bFld = Test0172.bFld;
            }
            Test0172.iArrFld = Test0172.iArrFld;
            i24 = 1;
            while (++i24 < 88) {
                i21 <<= i20;
                i23 += (i24 - i24);
                if (true) continue;
                iFld1 ^= iFld1;
                Test0172.iFld -= i1;
                Test0172.instanceCount = i24;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f i18 i19 = " + Float.floatToIntBits(f) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("by1 i20 i21 = " + by1 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);

        FuzzerUtils.out.println("Test0172.instanceCount Test0172.bFld Test0172.iFld = " + Test0172.instanceCount + "," + (Test0172.bFld ? 1
                : 0) + "," + Test0172.iFld);
        FuzzerUtils.out.println("dFld iFld1 Test0172.iArrFld = " + Double.doubleToLongBits(dFld) + "," + iFld1 + "," +
                FuzzerUtils.checkSum(Test0172.iArrFld));
        FuzzerUtils.out.println("Test0172.fArrFld lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0172.fArrFld))
            + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0172 _instance = new Test0172();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
