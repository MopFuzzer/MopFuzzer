// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0320 {

    public static final int N = 400;

    public static volatile long instanceCount=-9L;
    public static int iFld=-46067;
    public static short sFld=15879;
    public static volatile byte byFld=-1;
    public volatile boolean[] bArrFld =new boolean[N];
    public static byte[] byArrFld =new byte[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0320.byArrFld, (byte) -127);
        FuzzerUtils.init(Test0320.lArrFld, -119L);
    }

    public static long sMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l4, byte by, int i6) {

        int i7=40;
        int i8=-22242;
        int i9=-49246;
        int i10=151;
        int i11=210;
        int i12=15483;
        int[] iArr =new int[N];
        float f2=20.828F;

        FuzzerUtils.init(iArr, 12);

        i7 = 1;
        do {
            for (i8 = 1; i8 < 4; ++i8) {
                i10 = 1;
                while (++i10 < 2) {
                    Test0320.iFld *= i9;
                }
                i9 += (i8 * i8);
                Test0320.byArrFld[i8 + 1] = (byte) i7;
            }
            l4 = Test0320.sFld;
            for (i11 = 1; i11 < 4; ++i11) {
                Test0320.iFld += (i11 * i11);
                i6 += (162 + (i11 * i11));
                i6 *= (int)f2;
                i12 |= by;
                iArr[i11 - 1] = i6;
            }
            iArr[i7 - 1] = i7;
            Test0320.iFld = Test0320.sFld;
        } while (++i7 < 389);
        vMeth_check_sum += l4 + by + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr);
    }

    public static byte byMeth(long l3) {

        byte by1=-42;
        int i13=-95;
        int i14=-12;
        int i15=-39;
        int i16=14;
        int i17=-1;
        int i18=20787;
        int[] iArr1 =new int[N];
        double d=1.72045, d1=-29.130033;

        FuzzerUtils.init(iArr1, -23669);

        vMeth(Test0320.instanceCount, by1, Test0320.iFld);
        Test0320.iFld += Test0320.iFld;
        Test0320.iFld |= Test0320.sFld;
        for (i13 = 1; i13 < 198; ++i13) {
            d += Test0320.instanceCount;
            d = l3;
            for (d1 = 1; d1 < 8; d1++) {
                if (Test0320.iFld != 0) {
                }
                try {
                    i14 = (iArr1[(int)(d1 + 1)] / i15);
                    i16 = (i16 / i16);
                    i15 = (i14 % -8828);
                } catch (ArithmeticException a_e) {}
                d -= 928796608909340017L;
                Test0320.byArrFld[(int) (d1)] = (byte) i15;
                Test0320.instanceCount = i15;
                for (i17 = 1; i17 < 2; i17++) {
                    Test0320.iFld -= i15;
                    by1 += (byte)i18;
                }
            }
        }
        long meth_res = l3 + by1 + i13 + i14 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i15 + i16 +
            i17 + i18 + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static short sMeth(long l, int i4) {

        long l1=-21047L, l2=-10960L;
        int i5=-31977, i19=-3, i20=0, i21=-48149, i22=-4, i23=-181;
        float f1=2.504F;
        double d2=0.7826;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 2.112033);

        for (l1 = 17; 349 > l1; ++l1) {
            i4 += (int)(((l1 * f1) + l) - l2);
        }
        dArr[(Test0320.iFld >>> 1) % N] = byMeth(l);
        i19 = 1;
        while (++i19 < 373) {
            for (i20 = i19; i20 < 5; ++i20) {
                Test0320.lArrFld[i20] %= (i4 | 1);
                for (i22 = 1; i22 < 1; ++i22) {
                    Test0320.iFld >>= i4;
                    Test0320.byArrFld[i20] += (byte) i5;
                    switch (((i19 % 2) * 5) + 122) {
                    case 131:
                        i21 <<= (int) Test0320.instanceCount;
                        d2 = Test0320.iFld;
                        break;
                    case 128:
                        l2 = (long)d2;
                    default:
                        Test0320.iFld = -14;
                        i5 = i5;
                    }
                }
            }
        }
        long meth_res = l + i4 + l1 + i5 + Float.floatToIntBits(f1) + l2 + i19 + i20 + i21 + i22 + i23 +
            Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-96;
        int i1=-52087;
        int i2=748;
        int i3=-49925;
        int i24=6;
        int i25=82;
        int i26=-1;
        int i27=-240;
        int i28=-22;
        int[] iArr2 =new int[N];
        float f=-8.851F, f3=28.910F;
        boolean b=true;
        double d3=-1.37684;
        long l5=4039267224L;

        FuzzerUtils.init(iArr2, -7973);

        i = 1;
        do {
            bArrFld[i + 1] = (((-77.125F + (Test0320.instanceCount * i)) < (i * f)) && b);
            i1 = 1;
            do {
                i2 -= (int) (((i3 * i3) + sMeth(-35L, -10)) + Test0320.instanceCount);
                Test0320.iFld = 6;
                Test0320.iFld = (int) Test0320.instanceCount;
                if (b) continue;
                i3 = (int)d3;
            } while (++i1 < 95);
            Test0320.instanceCount += (((i * i1) + Test0320.iFld) - i);
            Test0320.instanceCount *= i2;
            switch (((22 >>> 1) % 2) + 64) {
            case 64:
            case 65:
                if (b) {
                    i3 = (int)-234L;
                    f3 = 1;
                    do {
                        Test0320.iFld <<= i;
                    } while (++f3 < 95);
                    iArr2[i + 1] -= Test0320.iFld;
                } else if (b) {
                    for (i24 = 95; i24 > 1; i24--) {
                        d3 = 79.2982;
                        Test0320.iFld = (int) Test0320.instanceCount;
                        Test0320.instanceCount -= i2;
                        i2 = (int) Test0320.instanceCount;
                        for (i26 = 1; i26 < 2; i26++) {
                            Test0320.instanceCount = -8L;
                        }
                        Test0320.instanceCount = 28;
                        Test0320.instanceCount = i24;
                        for (l5 = 2; l5 > i24; l5 -= 2) {
                            i25 *= Test0320.byFld;
                            f = l5;
                            Test0320.iFld += (int) l5;
                            iArr2[(int)(l5 - 1)] -= i;
                        }
                    }
                }
                break;
            default:
                i25 -= i24;
            }
        } while (++i < 265);

        FuzzerUtils.out.println("i f b = " + i + "," + Float.floatToIntBits(f) + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("d3 f3 i24 = " + Double.doubleToLongBits(d3) + "," + Float.floatToIntBits(f3) + "," +
            i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("l5 i28 iArr2 = " + l5 + "," + i28 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0320.instanceCount Test0320.iFld Test0320.sFld = " + Test0320.instanceCount + "," + Test0320.iFld +
                "," + Test0320.sFld);
        FuzzerUtils.out.println("Test0320.byFld bArrFld Test0320.byArrFld = " + Test0320.byFld + "," +
                FuzzerUtils.checkSum(bArrFld) + "," + FuzzerUtils.checkSum(Test0320.byArrFld));
        FuzzerUtils.out.println("Test0320.lArrFld = " + FuzzerUtils.checkSum(Test0320.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0320 _instance = new Test0320();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  byMeth ->  byMeth sMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
