// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0334 {

    public static final int N = 400;

    public static long instanceCount=122L;
    public double dFld=1.28578;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i3, int i4) {

        int i5=-10;
        int i6=65263;
        int i7=-58405;
        int i8=0;
        int i9=253;
        int i10=-49528;
        int i11=-9;
        int[] iArr =new int[N];
        double d1=-43.114667;
        byte by1=-91;

        FuzzerUtils.init(iArr, 14);

        i3 += (int)82L;
        for (i5 = 9; i5 < 168; i5 += 2) {
            i3 = i6;
            Test0334.instanceCount <<= i6;
            Test0334.instanceCount = i5;
            i7 = 19;
            do {
                d1 = i3;
                d1 += Test0334.instanceCount;
                i4 += 13;
            } while ((i7 -= 3) > 0);
            for (i8 = 1; i8 < 19; i8++) {
                i9 >>= i4;
                switch ((i5 % 7) + 33) {
                case 33:
                    for (i10 = 1; 2 > i10; ++i10) {
                        i6 = 199;
                    }
                    i9 += (((i8 * i10) + Test0334.instanceCount) - i8);
                    break;
                case 34:
                    d1 -= d1;
                    break;
                case 35:
                    by1 += (byte)i9;
                    break;
                case 36:
                    iArr[i5 + 1] >>= 5;
                case 37:
                    iArr[i5 - 1] = i3;
                    break;
                case 38:
                    Test0334.instanceCount >>>= i4;
                    break;
                case 39:
                    Test0334.instanceCount += (long) -56.78222;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + by1 +
            FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(byte by, double d) {

        int i2=58949;
        int i13=-31321;
        int i14=-10277;
        int i15=-55;
        int i16=-155;
        int i17=139;
        int[] iArr1 =new int[N];
        float f=-1.109F;
        boolean b=false;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(iArr1, -13);
        FuzzerUtils.init(byArr, (byte)-85);

        i2 = 1;
        do {
            int i12=-201;
            f += (i2 * i2);
            dMeth(i2, i2);
            i12 -= i12;
            i13 = 1;
            do {
                i12 = i2;
                iArr1[i2] = i12;
            } while (++i13 < 4);
            byArr = byArr;
            for (i14 = 1; i14 < 4; ++i14) {
                for (i16 = 1; i16 < 2; i16++) {
                    if (i12 != 0) {
                        vMeth_check_sum += by + Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f) + i13 + i14 +
                            i15 + i16 + i17 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    b = b;
                    Test0334.instanceCount = -2522181488422802294L;
                    i12 += i12;
                    iArr1[i2 + 1] = i2;
                }
            }
        } while (++i2 < 390);
        vMeth_check_sum += by + Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f) + i13 + i14 + i15 + i16 + i17
            + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public int iMeth(int i1, short s) {

        long l=-48709894L;
        int i18=-9, i19=143, i20=-12, i21=-3;
        float f1=0.694F;

        vMeth((byte)(42), dFld);
        i1 >>= i1;
        l = 396;
        do {
            i1 = (int)l;
            for (i18 = 1; i18 < 4; i18++) {
                for (i20 = 1; i20 < 2; ++i20) {
                    if (true) break;
                    i19 >>>= i19;
                    i19 = (int) Test0334.instanceCount;
                    f1 -= l;
                    Test0334.instanceCount *= l;
                    i19 += i20;
                    i1 -= i20;
                }
                i19 += (i18 - Test0334.instanceCount);
            }
            Test0334.instanceCount = i21;
        } while (--l > 0);
        long meth_res = i1 + s + l + i18 + i19 + i20 + i21 + Float.floatToIntBits(f1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0;
        int i22=39;
        int i23=33738;
        int i24=-238;
        int i25=1418;
        int i27=-117;
        int i28=-82;
        int i29=21363;
        int i30=-8;
        int[] iArr2 =new int[N];
        short s1=-15430;
        byte by2=18;
        double d2=115.39768;
        boolean b1=true;
        float f2=2.288F;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr2, 139);
        FuzzerUtils.init(lArr, -6213195237772521517L);

        i = (int)(iMeth(i, s1) - -4280645541L);
        i += by2;
        i22 = 1;
        do {
            i = i22;
            i = (int) Test0334.instanceCount;
            i += (i22 + Test0334.instanceCount);
            i = (int) Test0334.instanceCount;
            Test0334.instanceCount = Test0334.instanceCount;
            for (i23 = 4; i23 < 72; i23 += 2) {
                for (d2 = 3; d2 > 1; d2 -= 3) {
                    int i26=38478;
                    if (b1) continue;
                    try {
                        i = (i / -220);
                        i25 = (i24 % iArr2[i22 + 1]);
                        i24 = (-70 % iArr2[i23 + 1]);
                    } catch (ArithmeticException a_e) {}
                    f2 += i;
                    iArr2[i23 + 1] += i24;
                    Test0334.instanceCount += (-115 + (d2 * d2));
                    try {
                        iArr2[i22 - 1] = (iArr2[i22 - 1] % i22);
                        i24 = (-192 % i23);
                        i24 = (i26 / i24);
                    } catch (ArithmeticException a_e) {}
                    i25 >>= i;
                    i26 = (int) Test0334.instanceCount;
                    Test0334.instanceCount &= Test0334.instanceCount;
                }
                try {
                    i25 = (-79 / i24);
                    i25 = (1795006772 / i);
                    i = (i22 / i24);
                } catch (ArithmeticException a_e) {}
                for (i27 = 3; i27 > 1; --i27) {
                    Test0334.instanceCount += (i27 * i28);
                }
                f2 = i22;
                i = (int)f2;
                i25 = i24;
                for (i29 = 1; i29 < 3; i29++) {
                    lArr[i22 + 1] = (long)1.915F;
                    by2 *= (byte)i;
                    i25 &= i24;
                    i = i28;
                }
            }
        } while (++i22 < 348);

        FuzzerUtils.out.println("i s1 by2 = " + i + "," + s1 + "," + by2);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("d2 i25 b1 = " + Double.doubleToLongBits(d2) + "," + i25 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("f2 i27 i28 = " + Float.floatToIntBits(f2) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 iArr2 = " + i29 + "," + i30 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0334.instanceCount dFld = " + Test0334.instanceCount + "," +
            Double.doubleToLongBits(dFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0334 _instance = new Test0334();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
