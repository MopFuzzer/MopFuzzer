// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0601 {

    public static final int N = 400;

    public static long instanceCount=-8008032566907519631L;
    public int iFld=-42591;
    public static int iFld1=-40228;
    public static float fFld=2.632F;
    public static boolean bFld=false;
    public short sFld=-1580;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0601.iArrFld, -22);
        FuzzerUtils.init(Test0601.lArrFld, -2681420486L);
        FuzzerUtils.init(Test0601.sArrFld, (short) 8174);
    }

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i9=4, i10=28728, i11=-7, i12=-11, i13=-18860, i14=28010;
        float f=1.276F;
        short s=30927;
        byte by2=16;

        Test0601.iFld1 >>= Test0601.iFld1;
        Test0601.fFld = Test0601.iFld1;
        for (i9 = 3; i9 < 265; i9++) {
            for (f = 1; f < 6; f++) {
                i12 += Test0601.iFld1;
                Test0601.fFld += i12;
                for (i13 = 1; i13 < 2; ++i13) {
                    Test0601.bFld = Test0601.bFld;
                    Test0601.instanceCount = s;
                    Test0601.fFld -= i11;
                    Test0601.sArrFld[(int) (f)] = (short) 12922;
                    i10 += i13;
                    i14 += (((i13 * Test0601.instanceCount) + by2) - Test0601.instanceCount);
                    i11 += (i13 * i13);
                    Test0601.iFld1 -= (int) Test0601.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + s + by2;
    }

    public static void vMeth(int i7) {

        int i8=6, i15=186, i16=10, i17=-8, i18=-141, i19=13;
        byte by1=103;
        double d1=0.122701;
        double[] dArr =new double[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(dArr, 78.7582);

        i8 = 365;
        do {
            Test0601.instanceCount += (i8 * Test0601.instanceCount);
            try {
                Test0601.iArrFld[i8] = (-30054 / i8);
                i7 = (i8 / Test0601.iFld1);
                i7 = (-4 / Test0601.iArrFld[i8]);
            } catch (ArithmeticException a_e) {}
            if ((bArr[i8] && false) & ((-(++Test0601.lArrFld[i8 - 1])) > Test0601.iArrFld[i8 + 1])) break;
            Test0601.iFld1 -= (int) (Integer.reverseBytes(Test0601.iFld1++) - (Test0601.instanceCount = (-4662 * (by1 * i8))));
        } while (--i8 > 0);
        vMeth1();
        i15 = 247;
        do {
            Test0601.iFld1 += (((i15 * Test0601.fFld) + Test0601.instanceCount) - i15);
            if (false) {
                dArr[i15] -= i15;
            }
            for (i16 = 19; i16 > 1; i16--) {
                for (i18 = i15; i18 < 2; i18++) {
                    Test0601.bFld = Test0601.bFld;
                    Test0601.iArrFld[i18] -= -61787;
                    d1 /= (i17 | 1);
                }
            }
        } while ((i15 -= 3) > 0);
        vMeth_check_sum += i7 + i8 + by1 + i15 + i16 + i17 + i18 + i19 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static byte byMeth(int i4, int i5, int i6) {

        int i20=-12, i21=-5, i22=215, i23=-10;
        short s1=30706;
        float f1=1.1023F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 55L);

        i4 = (int)Math.min((i5++) | -2, lArr[(13 >>> 1) % N]);
        vMeth(Test0601.iFld1);
        for (i20 = 2; 242 > i20; ++i20) {
            i6 += (i20 * i6);
            s1 += (short) Test0601.iFld1;
        }
        Test0601.instanceCount += i5;
        for (f1 = 392; f1 > 17; f1--) {
            Test0601.iArrFld[(int) (f1)] = (int) Test0601.instanceCount;
            if (Test0601.bFld) {
                i23 = 1;
                while (++i23 < 5) {
                    i6 |= i4;
                    Test0601.bFld = Test0601.bFld;
                    i5 |= i21;
                    i21 += i5;
                    Test0601.iFld1 += Test0601.iFld1;
                }
            } else if (Test0601.bFld) {
                Test0601.iArrFld[(int) (f1 + 1)] = (int) Test0601.instanceCount;
            }
        }
        long meth_res = i4 + i5 + i6 + i20 + i21 + s1 + Float.floatToIntBits(f1) + i22 + i23 +
            FuzzerUtils.checkSum(lArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-14340, i1=247, i2=85, i3=2, i24=4, i25=-1, i26=72, i27=-10940;
        double d=-2.39923;
        byte by=-80;

        Test0601.iArrFld[(iFld >>> 1) % N] = (((--iFld) * (iFld * 199)) - iFld);
        for (i = 129; i > 7; i -= 3) {
            Test0601.iFld1 -= (int) ((++Test0601.instanceCount) - ((d++) + by));
        }
        for (i2 = 13; i2 < 372; ++i2) {
            if (true) {
                byMeth(iFld, i2, i);
            }
            iFld += i2;
            i1 ^= i1;
            d *= i3;
            Test0601.fFld += i2;
            switch (((i2 % 6) * 5) + 63) {
            case 78:
                iFld -= i2;
                try {
                    Test0601.iFld1 = (i3 / Test0601.iFld1);
                    Test0601.iArrFld[i2] = (i % 51559);
                    Test0601.iArrFld[i2] = (i2 % i2);
                } catch (ArithmeticException a_e) {}
                Test0601.iFld1 = i1;
                break;
            case 67:
                by += (byte)(((i2 * sFld) + i1) - i3);
                switch ((i2 % 4) + 102) {
                case 102:
                    switch (((i2 % 3) * 5) + 22) {
                    case 34:
                        Test0601.instanceCount -= Test0601.instanceCount;
                        break;
                    case 36:
                        if (true) {
                            Test0601.iArrFld[i2] *= i3;
                            for (i24 = 70; i24 > 3; --i24) {
                                Test0601.iArrFld[i24 - 1] = (int) Test0601.instanceCount;
                                i25 = i24;
                                Test0601.iFld1 = i;
                                Test0601.iFld1 += (((i24 * Test0601.instanceCount) + i24) - sFld);
                                Test0601.iArrFld[i2] = (int) Test0601.instanceCount;
                                for (i26 = 1; i26 < 2; i26++) {
                                    Test0601.fFld *= by;
                                    Test0601.fFld += -10;
                                    i25 -= i25;
                                }
                            }
                        } else if (Test0601.bFld) {
                            i27 = i3;
                        } else if (Test0601.bFld) {
                            i27 *= (int)d;
                        }
                    case 23:
                        Test0601.instanceCount += (i2 - i3);
                        break;
                    }
                    break;
                case 103:
                    iFld += (((i2 * i24) + Test0601.fFld) - i1);
                    break;
                case 104:
                    by = (byte)iFld;
                    break;
                case 105:
                    Test0601.iFld1 -= 15;
                }
                break;
            case 79:
                Test0601.instanceCount *= (long) Test0601.fFld;
                break;
            case 72:
                iFld = i24;
                break;
            case 87:
                i3 |= (int) Test0601.instanceCount;
                break;
            case 90:
                Test0601.iArrFld[i2] = (int) Test0601.instanceCount;
                break;
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("by i2 i3 = " + by + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test0601.instanceCount iFld Test0601.iFld1 = " + Test0601.instanceCount + "," + iFld + "," +
                Test0601.iFld1);
        FuzzerUtils.out.println("Test0601.fFld Test0601.bFld sFld = " + Float.floatToIntBits(Test0601.fFld) + "," + (Test0601.bFld ? 1
            : 0) + "," + sFld);
        FuzzerUtils.out.println("Test0601.iArrFld Test0601.lArrFld Test0601.sArrFld = " + FuzzerUtils.checkSum(Test0601.iArrFld) + ","
                + FuzzerUtils.checkSum(Test0601.lArrFld) + "," + FuzzerUtils.checkSum(Test0601.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0601 _instance = new Test0601();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
