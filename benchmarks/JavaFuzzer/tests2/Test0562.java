// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0562 {

    public static final int N = 400;

    public static long instanceCount=-11L;
    public static volatile float fFld=-106.792F;
    public static double dFld=-30.5848;
    public static int iFld=-203;
    public static boolean bFld=true;
    public static long[] lArrFld =new long[N];
    public float[] fArrFld =new float[N];
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0562.lArrFld, 65808278949160612L);
        FuzzerUtils.init(Test0562.iArrFld, 47688);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1) {

        int i2=12874, i3=37670, i4=-189, i5=44506, i6=-57623;
        float f=1.543F;
        short s=16060;
        double d=-111.22400;

        for (i2 = 184; i2 > 3; i2--) {
            Test0562.instanceCount += (-62671 + (i2 * i2));
            Test0562.instanceCount = -42958;
            for (f = i2; f < 9; ++f) {
                s += (short) Test0562.instanceCount;
                s >>= (short)i4;
                switch ((int)((f % 2) + 126)) {
                case 126:
                    d = i2;
                    i4 += (-4 + (f * f));
                    i3 += (int)f;
                    break;
                case 127:
                    i1 += i1;
                    for (i5 = 1; i5 < 1; ++i5) {
                        i1 *= i3;
                        i1 += (int)-15.25F;
                        i6 = i1;
                    }
                    break;
                default:
                    i1 += i6;
                }
            }
        }
        vMeth2_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + s + Double.doubleToLongBits(d) + i5 + i6;
    }

    public static void vMeth1(int i) {

        long l=5891024421931536599L;
        long[] lArr =new long[N];
        int i7=30260, i8=0;
        byte by=-31;
        boolean b=false;
        float f1=-1.394F;
        short s1=-11457;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(lArr, -37188L);
        FuzzerUtils.init(sArr, (short)5678);

        vMeth2(i);
        i = (int)l;
        for (i7 = 3; i7 < 303; ++i7) {
            if (b) {
                i8 -= (int)l;
                by >>= (byte)i7;
                i = i;
                b = b;
            } else {
                if (b) break;
                Test0562.instanceCount += 14;
                i8 += (int)f1;
                sArr[i7 - 1][i7] >>= s1;
                vMeth1_check_sum += i + l + i7 + i8 + by + (b ? 1 : 0) + Float.floatToIntBits(f1) + s1 +
                    FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
                return;
            }
            if (i8 != 0) {
                vMeth1_check_sum += i + l + i7 + i8 + by + (b ? 1 : 0) + Float.floatToIntBits(f1) + s1 +
                    FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
                return;
            }
            l = (long)f1;
            i8 = i7;
        }
        vMeth1_check_sum += i + l + i7 + i8 + by + (b ? 1 : 0) + Float.floatToIntBits(f1) + s1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
    }

    public void vMeth() {

        int i9=-10;
        int i10=14;
        int i11=30421;
        int i12=177;
        int[] iArr =new int[N];
        byte by1=-75;
        boolean b1=true;

        FuzzerUtils.init(iArr, 26442);

        vMeth1(i9);
        i9 = i9;
        iArr[(i9 >>> 1) % N] /= -2;
        Test0562.instanceCount = (long) Test0562.fFld;
        i10 = 1;
        do {
            Test0562.instanceCount -= Test0562.instanceCount;
            i9 *= (int) Test0562.instanceCount;
        } while (++i10 < 377);
        i9 = i10;
        Test0562.instanceCount = by1;
        switch (((0 >>> 1) % 1) + 3) {
        case 3:
            b1 = b1;
            for (i11 = 19; i11 < 332; i11++) {
                i9 = i10;
                Test0562.instanceCount *= (long) Test0562.dFld;
                i12 += i11;
            }
        default:
            Test0562.instanceCount <<= by1;
        }
        vMeth_check_sum += i9 + i10 + by1 + (b1 ? 1 : 0) + i11 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i13=201, i14=7, i15=-4, i16=-25169;
        byte by2=99;
        double d1=-2.18745;
        float f2=0.952F;

        vMeth();
        Test0562.instanceCount -= 7660;
        Test0562.iFld = Test0562.iFld;
        Test0562.iFld = (int) Test0562.dFld;
        i13 = 1;
        do {
            Test0562.iFld = (int) Test0562.instanceCount;
            for (i14 = 5; i14 < 166; ++i14) {
                i15 -= by2;
                for (d1 = 1; d1 < 2; d1++) {
                    Test0562.instanceCount -= i13;
                    Test0562.instanceCount = 1;
                    switch ((i14 % 8) + 83) {
                    case 83:
                        if (Test0562.bFld) continue;
                    case 84:
                        switch ((int)(((d1 % 9) * 5) + 49)) {
                        case 77:
                            switch ((((i16 >>> 1) % 7) * 5) + 120) {
                            case 122:
                                Test0562.iFld += (int) (((d1 * Test0562.instanceCount) + Test0562.instanceCount) -
                                        Test0562.instanceCount);
                                Test0562.instanceCount += (long) (d1 + i15);
                                Test0562.instanceCount += (long) (((d1 * Test0562.instanceCount) + Test0562.instanceCount) -
                                        Test0562.iFld);
                                break;
                            case 129:
                                Test0562.lArrFld[i13 - 1] <<= i14;
                                break;
                            case 153:
                                Test0562.fFld = i16;
                                Test0562.iFld *= Test0562.iFld;
                                Test0562.instanceCount += Test0562.iFld;
                                break;
                            case 123:
                            case 146:
                                Test0562.instanceCount += (long) ((long) d1 ^ i14);
                                break;
                            case 149:
                                Test0562.iFld += by2;
                            case 142:
                                Test0562.fFld = Test0562.iFld;
                                Test0562.iFld = 128;
                                i16 += (int) (((d1 * i14) + Test0562.fFld) - Test0562.instanceCount);
                                break;
                            default:
                                Test0562.iFld = (int) Test0562.fFld;
                                if (Test0562.bFld) continue;
                                i15 += 202;
                            }
                            break;
                        case 52:
                            Test0562.iFld -= -14;
                            break;
                        case 71:
                            i16 = (int) Test0562.fFld;
                            break;
                        case 80:
                            fArrFld[i14] = i14;
                            break;
                        case 79:
                            i16 *= (int) Test0562.instanceCount;
                            break;
                        case 83:
                            Test0562.bFld = Test0562.bFld;
                            break;
                        case 94:
                            Test0562.iArrFld[i13 - 1][i13 + 1] -= Test0562.iFld;
                            break;
                        case 53:
                            i16 += (int)(d1 * d1);
                        case 81:
                            Test0562.bFld = Test0562.bFld;
                            break;
                        }
                        break;
                    case 85:
                        Test0562.fFld = i13;
                        break;
                    case 86:
                    case 87:
                        i15 = (int) Test0562.fFld;
                        break;
                    case 88:
                        Test0562.iArrFld[i14] = Test0562.iArrFld[(int) (d1 + 1)];
                        break;
                    case 89:
                        Test0562.fFld = 0.466F;
                        break;
                    case 90:
                        f2 += (float)(d1 * d1);
                    }
                }
            }
        } while (++i13 < 151);

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("by2 d1 i16 = " + by2 + "," + Double.doubleToLongBits(d1) + "," + i16);
        FuzzerUtils.out.println("f2 = " + Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test0562.instanceCount Test0562.fFld Test0562.dFld = " + Test0562.instanceCount + "," +
                Float.floatToIntBits(Test0562.fFld) + "," + Double.doubleToLongBits(Test0562.dFld));
        FuzzerUtils.out.println("Test0562.iFld Test0562.bFld Test0562.lArrFld = " + Test0562.iFld + "," + (Test0562.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0562.lArrFld));
        FuzzerUtils.out.println("fArrFld Test0562.iArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) +
                "," + FuzzerUtils.checkSum(Test0562.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0562 _instance = new Test0562();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
