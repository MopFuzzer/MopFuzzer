// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0241 {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public volatile double dFld=-2.127786;
    public static boolean bFld=true;
    public static short sFld=-8222;
    public static volatile float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0241.fArrFld, 0.877F);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i7=9865;

        i7 += i7;
        i7 = i7;
        vMeth_check_sum += i7;
    }

    public static int iMeth1(int i4) {

        int i5=-19589;
        int i6=-170;
        int i8=-26;
        int i9=-9;
        int i10=253;
        int i11=-4;
        int[] iArr =new int[N];
        boolean b=true;
        float f1=-2.650F;

        FuzzerUtils.init(iArr, -211);

        for (i5 = 8; i5 < 303; ++i5) {
            iArr[i5 + 1] <<= (int) Test0241.instanceCount;
            vMeth();
            Test0241.instanceCount >>= i5;
            iArr[i5 - 1] -= (int) Test0241.instanceCount;
            Test0241.instanceCount += i5;
            switch ((i5 % 2) + 116) {
            case 116:
                for (i8 = 1; i8 < 6; i8++) {
                    for (i10 = i8; 2 > i10; ++i10) {
                        i6 += i4;
                        i9 -= (int)-8712533723430949636L;
                        b = b;
                        i6 = i11;
                        iArr[i5 + 1] = (int) Test0241.instanceCount;
                    }
                    if (b) break;
                }
            case 117:
                i4 += -51689;
                break;
            default:
                Test0241.fArrFld[i5 + 1] -= f1;
            }
        }
        long meth_res = i4 + i5 + i6 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, int i2, int i3) {

        float f2=0.53F;
        int i12=205;
        int i13=171;
        int i14=8;
        int i15=-45253;
        int[][] iArr1 =new int[N][N];
        short s=-11717;

        FuzzerUtils.init(iArr1, -223);

        Test0241.fArrFld[(i1 >>> 1) % N] += iMeth1(-221);
        f2 = i3;
        i1 += (int)-1.56170;
        i12 = 163;
        while (--i12 > 0) {
            if (Test0241.bFld) {
                i13 *= (int)789718100444845568L;
                iArr1[i12][i12 + 1] = i12;
                s *= (short) Test0241.instanceCount;
                iArr1[i12][i12] *= (int) Test0241.instanceCount;
            } else {
                switch (((-2 >>> 1) % 2) + 69) {
                case 69:
                    for (i14 = i12; 10 > i14; i14++) {
                        Test0241.instanceCount += (i14 | i14);
                        iArr1[i14 + 1] = iArr1[i14 - 1];
                        f2 += (((i14 * i1) + f2) - i15);
                    }
                    if (true) continue;
                    break;
                case 70:
                    i1 = (int)-207L;
                    break;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f2) + i12 + i13 + s + i14 + i15 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=0.75F;
        int i=2;
        int i16=17;
        int i17=-196;
        int i18=-26;
        int i19=11;
        int i20=-174;
        int i21=-61797;
        int i22=4;
        int i23=111;
        int i24=28499;
        int[] iArr2 =new int[N];
        double d=111.30242;
        long l=-10L;
        byte by=-42;

        FuzzerUtils.init(iArr2, 110);

        f = (float)(((dFld * -9L) + i) * i);
        i <<= (int) ((-(i + i)) - (iMeth(i, 25614, i) * Test0241.instanceCount));
        i >>= i;
        for (d = 4; d < 164; d++) {
            Test0241.instanceCount = (long) d;
            for (l = 4; 157 > l; ++l) {
                i *= by;
                i = (int) Test0241.instanceCount;
                iArr2[(int)(l - 1)] = 4933;
                i16 += i17;
                i18 = 1;
                do {
                    i -= i17;
                } while (++i18 < 2);
                Test0241.instanceCount += (((l * f) + Test0241.sFld) - i17);
            }
            i *= i16;
            for (i19 = 4; i19 < 157; i19++) {
                i20 += -244;
            }
            Test0241.instanceCount = 107;
        }
        Test0241.instanceCount = 54197;
        f += l;
        for (i21 = 4; i21 < 340; i21++) {
            i17 <<= i17;
            i += (i21 * i16);
            Test0241.instanceCount = i20;
            i16 += (i21 * l);
            i20 = (int)d;
        }
        for (i23 = 15; i23 < 309; i23++) {
            i22 -= i24;
            Test0241.instanceCount >>= l;
            i16 = (int) Test0241.instanceCount;
            f -= i20;
        }

        FuzzerUtils.out.println("f i d = " + Float.floatToIntBits(f) + "," + i + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i16 l i17 = " + i16 + "," + l + "," + i17);
        FuzzerUtils.out.println("by i18 i19 = " + by + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 iArr2 = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0241.instanceCount dFld Test0241.bFld = " + Test0241.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + (Test0241.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0241.sFld Test0241.fArrFld = " + Test0241.sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0241.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0241 _instance = new Test0241();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
