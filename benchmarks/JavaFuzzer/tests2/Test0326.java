// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:27 2023
public class Test0326 {

    public static final int N = 400;

    public static long instanceCount=7L;
    public boolean bFld=false;
    public static long lFld=-11710L;
    public static long lFld1=-7943439540034462200L;
    public double dFld=-8.125894;
    public static long lFld2=8173490410074767628L;
    public float fFld=-80.914F;
    public static long[] lArrFld =new long[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0326.lArrFld, -1163179932288738718L);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=27;
        int i5=7;
        int i6=-17733;
        int i7=1;
        int[] iArr =new int[N];
        double d=-93.13285;
        double[] dArr =new double[N];
        boolean b=false;
        float f2=-1.933F;

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(dArr, 2.70600);

        i4 = (int)d;
        iArr[(i4 >>> 1) % N] &= i4;
        b = true;
        i4 = 171;
        dArr[(i4 >>> 1) % N] = i4;
        i4 *= 10;
        i5 = 1;
        do {
            i4 += i5;
            i4 = (int) Test0326.instanceCount;
            iArr[i5 - 1] = i4;
            for (i6 = 1; i6 < 5; i6++) {
                switch ((i6 % 2) + 99) {
                case 99:
                    i4 -= (int) Test0326.instanceCount;
                    Test0326.lFld = i6;
                    Test0326.lFld += (((i6 * Test0326.instanceCount) + f2) - i5);
                    break;
                case 100:
                    i7 -= i4;
                    break;
                }
            }
        } while (++i5 < 360);
        vMeth1_check_sum += i4 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i5 + i6 + i7 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static double dMeth(int i2, float f, long l) {

        float f1=37.679F;
        int i3=-34;
        int i8=39353;
        int i9=-23736;
        int[] iArr1 =new int[N];
        double d1=53.86123;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr1, -144);
        FuzzerUtils.init(byArr, (byte)-51);

        for (f1 = 15; f1 < 309; f1++) {
            vMeth1();
            d1 += Test0326.instanceCount;
            try {
                i2 = (i3 / i2);
                i3 = (i3 % iArr1[(int)(f1)]);
                iArr1[(int)(f1)] = (iArr1[(int)(f1 - 1)] % i2);
            } catch (ArithmeticException a_e) {}
            i2 = i3;
            Test0326.lArrFld[(int) (f1)] = Test0326.lFld;
        }
        for (i8 = 9; i8 < 188; i8++) {
            f = 115L;
        }
        i9 = i3;
        for (int i10 : iArr1) {
            i10 = i10;
            Test0326.lFld = i2;
            byArr[(48 >>> 1) % N] += (byte)221;
            i3 *= (int)l;
            i10 = i2;
        }
        long meth_res = i2 + Float.floatToIntBits(f) + l + Float.floatToIntBits(f1) + i3 + Double.doubleToLongBits(d1)
            + i8 + i9 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void vMeth() {

        int i1=57682;
        int i11=-122;
        int i12=-137;
        int i13=1;
        int i14=-202;
        int[] iArr2 =new int[N];
        float f3=-82.994F;

        FuzzerUtils.init(iArr2, -24956);

        bFld = ((i1 - (Test0326.instanceCount = 924783625L)) != (i1 += (int) dMeth(-64585, f3, Test0326.lFld)));
        i11 = 1;
        while (++i11 < 123) {
            iArr2[i11] /= (int) (Test0326.lFld | 1);
            if (i11 != 0) {
                vMeth_check_sum += i1 + Float.floatToIntBits(f3) + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2);
                return;
            }
            try {
                i1 = (i1 / -7894);
                i1 = (iArr2[i11] / -47);
                i1 = (iArr2[i11] % i11);
            } catch (ArithmeticException a_e) {}
            i1 -= i11;
            i1 -= i1;
            i1 ^= i1;
            i1 >>>= i11;
        }
        for (i12 = 11; i12 < 227; i12++) {
            i1 = i12;
            i13 += (-34 + (i12 * i12));
            i14 = 1;
            do {
                f3 += Test0326.instanceCount;
            } while (++i14 < 7);
            i13 += (i12 * i12);
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f3) + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=6, i15=-11, i16=23804, i17=2, i18=-14066, i19=8;
        long l1=110L, l2=98L;
        short s=11102;
        double d2=60.116917, d3=2.25447;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);

        Test0326.instanceCount += (++i);
        vMeth();
        for (l1 = 1; l1 < 307; l1 += 3) {
            iArrFld[(int)(l1 - 1)] *= i15;
            i = i;
            i15 += (int)(1.374F + (l1 * l1));
            i *= (int)l1;
            i15 = (int) Test0326.instanceCount;
            i15 += (int)5L;
        }
        for (i16 = 145; i16 > 7; --i16) {
            Test0326.lFld += (i16 - s);
            for (l2 = 10; l2 < 182; l2++) {
                i = i15;
            }
            Test0326.lFld1 += (long) dFld;
            i17 += i;
            bArr[i16] = false;
            if (bFld) {
                if (bFld) continue;
                i -= (int)l1;
                i >>= (int) Test0326.lFld2;
            } else {
                switch (((i16 % 2) * 5) + 82) {
                case 88:
                    d2 = 1;
                    do {
                        i15 ^= i16;
                        i += (int)((long)d2 | i16);
                        for (d3 = 1; d3 < 1; ++d3) {
                            switch (((-164 >>> 1) % 2) + 101) {
                            case 101:
                                dFld -= fFld;
                                i18 -= i16;
                                Test0326.lArrFld[(int) (d2)] = i15;
                                try {
                                    iArrFld[(int)(d3 - 1)] = (iArrFld[(int)(d3)] / 7);
                                    i18 = (i18 / -40586);
                                    iArrFld[(int)(d2)] = (iArrFld[(int)(d3 - 1)] / -166);
                                } catch (ArithmeticException a_e) {}
                            case 102:
                                i19 ^= (int) Test0326.lFld1;
                            }
                        }
                    } while (++d2 < 182);
                    break;
                case 86:
                    s -= (short)i19;
                    break;
                default:
                    if (bFld) continue;
                }
            }
        }

        FuzzerUtils.out.println("i l1 i15 = " + i + "," + l1 + "," + i15);
        FuzzerUtils.out.println("i16 i17 s = " + i16 + "," + i17 + "," + s);
        FuzzerUtils.out.println("l2 i18 d2 = " + l2 + "," + i18 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("d3 i19 bArr = " + Double.doubleToLongBits(d3) + "," + i19 + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0326.instanceCount bFld Test0326.lFld = " + Test0326.instanceCount + "," + (bFld ? 1 : 0) +
                "," + Test0326.lFld);
        FuzzerUtils.out.println("Test0326.lFld1 dFld Test0326.lFld2 = " + Test0326.lFld1 + "," + Double.doubleToLongBits(dFld) +
                "," + Test0326.lFld2);
        FuzzerUtils.out.println("fFld Test0326.lArrFld iArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0326.lArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0326 _instance = new Test0326();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
