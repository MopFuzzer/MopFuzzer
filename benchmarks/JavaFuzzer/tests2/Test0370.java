// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0370 {

    public static final int N = 400;

    public static long instanceCount=-7358398174293950946L;
    public long lFld=-2856066906L;
    public volatile byte byFld=-45;
    public static float fFld=-90.489F;
    public static short sFld=-2345;
    public int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0370.lArrFld, 2951075376L);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i21=6;
        int i22=205;
        int i23=28444;
        int i24=-13;
        int i25=3855;
        int i26=15;
        int i27=54082;
        int[] iArr2 =new int[N];
        double d1=-4.103714;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, -8249924347916167154L);
        FuzzerUtils.init(iArr2, -47334);

        for (i21 = 17; i21 < 322; ++i21) {
            for (i23 = i21; i23 < 5; i23 += 3) {
                i22 >>= i21;
                d1 -= i22;
                for (i25 = 1; 1 < i25; i25 -= 3) {
                    lArr1[i23 + 1][i23 - 1] = 4;
                    lArr1[i21][i23 - 1] += i21;
                    iArr2[i21] += 20013;
                    Test0370.instanceCount += i27;
                    lArr1[i25 + 1][i25 - 1] = i25;
                    i27 = i21;
                    i22 &= (int) Test0370.instanceCount;
                    i27 += i25;
                    i27 = i26;
                    i22 -= (int)d1;
                }
            }
        }
        vMeth1_check_sum += i21 + i22 + i23 + i24 + Double.doubleToLongBits(d1) + i25 + i26 + i27 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i19, int i20, float f1) {

        int i28=-38140;
        int i29=-13;
        int[] iArr3 =new int[N];
        boolean b=true;
        double d2=2.346;

        FuzzerUtils.init(iArr3, 129);

        vMeth1();
        i19 += i19;
        iArr3[(i19 >>> 1) % N] >>= i19;
        for (i28 = 8; i28 < 299; i28++) {
            Test0370.instanceCount <<= i19;
            i20 += (((i28 * Test0370.fFld) + i19) - Test0370.instanceCount);
            Test0370.instanceCount -= i20;
            iArr3[i28 + 1] += i19;
            i19 *= i28;
            b = b;
            Test0370.fFld += (i28 + i29);
            d2 = i19;
            b = b;
        }
        i20 <<= 99;
        i19 *= -46479;
        vMeth_check_sum += i19 + i20 + Float.floatToIntBits(f1) + i28 + i29 + (b ? 1 : 0) + Double.doubleToLongBits(d2)
            + FuzzerUtils.checkSum(iArr3);
    }

    public static long lMeth(long l3, int i13, float f) {

        int i14=2, i15=14, i16=120, i17=-103, i18=-116, i31=-51289, i32=-7;
        double d3=-59.4069;

        i14 = 304;
        do {
            for (i15 = i14; i15 < 5; ++i15) {
                for (i17 = i14; i17 < 1; ++i17) {
                    vMeth(i13, i17, Test0370.fFld);
                }
                i16 >>>= i17;
                i18 = i14;
                switch (((i15 % 5) * 5) + 125) {
                case 143:
                    i13 *= i16;
                    for (i31 = 1; 1 < i31; i31 -= 2) {
                        boolean b1=false;
                        i13 = (int)f;
                        if (b1) {
                            i13 += i31;
                        }
                        i13 += (((i31 * i17) + f) - i13);
                        i32 = i16;
                        d3 += Test0370.instanceCount;
                    }
                    break;
                case 148:
                    i18 *= i16;
                case 146:
                    Test0370.lArrFld[i15] += i18;
                    break;
                case 140:
                    Test0370.instanceCount = Test0370.instanceCount;
                    break;
                case 131:
                    Test0370.fFld += -15617;
                    break;
                default:
                    i16 -= i18;
                }
            }
        } while (--i14 > 0);
        long meth_res = l3 + i13 + Float.floatToIntBits(f) + i14 + i15 + i16 + i17 + i18 + i31 + i32 +
            Double.doubleToLongBits(d3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(long l1, int i4) {

        int i6=104;
        int i7=-1234;
        int i8=-11;
        int i9=114;
        int i10=1;
        int[][] iArr1 =new int[N][N];
        long l2=-27986L;
        short s=1559;
        double d=-21.122608;

        FuzzerUtils.init(iArr1, 151);

        i4 -= (int) (((i4 - l1) * Math.min(Test0370.instanceCount, lFld)) * ((++byFld) - Test0370.instanceCount));
        for (int i5 : iArrFld) {
            for (i6 = 1; i6 < 4; i6++) {
                i4 = -253;
                Test0370.fFld = (-720 - (--i8));
                for (l2 = 2; l2 > 1; l2--) {
                    i7 -= (int)(((s + i8) / (((long)(i5 - d)) | 1)) - (-(83L + (++l1))));
                    i9 *= (i8 = i7);
                    if (i10 != 0) {
                    }
                    iArrFld[(int)(l2 + 1)] += (int)((i4--) + d);
                    iArr1 = (iArr1 = FuzzerUtils.int2array(N, (int)222));
                    i7 += (int)(((l2 * i7) + l1) - lFld);
                    if (i5 != 0) {
                    }
                }
                i7 = i5;
                Test0370.instanceCount |= Integer.reverseBytes(i8++);
            }
        }
        long meth_res = l1 + i4 + i6 + i7 + i8 + l2 + i9 + s + Double.doubleToLongBits(d) + i10 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-13;
        int i1=116;
        int i2=8020;
        int i3=0;
        int i11=-89;
        int i12=5;
        int i33=6082;
        int[][] iArr =new int[N][N];
        long l=-210L;
        long[] lArr =new long[N];
        double d4=-1.88353;

        FuzzerUtils.init(iArr, 7);
        FuzzerUtils.init(lArr, -63967L);

        i = 1;
        while (++i < 200) {
            for (l = 6; l < 126; l++) {
                iArr = (iArr = iArr);
                for (i2 = 1; i2 < 2; i2++) {
                    i3 -= iMeth(lFld--, (-52601 - i2) * (i << -17624));
                    i3 >>>= (int)(lArr[i]++);
                }
            }
            switch (((i % 8) * 5) + 122) {
            case 159:
                for (i11 = i; i11 < 126; i11++) {
                    Test0370.fFld += i11;
                    iArr[i11] = (iArrFld = iArrFld);
                    Test0370.instanceCount += (((i11 * lFld) + l) - Test0370.instanceCount);
                    i1 += i11;
                    Test0370.fFld -= (lMeth(-4052986900L, -87, Test0370.fFld) + i11);
                    switch (((i % 10) * 5) + 123) {
                    case 145:
                        Test0370.fFld = i2;
                        i12 = (int)-19318L;
                        i33 = 1;
                        do {
                            Test0370.instanceCount += i11;
                            i1 = i12;
                            i3 = 140;
                            i1 += (i33 * i33);
                            iArr[i11][i + 1] |= -3;
                            i1 = i3;
                            i3 |= (int)l;
                            iArr[i11 - 1][i33] = (int) Test0370.instanceCount;
                            lArr[i] = -14;
                        } while (++i33 < 1);
                        i12 += (int)d4;
                        break;
                    case 154:
                        i12 += (((i11 * i3) + Test0370.instanceCount) - i11);
                        break;
                    case 125:
                        i12 += (i11 ^ i12);
                        i1 = (int)d4;
                    case 128:
                        i12 += (int)-68.54525;
                        break;
                    case 151:
                        lArr = FuzzerUtils.long1array(N, (long)51405L);
                        break;
                    case 165:
                        if (true) continue;
                        break;
                    case 137:
                        iArr[i][i] /= (int) ((long) (Test0370.fFld) | 1);
                        break;
                    case 159:
                        i1 += (int) Test0370.instanceCount;
                    case 162:
                        byFld = (byte)2314031872407042727L;
                    case 155:
                        i12 = i3;
                        break;
                    }
                }
                break;
            case 123:
                i1 = i12;
                break;
            case 133:
                i3 >>= Test0370.sFld;
                break;
            case 125:
                i12 *= i12;
                break;
            case 148:
                i12 -= (int)lFld;
                break;
            case 145:
                d4 /= -28896;
            case 147:
                i1 |= (int)lFld;
            case 153:
                Test0370.instanceCount = i11;
                break;
            }
        }

        FuzzerUtils.out.println("i l i1 = " + i + "," + l + "," + i1);
        FuzzerUtils.out.println("i2 i3 i11 = " + i2 + "," + i3 + "," + i11);
        FuzzerUtils.out.println("i12 i33 d4 = " + i12 + "," + i33 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("iArr lArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0370.instanceCount lFld byFld = " + Test0370.instanceCount + "," + lFld + "," + byFld);
        FuzzerUtils.out.println("Test0370.fFld Test0370.sFld iArrFld = " + Float.floatToIntBits(Test0370.fFld) + "," + Test0370.sFld +
            "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0370.lArrFld = " + FuzzerUtils.checkSum(Test0370.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0370 _instance = new Test0370();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
