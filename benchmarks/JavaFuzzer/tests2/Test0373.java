// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0373 {

    public static final int N = 400;

    public static long instanceCount=-21633L;
    public static boolean bFld=true;
    public float fFld=67.824F;
    public static byte byFld=-63;
    public float[] fArrFld =new float[N];
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0373.iArrFld, 3033);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=-197;
        int i6=-12;
        int i7=215;
        int[] iArr =new int[N];
        short s1=-3958;
        boolean b=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 7326);
        FuzzerUtils.init(lArr, -13521L);

        for (int i4 : iArr) {
            i5 = 1;
            while (++i5 < 4) {
                i4 = i4;
                i4 += (-9755 + (i5 * i5));
                iArr[i5] -= (int)-2438595859L;
                lArr[i5] -= s1;
            }
            for (i6 = 1; i6 < 4; i6++) {
                b = b;
            }
        }
        vMeth2_check_sum += i5 + s1 + i6 + i7 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth1(double d, int i3) {

        int i8=-9, i9=12954, i10=53699, i11=13, i12=9, i13=-2;
        short s2=-25160;
        float f=0.746F;

        vMeth2();
        Test0373.iArrFld = Test0373.iArrFld;
        for (i8 = 21; i8 < 380; i8++) {
            switch ((i8 % 2) + 7) {
            case 7:
                for (i10 = 1; i10 < 5; i10++) {
                    i9 >>= i3;
                    i3 &= s2;
                    s2 = (short)i3;
                    f += (i10 - f);
                    for (i12 = i10; 2 > i12; ++i12) {
                        i9 += i12;
                        f -= i3;
                        Test0373.iArrFld[i12 + 1] += (int) f;
                        i13 = i8;
                    }
                    Test0373.iArrFld[i8] += (int) Test0373.instanceCount;
                }
            case 8:
            default:
                Test0373.bFld = false;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i3 + i8 + i9 + i10 + i11 + s2 + Float.floatToIntBits(f) + i12
            + i13;
    }

    public void vMeth(int i2) {

        double d1=0.59834, d2=1.99744;
        short s3=32393;
        int i14=-3, i15=-2, i16=-73, i17=-8249, i18=105;
        byte by=112;

        if (true) {
            vMeth1(d1, i2);
        }
        Test0373.instanceCount = s3;
        for (i14 = 5; i14 < 168; i14++) {
            for (d2 = 10; d2 > 1; d2 -= 2) {
                by = (byte)fFld;
                i15 -= i15;
                if (Test0373.bFld) break;
                Test0373.bFld = Test0373.bFld;
                i15 += (int)d2;
                s3 += (short)(-7 + (d2 * d2));
                Test0373.iArrFld[i14 + 1] += (int) Test0373.instanceCount;
            }
        }
        for (i17 = 13; 347 > i17; ++i17) {
            Test0373.instanceCount += i18;
            s3 += (short)i17;
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d1) + s3 + i14 + i15 + Double.doubleToLongBits(d2) + i16 + by +
            i17 + i18;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i1=104, i19=14, i20=-237, i21=13, i22=-38, i23=-11, i24=31555, i25=-33412;
        short s=-4720;
        double d3=0.92395;

        for (i = 10; i < 179; ++i) {
            s -= (short)(++fArrFld[i]);
            vMeth(i);
            i1 >>= (int) Test0373.instanceCount;
            for (i19 = 1; 148 > i19; i19++) {
                i1 <<= i19;
                i20 += (i19 * Test0373.instanceCount);
                fFld -= i19;
            }
            i21 = 1;
            do {
                switch ((((84 >>> 1) % 3) * 5) + 98) {
                case 103:
                    for (i22 = i21; i22 < 1; ++i22) {
                        Test0373.instanceCount += i22;
                        try {
                            i23 = (-127 / Test0373.iArrFld[i]);
                            i20 = (i23 / i1);
                            i1 = (i22 / 58779);
                        } catch (ArithmeticException a_e) {}
                        Test0373.instanceCount %= (i23 | 1);
                        try {
                            i23 = (i % i23);
                            i20 = (i20 % i19);
                            i23 = (47 % i23);
                        } catch (ArithmeticException a_e) {}
                        i1 &= i;
                        Test0373.instanceCount += i19;
                        i1 |= i1;
                        i20 -= (int) Test0373.instanceCount;
                        if (Test0373.bFld) break;
                        i23 += (int)-232L;
                    }
                    i23 = (int) Test0373.instanceCount;
                    Test0373.iArrFld = Test0373.iArrFld;
                    try {
                        i23 = (i1 % 34161);
                        i20 = (Test0373.iArrFld[i - 1] / i1);
                        Test0373.iArrFld[i21] = (Test0373.iArrFld[i21 + 1] / -39472);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 105:
                    for (i24 = 1; i24 > i; --i24) {
                        switch ((i21 % 1) + 117) {
                        case 117:
                            Test0373.byFld += (byte) i21;
                            d3 -= Test0373.byFld;
                            Test0373.instanceCount += (i24 * Test0373.instanceCount);
                            fFld += (-13 + (i24 * i24));
                        }
                    }
                    break;
                case 102:
                    d3 *= 44742;
                    break;
                default:
                    fFld += Test0373.instanceCount;
                }
            } while (++i21 < 148);
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 d3 = " + i25 + "," + Double.doubleToLongBits(d3));

        FuzzerUtils.out.println("Test0373.instanceCount Test0373.bFld fFld = " + Test0373.instanceCount + "," + (Test0373.bFld ? 1 : 0)
            + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0373.byFld fArrFld Test0373.iArrFld = " + Test0373.byFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(Test0373.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0373 _instance = new Test0373();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
