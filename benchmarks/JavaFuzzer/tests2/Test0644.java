// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0644 {

    public static final int N = 400;

    public static long instanceCount=-2407753266L;
    public static float fFld=35.163F;
    public static double dFld=-2.116189;
    public boolean bFld=false;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, long l, float f1) {

        int i10=2;
        int i11=82;
        int i12=-59;
        int i13=-10;
        int i14=2;
        int[][] iArr1 =new int[N][N];
        double d1=-93.23709, d2=83.117301;
        byte by=-38;
        byte[] byArr =new byte[N];
        short[] sArr1 =new short[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(byArr, (byte)-42);
        FuzzerUtils.init(sArr1, (short)-29767);
        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(iArr1, -61934);

        for (i10 = 10; i10 < 237; ++i10) {
            i11 += (i10 - i10);
            i11 = (int)f1;
            d1 -= i11;
            for (i12 = i10; i12 < 7; ++i12) {
                if (i10 != 0) {
                    vMeth1_check_sum += i9 + l + Float.floatToIntBits(f1) + i10 + i11 + Double.doubleToLongBits(d1) +
                        i12 + i13 + Double.doubleToLongBits(d2) + i14 + by + FuzzerUtils.checkSum(byArr) +
                        FuzzerUtils.checkSum(sArr1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                i9 -= i12;
                for (d2 = 1; d2 < 1; d2++) {
                    switch ((i12 % 3) + 76) {
                    case 76:
                        l = l;
                        i14 += (int)f1;
                    case 77:
                        byArr[i10] |= (byte)i11;
                        i14 += (int)d2;
                        sArr1 = sArr1;
                        lArr[i12] += i12;
                    case 78:
                        iArr1[i10][(int)(d2)] = by;
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += i9 + l + Float.floatToIntBits(f1) + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13 +
            Double.doubleToLongBits(d2) + i14 + by + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(sArr1) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i8) {

        int i15=5;
        int i16=-36486;
        int i17=129;
        int i18=3;
        int i19=-13;
        int i20=3;
        int i21=-13;
        int[] iArr2 =new int[N];
        short s1=-31879;
        long l1=-5L;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr2, 23906);
        FuzzerUtils.init(fArr, 20.439F);

        vMeth1(26883, Test0644.instanceCount, Test0644.fFld);
        i15 = 219;
        do {
            Test0644.instanceCount += (((i15 * i8) + Test0644.instanceCount) - s1);
            iArr2[i15] -= i15;
            for (i16 = 1; 14 > i16; ++i16) {
                i8 = (int) Test0644.dFld;
                for (i18 = 1; i18 < 2; i18++) {
                    i17 = (int) Test0644.instanceCount;
                    Test0644.instanceCount += (((i18 * Test0644.instanceCount) + Test0644.instanceCount) - Test0644.instanceCount);
                    s1 = (short)i17;
                }
                Test0644.dFld *= Test0644.instanceCount;
                for (l1 = 1; l1 < 2; l1++) {
                    i21 += (int)(l1 * l1);
                    Test0644.instanceCount >>= i19;
                    fArr[i15 - 1] -= -6;
                }
            }
        } while ((i15 -= 2) > 0);
        long meth_res = i8 + i15 + s1 + i16 + i17 + i18 + i19 + l1 + i20 + i21 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4, int i5, int i6) {

        int i7=-62854;
        int i22=-129;
        int i23=-3149;
        int i24=-9;
        int[] iArr =new int[N];
        short s=5352;
        short[] sArr =new short[N];
        double d=1.79366, d3=-69.92475;
        boolean b=true;

        FuzzerUtils.init(sArr, (short)-28938);
        FuzzerUtils.init(iArr, 47);

        i4 = (--sArr[(27 >>> 1) % N]);
        i7 *= (++iArr[(i6 >>> 1) % N]);
        i5 = (int)((s++) + ((i5 + -246L) * (d * 1458730818328202722L)));
        i6 += (iMeth(i4) + i5);
        Test0644.instanceCount = i4;
        i6 |= i5;
        Test0644.fFld += i6;
        for (d3 = 4; 322 > d3; d3 += 2) {
            if (i7 != 0) {
                vMeth_check_sum += i4 + i5 + i6 + i7 + s + Double.doubleToLongBits(d) + Double.doubleToLongBits(d3) +
                    i22 + (b ? 1 : 0) + i23 + i24 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
                return;
            }
            iArr[(int)(d3 + 1)] ^= i22;
        }
        if (b) {
            Test0644.dFld = Test0644.fFld;
        } else {
            for (i23 = 10; i23 < 371; i23++) {
                b = false;
                i24 += i5;
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + s + Double.doubleToLongBits(d) + Double.doubleToLongBits(d3) + i22 + (b
            ? 1 : 0) + i23 + i24 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=35284, i2=163, i3=104, i26=-3, i27=-5, i28=1, i29=2, i30=59377, i31=-11, i32=1129;
        float f=1.551F;
        long l2=-1026070214L;

        i >>>= (int)((Math.max(i, i) - (6 + (-25 + f))) - f);
        i1 = 1;
        while (++i1 < 312) {
            for (i2 = 5; i2 < 81; i2++) {
                i3 <<= (i3 + ((i3 + i1) - (64427 - Integer.reverseBytes(i))));
                vMeth(i2, i3, -57029);
                Test0644.instanceCount <<= i;
                for (l2 = 1; l2 < 2; ++l2) {
                    i26 *= i2;
                    i26 += (int)l2;
                    i = (int) Test0644.instanceCount;
                }
                if (true) continue;
                i3 -= 49683;
            }
        }
        iArrFld[(i >>> 1) % N] *= i26;
        i = -4;
        i27 = 1;
        while (++i27 < 245) {
            byte by1=-39;
            Test0644.instanceCount += i;
            i26 |= i27;
            Test0644.fFld = by1;
            for (i28 = 6; 103 > i28; i28++) {
                f = 123;
                iArrFld[i28] -= 70;
                for (i30 = i27; 2 > i30; i30++) {
                    i3 = (int)f;
                    i3 += (i30 | (long)f);
                    Test0644.instanceCount <<= i3;
                    i3 += i30;
                    i29 = i28;
                    i32 += i30;
                    i32 = i32;
                    if (bFld) break;
                }
            }
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i2 i3 l2 = " + i2 + "," + i3 + "," + l2);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 = " + i32);

        FuzzerUtils.out.println("Test0644.instanceCount Test0644.fFld Test0644.dFld = " + Test0644.instanceCount + "," +
                Float.floatToIntBits(Test0644.fFld) + "," + Double.doubleToLongBits(Test0644.dFld));
        FuzzerUtils.out.println("bFld iArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0644 _instance = new Test0644();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
