// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0789 {

    public static final int N = 400;

    public static long instanceCount=-44363L;
    public static boolean bFld=true;
    public static volatile byte byFld=-49;
    public static double dFld=1.72702;
    public int[] iArrFld =new int[N];
    public static boolean[] bArrFld =new boolean[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0789.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(byte by, int i14) {

        int i15=4479, i16=-10, i17=-57721, i18=-115, i19=-160, i20=32819;
        float f2=89.951F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 24L);

        for (i15 = 9; i15 < 391; i15++) {
            if (Test0789.bFld) continue;
            switch ((i15 % 2) + 108) {
            case 108:
                i14 -= (int)2.65757;
            case 109:
                Test0789.instanceCount -= (long) f2;
                if (Test0789.bFld) break;
            }
            Test0789.instanceCount -= by;
            for (i17 = 1; i17 < 4; ++i17) {
                if (Test0789.bFld) {
                    for (i19 = 1; i19 < 2; ++i19) {
                        f2 += i17;
                        if (i15 != 0) {
                        }
                        lArr1[i15] *= i19;
                        by = (byte) Test0789.instanceCount;
                        Test0789.instanceCount += (i19 - i15);
                    }
                } else if (Test0789.bFld) {
                    i18 = i19;
                } else if (Test0789.bFld) {
                    i14 = (int) Test0789.instanceCount;
                }
            }
        }
        long meth_res = by + i14 + i15 + i16 + Float.floatToIntBits(f2) + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(long l, float f1, long l1) {

        int i8=193;
        int i9=129;
        int i10=204;
        int i11=-116;
        int i12=8;
        int i13=-45279;
        int i21=-26782;
        int[][] iArr =new int[N][N];
        long l2=9146994765638503610L;
        long[] lArr =new long[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, 26053);
        FuzzerUtils.init(lArr, 6354800790717033694L);
        FuzzerUtils.init(byArr, (byte)-50);

        Test0789.bArrFld[(-14 >>> 1) % N] = ((4L * iArr[(i8 >>> 1) % N][(i8 >>> 1) % N]) != Test0789.instanceCount);
        i9 = 1;
        do {
            for (i10 = 10; i10 > i9; i10 -= 2) {
                for (i12 = 1; i12 < 1; i12++) {
                    i13 <<= i9;
                    lArr[i9] += lMeth(Test0789.byFld, -46576);
                }
                i21 = 1;
                while (++i21 < 1) {
                    switch (((i21 % 2) * 5) + 18) {
                    case 19:
                        i8 = (int)l;
                        if (false) {
                            i13 += (i21 * i12);
                            i11 += i13;
                        } else if (Test0789.bFld) {
                            byArr[i9] = (byte) Test0789.dFld;
                            i13 += Test0789.byFld;
                        } else {
                            i8 += (int)l2;
                        }
                        break;
                    case 21:
                        i13 += (((i21 * f1) + f1) - Test0789.byFld);
                        break;
                    default:
                        Test0789.bFld = Test0789.bFld;
                    }
                }
            }
        } while (++i9 < 152);
        vMeth1_check_sum += l + Float.floatToIntBits(f1) + l1 + i8 + i9 + i10 + i11 + i12 + i13 + i21 + l2 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i2, float f, int i3) {

        int i4=-22727;
        int i5=137;
        int i6=136;
        int i7=18242;
        int i22=11;
        int i23=86;
        int[] iArr1 =new int[N];
        short s1=21002;

        FuzzerUtils.init(iArr1, -68);

        for (i4 = 229; i4 > 7; i4--) {
            for (i6 = 1; 7 > i6; i6 += 3) {
                vMeth1(-131L, f, Test0789.instanceCount);
                f *= Test0789.instanceCount;
                switch ((i4 % 2) + 89) {
                case 89:
                    s1 += (short) Test0789.instanceCount;
                    i7 += 14;
                    Test0789.bFld = Test0789.bFld;
                    Test0789.byFld = (byte) i6;
                    break;
                case 90:
                    for (i22 = 1; i22 < 4; i22++) {
                        iArr1[i6 - 1] >>>= (int) Test0789.instanceCount;
                        if (i22 != 0) {
                            vMeth_check_sum += i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + s1 + i22 + i23 +
                                FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                        try {
                            iArr1[i4 - 1] = (164 / i5);
                            iArr1[i4] = (i7 % 19);
                            i7 = (i6 % i3);
                        } catch (ArithmeticException a_e) {}
                        i7 += i22;
                        i23 += (((i22 * Test0789.byFld) + i22) - Test0789.instanceCount);
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + s1 + i22 + i23 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=-56, i24=-35127, i25=9, i26=-46021, i27=11270, i28=1, i29=-12, i30=32439;
        short s=-16927;
        float f3=-60.378F;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 236L);

        for (i = 15; i < 311; ++i) {
            i1 += iArrFld[i];
            s += (short) (((i * i1) + Test0789.instanceCount) - i);
            vMeth(i1, f3, -6);
            i1 -= (int) Test0789.dFld;
            for (i24 = 4; i24 < 85; ++i24) {
                i26 += (i24 * f3);
                i26 = i26;
                switch (((i24 % 2) * 5) + 16) {
                case 22:
                    i26 = i25;
                    for (i27 = 1; i27 < 2; ++i27) {
                        lArrFld[i24] >>= -49457;
                        i25 = i1;
                    }
                    Test0789.instanceCount *= i27;
                    i25 += i24;
                    break;
                case 21:
                    Test0789.instanceCount = (long) f3;
                    f3 += (i24 + i28);
                    iArrFld = iArrFld;
                    break;
                }
            }
            i29 = 1;
            do {
                s += (short) (((i29 * i1) + Test0789.instanceCount) - f3);
                Test0789.dFld += i29;
                i25 >>= (int) Test0789.instanceCount;
                Test0789.byFld = (byte) i26;
                i25 >>= (int) Test0789.instanceCount;
                i25 += (i29 * i29);
                i25 &= i1;
                i30 = 1;
                while (++i30 < 1) {
                    lArr2[i30 + 1] = s;
                }
                try {
                    i1 = (iArrFld[i29 - 1] / 508332806);
                    i28 = (5261 % i1);
                    i26 = (iArrFld[i29 - 1] / i);
                } catch (ArithmeticException a_e) {}
            } while (++i29 < 85);
        }
        iArrFld = iArrFld;

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("f3 i24 i25 = " + Float.floatToIntBits(f3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 lArr2 = " + i29 + "," + i30 + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0789.instanceCount Test0789.bFld Test0789.byFld = " + Test0789.instanceCount + "," + (Test0789.bFld ?
                1 : 0) + "," + Test0789.byFld);
        FuzzerUtils.out.println("Test0789.dFld iArrFld Test0789.bArrFld = " + Double.doubleToLongBits(Test0789.dFld) + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test0789.bArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0789 _instance = new Test0789();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
