// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:25 2023
public class Test0282 {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static volatile boolean bFld=true;
    public static double dFld=-43.7578;
    public static float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0282.fArrFld, -116.553F);
        FuzzerUtils.init(Test0282.iArrFld, -11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, float f1) {

        int i5=17231;
        int i6=8213;
        int i7=-40;
        int i8=164;
        int i9=-12638;
        int i10=-2;
        int[] iArr =new int[N];
        byte by=28;
        short s=-819;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(dArr, 1.69042);
        FuzzerUtils.init(lArr, 13L);

        for (i5 = 6; i5 < 208; i5++) {
            for (i7 = 1; i7 < 8; ++i7) {
                try {
                    i6 = (36297 % i4);
                    iArr[i5] = (i7 / -36876);
                    iArr[i7 + 1] = (iArr[i5 - 1] / i5);
                } catch (ArithmeticException a_e) {}
                for (i9 = i7; 2 > i9; ++i9) {
                    Test0282.instanceCount -= i4;
                    Test0282.bFld = Test0282.bFld;
                    dArr[i9 + 1] = i8;
                    iArr[i7] *= i7;
                    i4 = by;
                    lArr[i5 - 1] -= i9;
                    i10 <<= (int) Test0282.instanceCount;
                    f1 -= i6;
                }
            }
            i4 %= (int)(i5 | 1);
            s = (short)i10;
            i10 += (int) Test0282.instanceCount;
        }
        long meth_res = i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + by + s +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f) {

        int i2=-38132, i3=-6, i11=2, i12=8, i13=10, i14=-22389;
        byte by1=-78;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 12L);

        for (i2 = 6; i2 < 197; i2++) {
            iMeth(i11, f);
            for (i12 = 1; i12 < 8; ++i12) {
                i11 -= i13;
                lArr1[i12] = i13;
                i11 += i12;
                i11 ^= i3;
                i14 = 1;
                while (++i14 < 2) {
                    i11 += (((i14 * i3) + by1) - i14);
                    i3 = (int)f;
                    lArr1[i14 - 1] *= (long) Test0282.dFld;
                    Test0282.instanceCount = i11;
                    f += (i14 + i12);
                }
            }
            Test0282.instanceCount = -264060044L;
            Test0282.fArrFld = FuzzerUtils.float1array(N, (float) 0.156F);
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + i3 + i11 + i12 + i13 + i14 + by1 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(double d) {

        int i=1, i1=48, i15=37630, i16=3, i17=-104;
        float f2=-1.762F;
        short s1=-27658;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 239L);

        for (i = 356; 8 < i; i -= 3) {
            i1 += (int)238L;
            vMeth1(f2);
            switch ((((i1 >>> 1) % 4) * 5) + 125) {
            case 137:
                i15 = 1;
                do {
                    i1 = i1;
                    for (i16 = 1; 3 > i16; ++i16) {
                        i17 = i17;
                        i17 &= 51270;
                        f2 *= (float)-2.120097;
                    }
                    i17 += i;
                    lArr2 = lArr2;
                } while ((i15 += 2) < 13);
                f2 = i1;
                break;
            case 129:
                i1 *= i16;
                break;
            case 131:
                lArr2[i] >>= s1;
                break;
            case 126:
                i17 = i1;
                break;
            default:
                i17 += (int)(2.77F + (i * i));
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + Float.floatToIntBits(f2) + i15 + i16 + i17 + s1 +
            FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        byte by2=93;
        int i18=-228, i19=-193, i20=-7889, i21=28870, i22=8183, i23=12272;
        float f3=-34.588F;
        short s2=-2019;
        short[] sArr =new short[N];
        long[][] lArr3 =new long[N][N];

        FuzzerUtils.init(lArr3, 9190920589502687447L);
        FuzzerUtils.init(sArr, (short)7742);

        vMeth(Test0282.dFld);
        by2 += (byte) Test0282.dFld;
        lArr3[(i18 >>> 1) % N][(i18 >>> 1) % N] -= -16853;
        Test0282.instanceCount += i18;
        i18 -= i18;
        i18 ^= i18;
        i18 = (int) Test0282.instanceCount;
        for (i19 = 5; i19 < 282; ++i19) {
            i21 = 1;
            while (++i21 < 91) {
                if (Test0282.bFld) {
                    f3 *= 203;
                    i20 += i21;
                    for (i22 = 1; i22 > 1; i22 -= 2) {
                        switch ((i21 % 5) + 58) {
                        case 58:
                            Test0282.instanceCount >>= i23;
                            if (true) break;
                            break;
                        case 59:
                            lArr3[i19 - 1][i19 - 1] &= i19;
                            i18 = i22;
                            break;
                        case 60:
                            i18 += (i22 * i22);
                            Test0282.instanceCount &= Test0282.instanceCount;
                            i18 = i20;
                            i20 *= by2;
                            break;
                        case 61:
                            try {
                                i18 = (i18 / 45584);
                                Test0282.iArrFld[i19] = (i21 / 1875312596);
                                i18 = (59587 % i23);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 62:
                            Test0282.iArrFld[i22 - 1] = i23;
                            break;
                        }
                        Test0282.instanceCount = 147;
                        i20 = (int) Test0282.instanceCount;
                        sArr[i22] = (short)-10L;
                        i20 = i22;
                        i20 = 30;
                        Test0282.iArrFld[i22 + 1] -= i21;
                    }
                } else if (false) {
                    s2 = (short) Test0282.instanceCount;
                } else {
                    Test0282.iArrFld[i19] |= i23;
                }
            }
        }

        FuzzerUtils.out.println("by2 i18 i19 = " + by2 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 f3 = " + i20 + "," + i21 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i22 i23 s2 = " + i22 + "," + i23 + "," + s2);
        FuzzerUtils.out.println("lArr3 sArr = " + FuzzerUtils.checkSum(lArr3) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0282.instanceCount Test0282.bFld Test0282.dFld = " + Test0282.instanceCount + "," + (Test0282.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(Test0282.dFld));
        FuzzerUtils.out.println("Test0282.fArrFld Test0282.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0282.fArrFld)) + "," + FuzzerUtils.checkSum(Test0282.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0282 _instance = new Test0282();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
