// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:39 2023
public class Test0580 {

    public static final int N = 400;

    public static volatile long instanceCount=-2617628079601654982L;
    public static byte byFld=37;
    public static boolean bFld=true;
    public static float fFld=-45.142F;
    public static int iFld=13;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i2=1;

        i2 += i2;
        long meth_res = i2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d1, int i, float f) {

        int i1=101;
        int[] iArr =new int[N];
        short s=1229;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 30.136F);
        FuzzerUtils.init(iArr, 10);

        fArr[(i >>> 1) % N] -= (float) ((i + (d1 * i)) * ((Test0580.instanceCount + Test0580.instanceCount) - (135 % (Test0580.byFld
            | 1))));
        i1 = 1;
        while (++i1 < 176) {
            i += (-1 + (i1 * i1));
            Test0580.instanceCount = i1;
            f = (iMeth() + f);
            Test0580.instanceCount = Test0580.instanceCount;
            i -= i1;
            Test0580.instanceCount -= Test0580.byFld;
            iArr[i1] *= (int) Test0580.instanceCount;
            if (Test0580.bFld) {
                i += (int) Test0580.instanceCount;
                i -= i1;
                i += -5;
                s += (short)i;
                vMeth1_check_sum += Double.doubleToLongBits(d1) + i + Float.floatToIntBits(f) + i1 + s +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
                return;
            } else {
                i += i;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i + Float.floatToIntBits(f) + i1 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(double d) {

        int i3=-3667, i4=2, i5=15466, i6=-25793, i7=-20;

        vMeth1(-2.63562, i3, Test0580.fFld);
        for (i4 = 8; i4 < 160; ++i4) {
            Test0580.iFld = i4;
            Test0580.instanceCount = Test0580.iFld;
            i5 = i3;
            if (true) {
                Test0580.fFld -= Test0580.instanceCount;
                if (Test0580.bFld) {
                    for (i6 = i4; i6 < 10; ++i6) {
                        Test0580.iFld += i6;
                        i3 = (int)-4276448070L;
                        Test0580.iFld += i6;
                        i5 >>= (int) Test0580.instanceCount;
                        Test0580.instanceCount = -240;
                        i3 -= i6;
                    }
                }
            } else {
                i3 += (int) Test0580.instanceCount;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7;
    }

    public void mainTest(String[] strArr1) {

        double d2=2.67452;
        int i8=-3;
        int i9=-4;
        int i10=31650;
        int i11=63181;
        int i12=-8;
        int i13=0;
        int[] iArr1 =new int[N];
        short s1=-2854;
        float[] fArr1 =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -7170);
        FuzzerUtils.init(fArr1, -2.780F);
        FuzzerUtils.init(lArr, 20304L);

        vMeth(d2);
        for (i8 = 16; i8 < 296; i8++) {
            for (i10 = 4; i10 < 90; ++i10) {
                s1 += (short)i10;
                i11 = i11;
                Test0580.iFld = i8;
                for (i12 = i10; i12 < 2; ++i12) {
                    if (Test0580.bFld) break;
                    i11 += (((i12 * Test0580.instanceCount) + Test0580.instanceCount) - Test0580.fFld);
                    switch (((i9 >>> 1) % 2) + 65) {
                    case 65:
                        Test0580.instanceCount &= Test0580.byFld;
                        if (true) continue;
                        break;
                    case 66:
                        i9 = (int)d2;
                        i9 *= (int)-31.44F;
                        iArr1[i12 + 1] -= i9;
                        iArr1[i8 - 1] = i10;
                        break;
                    default:
                        i9 += 8;
                        Test0580.iFld >>= i8;
                        fArr1 = fArr1;
                    }
                    i13 *= i11;
                    Test0580.fFld = i9;
                    Test0580.fFld = 2853500071L;
                    Test0580.iFld = i10;
                    Test0580.instanceCount += i12;
                    Test0580.instanceCount += (i12 ^ Test0580.iFld);
                }
                Test0580.instanceCount *= i11;
                i13 = i11;
                i9 = (int)-2L;
                try {
                    i9 = (i11 / iArr1[i10]);
                    i9 = (i11 % i11);
                    Test0580.iFld = (-9438 % iArr1[i10]);
                } catch (ArithmeticException a_e) {}
            }
            lArr[i8 + 1] <<= i13;
        }

        FuzzerUtils.out.println("d2 i8 i9 = " + Double.doubleToLongBits(d2) + "," + i8 + "," + i9);
        FuzzerUtils.out.println("i10 i11 s1 = " + i10 + "," + i11 + "," + s1);
        FuzzerUtils.out.println("i12 i13 iArr1 = " + i12 + "," + i13 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("fArr1 lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0580.instanceCount Test0580.byFld Test0580.bFld = " + Test0580.instanceCount + "," + Test0580.byFld +
                "," + (Test0580.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0580.fFld Test0580.iFld = " + Float.floatToIntBits(Test0580.fFld) + "," + Test0580.iFld);

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0580 _instance = new Test0580();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
