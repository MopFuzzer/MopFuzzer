// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0908 {

    public static final int N = 400;

    public static long instanceCount=-8770356596333754377L;
    public static int iFld=-245;
    public static double dFld=-10.13082;
    public static float fFld=-44.538F;
    public volatile boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static byte[] byArrFld =new byte[N];
    public static volatile long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0908.iArrFld, -9);
        FuzzerUtils.init(Test0908.byArrFld, (byte) 24);
        FuzzerUtils.init(Test0908.lArrFld, 49082L);
    }

    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(byte by1) {

        long l=-169L;
        int i10=39690, i11=-61299, i12=14, i13=-18008, i14=-65186, i15=6, i16=10, i17=14;
        float f1=1.456F;
        double d1=0.41856;
        boolean b1=true;

        for (l = 13; l < 266; ++l) {
            i11 = 1;
            do {
                i12 = 1;
                while ((i12 -= 3) > 0) {
                    Test0908.iFld = i11;
                    f1 += i11;
                }
            } while (++i11 < 6);
            Test0908.iFld += (int) (l * l);
            i10 = i12;
            f1 %= ((long) (Test0908.dFld) | 1);
        }
        for (i13 = 9; i13 < 263; i13++) {
            Test0908.instanceCount += (i13 | i11);
        }
        Test0908.iArrFld[(i11 >>> 1) % N] >>>= i11;
        for (d1 = 5; d1 < 196; d1++) {
            for (i16 = 1; i16 < 8; i16++) {
                if (b1) continue;
                Test0908.iArrFld[i16] = -8;
            }
        }
        vMeth_check_sum += by1 + l + i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 +
            Double.doubleToLongBits(d1) + i15 + i16 + i17 + (b1 ? 1 : 0);
    }

    public static short sMeth() {

        int i8=17046, i9=-61, i18=1, i19=14, i20=2;
        boolean b2=false;

        for (i8 = 6; i8 < 379; i8++) {
            vMeth((byte)(85));
        }
        for (i18 = 13; i18 < 238; ++i18) {
            i19 += i18;
            i9 = -72;
            Test0908.instanceCount = Test0908.instanceCount;
            switch ((((Test0908.iFld >>> 1) % 9) * 5) + 110) {
            case 123:
                i20 = 7;
                while ((i20 -= 2) > 0) {
                    Test0908.iFld = (int) Test0908.instanceCount;
                    Test0908.byArrFld[i18 + 1] *= (byte) -31551;
                    Test0908.instanceCount = i20;
                    i9 -= 250;
                    Test0908.iArrFld[i18 + 1] = i8;
                    Test0908.instanceCount = (long) -1.211F;
                    b2 = b2;
                }
                break;
            case 138:
            case 112:
                Test0908.iArrFld[i18 + 1] = -59142;
            case 143:
                Test0908.iFld >>= i20;
                break;
            case 131:
                i19 += 39001;
                break;
            case 155:
                Test0908.iFld *= 240;
                break;
            case 125:
                i19 += (int) Test0908.fFld;
                break;
            case 146:
                Test0908.fFld += i18;
                break;
            case 129:
                i9 = -11;
            default:
                Test0908.instanceCount += i18;
            }
        }
        long meth_res = i8 + i9 + i18 + i19 + i20 + (b2 ? 1 : 0);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth() {

        int i=130, i1=-9, i2=-4436, i3=69, i4=71, i5=49060, i6=205, i7=8216;
        short s=15234;
        float f=116.119F;
        boolean b=false;
        double d=87.92327;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-55);

        for (i = 301; i > 14; i--) {
            i1 *= (int) (((-7 * (i - Test0908.instanceCount)) << (i1--)) - (i1++));
            Test0908.instanceCount = ((s++) * (byArr[i + 1]--));
            Test0908.iFld >>>= (int) (((Test0908.instanceCount + i1) + Test0908.instanceCount) - ((Test0908.iFld * f) -
                    Test0908.instanceCount));
            if (i < Test0908.iFld) break;
            b = (b = (Math.abs(d) == (706120478L - (i2 - i))));
            for (i3 = i; i3 < 6; ++i3) {
                i2 >>= (int) (((Test0908.iFld + i4) - (i + i3)) + f);
                for (i5 = 1; i5 < 1; ++i5) {
                    Test0908.iArrFld[i5] += i7;
                    Test0908.instanceCount = (((-21244 + Test0908.iFld) + -64) - (sMeth() + Test0908.instanceCount));
                    i1 = Test0908.iFld;
                    Test0908.instanceCount = i;
                    i1 += (int) Test0908.instanceCount;
                }
                Test0908.iFld += (((i3 * Test0908.instanceCount) + i7) - Test0908.instanceCount);
            }
        }
        long meth_res = i + i1 + s + Float.floatToIntBits(f) + (b ? 1 : 0) + Double.doubleToLongBits(d) + i2 + i3 + i4
            + i5 + i6 + i7 + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=5;
        int i21=171, i22=-3, i23=-2704, i24=63, i25=142, i26=189, i27=-38, i28=5, i29=-8;

        Test0908.iFld -= (by * (Test0908.iFld++));
        iMeth();
        Test0908.instanceCount = Test0908.iFld;
        Test0908.dFld *= Test0908.instanceCount;
        Test0908.iArrFld[(Test0908.iFld >>> 1) % N] <<= (int) Test0908.instanceCount;
        Test0908.instanceCount += (long) Test0908.fFld;
        Test0908.lArrFld[(Test0908.iFld >>> 1) % N] = Test0908.lArrFld[(Test0908.iFld >>> 1) % N];
        Test0908.instanceCount = (long) Test0908.dFld;
        Test0908.fFld -= Test0908.iFld;
        for (i21 = 5; i21 < 373; i21++) {
            Test0908.dFld -= 2.32346;
            i22 = i21;
            i22 = by;
            for (i23 = 4; i23 < 68; ++i23) {
                Test0908.dFld = i21;
                Test0908.iFld -= (int) Test0908.instanceCount;
            }
            switch ((i21 % 6) + 4) {
            case 4:
            case 5:
                for (i25 = 3; 68 > i25; ++i25) {
                    i27 = 1;
                    while (++i27 < 2) {
                        bFld = bFld;
                        i26 *= (int) Test0908.instanceCount;
                    }
                    Test0908.instanceCount >>= i24;
                    Test0908.iFld += (int) Test0908.fFld;
                    for (i28 = 1; i28 < 2; i28++) {
                        Test0908.fFld += ((long) i28 ^ (long) Test0908.fFld);
                        by *= (byte) Test0908.instanceCount;
                        i22 += (((i28 * i22) + i24) - Test0908.instanceCount);
                        Test0908.fFld += (i28 * i28);
                        Test0908.instanceCount += (i28 | Test0908.instanceCount);
                        Test0908.fFld -= i26;
                    }
                }
                break;
            case 6:
                i26 = -2;
                break;
            case 7:
                i29 += (((i21 * Test0908.fFld) + i26) - i22);
                break;
            case 8:
                i26 ^= i25;
                break;
            case 9:
            default:
                i24 += i21;
            }
        }

        FuzzerUtils.out.println("by i21 i22 = " + by + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 = " + i29);

        FuzzerUtils.out.println("Test0908.instanceCount Test0908.iFld Test0908.dFld = " + Test0908.instanceCount + "," + Test0908.iFld +
                "," + Double.doubleToLongBits(Test0908.dFld));
        FuzzerUtils.out.println("Test0908.fFld bFld Test0908.iArrFld = " + Float.floatToIntBits(Test0908.fFld) + "," + (bFld ? 1 :
                0) + "," + FuzzerUtils.checkSum(Test0908.iArrFld));
        FuzzerUtils.out.println("Test0908.byArrFld Test0908.lArrFld = " + FuzzerUtils.checkSum(Test0908.byArrFld) + "," +
                FuzzerUtils.checkSum(Test0908.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0908 _instance = new Test0908();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
