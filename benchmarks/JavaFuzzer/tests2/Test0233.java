// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0233 {

    public static final int N = 400;

    public static volatile long instanceCount=65L;
    public short sFld=-821;
    public byte byFld=23;
    public volatile float fFld=-17.624F;
    public static byte[] byArrFld =new byte[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0233.byArrFld, (byte) 54);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l2, int i4) {

        int i5=56737;
        int i6=11;
        int i7=-68;
        int i8=55374;
        int i9=-8;
        int[] iArr =new int[N];
        double d=-2.19895, d1=0.83612;
        byte by=-69;
        short s=10020;
        boolean b=true;

        FuzzerUtils.init(iArr, -7);

        l2 += i4;
        for (i5 = 240; 5 < i5; --i5) {
            d -= 23001;
            by += (byte)i5;
        }
        iArr[(i4 >>> 1) % N] -= i5;
        s = (short)l2;
        i7 = 1;
        while (++i7 < 224) {
            for (d1 = 1; d1 < 7; d1++) {
                i8 += (int) (((d1 * l2) + i4) - Test0233.instanceCount);
                Test0233.instanceCount >>= 57787;
                Test0233.instanceCount |= i7;
            }
            i9 = 1;
            do {
                if (b) {
                    Test0233.byArrFld[i9 + 1] = (byte) i7;
                    i4 |= i8;
                }
            } while (++i9 < 7);
        }
        vMeth2_check_sum += l2 + i4 + i5 + i6 + Double.doubleToLongBits(d) + by + s + i7 + Double.doubleToLongBits(d1)
            + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i10=36647;
        int i11=159;
        int i12=13;
        int i13=23688;
        int i14=-27812;
        int[][] iArr1 =new int[N][N];
        float f=-34.109F, f1=2.701F, f2=0.629F;
        short s1=-19923;
        short[] sArr =new short[N];
        boolean b1=true;
        byte by1=99;

        FuzzerUtils.init(iArr1, -54550);
        FuzzerUtils.init(sArr, (short)27372);

        vMeth2(4248818880L, i10);
        Test0233.instanceCount = -199;
        for (f = 4; f < 229; f++) {
            i11 += (int)f;
            i11 = i10;
            i11 += (int)((long)f ^ i10);
            f1 += Test0233.instanceCount;
            s1 += (short)(((f * i10) + i10) - i11);
            if (b1) continue;
            switch (((i10 >>> 1) % 8) + 36) {
            case 36:
                for (f2 = f; f2 < 7; f2++) {
                    Test0233.instanceCount = i12;
                    for (i13 = (int)(f2); 1 > i13; i13++) {
                        Test0233.instanceCount += i13;
                        by1 *= (byte)i13;
                    }
                }
                break;
            case 37:
                i14 -= i10;
                break;
            case 38:
                i11 -= i11;
            case 39:
                if (i10 != 0) {
                    vMeth1_check_sum += i10 + Float.floatToIntBits(f) + i11 + Float.floatToIntBits(f1) + s1 + (b1 ? 1 :
                        0) + Float.floatToIntBits(f2) + i12 + i13 + i14 + by1 + FuzzerUtils.checkSum(iArr1) +
                        FuzzerUtils.checkSum(sArr);
                    return;
                }
            case 40:
                iArr1[(int)(f)][(int)(f + 1)] |= i11;
                break;
            case 41:
                f1 *= i12;
                break;
            case 42:
                sArr[(int) (f + 1)] %= (short) (Test0233.instanceCount | 1);
                break;
            case 43:
                i11 = by1;
                break;
            }
        }
        vMeth1_check_sum += i10 + Float.floatToIntBits(f) + i11 + Float.floatToIntBits(f1) + s1 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f2) + i12 + i13 + i14 + by1 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
    }

    public void vMeth(long l, int i, long l1) {

        int i1=-6, i2=20308, i3=-9;
        float f3=0.640F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -53L);

        i1 = 1;
        while (++i1 < 145) {
            for (i2 = i1; i2 < 11; i2++) {
                vMeth1();
                Test0233.instanceCount *= i2;
                switch ((i2 % 7) + 102) {
                case 102:
                    lArr[i2 + 1] *= (long)f3;
                    l += (i2 ^ l);
                    f3 -= -5;
                    l += 59086;
                case 103:
                    if (i1 != 0) {
                        vMeth_check_sum += l + i + l1 + i1 + i2 + i3 + Float.floatToIntBits(f3) +
                            FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    lArr = lArr;
                    i3 = i1;
                    l1 &= i3;
                case 104:
                    Test0233.byArrFld[i2 + 1] = (byte) i2;
                    break;
                case 105:
                    i3 *= i2;
                case 106:
                    iArrFld = FuzzerUtils.int1array(N, (int)93);
                    break;
                case 107:
                    l = i1;
                case 108:
                    i -= i;
                    break;
                }
            }
        }
        vMeth_check_sum += l + i + l1 + i1 + i2 + i3 + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=-8107, i16=-208, i17=253, i18=182, i19=-191, i20=-195, i21=-9, i22=-4;
        boolean b2=true;
        long l3=-21844L;
        long[] lArr1 =new long[N];
        double d2=-119.29375;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(lArr1, -2250003322L);
        FuzzerUtils.init(dArr, -1.25720);

        vMeth(Test0233.instanceCount, i15, Test0233.instanceCount);
        for (i16 = 3; i16 < 333; i16 += 3) {
            lArr1 = lArr1;
            b2 = b2;
            i15 <<= 41040;
            for (l3 = 11; l3 < 228; ++l3) {
                try {
                    i15 = (25196 % i16);
                    iArrFld[i16] = (137 % i16);
                    iArrFld[(int)(l3 + 1)] = (i15 % 10760);
                } catch (ArithmeticException a_e) {}
                switch ((int)((l3 % 5) + 18)) {
                case 18:
                    dArr[i16][i16 + 1] -= sFld;
                    i18 = (int)307482638L;
                    break;
                case 19:
                    for (i19 = 1; i19 < 2; ++i19) {
                        try {
                            iArrFld[i19] = (i19 % i19);
                            i20 = (i20 / i20);
                            i18 = (202 % i18);
                        } catch (ArithmeticException a_e) {}
                        i18 = (int)l3;
                        i18 += 2786;
                        d2 *= i19;
                        i17 = (int)-877342479L;
                        iArrFld[i16] <<= 10;
                        Test0233.instanceCount += (((i19 * i20) + i19) - byFld);
                        i18 = -5847;
                        iArrFld[i19 - 1] -= (int) Test0233.instanceCount;
                    }
                    iArrFld[(int)(l3 - 1)] += i15;
                    break;
                case 20:
                    for (i21 = 1; i21 < 2; i21++) {
                        fFld = i22;
                        Test0233.instanceCount = 14844;
                        Test0233.instanceCount = i17;
                        Test0233.instanceCount = Test0233.instanceCount;
                        b2 = b2;
                        i20 = (int)l3;
                    }
                    iArrFld[i16] <<= i17;
                    fFld += (((l3 * i21) + i18) - i18);
                    break;
                case 21:
                    i20 = i17;
                    break;
                case 22:
                    iArrFld[i16 - 1] = i16;
                }
            }
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("b2 l3 i18 = " + (b2 ? 1 : 0) + "," + l3 + "," + i18);
        FuzzerUtils.out.println("i19 i20 d2 = " + i19 + "," + i20 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i21 i22 lArr1 = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0233.instanceCount sFld byFld = " + Test0233.instanceCount + "," + sFld + "," + byFld);
        FuzzerUtils.out.println("fFld Test0233.byArrFld iArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0233.byArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0233 _instance = new Test0233();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
