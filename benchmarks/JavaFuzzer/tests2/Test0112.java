// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0112 {

    public static final int N = 400;

    public static long instanceCount=-603891441L;
    public static double dFld=-1.81313;
    public float fFld=-2.626F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0112.iArrFld, -12);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6, float f1, short s1) {

        int i7=28;
        int i8=-55438;
        int i9=-5;
        int i10=-61915;
        int i11=-11;
        int[] iArr1 =new int[N];
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr1, -41213);
        FuzzerUtils.init(fArr, -90.208F);

        i6 -= (int)f1;
        Test0112.instanceCount -= i6;
        i7 = 1;
        while (++i7 < 354) {
            for (i8 = 1; 5 > i8; i8++) {
                for (i10 = 2; i10 > i8; --i10) {
                    i11 >>= i6;
                    i11 = i10;
                    Test0112.dFld = i7;
                    i11 += (((i10 * i7) + i9) - i7);
                    i11 >>= i10;
                    i11 += (((i10 * f1) + i6) - f1);
                    Test0112.instanceCount *= s1;
                    s1 *= (short) Test0112.instanceCount;
                }
            }
            iArr1[i7] = (int)f1;
            fArr[i7 - 1][i7 + 1] *= -9;
        }
        long meth_res = i6 + Float.floatToIntBits(f1) + s1 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i1=-213, i2=-10, i3=-146, i4=-12013, i5=-135;
        short s=29811;
        short[] sArr =new short[N];
        float f2=2.796F;

        FuzzerUtils.init(sArr, (short)9505);

        for (i1 = 3; i1 < 325; i1++) {
            Test0112.dFld = i1;
            for (i3 = 1; i3 < 5; i3++) {
                i2 = (i4++);
                sArr[i3 - 1] -= (short) ((i2 + (~(s * i4))) + (Test0112.instanceCount *= i4));
                i5 = 1;
                while (++i5 < 2) {
                    i2 += (97 + (i5 * i5));
                    iMeth(-6, f2, (short)(-23230));
                    Test0112.iArrFld[i5 + 1] -= (int) Test0112.instanceCount;
                }
                f2 += (((i3 * f2) + f2) - f2);
                i2 = i4;
                f2 -= i4;
                i2 <<= i2;
                i2 += (i3 ^ Test0112.instanceCount);
                i4 = i2;
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + s + i5 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(float f) {

        int i=-30;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -98);

        i = (iArr[(i >>> 1) % N]++);
        vMeth1();
        vMeth_check_sum += Float.floatToIntBits(f) + i + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        short s2=16174;
        int i12=-26762, i13=8, i14=7, i15=5775, i16=-182, i17=56067, i18=-2, i19=5, i20=61285, i21=-239, i22=7,
            i23=-60602, i24=33697;
        boolean b=true;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, -117.93F);

        vMeth(0.764F);
        s2 = (short)-5;
        fFld += i12;
        Test0112.instanceCount -= i12;
        i13 = 1;
        while (++i13 < 240) {
            i12 = (int) Test0112.instanceCount;
            i12 = i13;
            for (i14 = i13; 105 > i14; i14++) {
                fFld += i12;
                i12 += i15;
            }
            for (i16 = i13; i16 < 105; ++i16) {
                fArr1[i13] = s2;
            }
            Test0112.iArrFld[i13 - 1] -= s2;
            switch (((-8 >>> 1) % 3) + 87) {
            case 87:
                for (i18 = 6; i18 < 105; i18++) {
                    for (i20 = 1; i20 < 2; i20++) {
                        i21 += 2;
                        i15 -= 6;
                    }
                    if (true) continue;
                    b = b;
                    i21 >>= i18;
                }
                Test0112.iArrFld[i13 - 1] ^= i15;
                for (i22 = 4; i22 < 105; ++i22) {
                    i15 += (-4 + (i22 * i22));
                    Test0112.instanceCount += i22;
                    i19 -= i21;
                    fArr1 = FuzzerUtils.float1array(N, (float)1.678F);
                    i23 = i23;
                    i23 -= i16;
                    i12 -= i14;
                }
                break;
            case 88:
                Test0112.dFld *= i16;
            case 89:
                i24 = (int)-24.944F;
                break;
            default:
                i12 += (i13 * i13);
            }
        }

        FuzzerUtils.out.println("s2 i12 i13 = " + s2 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 b = " + i20 + "," + i21 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0112.instanceCount Test0112.dFld fFld = " + Test0112.instanceCount + "," +
                Double.doubleToLongBits(Test0112.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0112.iArrFld = " + FuzzerUtils.checkSum(Test0112.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0112 _instance = new Test0112();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
