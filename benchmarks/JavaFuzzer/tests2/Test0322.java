// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:27 2023
public class Test0322 {

    public static final int N = 400;

    public static volatile long instanceCount=-3078748866L;
    public static byte byFld=-44;
    public static short sFld=-49;
    public static int iFld=11;
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0322.iArrFld, -8);
    }

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f4, double d2) {

        int i11=-54002, i12=-12, i13=24740, i14=137, i15=-3, i16=-13;
        short s=17511;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)2731);

        for (i11 = 282; i11 > 16; --i11) {
            Test0322.iArrFld[i11 - 1][i11 + 1] <<= i12;
            i12 += (((i11 * f4) + s) - i12);
            Test0322.instanceCount = -93;
            for (i13 = 1; i13 < 6; ++i13) {
                i12 >>>= i14;
                Test0322.instanceCount >>= i11;
                sArr = sArr;
                Test0322.instanceCount -= Test0322.instanceCount;
                Test0322.byFld = (byte) Test0322.instanceCount;
                Test0322.byFld = (byte) i14;
                i12 = (int)d2;
            }
            for (i15 = 1; i15 < 6; i15++) {
                i16 <<= i13;
                Test0322.instanceCount = i12;
            }
        }
        long meth_res = Float.floatToIntBits(f4) + Double.doubleToLongBits(d2) + i11 + i12 + s + i13 + i14 + i15 + i16
            + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        float f1=-119.733F, f2=-1.483F, f3=0.738F;
        int i7=-9, i8=-192, i9=144, i10=6;
        double d1=0.96457;

        for (f1 = 3; f1 < 160; ++f1) {
            Test0322.byFld += (byte) i7;
            for (i8 = 1; 10 > i8; i8 += 2) {
                i9 -= (int)f1;
            }
        }
        for (f2 = 1; f2 < 155; f2++) {
            f3 += f2;
            i10 += (i10++);
            i10 = (--i10);
            if (i9 != 0) {
                vMeth_check_sum += Float.floatToIntBits(f1) + i7 + i8 + i9 + Float.floatToIntBits(f2) + i10 +
                    Float.floatToIntBits(f3) + Double.doubleToLongBits(d1);
                return;
            }
            Test0322.instanceCount = (long) ((--i9) * ((++d1) + (f2 + i7)));
            Test0322.instanceCount <<= (long) (f1 * (i8 + f1));
        }
        i9 = (i8 - iMeth(f2, d1));
        Test0322.instanceCount <<= i9;
        vMeth_check_sum += Float.floatToIntBits(f1) + i7 + i8 + i9 + Float.floatToIntBits(f2) + i10 +
            Float.floatToIntBits(f3) + Double.doubleToLongBits(d1);
    }

    public static short sMeth() {

        int i17=-125, i18=-57295, i19=40862, i20=36, i21=4455, i22=12048, i23=-141;
        float f5=82.576F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -78.942F);

        vMeth();
        for (i17 = 11; i17 < 260; i17++) {
            i18 = i17;
            i19 = 7;
            while (--i19 > 0) {
                Test0322.sFld |= (short) -64924;
            }
            i18 = (int)-3459805590L;
            fArr[i17] = i18;
            for (i20 = 1; 7 > i20; i20++) {
                int i24=1;
                Test0322.iFld += i19;
                i22 = 1;
                while (++i22 < 2) {
                    Test0322.instanceCount += (((i22 * i20) + i21) - Test0322.instanceCount);
                    f5 = Test0322.instanceCount;
                }
                i23 = i24;
                Test0322.instanceCount >>= i23;
                Test0322.instanceCount += -171;
            }
        }
        long meth_res = i17 + i18 + i19 + i20 + i21 + i22 + Float.floatToIntBits(f5) + i23 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-25839, i1=140, i2=250, i3=-4, i4=-112, i5=-12, i6=7, i25=124, i26=-42023, i27=-16041;
        byte by=-37;
        float f=0.233F;
        double d=1.21295;
        boolean b=true;

        i /= (int) (((--i) + (++Test0322.instanceCount)) | 1);
        for (i1 = 5; i1 < 315; i1++) {
            i *= (--i2);
            for (i3 = i1; i3 < 81; ++i3) {
                by += (byte)(130 + (i3 * i3));
                f += (((i3 * i3) + i1) - i2);
                for (i5 = 1; i5 < 1; ++i5) {
                    Test0322.instanceCount = Test0322.instanceCount;
                }
                Test0322.iArrFld = Test0322.iArrFld;
                try {
                    i = (Test0322.iArrFld[i3][i3 + 1] / i1);
                    i4 = (-2129979331 % i6);
                    i6 = (-2039394095 % i4);
                } catch (ArithmeticException a_e) {}
                d = i;
                Test0322.iArrFld[i1][i3 - 1] = (int) (((Test0322.iArrFld[i3][i3] -= i5) + sMeth()) * f);
                for (i25 = 1; i25 < 1; i25++) {
                    i26 <<= i3;
                    f = f;
                    i26 &= Test0322.iFld;
                    Test0322.iArrFld[i3 + 1][i1 + 1] >>= (int) Test0322.instanceCount;
                    f += (((i25 * i4) + Test0322.byFld) - i26);
                    Test0322.instanceCount += (35441 + (i25 * i25));
                    try {
                        i26 = (i3 / Test0322.iFld);
                        i6 = (153 / i26);
                        i4 = (i5 / 1374);
                    } catch (ArithmeticException a_e) {}
                    i += (i25 ^ (long)f);
                }
            }
            f = (float)d;
        }
        i2 = i6;
        Test0322.iArrFld[(9 >>> 1) % N][(i2 >>> 1) % N] -= 248;
        b = b;
        i27 = 1;
        do {
            i = (int) Test0322.instanceCount;
            d += Test0322.instanceCount;
            i26 += (i27 * Test0322.instanceCount);
            f = f;
        } while (++i27 < 129);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 by = " + i3 + "," + i4 + "," + by);
        FuzzerUtils.out.println("f i5 i6 = " + Float.floatToIntBits(f) + "," + i5 + "," + i6);
        FuzzerUtils.out.println("d i25 i26 = " + Double.doubleToLongBits(d) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("b i27 = " + (b ? 1 : 0) + "," + i27);

        FuzzerUtils.out.println("Test0322.instanceCount Test0322.byFld Test0322.sFld = " + Test0322.instanceCount + "," + Test0322.byFld +
                "," + Test0322.sFld);
        FuzzerUtils.out.println("Test0322.iFld Test0322.iArrFld = " + Test0322.iFld + "," + FuzzerUtils.checkSum(Test0322.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0322 _instance = new Test0322();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
