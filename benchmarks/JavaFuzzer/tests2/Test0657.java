// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:43 2023
public class Test0657 {

    public static final int N = 400;

    public static long instanceCount=-1899312582L;
    public static int iFld=-73;
    public volatile long lFld=-1195L;
    public static short sFld=15701;
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0657.iArrFld, 10);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i3=7076, i4=-2794, i5=59189, i6=107, i7=-57, i8=0;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 65L);

        try {
            Test0657.iFld = Test0657.iFld;
            for (i3 = 8; i3 < 139; i3 += 2) {
                i4 += (((i3 * i3) + Test0657.instanceCount) - Test0657.instanceCount);
                i4 <<= -56303;
                i4 = i4;
            }
        }
        catch (NegativeArraySizeException exc1) {
            for (i5 = 6; i5 < 122; i5++) {
                Test0657.instanceCount += i3;
                Test0657.iFld += (i5 ^ Test0657.instanceCount);
                if (i4 != 0) {
                }
                lArr[i5 + 1] += Test0657.instanceCount;
                for (i7 = 1; i7 < 13; ++i7) {
                    i4 -= i6;
                    Test0657.instanceCount = Test0657.iFld;
                    Test0657.instanceCount = i4;
                }
            }
        }
        finally {
            i6 >>= (int) Test0657.instanceCount;
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        double d1=-2.114259;
        boolean b=false;
        boolean[] bArr =new boolean[N];
        int i9=-240;
        int i10=-13;
        int[] iArr =new int[N];
        float f1=59.581F;
        byte by=-85;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -69);
        FuzzerUtils.init(lArr1, -5L);
        FuzzerUtils.init(bArr, true);

        for (int i2 : iArr) {
            d1 = 1;
            do {
                Test0657.instanceCount = (Math.min(iMeth(), i2) * Test0657.instanceCount);
                switch ((int)((d1 % 8) + 72)) {
                case 72:
                    if (b) continue;
                    iArr[(int) (d1)] -= Test0657.iFld;
                    for (i9 = 1; i9 < 1; ++i9) {
                        Test0657.instanceCount += i10;
                        lArr1[(int)(d1 + 1)] = i9;
                        i2 = (int)2.27571;
                        Test0657.instanceCount >>= Test0657.iFld;
                        Test0657.iFld <<= i10;
                        i10 <<= i9;
                    }
                    bArr[(int)(d1 - 1)] = b;
                case 73:
                    i10 += -9914;
                    break;
                case 74:
                    f1 -= Test0657.iFld;
                case 75:
                    f1 += 23386L;
                case 76:
                    Test0657.instanceCount += (long) d1;
                case 77:
                    Test0657.iFld += (int) d1;
                    break;
                case 78:
                    i2 = Test0657.iFld;
                    break;
                case 79:
                    i10 = by;
                    break;
                }
            } while (++d1 < 4);
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + (b ? 1 : 0) + i9 + i10 + Float.floatToIntBits(f1) + by +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr);
    }

    public void vMeth(long l) {

        int i1=-48103, i11=-63944, i12=237, i13=29686, i14=0;
        double d2=1.79974;
        short s=10380;
        float f2=95.1013F, f3=18.1005F;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, -11L);

        i1 = 1;
        while (++i1 < 292) {
            vMeth1();
            Test0657.iFld += i1;
            Test0657.iFld = i1;
            Test0657.iFld -= (int) d2;
            for (i11 = 1; i11 < 6; i11++) {
                i12 = Test0657.iFld;
            }
            i13 = 1;
            while (++i13 < 6) {
                d2 -= -10;
                i14 = 1;
                while (++i14 < 1) {
                    int i15=0;
                    Test0657.iFld += (((i14 * i11) + l) - i11);
                    switch (((i13 % 8) * 5) + 40) {
                    case 73:
                        Test0657.iFld += s;
                        f2 -= -64028;
                        break;
                    case 47:
                        f2 -= l;
                        break;
                    case 48:
                        lArr2[i13] += i12;
                        break;
                    case 54:
                        i12 += i15;
                        break;
                    case 72:
                        Test0657.iArrFld[i14 - 1] -= i15;
                    case 65:
                        i15 = (int)f3;
                        break;
                    case 70:
                        l += (i14 ^ i15);
                        break;
                    case 62:
                        Test0657.iFld <<= (int) Test0657.instanceCount;
                    default:
                        l -= i13;
                    }
                }
            }
        }
        vMeth_check_sum += l + i1 + Double.doubleToLongBits(d2) + i11 + i12 + i13 + i14 + s + Float.floatToIntBits(f2)
            + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-199, i16=-41462, i17=-8, i18=-1, i19=-31, i20=-9, i21=6418, i22=1;
        float f=96.218F;
        double d=-99.80496;
        long[] lArr3 =new long[N];
        boolean[] bArr1 =new boolean[N];

        FuzzerUtils.init(lArr3, -1531L);
        FuzzerUtils.init(bArr1, false);

        i = 1;
        while (++i < 361) {
            Test0657.iFld -= (int) (++f);
            Test0657.iFld += (int) (++d);
            vMeth(140L);
            Test0657.iFld >>= (int) lFld;
            try {
                Test0657.iFld = (Test0657.iArrFld[i] % i);
                Test0657.iFld = (Test0657.iArrFld[i] / Test0657.iFld);
                Test0657.iFld = (152 % Test0657.iArrFld[i - 1]);
            } catch (ArithmeticException a_e) {}
        }
        Test0657.iFld *= -30140;
        Test0657.iFld = -52302;
        Test0657.instanceCount = -11L;
        for (i16 = 5; i16 < 323; i16++) {
            Test0657.sFld -= Test0657.sFld;
            for (i18 = 4; i18 < 79; i18++) {
                lArr3[i18 - 1] = i16;
                switch (((i18 % 7) * 5) + 41) {
                case 49:
                    f += i17;
                    for (i20 = i18; i20 < 2; i20++) {
                        i19 += i20;
                    }
                case 43:
                    i19 <<= i17;
                    i17 += i19;
                    break;
                case 46:
                    i21 -= -11726;
                    i17 -= i17;
                case 63:
                    bArr1 = bArr1;
                    break;
                case 72:
                    Test0657.instanceCount += (((i18 * i) + i19) - Test0657.instanceCount);
                    i21 += (int)2L;
                    Test0657.sFld = (short) i21;
                    i22 = 1;
                    while (++i22 < 2) {
                        f -= 1;
                        d -= lFld;
                        i19 = (int)f;
                    }
                case 55:
                    i17 *= 16;
                    break;
                case 62:
                    i17 += i18;
                }
            }
        }

        FuzzerUtils.out.println("i f d = " + i + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 lArr3 bArr1 = " + i22 + "," + FuzzerUtils.checkSum(lArr3) + "," +
            FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test0657.instanceCount Test0657.iFld lFld = " + Test0657.instanceCount + "," + Test0657.iFld + "," +
            lFld);
        FuzzerUtils.out.println("Test0657.sFld Test0657.iArrFld = " + Test0657.sFld + "," + FuzzerUtils.checkSum(Test0657.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0657 _instance = new Test0657();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
