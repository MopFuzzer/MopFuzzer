// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:43 2023
public class Test0660 {

    public static final int N = 400;

    public static long instanceCount=204L;
    public static double dFld=-42.52813;
    public static float fFld=59.677F;
    public boolean bFld=true;
    public short[] sArrFld =new short[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i7, float f1) {

        int i8=113, i9=3, i10=5, i11=-10;
        boolean b1=false;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -2.126725);

        i7 = i7;
        Test0660.dFld = f1;
        for (i8 = 10; 228 > i8; i8++) {
            i10 = 1;
            while (++i10 < 7) {
                if (i9 != 0) {
                }
                i11 = 1;
                do {
                    i7 = 14;
                    i7 = 13072;
                    i7 += (int)f1;
                    Test0660.instanceCount += (41831L + (i11 * i11));
                    Test0660.instanceCount += (i11 * i11);
                    f1 -= Test0660.instanceCount;
                    if (b1) continue;
                    dArr[i11] = i8;
                    i9 = i7;
                } while ((i11 -= 3) > 0);
            }
        }
        long meth_res = i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        int i=-132, i1=11, i2=853, i3=81, i4=-209, i5=33745, i6=13, i12=7, i13=2;
        long l1=3L;
        long[] lArr =new long[N];
        boolean b=true;
        float f=-19.574F;

        FuzzerUtils.init(lArr, -1756336430L);

        i *= (int)(i * ((l1 * i) - Math.min(i, i)));
        for (i1 = 10; i1 < 384; i1 += 3) {
            l1 += (4902 + (i1 * i1));
            if (b) continue;
            for (i3 = i1; i3 < 13; i3++) {
                for (i5 = i3; i5 < 1; i5++) {
                    i += i5;
                    if (b) {
                        f += (-(i4 = (-iMeth(i4, f))));
                    } else if (b) {
                        l <<= i1;
                    } else {
                        i2 += i5;
                        lArr[i5] *= i5;
                    }
                }
                for (i12 = 1; 1 > i12; i12++) {
                    Test0660.instanceCount += l1;
                    i >>= (int)3L;
                }
            }
        }
        vMeth1_check_sum += l + i + l1 + i1 + i2 + (b ? 1 : 0) + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i12 +
            i13 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(double d) {

        int i14=14;
        int i15=-60185;
        int i16=-36833;
        int i17=195;
        int i18=-2;
        int i19=33455;
        int[] iArr =new int[N];
        boolean b2=true;
        float f2=36.562F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, -11612);
        FuzzerUtils.init(lArr1, -8L);

        vMeth1(11L);
        for (i14 = 155; i14 > 1; i14--) {
            for (i16 = 1; 10 > i16; i16++) {
                iArr[i16 + 1] -= i16;
                Test0660.instanceCount ^= i14;
            }
            b2 = b2;
            f2 -= i17;
            for (i18 = 1; i18 < 10; i18++) {
                if (b2) break;
                d += i14;
                lArr1[i14 - 1] = (long)f2;
                iArr[i14 - 1] *= (int) Test0660.instanceCount;
                i17 += i18;
                Test0660.instanceCount += i18;
                i15 += (9 + (i18 * i18));
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i14 + i15 + i16 + i17 + (b2 ? 1 : 0) + Float.floatToIntBits(f2)
            + i18 + i19 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i20=-52465;
        int i21=-137;
        int i22=14;
        int i23=-10732;
        int i24=0;
        int i25=-10;
        int i26=8;
        int i27=-13;
        int i28=-37626;
        int i29=-81;
        int[] iArr1 =new
                    int[N];
        float f3=-92.863F;
        float[] fArr =new float[N];
        short s=2261;

        FuzzerUtils.init(iArr1, -75);
        FuzzerUtils.init(fArr, -1.1002F);

        vMeth(Test0660.dFld);
        iArr1[(i20 >>> 1) % N] += i20;
        i21 = 1;
        while (++i21 < 161) {
            Test0660.instanceCount *= -191;
            for (i22 = 2; i22 < 156; ++i22) {
                i20 += (-36849 + (i22 * i22));
                for (f3 = 1; 2 > f3; f3 += 3) {
                    switch ((int)((f3 % 1) + 61)) {
                    case 61:
                        Test0660.fFld = i23;
                        break;
                    default:
                        i20 -= (int)97.920F;
                        i20 += (int) Test0660.dFld;
                    }
                    Test0660.instanceCount >>= i22;
                    Test0660.instanceCount *= i22;
                    i20 = (int) Test0660.instanceCount;
                    Test0660.dFld = 215;
                }
                iArr1[i22] = -247;
                for (i25 = 1; 2 > i25; i25++) {
                    bFld = bFld;
                    Test0660.instanceCount = i22;
                    i26 = (int) Test0660.instanceCount;
                    i20 -= i24;
                    try {
                        i27 = (i26 % 118);
                        i27 = (i25 % 50958);
                        i26 = (13398 / i23);
                    } catch (ArithmeticException a_e) {}
                    fArr = FuzzerUtils.float1array(N, (float)1.774F);
                    bFld = bFld;
                }
                i26 >>>= i22;
                Test0660.fFld += s;
                sArrFld[i22 + 1] = (short)i25;
                for (i28 = 1; i28 < 2; ++i28) {
                    i26 = (int) Test0660.instanceCount;
                    Test0660.instanceCount -= -43542;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 f3 i24 = " + i23 + "," + Float.floatToIntBits(f3) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("s i28 i29 = " + s + "," + i28 + "," + i29);
        FuzzerUtils.out.println("iArr1 fArr = " + FuzzerUtils.checkSum(iArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0660.instanceCount Test0660.dFld Test0660.fFld = " + Test0660.instanceCount + "," +
                Double.doubleToLongBits(Test0660.dFld) + "," + Float.floatToIntBits(Test0660.fFld));
        FuzzerUtils.out.println("bFld sArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0660 _instance = new Test0660();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
