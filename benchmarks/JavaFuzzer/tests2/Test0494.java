// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0494 {

    public static final int N = 400;

    public static long instanceCount=3837226962L;
    public int iFld=-37174;
    public static byte byFld=-42;
    public static int iFld1=-5;
    public static double dFld=-1.113957;
    public int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i4=4937;
        int i5=54792;
        int i6=-2;
        int i7=-56518;
        int i8=-24;
        int i9=5;
        int i10=244;
        int i11=57680;
        int[] iArr =new int[N];
        float f1=-92.598F;
        long l2=118L;
        double d=-34.32542;

        FuzzerUtils.init(iArr, 38983);

        i4 = -14;
        try {
            for (i5 = 10; i5 < 289; i5++) {
                i4 += (int)f1;
                for (i7 = 1; i7 < 6; i7++) {
                    for (l2 = 1; l2 < 2; l2++) {
                        Test0494.instanceCount = i4;
                        if (false) continue;
                        d += Test0494.instanceCount;
                    }
                    d += 3290930051L;
                    for (i10 = i7; i10 < 2; ++i10) {
                        iArr[i7 - 1] = i5;
                        i9 = i9;
                        Test0494.instanceCount += (i10 | (long) f1);
                        i9 += (int)f1;
                    }
                }
            }
        }
        catch (NegativeArraySizeException exc1) {
            i9 = (int) Test0494.instanceCount;
        }
        long meth_res = i4 + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + l2 + i9 + Double.doubleToLongBits(d) + i10
            + i11 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        long l1=0L;
        int i3=-42521;
        int[] iArr1 =new int[N];
        short s1=-7345;
        double d1=-2.101990;
        float f2=-59.900F;

        FuzzerUtils.init(iArr1, 226);

        l1 = 1;
        while (++l1 < 132) {
            i3 += (int)(l1 - i3);
            i3 += (int)(l1 | s1);
            iMeth1();
            i3 += (int)(l1 - i3);
            i3 <<= i3;
            i3 <<= (int)3724562740L;
            i3 *= i3;
            d1 = 1;
            while (++d1 < 12) {
                i3 = (int)f2;
                i3 += (int) (((d1 * Test0494.byFld) + i3) - i3);
                Test0494.byFld += (byte) i3;
                i3 <<= i3;
            }
        }
        iArr1[(i3 >>> 1) % N] >>= i3;
        Test0494.instanceCount += (long) f2;
        vMeth_check_sum += l1 + i3 + s1 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l, float f) {

        int i=-13643;
        int i1=-92;
        int i2=-96;
        int i12=112;
        int i13=50058;
        int i14=45934;
        int[] iArr2 =new int[N];

        FuzzerUtils.init(iArr2, 1);

        for (i = 2; i < 375; i++) {
            i2 = 5;
            while (--i2 > 0) {
                if (i2 != 0) {
                }
                vMeth();
                for (i12 = 1; i12 < 1; ++i12) {
                    Test0494.iFld1 |= -1;
                    i1 -= (int)2149814873L;
                }
                i14 = 1;
                do {
                    i1 = (int) Test0494.instanceCount;
                    if (i13 != 0) {
                    }
                    i1 *= Test0494.iFld1;
                    i13 ^= (int) Test0494.instanceCount;
                    i1 *= i13;
                    i1 >>= (int) Test0494.instanceCount;
                    iArr2[i] = i2;
                } while (++i14 < 1);
            }
        }
        long meth_res = l + Float.floatToIntBits(f) + i + i1 + i2 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s=-24226;
        byte by=-110;
        float f3=-2.847F;
        int i15=-22800, i16=60, i17=52427, i18=-43045, i19=-14, i20=-10767;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 564846734L);

        iFld += (int) (Math.min(iFld++, s + iFld) % (((-(Test0494.instanceCount * by)) * iMeth(Test0494.instanceCount, f3)) |
            1));
        i15 = 1;
        while (++i15 < 195) {
            Test0494.instanceCount -= (long) -121.93F;
            for (i16 = 7; i16 < 129; i16++) {
                iFld = (int)-114.66985;
                Test0494.instanceCount >>= i16;
                by += (byte)(i16 * i16);
                i17 = i15;
                i17 >>= i16;
                try {
                    iFld = (iArrFld[i16] / -229);
                    iFld = (i16 / i17);
                    iFld = (58158 % Test0494.iFld1);
                } catch (ArithmeticException a_e) {}
                Test0494.instanceCount ^= Test0494.iFld1;
                Test0494.instanceCount <<= i17;
                iFld <<= -23188;
                iArrFld = iArrFld;
            }
            i17 = (int) Test0494.instanceCount;
            Test0494.instanceCount = Test0494.instanceCount;
            s = (short) Test0494.instanceCount;
            iFld = s;
            switch ((((i16 >>> 1) % 4) * 5) + 40) {
            case 53:
            case 60:
                for (i18 = i15; i18 < 129; i18++) {
                    iFld &= i19;
                    by = (byte)-2539627916601084673L;
                    Test0494.iFld1 += i18;
                    i19 += (int) Test0494.instanceCount;
                    i20 = 1;
                    while (++i20 < 1) {
                        lArr[i15] += (long)1.96625;
                        Test0494.instanceCount -= iFld;
                        i19 *= (int) Test0494.instanceCount;
                        fArrFld[i18 + 1] += f3;
                        i19 = -73;
                    }
                }
                break;
            case 43:
                Test0494.iFld1 = (int) Test0494.dFld;
                break;
            case 41:
                i17 -= (int)f3;
            default:
                Test0494.iFld1 += (i15 * i15);
            }
        }

        FuzzerUtils.out.println("s by f3 = " + s + "," + by + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0494.instanceCount iFld Test0494.byFld = " + Test0494.instanceCount + "," + iFld + "," +
                Test0494.byFld);
        FuzzerUtils.out.println("Test0494.iFld1 Test0494.dFld iArrFld = " + Test0494.iFld1 + "," +
                Double.doubleToLongBits(Test0494.dFld) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0494 _instance = new Test0494();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
