// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0758 {

    public static final int N = 400;

    public static long instanceCount=-221L;
    public byte byFld=51;
    public static volatile short sFld=3476;
    public static float fFld=2.197F;
    public static volatile double dFld=0.124544;
    public static int[] iArrFld =new int[N];
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0758.iArrFld, 47750);
        FuzzerUtils.init(Test0758.lArrFld, 3140L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i10=-36850, i11=-214, i12=-62, i13=-65003, i14=-33276;
        float f=99.418F;
        float[] fArr =new float[N];
        short s=18019;
        byte by=-94;
        boolean b=true;

        FuzzerUtils.init(fArr, 2.287F);

        for (i10 = 16; i10 < 332; ++i10) {
            float f1=0.752F;
            for (i12 = 1; i12 < 5; ++i12) {
                for (f = i10; 2 > f; f++) {
                    i14 += 44935;
                }
                i13 -= (int)1091112530237259060L;
                s -= by;
                Test0758.iArrFld[i12 + 1] >>>= i14;
            }
            if (i12 != 0) {
                vMeth2_check_sum += i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 + s + by + (b ? 1 : 0) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            Test0758.iArrFld[i10 + 1] *= (int) Test0758.instanceCount;
            Test0758.iArrFld[i10] >>= i10;
            if (true) {
                f1 = i10;
                f1 += -40;
            } else if (b) {
                Test0758.instanceCount *= 6L;
                i14 = i10;
            } else if (b) {
                fArr[i10 + 1] -= -164L;
            } else {
                if (b) break;
                vMeth2_check_sum += i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 + s + by + (b ? 1 : 0) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
        }
        vMeth2_check_sum += i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 + s + by + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i9) {

        int i15=12, i16=-10, i17=190;
        float f2=1.774F;

        i9 = i9;
        i9 = (int) (Float.intBitsToFloat((int) (Test0758.instanceCount + i9)) + (--i9));
        Test0758.iArrFld = Test0758.iArrFld;
        vMeth2();
        i15 = 1;
        do {
            i16 = 1;
            while (++i16 < 4) {
                switch ((i16 % 2) + 95) {
                case 95:
                    i9 += (-127 + (i16 * i16));
                    i9 = i16;
                    i17 = 1;
                    do {
                        i9 = (int) Test0758.instanceCount;
                        switch (((i17 % 2) * 5) + 95) {
                        case 105:
                            i9 *= (int) Test0758.instanceCount;
                            break;
                        case 102:
                            Test0758.iArrFld[i17 + 1] *= Test0758.sFld;
                            i9 -= 11;
                        }
                    } while (++i17 < 1);
                    break;
                case 96:
                    f2 -= i17;
                default:
                    i9 += (int)63.544F;
                }
            }
        } while (++i15 < 381);
        vMeth1_check_sum += i9 + i15 + i16 + i17 + Float.floatToIntBits(f2);
    }

    public static void vMeth() {

        int i3=-11, i4=-5, i5=-12206, i6=-83, i7=-32334, i8=-3;
        float f3=-2.918F;

        for (i3 = 4; i3 < 174; i3++) {
            for (i5 = 9; i5 > 1; i5--) {
                for (i7 = i3; i7 < 2; i7++) {
                    i8 += (i7 - Test0758.instanceCount);
                    vMeth1(-74);
                    f3 += i3;
                }
                i4 -= (int)f3;
                Test0758.instanceCount <<= i7;
                Test0758.sFld += (short) -144;
            }
            Test0758.iArrFld[i3 + 1] = i7;
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f3);
    }

    public void mainTest(String[] strArr1) {

        int i=38503, i1=-58559, i2=47091, i18=61543, i19=-22020, i20=-5014, i21=14, i22=-31851, i23=-11827, i24=47135,
            i25=45545, i26=-136;
        boolean b1=false;
        float f4=-1.366F;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, -3.516F);

        for (i = 10; i < 233; i++) {
            i1 >>= (i2 -= ((--i2) - (++i2)));
            Test0758.instanceCount = (Math.min(--i2, i2 + i2) * (--byFld));
            vMeth();
            if (b1) {
                Test0758.fFld = Test0758.fFld;
                for (i18 = 113; 7 < i18; --i18) {
                    try {
                        i19 = (Test0758.iArrFld[i - 1] / -308658573);
                        Test0758.iArrFld[i18 + 1] = (i18 % -26086);
                        i1 = (i18 % -178);
                    } catch (ArithmeticException a_e) {}
                    i1 >>= i1;
                    i1 = i19;
                    i2 += (((i18 * Test0758.instanceCount) + Test0758.instanceCount) - i19);
                }
            } else {
                for (i20 = 7; i20 < 113; i20++) {
                    if (b1) continue;
                    i21 += i20;
                    i2 |= i18;
                    i19 += (int) Test0758.instanceCount;
                }
                i19 = i18;
                i1 <<= (int) Test0758.instanceCount;
                for (i22 = 1; 113 > i22; i22++) {
                    switch (((i22 % 4) * 5) + 31) {
                    case 51:
                        switch (i22 % 5) {
                        case 0:
                            for (f4 = 1; f4 < 2; f4++) {
                                i1 -= i2;
                                Test0758.iArrFld[i] = i20;
                                Test0758.instanceCount -= i18;
                            }
                            for (i25 = 1; i25 < 2; i25++) {
                                i24 = -24396;
                                Test0758.dFld = Test0758.instanceCount;
                            }
                            Test0758.lArrFld[i] -= i21;
                            break;
                        case 1:
                            i1 = i25;
                            break;
                        case 2:
                            Test0758.lArrFld[i - 1] += i24;
                        case 3:
                            Test0758.fFld -= Test0758.instanceCount;
                            break;
                        case 4:
                            Test0758.instanceCount /= (i23 | 1);
                            break;
                        default:
                            fArr1[i22] += 209;
                        }
                    case 40:
                        Test0758.dFld %= (i24 | 1);
                        break;
                    case 32:
                        if (b1) break;
                        break;
                    case 46:
                        i1 = i22;
                    default:
                        i23 += i23;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i18 i19 b1 = " + i18 + "," + i19 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 f4 i24 = " + i23 + "," + Float.floatToIntBits(f4) + "," + i24);
        FuzzerUtils.out.println("i25 i26 fArr1 = " + i25 + "," + i26 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0758.instanceCount byFld Test0758.sFld = " + Test0758.instanceCount + "," + byFld + "," +
                Test0758.sFld);
        FuzzerUtils.out.println("Test0758.fFld Test0758.dFld Test0758.iArrFld = " + Float.floatToIntBits(Test0758.fFld) + "," +
                Double.doubleToLongBits(Test0758.dFld) + "," + FuzzerUtils.checkSum(Test0758.iArrFld));
        FuzzerUtils.out.println("Test0758.lArrFld = " + FuzzerUtils.checkSum(Test0758.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0758 _instance = new Test0758();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
