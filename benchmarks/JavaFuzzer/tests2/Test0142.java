// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:18 2023
public class Test0142 {

    public static final int N = 400;

    public static long instanceCount=-45982L;
    public static byte byFld=21;
    public static float fFld=1.266F;
    public static boolean bFld=true;
    public volatile double dFld=27.13800;
    public static volatile int iFld=-8;
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld =new double[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0142.iArrFld, -6);
        FuzzerUtils.init(Test0142.dArrFld, -29.20814);
        FuzzerUtils.init(Test0142.fArrFld, 79.198F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i10, int i11, int i12) {

        int i13=-4, i14=-33584, i15=-50682, i16=12339, i17=-242;
        double d2=0.22543;

        for (i13 = 15; i13 < 252; ++i13) {
            for (i15 = 1; i15 < 7; ++i15) {
                Test0142.instanceCount -= Test0142.instanceCount;
                i16 -= (int) Test0142.fFld;
                Test0142.iArrFld[i13] = i16;
                Test0142.iArrFld[i13 - 1] ^= (int) Test0142.instanceCount;
                i12 *= (int) Test0142.fFld;
                i17 = 1;
                while (++i17 < 2) {
                    short s1=28792;
                    i12 -= (int) Test0142.instanceCount;
                    switch ((i13 % 6) + 69) {
                    case 69:
                        i14 -= i16;
                        i12 += (((i17 * Test0142.instanceCount) + Test0142.instanceCount) - Test0142.instanceCount);
                        Test0142.instanceCount += (((i17 * i15) + i16) - i16);
                    case 70:
                        i12 += (47 + (i17 * i17));
                        s1 <<= (short) Test0142.instanceCount;
                    case 71:
                        i12 = i12;
                        break;
                    case 72:
                        Test0142.fFld = Test0142.byFld;
                        break;
                    case 73:
                        d2 *= i16;
                        break;
                    case 74:
                        if (Test0142.bFld) break;
                        break;
                    default:
                        i14 = (int) Test0142.instanceCount;
                    }
                }
            }
        }
        long meth_res = i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i3, int i4) {

        int i5=-136, i6=-3, i7=-207, i8=-8, i9=-13;
        long l=10659L;
        double d1=-123.81466;
        float f=-97.126F;
        short s=23159;
        short[] sArr =new short[N];
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(sArr, (short)32689);

        for (i5 = 297; i5 > 10; i5--) {
            for (l = 1; 6 > l; l++) {
                for (i8 = 1; i8 < 2; ++i8) {
                    i7 &= (int) (((d1 + Test0142.byFld) - (-13L >> (144 * (l - i9)))) - ((f + -21365) * (f % (i8 | 1))));
                    s -= (short)((iMeth(i3, -11, i3) + i6) + i6);
                    i9 = i3;
                    Test0142.dArrFld[i8 - 1] = i6;
                    Test0142.fArrFld[(int) (l - 1)] += Test0142.byFld;
                    i4 = (int)7237064806970926617L;
                    bArr[(int) (l)][i8 - 1] = Test0142.bFld;
                    Test0142.instanceCount += (((i8 * i4) + Test0142.instanceCount) - i9);
                    Test0142.iArrFld[(int) (l + 1)] -= Test0142.byFld;
                    sArr[i8] -= (short)-7;
                }
                Test0142.instanceCount += (l + Test0142.instanceCount);
                i7 *= Test0142.byFld;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + l + i7 + i8 + i9 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f) + s + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i2, double d) {

        int i18=152, i19=-190, i20=-10, i21=3, i22=-8, i23=150, i24=-46;
        long l1=8630979103418925607L;
        short s2=-14418;

        vMeth1(i18, i18);
        i18 = (int) Test0142.instanceCount;
        for (l1 = 6; l1 < 317; l1++) {
            i2 += (int)l1;
            d -= s2;
            for (i20 = (int)(l1); i20 < 5; ++i20) {
                for (i22 = 1; 1 > i22; ++i22) {
                    i19 = i19;
                    i24 = (int) Test0142.instanceCount;
                    if (false) continue;
                    Test0142.instanceCount <<= i2;
                    Test0142.instanceCount += (((i22 * i21) + i2) - i19);
                    Test0142.instanceCount = i2;
                }
                i2 <<= Test0142.byFld;
                i24 *= Test0142.byFld;
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + i18 + l1 + i19 + s2 + i20 + i21 + i22 + i23 + i24;
    }

    public void mainTest(String[] strArr1) {

        int i=106, i1=18, i25=13307, i26=-175, i27=0;
        short[] sArr1 =new short[N];

        FuzzerUtils.init(sArr1, (short)30135);

        if (Test0142.bFld) {
            for (i = 4; i < 324; ++i) {
                vMeth(i, dFld);
                i1 += (((i * i1) + Test0142.instanceCount) - Test0142.fFld);
                switch ((((i >>> 1) % 3) * 5) + 121) {
                case 133:
                    Test0142.byFld >>>= (byte) -12;
                    i25 = 1;
                    while (++i25 < 79) {
                        for (i26 = 1; i26 < 1; ++i26) {
                            i1 *= (int) Test0142.instanceCount;
                            i27 *= (int)dFld;
                            i27 = i;
                            try {
                                i27 = (i27 % 335466649);
                                i27 = (i25 / i1);
                                i27 = (241 % i26);
                            } catch (ArithmeticException a_e) {}
                            switch (((i % 4) * 5) + 124) {
                            case 133:
                                i27 >>>= i25;
                                dFld = i1;
                                i1 ^= i26;
                                break;
                            case 130:
                                i1 += (((i26 * i27) + i26) - Test0142.fFld);
                                i1 = (int)dFld;
                                Test0142.instanceCount += (i26 * i26);
                                i1 += i26;
                                break;
                            case 142:
                                Test0142.instanceCount += i1;
                                Test0142.iArrFld[i] = (int) Test0142.instanceCount;
                                break;
                            case 138:
                                Test0142.instanceCount += i25;
                                Test0142.instanceCount >>= Test0142.instanceCount;
                                Test0142.iFld = i;
                            default:
                                Test0142.iArrFld[(-10 >>> 1) % N] = Test0142.iFld;
                                i27 += (int) Test0142.instanceCount;
                                Test0142.iFld = i27;
                            }
                            dFld = i27;
                        }
                        Test0142.iArrFld[i25] += (int) Test0142.instanceCount;
                    }
                    break;
                case 134:
                    sArr1 = sArr1;
                    break;
                case 129:
                    i27 -= (int)7469L;
                    break;
                default:
                    Test0142.iFld ^= i1;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i25 = " + i + "," + i1 + "," + i25);
        FuzzerUtils.out.println("i26 i27 sArr1 = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test0142.instanceCount Test0142.byFld Test0142.fFld = " + Test0142.instanceCount + "," + Test0142.byFld +
                "," + Float.floatToIntBits(Test0142.fFld));
        FuzzerUtils.out.println("Test0142.bFld dFld Test0142.iFld = " + (Test0142.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(dFld) + "," + Test0142.iFld);
        FuzzerUtils.out.println("Test0142.iArrFld Test0142.dArrFld Test0142.fArrFld = " + FuzzerUtils.checkSum(Test0142.iArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0142.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0142.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0142 _instance = new Test0142();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
