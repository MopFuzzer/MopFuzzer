// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0636 {

    public static final int N = 400;

    public static long instanceCount=-1558863030231595280L;
    public volatile byte byFld=-51;
    public static int iFld=-10;
    public int iFld1=-38;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0636.iArrFld, 5);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i10, int i11, int i12) {

        boolean b=true;
        int i13=-63815;
        int i14=9;
        int i15=-40634;
        int i16=-7;
        int i17=-179;
        int[] iArr =new int[N];
        byte by1=10;
        double d1=47.65297;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(lArr, -27430L);

        if (b) {
            iArr[(i10 >>> 1) % N] = (int) Test0636.instanceCount;
        } else {
            i12 <<= i10;
        }
        for (i13 = 4; 154 > i13; i13++) {
            lArr[i13 - 1] >>= i10;
            Test0636.instanceCount |= i11;
            i14 += (i13 * i13);
            i11 *= by1;
            for (i15 = 1; i15 < 11; ++i15) {
                by1 += (byte) (((i15 * Test0636.instanceCount) + i11) - Test0636.instanceCount);
                iArr[i13] = (int)13L;
            }
            d1 += i12;
        }
        i17 = 351;
        while ((i17 -= 3) > 0) {
            short s=-30683;
            i11 += i17;
            i12 *= s;
        }
        long meth_res = i10 + i11 + i12 + (b ? 1 : 0) + i13 + i14 + by1 + i15 + i16 + Double.doubleToLongBits(d1) + i17
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i6=62, i7=0, i8=10, i9=0, i18=-21, i19=28559;
        byte by=-89;
        float f=1.334F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 0L);

        for (i6 = 21; i6 < 357; i6 += 3) {
            for (i8 = 1; i8 < 14; i8 += 2) {
                by = (byte) Test0636.instanceCount;
                if ((iMeth(59078, i8, i6) * -3120056757L) <= Test0636.instanceCount) break;
                f = f;
                i7 /= (int) (Test0636.instanceCount | 1);
                lArr1[i6 + 1] = 163;
            }
            if (i6 != 0) {
                vMeth1_check_sum += i6 + i7 + i8 + i9 + by + Float.floatToIntBits(f) + i18 + i19 +
                    FuzzerUtils.checkSum(lArr1);
                return;
            }
            lArr1[i6 - 1] &= i6;
            i7 = 17896;
            for (i18 = 1; i18 < 14; i18++) {
                i19 -= i8;
                i7 >>= by;
                Test0636.iFld = (int) Test0636.instanceCount;
                i9 += i18;
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + by + Float.floatToIntBits(f) + i18 + i19 + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(long l, int i3) {

        int i4=-247, i5=-14, i20=-64453, i21=-125, i22=3700, i23=25510, i24=-20515, i25=61508;
        byte by2=60;

        for (i4 = 10; 272 > i4; ++i4) {
            vMeth1();
            i3 += i3;
            Test0636.iFld += i4;
            for (i20 = 1; 6 > i20; i20++) {
                Test0636.instanceCount -= Test0636.instanceCount;
                i5 = Test0636.iFld;
                i21 = i3;
            }
            for (i22 = 1; i22 < 6; i22++) {
                Test0636.iFld += (((i22 * Test0636.iFld) + l) - Test0636.iFld);
                i24 = 1;
                do {
                    Test0636.iArrFld[i22] = (int) l;
                    i5 += (int)l;
                    Test0636.instanceCount += Test0636.instanceCount;
                    by2 <<= (byte)i25;
                } while (++i24 < 2);
            }
        }
        vMeth_check_sum += l + i3 + i4 + i5 + i20 + i21 + i22 + i23 + i24 + by2 + i25;
    }

    public void mainTest(String[] strArr1) {

        double d=0.43745;
        int i=33892, i1=227, i2=79, i26=59154, i27=13, i28=-193, i29=4, i30=-56076;
        float[] fArr =new float[N];
        long[] lArr2 =new long[N];

        FuzzerUtils.init(fArr, -2.328F);
        FuzzerUtils.init(lArr2, 3113027635L);

        d = 1;
        do {
            Test0636.instanceCount += (long) (((d * Test0636.instanceCount) + i) - i);
            i += (int)(d - byFld);
        } while (++d < 132);
        for (i1 = 10; i1 < 356; ++i1) {
            boolean b2=false;
            fArr[i1 - 1] = Math.abs(--Test0636.instanceCount);
            switch (((((int) (Test0636.instanceCount - i2)) >>> 1) % 4) + 103) {
            case 103:
                i2 += i1;
                vMeth(Test0636.instanceCount, -35441);
                switch (((-22998 >>> 1) % 2) + 17) {
                case 17:
                    Test0636.iFld = i1;
                    break;
                case 18:
                    i = (int) Test0636.instanceCount;
                    if (b2) {
                        for (i26 = 4; i26 < 73; ++i26) {
                            boolean b1=true;
                            lArr2[i26 - 1] = i;
                            Test0636.instanceCount = Test0636.instanceCount;
                            Test0636.instanceCount *= (long) -124.792F;
                            if (b1) break;
                        }
                        i = i26;
                        Test0636.instanceCount += (long) (1.339F + (i1 * i1));
                    } else {
                        for (i28 = 4; i28 < 73; i28++) {
                            Test0636.iFld += (((i28 * i26) + i2) - byFld);
                            b2 = b2;
                            try {
                                i27 = (i27 % -1833987126);
                                i2 = (i1 / i);
                                i27 = (-2039373835 % Test0636.iArrFld[i28]);
                            } catch (ArithmeticException a_e) {}
                            i27 = iFld1;
                            iFld1 += i28;
                            i30 = 2;
                            while (--i30 > 0) {
                                if (b2) break;
                                byFld += (byte)(i30 * i30);
                                Test0636.iArrFld[i1] = i30;
                                i29 |= i;
                            }
                        }
                    }
                    break;
                }
                break;
            case 104:
                if (b2) continue;
                break;
            case 105:
                Test0636.instanceCount <<= i30;
                break;
            case 106:
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i26 i27 = " + i2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("fArr lArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0636.instanceCount byFld Test0636.iFld = " + Test0636.instanceCount + "," + byFld + "," +
                Test0636.iFld);
        FuzzerUtils.out.println("iFld1 Test0636.iArrFld = " + iFld1 + "," + FuzzerUtils.checkSum(Test0636.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0636 _instance = new Test0636();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
