// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0022 {

    public static final int N = 400;

    public static long instanceCount=-164L;
    public static int iFld=57443;
    public static double dFld=-76.127281;
    public static short sFld=7712;
    public static int iFld1=-10;
    public static float fFld=2.416F;
    public static int[] iArrFld =new int[N];
    public static volatile byte[][] byArrFld =new byte[N][N];

    static {
        FuzzerUtils.init(Test0022.iArrFld, 12192);
        FuzzerUtils.init(Test0022.byArrFld, (byte) -18);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        long l=2779277117564292249L;
        long[][] lArr =new long[N][N];
        int i3=107, i4=5, i5=4, i6=-202;
        byte by=120;
        boolean b=true;
        float f2=0.656F;

        FuzzerUtils.init(lArr, -3L);

        l = 1;
        do {
            Test0022.iFld += (int) l;
            for (i3 = (int)(l); i3 < 5; ++i3) {
                Test0022.iArrFld[i3] += i4;
                by = (byte)-145;
                for (i5 = 1; i5 < 1; i5++) {
                    i4 += (int) Test0022.instanceCount;
                    switch ((i3 % 9) + 6) {
                    case 6:
                    case 7:
                        switch ((i5 % 4) + 50) {
                        case 50:
                            Test0022.byArrFld[i3][(int) (l - 1)] *= (byte) i5;
                            i6 = Test0022.iFld;
                            if (b) break;
                            break;
                        case 51:
                            i6 += (int)l;
                            break;
                        case 52:
                            f2 = l;
                            i4 = 176;
                            break;
                        case 53:
                            Test0022.iFld = -68;
                            break;
                        }
                        break;
                    case 8:
                        Test0022.dFld = f2;
                        break;
                    case 9:
                        Test0022.iFld = Test0022.iFld;
                        break;
                    case 10:
                        lArr[i3 + 1][i5] = -36473;
                        break;
                    case 11:
                        Test0022.instanceCount = Test0022.iFld;
                        break;
                    case 12:
                        i6 += i5;
                    case 13:
                        Test0022.instanceCount = i3;
                        break;
                    case 14:
                        i6 = (int)11L;
                    default:
                        Test0022.iArrFld[i3 - 1] = i4;
                    }
                }
            }
        } while (++l < 362);
        long meth_res = l + i3 + i4 + by + i5 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i1=183, i2=-38725;
        float f1=-12.461F;
        long[] lArr1 =new long[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr1, 4657730430255203489L);
        FuzzerUtils.init(dArr, 77.98669);

        i1 = 1;
        do {
            i2 = 1;
            do {
                Test0022.iFld -= (int) Test0022.instanceCount;
                i += i2;
                Test0022.iFld += (--Test0022.iFld);
                switch ((i2 % 10) + 55) {
                case 55:
                    i += (((i2 * f1) + Test0022.instanceCount) - Test0022.instanceCount);
                    Test0022.iArrFld[i2 - 1] += (iMeth1() + i1);
                case 56:
                    Test0022.iFld += i2;
                    i ^= i;
                    i &= (int) Test0022.instanceCount;
                    Test0022.iArrFld[i1 + 1] = (int) Test0022.instanceCount;
                case 57:
                    i -= i2;
                    Test0022.dFld += f1;
                    break;
                case 58:
                    f1 -= i1;
                    break;
                case 59:
                    Test0022.iArrFld[i2 - 1] *= 3;
                    break;
                case 60:
                    lArr1[(i2 >>> 1) % N] = Test0022.sFld;
                    break;
                case 61:
                    dArr[i1 + 1] = 29873L;
                    break;
                case 62:
                    Test0022.iFld += i2;
                    break;
                case 63:
                    i += -28;
                    break;
                case 64:
                    Test0022.iFld += (int) 3193690412390991497L;
                    break;
                default:
                    Test0022.iFld += i2;
                }
            } while (++i2 < 7);
        } while (++i1 < 232);
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(double d, float f) {

        int i7=8, i8=-29146, i9=-85;
        boolean b1=true;
        byte by1=50;

        vMeth(Test0022.iFld);
        i7 = 1;
        do {
            Test0022.iFld = Test0022.iFld;
            Test0022.instanceCount += Test0022.instanceCount;
            Test0022.dFld += i7;
            Test0022.instanceCount += i7;
        } while (++i7 < 290);
        for (i8 = 8; i8 < 246; i8++) {
            i9 = Test0022.sFld;
            if (b1) break;
            switch (((i7 >>> 1) % 6) + 40) {
            case 40:
                by1 *= (byte) Test0022.iFld;
                switch (((-20387 >>> 1) % 5) + 40) {
                case 40:
                    i9 += (((i8 * f) + i8) - Test0022.iFld);
                    break;
                case 41:
                    if (b1) break;
                    Test0022.iArrFld[i8] = 13;
                case 42:
                    if (b1) continue;
                    break;
                case 43:
                    Test0022.instanceCount += i8;
                    break;
                case 44:
                    Test0022.instanceCount += (i8 * i8);
                    break;
                }
                break;
            case 41:
                Test0022.iArrFld[i8 + 1] <<= -43259;
                break;
            case 42:
                Test0022.iFld = i8;
            case 43:
                Test0022.instanceCount = (long) f;
                break;
            case 44:
                Test0022.instanceCount = Test0022.iFld1;
                break;
            case 45:
                f = Test0022.instanceCount;
                break;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i7 + i8 + i9 + (b1 ? 1 : 0) + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=12.983F, f4=0.582F;
        int i12=43472, i13=-29974, i14=59963, i15=-8;
        byte by2=70;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, 62575L);

        Test0022.iFld = (iMeth(Test0022.dFld, Test0022.fFld) - Test0022.iFld);
        for (f3 = 12; f3 < 248; f3++) {
            boolean b2=false;
            if (b2) break;
            switch ((int)((f3 % 7) * 5)) {
            case 30:
                switch ((int)((f3 % 3) + 1)) {
                case 1:
                    Test0022.iFld = Test0022.iFld1;
                    for (i13 = 5; i13 < 106; i13++) {
                        i14 &= -143;
                        lArr2[i13 - 1] >>= i14;
                        Test0022.iFld1 <<= (int) 7L;
                        Test0022.iArrFld[i13 - 1] -= (int) Test0022.instanceCount;
                        for (f4 = 1; f4 < 2; f4++) {
                            Test0022.sFld += (short) f4;
                            i12 += (int)(f4 * f4);
                            i12 = 30;
                            if (b2) continue;
                            Test0022.iArrFld[(int) (f3 - 1)] = -31;
                            if (b2) continue;
                            Test0022.fFld -= i15;
                            if (b2) continue;
                        }
                        i14 &= (int) Test0022.instanceCount;
                        i14 += (int)-108L;
                        Test0022.iFld += (i13 + Test0022.sFld);
                        i15 = (int) Test0022.fFld;
                    }
                    break;
                case 2:
                    Test0022.iArrFld[(int) (f3 + 1)] -= -87;
                    Test0022.instanceCount *= 1;
                    Test0022.iFld1 *= Test0022.sFld;
                case 3:
                    by2 = (byte) Test0022.sFld;
                    i12 >>>= i13;
                default:
                    Test0022.iFld += (int) Test0022.instanceCount;
                }
                break;
            case 4:
                Test0022.instanceCount += (long) f3;
                break;
            case 35:
                if (b2) continue;
                break;
            case 20:
                lArr2[(int)(f3)] = -15250;
                break;
            case 2:
                lArr2[(int)(f3)] += i13;
                break;
            case 24:
                i14 += (int)f3;
                break;
            case 26:
                Test0022.iFld >>= i14;
                break;
            }
        }

        FuzzerUtils.out.println("f3 i12 i13 = " + Float.floatToIntBits(f3) + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 f4 i15 = " + i14 + "," + Float.floatToIntBits(f4) + "," + i15);
        FuzzerUtils.out.println("by2 lArr2 = " + by2 + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0022.instanceCount Test0022.iFld Test0022.dFld = " + Test0022.instanceCount + "," + Test0022.iFld +
                "," + Double.doubleToLongBits(Test0022.dFld));
        FuzzerUtils.out.println("Test0022.sFld Test0022.iFld1 Test0022.fFld = " + Test0022.sFld + "," + Test0022.iFld1 + "," +
                Float.floatToIntBits(Test0022.fFld));
        FuzzerUtils.out.println("Test0022.iArrFld Test0022.byArrFld = " + FuzzerUtils.checkSum(Test0022.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0022.byArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0022 _instance = new Test0022();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
