// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:22 2023
public class Test0211 {

    public static final int N = 400;

    public static long instanceCount=-228L;
    public static float fFld=-40.858F;
    public static double dFld=-2.110236;
    public volatile byte byFld=88;
    public static int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0211.iArrFld, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i6, int i7) {

        int i9=-12282, i10=64584, i11=9;
        long l1=-23790L;
        double d=2.118060;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 121.910F);

        for (int i8 : Test0211.iArrFld) {
            for (i9 = 1; 4 > i9; i9++) {
                i6 += (int) Test0211.instanceCount;
                i7 += (i9 - i7);
                i10 = (int) Test0211.instanceCount;
                i8 += (i9 * i9);
                switch (((137 >>> 1) % 6) + 41) {
                case 41:
                    i7 -= i8;
                    Test0211.instanceCount <<= Test0211.instanceCount;
                    break;
                case 42:
                    for (l1 = 1; l1 < 2; l1++) {
                        i11 += 0;
                        fArr[i9] = i9;
                        i10 ^= i7;
                        Test0211.iArrFld = Test0211.iArrFld;
                        i6 += (int)(-1567398501L + (l1 * l1));
                    }
                    break;
                case 43:
                    Test0211.instanceCount = (long) -1.348F;
                    break;
                case 44:
                    i11 -= i6;
                    break;
                case 45:
                    i6 += (int) Test0211.instanceCount;
                    break;
                case 46:
                    d = i6;
                    break;
                default:
                    Test0211.iArrFld[i9] >>= i8;
                }
            }
        }
        long meth_res = i6 + i7 + i9 + i10 + l1 + i11 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(long l) {

        int i2=107, i3=-12, i4=26966, i5=0;
        float f=31.973F;
        float[] fArr1 =new float[N];
        boolean b=true;
        byte by=-60;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-5369);
        FuzzerUtils.init(fArr1, -127.224F);

        for (short s : sArr) {
            i2 = 1;
            while (++i2 < 4) {
                i3 += (int) Test0211.instanceCount;
            }
            if (b) {
                for (i4 = 1; i4 < 4; ++i4) {
                    f += (((i4 * i3) + i5) - f);
                    sMeth(i4, i3);
                    switch ((i4 % 1) + 12) {
                    case 12:
                        Test0211.iArrFld[i4 - 1] = i3;
                        break;
                    }
                    try {
                        Test0211.iArrFld[i4 - 1] = (6975 / i2);
                        Test0211.iArrFld[i4 - 1] = (16 / i4);
                        i3 = (65487355 % i5);
                    } catch (ArithmeticException a_e) {}
                    switch ((i4 % 1) + 39) {
                    case 39:
                        fArr1[i4 - 1] += Test0211.instanceCount;
                        i3 += i2;
                        b = b;
                        break;
                    }
                    try {
                        Test0211.iArrFld[i4 - 1] = (1468463490 / i3);
                        i5 = (1002124580 % Test0211.iArrFld[i4]);
                        i5 = (2087291050 / i4);
                    } catch (ArithmeticException a_e) {}
                }
            } else if (b) {
                l = by;
            } else {
                Test0211.iArrFld[(i3 >>> 1) % N] = (int) 1.42148;
            }
        }
        vMeth1_check_sum += l + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + (b ? 1 : 0) + by +
            FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth() {

        int i12=-2, i13=-65, i14=-12, i15=24342, i16=63476, i17=-44726;
        float f1=100.472F;
        float[] fArr2 =new float[N];
        byte by1=114;
        double d1=60.31972;

        FuzzerUtils.init(fArr2, 127.354F);

        vMeth1(Test0211.instanceCount);
        for (i12 = 10; i12 < 165; i12++) {
            for (i14 = 1; i14 < 10; i14++) {
                i15 = i12;
                f1 = i15;
                i13 |= i15;
                fArr2[i14 + 1] = 7971885143857258218L;
            }
            for (i16 = 1; i16 < 10; i16++) {
                Test0211.iArrFld[i12 - 1] = by1;
                fArr2[i12 - 1] *= 25;
                switch ((i16 % 1) + 69) {
                case 69:
                    i15 = (int)d1;
                    Test0211.instanceCount *= (long) d1;
                    i17 = -35;
                    break;
                }
                i15 += (i16 + f1);
            }
        }
        vMeth_check_sum += i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 + by1 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
    }

    public void mainTest(String[] strArr1) {

        int i=7, i1=0, i19=-103, i20=-182, i21=-12, i22=3, i23=160;
        long l2=-103L, l3=-4403785568719557284L;
        boolean b1=true;

        for (i = 230; i > 9; i--) {
            vMeth();
            for (i19 = 114; i19 > 3; --i19) {
                switch (((i20 >>> 1) % 1) + 7) {
                case 7:
                    for (l2 = 1; l2 < 2; ++l2) {
                        Test0211.iArrFld[i19] = (int) 43.721F;
                        Test0211.instanceCount += (l2 * l2);
                        Test0211.fFld = (float) Test0211.dFld;
                        i21 = i;
                    }
                    i20 *= -4994;
                    Test0211.instanceCount -= l2;
                }
                Test0211.dFld = Test0211.instanceCount;
                switch ((((i19 >>> 1) % 9) * 5) + 92) {
                case 109:
                    i1 >>= i20;
                    Test0211.fFld -= l3;
                    i21 -= i21;
                    for (i22 = 1; i22 < 2; ++i22) {
                        i21 |= i22;
                        i21 += (i22 + i23);
                        try {
                            i21 = (i19 % -78);
                            i1 = (9787 / Test0211.iArrFld[i19 + 1]);
                            i21 = (-154 / i23);
                        } catch (ArithmeticException a_e) {}
                        b1 = false;
                        i1 ^= i22;
                        i23 *= i20;
                        i23 >>= (int)l2;
                        Test0211.fFld += i;
                        byFld -= (byte)i1;
                    }
                case 95:
                    i21 += i19;
                    l3 >>= i21;
                    i23 += (i19 * i23);
                    Test0211.iArrFld[i] <<= i20;
                case 132:
                    byFld = (byte)i;
                    break;
                case 110:
                    i21 *= i1;
                    break;
                case 93:
                    i20 >>= i21;
                    break;
                case 107:
                    lArrFld[i] += i22;
                    break;
                case 100:
                    Test0211.iArrFld[i - 1] = byFld;
                    break;
                case 105:
                    i23 = 3;
                    break;
                case 131:
                    Test0211.iArrFld[i + 1] -= -61860;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 l2 i21 = " + i20 + "," + l2 + "," + i21);
        FuzzerUtils.out.println("l3 i22 i23 = " + l3 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("b1 = " + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test0211.instanceCount Test0211.fFld Test0211.dFld = " + Test0211.instanceCount + "," +
                Float.floatToIntBits(Test0211.fFld) + "," + Double.doubleToLongBits(Test0211.dFld));
        FuzzerUtils.out.println("byFld Test0211.iArrFld lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0211.iArrFld) +
            "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0211 _instance = new Test0211();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
