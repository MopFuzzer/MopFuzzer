// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0571 {

    public static final int N = 400;

    public static long instanceCount=4865110764902584748L;
    public static boolean bFld=false;
    public static short sFld=-354;
    public static float fFld=7.515F;
    public static double dFld=-126.51606;
    public int[] iArrFld =new int[N];
    public static int[][] iArrFld1 =new int[N][N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0571.iArrFld1, -3);
        FuzzerUtils.init(Test0571.lArrFld, 0L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=-9780;
        int i5=-146;
        int i6=-95;
        int i7=-10;
        int i8=-233;
        int[] iArr1 =new int[N];
        float f1=31.816F;
        long l=-12L;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(dArr, 0.42320);
        FuzzerUtils.init(iArr1, 25342);

        dArr[(i4 >>> 1) % N][(i4 >>> 1) % N] = i4;
        i4 += (int)f1;
        switch ((((i4 >>> 1) % 4) * 5) + 64) {
        case 82:
            i4 = i4;
            i5 = 1;
            do {
                f1 = i4;
                for (l = 1; l < 6; ++l) {
                    try {
                        i4 = (32829 % iArr1[(int)(l + 1)]);
                        iArr1[(int)(l)] = (29 % i6);
                        i6 = (i6 % -48257);
                    } catch (ArithmeticException a_e) {}
                    f1 -= Test0571.instanceCount;
                    for (i7 = 1; i7 < 2; ++i7) {
                        i4 |= i7;
                        i8 ^= i5;
                        Test0571.instanceCount <<= i6;
                    }
                    if (true) break;
                }
                i4 |= -55;
            } while (++i5 < 280);
            break;
        case 79:
            Test0571.instanceCount = Test0571.instanceCount;
            break;
        case 66:
            i6 = i8;
            break;
        case 76:
            iArr1[(12900 >>> 1) % N] /= (int)(i6 | 1);
            break;
        default:
            i4 = i8;
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f1) + i5 + l + i6 + i7 + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i2) {

        byte by=44;
        int i3=61, i10=43960, i11=-33921, i12=162;
        double d1=0.7907;

        Test0571.instanceCount = (-Test0571.instanceCount);
        i2 += (int)1.602F;
        i2 *= (by - (Math.max(-87, i2) - (Test0571.sFld + i2)));
        i3 = 396;
        do {
            vMeth1();
            i10 = 1;
            while (++i10 < 8) {
                Test0571.iArrFld1[i3][i3 + 1] = by;
            }
            Test0571.fFld += i10;
            i2 *= (int)-6L;
        } while ((i3 -= 2) > 0);
        Test0571.instanceCount >>= i10;
        for (i11 = 20; i11 < 336; ++i11) {
            Test0571.fFld += i11;
        }
        i12 = (int) Test0571.instanceCount;
        Test0571.fFld = i11;
        d1 -= i11;
        long meth_res = i2 + by + i3 + i10 + i11 + i12 + Double.doubleToLongBits(d1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d, float f, int i1) {

        int i13=-6;
        int i14=31429;
        int i15=5;
        int i16=-9;
        int[] iArr =new int[N];
        byte by1=58;

        FuzzerUtils.init(iArr, 16);

        iArr[(i1 >>> 1) % N] = (int)(~(long)(lMeth(i1) + 12.798F));
        for (i13 = 3; i13 < 176; ++i13) {
            Test0571.instanceCount = Test0571.instanceCount;
            switch (((i13 >>> 1) % 2) + 41) {
            case 41:
                Test0571.bFld = Test0571.bFld;
                Test0571.instanceCount += by1;
                Test0571.instanceCount = i13;
                f -= 0;
                break;
            case 42:
                Test0571.instanceCount -= Test0571.instanceCount;
                for (i15 = 1; i15 < 9; i15++) {
                    i1 += i14;
                    i1 = 37556;
                    Test0571.instanceCount = (long) d;
                    Test0571.instanceCount -= (long) f;
                    Test0571.instanceCount += i13;
                }
                break;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i1 + i13 + i14 + by1 + i15 + i16 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=244, i17=-7131, i19=-60, i20=30414, i21=-65, i22=8, i23=-17408, i24=-1;
        byte by2=117;

        i = i;
        Test0571.bFld = Test0571.bFld;
        i *= iArrFld[(i >>> 1) % N];
        i *= Math.max(i - (i - i), i);
        vMeth(67.46224, Test0571.fFld, i);
        Test0571.fFld += i;
        i17 = 202;
        while ((i17 -= 2) > 0) {
            Test0571.instanceCount += (i17 * i17);
            switch (((i17 % 5) * 5) + 19) {
            case 36:
                i = (int) Test0571.instanceCount;
            case 33:
                iArrFld[i17] *= (int) Test0571.fFld;
                Test0571.instanceCount += 1823155520L;
                Test0571.instanceCount = i17;
                break;
            case 42:
                try {
                    iArrFld[i17] = (i17 % -180);
                    i = (i % -3605);
                    iArrFld[i17 - 1] = (163 % Test0571.iArrFld1[i17 + 1][i17]);
                } catch (ArithmeticException a_e) {}
                switch ((((i17 >>> 1) % 6) * 5) + 87) {
                case 117:
                    by2 = (byte) Test0571.dFld;
                    Test0571.iArrFld1[i17 + 1][i17] |= i;
                    for (i19 = 3; i19 < 248; i19++) {
                        Test0571.lArrFld[i19] = i20;
                        for (i21 = 1; i21 < 2; ++i21) {
                            Test0571.dFld = -53.629F;
                            Test0571.instanceCount >>= i17;
                            Test0571.instanceCount += i20;
                            if (Test0571.bFld) continue;
                            Test0571.lArrFld[i17] *= (long) Test0571.fFld;
                        }
                        i20 += 11382;
                        i22 = i17;
                        for (i23 = 1; i23 < 2; ++i23) {
                            i20 += by2;
                            Test0571.fFld += i20;
                        }
                    }
                    break;
                case 94:
                case 100:
                    Test0571.dFld -= i19;
                    break;
                case 95:
                    i24 -= (int) Test0571.instanceCount;
                    break;
                case 92:
                    iArrFld[i17] <<= i23;
                case 112:
                    i = i24;
                    break;
                default:
                    if (Test0571.bFld) break;
                }
            case 27:
            case 40:
                Test0571.dFld += Test0571.instanceCount;
                break;
            default:
                Test0571.iArrFld1[i17][i17] -= i19;
            }
        }

        FuzzerUtils.out.println("i i17 by2 = " + i + "," + i17 + "," + by2);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);

        FuzzerUtils.out.println("Test0571.instanceCount Test0571.bFld Test0571.sFld = " + Test0571.instanceCount + "," + (Test0571.bFld ? 1
                : 0) + "," + Test0571.sFld);
        FuzzerUtils.out.println("Test0571.fFld Test0571.dFld iArrFld = " + Float.floatToIntBits(Test0571.fFld) + "," +
                Double.doubleToLongBits(Test0571.dFld) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0571.iArrFld1 Test0571.lArrFld = " + FuzzerUtils.checkSum(Test0571.iArrFld1) + "," +
                FuzzerUtils.checkSum(Test0571.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0571 _instance = new Test0571();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
