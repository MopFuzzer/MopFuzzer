// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0256 {

    public static final int N = 400;

    public static long instanceCount=-1372L;
    public int iFld=116;
    public static double dFld=2.102918;
    public static float fFld=113.15F;
    public boolean bFld=true;
    public static short sFld=-14533;
    public long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];
    public static volatile double[] dArrFld =new double[N];
    public int[] iArrFld =new int[N];
    public static int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0256.fArrFld, 6.652F);
        FuzzerUtils.init(Test0256.dArrFld, -114.109088);
        FuzzerUtils.init(Test0256.iArrFld1, 4);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public void vMeth1(long l1, int i7, double d) {

        int i8=-205, i9=-4, i10=-12, i11=-11;
        short s=-11828;
        float f1=0.516F;

        for (i8 = 6; 239 > i8; i8++) {
            for (i10 = 1; i10 < 7; ++i10) {
                i11 = -29;
                l1 = 16089L;
                s = (short)i7;
                d += i11;
                i9 >>= -14;
                i9 += (i10 ^ i7);
                Test0256.instanceCount = l1;
                i7 += (int)(-5868321722355309551L + (i10 * i10));
                d = i9;
                if (i11 != 0) {
                    vMeth1_check_sum += l1 + i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + s +
                        Float.floatToIntBits(f1);
                    return;
                }
            }
            Test0256.fArrFld[i8 - 1] = 8;
            i11 = (int)f1;
            f1 += i7;
        }
        vMeth1_check_sum += l1 + i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + s + Float.floatToIntBits(f1);
    }

    public void vMeth() {

        int i12=46723, i13=-24692, i14=-8, i15=-115, i16=41143;

        vMeth1(Test0256.instanceCount, iFld, 0.72336);
        iFld -= iFld;
        Test0256.dArrFld[(iFld >>> 1) % N] -= Test0256.dFld;
        for (i12 = 2; i12 < 341; i12++) {
            i14 = 1;
            while (++i14 < 5) {
                iArrFld[i14 - 1] = i14;
                Test0256.dArrFld[(80 >>> 1) % N] -= i13;
                iArrFld[i12 + 1] -= i12;
            }
            i15 = 5;
            do {
                Test0256.instanceCount -= iFld;
                i16 = 1;
                while (++i16 < 3) {
                    Test0256.fFld = i16;
                    iFld = -14;
                    Test0256.instanceCount += (33746L + (i16 * i16));
                }
                if (bFld) break;
            } while ((i15 -= 3) > 0);
        }
        vMeth_check_sum += i12 + i13 + i14 + i15 + i16;
    }

    public int iMeth(int i2, int i3, int i4) {

        int i5=-139;
        int i6=-29606;
        int i17=-4;
        int i18=-39;
        int i19=11;
        int[] iArr =new int[N];
        float f=-76.863F;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(iArr, -6187);
        FuzzerUtils.init(fArr1, -108.192F);

        for (i5 = 5; 167 > i5; i5++) {
            iArr[i5 + 1] = (int)(fArr1[i5]--);
            f *= (i6--);
            vMeth();
            Test0256.instanceCount = -174L;
            for (i17 = 1; i17 < 10; i17++) {
                i19 = 2;
                do {
                    boolean b=true;
                    if (b) break;
                    iArr[i19] <<= i5;
                    try {
                        iFld = (i5 % i19);
                        i2 = (19097 / i17);
                        i18 = (i17 % -1409341174);
                    } catch (ArithmeticException a_e) {}
                    Test0256.instanceCount -= i17;
                    i3 *= iFld;
                    i6 = (int)1184309643L;
                    i4 = i2;
                    i3 += (i19 * i19);
                } while (--i19 > 0);
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i1=-8, i20=9, i21=-101, i22=-1;
        byte by=64;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 2.353F);

        for (long l : lArrFld) {
            for (i = 2; 63 > i; i++) {
                fArr[i] += (Test0256.instanceCount--);
                Test0256.instanceCount &= ((Integer.reverseBytes(i) * Math.max(i1, i1)) - 113);
                Test0256.instanceCount *= iMeth(37, iFld, i);
                i1 += i;
                try {
                    iArrFld[i - 1] = (i1 % iFld);
                    i1 = (-46716 / i);
                    i1 = (i % iArrFld[i + 1]);
                } catch (ArithmeticException a_e) {}
                iFld -= i;
                iFld &= -63891;
                i1 <<= (int)l;
                iFld *= -64;
            }
            for (i20 = 2; 63 > i20; i20++) {
                iFld = (int) Test0256.instanceCount;
                i21 = Test0256.sFld;
                iArrFld[i20] = (int) Test0256.instanceCount;
                if (bFld) {
                    Test0256.sFld -= (short) -2.604F;
                    if (bFld) {
                        i1 -= i21;
                    }
                    switch ((i20 % 8) + 99) {
                    case 99:
                        bFld = bFld;
                        Test0256.fFld = 40.333F;
                        break;
                    case 100:
                        iFld += (int)(6769279955146960387L + (i20 * i20));
                        try {
                            iFld = (iArrFld[i20] % i21);
                            i21 = (-31 % i21);
                            i21 = (44506 / iArrFld[i20 - 1]);
                        } catch (ArithmeticException a_e) {}
                        Test0256.instanceCount += (i20 | i);
                        Test0256.iArrFld1[i20] |= by;
                        break;
                    case 101:
                        Test0256.iArrFld1[i20] = i22;
                    case 102:
                        Test0256.instanceCount += (-115 + (i20 * i20));
                        iFld >>= i20;
                        i22 = (int) Test0256.instanceCount;
                        break;
                    case 103:
                        i21 += (((i20 * Test0256.fFld) + l) - by);
                    case 104:
                        i1 += i20;
                        break;
                    case 105:
                        Test0256.fFld = 41;
                        break;
                    case 106:
                        by >>>= (byte)i1;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 by i22 = " + i21 + "," + by + "," + i22);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0256.instanceCount iFld Test0256.dFld = " + Test0256.instanceCount + "," + iFld + "," +
                Double.doubleToLongBits(Test0256.dFld));
        FuzzerUtils.out.println("Test0256.fFld bFld Test0256.sFld = " + Float.floatToIntBits(Test0256.fFld) + "," + (bFld ? 1 : 0)
                + "," + Test0256.sFld);
        FuzzerUtils.out.println("lArrFld Test0256.fArrFld Test0256.dArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0256.fArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0256.dArrFld)));
        FuzzerUtils.out.println("iArrFld Test0256.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0256.iArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0256 _instance = new Test0256();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
