// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0104 {

    public static final int N = 400;

    public static long instanceCount=-56L;
    public static short sFld=-30248;
    public static int[][] iArrFld =new int[N][N];
    public static int[] iArrFld1 =new int[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0104.iArrFld, 8);
        FuzzerUtils.init(Test0104.iArrFld1, -4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i12) {

        int i13=9, i14=11, i15=-55084, i16=8, i17=8, i18=-180;
        float f1=-52.511F;
        float[] fArr =new float[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(fArr, 18.336F);
        FuzzerUtils.init(lArr1, 331L);

        i13 = 390;
        while (--i13 > 0) {
            for (i14 = 1; 4 > i14; i14++) {
                Test0104.instanceCount = i15;
                i15 += (i14 + Test0104.instanceCount);
                i15 += (int)113L;
                Test0104.iArrFld[i14][i13] = (int) 189L;
                f1 += (i14 + i13);
                for (i16 = 1; i16 < 2; i16++) {
                    fArr[(i16 >>> 1) % N] *= -2;
                    Test0104.instanceCount -= Test0104.sFld;
                    f1 *= Test0104.instanceCount;
                    lArr1[i13] += i13;
                    i12 *= i18;
                    i18 += i16;
                    i12 <<= (int) Test0104.instanceCount;
                }
            }
        }
        long meth_res = i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth1(int i8, long l) {

        int i9=77, i10=250, i11=3, i19=-44606, i20=5;
        float f2=53.800F;
        float[] fArr1 =new float[N];
        double d1=-105.92552;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(dArr, 0.21817);
        FuzzerUtils.init(lArr, -29915L);
        FuzzerUtils.init(fArr1, 1.930F);

        for (i9 = 3; 257 > i9; ++i9) {
            try {
                Test0104.iArrFld1[i9] = (i10 / 28291);
                i8 = (-120 / i10);
                i11 = (-220 / i10);
            } catch (ArithmeticException a_e) {}
            i10 = (int)lArr[i9 - 1];
            Test0104.sFld <<= (short) (l += (long) dMeth(i9));
            Test0104.instanceCount *= i10;
            i10 += (((i9 * f2) + Test0104.instanceCount) - Test0104.instanceCount);
            f2 = 144;
            switch ((i9 % 5) + 39) {
            case 39:
                for (i19 = 1; i19 < 6; ++i19) {
                    i11 += i19;
                    fArr1[i9 - 1] *= i20;
                    i20 += (i19 ^ i20);
                    Test0104.instanceCount *= (long) f2;
                    l = i20;
                    f2 += l;
                }
                break;
            case 40:
                d1 = i11;
            case 41:
                dArr = dArr;
            case 42:
                i8 >>>= i9;
                break;
            case 43:
            }
        }
        vMeth1_check_sum += i8 + l + i9 + i10 + i11 + Float.floatToIntBits(f2) + i19 + i20 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void vMeth(int i2, float f, int i3) {

        int i5=-61376, i6=39543, i7=0, i21=-63688, i22=96;
        byte by=43;
        float[] fArr2 =new float[N];

        FuzzerUtils.init(fArr2, 84.580F);

        Test0104.instanceCount -= (long) (i2 * f);
        for (int i4 : Test0104.iArrFld1) {
            Test0104.iArrFld1[(i2 >>> 1) % N] = (--i5);
            try {
                i4 = (61792 / i4);
                i2 = (Test0104.iArrFld[(i4 >>> 1) % N][(i3 >>> 1) % N] % -150);
                i3 = (-1422 % i2);
            } catch (ArithmeticException a_e) {}
            for (i6 = 4; i6 > 1; i6 -= 3) {
                vMeth1(8, Test0104.instanceCount);
                lArrFld[i6 + 1] += Test0104.instanceCount;
                fArr2[i6 + 1] += i2;
                Test0104.instanceCount *= i6;
                Test0104.instanceCount -= by;
                i4 = 247;
                for (i21 = 1; i21 < 4; i21++) {
                    try {
                        i5 = (35562 % Test0104.iArrFld[i21][i21]);
                        Test0104.iArrFld1[i21 - 1] = (-22010 / i6);
                        i4 = (-1077624728 / i5);
                    } catch (ArithmeticException a_e) {}
                    Test0104.instanceCount *= Test0104.instanceCount;
                    Test0104.iArrFld[i21] = Test0104.iArrFld1;
                }
            }
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + i3 + i5 + i6 + i7 + by + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=-4, i23=51244, i24=89, i25=-60777, i26=-1, i27=33002;
        float f3=2.57F;
        byte by1=-14;
        boolean b=false;

        Test0104.instanceCount = Test0104.iArrFld[(i >>> 1) % N][(75 >>> 1) % N];
        Test0104.iArrFld[(i >>> 1) % N][(i >>> 1) % N] >>= (int) ((--i) + (--Test0104.instanceCount));
        i1 = 285;
        do {
            vMeth(i1, f3, i);
            i = i1;
            switch (((i1 % 6) * 5) + 78) {
            case 79:
                i += i1;
            case 80:
                Test0104.iArrFld[i1 - 1][i1] = i;
                Test0104.sFld += (short) (((i1 * i1) + i) - by1);
                Test0104.iArrFld1[i1] -= i23;
            case 89:
                i23 += (((i1 * i23) + i) - Test0104.instanceCount);
                i = (int) Test0104.instanceCount;
                i23 >>>= i23;
            case 99:
                Test0104.instanceCount = by1;
                i23 += (((i1 * f3) + f3) - Test0104.instanceCount);
                Test0104.instanceCount = (long) f3;
                Test0104.instanceCount -= i1;
                break;
            case 103:
                by1 = (byte)i;
                i23 += (((i1 * i) + Test0104.instanceCount) - i1);
                i -= 6;
                break;
            case 94:
                i23 >>= by1;
                Test0104.iArrFld1[i1 + 1] = -24127;
            }
            for (i24 = 4; i24 < 175; ++i24) {
                Test0104.instanceCount *= i24;
                for (i26 = 1; i26 < 2; i26++) {
                    switch (((i1 >>> 1) % 3) + 95) {
                    case 95:
                        i23 -= i;
                        i23 += i26;
                        b = b;
                        b = false;
                        break;
                    case 96:
                        Test0104.instanceCount += i26;
                        break;
                    case 97:
                        i += i26;
                        break;
                    default:
                        i25 *= (int) Test0104.instanceCount;
                    }
                }
            }
        } while ((i1 -= 2) > 0);

        FuzzerUtils.out.println("i i1 f3 = " + i + "," + i1 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("by1 i23 i24 = " + by1 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b = " + (b ? 1 : 0));

        FuzzerUtils.out.println("Test0104.instanceCount Test0104.sFld Test0104.iArrFld = " + Test0104.instanceCount + "," + Test0104.sFld +
                "," + FuzzerUtils.checkSum(Test0104.iArrFld));
        FuzzerUtils.out.println("Test0104.iArrFld1 lArrFld = " + FuzzerUtils.checkSum(Test0104.iArrFld1) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0104 _instance = new Test0104();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
