// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0695 {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static int iFld=106;
    public static boolean bFld=false;
    public byte byFld=-67;
    public static float fFld=60.834F;
    public byte[] byArrFld =new byte[N];
    public long[] lArrFld =new long[N];

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public double dMeth(int i10, double d1, int i11) {

        int i12=-7;
        int i13=-41739;
        int i14=-6;
        int i15=-152;
        int i16=-3;
        int[] iArr2 =new int[N];
        long l1=3388486240L;

        FuzzerUtils.init(iArr2, -15);

        for (i12 = 8; i12 < 148; i12++) {
            i10 -= (int) Test0695.instanceCount;
            for (l1 = 1; l1 < 11; l1 += 2) {
                Test0695.iFld = Test0695.iFld;
                for (i15 = 1; i15 < 3; ++i15) {
                    Test0695.instanceCount += Test0695.instanceCount;
                    Test0695.iFld ^= (int) l1;
                    if (Test0695.bFld) continue;
                    byArrFld = FuzzerUtils.byte1array(N, (byte)95);
                    i14 -= i13;
                    try {
                        Test0695.iFld = (20949 / i15);
                        i10 = (iArr2[(int)(l1 + 1)] % i11);
                        i13 = (i16 % 28324);
                    } catch (ArithmeticException a_e) {}
                    d1 = i13;
                }
            }
            Test0695.instanceCount = Test0695.instanceCount;
            byFld = (byte) Test0695.iFld;
            Test0695.instanceCount = l1;
        }
        long meth_res = i10 + Double.doubleToLongBits(d1) + i11 + i12 + i13 + l1 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public short sMeth(long l, double d) {

        int i5=152;
        int i6=45922;
        int i7=-40691;
        int i8=85;
        int i9=-13241;
        int i17=-12;
        int[] iArr3 =new int[N];
        short s=6967;
        short[] sArr =new short[N];
        double d2=2.38551;

        FuzzerUtils.init(iArr3, 5);
        FuzzerUtils.init(sArr, (short)-25691);

        for (i5 = 7; i5 < 133; ++i5) {
            s -= (short)((--i7) - (++d));
            for (i8 = 1; 12 > i8; i8++) {
                l = (long) (((i8 + 8084438075941019922L) * dMeth(i8, -1.59274, i8)) + Test0695.fFld);
                Test0695.iFld &= (int) l;
                iArr3[i5] ^= -9570;
            }
            Test0695.bFld = true;
            for (d2 = 1; d2 < 12; d2++) {
                i7 = i17;
                Test0695.fFld = l;
                i6 -= (int)-1.57572;
            }
        }
        i6 = i9;
        d -= l;
        i17 = (int)l;
        sArr[(-28942 >>> 1) % N] ^= (short)i7;
        long meth_res = l + Double.doubleToLongBits(d) + i5 + i6 + s + i7 + i8 + i9 + Double.doubleToLongBits(d2) + i17
            + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(sArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void vMeth(int i, float f) {

        int i1=31976;
        int i2=-115;
        int i3=-4;
        int i4=-162;
        int i18=-11;
        int[] iArr1 =new int[N];
        double d3=-72.14059;

        FuzzerUtils.init(iArr1, -56549);

        for (i1 = 6; i1 < 166; i1++) {
            Test0695.iFld = Test0695.iFld;
            i3 = 1;
            while (++i3 < 10) {
                i4 = 1;
                while (++i4 < 1) {
                    Test0695.instanceCount <<= (++Test0695.instanceCount);
                    iArr1[i4] = (int) ((sMeth(Test0695.instanceCount, d3) + i1) - d3);
                    i %= (int)(i | 1);
                    switch ((i4 % 4) + 46) {
                    case 46:
                        lArrFld[i3] *= i1;
                        Test0695.iFld = i18;
                        iArr1[i3] *= (int) Test0695.instanceCount;
                        break;
                    case 47:
                        try {
                            i = (-10348 % i3);
                            i2 = (-3191574 % iArr1[i4]);
                            iArr1[i3] = (iArr1[i4 + 1] % -12415);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 48:
                        Test0695.bFld = Test0695.bFld;
                        Test0695.bFld = Test0695.bFld;
                        i18 += (i4 | Test0695.instanceCount);
                    case 49:
                        i = (int)d3;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d3) + i18 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, -187);

        iArr[(5777 >>> 1) % N][(Test0695.iFld >>> 1) % N] += (int) (Test0695.instanceCount--);
        vMeth(-251, Test0695.fFld);

        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0695.instanceCount Test0695.iFld Test0695.bFld = " + Test0695.instanceCount + "," + Test0695.iFld +
                "," + (Test0695.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test0695.fFld byArrFld = " + byFld + "," + Float.floatToIntBits(Test0695.fFld) + "," +
            FuzzerUtils.checkSum(byArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0695 _instance = new Test0695();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
