// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0300 {

    public static final int N = 400;

    public static long instanceCount=5231114379719121860L;
    public static double dFld=-17.24362;
    public static int iFld=-37378;
    public static short sFld=-23796;
    public static volatile float fFld=55.624F;
    public static volatile short[] sArrFld =new short[N];
    public static int[] iArrFld =new int[N];
    public static volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0300.sArrFld, (short) -498);
        FuzzerUtils.init(Test0300.iArrFld, 3);
        FuzzerUtils.init(Test0300.dArrFld, 0.114613);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i2) {

        int i3=-248, i4=10, i5=39544, i6=52402, i7=33, i8=-3;
        float f=2.40F;
        byte by=124;

        for (i3 = 3; 150 > i3; ++i3) {
            Test0300.instanceCount = i3;
            f -= (float) Test0300.dFld;
            i4 += i3;
            for (i5 = 1; i5 < 11; ++i5) {
                i4 <<= 51227;
                for (i7 = 1; i7 < 2; i7++) {
                    i2 -= i7;
                    switch ((i5 % 2) + 32) {
                    case 32:
                        Test0300.iArrFld[i3 + 1] = i4;
                        by |= (byte)-21;
                        Test0300.iArrFld[i5 + 1] = i6;
                        by = (byte)i2;
                        break;
                    case 33:
                        i8 = i7;
                        break;
                    default:
                        i8 += by;
                    }
                }
            }
        }
        long meth_res = l1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        int i9=9, i10=-11440;
        boolean b=true;

        for (short s : Test0300.sArrFld) {
            Test0300.instanceCount = (iMeth(l, Test0300.iFld) + Test0300.iFld);
            if (b) {
                i9 = 1;
                while (++i9 < 4) {
                    i10 = 1;
                    do {
                        Test0300.iFld -= i9;
                        l = 1174053604L;
                        Test0300.dArrFld[i10 + 1] += i10;
                    } while (++i10 < 1);
                    Test0300.iFld %= -4;
                    Test0300.iFld -= Test0300.iFld;
                    Test0300.iArrFld[i9 + 1] &= -45133;
                    Test0300.iFld = Test0300.iFld;
                    Test0300.instanceCount += i9;
                }
                Test0300.iFld -= 10;
                Test0300.iFld *= i10;
            }
        }
        vMeth1_check_sum += l + i9 + i10 + (b ? 1 : 0);
    }

    public static void vMeth(int i1) {

        int i11=-2;
        int i12=-211;
        int[] iArr =new int[N];
        byte by1=-16;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(fArr, 1.892F);

        iArr[(i1 >>> 1) % N] >>= (int) Test0300.instanceCount;
        Test0300.dFld -= Math.abs(--Test0300.dFld);
        vMeth1(Test0300.instanceCount);
        for (double d : Test0300.dArrFld) {
            Test0300.iFld = i1;
            i11 = 1;
            do {
                Test0300.iFld += (i11 ^ i1);
                i1 += (118 + (i11 * i11));
                fArr = fArr;
                Test0300.instanceCount = i1;
                Test0300.instanceCount = i11;
                i12 = 1;
                do {
                    Test0300.dArrFld[i12 - 1] = i12;
                    i1 &= by1;
                    Test0300.instanceCount = Test0300.instanceCount;
                } while (++i12 < 1);
            } while (++i11 < 4);
        }
        vMeth_check_sum += i1 + i11 + i12 + by1 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-115, i13=217, i14=11, i15=10432, i16=-28356, i17=61121, i18=-198, i19=-189, i20=47101, i21=46, i22=3;
        byte by2=88;
        long l2=-4248524396L;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1659369252L);

        i *= (--i);
        vMeth(Test0300.iFld);
        Test0300.iFld <<= i;
        for (i13 = 198; i13 > 2; --i13) {
            i14 += (i13 + i13);
            Test0300.instanceCount += (((i13 * Test0300.iFld) + i) - i14);
            i15 = 1;
            do {
                i14 = i15;
                i >>= Test0300.sFld;
                Test0300.instanceCount = Test0300.instanceCount;
                by2 = (byte) Test0300.sFld;
                i14 = i;
                Test0300.iFld -= 8;
                i14 = -2;
            } while (++i15 < 128);
            i14 = i13;
            Test0300.iArrFld[i13 + 1] = Test0300.iFld;
            Test0300.instanceCount *= 222;
            for (i16 = 2; i16 < 128; i16++) {
                for (i18 = 2; i18 > 1; i18 -= 3) {
                    lArr[i13 - 1] = i14;
                    try {
                        i19 = (Test0300.iFld % Test0300.iFld);
                        i20 = (i17 / 70);
                        i20 = (-740601088 % i19);
                    } catch (ArithmeticException a_e) {}
                    i19 *= (int)1.835F;
                    i14 >>= i20;
                    Test0300.dFld = i20;
                    i19 = (int)-2.622F;
                }
            }
            for (i21 = i13; i21 < 128; ++i21) {
                switch ((i21 % 1) + 76) {
                case 76:
                    Test0300.fFld = 68;
                    i20 >>>= Test0300.sFld;
                    Test0300.instanceCount -= l2;
                    break;
                default:
                    lArr = lArr;
                }
            }
        }

        FuzzerUtils.out.println("i i13 i14 = " + i + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 by2 i16 = " + i15 + "," + by2 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("l2 lArr = " + l2 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0300.instanceCount Test0300.dFld Test0300.iFld = " + Test0300.instanceCount + "," +
                Double.doubleToLongBits(Test0300.dFld) + "," + Test0300.iFld);
        FuzzerUtils.out.println("Test0300.sFld Test0300.fFld Test0300.sArrFld = " + Test0300.sFld + "," +
                Float.floatToIntBits(Test0300.fFld) + "," + FuzzerUtils.checkSum(Test0300.sArrFld));
        FuzzerUtils.out.println("Test0300.iArrFld Test0300.dArrFld = " + FuzzerUtils.checkSum(Test0300.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0300.dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0300 _instance = new Test0300();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
