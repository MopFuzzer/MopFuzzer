// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0711 {

    public static final int N = 400;

    public static long instanceCount=-1890550184L;
    public static short sFld=-20292;
    public static boolean bFld=false;
    public static byte byFld=-32;
    public static float fFld=2.173F;
    public static volatile long[] lArrFld =new long[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0711.lArrFld, -2785731245L);
        FuzzerUtils.init(Test0711.bArrFld, true);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l1, int i9, int i10) {

        int i11=63, i12=11, i13=196;
        float f2=106.84F;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(sArr, (short)-25271);

        Test0711.sFld *= (short) i10;
        i11 = 1;
        while (++i11 < 290) {
            switch ((i11 % 6) + 8) {
            case 8:
                i10 = (int)l1;
                i10 *= i11;
                for (i12 = i11; i12 < 6; i12++) {
                    if (i12 != 0) {
                    }
                    Test0711.instanceCount *= Test0711.instanceCount;
                    i13 += i12;
                }
                break;
            case 9:
                Test0711.instanceCount += (i11 * i11);
                break;
            case 10:
                i9 -= Test0711.sFld;
                i9 += (((i11 * i13) + i13) - f2);
                Test0711.sFld = (short) -3;
                f2 -= i9;
            case 11:
                sArr = sArr;
            case 12:
                i10 >>= i9;
                break;
            case 13:
                if (Test0711.bFld) continue;
                break;
            }
        }
        long meth_res = l1 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i6=14;
        int i7=11;
        int i8=4229;
        int i14=-213;
        int i15=131;
        int i16=-13;
        int i17=-2;
        int[] iArr1 =new int[N];
        float f1=0.681F;
        double d=-86.114240;

        FuzzerUtils.init(iArr1, -21399);

        i6 += (int) Test0711.instanceCount;
        for (i7 = 14; i7 < 230; i7++) {
            if (i8 != 0) {
                vMeth_check_sum += i6 + i7 + i8 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i14 + i15 +
                    i16 + i17 + FuzzerUtils.checkSum(iArr1);
                return;
            }
        }
        f1 += ((-(++Test0711.instanceCount)) + (i8--));
        Test0711.instanceCount *= Test0711.instanceCount;
        f1 *= (--i8);
        i6 <<= (int) (fMeth(-219L, i8, i8) + Test0711.instanceCount);
        for (d = 19; d < 393; ++d) {
            i6 += (int) (((d * Test0711.byFld) + Test0711.byFld) - Test0711.sFld);
            i15 = 1;
            while (++i15 < 5) {
                i6 <<= (int)2088102087L;
                for (i16 = 1; d < i16; --i16) {
                    i8 += (i16 * i15);
                    iArr1[i16 - 1] += (int) Test0711.instanceCount;
                    f1 += i6;
                }
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i14 + i15 + i16 + i17
            + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(byte by, long l, int i2) {

        int i3=10;
        int i4=-9;
        int i5=-53514;
        int[] iArr2 =new int[N];
        float f=2.373F;
        boolean b=false;
        double d1=0.108270;
        double d2=-2.68740;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr2, -2458);
        FuzzerUtils.init(dArr, 88.41552);

        for (i3 = 4; i3 < 137; i3++) {
            for (f = 1; f < 12; ++f) {
                b = (b = b);
                switch (((i3 % 9) * 5) + 57) {
                case 97:
                    i2 += ((-(i3 - 35)) + (-(i2 + i3)));
                    vMeth();
                    d1 = 1;
                    while (++d1 < 2) {
                        i5 += (int)((long)d1 | by);
                        iArr2[(int)(d1 + 1)] = i3;
                        i4 += (int)d1;
                        d2 -= f;
                        Test0711.lArrFld[(int) (f + 1)] |= Test0711.instanceCount;
                        iArr2[(int)(d1)] = i4;
                    }
                    Test0711.fFld += (((f * Test0711.fFld) + Test0711.fFld) - i4);
                    break;
                case 96:
                    dArr[i3] -= Test0711.fFld;
                case 76:
                    iArr2[(int)(f - 1)] -= (int)l;
                case 92:
                    Test0711.bArrFld[(int) (f)] = true;
                    break;
                case 94:
                    i2 += i4;
                    break;
                case 101:
                    l += (long)((long)f | i4);
                    break;
                case 82:
                    Test0711.instanceCount += (long) f;
                    break;
                case 58:
                    i5 = (int)f;
                    break;
                case 88:
                    Test0711.instanceCount = by;
                }
            }
        }
        long meth_res = by + l + i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + (b ? 1 : 0) +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=50405;
        int i18=66;
        int i19=61298;
        int[] iArr =new int[N];
        long l3=-257L;
        double d3=2.92218;

        FuzzerUtils.init(iArr, -211);

        Test0711.instanceCount = ((i++) + ((i % -1L) - (Test0711.instanceCount - i)));
        for (int i1 : iArr) {
            if (((i1++) + (Test0711.instanceCount--)) != -18579) {
                Test0711.instanceCount -= (((++i) - (i1 - i1)) * (i1 <<= (Test0711.sFld ^ i)));
            } else {
                i1 -= (int) (lMeth((byte) (-120), Test0711.instanceCount, i) + -14);
                i18 = 1;
                while (++i18 < 63) {
                    i += (((i18 * i) + Test0711.byFld) - i18);
                    Test0711.fFld += Test0711.sFld;
                    switch (((i18 % 3) * 5) + 32) {
                    case 36:
                        Test0711.instanceCount += (i18 ^ i);
                        i >>= i18;
                        i = i1;
                        Test0711.fFld = i18;
                        break;
                    case 42:
                        i1 = -8;
                        Test0711.fFld = i;
                    case 37:
                        i1 += i18;
                        Test0711.bFld = Test0711.bFld;
                        break;
                    default:
                        Test0711.sFld >>= (short) 0;
                        l3 += (i18 * i18);
                        iArr[i18] -= (int) Test0711.instanceCount;
                        i1 >>= -1;
                    }
                    if (Test0711.bFld) {
                        i = i1;
                        l3 -= Test0711.sFld;
                        Test0711.bFld = Test0711.bFld;
                    } else if (Test0711.bFld) {
                        i1 = (int)l3;
                        i19 = 1;
                        do {
                            Test0711.instanceCount -= -41124;
                            d3 += -167;
                            l3 -= i19;
                        } while (++i19 < 1);
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i18 l3 = " + i + "," + i18 + "," + l3);
        FuzzerUtils.out.println("i19 d3 iArr = " + i19 + "," + Double.doubleToLongBits(d3) + "," +
            FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0711.instanceCount Test0711.sFld Test0711.bFld = " + Test0711.instanceCount + "," + Test0711.sFld +
                "," + (Test0711.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0711.byFld Test0711.fFld Test0711.lArrFld = " + Test0711.byFld + "," +
                Float.floatToIntBits(Test0711.fFld) + "," + FuzzerUtils.checkSum(Test0711.lArrFld));
        FuzzerUtils.out.println("Test0711.bArrFld = " + FuzzerUtils.checkSum(Test0711.bArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0711 _instance = new Test0711();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
