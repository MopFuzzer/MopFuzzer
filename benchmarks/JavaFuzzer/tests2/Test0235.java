// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0235 {

    public static final int N = 400;

    public static long instanceCount=-229L;
    public static float fFld=0.859F;
    public boolean bFld=true;
    public static volatile short sFld=-6763;
    public static byte[] byArrFld =new byte[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0235.byArrFld, (byte) 11);
        FuzzerUtils.init(Test0235.iArrFld, -1);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, int i4, int i5) {

        int i6=6, i7=-187, i8=-8, i9=-248;
        boolean b=false;
        float f=39.510F;
        byte by=-15;

        for (i6 = 9; i6 < 151; i6 += 3) {
            i8 = 1;
            do {
                if (b) continue;
                Test0235.instanceCount += (((i8 * i5) + Test0235.instanceCount) - i5);
                i9 -= (int) Test0235.instanceCount;
            } while (++i8 < 32);
            f -= f;
        }
        by = (byte)i9;
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + Float.floatToIntBits(f) + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i2=-77, i10=-19, i11=5;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 176L);

        Test0235.instanceCount <<= (lArr1[(i2 >>> 1) % N] + (i2 &= iMeth(i2, i2, i2)));
        for (i10 = 3; i10 < 212; i10++) {
            Test0235.fFld += (i10 * i10);
        }
        Test0235.byArrFld[(i11 >>> 1) % N] = (byte) i11;
        vMeth_check_sum += i2 + i10 + i11 + FuzzerUtils.checkSum(lArr1);
    }

    public static void vSmallMeth(int i, int i1) {

        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 5336201126684807843L);

        vMeth();
        vSmallMeth_check_sum += i + i1 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        double d=60.116609;
        int i12=54437, i13=-61603, i14=-30, i15=17395, i16=-62824, i17=-81, i18=-30516, i19=50016;
        long[] lArr2 =new long[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr2, -35451L);
        FuzzerUtils.init(fArr, -2.563F);

        for (int smallinvoc=0; smallinvoc<776; smallinvoc++) vSmallMeth(-14, 56320);
        for (d = 3; d < 257; ++d) {
            i12 += (int)(d - i12);
            i12 += (int)(d * d);
            i12 <<= 5;
            i12 *= (int) Test0235.instanceCount;
            Test0235.fFld += i12;
        }
        for (i13 = 388; 20 < i13; i13 -= 3) {
            Test0235.instanceCount = i12;
            for (i15 = 4; i15 < 205; i15++) {
                i12 += i16;
                bFld = bFld;
                i16 += (i15 | i12);
                if (bFld) {
                    i14 -= -35945;
                    Test0235.fFld += (i15 * Test0235.fFld);
                    Test0235.iArrFld = Test0235.iArrFld;
                    switch (((i15 % 3) * 5) + 4) {
                    case 7:
                    case 13:
                        for (i17 = 1; i17 < 2; i17++) {
                            Test0235.sFld -= (short) -214;
                            Test0235.instanceCount = Test0235.instanceCount;
                            Test0235.instanceCount *= Test0235.instanceCount;
                            i19 = (int)11276L;
                            lArr2[i17] -= -13;
                            Test0235.fFld = i15;
                            Test0235.instanceCount += i13;
                            i19 >>>= i15;
                            fArr[i15] *= Test0235.instanceCount;
                        }
                        i18 += (i15 | i19);
                        i14 *= i17;
                        break;
                    case 6:
                        i19 = (int)-6470964378195826147L;
                        break;
                    default:
                        fArr[i13 + 1] *= i14;
                    }
                }
            }
        }

        FuzzerUtils.out.println("d i12 i13 = " + Double.doubleToLongBits(d) + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("lArr2 fArr = " + FuzzerUtils.checkSum(lArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0235.instanceCount Test0235.fFld bFld = " + Test0235.instanceCount + "," +
                Float.floatToIntBits(Test0235.fFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0235.sFld Test0235.byArrFld Test0235.iArrFld = " + Test0235.sFld + "," +
                FuzzerUtils.checkSum(Test0235.byArrFld) + "," + FuzzerUtils.checkSum(Test0235.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0235 _instance = new Test0235();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
