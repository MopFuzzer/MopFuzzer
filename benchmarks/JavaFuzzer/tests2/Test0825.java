// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0825 {

    public static final int N = 400;

    public static long instanceCount=8L;
    public byte byFld=116;
    public static int iFld1=-59;
    public static double dFld=-3.90876;
    public static byte byFld1=-39;
    public static int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0825.iArrFld, -12);
    }

    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(long l, long l1) {

        float f1=-1.340F;
        float[] fArr1 =new float[N];
        double d=1.34940;
        int i5=89, i6=-120, i7=201, i8=4, i9=43122, i10=-65, i11=-695;
        short s=-18885;
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -3608979190499235141L);
        FuzzerUtils.init(fArr1, -39.72F);

        if (b) {
            Test0825.iFld1 -= (int) f1;
            for (int i4 : Test0825.iArrFld) {
                for (d = 1; d < 4; d++) {
                    Test0825.iArrFld[(int) (d)] = 41;
                    Test0825.dFld = f1;
                    for (i6 = (int)(d); i6 < 2; ++i6) {
                        Test0825.byFld1 -= (byte) Test0825.iFld1;
                        lArr[(i6 >>> 1) % N] *= (long)f1;
                        s += (short)i6;
                    }
                }
            }
            for (i8 = 5; 186 > i8; ++i8) {
                for (i10 = 1; i10 < 9; ++i10) {
                    Test0825.iArrFld[i8 - 1] = (int) l1;
                    i11 -= i5;
                    fArr1[i8 + 1] = i8;
                }
            }
        } else {
            i5 *= (int)192L;
        }
        long meth_res = l + l1 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i5 + i6 + i7 + s + i8 + i9 +
            i10 + i11 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth(float f) {

        int i2=20, i3=93, i12=6363;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 1.595F);

        i2 = 1;
        do {
            fArr[i2 + 1][i2] = i2;
            Test0825.iFld1 = (int) Test0825.instanceCount;
            fArr[i2][i2] -= 2;
            i3 = 1;
            while (++i3 < 5) {
                f += -104;
                Test0825.instanceCount <<= 20191;
                Test0825.iFld1 = (++Test0825.iArrFld[i2]);
                if (bMeth(Test0825.instanceCount, Test0825.instanceCount) ^ true) break;
                Test0825.iArrFld[i3 - 1] -= (int) -46282L;
                f *= i3;
                f += (-88.933F + (i3 * i3));
                i12 = 1;
                do {
                    Test0825.iFld1 = i12;
                    f += (((i12 * Test0825.instanceCount) + f) - i3);
                } while (--i12 > 0);
            }
        } while (++i2 < 321);
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + i12 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth() {

        int i1=53895, i13=177, i14=-9, i15=-94, i16=28550, i17=19086;
        float f2=-1.461F;

        i1 = Math.max(iMeth(f2), -38);
        Test0825.instanceCount = i1;
        Test0825.iFld1 = (int) Test0825.instanceCount;
        for (i13 = 5; i13 < 122; i13++) {
            i14 += (i13 * i13);
            Test0825.instanceCount *= (long) f2;
            for (i15 = 13; i15 > 1; --i15) {
                i17 = 1;
                while (++i17 < 2) {
                    i16 = i13;
                    i1 += (int) Test0825.instanceCount;
                }
                Test0825.dFld -= Test0825.dFld;
                i1 += (i15 * i15);
                Test0825.iFld1 = i1;
                Test0825.iFld1 += i15;
            }
            Test0825.byFld1 = (byte) -108;
        }
        long meth_res = i1 + Float.floatToIntBits(f2) + i13 + i14 + i15 + i16 + i17;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i=-9, i18=13450, i19=-4391, i20=-14, i21=-6302, i22=166, i23=3;
        long l2=-158301296L, l3=131L;
        float f3=0.343F;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-101);

        i = byFld;
        i -= (int)fMeth();
        Test0825.dFld -= Test0825.dFld;
        i18 = 1;
        while (++i18 < 204) {
            i19 = 1;
            do {
                for (i20 = 1; i20 > 1; i20 -= 3) {
                    i21 = (int) Test0825.instanceCount;
                    l2 = Test0825.iFld1;
                    i21 = (int) Test0825.dFld;
                    Test0825.iFld1 += (((i20 * Test0825.iFld1) + Test0825.iFld1) - i21);
                    i += (int)11L;
                }
                Test0825.iFld1 += (int) l2;
                lArrFld[i19] = -217;
                Test0825.iArrFld = FuzzerUtils.int1array(N, (int) 50959);
            } while (++i19 < 123);
            i21 += (i18 + l3);
            for (i22 = i18; i22 < 123; ++i22) {
                short s1=25343;
                switch ((i22 % 2) + 74) {
                case 74:
                    Test0825.instanceCount = i23;
                    i = i19;
                    l3 += i22;
                    break;
                case 75:
                    switch ((i22 % 2) + 50) {
                    case 50:
                    case 51:
                        f3 -= i23;
                        break;
                    default:
                        l2 = i21;
                    }
                    s1 += (short)i22;
                    f3 *= i23;
                    break;
                default:
                    i21 -= (int)l2;
                    f3 += (((i22 * i22) + i18) - s1);
                    byArr[i22] = byArr[i18 - 1];
                    l3 += (i22 - i18);
                }
                Test0825.iArrFld[i18] <<= Test0825.iFld1;
            }
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 l2 = " + i20 + "," + i21 + "," + l2);
        FuzzerUtils.out.println("l3 i22 i23 = " + l3 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f3 byArr = " + Float.floatToIntBits(f3) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0825.instanceCount byFld Test0825.iFld1 = " + Test0825.instanceCount + "," + byFld + "," +
                Test0825.iFld1);
        FuzzerUtils.out.println("Test0825.dFld Test0825.byFld1 Test0825.iArrFld = " + Double.doubleToLongBits(Test0825.dFld) + "," +
                Test0825.byFld1 + "," + FuzzerUtils.checkSum(Test0825.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0825 _instance = new Test0825();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
