// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0959 {

    public static final int N = 400;

    public static long instanceCount=-3067954526023009401L;
    public float fFld=-107.53F;
    public static short sFld=27528;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0959.iArrFld, 175);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, byte by, int i10) {


        i9 |= i9;
        vMeth1_check_sum += i9 + by + i10;
    }

    public static void vMeth() {

        int i6=-8, i7=-61691, i8=129, i11=313, i12=176, i13=-38, i14=-3;
        double d1=120.75690;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 132690625L);

        i6 = (i6 + (--i6));
        for (i7 = 227; i7 > 14; i7 -= 3) {
            vMeth1(i8, (byte)(61), i8);
            lArr[i7] -= i6;
            try {
                i6 = (-187 / i7);
                i6 = (i7 % -1354596970);
                i8 = (224 / Test0959.iArrFld[i7 + 1]);
            } catch (ArithmeticException a_e) {}
            i6 = (int)d1;
            i8 -= (int)-32294L;
            i6 += (int)d1;
            Test0959.instanceCount += Test0959.instanceCount;
            Test0959.sFld -= (short) 2.625F;
            Test0959.sFld = (short) i6;
        }
        for (i11 = 3; i11 < 157; i11++) {
            for (i13 = 1; 10 > i13; ++i13) {
                Test0959.instanceCount += (-114 + (i13 * i13));
                Test0959.instanceCount = i13;
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + Double.doubleToLongBits(d1) + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(long l, int i5, long l1) {

        int i15=202, i16=9;
        boolean b1=false;

        vMeth();
        for (i15 = 9; i15 < 250; i15++) {
            b1 = b1;
            l += (i15 * i15);
            Test0959.instanceCount = i16;
            i16 += Test0959.sFld;
        }
        long meth_res = l + i5 + l1 + i15 + i16 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-187;
        int i1=-61;
        int i2=11;
        int i3=-11;
        int i4=-9;
        int i17=-3;
        int i18=46150;
        int[][] iArr =new int[N][N];
        double d=-52.14616;
        float f=-28.299F;

        FuzzerUtils.init(iArr, -10910);

        for (i = 176; i > 7; i--) {
            for (d = 7; d < 148; d++) {
                i1 -= (i1++);
            }
            i3 = 1;
            while (++i3 < 148) {
                iArr[i - 1] = (iArr[i - 1] = (iArr[i] = (iArr[i3 - 1] = iArr[i])));
                i1 += (((i3 * i3) + fFld) - i1);
                iArr[i3][(i >>> 1) % N] <<= iArr[i3][i3 + 1];
                switch (((i3 % 2) * 5) + 33) {
                case 41:
                    Test0959.instanceCount >>= Test0959.instanceCount;
                    break;
                case 34:
                    i4 = 1;
                    do {
                        boolean b=true;
                        b = b;
                        Test0959.instanceCount &= (long) (-((Test0959.instanceCount * fFld) + Math.abs(3853621148L)));
                        fFld += Math.abs((int) ((Test0959.instanceCount - i4) + (--i2)));
                        i1 += i4;
                        Test0959.instanceCount *= (iArr[i4 + 1][i3]--);
                        Test0959.instanceCount >>= i2;
                        i1 = iArr[(i4 >>> 1) % N][i4 + 1];
                        i2 += (int)(0.877F + ((i + fFld) + (i - 9073)));
                        Test0959.instanceCount = (long) fFld;
                    } while (++i4 < 1);
                    Test0959.instanceCount += (((i3 * fFld) + i1) - Test0959.instanceCount);
                    iArr[i - 1][i3] ^= Math.abs(iMeth(Test0959.instanceCount, i2, Test0959.instanceCount));
                    f = 1;
                    do {
                        double d2=-23.80721;
                        d2 -= 102;
                        fFld += i4;
                        i1 -= (int)d;
                    } while ((f += 2) < 1);
                    break;
                }
                fFld += (10686 + (i3 * i3));
                for (i17 = 1; 1 > i17; i17++) {
                    i2 += i3;
                    i1 = i17;
                    i18 &= (int)103L;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("f i17 i18 = " + Float.floatToIntBits(f) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0959.instanceCount fFld Test0959.sFld = " + Test0959.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0959.sFld);
        FuzzerUtils.out.println("Test0959.iArrFld = " + FuzzerUtils.checkSum(Test0959.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0959 _instance = new Test0959();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
