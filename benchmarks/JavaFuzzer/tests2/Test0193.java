// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0193 {

    public static final int N = 400;

    public static long instanceCount=-1761484236L;
    public static long lFld=-241L;
    public static byte byFld=-116;
    public static long[] lArrFld =new long[N];
    public static float[][] fArrFld =new float[N][N];
    public static byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0193.lArrFld, -41L);
        FuzzerUtils.init(Test0193.fArrFld, -79.596F);
        FuzzerUtils.init(Test0193.byArrFld, (byte) 46);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i13=-6700;
        int i14=0;
        int i15=14;
        int i16=134;
        int i18=406;
        int i19=0;
        int i20=1;
        int i21=-30732;
        int[][] iArr2 =new int[N][N];
        int[] iArr3 =new
                    int[N];
        float f1=19.519F;
        boolean b=true;

        FuzzerUtils.init(iArr2, -5);
        FuzzerUtils.init(iArr3, 65146);

        for (i13 = 14; 284 > i13; ++i13) {
            short s=-1302;
            double d1=-43.59268;
            Test0193.fArrFld[i13 + 1][i13] = i14;
            iArr2[i13 + 1][i13] = i14;
            s = (short)d1;
            i15 = 1;
            do {
                Test0193.lFld = (long) f1;
                iArr2[i13 + 1][i13 - 1] = (int) Test0193.lFld;
                i14 += i15;
                i16 = 75;
            } while (++i15 < 6);
            for (i18 = 6; i18 > 1; i18--) {
                i14 *= i16;
                i16 &= i15;
                for (i20 = 1; i20 < 2; ++i20) {
                    if (b) break;
                }
                iArr3[i13] = (int) Test0193.lFld;
            }
        }
        vMeth_check_sum += i13 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i18 + i19 + i20 + i21 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(iArr3);
    }

    public static int iMeth(int i12, byte by1, long l) {

        float f2=0.650F;
        int i23=45862;
        int i24=52603;
        int i25=11693;
        int i26=-62769;
        int i27=165;
        int[] iArr4 =new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr4, -103);

        vMeth();
        iArr4[(i12 >>> 1) % N] &= i12;
        i12 += 8;
        f2 += i12;
        for (int i22 : iArr4) {
            Test0193.instanceCount -= l;
            iArr4 = iArr4;
            i23 = 1;
            do {
                i12 -= i22;
            } while (++i23 < 4);
            switch (((-3 >>> 1) % 8) + 115) {
            case 115:
                for (i24 = 4; i24 > 1; i24 -= 2) {
                    for (i26 = i24; i26 < 4; i26 += 2) {
                        by1 += (byte) (((i26 * i25) + i24) - Test0193.lFld);
                        Test0193.lFld += (i26 * l);
                        l = i27;
                    }
                }
            case 116:
                Test0193.byArrFld[(i26 >>> 1) % N] &= (byte) i26;
            case 117:
                iArr4[(229 >>> 1) % N] -= (int)f2;
                break;
            case 118:
                if (b1) break;
                break;
            case 119:
            case 120:
                f2 += i24;
                break;
            case 121:
                i22 >>= 0;
            case 122:
                i22 += i23;
                break;
            }
        }
        long meth_res = i12 + by1 + l + Float.floatToIntBits(f2) + i23 + i24 + i25 + i26 + i27 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr4);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i5) {

        int i6=3;
        int i7=-5;
        int i8=6;
        int i9=-62103;
        int i10=-12;
        int i11=-110;
        int[][] iArr1 =new int[N][N];
        float f=-110.917F;
        short s1=-14662;
        double d2=-29.87459;

        FuzzerUtils.init(iArr1, 12440);

        for (i6 = 15; i6 < 278; ++i6) {
            for (i8 = i6; i8 < 6; i8++) {
                switch ((i8 % 6) + 95) {
                case 95:
                    i9 += (i8 | i8);
                    for (i10 = 1; i10 > i6; i10--) {
                        iArr1[i8 - 1][i8] += (int) Test0193.lArrFld[i8];
                        i7 = (int) (iArr1[i8][i10 + 1] - ((f - 4) - (Test0193.lFld ^ i8)));
                        Test0193.byFld += (byte) (i10 + i8);
                        Test0193.lFld = Test0193.instanceCount;
                    }
                    f -= (float)(i9 -= (int)-56.103266);
                    break;
                case 96:
                    i5 = (int) ((-122.54175 * iMeth(31603, Test0193.byFld, 1731527349L)) + s1);
                    break;
                case 97:
                    Test0193.lFld += i8;
                    s1 >>>= (short)i11;
                    Test0193.instanceCount = i6;
                    break;
                case 98:
                    Test0193.instanceCount = i6;
                case 99:
                    i5 = i8;
                    break;
                case 100:
                    i7 += (i8 * i8);
                    break;
                default:
                    d2 -= 40735;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + s1 + Double.doubleToLongBits(d2)
            + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-18392;
        int i1=-186;
        int i2=13;
        int i3=-209;
        int i4=-14;
        int i28=-22263;
        int i29=-18268;
        int[] iArr =new int[N];
        byte by=72;
        double d=0.65601;
        double d3=114.126498;
        double[][] dArr =new double[N][N];
        float f3=0.910F;
        short s2=14756;
        boolean b2=false;
        boolean b3=true;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 26L);
        FuzzerUtils.init(iArr, -39);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, 1.28859);

        for (i = 3; 356 > i; i++) {
            i1 = (int) (-Test0193.instanceCount);
            for (i2 = 71; i2 > 2; --i2) {
                i4 = 1;
                do {
                    lArr[i2 - 1] = ((++i3) + ((i4 * i2) - by));
                    iArr[i] += (int)(d--);
                    i1 &= (int)(((-56495 * lMeth(i4)) + i4) * f3);
                } while (++i4 < 2);
                Test0193.instanceCount += (i2 ^ (long) f3);
                Test0193.lFld -= (long) d;
                i28 = 1;
                do {
                    i3 = i28;
                    i1 = i28;
                    i3 *= -238;
                    i3 = -60663;
                    i1 *= i2;
                    i1 = (int)d;
                    d = i3;
                    switch (i + 91) {
                    case 91:
                        i3 ^= i28;
                        iArr[i2] -= Test0193.byFld;
                        switch ((i28 % 1) + 98) {
                        case 98:
                            Test0193.byFld += (byte) (i28 ^ i29);
                        }
                        break;
                    case 92:
                        Test0193.instanceCount -= i29;
                    case 93:
                        Test0193.instanceCount *= i29;
                        break;
                    case 94:
                        d -= i3;
                        Test0193.lFld >>= i28;
                        f3 = s2;
                        i1 *= -8;
                    case 95:
                        i29 += (int) Test0193.instanceCount;
                        f3 *= (float)d;
                    case 96:
                    case 97:
                        f3 += (-77 + (i28 * i28));
                        break;
                    case 98:
                        if (b2) break;
                        break;
                    case 99:
                        i29 <<= -32337;
                        break;
                    case 100:
                        i1 += (int)f3;
                    case 101:
                        Test0193.lArrFld[i28] = i4;
                        break;
                    case 102:
                        i29 *= (int)d;
                    case 103:
                        lArr[i28 + 1] -= i29;
                        break;
                    case 104:
                    case 105:
                        i1 += (i28 + i29);
                        break;
                    case 106:
                        d = s2;
                        break;
                    case 107:
                        iArr[i28 + 1] = i;
                        break;
                    case 108:
                        if (b2) break;
                        break;
                    case 109:
                        i3 *= i2;
                        break;
                    case 110:
                        i3 += 44269;
                        break;
                    case 111:
                        i1 += i;
                    case 112:
                        i3 -= i4;
                        break;
                    case 113:
                        Test0193.instanceCount = 113;
                        break;
                    case 114:
                        i29 *= i29;
                        break;
                    case 115:
                        bArr[i2] = b3;
                        break;
                    case 116:
                        Test0193.lFld <<= -60883;
                        break;
                    case 117:
                        i1 = (int)d;
                        break;
                    case 118:
                        Test0193.instanceCount -= i4;
                    case 119:
                        Test0193.lFld += (i28 ^ Test0193.lFld);
                    case 120:
                        i3 *= -40589;
                        break;
                    case 121:
                        bArr[(i4 >>> 1) % N] = b3;
                        break;
                    case 122:
                        iArr[i] = i2;
                    case 123:
                    case 124:
                        i29 = i29;
                    case 125:
                        Test0193.lArrFld = lArr;
                        break;
                    case 126:
                        i1 = i29;
                        break;
                    case 127:
                        Test0193.instanceCount = i;
                        break;
                    case 128:
                        i3 = (int)-36L;
                    case 129:
                        try {
                            i29 = (i4 % i);
                            i1 = (i29 % i4);
                            i3 = (i4 / -41609);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 130:
                        Test0193.lFld -= Test0193.instanceCount;
                        break;
                    case 131:
                        i1 += i28;
                        break;
                    case 132:
                        i1 += (int)-2.517F;
                        break;
                    case 133:
                        Test0193.lFld >>>= -82;
                        break;
                    case 134:
                        i29 = (int) Test0193.instanceCount;
                        break;
                    case 135:
                        dArr[i2][i2 + 1] = i3;
                    case 136:
                        Test0193.instanceCount = i28;
                        break;
                    case 137:
                    case 138:
                        b3 = b2;
                        break;
                    case 139:
                        Test0193.lFld = -11501;
                        break;
                    case 140:
                        i29 = s2;
                    case 141:
                    case 142:
                        try {
                            i29 = (i29 / -72);
                            i3 = (i4 % i1);
                            i3 = (iArr[i2 - 1] % i2);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 143:
                        if (b2) continue;
                        break;
                    case 144:
                        i29 += (int)d;
                        break;
                    case 145:
                        iArr[i2] >>>= (int) Test0193.lFld;
                        break;
                    case 146:
                        i1 += (((i28 * i1) + i) - i1);
                    case 147:
                    case 148:
                        i3 += i28;
                        break;
                    case 149:
                        i29 <<= i3;
                    case 150:
                        i29 &= i28;
                        break;
                    case 151:
                        if (true) continue;
                    case 152:
                        i29 = i2;
                        break;
                    case 153:
                        i29 = i4;
                        break;
                    case 154:
                        f3 += (i28 - by);
                        break;
                    case 155:
                        bArr[i + 1] = b2;
                    case 156:
                        i29 -= 52;
                        break;
                    case 157:
                        Test0193.instanceCount = (long) 93.746F;
                        break;
                    case 158:
                        iArr[i + 1] += i3;
                        break;
                    case 159:
                        dArr[i28 + 1][i28 - 1] -= i3;
                    case 160:
                        iArr[i28 - 1] *= 110;
                        break;
                    default:
                        d3 -= i1;
                    }
                } while (++i28 < 2);
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 by = " + i3 + "," + i4 + "," + by);
        FuzzerUtils.out.println("d f3 i28 = " + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f3) + "," +
            i28);
        FuzzerUtils.out.println("i29 s2 b2 = " + i29 + "," + s2 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("b3 d3 lArr = " + (b3 ? 1 : 0) + "," + Double.doubleToLongBits(d3) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("iArr bArr dArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(bArr) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0193.instanceCount Test0193.lFld Test0193.byFld = " + Test0193.instanceCount + "," + Test0193.lFld +
                "," + Test0193.byFld);
        FuzzerUtils.out.println("Test0193.lArrFld Test0193.fArrFld Test0193.byArrFld = " + FuzzerUtils.checkSum(Test0193.lArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0193.fArrFld)) + "," + FuzzerUtils.checkSum(Test0193.byArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0193 _instance = new Test0193();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
