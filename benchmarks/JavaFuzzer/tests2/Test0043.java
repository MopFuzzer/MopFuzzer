// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0043 {

    public static final int N = 400;

    public static long instanceCount=4203819082L;
    public static float fFld=0.582F;
    public static byte byFld=1;
    public static int[] iArrFld =new int[N];
    public static byte[] byArrFld =new byte[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0043.iArrFld, -160);
        FuzzerUtils.init(Test0043.byArrFld, (byte) -105);
        FuzzerUtils.init(Test0043.dArrFld, 0.69631);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(double d, int i3, long l1) {

        int i4=4, i5=-216;
        boolean b=true;

        i4 = 1;
        do {
            i3 ^= i3;
            Test0043.fFld += (i4 * i4);
            if (b) continue;
            i3 >>= i4;
            switch ((i4 % 5) + 111) {
            case 111:
                i5 = 1;
                do {
                    i3 += (i5 - i4);
                    i3 /= (int)((long)(d) | 1);
                    l1 += (-12L + (i5 * i5));
                    Test0043.iArrFld = Test0043.iArrFld;
                    i3 -= (int) Test0043.instanceCount;
                    Test0043.fFld -= (float) d;
                    Test0043.iArrFld[i5 + 1] >>>= -2;
                    i3 -= 3;
                } while (++i5 < 9);
                break;
            case 112:
                Test0043.instanceCount <<= i5;
            case 113:
                Test0043.fFld = i5;
            case 114:
                if (i5 != 0) {
                }
            case 115:
                i3 += -25922;
                break;
            }
        } while (++i4 < 176);
        long meth_res = Double.doubleToLongBits(d) + i3 + l1 + i4 + (b ? 1 : 0) + i5;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(long l, int i2) {

        double d1=-27.85029;
        int i6=0, i7=-203, i8=12, i9=171, i10=-9;
        float f1=28.726F;
        long l2=53494L;

        i2 = (iMeth1(d1, i2, l) - i2);
        for (i6 = 7; i6 < 142; ++i6) {
            try {
                i7 = (i7 % i7);
                i7 = (i6 / -39826);
                i2 = (252 % i2);
            } catch (ArithmeticException a_e) {}
            l += (i6 + i2);
            i8 = 1;
            do {
                Test0043.instanceCount = (long) f1;
                i7 += i2;
                Test0043.byFld = (byte) i8;
            } while (++i8 < 12);
            l2 += (i6 * i2);
            for (i9 = 1; i9 < 12; ++i9) {
                switch (((i9 % 1) * 5) + 127) {
                case 131:
                    try {
                        i10 = (i6 / i9);
                        i7 = (i7 / Test0043.iArrFld[i6 - 1]);
                        i7 = (Test0043.iArrFld[i9 + 1] % -2070802123);
                    } catch (ArithmeticException a_e) {}
                    break;
                }
                Test0043.iArrFld[i6 - 1] -= i2;
                i2 *= Test0043.byFld;
                i2 += i9;
            }
        }
        long meth_res = l + i2 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + Float.floatToIntBits(f1) + l2 + i9 + i10;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(float f) {

        int i=172;
        int i1=64;
        int i11=-8;
        int i12=-10;
        int[] iArr =new int[N];
        double d2=0.95637;
        double[] dArr =new double[N];
        float f2=0.490F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 2.635F);
        FuzzerUtils.init(dArr, -9.25608);
        FuzzerUtils.init(lArr, 1L);
        FuzzerUtils.init(iArr, 174);

        for (i = 390; i > 10; --i) {
            dMeth(33345L, i1);
            Test0043.iArrFld[i] |= 190;
            i1 = (int)d2;
            for (f2 = i; f2 < 4; ++f2) {
                i12 = 1;
                while (++i12 < 1) {
                    int i13=166;
                    switch (((i13 >>> 1) % 8) + 72) {
                    case 72:
                        fArr = fArr;
                        break;
                    case 73:
                        dArr = dArr;
                    case 74:
                        i11 *= i11;
                        i13 = (int)-12L;
                        switch ((int)((f2 % 10) + 4)) {
                        case 4:
                            if (i != 0) {
                            }
                            lArr[i - 1] *= -127;
                            lArr = lArr;
                            break;
                        case 5:
                            Test0043.byArrFld[i - 1] &= (byte) i11;
                            break;
                        case 6:
                            Test0043.iArrFld[i12 - 1] -= (int) Test0043.instanceCount;
                        case 7:
                            i13 -= (int) Test0043.fFld;
                            break;
                        case 8:
                            Test0043.instanceCount = Test0043.instanceCount;
                            break;
                        case 9:
                        case 10:
                            if (i11 != 0) {
                            }
                            break;
                        case 11:
                            i1 -= (int) Test0043.instanceCount;
                        case 12:
                            Test0043.iArrFld[i] -= (int) Test0043.instanceCount;
                            break;
                        case 13:
                            Test0043.instanceCount += (long) Test0043.fFld;
                            break;
                        }
                        break;
                    case 75:
                        Test0043.iArrFld[i + 1] = i1;
                        break;
                    case 76:
                        Test0043.iArrFld[(int) (f2)] = -165;
                        break;
                    case 77:
                        i13 *= (int) Test0043.instanceCount;
                    case 78:
                        iArr = FuzzerUtils.int1array(N, (int)-32008);
                    case 79:
                        i13 -= i12;
                        break;
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i + i1 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + i11
            + i12 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=4, i15=59, i16=-41, i17=-8, i18=-29877, i19=3, i20=-7108;
        short s=20874;
        long l3=1371470279403817228L;
        double d3=-1.6497;
        boolean b1=false;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        Test0043.fFld -= iMeth(Test0043.fFld);
        for (i14 = 396; i14 > 19; i14--) {
            i15 <<= i14;
        }
        for (i16 = 7; i16 < 168; ++i16) {
            Test0043.fFld = Test0043.instanceCount;
            for (i18 = 4; i18 < 156; ++i18) {
                s = (short) Test0043.instanceCount;
                i15 = i18;
                i17 += i17;
                Test0043.instanceCount |= i17;
                try {
                    i17 = (i17 % 79);
                    i15 = (i15 % 961802770);
                    i19 = (-18271 % Test0043.iArrFld[i18 + 1]);
                } catch (ArithmeticException a_e) {}
            }
            if (b1) {
                i17 = i19;
            } else if (b1) {
                Test0043.iArrFld[i16 + 1] -= (int) 11L;
                l3 = 1;
                do {
                    i15 >>= i16;
                    i20 = 1;
                    while (++i20 < 1) {
                        Test0043.instanceCount = l3;
                        switch ((int)((l3 % 1) + 78)) {
                        case 78:
                            i19 -= (int) Test0043.fFld;
                        default:
                            i15 += (i20 - i15);
                            Test0043.instanceCount += i20;
                        }
                        switch (((i16 % 7) * 5) + 39) {
                        case 74:
                            Test0043.iArrFld[i20] >>>= i15;
                            Test0043.iArrFld[i16 + 1] = i18;
                            i17 += (((i20 * i16) + l3) - i18);
                            i17 <<= (int)l3;
                            break;
                        case 56:
                            Test0043.instanceCount -= (long) d3;
                            d3 = i17;
                            i15 -= (int) Test0043.instanceCount;
                            break;
                        case 66:
                            Test0043.instanceCount -= (long) Test0043.fFld;
                        case 72:
                            i19 <<= (int)4389099485495515726L;
                            break;
                        case 62:
                            Test0043.dArrFld[i20 + 1] += Test0043.instanceCount;
                            break;
                        case 52:
                            i17 *= (int) Test0043.fFld;
                        case 49:
                        default:
                            bArr[i16 + 1] = b1;
                        }
                    }
                } while (++l3 < 156);
            } else {
                i17 += (int) Test0043.instanceCount;
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("s l3 i20 = " + s + "," + l3 + "," + i20);
        FuzzerUtils.out.println("d3 b1 bArr = " + Double.doubleToLongBits(d3) + "," + (b1 ? 1 : 0) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0043.instanceCount Test0043.fFld Test0043.byFld = " + Test0043.instanceCount + "," +
                Float.floatToIntBits(Test0043.fFld) + "," + Test0043.byFld);
        FuzzerUtils.out.println("Test0043.iArrFld Test0043.byArrFld Test0043.dArrFld = " + FuzzerUtils.checkSum(Test0043.iArrFld) + ","
                + FuzzerUtils.checkSum(Test0043.byArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0043.dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0043 _instance = new Test0043();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
