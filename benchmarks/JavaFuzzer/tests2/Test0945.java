// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0945 {

    public static final int N = 400;

    public static long instanceCount=224L;
    public double dFld=76.2820;
    public short sFld=12914;
    public static byte byFld=-97;
    public static boolean bFld=true;
    public static float fFld=0.556F;
    public static long lFld=-6983424590134194385L;
    public int[] iArrFld =new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i6) {

        int i7=126;
        int i8=13;
        int i9=-3;
        int i10=1;
        int i11=113;
        int i12=7;
        int i13=7;
        int[] iArr =new int[N];
        float f1=-10.206F;
        double d=-2.119711;
        boolean b1=true;

        FuzzerUtils.init(iArr, -252);

        i7 = 1;
        while (++i7 < 239) {
            for (i8 = 1; i8 < 7; i8++) {
                for (i10 = 1; i10 < 2; ++i10) {
                    f1 += (((i10 * i7) + i6) - Test0945.instanceCount);
                    d += f1;
                    i9 = 71;
                    if (b1) continue;
                }
            }
            try {
                i6 = (-120 % i8);
                i6 = (i8 / i10);
                i9 = (-354822139 / iArr[i7]);
            } catch (ArithmeticException a_e) {}
            Test0945.byFld -= (byte) i6;
            Test0945.instanceCount = i6;
            Test0945.instanceCount += (i7 * i7);
            for (i12 = 1; i12 < 7; i12++) {
                iArr = iArr;
                Test0945.instanceCount >>= i11;
                Test0945.byFld &= (byte) Test0945.instanceCount;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + (b1 ? 1
            : 0) + i12 + i13 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f) {

        int i5=-10, i14=-4, i15=171, i16=-12, i17=3, i18=-4, i19=11;

        i5 >>= (int)lMeth(i5);
        i5 = i5;
        Test0945.instanceCount += -99;
        for (i14 = 3; i14 < 166; ++i14) {
            i15 -= i15;
            i5 = i15;
        }
        for (i16 = 7; i16 < 233; ++i16) {
            i18 = 1;
            do {
                Test0945.instanceCount += (i18 * i18);
                if (i18 != 0) {
                }
                f = (float)0.113038;
                f += i19;
                Test0945.bFld = Test0945.bFld;
                Test0945.instanceCount *= 19319;
                i5 %= (int)8496203494383154136L;
            } while (++i18 < 7);
        }
        long meth_res = Float.floatToIntBits(f) + i5 + i14 + i15 + i16 + i17 + i18 + i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i, boolean b, int i1) {

        int i2=0;
        int i3=-6;
        int i4=7;
        int i20=-6997;
        int i21=171;
        int i22=-8;
        int[] iArr1 =new int[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -123.415F);
        FuzzerUtils.init(iArr1, 24507);

        i1 -= (int) ((++Test0945.instanceCount) + (i + dFld));
        for (i2 = 2; i2 < 157; ++i2) {
            i4 = 1;
            while (++i4 < 10) {
                sFld += (short) ((iMeth(Test0945.fFld) - Test0945.lFld) + dFld);
                fArr[i2] = 22054;
                i1 -= i4;
            }
        }
        sFld = (short)i3;
        i20 = 1;
        do {
            i += i20;
            Test0945.fFld *= 52;
            if (Test0945.bFld) break;
        } while (++i20 < 248);
        iArr1[(i3 >>> 1) % N] += (int)-12L;
        for (i21 = 4; i21 < 161; ++i21) {
            i -= i20;
        }
        i3 = (int) Test0945.instanceCount;
        vMeth_check_sum += i + (b ? 1 : 0) + i1 + i2 + i3 + i4 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i23=13, i24=-43329, i25=1, i26=2, i27=34, i28=-179, i30=-97, i31=-57536, i32=-10, i33=-146, i34=160, i35=2;
        double[] dArr =new double[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(dArr, -2.72364);
        FuzzerUtils.init(lArr, -728388280L);

        vMeth(i23, Test0945.bFld, i23);
        i23 -= -163;
        for (i24 = 286; i24 > 9; --i24) {
            i23 = (int) Test0945.instanceCount;
        }
        dFld = i23;
        i26 = 1;
        while (++i26 < 199) {
            Test0945.fFld = (float) 0.10627;
        }
        for (i27 = 21; i27 < 396; i27++) {
            for (i30 = 2; i30 < 67; i30++) {
                dArr = dArr;
                i31 = (int) Test0945.lFld;
                i31 = (int) Test0945.instanceCount;
                i25 <<= -11;
                i25 += 62247;
                Test0945.lFld *= i26;
                Test0945.instanceCount = -12;
                iArrFld[i27 + 1] = i27;
            }
            for (i32 = i27; i32 < 67; ++i32) {
                i28 += i32;
                i31 = i32;
                i23 *= (int) Test0945.fFld;
                for (i34 = 1; 1 > i34; i34++) {
                    iArrFld[i34 + 1] >>= i23;
                    Test0945.fFld += Test0945.lFld;
                    i25 += -2;
                    lArr[i27] -= Test0945.lFld;
                    i25 <<= i33;
                    i31 = i34;
                    i31 += i34;
                    i25 += (((i34 * i28) + i28) - i34);
                }
            }
        }

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 i34 i35 = " + i33 + "," + i34 + "," + i35);
        FuzzerUtils.out.println("dArr lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0945.instanceCount dFld sFld = " + Test0945.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + sFld);
        FuzzerUtils.out.println("Test0945.byFld Test0945.bFld Test0945.fFld = " + Test0945.byFld + "," + (Test0945.bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0945.fFld));
        FuzzerUtils.out.println("Test0945.lFld iArrFld = " + Test0945.lFld + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0945 _instance = new Test0945();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
