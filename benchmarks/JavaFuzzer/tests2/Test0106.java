// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0106 {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static float fFld=0.797F;
    public static long lFld=-716847399967859748L;
    public int iFld=22950;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1) {

        int i8=11, i9=16815, i10=44362, i11=0, i12=-22940, i13=12, i14=-22373, i15=-25;
        double d=0.56959;
        byte by=-2;

        i8 -= i8;
        l1 *= i8;
        for (i9 = 8; i9 < 303; ++i9) {
            for (i11 = 1; i11 < 6; ++i11) {
                d = i13;
                Test0106.fFld *= Test0106.instanceCount;
                switch (((i9 % 1) * 5) + 80) {
                case 82:
                    i13 += (((i11 * i13) + i11) - Test0106.fFld);
                    Test0106.fFld -= l1;
                    Test0106.instanceCount += (((i11 * Test0106.instanceCount) + i12) - Test0106.instanceCount);
                    for (i14 = 1; i14 < 2; ++i14) {
                        i12 += (i14 * i14);
                        i12 += 60078;
                        by += (byte) Test0106.fFld;
                    }
                    break;
                default:
                    Test0106.instanceCount *= i13;
                }
            }
        }
        vMeth2_check_sum += l1 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d) + i13 + i14 + i15 + by;
    }

    public static void vMeth1(float f, int i5) {

        boolean b=false;
        int i6=-14;
        int i7=43545;
        int i16=-6;
        int i17=-27144;
        int i18=53406;
        int i19=-53336;
        int i20=-42392;
        int i21=-212;
        int i22=14;
        int[] iArr1 =new
                    int[N];
        short s=-444;

        FuzzerUtils.init(iArr1, -180);

        b = (i5 != (f - i5));
        for (i6 = 3; i6 < 350; i6++) {
            vMeth2(Test0106.instanceCount);
            for (i16 = 1; i16 < 5; ++i16) {
                i7 = 3;
                for (i18 = i6; i18 < 2; ++i18) {
                    s = (short)i5;
                    iArr1[i16] = (int) Test0106.instanceCount;
                    iArr1[i16 + 1] <<= i7;
                }
                for (i20 = 1; i20 < 2; i20 += 2) {
                    i22 = i18;
                    i21 = i5;
                }
                i19 += (((i16 * i16) + i7) - i7);
            }
            i22 >>= i22;
            i19 += (i6 | i19);
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i5 + (b ? 1 : 0) + i6 + i7 + i16 + i17 + i18 + i19 + s + i20 +
            i21 + i22 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i, int i1) {

        int i2=11;
        int i3=7652;
        int i4=-3;
        int i23=37;
        int i24=21;
        int[] iArr =new int[N];
        boolean b1=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 17514L);
        FuzzerUtils.init(iArr, 54437);

        for (long l : lArr) {
            for (i2 = 1; i2 < 4; i2++) {
                i = (--iArr[i2]);
                if (b1) {
                    i4 = 1;
                    while (++i4 < 2) {
                        i *= (~i2);
                        if (((++i3) + ((3 - (i3 - i3)) - i1)) != ((++i3) >> Math.abs((int)(153 * (5L - (i1 - i4))))))
                            break;
                        vMeth1(Test0106.fFld, i);
                        lArr[i4 + 1] = i;
                    }
                    i3 = i1;
                    for (i23 = 1; i23 < 2; ++i23) {
                        i3 <<= i1;
                        i >>>= (int) Test0106.instanceCount;
                        l -= 18673;
                        i3 = (int)7760151374432626474L;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i23 + i24 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i25=169;
        int i26=-12;
        int i27=-4327;
        int i28=88;
        int i29=-1849;
        int i30=-5;
        int i31=2;
        int i32=-19787;
        int[] iArr2 =new int[N];
        byte by1=27;
        byte[] byArr =new byte[N];
        double d1=1.3077;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr2, 120);
        FuzzerUtils.init(lArr1, -229766776417584875L);
        FuzzerUtils.init(byArr, (byte)15);

        vMeth(i25, i25);
        i26 = 1;
        while (++i26 < 371) {
            boolean b2=false;
            switch (((i26 % 4) * 5) + 17) {
            case 31:
                try {
                    iArr2[i26 - 1] = (i25 % i26);
                    i25 = (i26 / -121);
                    iArr2[i26 - 1] = (i25 / i26);
                } catch (ArithmeticException a_e) {}
                i25 += (((i26 * i26) + i25) - Test0106.lFld);
            case 20:
                b2 = b2;
                i25 += 30716;
                break;
            case 29:
                i25 += (int)53.302F;
                lArr1[i26 - 1] = by1;
                i25 += i25;
                iArr2[i26 - 1] <<= (int)-68L;
                break;
            case 25:
                for (i27 = i26; i27 < 68; ++i27) {
                    d1 += i27;
                    d1 /= ((long)(d1) | 1);
                    i28 += i27;
                    i28 = by1;
                    i28 = i25;
                    i28 |= i26;
                    switch (((i27 % 6) * 5) + 54) {
                    case 62:
                        for (i29 = i27; i29 < 1; ++i29) {
                            i25 += i29;
                            if (b2) break;
                        }
                        i25 -= i27;
                        break;
                    case 82:
                        byArr[i26] = (byte) Test0106.instanceCount;
                        break;
                    case 84:
                        Test0106.lFld >>>= i28;
                        break;
                    case 79:
                        for (i31 = 1; i31 < 1; i31++) {
                            byArr[i31 + 1] |= (byte) Test0106.lFld;
                            i32 -= i25;
                            i32 += (i31 + Test0106.instanceCount);
                            if (b2) continue;
                        }
                        break;
                    case 75:
                        iFld <<= i30;
                        break;
                    case 74:
                        Test0106.fFld -= Test0106.instanceCount;
                        break;
                    }
                }
                break;
            }
        }

        FuzzerUtils.out.println("i25 i26 by1 = " + i25 + "," + i26 + "," + by1);
        FuzzerUtils.out.println("i27 i28 d1 = " + i27 + "," + i28 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 iArr2 lArr1 = " + i32 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0106.instanceCount Test0106.fFld Test0106.lFld = " + Test0106.instanceCount + "," +
                Float.floatToIntBits(Test0106.fFld) + "," + Test0106.lFld);
        FuzzerUtils.out.println("iFld = " + iFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0106 _instance = new Test0106();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
