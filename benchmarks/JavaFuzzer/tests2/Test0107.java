// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0107 {

    public static final int N = 400;

    public static long instanceCount=21L;
    public static boolean bFld=true;
    public static float fFld=-83.375F;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0107.iArrFld, 13227);
        FuzzerUtils.init(Test0107.lArrFld, 159L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float f=59.642F;
        int i4=-34184;
        int i5=189;
        int i6=35505;
        int i7=57044;
        int i8=146;
        int[] iArr =new int[N];
        long l=43986L;
        long[] lArr =new long[N];
        short s=-16774;

        FuzzerUtils.init(lArr, -252725792L);
        FuzzerUtils.init(iArr, 36);

        for (f = 200; f > 4; f--) {
            for (i5 = 8; 1 < i5; i5 -= 3) {
                i6 += 98;
                lArr[(int) (f)] <<= Test0107.instanceCount;
                if (Test0107.bFld) {
                    Test0107.instanceCount -= 79;
                }
            }
            i7 = 1;
            while (++i7 < 8) {
                i6 += (i7 + i7);
                i6 += i7;
                i6 >>= i5;
                Test0107.instanceCount += (((i7 * i4) + i7) - i4);
                iArr[(int)(f + 1)] *= -49343;
                for (l = 1; l > 1; l -= 3) {
                    s <<= (short)i6;
                    Test0107.instanceCount += (((l * i8) + i8) - i4);
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + l + i8 + s + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {


        vMeth2();
        vMeth1_check_sum += 0;
    }

    public static void vMeth(int i, int i1) {

        double d=-53.3809;
        int i2=90, i3=-2626, i9=-87, i10=-54219, i11=-9709;
        long l1=4203861750L;
        short s1=-595;

        Test0107.instanceCount *= (-(-Math.min(i1, i1)));
        d = ((i1 * (i + i)) + (++Test0107.instanceCount));
        for (i2 = 18; i2 < 352; i2++) {
            vMeth1();
            i += i1;
            Test0107.instanceCount ^= 69L;
            i9 = 1;
            while (++i9 < 5) {
                byte by=-82;
                d = by;
                Test0107.iArrFld[i2 + 1] -= i3;
                i <<= (int) Test0107.instanceCount;
                Test0107.iArrFld[i9 - 1] *= -3;
                switch ((i9 % 4) + 18) {
                case 18:
                    for (l1 = 1; 1 < l1; --l1) {
                        i -= i2;
                        i1 += (int) (((l1 * s1) + Test0107.instanceCount) - i11);
                    }
                    break;
                case 19:
                    i11 += i9;
                    break;
                case 20:
                    i1 += i2;
                    break;
                case 21:
                    i1 -= (int)-85.255F;
                }
            }
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + i2 + i3 + i9 + l1 + i10 + s1 + i11;
    }

    public void mainTest(String[] strArr1) {

        int i12=-7, i13=37050, i14=-188, i15=-242, i16=-172, i17=0, i18=-26277, i19=-9, i20=-20, i21=-14, i22=-28480;
        byte by1=-75;
        float f1=-6.858F;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -86.118430);

        vMeth(i12, i12);
        i12 >>= 58258;
        for (i13 = 14; i13 < 315; ++i13) {
            i12 += (i13 * i13);
        }
        Test0107.lArrFld[(60 >>> 1) % N] -= i12;
        i12 *= i13;
        for (i15 = 13; i15 < 230; ++i15) {
            for (i17 = 3; i17 < 116; ++i17) {
                dArr[i15] += i13;
                Test0107.iArrFld[i15 + 1] = 11465;
                for (i19 = 1; i19 < 2; i19++) {
                    by1 = (byte)-4074699187L;
                    Test0107.instanceCount *= (long) Test0107.fFld;
                    i12 -= 108;
                    Test0107.instanceCount += (((i19 * Test0107.instanceCount) + Test0107.fFld) - i12);
                }
                Test0107.bFld = Test0107.bFld;
                f1 = 1;
                while (++f1 < 2) {
                    Test0107.fFld = i16;
                }
                i18 = -27993;
                i18 += (i17 * i17);
            }
            Test0107.instanceCount = i12;
            i21 = 1;
            do {
                Test0107.instanceCount -= i14;
                i22 = 1;
                while (++i22 < 1) {
                    i12 -= 7;
                    i14 <<= (int) Test0107.instanceCount;
                    Test0107.iArrFld[i21] += i21;
                    i20 = i13;
                    i14 |= (int) Test0107.instanceCount;
                }
                if (Test0107.bFld) break;
            } while (++i21 < 116);
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("by1 f1 i21 = " + by1 + "," + Float.floatToIntBits(f1) + "," + i21);
        FuzzerUtils.out.println("i22 dArr = " + i22 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0107.instanceCount Test0107.bFld Test0107.fFld = " + Test0107.instanceCount + "," + (Test0107.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0107.fFld));
        FuzzerUtils.out.println("Test0107.iArrFld Test0107.lArrFld = " + FuzzerUtils.checkSum(Test0107.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0107.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0107 _instance = new Test0107();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
