// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0489 {

    public static final int N = 400;

    public static long instanceCount=780972105385596990L;
    public static volatile boolean bFld=false;
    public static short sFld=32236;
    public static float fFld=-103.996F;
    public static volatile int iFld=-58716;
    public static byte byFld=72;
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0489.iArrFld, 51748);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(byte by1) {

        int i7=136, i8=-5870;

        for (i7 = 4; 325 > i7; i7++) {
            Test0489.instanceCount += (i7 * i8);
            Test0489.instanceCount = Test0489.instanceCount;
            Test0489.iArrFld[i7 - 1] -= (int) 271767610L;
            Test0489.iArrFld = FuzzerUtils.int1array(N, (int) -205);
            i8 += (i7 * i7);
            i8 |= i7;
            i8 -= i8;
            i8 += 31;
            i8 += 3;
        }
        i8 = i8;
        Test0489.instanceCount <<= 5;
        Test0489.bFld = Test0489.bFld;
        Test0489.iArrFld = FuzzerUtils.int1array(N, (int) 38175);
        Test0489.instanceCount >>>= i8;
        long meth_res = by1 + i7 + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth1() {

        int i4=13, i5=-9, i6=-12;
        double d=126.90648;
        byte by=-14;
        byte[] byArr =new byte[N];
        short s=-20081;

        FuzzerUtils.init(byArr, (byte)-117);

        for (i4 = 224; i4 > 6; i4--) {
            i5 = (int)(d = (byArr[i4]--));
            Test0489.iArrFld[i4] = ((Math.max(i4, -26) + (i5 - i4)) - i4);
            i5 = (i5 <<= ((i5 - i6) >>> (-108 << (i6 - i4))));
            by += (byte) (((i4 * Test0489.instanceCount) + i6) - i6);
            i6 = (i4 - byArr[i4]);
            i6 = (++i6);
            i5 = (Math.min(i4, iMeth(by)) - i4);
            if (i4 != 0) {
            }
        }
        try {
            i5 -= (int)24575L;
            i6 += (int) Test0489.instanceCount;
            i6 >>= Test0489.sFld;
            d = i4;
            s *= (short)i6;
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            i5 >>>= (int) Test0489.instanceCount;
        }
        long meth_res = i4 + i5 + Double.doubleToLongBits(d) + i6 + by + s + FuzzerUtils.checkSum(byArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i1) {

        int i2=3, i3=-25, i9=-21125, i10=-184, i11=-168;

        for (i2 = 344; i2 > 1; --i2) {
            i3 -= (int) ((long) (-(0.411F + lMeth1())) << Test0489.instanceCount);
            for (i9 = 1; i9 < 5; i9 += 2) {
                double d1=-9.109917;
                i10 += (((i9 * i10) + i10) - Test0489.instanceCount);
                i10 += (int) Test0489.fFld;
                i1 += (((i9 * i9) + i9) - i9);
                d1 += i2;
            }
            i1 = 25535;
            i10 = i11;
            Test0489.fFld -= 45562L;
            Test0489.instanceCount += -59669;
        }
        i3 = Test0489.iFld;
        long meth_res = i1 + i2 + i3 + i9 + i10 + i11;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-10, i12=-1, i13=-6, i14=76, i15=17383, i17=250, i18=-28885, i19=233, i20=-135;
        double d2=2.79174;
        double d3=1.29083;
        double[] dArr =new double[N];
        long[] lArr =new long[N];
        boolean[] bArr =new boolean[N];
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr, 22L);
        FuzzerUtils.init(dArr, 53.85381);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr, 2.51F);

        i *= (int) lMeth(Test0489.iFld);
        for (i12 = 5; i12 < 324; i12++) {
            lArr[i12 + 1] = Test0489.iFld;
            i13 *= (int) Test0489.instanceCount;
            dArr[i12 - 1] -= i12;
            for (i14 = 3; i14 < 79; i14++) {
                i13 -= (int) Test0489.fFld;
            }
        }
        Test0489.sFld >>>= Test0489.byFld;
        Test0489.instanceCount *= i13;
        d2 += Test0489.iFld;
        i -= i14;
        for (int i16 : Test0489.iArrFld) {
            for (i17 = 2; i17 < 63; i17++) {
                Test0489.iArrFld[i17 + 1] *= (int) Test0489.fFld;
                Test0489.iFld = i18;
                Test0489.fFld += i17;
                switch (((i17 % 2) * 5) + 12) {
                case 18:
                    Test0489.byFld += (byte) (((i17 * i14) + i16) - i14);
                    for (i19 = i17; i19 < 2; ++i19) {
                        Test0489.instanceCount += (long) -1.18496;
                        i13 += (i19 | i19);
                        i += (i19 * i14);
                        bArr[i19 - 1] = Test0489.bFld;
                        Test0489.fFld += (i19 * i14);
                    }
                    d3 = 1;
                    while (++d3 < 2) {
                        Test0489.fFld = 17L;
                        i18 <<= (int) Test0489.instanceCount;
                        i18 = (int) Test0489.instanceCount;
                        fArr[i17] = i17;
                        Test0489.sFld += (short) (((d3 * i17) + i18) - Test0489.instanceCount);
                    }
                case 22:
                    i20 = i18;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i12 i13 = " + i + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 d2 = " + i14 + "," + i15 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 d3 lArr = " + i20 + "," + Double.doubleToLongBits(d3) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("dArr bArr fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(bArr) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0489.instanceCount Test0489.bFld Test0489.sFld = " + Test0489.instanceCount + "," + (Test0489.bFld ? 1
                : 0) + "," + Test0489.sFld);
        FuzzerUtils.out.println("Test0489.fFld Test0489.iFld Test0489.byFld = " + Float.floatToIntBits(Test0489.fFld) + "," + Test0489.iFld
                + "," + Test0489.byFld);
        FuzzerUtils.out.println("Test0489.iArrFld = " + FuzzerUtils.checkSum(Test0489.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0489 _instance = new Test0489();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
