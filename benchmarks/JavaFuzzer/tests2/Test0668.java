// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:43 2023
public class Test0668 {

    public static final int N = 400;

    public static long instanceCount=8299082800621338708L;
    public float fFld=0.3F;
    public static boolean bFld=false;
    public static float fFld1=-36.826F;
    public static double dFld=103.66077;
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0668.iArrFld, 6);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static int iMeth1(float f, float f1) {


        f1 -= (++f1);
        long meth_res = Float.floatToIntBits(f) + Float.floatToIntBits(f1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i9) {

        double d=-88.87817;
        double d1=92.6788;
        double[] dArr =new double[N];
        byte by1=101;
        int i10=29267, i11=-186, i12=-29857, i13=8;

        FuzzerUtils.init(dArr, 1.101476);

        d = 1;
        while ((d += 3) < 390) {
            if (i9 != 0) {
                vMeth_check_sum += i9 + Double.doubleToLongBits(d) + by1 + i10 + i11 + i12 + i13 +
                    Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
            dArr[(int) (d)] += Test0668.instanceCount;
        }
        by1 <<= (byte) Test0668.instanceCount;
        i10 = 1;
        while (++i10 < 223) {
            if (Test0668.bFld) break;
            Test0668.iArrFld[i10][i10] >>= (int) -147L;
            switch (((i10 >>> 1) % 10) + 63) {
            case 63:
                for (i11 = 1; i11 < 7; i11++) {
                    i13 = 1;
                    do {
                        i12 += i13;
                        by1 = (byte)i9;
                        i9 += (i13 | by1);
                        Test0668.iArrFld[i11 - 1][i10 + 1] = i11;
                        i9 >>= i12;
                    } while (++i13 < 2);
                }
            case 64:
                Test0668.iArrFld[i10][i10 - 1] <<= -218;
                break;
            case 65:
                i12 += i10;
            case 66:
                Test0668.instanceCount += (-155 + (i10 * i10));
            case 67:
            case 68:
                Test0668.iArrFld[i10][i10] = (int) -62.57920;
                break;
            case 69:
                d1 -= i10;
            case 70:
                i12 ^= i9;
                break;
            case 71:
                Test0668.instanceCount *= i11;
                break;
            case 72:
                if (Test0668.bFld) continue;
                break;
            default:
                Test0668.fFld1 += i10;
            }
        }
        vMeth_check_sum += i9 + Double.doubleToLongBits(d) + by1 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static float fMeth() {

        int i7=6, i8=-4;

        for (i7 = 2; i7 < 176; i7++) {
            Test0668.instanceCount += Test0668.iArrFld[i7][i7 - 1];
            vMeth(i7);
            Test0668.instanceCount += 4;
        }
        i8 += (int) Test0668.fFld1;
        long meth_res = i7 + i8;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i1, int i2) {

        int i3=8, i4=139, i5=-247, i6=-175, i14=24552, i15=-12;
        long l=-8508L;
        long[] lArr1 =new long[N];
        float f2=52.56F;
        float[][] fArr =new float[N][N];
        byte by=60;

        FuzzerUtils.init(fArr, 2.598F);
        FuzzerUtils.init(lArr1, -52003L);

        for (i3 = 9; 159 > i3; i3++) {
            l = 1;
            while (++l < 11) {
                for (i5 = 1; i5 < 1; i5++) {
                    Test0668.instanceCount += i5;
                    i2 -= iMeth1(fArr[i3 + 1][(int)(l)], f2);
                    by <<= (byte) (++Test0668.instanceCount);
                    lArr1[(int) (l)] = ((Math.min(10, i6) - (--Test0668.iArrFld[i3][(int) (l)])) - l);
                }
                lArr1[i3 - 1] *= (long)(((f2 - i6) * fMeth()) % (i2 | 1));
                i1 -= (int)f2;
            }
            Test0668.iArrFld[i3 + 1] = Test0668.iArrFld[i3];
        }
        Test0668.iArrFld[(i4 >>> 1) % N][(i6 >>> 1) % N] <<= i2;
        for (i14 = 244; i14 > 1; --i14) {
            by += (byte)(i14 ^ l);
            Test0668.bFld = Test0668.bFld;
            lArr1 = lArr1;
        }
        long meth_res = i1 + i2 + i3 + i4 + l + i5 + i6 + Float.floatToIntBits(f2) + by + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-48, i16=42190, i17=-7, i18=-22162, i19=12, i20=9, i21=38419, i22=-25594, i23=-27076;
        byte by2=-65;
        short s=12973;
        float f3=2.716F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -10L);

        Test0668.iArrFld[(i >>> 1) % N][(i >>> 1) % N] >>= Math.max(Integer.reverseBytes(i++), -i);
        Test0668.instanceCount %= (Test0668.iArrFld[(i >>> 1) % N][(i >>> 1) % N] | 1);
        Test0668.iArrFld[(38860 >>> 1) % N][(i >>> 1) % N] = (++i);
        i = (int) Test0668.instanceCount;
        Test0668.instanceCount += (long) (((--i) + (fFld - i)) - ((--lArr[(i >>> 1) % N]) * i));
        i += (int)(++fFld);
        i *= iMeth(i, 3331);
        Test0668.instanceCount *= i;
        for (i16 = 9; i16 < 273; i16 += 2) {
            for (i18 = 9; i18 < 190; ++i18) {
                i17 += (((i18 * Test0668.instanceCount) + i16) - Test0668.fFld1);
                i20 = 1;
                while (++i20 < 2) {
                    i19 += (int) Test0668.instanceCount;
                    Test0668.instanceCount += (i20 + i17);
                    i21 |= i;
                    i19 = i20;
                    Test0668.instanceCount = i21;
                    Test0668.iArrFld[i20][i20 + 1] += i21;
                }
            }
            Test0668.instanceCount *= i21;
            Test0668.iArrFld[i16 + 1][i16] = (int) Test0668.instanceCount;
            i21 /= (int) (Test0668.instanceCount | 1);
            i17 += i16;
            for (i22 = 190; i22 > 8; i22--) {
                switch (((i16 % 4) * 5) + 73) {
                case 80:
                    try {
                        i19 = (i17 % i18);
                        i = (i22 / i22);
                        Test0668.iArrFld[i16 + 1][i22 - 1] = (Test0668.iArrFld[i22 - 1][i16 - 1] % Test0668.iArrFld[i22][(i23 >>>
                            1) % N]);
                    } catch (ArithmeticException a_e) {}
                    i23 >>>= i;
                case 82:
                    i17 = i22;
                    lArr[i22 + 1] = by2;
                    i17 /= (int)(s | 1);
                    i21 -= 23431;
                case 78:
                    try {
                        i23 = (Test0668.iArrFld[i22 - 1][i16 - 1] % Test0668.iArrFld[i22 + 1][i16]);
                        i17 = (i % -2037045546);
                        i = (i16 / Test0668.iArrFld[i22][i16]);
                    } catch (ArithmeticException a_e) {}
                case 91:
                    Test0668.dFld += f3;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i16 i17 = " + i + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("by2 s f3 = " + by2 + "," + s + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0668.instanceCount fFld Test0668.bFld = " + Test0668.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + (Test0668.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0668.fFld1 Test0668.dFld Test0668.iArrFld = " + Float.floatToIntBits(Test0668.fFld1) + "," +
                Double.doubleToLongBits(Test0668.dFld) + "," + FuzzerUtils.checkSum(Test0668.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0668 _instance = new Test0668();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
