// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0270 {

    public static final int N = 400;

    public static long instanceCount=11L;
    public static float fFld=-77.490F;
    public byte byFld=-74;
    public static int iFld=196;
    public static double dFld=-105.22041;
    public static double[] dArrFld =new double[N];
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0270.dArrFld, -83.42543);
        FuzzerUtils.init(Test0270.lArrFld, -1976174056981895915L);
        FuzzerUtils.init(Test0270.iArrFld, 92);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        int i7=-133, i8=26400, i9=34589, i10=14, i11=-31889, i12=12;
        boolean b=true;

        for (i7 = 3; 174 > i7; i7++) {
            for (i9 = 1; i9 < 9; i9++) {
                i8 = (int)-11.638F;
                i10 >>= -49385;
                b = b;
                i8 += i8;
                i6 *= i5;
                if (b) break;
            }
            i10 += (i7 ^ Test0270.instanceCount);
            for (i11 = 9; i11 > i7; i11--) {
                double d1=52.64991;
                Test0270.fFld = i9;
                b = b;
                i5 -= i12;
                b = false;
                i5 *= (int)d1;
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + i11 + i12;
    }

    public static int iMeth(int i4) {

        int i13=39856, i14=3, i15=9, i16=-7;
        double d2=43.24365;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -63.276F);

        vMeth1(i4, i4);
        for (i13 = 16; 305 > i13; i13++) {
            switch ((((i4 >>> 1) % 2) * 5) + 8) {
            case 13:
                i14 = i4;
                switch (((i13 % 6) * 5) + 60) {
                case 64:
                    i15 = 1;
                    while (++i15 < 6) {
                        i16 = 1;
                        while ((i16 += 3) < 1) {
                            fArr[i13 + 1] += Test0270.instanceCount;
                            d2 *= Test0270.instanceCount;
                            i14 = (int)-174L;
                            Test0270.fFld += i16;
                            i4 += (i16 * i16);
                            Test0270.fFld += (i16 - i14);
                        }
                    }
                    d2 *= i16;
                    i4 *= (int) Test0270.instanceCount;
                    break;
                case 72:
                    i14 *= (int) Test0270.fFld;
                    break;
                case 90:
                    if (i4 != 0) {
                    }
                    break;
                case 77:
                    i4 += i13;
                case 74:
                    Test0270.instanceCount += i16;
                case 63:
                    Test0270.instanceCount += i16;
                    break;
                }
                break;
            case 18:
                i4 = (int) Test0270.instanceCount;
                break;
            default:
                i14 += (int) Test0270.instanceCount;
            }
        }
        long meth_res = i4 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, byte by) {

        int i3=-54705, i17=35849, i18=3, i19=-4, i20=-6588, i21=-51192, i22=207, i23=3553;
        double d=-90.22624;

        i3 = 1;
        do {
            d = d;
            i2 += iMeth(i2);
            i2 += (int) Test0270.instanceCount;
            for (i17 = 1; i17 < 6; ++i17) {
                Test0270.dArrFld[i17] = i18;
                Test0270.lArrFld[i3 - 1] += by;
            }
            Test0270.iArrFld[(i2 >>> 1) % N] <<= i18;
            for (i19 = 6; i19 > i3; --i19) {
                i2 += i2;
                i21 >>= i2;
            }
            for (i22 = 1; i22 < 6; ++i22) {
                Test0270.iArrFld = FuzzerUtils.int1array(N, (int) 121);
                i18 = (int) Test0270.instanceCount;
                i23 -= (int)6L;
            }
        } while (++i3 < 252);
        vMeth_check_sum += i2 + by + i3 + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20 + i21 + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i=-17365;
        int i1=-3;
        int i24=-3;
        int i25=-8;
        int i26=-52305;
        int i27=-7;
        int[][] iArr =new int[N][N];
        short s=11432;
        double d3=0.110679;
        long l=-35096L;
        boolean b1=true;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(iArr, 4);
        FuzzerUtils.init(fArr1, 52.901F);

        for (i = 14; i < 388; i++) {
            float f=-27.986F;
            i1 *= (int) ((i1 + (i1 + i1)) * ((Test0270.instanceCount * s) * (-(f - 52120))));
            vMeth(i1, byFld);
            for (i24 = 2; i24 < 67; ++i24) {
                i26 = 1;
                while (++i26 < 2) {
                    s = s;
                    iArr = iArr;
                    i1 &= byFld;
                    i25 >>>= (int) Test0270.instanceCount;
                }
                switch ((i24 % 6) + 101) {
                case 101:
                    for (d3 = 1; d3 < 2; d3++) {
                        i27 += (int)(((d3 * i27) + i1) - i);
                    }
                    l = 1;
                    do {
                        Test0270.instanceCount = Test0270.instanceCount;
                        try {
                            i1 = (Test0270.iFld / Test0270.iFld);
                            Test0270.iFld = (615541733 % i24);
                            i1 = (17 % iArr[i][i24 + 1]);
                        } catch (ArithmeticException a_e) {}
                        Test0270.dFld *= i27;
                        i1 = Test0270.iFld;
                        Test0270.instanceCount -= Test0270.iFld;
                        Test0270.lArrFld[(int) (l + 1)] *= (long) f;
                        i27 = (int)l;
                        fArr1[i24 + 1] = -9;
                        i27 -= s;
                    } while (++l < 2);
                    break;
                case 102:
                    i1 += (int)(0.612F + (i24 * i24));
                    Test0270.instanceCount >>= -2;
                    i1 += i25;
                    switch ((i % 7) + 122) {
                    case 122:
                        i1 *= i;
                        break;
                    case 123:
                        b1 = b1;
                        Test0270.instanceCount -= (long) Test0270.dFld;
                        Test0270.iArrFld[i - 1] = Test0270.iFld;
                    case 124:
                        i1 = Test0270.iFld;
                        break;
                    case 125:
                        Test0270.iArrFld[i] *= 236;
                        break;
                    case 126:
                        i25 = i25;
                    case 127:
                        Test0270.fFld += (((i24 * i) + i26) - i26);
                        break;
                    case 128:
                        i25 += (((i24 * i25) + i) - Test0270.iFld);
                    default:
                        Test0270.instanceCount >>= byFld;
                    }
                    break;
                case 103:
                    i27 = (int) Test0270.dFld;
                    break;
                case 104:
                    if (b1) break;
                    break;
                case 105:
                    i1 -= i27;
                    break;
                case 106:
                    byArrFld[i24 + 1] = (byte)-5767028543659877790L;
                default:
                    Test0270.instanceCount += (((i24 * l) + i25) - Test0270.instanceCount);
                }
            }
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d3 i27 l = " + Double.doubleToLongBits(d3) + "," + i27 + "," + l);
        FuzzerUtils.out.println("b1 iArr fArr1 = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0270.instanceCount Test0270.fFld byFld = " + Test0270.instanceCount + "," +
                Float.floatToIntBits(Test0270.fFld) + "," + byFld);
        FuzzerUtils.out.println("Test0270.iFld Test0270.dFld Test0270.dArrFld = " + Test0270.iFld + "," +
                Double.doubleToLongBits(Test0270.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0270.dArrFld)));
        FuzzerUtils.out.println("Test0270.lArrFld Test0270.iArrFld byArrFld = " + FuzzerUtils.checkSum(Test0270.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0270.iArrFld) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0270 _instance = new Test0270();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
