// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0624 {

    public static final int N = 400;

    public static long instanceCount=8633795699183910685L;
    public static byte byFld=-121;
    public static boolean bFld=true;
    public static short sFld=8426;
    public float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];
    public volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0624.lArrFld, -47952L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=-217, i3=-61, i4=13, i5=8, i6=-200;
        float f1=-12.382F;
        float f2=115.83F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 0.170F);
        FuzzerUtils.init(lArr, 0L);

        i2 <<= i2;
        i3 = 1;
        while (++i3 < 315) {
            f1 *= Test0624.instanceCount;
            i2 += (i3 ^ i3);
            i2 += i2;
            fArr[i3 + 1] = i2;
            i2 *= i2;
            i2 += i3;
            for (f2 = 1; 5 > f2; f2++) {
                for (i5 = 2; i5 > i3; --i5) {
                    i6 += i3;
                    lArr[i5 + 1] |= -188;
                    if (false) {
                        i4 *= (int)-1.739F;
                        i2 = i3;
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i4 + i5 + i6 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i7=-14;
        int i8=12;
        int i9=-5;
        int i10=-12;
        int[][] iArr =new int[N][N];
        float f3=-28.751F;
        short s=-20064;
        double d=-2.8258;

        FuzzerUtils.init(iArr, 187);

        vMeth1();
        for (i7 = 7; 200 > i7; i7++) {
            if (Test0624.bFld) {
                i8 = 81;
                for (i9 = 1; i9 < 8; i9++) {
                    iArr[i7] = iArr[i9 + 1];
                    i10 += (-10901 + (i9 * i9));
                    switch (((i7 % 2) * 5) + 41) {
                    case 44:
                        iArr[i7 - 1] = iArr[i9 - 1];
                        f3 = 2;
                        while (--f3 > 0) {
                            i8 += s;
                            switch (((i9 >>> 1) % 6) + 52) {
                            case 52:
                                i10 = (int) Test0624.instanceCount;
                                break;
                            case 53:
                                Test0624.instanceCount += (long) (f3 - i8);
                                i8 *= i8;
                                break;
                            case 54:
                                i10 -= (int)-127.45040;
                                break;
                            case 55:
                                i10 &= Test0624.byFld;
                                break;
                            case 56:
                                i8 = i9;
                                break;
                            case 57:
                                Test0624.instanceCount += (11 + (f3 * f3));
                                break;
                            default:
                                i10 += Test0624.byFld;
                            }
                        }
                        break;
                    case 51:
                        i8 = i9;
                        break;
                    default:
                        iArr[i9][i9] += (int)d;
                    }
                }
            } else if (Test0624.bFld) {
                i10 -= i8;
            } else if (Test0624.bFld) {
                i8 += (((i7 * i10) + i8) - Test0624.instanceCount);
            } else {
                i8 += (int)f3;
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + Float.floatToIntBits(f3) + s + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i1=2;
        int i11=14;
        int i12=-7;
        int i13=-11985;
        int i14=62903;
        int[] iArr1 =new int[N];
        float f4=-46.707F;

        FuzzerUtils.init(iArr1, -12);

        i1 += (i1 *= iMeth());
        for (i11 = 15; i11 < 354; i11++) {
            i12 >>= (int) Test0624.instanceCount;
            i12 += i11;
            for (i13 = 1; i13 < 5; i13++) {
                i14 += (int)102378325L;
                i12 += i12;
                if (i14 != 0) {
                    vMeth_check_sum += i1 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f4) +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
                Test0624.instanceCount += (((i13 * Test0624.instanceCount) + Test0624.sFld) - Test0624.instanceCount);
                f4 *= 9;
                iArr1 = iArr1;
            }
            i1 &= (int) Test0624.instanceCount;
            fArrFld = fArrFld;
            try {
                i1 = (63887 / i11);
                i12 = (iArr1[i11] % i14);
                i12 = (iArr1[(i1 >>> 1) % N] / -1610385408);
            } catch (ArithmeticException a_e) {}
            i14 += (i11 * i11);
        }
        vMeth_check_sum += i1 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f4) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=211, i15=-14, i16=-3, i17=159, i18=38, i19=-195, i20=188;
        byte by=-17;
        float f=-1.877F, f5=-2.382F;
        double d1=0.114866;

        if (Test0624.bFld) {
            i = 1;
            do {
                Test0624.instanceCount -= (i * by);
                Test0624.instanceCount += (((i * Test0624.instanceCount) + f) - i);
                vMeth();
                d1 += i;
                for (f5 = 63; 1 < f5; f5 -= 3) {
                    by *= (byte)87.393F;
                }
                Test0624.instanceCount -= i15;
                d1 -= i;
                i16 = 1;
                while (++i16 < 63) {
                    i15 <<= i16;
                    for (i17 = 1; 1 > i17; i17++) {
                        i15 -= i16;
                        if (Test0624.bFld) continue;
                        d1 = d1;
                        Test0624.instanceCount += (-178 + (i17 * i17));
                        i18 = i15;
                        i18 *= (int) Test0624.instanceCount;
                        if (Test0624.bFld) {
                            Test0624.sFld <<= by;
                        }
                        i18 += (((i17 * i18) + Test0624.instanceCount) - f);
                    }
                    i15 -= -87;
                    i18 += i16;
                    for (i19 = 1; i19 > 1; i19--) {
                        fArrFld[i] -= i20;
                        i20 -= i15;
                        Test0624.lArrFld[i19 - 1] = (long) f5;
                    }
                    iArrFld[i] = i17;
                }
            } while (++i < 397);
        } else {
            Test0624.byFld -= (byte) f;
        }

        FuzzerUtils.out.println("i by f = " + i + "," + by + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d1 f5 i15 = " + Double.doubleToLongBits(d1) + "," + Float.floatToIntBits(f5) + "," +
            i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 = " + i19 + "," + i20);

        FuzzerUtils.out.println("Test0624.instanceCount Test0624.byFld Test0624.bFld = " + Test0624.instanceCount + "," + Test0624.byFld +
                "," + (Test0624.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0624.sFld fArrFld Test0624.lArrFld = " + Test0624.sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(Test0624.lArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0624 _instance = new Test0624();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
