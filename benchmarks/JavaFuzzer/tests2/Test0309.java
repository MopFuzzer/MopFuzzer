// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0309 {

    public static final int N = 400;

    public static long instanceCount=510067120L;
    public static short sFld=-8654;
    public static volatile int iFld=57034;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0309.lArrFld, -13319L);
        FuzzerUtils.init(Test0309.iArrFld, -40495);
        FuzzerUtils.init(Test0309.dArrFld, 1.84821);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i12) {

        long l2=22011L;
        int i13=-6, i14=-7, i15=12, i16=0, i17=-62007, i18=202;
        float f2=-120.309F;
        byte by=110;
        boolean b1=true;

        for (l2 = 271; l2 > 7; l2--) {
            for (i14 = 1; 6 > i14; i14++) {
                Test0309.instanceCount += (i14 * i14);
                for (f2 = 2; f2 > 1; f2--) {
                    i16 *= (int) Test0309.instanceCount;
                    i13 >>= (int) Test0309.instanceCount;
                    Test0309.sFld += by;
                }
            }
            i12 = (int) Test0309.instanceCount;
            for (i17 = 6; i17 > 1; --i17) {
                Test0309.iArrFld[(int) (l2 - 1)] = i17;
                i13 = (int)f2;
                try {
                    i16 = (Test0309.iArrFld[i17] % i12);
                    i16 = (-13770 / i13);
                    i16 = (i13 / Test0309.iArrFld[i17 + 1]);
                } catch (ArithmeticException a_e) {}
                if (b1) {
                    i13 += (5 + (i17 * i17));
                }
                try {
                    i15 = (Test0309.iArrFld[i17 - 1] / i18);
                    i13 = (17877 / i17);
                    i18 = (i12 % 3);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth1_check_sum += i12 + l2 + i13 + i14 + i15 + Float.floatToIntBits(f2) + i16 + by + i17 + i18 + (b1 ? 1 : 0);
    }

    public static void vMeth(int i5, int i6) {

        int i7=-11, i8=-5, i9=-52907, i10=-14, i11=-14510, i19=-36525, i20=2;
        boolean b=false;
        float f1=-26.946F;
        double d1=1.107873;

        for (i7 = 6; i7 < 231; i7 += 3) {
            b = (!b);
            i6 += (int) ((--Test0309.lArrFld[i7 - 1]) - Math.min(++Test0309.iArrFld[i7], (int) (i5 + Test0309.instanceCount)));
            for (i9 = 1; i9 < 21; i9++) {
                f1 = (i6++);
                Test0309.iArrFld[i7 + 1] += Integer.reverseBytes((int) (f1 * (Test0309.iArrFld[i7 + 1]--)));
                i11 = 2;
                do {
                    Test0309.iArrFld = (Test0309.iArrFld = Test0309.iArrFld);
                    vMeth1(i5);
                } while ((i11 -= 2) > 0);
                if (b) {
                    Test0309.iArrFld = Test0309.iArrFld;
                } else {
                    for (i19 = 1; i19 < 2; ++i19) {
                        i10 += (i19 | i9);
                        Test0309.instanceCount = i9;
                        i5 *= (int)d1;
                    }
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + Float.floatToIntBits(f1) + i11 + i19 + i20 +
            Double.doubleToLongBits(d1);
    }

    public static int iMeth(long l1) {

        int i3=13, i4=0;
        boolean b2=true;
        double d2=-103.20064;

        for (i3 = 21; i3 < 385; ++i3) {
            vMeth(i4, i3);
            i4 ^= 9;
            switch ((i3 % 7) + 94) {
            case 94:
                switch ((i3 % 10) + 106) {
                case 106:
                    if (b2) break;
                    break;
                case 107:
                    i4 = -70;
                    i4 = 17726;
                    i4 += (((i3 * i4) + i4) - i3);
                    break;
                case 108:
                    i4 &= i4;
                    i4 = i4;
                    break;
                case 109:
                    i4 *= i4;
                    l1 %= (Test0309.instanceCount | 1);
                    break;
                case 110:
                    i4 += i3;
                    i4 &= i3;
                case 111:
                case 112:
                    d2 -= i4;
                case 113:
                    Test0309.sFld >>= (short) i3;
                    break;
                case 114:
                    l1 += i3;
                    break;
                case 115:
                default:
                    i4 *= 125;
                }
                break;
            case 95:
                Test0309.dArrFld[i3 - 1] -= i4;
            case 96:
                if (i3 != 0) {
                }
            case 97:
                i4 += (i3 * i4);
                break;
            case 98:
                Test0309.instanceCount <<= i3;
                break;
            case 99:
                i4 += (i3 | i3);
                break;
            case 100:
                Test0309.instanceCount = (long) d2;
                break;
            }
        }
        long meth_res = l1 + i3 + i4 + (b2 ? 1 : 0) + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=156;
        int i1=-85;
        int i2=-30835;
        int i21=1;
        int[] iArr =new int[N];
        double d=0.98174;
        float f=31.86F;
        long l=-76L;
        byte by1=-64;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, -45951);
        FuzzerUtils.init(byArr, (byte)46);

        i = 1;
        while (++i < 212) {
            for (d = i; d < 118; d++) {
                Test0309.instanceCount += (-3 + (d * d));
                i1 = (int) (--Test0309.instanceCount);
                Test0309.sFld += (short) d;
                f += (5 + (d * d));
                Test0309.lArrFld[(int) (d)] = Test0309.sFld;
                i2 = 1;
                do {
                    iArr[(int) (d - 1)] = (int) (Float.intBitsToFloat((int) (i << Test0309.instanceCount)) +
                            (--Test0309.instanceCount));
                    i1 += (-115 + (i2 * i2));
                    try {
                        i1 = (-43522 % i);
                        i1 = (i2 / 610701018);
                        i1 = (iArr[(int)(d - 1)] % i1);
                    } catch (ArithmeticException a_e) {}
                } while (++i2 < 1);
                i1 += (int)d;
                i1 += (int)d;
                switch ((i % 4) + 43) {
                case 43:
                    l -= (-iMeth(Test0309.instanceCount));
                    switch ((((i1 >>> 1) % 5) * 5) + 59) {
                    case 82:
                        l = i1;
                        f += l;
                    case 69:
                        byArr[(int)(d + 1)] = (byte)i;
                        i21 = 1;
                        while (++i21 < 1) {
                            i1 -= i2;
                            f += i;
                        }
                        i1 >>= 0;
                        break;
                    case 64:
                        Test0309.instanceCount = Test0309.instanceCount;
                        Test0309.dArrFld[(int) (d - 1)] = i1;
                        by1 ^= (byte)i;
                    case 76:
                        i1 = i2;
                        i1 -= (int)d;
                        f += (float)d;
                        Test0309.instanceCount += i1;
                        break;
                    case 80:
                        Test0309.instanceCount *= Test0309.instanceCount;
                        break;
                    }
                    break;
                case 44:
                    f = 121L;
                    break;
                case 45:
                    i1 = i2;
                    break;
                case 46:
                    Test0309.lArrFld = Test0309.lArrFld;
                default:
                    i1 = Test0309.iFld;
                }
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("f i2 l = " + Float.floatToIntBits(f) + "," + i2 + "," + l);
        FuzzerUtils.out.println("i21 by1 iArr = " + i21 + "," + by1 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0309.instanceCount Test0309.sFld Test0309.iFld = " + Test0309.instanceCount + "," + Test0309.sFld +
                "," + Test0309.iFld);
        FuzzerUtils.out.println("Test0309.lArrFld Test0309.iArrFld Test0309.dArrFld = " + FuzzerUtils.checkSum(Test0309.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0309.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0309.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0309 _instance = new Test0309();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
