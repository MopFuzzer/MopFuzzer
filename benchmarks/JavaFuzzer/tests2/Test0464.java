// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0464 {

    public static final int N = 400;

    public static long instanceCount=-2663330605393066751L;
    public int iFld=-6;
    public static short sFld=832;
    public int[] iArrFld =new int[N];
    public volatile float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0464.lArrFld, 4L);
    }

    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5, int i6, int i7) {

        int i8=14;
        int i9=-2;
        int i10=-1019;
        int i11=91;
        int i12=214;
        int[] iArr =new int[N];
        float f=-2.918F;
        boolean b=false;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)42);
        FuzzerUtils.init(iArr, 0);

        for (byte by : byArr) {
            iArr[(i6 >>> 1) % N] = (int) Test0464.instanceCount;
            Test0464.instanceCount += by;
            Test0464.instanceCount -= -123;
            iArr[(i5 >>> 1) % N] += i7;
            for (i8 = 1; i8 < 4; i8++) {
                Test0464.instanceCount += (i8 ^ (long) f);
                switch (((i8 % 5) * 5) + 96) {
                case 97:
                    i7 += (i8 ^ Test0464.sFld);
                    i6 += (i8 ^ i8);
                    break;
                case 108:
                    for (i10 = 1; i10 < 2; ++i10) {
                        i11 = (int)-2842121703L;
                        iArr[i8 + 1] >>= i7;
                        iArr[i10 - 1] -= i9;
                        Test0464.instanceCount += (((i10 * i11) + i7) - Test0464.instanceCount);
                    }
                case 98:
                    i12 >>= (int)-5461012158884185655L;
                    break;
                case 119:
                    b = b;
                    break;
                case 112:
                    i11 += (int) Test0464.instanceCount;
                    break;
                default:
                    i11 -= 18403;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 + i12 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth() {

        int i3=17749;
        int i4=-7;
        int i13=-4;
        int i14=23;
        int i15=-2;
        int[] iArr1 =new int[N];
        double d=-75.39328;
        byte by2=-19;

        FuzzerUtils.init(iArr1, 10);

        for (i3 = 12; i3 < 389; i3++) {
            i4 *= iMeth1(i4, i3, i3);
            Test0464.instanceCount += i4;
            i4 = -19661;
            d *= i3;
        }
        iArr1[(i3 >>> 1) % N] += by2;
        i4 <<= i3;
        for (i13 = 12; i13 < 324; ++i13) {
            i15 = 1;
            while (++i15 < 5) {
                Test0464.instanceCount = i15;
                i4 += i3;
                i14 = i4;
                d -= Test0464.instanceCount;
                iArr1[i13 + 1] *= i14;
                i14 = i4;
            }
        }
        long meth_res = i3 + i4 + Double.doubleToLongBits(d) + by2 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth(int i) {

        int i1=22415, i2=13;

        for (i1 = 4; 206 > i1; ++i1) {
            i += Math.max(i2, ++i2);
            Test0464.instanceCount = -63;
            i = (int) (i1 + ((i1 - i1) - (Test0464.instanceCount % (i | 1))));
            i += (int)(333644256L + (i1 * i1));
            if (bMeth()) continue;
            i2 -= i2;
            i2 = i;
        }
        i -= i2;
        long meth_res = i + i1 + i2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=48.1001F;
        long l=-175L;
        int i16=12, i17=41359, i18=49, i19=0;
        boolean b1=true;
        double d1=-1.2870;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(dArr, 90.61933);

        iArrFld[(iFld >>> 1) % N] %= (int) ((Test0464.instanceCount--) | 1);
        fArrFld[(iFld >>> 1) % N] += (Integer.reverseBytes(iMeth(iFld)) - f1);
        try {
            dArr[(iFld >>> 1) % N][(iFld >>> 1) % N] += iFld;
            Test0464.instanceCount = iFld;
            iFld = (int)f1;
            l = 1;
            while (++l < 151) {
                Test0464.instanceCount *= iFld;
                for (i16 = 6; i16 < 166; ++i16) {
                    i17 += iFld;
                    Test0464.instanceCount = i16;
                    Test0464.instanceCount += (((i16 * i17) + i16) - iFld);
                }
                b1 = b1;
                d1 = 1;
                do {
                    dArr[(int) (l + 1)][(int) (d1 + 1)] = Test0464.instanceCount;
                    Test0464.lArrFld = Test0464.lArrFld;
                    i17 += (int)d1;
                    i17 += (int)(d1 + i17);
                    for (i18 = 1; i18 < 1; i18++) {
                        b1 = b1;
                        if (false) break;
                        iFld >>>= iFld;
                        iFld = (int)f1;
                        iArrFld[(int)(d1 - 1)] = i18;
                        i17 += -43638;
                        i19 <<= i18;
                        f1 *= i18;
                    }
                    Test0464.instanceCount = i16;
                    i17 >>= -36877;
                    iArrFld[(int)(d1 - 1)] = (int)l;
                } while (++d1 < 166);
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            f1 += i19;
        }

        FuzzerUtils.out.println("f1 l i16 = " + Float.floatToIntBits(f1) + "," + l + "," + i16);
        FuzzerUtils.out.println("i17 b1 d1 = " + i17 + "," + (b1 ? 1 : 0) + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i18 i19 dArr = " + i18 + "," + i19 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0464.instanceCount iFld Test0464.sFld = " + Test0464.instanceCount + "," + iFld + "," +
                Test0464.sFld);
        FuzzerUtils.out.println("iArrFld fArrFld Test0464.lArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(Test0464.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0464 _instance = new Test0464();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 bMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
