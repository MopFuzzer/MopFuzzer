// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0162 {

    public static final int N = 400;

    public static long instanceCount=27837L;
    public static int iFld=85;
    public volatile double dFld=2.32061;
    public static double dFld1=46.127732;
    public static float fFld=2.806F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0162.iArrFld, -14);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i5, int i6) {

        int i7=-14, i8=-145, i9=93, i10=4, i11=-50, i12=-3;
        byte by=-20;
        short s=-2061;
        float f2=75.470F;
        boolean b=true;

        for (i7 = 14; i7 < 376; i7++) {
            Test0162.instanceCount <<= by;
            for (i9 = 1; i9 < 5; i9++) {
                Test0162.iArrFld[i7] |= Test0162.iFld;
                Test0162.instanceCount += (((i9 * i7) + Test0162.iFld) - i5);
                i10 >>= s;
                for (i11 = 1; 2 > i11; ++i11) {
                    switch ((i7 % 7) + 68) {
                    case 68:
                        i10 *= by;
                        i5 *= (int)1.729F;
                        break;
                    case 69:
                        Test0162.dFld1 = i7;
                        Test0162.instanceCount += (i11 | by);
                        break;
                    case 70:
                        i8 *= 46130;
                        Test0162.instanceCount = Test0162.instanceCount;
                        f2 += i9;
                        break;
                    case 71:
                        i12 -= (int)f2;
                        break;
                    case 72:
                        if (i5 != 0) {
                        }
                        break;
                    case 73:
                        b = b;
                    case 74:
                    }
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + by + i9 + i10 + s + i11 + i12 + Float.floatToIntBits(f2) + (b ? 1 : 0);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(int i3, int i4) {

        byte by1=8;
        int i13=8, i14=-57903, i15=10;
        boolean b1=true;
        float[] fArr =new float[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(fArr, 0.440F);
        FuzzerUtils.init(lArr, 3291748282L);

        i3 = (i3 = i3);
        Test0162.instanceCount <<= Math.max(i3 = sMeth(Test0162.iFld, i4), i4);
        by1 = (byte)i4;
        fArr[(28516 >>> 1) % N] += i3;
        for (i13 = 5; i13 < 326; i13++) {
            Test0162.instanceCount = Test0162.iFld;
            Test0162.dFld1 *= i4;
            lArr[i13 - 1][i13 + 1] += 33991;
            i15 = 1;
            while (++i15 < 5) {
                Test0162.fFld *= Test0162.instanceCount;
                Test0162.iArrFld[i15 + 1] -= i15;
                Test0162.iArrFld[i13] = (int) -1.144F;
                Test0162.instanceCount *= (long) Test0162.fFld;
                i3 = i3;
                if (b1) break;
            }
        }
        vMeth1_check_sum += i3 + i4 + by1 + i13 + i14 + i15 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1, int i2, long l) {

        float f1=4.1017F;
        float f3=-1.140F;
        float[] fArr1 =new float[N];
        int i16=43, i17=-112;
        boolean b2=false;

        FuzzerUtils.init(fArr1, -115.217F);

        Test0162.iFld = (int) (16953 - ((f1 * i2) - (i2 + i2)));
        vMeth1(2, -5);
        i1 >>= i2;
        Test0162.iFld *= i1;
        Test0162.dFld1 += i2;
        if (true) {
            Test0162.iFld = -48;
            i1 *= i2;
        } else {
            fArr1[(i1 >>> 1) % N] += Test0162.fFld;
            i16 = 151;
            while ((i16 -= 3) > 0) {
                switch (((i16 % 2) * 5) + 51) {
                case 60:
                    if (true) {
                        for (f3 = 30; f3 > 1; --f3) {
                            i1 = i2;
                            i1 += (int)f3;
                        }
                    } else if (b2) {
                        i2 += i2;
                    } else {
                        l >>= Test0162.instanceCount;
                    }
                    break;
                case 54:
                    Test0162.instanceCount = i17;
                    break;
                default:
                    i1 |= 3;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + l + Float.floatToIntBits(f1) + i16 + Float.floatToIntBits(f3) + i17 + (b2 ? 1 : 0)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        float f=-2.435F, f4=127.462F;
        int i=-10, i18=56696, i19=-210, i20=-48632, i21=6, i22=-2, i23=-7, i24=23, i25=9;
        boolean b3=false;
        byte by2=27;

        Test0162.iFld = (int) ((f--) * (dFld * (Test0162.instanceCount + Test0162.iFld)));
        i = 1;
        do {
            vMeth(Test0162.iFld, i, 4L);
        } while (++i < 300);
        for (i18 = 7; i18 < 260; i18++) {
            i19 += (((i18 * i19) + Test0162.instanceCount) - Test0162.instanceCount);
            f4 = 99;
            while (--f4 > 0) {
                b3 = b3;
                for (i20 = 1; i20 < 1; i20++) {
                    short s1=23008;
                    Test0162.dFld1 = i20;
                    s1 += (short)(-22903 + (i20 * i20));
                    i21 += i20;
                    try {
                        Test0162.iArrFld[i18] = (-1915666786 / i);
                        Test0162.iFld = (i19 / 1918518884);
                        Test0162.iArrFld[i20 + 1] = (35611 % Test0162.iFld);
                    } catch (ArithmeticException a_e) {}
                    i19 += (241 + (i20 * i20));
                    Test0162.instanceCount += i19;
                    by2 += (byte)(i20 + i19);
                    i19 *= -22377;
                    Test0162.instanceCount += 6987;
                    i21 = i18;
                }
                Test0162.iFld += i21;
            }
            for (i22 = 4; i22 < 99; ++i22) {
                for (i24 = 1; i24 < 2; ++i24) {
                    i19 -= (int) Test0162.instanceCount;
                }
                Test0162.iFld >>= i21;
                Test0162.instanceCount *= -4;
                try {
                    i21 = (-1271527799 / Test0162.iArrFld[i18]);
                    i19 = (-21625 / i18);
                    Test0162.iFld = (Test0162.iArrFld[i22 + 1] % Test0162.iArrFld[i22]);
                } catch (ArithmeticException a_e) {}
                Test0162.iFld += -1;
                Test0162.instanceCount = 5;
            }
            i21 += (((i18 * i18) + Test0162.iFld) - by2);
            i25 <<= -77;
            i23 += i18;
        }

        FuzzerUtils.out.println("f i i18 = " + Float.floatToIntBits(f) + "," + i + "," + i18);
        FuzzerUtils.out.println("i19 f4 b3 = " + i19 + "," + Float.floatToIntBits(f4) + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 by2 = " + i20 + "," + i21 + "," + by2);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 = " + i25);

        FuzzerUtils.out.println("Test0162.instanceCount Test0162.iFld dFld = " + Test0162.instanceCount + "," + Test0162.iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0162.dFld1 Test0162.fFld Test0162.iArrFld = " + Double.doubleToLongBits(Test0162.dFld1) + "," +
                Float.floatToIntBits(Test0162.fFld) + "," + FuzzerUtils.checkSum(Test0162.iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0162 _instance = new Test0162();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
