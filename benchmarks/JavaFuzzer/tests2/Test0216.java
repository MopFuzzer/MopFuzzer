// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:22 2023
public class Test0216 {

    public static final int N = 400;

    public static long instanceCount=2249503585L;
    public float fFld=-122.26F;
    public static volatile double dFld=-108.31886;
    public static int iFld=27;
    public static byte byFld=21;
    public static short sFld=-17895;

    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i8=-59400;
        int i9=-135;
        int i10=-1;
        int i11=-12;
        int i12=84;
        int[] iArr1 =new int[N];
        float f=0.246F;
        float[][] fArr =new float[N][N];
        long l2=6219721567419361646L;
        boolean b=true;
        boolean[] bArr =new boolean[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -55.82964);
        FuzzerUtils.init(fArr, 126.813F);
        FuzzerUtils.init(iArr1, -6680);
        FuzzerUtils.init(bArr, false);

        for (double d : dArr) {
            for (i8 = 1; i8 < 4; ++i8) {
                f += Test0216.iFld;
                fArr[i8][i8 - 1] = Test0216.instanceCount;
                Test0216.iFld += (((i8 * Test0216.instanceCount) + Test0216.byFld) - Test0216.instanceCount);
                iArr1[i8 + 1] -= i9;
                l2 = 1;
                do {
                    iArr1[(int)(l2)] -= (int)d;
                } while (++l2 < 2);
                Test0216.sFld = (short) -11;
                i10 = 1;
                while (++i10 < 2) {
                    i9 -= Test0216.iFld;
                }
                bArr[i8 + 1] = b;
                for (i11 = 1; 2 > i11; ++i11) {
                    i12 += i12;
                    i12 >>= i8;
                }
            }
        }
        long meth_res = i8 + i9 + Float.floatToIntBits(f) + l2 + i10 + (b ? 1 : 0) + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(long l, long l1) {

        int i13=-138;
        int i14=41741;
        int i15=-85;
        int i16=159;
        int[] iArr2 =new int[N];
        float f1=-120.257F;

        FuzzerUtils.init(iArr2, 13);

        Test0216.iFld = (int) (((Test0216.dFld--) * (Test0216.instanceCount--)) + Test0216.iFld);
        Test0216.iFld += (int) (dMeth() + l);
        for (i13 = 8; i13 < 158; i13++) {
            l += (-2463974282113112747L + (i13 * i13));
            for (i15 = 11; i15 > 1; i15--) {
                Test0216.iFld += Test0216.iFld;
                try {
                    iArr2[(i15 >>> 1) % N] = (iArr2[i15 + 1] % 1722296695);
                    Test0216.iFld = (Test0216.iFld / i15);
                    iArr2[i13 + 1] = (187 / Test0216.iFld);
                } catch (ArithmeticException a_e) {}
            }
        }
        Test0216.iFld += (int) 142L;
        for (int i17 : iArr2) {
            l1 <<= l1;
            f1 = f1;
            i14 += i13;
            iArr2[(i15 >>> 1) % N] -= (int)l;
            Test0216.iFld >>= (int) l;
            i16 %= (int)-116.101916;
        }
        long meth_res = l + l1 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public float fMeth() {

        int i3=47800;
        int i4=-18121;
        int i5=46;
        int i6=-92;
        int i7=1285;
        int i18=-53812;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 220);

        Test0216.instanceCount = i3;
        Test0216.instanceCount += i3;
        for (i4 = 9; 258 > i4; ++i4) {
            iArr[i4 + 1][i4 + 1] = (9 / (iArr[i4 + 1][i4] | 1));
            try {
                i3 = (121 % iArr[i4 - 1][i4 + 1]);
                i3 = (i4 / i4);
                i5 = (i5 % i3);
            } catch (ArithmeticException a_e) {}
            i6 = 1;
            while (++i6 < 7) {
                i7 = 1;
                do {
                    iArr[i7][i7 - 1] = (--i3);
                } while (++i7 < 1);
                i5 += (int)(fFld + i3);
                switch (((iMeth(Test0216.instanceCount, Test0216.instanceCount) >>> 1) % 10) + 32) {
                case 32:
                    fFld = Test0216.sFld;
                    i18 += (((i6 * i7) + Test0216.instanceCount) - i6);
                    Test0216.byFld = (byte) -231;
                    Test0216.instanceCount = Test0216.byFld;
                    break;
                case 33:
                case 34:
                    Test0216.instanceCount >>= -34129;
                case 35:
                    iArr[i4 + 1][i4 - 1] = (int) Test0216.instanceCount;
                    break;
                case 36:
                    i3 = (int) Test0216.instanceCount;
                case 37:
                    if (true) continue;
                    break;
                case 38:
                    Test0216.instanceCount -= (long) Test0216.dFld;
                    break;
                case 39:
                case 40:
                    Test0216.iFld = (int) fFld;
                    break;
                case 41:
                    Test0216.instanceCount = Test0216.instanceCount;
                    break;
                default:
                    Test0216.dFld += -2.25174;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i18 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=6, i2=-236, i19=-23340, i20=13, i21=35849, i22=-13724, i23=-3, i24=-43869;
        boolean b1=false;
        long[] lArr =new long[N];
        float[] fArr1 =new float[N];

        FuzzerUtils.init(lArr, 120L);
        FuzzerUtils.init(fArr1, 0.140F);

        fFld = (Test0216.instanceCount + i);
        lArr[(i >>> 1) % N] += (-((i - Test0216.instanceCount) * i));
        for (i1 = 13; i1 < 315; ++i1) {
            i2 -= (int) (((-Test0216.dFld) + (--Test0216.instanceCount)) * fMeth());
            fArr1[i1 + 1] *= i1;
            for (i19 = 5; i19 < 83; i19++) {
                i2 %= -30004;
            }
            for (i21 = 83; i21 > 2; i21 -= 2) {
                Test0216.instanceCount += (((i21 * Test0216.instanceCount) + i1) - fFld);
                fArr1[i1 + 1] += fFld;
                i2 = i;
                Test0216.instanceCount = Test0216.instanceCount;
                lArr[i1] -= Test0216.instanceCount;
                for (i23 = 3; 1 < i23; --i23) {
                    i22 += -5193;
                    i20 >>= Test0216.iFld;
                    i20 += i23;
                    if (false) {
                        fFld -= 4475818098434113213L;
                        Test0216.instanceCount *= Test0216.instanceCount;
                        Test0216.iFld += Test0216.iFld;
                        Test0216.iFld += (i23 - i);
                    } else if (b1) {
                        b1 = true;
                        i22 *= (int)2.515F;
                    } else {
                        i2 += (int) Test0216.instanceCount;
                        i = Test0216.iFld;
                        i2 += (-41552 + (i23 * i23));
                    }
                    i20 *= (int) Test0216.instanceCount;
                    i22 += (int) Test0216.dFld;
                    i20 = (int)fFld;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("b1 lArr fArr1 = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0216.instanceCount fFld Test0216.dFld = " + Test0216.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0216.dFld));
        FuzzerUtils.out.println("Test0216.iFld Test0216.byFld Test0216.sFld = " + Test0216.iFld + "," + Test0216.byFld + "," + Test0216.sFld);

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0216 _instance = new Test0216();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
