// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0730 {

    public static final int N = 400;

    public static long instanceCount=-42884L;
    public double dFld=-3.78439;
    public static byte byFld=-123;
    public static short sFld=-9613;
    public static float fFld=-47.40F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0730.iArrFld, -26);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i4, double d) {

        int i5=83, i6=11, i7=286, i8=-1;
        boolean b=true;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 2.538F);

        for (i5 = 5; i5 < 246; ++i5) {
            i4 += i5;
            Test0730.instanceCount += 31850;
            Test0730.instanceCount = i5;
        }
        for (float f : fArr) {
            if (b) break;
            Test0730.iArrFld[(39141 >>> 1) % N] *= i4;
            i6 = i5;
            for (i7 = 1; i7 < 4; ++i7) {
                Test0730.byFld = (byte) i5;
                f += Test0730.sFld;
                try {
                    i8 = (36557 / i4);
                    i8 = (i5 % i6);
                    i4 = (-388417079 / i8);
                } catch (ArithmeticException a_e) {}
                f += (((i7 * i6) + i7) - i4);
                Test0730.sFld /= (short) (i5 | 1);
                i8 -= (int) Test0730.instanceCount;
            }
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d) + i5 + i6 + (b ? 1 : 0) + i7 + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(int i2, int i3) {

        int i9=16742, i10=34754, i11=-14;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 3568373067L);

        for (long l : lArr) {
            vMeth(11, 2.20534);
            i3 = i2;
            i3 *= i2;
            for (i9 = 1; i9 < 4; i9++) {
                switch (((i11 >>> 1) % 2) + 4) {
                case 4:
                    i3 = i3;
                    if (b1) continue;
                    break;
                case 5:
                    try {
                        i10 = (i3 % 30456);
                        Test0730.iArrFld[i9 - 1] = (27652 % i9);
                        i3 = (183 % i3);
                    } catch (ArithmeticException a_e) {}
                    if (i9 != 0) {
                    }
                    l >>= i3;
                    Test0730.instanceCount += (i9 * i9);
                    break;
                default:
                    i10 += i9;
                }
                i10 += (int) Test0730.instanceCount;
                i10 &= (int)-3188277559L;
            }
        }
        long meth_res = i2 + i3 + i9 + i10 + i11 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i1=1, i12=-5932, i13=-13, i14=-54527, i15=-22129, i16=-48, i17=42, i18=9604;
        double d1=1.34517;

        i1 -= (int)((iMeth(-121, i1) - d1) + i1);
        Test0730.fFld -= i1;
        for (i12 = 14; i12 < 264; ++i12) {
            i1 += i12;
            for (i14 = i12; i14 < 7; ++i14) {
                Test0730.instanceCount += (i14 * i14);
                i1 *= i15;
            }
            for (i16 = 1; i16 < 7; i16++) {
                Test0730.instanceCount += (((i16 * Test0730.instanceCount) + i1) - i14);
                i13 += (i16 ^ i18);
                Test0730.instanceCount += i14;
                i17 >>= i17;
                Test0730.fFld = Test0730.fFld;
                d1 += Test0730.instanceCount;
                Test0730.instanceCount *= i12;
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d1) + i12 + i13 + i14 + i15 + i16 + i17 + i18;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=7;
        int i19=-44;
        int i20=-48517;
        int i21=-135;
        int i22=7;
        int[] iArr =new int[N];
        long l1=7L, l2=-218L;
        boolean b2=true;

        FuzzerUtils.init(iArr, -2);

        iArr[(i >>> 1) % N] += (--i);
        dFld -= (((Test0730.instanceCount--) - lMeth()) + dFld);
        i19 = 1;
        do {
            for (l1 = 6; l1 < 132; ++l1) {
                i20 += i19;
                if (false) {
                    Test0730.instanceCount <<= Test0730.instanceCount;
                } else if (b2) {
                    dFld -= i;
                }
                i = i20;
                i -= i19;
            }
            dFld = l1;
            dFld += Test0730.fFld;
            Test0730.instanceCount *= Test0730.byFld;
            i21 = 1;
            do {
                Test0730.fFld -= i21;
                for (l2 = i21; l2 < 1; l2++) {
                    i22 = 197;
                    Test0730.instanceCount += Test0730.byFld;
                    switch ((int)(((l2 % 1) * 5) + 26)) {
                    case 31:
                        i22 -= i21;
                        break;
                    default:
                        i22 >>>= -8;
                        i20 = i;
                        Test0730.instanceCount += l2;
                    }
                    if (b2) {
                        dFld -= dFld;
                    } else {
                        i20 += (int)l2;
                        if (b2) {
                            Test0730.instanceCount = 79;
                            Test0730.instanceCount += i;
                            Test0730.fFld += (l2 * l2);
                        } else {
                            i22 /= (int)(i20 | 1);
                        }
                    }
                }
            } while (++i21 < 132);
        } while (++i19 < 190);

        FuzzerUtils.out.println("i i19 l1 = " + i + "," + i19 + "," + l1);
        FuzzerUtils.out.println("i20 b2 i21 = " + i20 + "," + (b2 ? 1 : 0) + "," + i21);
        FuzzerUtils.out.println("l2 i22 iArr = " + l2 + "," + i22 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0730.instanceCount dFld Test0730.byFld = " + Test0730.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0730.byFld);
        FuzzerUtils.out.println("Test0730.sFld Test0730.fFld Test0730.iArrFld = " + Test0730.sFld + "," +
                Float.floatToIntBits(Test0730.fFld) + "," + FuzzerUtils.checkSum(Test0730.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0730 _instance = new Test0730();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
