// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0563 {

    public static final int N = 400;

    public static long instanceCount=173979161L;
    public static byte byFld=-26;
    public static long lFld=8L;
    public static short sFld=20552;
    public static int iFld=-5;
    public static boolean bFld=false;
    public static float fFld=1.553F;
    public static int[] iArrFld =new int[N];
    public long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0563.iArrFld, -26295);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i2) {

        int i3=-6;
        int i4=-10;
        int i5=54060;
        int i6=-9;
        int i7=93;
        int[] iArr =new int[N];
        short s=-6653;
        float f1=-12.546F, f2=-119.126F;

        FuzzerUtils.init(iArr, -13012);

        i2 = i2;
        for (i3 = 1; 175 > i3; i3++) {
            try {
                i2 = (i2 % 946291379);
                i2 = (92 % iArr[i3]);
                iArr[i3 + 1] = (i2 % i4);
            } catch (ArithmeticException a_e) {}
            Test0563.lFld <<= i3;
            switch (((i3 % 3) * 5) + 83) {
            case 94:
                i4 -= (int) Test0563.lFld;
                i2 = s;
                i4 <<= (int) Test0563.instanceCount;
                break;
            case 98:
                for (i5 = i3; i5 < 9; ++i5) {
                    for (f1 = 1; f1 > 1; f1--) {
                        Test0563.lFld -= i2;
                        i6 += (int)(((f1 * i3) + s) - f1);
                        i4 += (int)-3951219880L;
                        iArr[i5] += (int) Test0563.instanceCount;
                        i4 = i6;
                    }
                }
                break;
            case 95:
                f2 += (-9376 + (i3 * i3));
            }
        }
        long meth_res = i2 + i3 + i4 + s + i5 + i6 + Float.floatToIntBits(f1) + i7 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i1, long l) {

        float f=54.262F;
        double d=32.28881;
        int i9=5144;
        int i10=57941;
        int i11=44324;
        int i12=189;
        int i13=-1520;
        int i14=2;
        int i15=721;
        int i16=-23541;
        int i17=6;
        int[] iArr1 =new int[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)119);
        FuzzerUtils.init(iArr1, -9);

        f *= (float)(d + (i1--));
        i1 >>= (int)lMeth(i1);
        i9 >>= i1;
        f += (float)0.35395;
        for (i10 = 3; 126 > i10; ++i10) {
            for (i12 = i10; i12 < 13; ++i12) {
                i11 += (i12 - i1);
            }
            i13 <<= i9;
            for (i14 = 13; i14 > i10; --i14) {
                byArr[i14 + 1] += (byte)i10;
                switch (((i15 >>> 1) % 1) + 118) {
                case 118:
                default:
                    for (i16 = 1; i16 < 1; ++i16) {
                        f /= (float)-2.20861;
                    }
                }
                iArr1[i14 + 1] = Test0563.byFld;
                i1 += (((i14 * i16) + Test0563.lFld) - i1);
            }
        }
        vMeth1_check_sum += i1 + l + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + i13
            + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i) {

        int i18=-12364, i19=-86, i20=13;
        float f3=-58.52F;
        float[] fArr =new float[N];
        long l1=3L;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -13L);
        FuzzerUtils.init(fArr, -5.195F);

        lArr[(i >>> 1) % N] += Test0563.byFld;
        vMeth1(i, 5L);
        fArr[(i >>> 1) % N] *= i;
        for (i18 = 298; 3 < i18; i18 -= 3) {
            switch ((i18 % 1) + 69) {
            case 69:
                if (i != 0) {
                    vMeth_check_sum += i + i18 + i19 + Float.floatToIntBits(f3) + i20 + l1 + FuzzerUtils.checkSum(lArr)
                        + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                break;
            default:
                f3 += ((long) i18 ^ (long) Test0563.instanceCount);
                Test0563.iArrFld[i18] = i18;
            }
            i <<= i19;
            i = (int)-14L;
            i ^= -24;
            fArr[i18 - 1] = i19;
        }
        i20 = 1;
        do {
            l1 = Test0563.sFld;
        } while (++i20 < 397);
        f3 = i;
        vMeth_check_sum += i + i18 + i19 + Float.floatToIntBits(f3) + i20 + l1 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i21=29492, i22=-15114, i23=-7, i24=-9, i25=-12, i26=14, i27=22233, i28=-3;
        double d1=21.20960;
        double d2=94.556;
        double[] dArr =new double[N];
        long l2=253955407L;

        FuzzerUtils.init(dArr, 47.65560);

        vMeth(Test0563.iFld);
        Test0563.iArrFld[(Test0563.iFld >>> 1) % N] *= Test0563.iFld;
        for (i21 = 271; 9 < i21; --i21) {
            i22 |= i22;
            Test0563.iFld -= (int) Test0563.instanceCount;
            try {
                Test0563.iFld = (Test0563.iFld / -56615);
                Test0563.iFld = (-2144887918 % i22);
                Test0563.iFld = (Test0563.iArrFld[i21] % -10604);
            } catch (ArithmeticException a_e) {}
            i22 &= i21;
            Test0563.bFld = Test0563.bFld;
            Test0563.instanceCount <<= Test0563.iFld;
            Test0563.sFld = (short) i21;
            d1 -= i22;
            i22 += (int)d1;
            Test0563.iArrFld[i21 + 1] -= Test0563.sFld;
        }
        Test0563.lFld <<= i22;
        if (true) {
            Test0563.instanceCount |= i21;
            try {
                Test0563.sFld -= (short) i21;
                Test0563.instanceCount = i22;
            }
            catch (ArrayIndexOutOfBoundsException exc2) {
                i22 /= (int) (Test0563.instanceCount | 1);
                for (i23 = 7; i23 < 130; i23++) {
                    i24 += i22;
                    dArr[i23 + 1] = Test0563.instanceCount;
                }
            }
            for (i25 = 11; i25 < 209; i25++) {
                Test0563.iFld += (int) Test0563.fFld;
                for (d2 = 2; d2 < 127; d2++) {
                    for (l2 = i25; l2 < 2; l2++) {
                        lArrFld[(int) (d2)][i25] -= Test0563.lFld;
                        i28 -= i25;
                        Test0563.iArrFld[i25] -= (int) Test0563.fFld;
                    }
                }
            }
        } else {
            lArrFld[(i28 >>> 1) % N] = lArrFld[(i21 >>> 1) % N];
        }

        FuzzerUtils.out.println("i21 i22 d1 = " + i21 + "," + i22 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 d2 i27 = " + i26 + "," + Double.doubleToLongBits(d2) + "," + i27);
        FuzzerUtils.out.println("l2 i28 dArr = " + l2 + "," + i28 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0563.instanceCount Test0563.byFld Test0563.lFld = " + Test0563.instanceCount + "," + Test0563.byFld +
                "," + Test0563.lFld);
        FuzzerUtils.out.println("Test0563.sFld Test0563.iFld Test0563.bFld = " + Test0563.sFld + "," + Test0563.iFld + "," + (Test0563.bFld ? 1
            : 0));
        FuzzerUtils.out.println("Test0563.fFld Test0563.iArrFld lArrFld = " + Float.floatToIntBits(Test0563.fFld) + "," +
                FuzzerUtils.checkSum(Test0563.iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0563 _instance = new Test0563();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
