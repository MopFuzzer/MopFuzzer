// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0349 {

    public static final int N = 400;

    public static long instanceCount=-1716911366L;
    public static long lFld=127L;
    public static byte byFld=22;
    public boolean bFld=true;
    public short sFld=-19439;
    public static float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0349.fArrFld, 15.626F);
        FuzzerUtils.init(Test0349.lArrFld, -41433L);
    }

    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f, int i3, float f1) {

        int i4=47287, i5=-36, i6=-51, i7=8;
        float f2=-114.465F;
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -9L);

        i4 = 268;
        do {
            lArr[i4] >>>= i4;
            i5 = 1;
            while (++i5 < 6) {
                i3 *= (int) Test0349.instanceCount;
            }
            f2 = 1;
            while (++f2 < 6) {
                i3 *= (int) Test0349.lFld;
                i3 = (int)91.109028;
                i3 = i5;
                f += Test0349.instanceCount;
                i3 = i3;
            }
        } while (--i4 > 0);
        if (b) {
            for (i6 = 4; 360 > i6; i6++) {
                Test0349.lFld += (((i6 * f1) + Test0349.lFld) - i7);
                i3 = (int)-2329754815L;
                i7 = (int)f2;
            }
        } else if (b) {
            f1 = f1;
        } else if (b) {
            i3 -= Test0349.byFld;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + Float.floatToIntBits(f1) + i4 + i5 + Float.floatToIntBits(f2)
            + i6 + i7 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static short sMeth(double d1, double d2, long l1) {

        float f3=-66.792F, f4=-51.133F;
        int i8=-2;
        int i9=-108;
        int i10=-54;
        int[] iArr =new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr, 8);

        for (int i2 : iArr) {
            vMeth(f3, i2, 0.357F);
            for (i8 = 1; i8 < 4; ++i8) {
                i9 = (int) Test0349.lFld;
                l1 += i2;
                i9 *= (int)d2;
                if (b1) break;
                l1 = -4;
                try {
                    i2 = (i8 % i2);
                    iArr[i8 - 1] = (i2 / i9);
                    i9 = (-122 / i8);
                } catch (ArithmeticException a_e) {}
                i9 += (-10255 + (i8 * i8));
                f3 += i9;
            }
            i2 *= (int)f4;
            i10 = 1;
            while (++i10 < 4) {
                i9 += i10;
                iArr[i10] = i10;
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + l1 + Float.floatToIntBits(f3) + i8
            + i9 + (b1 ? 1 : 0) + Float.floatToIntBits(f4) + i10 + FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth(long l, double d, int i1) {

        double d3=-101.110721;
        int i11=5;
        int i12=-73;
        int i13=71;
        int[] iArr1 =new int[N];
        float f5=-2.217F;

        FuzzerUtils.init(iArr1, 0);

        sMeth(d, -26.53704, l);
        i1 += (int)d3;
        d -= d3;
        Test0349.instanceCount = Test0349.instanceCount;
        i1 += (int) Test0349.instanceCount;
        iArr1[(i1 >>> 1) % N] -= i1;
        for (i11 = 5; i11 < 137; i11++) {
            Test0349.instanceCount = l;
            i12 += (i11 * i12);
            l += i1;
            Test0349.fArrFld = Test0349.fArrFld;
            f5 = i12;
            i13 = 12;
            do {
                i1 -= i1;
                i12 += (int) Test0349.lFld;
            } while ((i13 -= 2) > 0);
        }
        long meth_res = l + Double.doubleToLongBits(d) + i1 + Double.doubleToLongBits(d3) + i11 + i12 +
            Float.floatToIntBits(f5) + i13 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-186;
        int i14=-1654;
        int i15=215;
        int i16=-42118;
        int i17=16876;
        int i18=-1;
        int i19=24280;
        int i20=-31788;
        int i21=0;
        int[] iArr2 =new int[N];
        float f6=-1.790F, f7=-70.947F;
        long l2=-1216228668L;
        double d4=1.3043;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr2, 175);
        FuzzerUtils.init(bArr, true);

        i = iMeth(Test0349.instanceCount, 83.67582, i);
        Test0349.lArrFld = Test0349.lArrFld;
        for (i14 = 8; i14 < 236; ++i14) {
            for (f6 = 5; f6 < 110; f6++) {
                Test0349.instanceCount = -46251;
                for (l2 = 1; 2 > l2; ++l2) {
                    switch ((int)((l2 % 1) + 116)) {
                    case 116:
                        i16 *= i15;
                        break;
                    default:
                        Test0349.lFld <<= Test0349.lFld;
                        switch (((i16 >>> 1) % 1) + 75) {
                        case 75:
                            iArr2[i14 + 1] = (int)-14434L;
                        default:
                            bFld = bFld;
                            Test0349.lFld *= i;
                            i16 = i17;
                        }
                        iArr2[(int)(l2)] += 45;
                        i15 |= i14;
                    }
                    bArr[i14] = bFld;
                    i17 = (int)l2;
                    iArr2[(int)(l2 - 1)] = i16;
                    iArr2[(int)(l2)] -= i14;
                }
            }
            for (i18 = i14; i18 < 110; ++i18) {
                Test0349.instanceCount >>= 6852816716520339559L;
                Test0349.instanceCount *= (long) d4;
            }
            Test0349.byFld += (byte) (i14 | i15);
            for (i20 = 110; i20 > 4; --i20) {
                switch (((i14 % 7) * 5) + 117) {
                case 129:
                    i16 -= (int)l2;
                    d4 = Test0349.lFld;
                    i17 += (i20 + i18);
                    i17 += (((i20 * i) + Test0349.lFld) - i17);
                    break;
                case 136:
                    i += i18;
                    break;
                case 134:
                    Test0349.lFld <<= i20;
                    break;
                case 145:
                    f7 = 88.662F;
                    break;
                case 148:
                    try {
                        i = (i15 / i18);
                        iArr2[(i15 >>> 1) % N] = (i21 % iArr2[i20 - 1]);
                        i15 = (i16 % -60);
                    } catch (ArithmeticException a_e) {}
                case 141:
                    i15 = i14;
                    break;
                case 140:
                    i17 += (((i20 * i17) + i14) - sFld);
                default:
                    sFld += (short)(((i20 * i18) + l2) - l2);
                }
            }
        }

        FuzzerUtils.out.println("i i14 i15 = " + i + "," + i14 + "," + i15);
        FuzzerUtils.out.println("f6 i16 l2 = " + Float.floatToIntBits(f6) + "," + i16 + "," + l2);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("d4 i20 i21 = " + Double.doubleToLongBits(d4) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("f7 iArr2 bArr = " + Float.floatToIntBits(f7) + "," + FuzzerUtils.checkSum(iArr2) + ","
            + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0349.instanceCount Test0349.lFld Test0349.byFld = " + Test0349.instanceCount + "," + Test0349.lFld +
                "," + Test0349.byFld);
        FuzzerUtils.out.println("bFld sFld Test0349.fArrFld = " + (bFld ? 1 : 0) + "," + sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0349.fArrFld)));
        FuzzerUtils.out.println("Test0349.lArrFld = " + FuzzerUtils.checkSum(Test0349.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0349 _instance = new Test0349();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
