// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0157 {

    public static final int N = 400;

    public static long instanceCount=200L;
    public volatile float fFld=-1.108F;
    public static volatile boolean bFld=true;
    public static short sFld=26825;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0157.lArrFld, -6952L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, long l3, int i9) {

        int i10=62277;
        int i11=2;
        int i12=53;
        int[] iArr1 =new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 14);

        i9 *= i9;
        switch (((i9 >>> 1) % 7) + 52) {
        case 52:
            i10 = 1;
            do {
                b = b;
                iArr1[i10 - 1] += i9;
                for (i11 = 1; i11 < 6; i11++) {
                    switch ((((i11 >>> 1) % 10) * 5) + 19) {
                    case 54:
                        Test0157.instanceCount += (i11 + f1);
                        i12 = -3075;
                        i12 *= (int)f1;
                        i9 += i12;
                        break;
                    case 33:
                    case 64:
                        i9 += (-6 + (i11 * i11));
                        if (false) {
                            try {
                                iArr1[i10 - 1] = (i12 % i11);
                                i9 = (i10 % -4);
                                i9 = (iArr1[i10] / -43636);
                            } catch (ArithmeticException a_e) {}
                            b = b;
                        } else if (b) {
                            i9 += (31722 + (i11 * i11));
                        } else {
                            iArr1 = iArr1;
                        }
                    case 37:
                        i12 += (i11 * i11);
                        break;
                    case 32:
                        iArr1[i11 + 1] = (int)l3;
                        break;
                    case 22:
                        i9 = i10;
                    case 41:
                        l3 += i11;
                        break;
                    case 61:
                        l3 = i10;
                        break;
                    case 29:
                        i9 >>= i9;
                        break;
                    case 67:
                        i9 += i11;
                        break;
                    }
                }
            } while (++i10 < 262);
            break;
        case 53:
            iArr1 = iArr1;
        case 54:
        case 55:
            iArr1[(i11 >>> 1) % N] -= 179;
            break;
        case 56:
            l3 += Test0157.instanceCount;
        case 57:
            i12 *= i10;
            break;
        case 58:
            Test0157.instanceCount += i10;
            break;
        default:
            i12 += (int)-11.675F;
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + l3 + i9 + i10 + (b ? 1 : 0) + i11 + i12 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l1, long l2) {

        int i5=-206;
        int i6=-194;
        int i7=-22109;
        int i8=209;
        int i13=12797;
        int i14=-133;
        int i15=-14;
        int[] iArr =new int[N];
        double d1=0.89564;
        short s=1101;
        short[] sArr =new short[N];
        boolean b1=true;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr, 47009);
        FuzzerUtils.init(sArr, (short)-23978);
        FuzzerUtils.init(fArr, 72.563F);

        for (i5 = 324; i5 > 17; --i5) {
            for (i7 = 1; 5 > i7; ++i7) {
                i6 -= i6;
                i6 += (int)((i6 = (int)0L) - iArr[i5 + 1]);
                sArr[i5] = (short)iArr[i5];
                d1 += Short.reverseBytes((short)(++s));
                fArr[i5][i5 + 1] = (Test0157.lArrFld[i7 + 1]--);
            }
            vMeth2(-14.707F, l2, i6);
            for (i13 = 1; i13 < 5; i13++) {
                switch (((12 >>> 1) % 2) + 71) {
                case 71:
                    i15 = 1;
                    do {
                        Test0157.instanceCount &= i5;
                        fArr[i5 + 1][i15] += l1;
                        if (b1) break;
                        i14 = (int) Test0157.instanceCount;
                    } while (++i15 < 2);
                    break;
                case 72:
                    i8 ^= s;
                    break;
                }
            }
        }
        vMeth1_check_sum += l1 + l2 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) + s + i13 + i14 + i15 + (b1 ? 1 :
            0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i2, int i3, long l) {

        double d=0.101869;
        int i4=-2;
        int i16=-14752;
        int i17=161;
        int i18=-43;
        int i19=-21;
        int[] iArr2 =new int[N];
        float f=-11.462F;
        float[] fArr1 =new float[N];
        byte by=-114;
        byte[] byArr =new byte[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr2, 9);
        FuzzerUtils.init(fArr1, -101.754F);
        FuzzerUtils.init(byArr, (byte)124);

        for (d = 8; d < 396; d++) {
            switch ((int)(((d % 10) * 5) + 69)) {
            case 100:
                switch ((int)(((d % 10) * 5) + 50)) {
                case 67:
                    f += (i2 = ((i4++) & (i4 + i3)));
                    i4 >>= i4;
                    if (i4 != 0) {
                        vMeth_check_sum += i2 + i3 + l + Double.doubleToLongBits(d) + i4 + Float.floatToIntBits(f) +
                            i16 + i17 + by + i18 + i19 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    Test0157.instanceCount += (long) d;
                    break;
                case 57:
                    vMeth1(Test0157.instanceCount, Test0157.instanceCount);
                    for (i16 = 1; i16 < 4; i16++) {
                        switch ((i16 % 6) + 45) {
                        case 45:
                        case 46:
                            i3 = by;
                            for (i18 = 1; 2 > i18; i18 += 3) {
                                i19 -= i3;
                                i3 = i19;
                                i17 += (int)l;
                            }
                            break;
                        case 47:
                            Test0157.lArrFld[(int) (d - 1)] *= i4;
                        case 48:
                            i4 <<= (int) Test0157.instanceCount;
                            break;
                        case 49:
                            bArr[(int) (d - 1)] = Test0157.bFld;
                            break;
                        case 50:
                        }
                    }
                    break;
                case 65:
                    i3 = i19;
                    break;
                case 99:
                    f *= Test0157.instanceCount;
                case 87:
                    Test0157.instanceCount = -9L;
                    break;
                case 52:
                    i19 = i17;
                case 77:
                    Test0157.instanceCount = i19;
                    break;
                case 80:
                    iArr2[(int)(d - 1)] = i2;
                    break;
                case 98:
                    i4 = (int) Test0157.instanceCount;
                    break;
                case 97:
                    i3 *= i18;
                    break;
                }
                break;
            case 93:
                fArr1 = fArr1;
            case 71:
                i19 >>= i18;
                break;
            case 113:
                byArr[(int)(d)] *= (byte)-45;
                break;
            case 106:
                i2 += (int)f;
                break;
            case 101:
                i19 = (int)37.57568;
                break;
            case 83:
            case 99:
                iArr2[(int)(d - 1)] /= (int)(i4 | 1);
                break;
            case 116:
                i3 -= i17;
            case 84:
                i4 *= (int)l;
                break;
            }
        }
        vMeth_check_sum += i2 + i3 + l + Double.doubleToLongBits(d) + i4 + Float.floatToIntBits(f) + i16 + i17 + by +
            i18 + i19 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=148;
        int i1=243;
        int i20=-12;
        int i21=62133;
        int i22=175;
        int i23=-155;
        int i24=8240;
        int[] iArr3 =new int[N];
        double d2=-110.101265;
        long l4=-147L;
        long[] lArr =new long[N];
        boolean[][] bArr1 =new boolean[N][N];

        FuzzerUtils.init(lArr, -9L);
        FuzzerUtils.init(bArr1, true);
        FuzzerUtils.init(iArr3, 28246);

        for (i = 4; i < 378; ++i) {
            i1 -= (int)(fFld % ((i * lArr[(i1 >>> 1) % N]) | 1));
            vMeth(i, -163, Test0157.instanceCount);
            i1 = i1;
        }
        i20 = 1;
        do {
            bArr1[i20][i20] = Test0157.bFld;
            for (i21 = 2; i21 < 71; ++i21) {
                for (i23 = 1; i23 < 2; i23++) {
                    switch (((i21 % 10) * 5) + 20) {
                    case 43:
                        switch ((((-167 >>> 1) % 3) * 5) + 127) {
                        case 141:
                            i24 += (i23 * i23);
                            try {
                                iArr3[i20 + 1] = (186 % i22);
                                iArr3[i21] = (i24 % i);
                                iArr3[i21 + 1] = (iArr3[i21 + 1] / -86);
                            } catch (ArithmeticException a_e) {}
                            lArr = lArr;
                            break;
                        case 134:
                            if (Test0157.bFld) break;
                        case 129:
                            d2 += i;
                            i1 >>= i;
                            i22 += i23;
                            break;
                        default:
                            i1 += (int)(24L + (i23 * i23));
                            Test0157.instanceCount += (i23 + i21);
                            i22 >>= i;
                            i22 -= i1;
                        }
                        Test0157.sFld *= (short) -43002;
                        i24 *= (int)-30425L;
                    case 27:
                        switch (((i20 >>> 1) % 1) + 82) {
                        case 82:
                            i24 *= (int)l4;
                            l4 = (long)d2;
                        default:
                            lArr = FuzzerUtils.long1array(N, (long)4194901502L);
                            i22 += 14;
                        }
                        i24 -= i;
                        i1 = (int)d2;
                        break;
                    case 61:
                        iArr3 = iArr3;
                    case 22:
                        i1 >>>= i;
                        break;
                    case 25:
                        iArr3[(204 >>> 1) % N] = i24;
                        break;
                    case 50:
                        fFld += (i23 - i1);
                    case 59:
                        l4 *= i24;
                    case 65:
                        i22 *= i;
                    case 52:
                        Test0157.sFld += (short) (-105 + (i23 * i23));
                        break;
                    case 46:
                        i24 = i22;
                        break;
                    }
                }
            }
        } while (++i20 < 357);

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 d2 l4 = " + i24 + "," + Double.doubleToLongBits(d2) + "," + l4);
        FuzzerUtils.out.println("lArr bArr1 iArr3 = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(bArr1)
            + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0157.instanceCount fFld Test0157.bFld = " + Test0157.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + (Test0157.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0157.sFld Test0157.lArrFld = " + Test0157.sFld + "," + FuzzerUtils.checkSum(Test0157.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0157 _instance = new Test0157();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
