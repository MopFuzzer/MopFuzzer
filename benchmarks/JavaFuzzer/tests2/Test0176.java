// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0176 {

    public static final int N = 400;

    public static long instanceCount=-1192391439L;
    public static int iFld=26467;
    public static float fFld=0.455F;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0176.lArrFld, 30752L);
        FuzzerUtils.init(Test0176.iArrFld, 68);
        FuzzerUtils.init(Test0176.fArrFld, 2.123F);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i4=1838, i5=7101, i6=-240, i7=-3, i8=7, i9=-33320, i10=4;
        short s=8578;

        Test0176.iFld = Test0176.iFld;
        try {
            Test0176.iFld = 15035;
            Test0176.iFld *= Test0176.iFld;
            for (i4 = 225; 5 < i4; --i4) {
                for (i6 = 7; i6 > i4; --i6) {
                    Test0176.iFld += i4;
                    if (i4 != 0) {
                        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + s + i10;
                        return;
                    }
                    for (i8 = 1; i8 < 1; ++i8) {
                        Test0176.instanceCount %= ((long) (Test0176.fFld) | 1);
                        switch ((((i6 >>> 1) % 6) * 5) + 43) {
                        case 60:
                            Test0176.iArrFld[i8 + 1] = i7;
                            i5 -= s;
                        case 45:
                            i7 += (((i8 * Test0176.instanceCount) + Test0176.instanceCount) - i7);
                            Test0176.instanceCount += Test0176.instanceCount;
                        case 48:
                        case 57:
                            Test0176.instanceCount += (((i8 * i6) + i5) - i8);
                            break;
                        case 71:
                            i7 -= (int) Test0176.instanceCount;
                            break;
                        case 66:
                            i7 = (int)8528237894265232943L;
                            break;
                        default:
                            i9 += i8;
                        }
                    }
                }
            }
        }
        catch (NegativeArraySizeException exc1) {
            i9 -= i10;
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + s + i10;
    }

    public static long lMeth(int i2) {

        long l1=-1447003151503303703L;
        int i3=0, i11=-11, i12=-10;
        double d=-22.107896;
        boolean b=false;
        short s1=-6274;

        for (l1 = 14; l1 < 293; ++l1) {
            Test0176.iArrFld[(int) (l1 - 1)] ^= (i2--);
            vMeth();
            i2 += (int)(l1 * l1);
            if (b) {
                i2 >>= (int) Test0176.instanceCount;
                i2 = 10;
                i2 = (int)d;
                Test0176.iFld = Test0176.iFld;
            }
            i2 = i2;
            i2 |= i2;
            Test0176.iArrFld[(221 >>> 1) % N] &= Test0176.iFld;
            for (i11 = 1; i11 < 6; ++i11) {
                s1 = (short) Test0176.instanceCount;
                Test0176.iFld *= -43564;
            }
        }
        long meth_res = i2 + l1 + i3 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i11 + i12 + s1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(long l, int i) {

        float f=51.1002F;
        int i1=-44221, i13=-251, i14=5, i15=4;

        for (f = 5; 352 > f; f++) {
            i1 = (int)lMeth(51471);
            Test0176.iArrFld[(int) (f)] *= i;
            for (i13 = 1; i13 < 5; ++i13) {
                Test0176.iFld += i13;
                i15 = 2;
                do {
                    Test0176.instanceCount -= 53430;
                    Test0176.fArrFld[(int) (f)] = Test0176.iFld;
                    i14 += (i15 * i1);
                    l >>>= -927140877162167678L;
                    i *= (int)l;
                } while ((i15 -= 3) > 0);
                Test0176.iArrFld[i13 - 1] -= (int) Test0176.instanceCount;
                Test0176.fFld -= i15;
                i1 += i13;
                i1 >>= i15;
            }
        }
        long meth_res = l + i + Float.floatToIntBits(f) + i1 + i13 + i14 + i15;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s2=8959;
        int i16=-12;
        int i17=10;
        int i18=6718;
        int i19=-186;
        int i20=-25947;
        int i21=-10;
        int[] iArr =new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr, -193);

        Test0176.lArrFld[(Test0176.iFld >>> 1) % N] <<= Test0176.iFld;
        Test0176.iFld += (Test0176.iFld++);
        Test0176.instanceCount -= ((~(long) (Test0176.iFld *= (int) Test0176.fFld)) * (++iArr[(Test0176.iFld >>> 1) % N]));
        iArr[(Test0176.iFld >>> 1) % N] = (++Test0176.iFld);
        Test0176.instanceCount += (iMeth(-189L, -46146) - -2);
        iArr[(-50687 >>> 1) % N] *= s2;
        Test0176.iFld += (int) Test0176.instanceCount;
        Test0176.iFld = Test0176.iFld;
        switch (((Test0176.iFld >>> 1) % 2) + 112) {
        case 112:
            for (i16 = 8; 153 > i16; ++i16) {
                for (i18 = 173; i18 > 3; i18--) {
                    for (i20 = i16; i20 < 2; ++i20) {
                        Test0176.iFld += (int) Test0176.fFld;
                        Test0176.iFld += (i20 | i16);
                        if (true) break;
                        i21 <<= Test0176.iFld;
                        Test0176.instanceCount += (i20 ^ s2);
                        iArr[i18 - 1] -= i19;
                        if (b1) break;
                        if (false) {
                            Test0176.iArrFld[i20] -= i19;
                            Test0176.fFld = -9;
                            i17 += (((i20 * i21) + Test0176.fFld) - Test0176.fFld);
                            Test0176.instanceCount = Test0176.instanceCount;
                        } else if (b1) {
                            Test0176.iFld += i20;
                        } else {
                            i19 += (((i20 * i17) + i19) - Test0176.iFld);
                            i19 *= (int)-2.34799;
                            Test0176.fFld -= Test0176.instanceCount;
                            i21 += i20;
                        }
                    }
                    Test0176.fFld -= -58600;
                }
            }
        case 113:
            Test0176.instanceCount *= Test0176.iFld;
            break;
        }

        FuzzerUtils.out.println("s2 i16 i17 = " + s2 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 b1 iArr = " + i21 + "," + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0176.instanceCount Test0176.iFld Test0176.fFld = " + Test0176.instanceCount + "," + Test0176.iFld +
                "," + Float.floatToIntBits(Test0176.fFld));
        FuzzerUtils.out.println("Test0176.lArrFld Test0176.iArrFld Test0176.fArrFld = " + FuzzerUtils.checkSum(Test0176.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0176.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0176.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0176 _instance = new Test0176();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
