// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0780 {

    public static final int N = 400;

    public static volatile long instanceCount=-2954948208L;
    public static int iFld=3;
    public float fFld=-56.858F;
    public short sFld=2527;
    public static long[] lArrFld =new long[N];
    public volatile int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0780.lArrFld, 2L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, long l1) {

        byte by=76;
        short s=-1310;
        float f=109.719F;
        int i3=-23421;
        int i4=-107;
        int i5=8;
        int[] iArr =new int[N];
        double d1=127.69740;
        boolean b1=true;

        FuzzerUtils.init(iArr, 107);

        by *= (byte) Test0780.iFld;
        for (int i2 : iArr) {
            long l2=-3135975615L;
            l2 = s;
            f = Test0780.iFld;
        }
        i3 = 1;
        do {
            Test0780.iFld -= s;
            l += 4;
            if (b1) {
                d1 -= f;
                Test0780.iFld = -93;
                for (i4 = 1; i4 < 7; i4++) {
                    iArr[i3] &= i4;
                    i5 >>= -53361;
                    d1 = 4;
                    l -= i3;
                }
            } else if (true) {
                i5 += (i3 * i3);
            }
        } while (++i3 < 229);
        vMeth1_check_sum += l + l1 + by + s + Float.floatToIntBits(f) + i3 + Double.doubleToLongBits(d1) + i4 + i5 +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i6=-3;
        int i7=56587;
        int i8=12;
        int i9=227;
        int[] iArr1 =new int[N];
        float f1=110.776F;
        double d2=-1.88638;

        FuzzerUtils.init(iArr1, -10);

        vMeth1(238L, 216L);
        for (i6 = 18; i6 < 390; ++i6) {
            switch (((Test0780.iFld >>> 1) % 5) + 109) {
            case 109:
                Test0780.iFld = (int) 9L;
                Test0780.instanceCount = (long) f1;
            case 110:
                Test0780.instanceCount <<= i6;
                if (true) {
                    for (i8 = 1; i8 < 5; i8 += 2) {
                        i7 = (int) Test0780.instanceCount;
                        i9 = (int)d2;
                        Test0780.instanceCount -= i6;
                        i7 &= i9;
                        d2 = i9;
                    }
                    d2 = Test0780.instanceCount;
                    iArr1[i6 + 1] -= Test0780.iFld;
                } else {
                    Test0780.instanceCount -= Test0780.iFld;
                }
                break;
            case 111:
                f1 *= Test0780.instanceCount;
                break;
            case 112:
                iArr1[i6 + 1] *= i8;
                break;
            case 113:
                i9 ^= i9;
                break;
            }
        }
        vMeth_check_sum += i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(boolean b) {

        double d3=-29.32680;
        int i10=250;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 88.617F);

        vMeth();
        Test0780.iFld <<= Test0780.iFld;
        Test0780.iFld = (int) Test0780.instanceCount;
        for (d3 = 373; d3 > 18; d3--) {
            Test0780.instanceCount = 8;
            Test0780.iFld *= -58703;
            fArr[(int)(d3 + 1)] += i10;
            Test0780.instanceCount = Test0780.iFld;
        }
        i10 -= i10;
        Test0780.instanceCount += Test0780.iFld;
        Test0780.iFld += Test0780.iFld;
        long meth_res = (b ? 1 : 0) + Double.doubleToLongBits(d3) + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-207, i1=-41190, i11=-8, i12=-2, i13=-9717, i14=13;
        double d=125.107551;
        boolean b2=false;
        byte by1=-122;

        for (i = 2; i < 325; i++) {
            d -= lMeth(b2);
            i1 += (i + Test0780.iFld);
            Test0780.iFld += Test0780.iFld;
            for (i11 = 2; i11 < 78; ++i11) {
                Test0780.lArrFld[i - 1] = Test0780.instanceCount;
                i12 += (i11 ^ i11);
                for (i13 = 1; i13 < 2; i13++) {
                    i12 -= i13;
                    iArrFld[i + 1] = iArrFld[i + 1];
                    b2 = b2;
                    fFld = i11;
                    if (b2) break;
                    if (b2) break;
                    Test0780.instanceCount += i1;
                    Test0780.instanceCount = (long) d;
                    switch (((-9 >>> 1) % 8) + 101) {
                    case 101:
                        if (b2) {
                            Test0780.instanceCount = Test0780.instanceCount;
                            i12 += -224;
                        }
                        Test0780.instanceCount = Test0780.instanceCount;
                        Test0780.instanceCount += (-62474 + (i13 * i13));
                        i1 += i13;
                        break;
                    case 102:
                        i12 = (int)fFld;
                        break;
                    case 103:
                        i1 += (i13 + i12);
                    case 104:
                        Test0780.iFld = (int) Test0780.instanceCount;
                        break;
                    case 105:
                        fFld += -15189;
                        iArrFld[i11 - 1][i13 - 1] -= by1;
                        break;
                    case 106:
                        iArrFld[i13][i11 + 1] -= i1;
                        sFld = (short)i;
                        break;
                    case 107:
                        i12 -= i14;
                        break;
                    case 108:
                        Test0780.iFld |= 2;
                        break;
                    default:
                        Test0780.instanceCount = Test0780.iFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("b2 i11 i12 = " + (b2 ? 1 : 0) + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 by1 = " + i13 + "," + i14 + "," + by1);

        FuzzerUtils.out.println("Test0780.instanceCount Test0780.iFld fFld = " + Test0780.instanceCount + "," + Test0780.iFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("sFld Test0780.lArrFld iArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test0780.lArrFld) + ","
            + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0780 _instance = new Test0780();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
