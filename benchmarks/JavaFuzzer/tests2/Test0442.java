// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0442 {

    public static final int N = 400;

    public static long instanceCount=-3814545327L;
    public static float fFld=-2.512F;
    public static double dFld=1.23249;
    public static short[][] sArrFld =new short[N][N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0442.sArrFld, (short) -3581);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(float f1, float f2) {

        int i7=0, i8=-5, i9=64926, i10=-11, i11=171, i12=20289;
        boolean b1=true;
        long l=-49835L;
        float f3=44.594F;
        short s=7305;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)12);

        Test0442.instanceCount = i7;
        if (b1) {
            for (i8 = 4; 123 > i8; ++i8) {
                f1 += 3;
                if (b1) continue;
                l += (i8 * i8);
                for (f3 = 1; f3 < 13; ++f3) {
                    Test0442.sArrFld[(int) (f3)] = Test0442.sArrFld[(int) (f3 + 1)];
                    i7 += 1;
                    f2 += ((long) f3 | (long) Test0442.instanceCount);
                }
                byArr[i8 + 1] = (byte) Test0442.instanceCount;
                Test0442.instanceCount = i9;
                for (i11 = 1; i11 < 13; ++i11) {
                    i10 += i8;
                    s = (short)-12;
                }
            }
        } else if (b1) {
            i12 = i10;
        }
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i7 + i8 + i9 + (b1 ? 1 : 0) + l +
            Float.floatToIntBits(f3) + i10 + i11 + i12 + s + FuzzerUtils.checkSum(byArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(int i3) {

        int i4=-8;
        int i5=52827;
        int i6=29044;
        int i13=8;
        int i14=-28722;
        int[] iArr1 =new int[N];
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr1, 8);
        FuzzerUtils.init(fArr, 0.998F);

        i3 -= (int) (Test0442.instanceCount++);
        iArr1[(i3 >>> 1) % N] = i3;
        for (i4 = 4; i4 < 175; i4++) {
            i6 = 1;
            while (++i6 < 9) {
                i3 |= (int)Math.abs(Math.abs(i3 * i3));
                i3 += (i3 = sMeth(-9.234F, Test0442.fFld));
                for (i13 = 1; i13 > 1; --i13) {
                    i14 += (((i13 * i4) + i5) - i13);
                    i14 = i3;
                    i3 += (int) Test0442.instanceCount;
                }
                fArr[i6][i4 - 1] += Test0442.fFld;
                i14 *= i6;
                i3 += (int) Test0442.fFld;
                i3 <<= i3;
                i5 >>>= (int) Test0442.instanceCount;
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + i13 + i14 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(boolean b, int i1, float f) {

        int i2=-509;
        int i15=252;
        int i16=2;
        int i17=11;
        int[] iArr =new int[N];
        double d=42.58373;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -14943);
        FuzzerUtils.init(lArr, 102L);

        i2 = 228;
        do {
            iArr[i2] = (int) (((i1 >>> i1) - (Test0442.instanceCount - i2)) * (2537847381425689002L << (i2 * i2)));
            vMeth(i2);
            i1 *= i2;
            i1 = (int) Test0442.fFld;
            lArr[i2] |= -222;
            i1 += (int) Test0442.instanceCount;
            i1 = -73;
        } while ((i2 -= 2) > 0);
        i1 = i1;
        for (i15 = 2; i15 < 234; i15++) {
            i16 >>= i16;
            i17 = 1;
            do {
                i1 += (10 + (i17 * i17));
                i1 |= i17;
                i1 -= (int)d;
            } while (++i17 < 7);
        }
        long meth_res = (b ? 1 : 0) + i1 + Float.floatToIntBits(f) + i2 + i15 + i16 + i17 + Double.doubleToLongBits(d)
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=-105;
        byte[] byArr1 =new byte[N];
        int i=11, i18=22659, i19=-112, i20=25872, i21=-3, i22=8487, i23=-6, i24=-8;
        short s1=-11705;
        boolean b2=true;
        double[] dArr =new double[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(dArr, 2.105795);
        FuzzerUtils.init(lArr1, -12L);
        FuzzerUtils.init(byArr1, (byte)46);

        Test0442.fFld += (by + 14);
        i = (int) ((++Test0442.instanceCount) * ((Test0442.instanceCount * i) * Integer.reverseBytes(i)));
        dArr[(i >>> 1) % N] -= (((i--) + iMeth(true, i, 1.1012F)) + i);
        Test0442.instanceCount <<= 9;
        iArrFld[(i >>> 1) % N] <<= (int) Test0442.instanceCount;
        i <<= i;
        i18 = 1;
        while (++i18 < 181) {
            for (i19 = 6; i19 < 139; i19++) {
                Test0442.fFld += i19;
                i20 <<= i;
                i = (int) Test0442.instanceCount;
                Test0442.instanceCount += (((i19 * Test0442.instanceCount) + i19) - by);
                for (i21 = 1; i21 < 2; i21++) {
                    i = (int) Test0442.instanceCount;
                    i *= s1;
                    i -= i22;
                    i = (int) Test0442.instanceCount;
                    lArr1[(i21 >>> 1) % N] = 184L;
                    i22 += i21;
                    dArr[i21] -= i;
                    i -= -6390;
                    i = (int) Test0442.fFld;
                }
                byArr1[i19 + 1] -= (byte)i19;
            }
            for (i23 = 4; i23 < 139; i23 += 3) {
                b2 = b2;
            }
            Test0442.dFld += i19;
            Test0442.fFld = i21;
        }
        i += by;
        i20 ^= i18;
        s1 = (short)i20;

        FuzzerUtils.out.println("by i i18 = " + by + "," + i + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 s1 i23 = " + i22 + "," + s1 + "," + i23);
        FuzzerUtils.out.println("i24 b2 dArr = " + i24 + "," + (b2 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("lArr1 byArr1 = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0442.instanceCount Test0442.fFld Test0442.dFld = " + Test0442.instanceCount + "," +
                Float.floatToIntBits(Test0442.fFld) + "," + Double.doubleToLongBits(Test0442.dFld));
        FuzzerUtils.out.println("Test0442.sArrFld iArrFld = " + FuzzerUtils.checkSum(Test0442.sArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0442 _instance = new Test0442();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
