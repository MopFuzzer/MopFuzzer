// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0045 {

    public static final int N = 400;

    public static long instanceCount=2040118364849199806L;
    public static double dFld=120.76895;
    public static boolean bFld=false;
    public byte byFld=-121;
    public static int iFld=11273;
    public int[][] iArrFld =new int[N][N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i8, short s1, int i9) {

        float f1=-104.802F;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 0);

        iArr[(i8 >>> 1) % N] -= (int)f1;
        long meth_res = i8 + s1 + i9 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(short s, long l1) {

        int i4=175, i5=141, i6=2, i7=29453;
        float f=-123.73F;
        byte by1=66;

        for (i4 = 384; i4 > 2; i4 -= 2) {
            i5 *= (int)l1;
            for (i6 = 1; i6 < 8; ++i6) {
                f += i4;
                Test0045.instanceCount += (((i6 * i5) + f) - l1);
                i7 |= (++i7);
                i7 *= ((~by1) * iMeth(i7, s, i5));
                l1 += (long) Test0045.dFld;
                f -= f;
            }
        }
        i7 -= by1;
        vMeth1_check_sum += s + l1 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + by1;
    }

    public static void vMeth(long l, int i, int i1) {

        int i2=-49008, i3=-43211, i10=-17466;
        byte by=-24;

        i2 = 1;
        while (++i2 < 346) {
            i3 = 1;
            while (++i3 < 5) {
                float f2=0.584F;
                i1 -= (by++);
                vMeth1((short) (11274), Test0045.instanceCount);
                i1 ^= by;
                i >>= i10;
                f2 = f2;
            }
        }
        vMeth_check_sum += l + i + i1 + i2 + i3 + by + i10;
    }

    public void mainTest(String[] strArr1) {

        int i11=-128, i12=8, i13=13, i14=63159, i15=-18954, i16=-1, i17=-33644, i18=8450, i19=-60322, i20=8, i21=-7;
        float f3=0.477F;
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -3692251280672024506L);

        vMeth(Test0045.instanceCount, i11, i11);
        Test0045.bFld = Test0045.bFld;
        for (i12 = 2; i12 < 201; ++i12) {
            for (f3 = 1; f3 < 126; f3++) {
                long l2=698871633328606919L;
                i11 += (int)f3;
                l2 = Test0045.instanceCount;
                Test0045.dFld = byFld;
                i14 |= i14;
            }
            i11 -= i11;
            for (i15 = 126; i15 > 2; i15--) {
                i14 %= (int) (Test0045.instanceCount | 1);
                if (b) break;
                i17 = 2;
                while (--i17 > 0) {
                    lArr[i12] = Test0045.instanceCount;
                }
                iArrFld[i12 - 1][i15 + 1] <<= i13;
                for (i18 = 1; 2 > i18; ++i18) {
                    float f4=0.720F;
                    if (false) continue;
                    Test0045.instanceCount += (i18 * i18);
                    f4 += Test0045.instanceCount;
                    i19 *= -29907;
                    iArrFld[i15 - 1][i18 - 1] <<= Test0045.iFld;
                }
                if (Test0045.bFld) continue;
            }
            for (i20 = i12; 126 > i20; i20++) {
                try {
                    i16 = (-1067990290 / i13);
                    i13 = (i21 % 50085);
                    i11 = (i13 / -2);
                } catch (ArithmeticException a_e) {}
                iArrFld[i12 - 1][i12 - 1] = (int) Test0045.instanceCount;
                Test0045.instanceCount = (long) f3;
                Test0045.iFld += (((i20 * Test0045.iFld) + Test0045.instanceCount) - i14);
                if (Test0045.bFld) continue;
            }
        }
        Test0045.iFld ^= 4;
        Test0045.iFld += (int) Test0045.instanceCount;

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("f3 i14 i15 = " + Float.floatToIntBits(f3) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 b i17 = " + i16 + "," + (b ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 lArr = " + i21 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0045.instanceCount Test0045.dFld Test0045.bFld = " + Test0045.instanceCount + "," +
                Double.doubleToLongBits(Test0045.dFld) + "," + (Test0045.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test0045.iFld iArrFld = " + byFld + "," + Test0045.iFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0045 _instance = new Test0045();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
