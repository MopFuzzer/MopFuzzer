// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0880 {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static double dFld=-89.25982;
    public volatile boolean bFld=false;
    public static byte byFld=-71;
    public float[] fArrFld =new float[N];
    public static volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0880.lArrFld, -11021L);
    }

    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i8, int i9, int i10) {

        int i11=12766, i12=-34, i13=-44887, i14=-7, i15=23, i16=58, i17=52787, i18=10;
        boolean b1=true;
        float f2=-1.229F;

        for (i11 = 19; i11 < 365; i11++) {
            i12 = i12;
        }
        Test0880.instanceCount &= -58775;
        i8 -= (int)-7.17672;
        for (i13 = 2; 139 > i13; i13 += 2) {
            for (i15 = 1; i15 < 23; i15++) {
                if (b1) break;
                Test0880.instanceCount *= i14;
                i14 = i12;
                for (i17 = 1; i17 < 2; i17++) {
                    try {
                        i8 = (i8 % i9);
                        i18 = (i16 % 199);
                        i14 = (2109519717 % i11);
                    } catch (ArithmeticException a_e) {}
                    i14 += (int) Test0880.instanceCount;
                    i8 = (int)f2;
                    i10 += i17;
                    i16 -= (int) Test0880.instanceCount;
                }
            }
        }
        vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + i17 + i18 +
            Float.floatToIntBits(f2);
    }

    public boolean bMeth(float f1, int i5) {

        int i6=-148;
        int i7=-13849;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 20390);

        Test0880.instanceCount += iArr1[(i5 >>> 1) % N];
        i5 += i5;
        for (i6 = 4; i6 < 125; i6++) {
            vMeth(-42428, i5, i6);
            i7 += i6;
        }
        iArr1[(i5 >>> 1) % N] *= (int) Test0880.dFld;
        long meth_res = Float.floatToIntBits(f1) + i5 + i6 + i7 + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public int iMeth(int i1, int i2, long l) {

        short s=-6111;
        int i3=-56;
        int i4=-9;
        int i19=-93;
        int i20=10;
        int i21=-35821;
        int[] iArr =new int[N];
        float f=-20.114F;
        float[] fArr =new float[N];
        byte by=124;
        boolean b=false;

        FuzzerUtils.init(fArr, -2.551F);
        FuzzerUtils.init(iArr, 6);

        s = (short)i2;
        for (i3 = 4; i3 < 198; ++i3) {
            fArr = (fArr = (fArr = fArr));
            if (i3 != 0) {
            }
            iArr[i3 + 1] = i4;
            f += i1;
            i2 = (int) ((Test0880.instanceCount -= (by++)) - ((i1 - 13) - (l * Test0880.dFld)));
            b = (bMeth(-60.826F, i3) | b);
            b = b;
            if (true) break;
        }
        for (i19 = 17; i19 < 382; i19++) {
            i20 >>= i4;
        }
        i2 *= i4;
        iArr[(i19 >>> 1) % N] = i21;
        i21 &= i20;
        long meth_res = i1 + i2 + l + s + i3 + i4 + Float.floatToIntBits(f) + by + (b ? 1 : 0) + i19 + i20 + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=58737;
        int i22=170;
        int i23=-12;
        int i24=10;
        int i25=9;
        int i26=90;
        int i27=36469;
        int i28=-6814;
        int[] iArr2 =new int[N];
        short s1=14728;

        FuzzerUtils.init(iArr2, -9);

        i -= Math.abs((16 + (i--)) + i);
        i >>= (int) (-(iMeth(i22, i22, Test0880.instanceCount) - Test0880.instanceCount));
        for (i23 = 394; i23 > 13; i23--) {
            i25 = 1;
            do {
                i24 = (int) Test0880.instanceCount;
                i26 = 1;
                while (++i26 < 1) {
                    i22 += i23;
                    iArr2[i26 + 1] += i24;
                    if (bFld) break;
                    if (bFld) break;
                    Test0880.byFld = (byte) i24;
                    i <<= i26;
                }
                iArr2[i25] = -18519;
                s1 >>= (short)i;
                fArrFld = fArrFld;
                i += (i25 - i22);
                i24 += (0 + (i25 * i25));
                for (i27 = 1; i27 < 1; i27 += 3) {
                    float f3=80.928F;
                    switch ((i25 % 2) + 53) {
                    case 53:
                        Test0880.instanceCount |= 0;
                        iArr2[i25 + 1] <<= i28;
                        Test0880.instanceCount = s1;
                        Test0880.instanceCount = i27;
                        break;
                    case 54:
                        i22 -= i24;
                        f3 += i27;
                        iArr2[i27] += i24;
                        Test0880.lArrFld[i25 - 1] -= -220;
                    default:
                        i22 += (i27 - s1);
                        Test0880.dFld *= i23;
                        try {
                            i24 = (2601 % i24);
                            i28 = (4799 / iArr2[i25 - 1]);
                            i28 = (i26 / 1203444495);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            } while (++i25 < 66);
        }

        FuzzerUtils.out.println("i i22 i23 = " + i + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("s1 i27 i28 = " + s1 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0880.instanceCount Test0880.dFld bFld = " + Test0880.instanceCount + "," +
                Double.doubleToLongBits(Test0880.dFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0880.byFld fArrFld Test0880.lArrFld = " + Test0880.byFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(Test0880.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0880 _instance = new Test0880();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
