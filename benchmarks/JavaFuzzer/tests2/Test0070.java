// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0070 {

    public static final int N = 400;

    public static long instanceCount=-3400865235L;
    public double dFld=45.16539;
    public static short sFld=-6544;
    public static double dFld1=1.16974;
    public static double[] dArrFld =new double[N];
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0070.dArrFld, 33.96688);
        FuzzerUtils.init(Test0070.iArrFld, 13);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, long l, long l1) {

        byte by=84;
        int i6=43502;
        int i7=-25503;
        int i8=10;
        int i9=-88;
        int[] iArr =new int[N];
        float f3=17.372F;
        double d1=109.92024, d2=0.114768;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, -4160L);
        FuzzerUtils.init(iArr, -223);

        by %= (byte) (Test0070.instanceCount | 1);
        for (i6 = 3; i6 < 140; i6++) {
            switch (((i6 % 2) * 5) + 91) {
            case 99:
                if (true) break;
                i5 = i6;
                break;
            case 97:
                i8 = 11;
                while (--i8 > 0) {
                    lArr[i8][i8 + 1] -= i5;
                }
                if (true) continue;
                for (f3 = 1; f3 < 11; f3++) {
                    d1 = 1;
                    do {
                        switch (((i9 >>> 1) % 7) + 111) {
                        case 111:
                            iArr = iArr;
                            Test0070.instanceCount *= Test0070.instanceCount;
                            i5 += (int)d1;
                            d2 = l;
                            break;
                        case 112:
                            Test0070.sFld -= (short) Test0070.instanceCount;
                        case 113:
                            i5 <<= -58160;
                        case 114:
                            l1 += (long)(d1 - l1);
                        case 115:
                            d2 -= i5;
                            break;
                        case 116:
                            i9 += (int)f3;
                        case 117:
                            Test0070.dArrFld = Test0070.dArrFld;
                            break;
                        }
                    } while (++d1 < 2);
                }
            }
        }
        long meth_res = i5 + l + l1 + by + i6 + i7 + i8 + Float.floatToIntBits(f3) + i9 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4) {

        float f2=-1.478F;
        int i10=13, i11=12, i12=208, i13=-29409, i14=10;
        byte by1=59;

        i4 ^= (int) Test0070.instanceCount;
        f2 = (((112.902F - (Test0070.instanceCount + f2)) + i4) + (++i4));
        Test0070.instanceCount = (Math.max(i4--, i4) - (i4++));
        i4 &= iMeth(i4, Test0070.instanceCount, Test0070.instanceCount);
        for (i10 = 7; i10 < 270; i10++) {
            Test0070.dFld1 -= Test0070.dFld1;
            for (i12 = i10; i12 < 6; ++i12) {
                if (i11 != 0) {
                    vMeth_check_sum += i4 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + by1 + i14;
                    return;
                }
                i4 <<= 151;
                by1 = (byte)i11;
                i4 = (int) Test0070.instanceCount;
                Test0070.iArrFld[i10][i10 - 1] |= i13;
                i14 = i4;
                Test0070.iArrFld[i12 + 1][i10] += i13;
                i14 += (i12 * i12);
            }
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + by1 + i14;
    }

    public static long lMeth(double d, int i1) {

        int i2=9984, i3=-25609, i15=-5959, i16=27523;
        byte by2=-3;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -1.900F);

        for (i2 = 1; i2 < 233; i2++) {
            float f4=95.306F;
            vMeth(i1);
            if (i3 != 0) {
            }
            Test0070.instanceCount <<= i3;
            Test0070.dFld1 -= f4;
            Test0070.instanceCount += i2;
            f4 *= i3;
            switch (((i2 % 8) * 5) + 57) {
            case 67:
                i1 = i2;
                Test0070.sFld ^= Test0070.sFld;
                break;
            case 61:
                i1 += 81;
                i3 += i2;
                for (i15 = 1; i15 < 7; ++i15) {
                    fArr[i2 - 1] *= (float)d;
                    Test0070.instanceCount += i16;
                }
                break;
            case 80:
                i1 *= i2;
                break;
            case 70:
                i3 = i2;
                break;
            case 94:
                f4 = (float) Test0070.dFld1;
                break;
            case 92:
                i1 += i2;
                break;
            case 60:
                i3 += i2;
                break;
            case 86:
                by2 += (byte)i2;
                break;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i1 + i2 + i3 + i15 + i16 + by2 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-46.628F, f1=-89.692F;
        int i=67, i17=-1, i18=-56022, i19=-7, i20=66, i21=25151, i22=-78;
        boolean b=false;
        long l2=11L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 111L);

        for (f = 5; f < 296; f++) {
            i = (int)Math.abs((long)(-(i * dFld)));
            i += (int)f;
            i += (int)(((f * i) + i) - i);
            Test0070.instanceCount += ((long) ((--f1) - (Test0070.instanceCount - i)) >>> (long) ((i - f1) % ((53000L +
                    (962712935L - lMeth(Test0070.dFld1, i))) | 1)));
            b = b;
            i <<= i;
        }
        for (l2 = 359; l2 > 10; --l2) {
            switch ((((i >>> 1) % 2) * 5) + 2) {
            case 7:
                Test0070.instanceCount = l2;
                i18 = 1;
                while (++i18 < 72) {
                    lArr1[i18 + 1] -= 20929;
                }
                break;
            case 10:
                f1 *= f;
            default:
                f1 = i18;
                f1 *= i17;
                Test0070.dFld1 *= 51.98023;
                i17 -= (int)-3286964878965138042L;
            }
            for (i19 = 1; i19 < 72; ++i19) {
                for (i21 = 1; 2 > i21; i21 += 3) {
                    i22 = i21;
                    b = b;
                    Test0070.iArrFld[(int) (l2)][(int) (l2)] += i19;
                    f1 = -29749;
                    f1 -= Test0070.instanceCount;
                    i17 = i;
                    i17 -= i19;
                }
                Test0070.iArrFld = Test0070.iArrFld;
                Test0070.sFld += Test0070.sFld;
            }
        }
        Test0070.instanceCount = i19;

        FuzzerUtils.out.println("f i f1 = " + Float.floatToIntBits(f) + "," + i + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("b l2 i17 = " + (b ? 1 : 0) + "," + l2 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 lArr1 = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0070.instanceCount dFld Test0070.sFld = " + Test0070.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0070.sFld);
        FuzzerUtils.out.println("Test0070.dFld1 Test0070.dArrFld Test0070.iArrFld = " + Double.doubleToLongBits(Test0070.dFld1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0070.dArrFld)) + "," + FuzzerUtils.checkSum(Test0070.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0070 _instance = new Test0070();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
