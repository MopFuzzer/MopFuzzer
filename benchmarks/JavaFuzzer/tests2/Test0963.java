// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0963 {

    public static final int N = 400;

    public static long instanceCount=6941L;
    public static float fFld=2.389F;
    public static int iFld=2;
    public static boolean bFld=true;
    public static double dFld=-16.127748;
    public int[] iArrFld =new int[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i9, int i10, int i11) {

        long l1=-63092L;
        int i12=7, i13=58641, i14=234, i15=5, i16=78;
        short s1=10975;
        boolean b=true;

        i9 += i9;
        for (l1 = 21; l1 < 371; l1++) {
            i9 = i11;
            i9 += 11;
            for (i13 = 1; 5 > i13; i13++) {
                i14 = s1;
                for (i15 = 1; i15 < 2; i15++) {
                    i11 = (int) Test0963.instanceCount;
                    if (b) break;
                    switch ((i15 % 8) + 38) {
                    case 38:
                        i12 = i9;
                        break;
                    case 39:
                        Test0963.instanceCount -= l1;
                        i9 *= i16;
                        i9 >>= -81;
                        i16 = 65;
                        break;
                    case 40:
                        if (b) continue;
                        break;
                    case 41:
                        i11 += (((i15 * i13) + Test0963.iFld) - s1);
                        break;
                    case 42:
                        Test0963.instanceCount = 1L;
                        break;
                    case 43:
                        Test0963.instanceCount = s1;
                        break;
                    case 44:
                        Test0963.instanceCount = i11;
                        break;
                    case 45:
                        i16 -= i11;
                        break;
                    }
                }
            }
        }
        long meth_res = i9 + i10 + i11 + l1 + i12 + i13 + i14 + s1 + i15 + i16 + (b ? 1 : 0);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(short s, long l) {

        int i4=-59025;
        int i5=-28618;
        int i6=0;
        int i7=-6;
        int i8=-156;
        int[] iArr =new int[N];
        float f1=0.173F;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr, 29318);
        FuzzerUtils.init(sArr, (short)27895);

        i4 += ((Integer.reverseBytes(8) + Math.min(i4, i4)) + ((iArr[(-13 >>> 1) % N] *= -23931) + (i4 - i4)));
        i4 &= Math.min((int) (i4 >>= (int) Test0963.instanceCount), (int) (i4 += (int) Test0963.fFld));
        Test0963.fFld = iArr[(i4 >>> 1) % N];
        i4 *= (Math.min(i4, (int) (Test0963.fFld + -12)) + i4);
        i4 += (int) ((Test0963.instanceCount + (Test0963.fFld--)) + (iArr[(54 >>> 1) % N]++));
        i5 = 1;
        while ((i5 += 2) < 179) {
            switch (((((++i4) >>> 1) % 10) * 5) + 14) {
            case 48:
            case 20:
                for (f1 = 1; 17 > f1; f1++) {
                    i4 *= i6;
                    for (i7 = 1; i7 < 2; ++i7) {
                        Test0963.instanceCount >>= sArr[i7 + 1];
                    }
                    switch (((i4 >>> 1) % 5) + 116) {
                    case 116:
                        iArr[i5 - 1] += (int) ((i4++) * lMeth1(i7, i7, Test0963.iFld));
                    case 117:
                        i6 = i8;
                        Test0963.bFld = Test0963.bFld;
                        break;
                    case 118:
                        iArr[(int)(f1)] -= -57;
                        break;
                    case 119:
                        i6 += (int)f1;
                    case 120:
                        i8 += i7;
                        break;
                    default:
                        Test0963.iFld = -199;
                    }
                }
            case 30:
                i8 = i4;
                break;
            case 50:
                s -= (short)i7;
                break;
            case 27:
                i6 &= i6;
                break;
            case 32:
                Test0963.iFld += i5;
            case 34:
            case 28:
                l += i5;
                break;
            case 42:
                if (Test0963.bFld) continue;
                break;
            case 36:
            }
        }
        vMeth_check_sum += s + l + i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
    }

    public static long lMeth(int i2, int i3, float f) {

        short s2=6000;
        int i17=6, i18=5, i19=86, i20=-4829, i21=195, i22=-54577;
        byte by=49;
        long l2=-231L;
        long[] lArr1 =new long[N];
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(lArr1, 50303L);
        FuzzerUtils.init(bArr, false);

        vMeth(s2, 1421947578L);
        for (i17 = 4; i17 < 121; ++i17) {
            Test0963.instanceCount = by;
            Test0963.fFld += i17;
            i2 -= (int) Test0963.instanceCount;
            Test0963.bFld = Test0963.bFld;
            switch (((9 >>> 1) % 3) + 31) {
            case 31:
                for (i19 = 1; i19 < 13; ++i19) {
                    s2 += (short)(i19 * i19);
                    Test0963.iFld = (int) Test0963.instanceCount;
                    for (i21 = 1; 2 > i21; i21++) {
                        Test0963.bFld = false;
                        Test0963.iFld = i2;
                        i2 = -114;
                    }
                    if (Test0963.bFld) break;
                }
                break;
            case 32:
                Test0963.instanceCount = l2;
            case 33:
                lArr1[i17] ^= i22;
                break;
            default:
                bArr[i17 - 1][i17 + 1] = Test0963.bFld;
            }
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f) + s2 + i17 + i18 + by + i19 + i20 + i21 + i22 + l2 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=41428, i23=7, i24=-7, i25=-3, i27=-2;
        short s3=8307;
        long l3=59676L;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 2667353768416595074L);

        for (i = 1; i < 154; i++) {
            lArr[i + 1] = (((i1 -= (int) 5L) * lMeth(i, -5034, Test0963.fFld)) - i);
            iArrFld[i + 1] += (int) Test0963.fFld;
            Test0963.instanceCount += (i * Test0963.iFld);
            Test0963.dFld = -8.22F;
            Test0963.iFld = Test0963.iFld;
            Test0963.instanceCount >>= i;
            Test0963.iFld >>= i1;
            Test0963.fFld += i;
        }
        Test0963.instanceCount -= (long) 71.79400;
        switch (((Test0963.iFld >>> 1) % 9) + 62) {
        case 62:
            i1 <<= i;
            break;
        case 63:
            iArrFld[(i1 >>> 1) % N] >>= i1;
            Test0963.iFld -= s3;
            for (i23 = 10; 189 > i23; ++i23) {
                switch ((i23 % 4) + 122) {
                case 122:
                    Test0963.instanceCount += (i23 + i24);
                    i24 += s3;
                    i25 = 1;
                    while (++i25 < 140) {
                        int i26=1;
                        iArrFld[i25 + 1] = -42995;
                        i26 += Test0963.iFld;
                    }
                    break;
                case 123:
                    if (Test0963.bFld) break;
                    for (l3 = 1; 140 > l3; l3 += 2) {
                        i24 += (int)l3;
                        Test0963.bFld = false;
                        i24 += (int)l3;
                    }
                    switch ((i23 % 7) + 22) {
                    case 22:
                        Test0963.dFld = 4708;
                        break;
                    case 23:
                    case 24:
                        Test0963.instanceCount = l3;
                        Test0963.instanceCount -= l3;
                        break;
                    case 25:
                        Test0963.dFld -= -141;
                    case 26:
                        Test0963.instanceCount -= i23;
                    case 27:
                        Test0963.instanceCount += i1;
                    case 28:
                        i27 -= (int) Test0963.fFld;
                        break;
                    default:
                        Test0963.instanceCount -= i25;
                    }
                    break;
                case 124:
                    lArr[i23 + 1] -= (long) Test0963.dFld;
                    break;
                case 125:
                    i24 |= -6;
                    break;
                default:
                    Test0963.iFld = i23;
                }
            }
        case 64:
            Test0963.iFld = (int) Test0963.instanceCount;
            break;
        case 65:
            i1 |= (int) Test0963.instanceCount;
            break;
        case 66:
            i1 -= Test0963.iFld;
        case 67:
        case 68:
            Test0963.iFld -= i25;
        case 69:
            i1 = 13;
        case 70:
            i1 -= i23;
            break;
        }

        FuzzerUtils.out.println("i i1 s3 = " + i + "," + i1 + "," + s3);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("l3 i27 lArr = " + l3 + "," + i27 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0963.instanceCount Test0963.fFld Test0963.iFld = " + Test0963.instanceCount + "," +
                Float.floatToIntBits(Test0963.fFld) + "," + Test0963.iFld);
        FuzzerUtils.out.println("Test0963.bFld Test0963.dFld iArrFld = " + (Test0963.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0963.dFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0963 _instance = new Test0963();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
