// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:30 2023
public class Test0395 {

    public static final int N = 400;

    public static long instanceCount=-6014858973273840838L;
    public static float fFld=-1.619F;
    public static int iFld=0;
    public volatile double[] dArrFld =new double[N];
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld1 =new double[N];
    public static short[] sArrFld =new short[N];
    public boolean[] bArrFld =new boolean[N];
    public byte[] byArrFld =new byte[N];

    static {
        FuzzerUtils.init(Test0395.iArrFld, -31718);
        FuzzerUtils.init(Test0395.dArrFld1, 90.84949);
        FuzzerUtils.init(Test0395.sArrFld, (short) 19671);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vSmallMeth(int i, float f, double d) {


        i = i;
        i = (-(i--));
        vSmallMeth_check_sum += i + Float.floatToIntBits(f) + Double.doubleToLongBits(d);
    }

    public static void vMeth1(double d3) {

        int i5=57170;
        int i6=-52624;
        int i7=65484;
        int i8=21;
        int i9=41659;
        int[][] iArr =new int[N][N];
        double d4=2.41765;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -8L);
        FuzzerUtils.init(iArr, 33999);

        Test0395.iArrFld[(Test0395.iFld >>> 1) % N] += i5;
        lArr[(i5 >>> 1) % N] *= Test0395.iFld;
        for (d4 = 16; 310 > d4; ++d4) {
            for (i7 = 1; 6 > i7; i7++) {
                i9 = 1;
                while (++i9 < 2) {
                    Test0395.instanceCount >>= 61277;
                    Test0395.instanceCount = i5;
                    Test0395.instanceCount >>>= Test0395.instanceCount;
                    d3 += Test0395.instanceCount;
                    Test0395.iArrFld[(int) (d4 - 1)] = (int) Test0395.instanceCount;
                    switch ((int)(((d4 % 1) * 5) + 108)) {
                    case 111:
                        iArr = FuzzerUtils.int2array(N, (int)4069);
                        Test0395.instanceCount = i5;
                        Test0395.iFld += (int) 11L;
                        Test0395.iFld += i6;
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d3) + i5 + Double.doubleToLongBits(d4) + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i3, long l) {

        long l1=805905432L;
        int i4=-64, i10=-202, i11=-12, i12=-121;
        boolean b=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)2262);

        for (l1 = 10; l1 < 194; l1 += 3) {
            if (b) {
                vMeth1(-58.75694);
            } else {
                for (i10 = 25; i10 > 1; i10--) {
                    Test0395.dArrFld1[i10 - 1] = Test0395.instanceCount;
                    i12 = 1;
                    while (++i12 < 2) {
                        l += i12;
                        sArr = sArr;
                        b = b;
                        l = Test0395.iFld;
                        i3 += (i12 - Test0395.iFld);
                        Test0395.iFld *= (int) Test0395.instanceCount;
                        if (b) {
                            Test0395.fFld = i10;
                        } else if (b) {
                            l += (((i12 * Test0395.fFld) + i10) - i4);
                        } else {
                            Test0395.fFld += (((i12 * Test0395.instanceCount) + Test0395.iFld) - Test0395.instanceCount);
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i3 + l + l1 + i4 + (b ? 1 : 0) + i10 + i11 + i12 + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth(float f1, double d2, int i2) {


        vMeth(Test0395.iFld, Test0395.instanceCount);
        long meth_res = Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + i2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i1=-141, i13=-9, i14=-9, i15=-147, i16=0, i17=54966, i18=65056, i19=160;
        double d1=0.61561;
        float f2=-2.612F, f3=58.383F;
        short s=-8091;
        boolean b1=false;
        byte by=4;

        for (int smallinvoc = 0; smallinvoc < 438; smallinvoc++) vSmallMeth(i1, Test0395.fFld = (--i1), d1);
        dArrFld[(i1 >>> 1) % N] *= (((d1 * i1) - (140 - (-10 * (-(i1 - i1))))) + iMeth(Test0395.fFld, d1, i1));
        for (i13 = 14; i13 < 260; ++i13) {
            for (f2 = 3; 102 > f2; ++f2) {
                for (i16 = 1; i16 < 2; ++i16) {
                    i17 += (i16 * i16);
                    i1 += (((i16 * i15) + i1) - i16);
                    i15 += i16;
                    i14 = (int) Test0395.instanceCount;
                    i15 += (int) Test0395.fFld;
                    Test0395.sArrFld[(int) (f2)] = (short) i16;
                    s = (short)i16;
                }
                for (i18 = 1; i18 < 2; i18++) {
                    Test0395.fFld -= i17;
                    i15 += i14;
                    i17 >>= Test0395.iFld;
                    bArrFld[i13] = b1;
                    i14 |= (int) Test0395.instanceCount;
                    Test0395.fFld = i13;
                    Test0395.iFld += 54053;
                    s += (short)i18;
                    Test0395.iFld = i14;
                    Test0395.instanceCount >>= Test0395.iFld;
                }
                f3 = 1;
                do {
                    i19 = i16;
                    byArrFld[(int)(f2 + 1)] *= (byte)i19;
                    d1 *= by;
                } while (++f3 < 2);
                Test0395.iFld = 204;
                i19 <<= (int) Test0395.instanceCount;
                Test0395.fFld = i15;
            }
        }

        FuzzerUtils.out.println("i1 d1 i13 = " + i1 + "," + Double.doubleToLongBits(d1) + "," + i13);
        FuzzerUtils.out.println("i14 f2 i15 = " + i14 + "," + Float.floatToIntBits(f2) + "," + i15);
        FuzzerUtils.out.println("i16 i17 s = " + i16 + "," + i17 + "," + s);
        FuzzerUtils.out.println("i18 i19 b1 = " + i18 + "," + i19 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("f3 by = " + Float.floatToIntBits(f3) + "," + by);

        FuzzerUtils.out.println("Test0395.instanceCount Test0395.fFld Test0395.iFld = " + Test0395.instanceCount + "," +
                Float.floatToIntBits(Test0395.fFld) + "," + Test0395.iFld);
        FuzzerUtils.out.println("dArrFld Test0395.iArrFld Test0395.dArrFld1 = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(Test0395.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0395.dArrFld1)));
        FuzzerUtils.out.println("Test0395.sArrFld bArrFld byArrFld = " + FuzzerUtils.checkSum(Test0395.sArrFld) + "," +
            FuzzerUtils.checkSum(bArrFld) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0395 _instance = new Test0395();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
