// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0964 {

    public static final int N = 400;

    public static long instanceCount=-227L;
    public volatile float fFld=47.146F;
    public double dFld=-64.34272;
    public static float fFld1=113.646F;
    public static byte byFld=-117;
    public int[] iArrFld =new int[N];
    public static byte[][] byArrFld =new byte[N][N];
    public static int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0964.byArrFld, (byte) -33);
        FuzzerUtils.init(Test0964.iArrFld1, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i7=-11706;
        int i8=10;
        int i9=11;
        int i10=-6;
        int i11=25567;
        int i12=88;
        int i13=-193;
        int[][] iArr =new int[N][N];
        byte by=-8;
        double d1=-2.28026;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-7794);
        FuzzerUtils.init(iArr, 1);

        i7 += i7;
        sArr[(i7 >>> 1) % N] = by;
        for (i8 = 325; 17 < i8; --i8) {
            for (i10 = 5; i10 > 1; i10 -= 2) {
                Test0964.fFld1 = i10;
            }
            i9 |= (int) Test0964.instanceCount;
            d1 = i9;
        }
        i9 += (int) Test0964.instanceCount;
        Test0964.instanceCount = i8;
        for (i12 = 5; i12 < 207; i12 += 3) {
            switch ((i12 % 7) + 43) {
            case 43:
                Test0964.instanceCount += i10;
                Test0964.iArrFld1[i12 - 1] = (int) Test0964.instanceCount;
                Test0964.instanceCount *= Test0964.instanceCount;
                Test0964.instanceCount += (((i12 * i7) + i9) - i10);
                break;
            case 44:
                i11 += (i12 + i10);
                break;
            case 45:
                Test0964.instanceCount = Test0964.instanceCount;
                break;
            case 46:
                iArr[i12 + 1][i12 + 1] = (int)5184L;
                break;
            case 47:
                if (i13 != 0) {
                }
                break;
            case 48:
                i7 = i9;
                break;
            case 49:
                iArr[i12 - 1][i12] = i7;
            default:
                Test0964.instanceCount = -58141L;
            }
        }
        long meth_res = i7 + by + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13 +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public int iMeth() {

        int i1=-180, i2=-312, i3=4, i4=-35437, i5=72, i6=131;
        boolean b=false;
        short s=8454;
        byte by1=-89;

        for (i1 = 15; i1 < 344; i1++) {
            i2 <<= (int) (Test0964.instanceCount = i2);
            iArrFld[i1] |= (int) ((Test0964.instanceCount--) + (-fFld));
            b = true;
            i2 += (((i1 * i2) + i1) - i2);
            Test0964.instanceCount <<= (long) (i2 - dFld);
            for (i3 = 1; i3 < 5; i3++) {
                for (i5 = 2; i5 > 1; i5 -= 2) {
                    i6 -= s;
                    Test0964.instanceCount -= 3;
                    i4 = -1;
                    Test0964.byArrFld[i3][i1 - 1] = (byte) (((--Test0964.instanceCount) + (dFld * fFld)) - dFld);
                    i2 >>= (int)(((80L + (i6--)) / (((long)(0L + (i6 = (int)fFld))) | 1)) + dMeth());
                    i2 += (((i5 * Test0964.instanceCount) + s) - i5);
                    i4 >>>= by1;
                }
            }
        }
        long meth_res = i1 + i2 + (b ? 1 : 0) + i3 + i4 + i5 + i6 + s + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(double d, int i) {

        float f=126.417F;
        int i14=13375, i15=-170;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -77.26996);

        f *= ((iMeth() - i) + 2513261944L);
        dFld = Test0964.byFld;
        for (i14 = 223; i14 > 5; i14 -= 2) {
            Test0964.fFld1 += Test0964.instanceCount;
        }
        dArr[(i >>> 1) % N] = fFld;
        vMeth_check_sum += Double.doubleToLongBits(d) + i + Float.floatToIntBits(f) + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i16=13;

        vMeth(dFld, i16);

        FuzzerUtils.out.println("i16 = " + i16);

        FuzzerUtils.out.println("Test0964.instanceCount fFld dFld = " + Test0964.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0964.fFld1 Test0964.byFld iArrFld = " + Float.floatToIntBits(Test0964.fFld1) + "," +
                Test0964.byFld + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0964.byArrFld Test0964.iArrFld1 = " + FuzzerUtils.checkSum(Test0964.byArrFld) + "," +
                FuzzerUtils.checkSum(Test0964.iArrFld1));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0964 _instance = new Test0964();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
