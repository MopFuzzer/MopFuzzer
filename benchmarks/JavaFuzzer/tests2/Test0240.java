// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0240 {

    public static final int N = 400;

    public static long instanceCount=-2470L;
    public float fFld=-8.866F;
    public static volatile double dFld=-65.121061;
    public volatile boolean bFld=false;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0240.iArrFld, -51420);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i1, long l) {

        byte by=57;
        int i2=96, i3=12, i4=-163, i5=-73;
        short s=-18431;
        double d=-1.7985;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 42.382F);
        FuzzerUtils.init(lArr, 14L);

        i1 += (int) Test0240.instanceCount;
        Test0240.instanceCount *= by;
        l = i1;
        fArr[(i1 >>> 1) % N] -= i1;
        for (i2 = 1; i2 < 158; ++i2) {
            i1 += i2;
            lArr[i2] = i3;
            i3 += i3;
        }
        switch ((((-229 >>> 1) % 1) * 5) + 42) {
        case 46:
            for (i4 = 7; i4 < 123; ++i4) {
                boolean b=true;
                i1 *= s;
                i3 -= i4;
                l -= (long)d;
                Test0240.iArrFld[i4 - 1] += i3;
                if (b) break;
            }
        default:
            d += Test0240.instanceCount;
        }
        vMeth1_check_sum += i1 + l + by + i2 + i3 + i4 + i5 + s + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        float f1=-2.723F;
        double d1=103.8047, d2=-1.48791;
        int i6=16765, i7=-7, i8=-127, i9=46, i10=-57339;
        boolean b1=true;

        vMeth1(24134, 103L);
        f1 = 1;
        do {
            for (d1 = 1; d1 < 5; d1++) {
                Test0240.instanceCount = (long) d1;
                d2 = Test0240.instanceCount;
            }
            i7 = 5;
            while (--i7 > 0) {
                i8 >>= i8;
                for (i9 = 1; 1 > i9; ++i9) {
                    Test0240.instanceCount += (long) f1;
                }
                i10 /= (int) (Test0240.instanceCount | 1);
                i6 -= -3;
                i10 &= i8;
            }
            if (false) {
                Test0240.iArrFld[(int) (f1 + 1)] = i6;
                Test0240.iArrFld[(int) (f1)] -= i6;
            } else if (b1) {
                i8 -= 31767;
            } else {
                i6 -= (int)f1;
            }
        } while (++f1 < 316);
        long meth_res = Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i6 + Double.doubleToLongBits(d2) + i7
            + i8 + i9 + i10 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i) {

        int i11=4;

        i -= -50869;
        f = (iMeth() + Test0240.instanceCount);
        Test0240.instanceCount >>= i11;
        vMeth_check_sum += Float.floatToIntBits(f) + i + i11;
    }

    public void mainTest(String[] strArr1) {

        byte by1=-123;
        int i12=-9, i13=-12, i14=3, i15=-14, i16=13, i17=6, i18=20280, i19=10, i20=6;
        short s1=-670;

        vMeth(fFld, -20894);
        fFld *= by1;
        for (i12 = 5; 138 > i12; i12++) {
            for (i14 = 2; i14 < 188; ++i14) {
                for (i16 = 2; i16 > 1; i16 -= 3) {
                    i13 -= (int) Test0240.dFld;
                    i17 >>= i12;
                    i17 *= (int) Test0240.dFld;
                }
                i17 *= (int) Test0240.instanceCount;
                switch ((((i17 >>> 1) % 9) * 5) + 34) {
                case 47:
                    i15 += i14;
                    i18 = 1;
                    while (++i18 < 2) {
                        i17 += i17;
                        fFld = i12;
                        Test0240.instanceCount += (i18 * i18);
                        i17 -= (int)-2.90131;
                        Test0240.instanceCount >>= 0;
                        Test0240.dFld = i12;
                        by1 += (byte)8;
                        i13 += (-53361 + (i18 * i18));
                    }
                    Test0240.instanceCount ^= 45376;
                    Test0240.instanceCount = i15;
                    break;
                case 70:
                    i13 = i12;
                    break;
                case 48:
                    i13 += (i14 | i12);
                    for (i19 = 2; i14 < i19; i19 -= 2) {
                        if (bFld) continue;
                    }
                    Test0240.instanceCount += i14;
                    break;
                case 79:
                    i13 += (((i14 * i13) + s1) - i12);
                    i13 -= i12;
                    i20 += (i14 * i14);
                case 40:
                    i13 = i19;
                    break;
                case 38:
                    i13 += (i14 | s1);
                case 76:
                    i13 ^= (int)1L;
                case 57:
                    s1 >>= (short)i14;
                case 36:
                    Test0240.instanceCount -= i12;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("by1 i12 i13 = " + by1 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 s1 = " + i20 + "," + s1);

        FuzzerUtils.out.println("Test0240.instanceCount fFld Test0240.dFld = " + Test0240.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0240.dFld));
        FuzzerUtils.out.println("bFld Test0240.iArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0240.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0240 _instance = new Test0240();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
