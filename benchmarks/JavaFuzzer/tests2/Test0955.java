// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:56 2023
public class Test0955 {

    public static final int N = 400;

    public static long instanceCount=3334634644L;
    public static float fFld=-51.829F;
    public static short sFld=2209;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0955.iArrFld, -5);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vSmallMeth(int i4) {

        byte by=83;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -4);

        iArr[(i4 >>> 1) % N] = ((i4++) - (iArr[(i4 >>> 1) % N] - (i4 ^= by)));
        vSmallMeth_check_sum += i4 + by + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i8=38734;
        int i9=4;
        int i10=62197;
        int i11=-31151;
        int i12=164;
        int i13=22123;
        int i14=41211;
        int i15=-37152;
        int[] iArr1 =new int[N];
        short s=9040;
        boolean b=false;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr1, 6);
        FuzzerUtils.init(byArr, (byte)-71);

        vSmallMeth(i8);
        iArr1[(i8 >>> 1) % N] <<= (int) Test0955.instanceCount;
        for (i9 = 2; i9 < 326; ++i9) {
            for (i11 = 1; i11 < 5; i11++) {
                i8 = -9;
                i8 += i11;
                Test0955.instanceCount = i9;
                i13 = 1;
                while (++i13 < 2) {
                    i8 >>= s;
                }
                i8 -= i11;
                Test0955.instanceCount += (i11 * i11);
                byArr[i11] -= (byte) Test0955.fFld;
            }
            for (i14 = 1; 5 > i14; ++i14) {
                i12 /= (int) ((long) (Test0955.fFld) | 1);
                if (b) break;
            }
        }
        vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + s + i14 + i15 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1)
            + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i6, float f2) {

        float f3=1.224F;
        int i7=-13, i16=-5, i17=-13, i18=52, i19=-26995;
        long l=35665L;
        double d1=-1.92671;

        for (f3 = 322; f3 > 19; f3 -= 2) {
            vMeth();
            for (i16 = 1; 10 > i16; i16++) {
                for (i18 = 2; i18 > 1; i18--) {
                    i7 = i19;
                    Test0955.fFld -= Test0955.fFld;
                    Test0955.fFld *= Test0955.sFld;
                    i17 -= (int)l;
                    i19 = i16;
                    Test0955.instanceCount = (long) d1;
                    i17 += (i18 - i19);
                }
                i17 += (int) Test0955.instanceCount;
                Test0955.iArrFld[i16] += i7;
                i7 = (int)d1;
                i17 = i17;
            }
        }
        long meth_res = i6 + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i7 + i16 + i17 + i18 + i19 + l +
            Double.doubleToLongBits(d1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=126, i1=-41093, i2=0, i3=-59, i5=-123, i20=225, i21=60841;
        float f=-120.691F, f1=-28.20F;
        double d=0.33601;
        byte by1=77;
        boolean b1=false;

        for (i = 3; i < 313; i++) {
            for (i2 = 4; i2 < 81; ++i2) {
                for (int smallinvoc = 0; smallinvoc < 1; smallinvoc++)
                    vSmallMeth((int) (Math.abs(Test0955.instanceCount) * f));
                i5 = 2;
                do {
                    switch (((((int)(i1 -= (int)d)) >>> 1) % 2) + 92) {
                    case 92:
                        f1 *= (float)(((i + f1) + d) - i2);
                        i3 >>= (int) (((++i1) + Integer.reverseBytes(i2)) - ((f % (Test0955.instanceCount | 1)) * (i2 +
                            i5)));
                        i1 -= iMeth(i3, f1);
                        break;
                    case 93:
                        d += by1;
                        i3 >>>= (int) Test0955.instanceCount;
                        break;
                    default:
                        i3 += i5;
                        i1 = (int) Test0955.instanceCount;
                        i3 = i1;
                    }
                    i1 = i;
                    Test0955.iArrFld[i - 1] = i3;
                    f1 *= Test0955.instanceCount;
                } while (--i5 > 0);
                i1 >>= i5;
                i1 = i;
                Test0955.iArrFld[i] += 4;
                b1 = b1;
                Test0955.iArrFld[i2] += i20;
                Test0955.instanceCount = (long) f;
                if (false) continue;
                i20 += (i2 ^ i3);
            }
            i20 = i;
        }
        i20 = i1;
        i21 = 1;
        while (++i21 < 276) {
            i20 += (int)(-34.796F + (i21 * i21));
            Test0955.instanceCount *= (long) -107.769F;
            i1 += i21;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f i5 = " + i3 + "," + Float.floatToIntBits(f) + "," + i5);
        FuzzerUtils.out.println("d f1 by1 = " + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f1) + "," +
            by1);
        FuzzerUtils.out.println("b1 i20 i21 = " + (b1 ? 1 : 0) + "," + i20 + "," + i21);

        FuzzerUtils.out.println("Test0955.instanceCount Test0955.fFld Test0955.sFld = " + Test0955.instanceCount + "," +
                Float.floatToIntBits(Test0955.fFld) + "," + Test0955.sFld);
        FuzzerUtils.out.println("Test0955.iArrFld = " + FuzzerUtils.checkSum(Test0955.iArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0955 _instance = new Test0955();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test vMeth iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
