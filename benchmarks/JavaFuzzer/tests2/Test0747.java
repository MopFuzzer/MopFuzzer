// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0747 {

    public static final int N = 400;

    public static long instanceCount=-1435319842459543515L;
    public static short sFld=25021;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0747.iArrFld, -11986);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f1=53.159F;
        int i2=-11529, i3=63023, i4=11;
        long l1=128L;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)10841);

        f1 = 1;
        while (++f1 < 356) {
            Test0747.instanceCount *= -33316L;
            for (i2 = 1; i2 < 5; ++i2) {
                Test0747.iArrFld[i2 - 1] ^= i2;
                sArr[(int)(f1)] -= (short)i2;
                Test0747.iArrFld[i2 - 1] = Test0747.sFld;
                i3 += (((i2 * i3) + i2) - i3);
                for (l1 = 1; l1 < 2; l1++) {
                    boolean b1=false;
                    i3 += (int)(((l1 * f1) + i2) - i4);
                    i4 = i2;
                    if (b1) continue;
                    i4 <<= Test0747.sFld;
                    b1 = false;
                }
                i3 <<= 243;
                i4 *= (int) Test0747.instanceCount;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i2 + i3 + l1 + i4 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i1) {

        byte by=123;
        int i5=-46859, i6=2, i7=47495, i8=-120;
        double d=64.34945;
        boolean b2=false;

        i1 -= ((i1++) + ((i1 + i1) + (by = (byte)i1)));
        switch (((((++Test0747.iArrFld[(i1 >>> 1) % N]) >>> 1) % 1) * 5) + 75) {
        case 77:
            vMeth1();
            for (i5 = 14; i5 < 350; ++i5) {
                d = 5;
                while ((d -= 3) > 0) {
                    i6 <<= -10643;
                    for (i7 = 1; i7 < 3; i7++) {
                        switch (((i7 % 3) * 5) + 87) {
                        case 90:
                            i6 += (int) Test0747.instanceCount;
                            i1 *= (int) Test0747.instanceCount;
                            i8 &= 3;
                        case 99:
                            if (b2) continue;
                            i1 -= 5;
                            i6 = -10;
                            break;
                        case 88:
                            Test0747.iArrFld[(int) (d + 1)] = 244;
                        }
                    }
                }
            }
            break;
        }
        vMeth_check_sum += i1 + by + i5 + i6 + Double.doubleToLongBits(d) + i7 + i8 + (b2 ? 1 : 0);
    }

    public static long lMeth() {

        int i9=-10, i10=-1, i11=1, i12=2, i13=-155;
        double d1=41.110666;
        double[] dArr =new double[N];
        float f2=-35.529F;
        byte[] byArr =new byte[N];
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(byArr, (byte)-85);
        FuzzerUtils.init(dArr, 2.72897);
        FuzzerUtils.init(lArr1, -635911409951362825L);

        vMeth(i9);
        i9 -= i9;
        try {
            for (i10 = 395; i10 > 20; --i10) {
                byArr[i10 - 1] -= (byte)9202879514670784864L;
                Test0747.sFld &= (short) 45919;
                Test0747.instanceCount -= i9;
                Test0747.iArrFld[i10 + 1] = (int) Test0747.instanceCount;
                for (i12 = i10; i12 < 5; ++i12) {
                    i9 *= (int)2.925F;
                    i13 -= i9;
                }
                if (true) {
                    dArr[i10] *= d1;
                } else {
                    Test0747.iArrFld[i10 - 1] = i11;
                }
                i9 *= i12;
            }
        }
        catch (ArithmeticException exc2) {
            i13 = (int)f2;
        }
        catch (UserDefinedExceptionTest exc3) {
            lArr1 = lArr1;
        }
        finally {
            i13 <<= Test0747.sFld;
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b=true;
        float f=1.825F;
        int i=-114, i14=-9, i15=-150, i16=12, i17=-9;
        double d2=2.19046;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 46275L);

        b = b;
        for (long l : lArr) {
            f -= (Test0747.iArrFld[(i >>> 1) % N] |= (int) lMeth());
            Test0747.sFld &= (short) i;
            for (i14 = 1; i14 < 63; i14++) {
                byte by1=-14;
                by1 += (byte)(0 + (i14 * i14));
                i >>>= i15;
                if (b) continue;
                Test0747.instanceCount = i14;
                for (i16 = 2; i16 > 1; i16 -= 3) {
                    f += i15;
                    i17 = (int)d2;
                    i *= -70;
                    i15 = i;
                    if (false) {
                        lArr[i16] = (long)d2;
                        i /= 23991;
                    } else if (b) {
                        i += i15;
                    } else if (b) {
                        if (b) break;
                        Test0747.instanceCount = Test0747.instanceCount;
                        switch (((i14 % 3) * 5) + 38) {
                        case 50:
                        case 46:
                            i15 = i17;
                            break;
                        case 42:
                            l = i17;
                        default:
                            Test0747.instanceCount += i;
                            i15 += i17;
                        }
                    } else {
                        Test0747.iArrFld[i14 - 1] += i16;
                        i15 = i15;
                        try {
                            i = (Test0747.iArrFld[i14] % 118);
                            i15 = (i17 % i17);
                            i17 = (i16 % i16);
                        } catch (ArithmeticException a_e) {}
                    }
                    Test0747.sFld = (short) i16;
                    f += i16;
                }
            }
        }

        FuzzerUtils.out.println("b f i = " + (b ? 1 : 0) + "," + Float.floatToIntBits(f) + "," + i);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 d2 lArr = " + i17 + "," + Double.doubleToLongBits(d2) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0747.instanceCount Test0747.sFld Test0747.iArrFld = " + Test0747.instanceCount + "," + Test0747.sFld +
                "," + FuzzerUtils.checkSum(Test0747.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0747 _instance = new Test0747();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
