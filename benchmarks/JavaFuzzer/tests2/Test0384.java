// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0384 {

    public static final int N = 400;

    public static long instanceCount=-188L;
    public double dFld=-10.61275;
    public static short sFld=-10264;
    public volatile byte byFld=-100;
    public static int iFld=248;
    public static long[] lArrFld =new long[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0384.lArrFld, -4335L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i5) {

        short s=-29070;
        double d=-1.34539;
        int i6=13062;
        int i7=-177;
        int i8=218;
        int[] iArr2 =new int[N];
        float f1=2.778F;

        FuzzerUtils.init(iArr2, -10);

        s -= (short)d;
        i5 |= i5;
        for (i6 = 17; i6 < 302; ++i6) {
            i5 -= i6;
        }
        iArr2[(i7 >>> 1) % N] += i7;
        i8 = 125;
        do {
            f1 -= i7;
            i5 *= (int) Test0384.instanceCount;
        } while (--i8 > 0);
        long meth_res = i5 + s + Double.doubleToLongBits(d) + i6 + i7 + i8 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i2) {

        int i3=6118;
        int i4=-48492;
        int i9=-38909;
        int i10=112;
        int i11=51720;
        int[] iArr1 =new int[N];
        float f2=120.839F, f3=0.732F;
        boolean b=true;

        FuzzerUtils.init(iArr1, -10);

        for (i3 = 2; i3 < 260; ++i3) {
            iArr1[(i4 >>> 1) % N] = (int)(-lMeth(i3));
            for (i9 = 1; i9 < 6; i9 += 2) {
                i4 += i9;
                f2 += i9;
                switch (((i3 % 9) * 5) + 5) {
                case 16:
                    for (f3 = 1; f3 < 3; ++f3) {
                        i11 += i10;
                        switch ((int)(((f3 % 4) * 5) + 11)) {
                        case 29:
                            Test0384.instanceCount += (long) (((f3 * Test0384.instanceCount) + i2) - i11);
                        case 20:
                            Test0384.instanceCount = i3;
                            if (false) continue;
                            i10 += (int)f3;
                            break;
                        case 25:
                            i11 += (int) (((f3 * Test0384.instanceCount) + i3) - i2);
                            Test0384.instanceCount = Test0384.sFld;
                            break;
                        case 18:
                            i11 <<= i2;
                            break;
                        }
                    }
                case 17:
                    b = b;
                case 48:
                    Test0384.instanceCount &= -103;
                    break;
                case 18:
                case 49:
                    f2 *= Test0384.instanceCount;
                case 33:
                    Test0384.instanceCount -= Test0384.instanceCount;
                    break;
                case 15:
                    Test0384.instanceCount = Test0384.instanceCount;
                    break;
                case 12:
                    if (b) continue;
                    break;
                case 14:
                    f2 = f3;
                    break;
                default:
                    iArr1[i3] <<= i3;
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i9 + i10 + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i11 + (b ?
            1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth() {

        int i1=9, i12=2, i13=-31732, i14=-791, i15=-44612, i16=-11, i17=-29141;
        boolean b1=false;
        float f4=-33.767F;

        i1 = 291;
        do {
            vMeth1(i1);
            for (i12 = i1; i12 < 6; ++i12) {
                Test0384.instanceCount &= i1;
                if (b1) continue;
                byFld += (byte)-188;
                for (i14 = i12; 1 > i14; ++i14) {
                    Test0384.iFld += i12;
                    Test0384.iFld = i1;
                    i15 <<= (int) Test0384.instanceCount;
                }
                if (true) continue;
            }
        } while (--i1 > 0);
        Test0384.lArrFld = Test0384.lArrFld;
        for (i16 = 17; i16 < 375; i16++) {
            i13 >>= i15;
            f4 = i1;
        }
        vMeth_check_sum += i1 + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 + i16 + i17 + Float.floatToIntBits(f4);
    }

    public void mainTest(String[] strArr1) {

        float f=-2.475F;
        float[] fArr =new float[N];
        int i=23164;
        int i18=-10;
        int i19=-14;
        int i20=243;
        int i21=11;
        int i22=-205;
        int i23=-16389;
        int i24=-91;
        int i25=-5;
        int i26=4;
        int[] iArr =new int[N];
        boolean b2=true;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr, 7);
        FuzzerUtils.init(fArr, 2.785F);
        FuzzerUtils.init(sArr, (short)-9393);

        f -= (float)(iArr[(i >>> 1) % N] = (int)((1 - (--i)) - (dFld++)));
        vMeth();
        for (double d1 : dArrFld) {
            i18 = 1;
            do {
                Test0384.instanceCount += i;
                iArr[i18 - 1] = (int) Test0384.instanceCount;
                for (i19 = 1; i19 < 1; ++i19) {
                    switch (((i19 % 1) * 5) + 22) {
                    case 23:
                        iArr[(-2 >>> 1) % N] *= i18;
                        Test0384.iFld += (int) Test0384.instanceCount;
                        Test0384.iFld -= i18;
                        i += byFld;
                        break;
                    default:
                        f += i20;
                    }
                }
                switch ((((13 >>> 1) % 9) * 5) + 63) {
                case 86:
                    Test0384.lArrFld[i18 + 1] += i;
                    for (i21 = 1; i21 < 1; i21++) {
                        i %= (int)(i21 | 1);
                    }
                    break;
                case 104:
                    dFld = f;
                    fArr[i18 + 1] += i;
                    break;
                case 89:
                    sArr = sArr;
                    i20 <<= (int) Test0384.instanceCount;
                    for (i23 = 1; i23 < 1; ++i23) {
                        i += (((i23 * Test0384.instanceCount) + i22) - i);
                        Test0384.instanceCount += (((i23 * i23) + i24) - f);
                        if (b2) continue;
                        i = i24;
                    }
                    for (i25 = 1; 1 > i25; ++i25) {
                        i22 = Test0384.iFld;
                        i20 = i24;
                        Test0384.iFld >>>= i25;
                    }
                    break;
                case 94:
                    Test0384.instanceCount += (i18 + i25);
                    break;
                case 74:
                    iArr[i18 - 1] |= (int) Test0384.instanceCount;
                    break;
                case 80:
                    f = Test0384.instanceCount;
                    break;
                case 76:
                    Test0384.lArrFld[i18] = i18;
                    break;
                case 79:
                    Test0384.instanceCount = i24;
                    break;
                case 100:
                    Test0384.instanceCount ^= i18;
                    break;
                default:
                    i += i21;
                }
            } while (++i18 < 63);
        }

        FuzzerUtils.out.println("f i i18 = " + Float.floatToIntBits(f) + "," + i + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("b2 i25 i26 = " + (b2 ? 1 : 0) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("iArr fArr sArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0384.instanceCount dFld Test0384.sFld = " + Test0384.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0384.sFld);
        FuzzerUtils.out.println("byFld Test0384.iFld Test0384.lArrFld = " + byFld + "," + Test0384.iFld + "," +
                FuzzerUtils.checkSum(Test0384.lArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0384 _instance = new Test0384();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
