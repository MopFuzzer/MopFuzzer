// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:23 2023
public class Test0244 {

    public static final int N = 400;

    public static long instanceCount=5675324585732348142L;
    public static double dFld=-3.107960;
    public static boolean bFld=false;
    public volatile short sFld=27536;
    public static long[][] lArrFld =new long[N][N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0244.lArrFld, 7740098755112095637L);
        FuzzerUtils.init(Test0244.sArrFld, (short) -11558);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, int i13) {

        short s=-29234;
        int i15=-4486;
        int[] iArr1 =new int[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr1, 25);
        FuzzerUtils.init(dArr, 2.37399);

        Test0244.lArrFld[(19 >>> 1) % N][(i13 >>> 1) % N] = -120;
        for (int i14 : iArr1) {
            Test0244.bFld = true;
            i14 |= s;
            s <<= (short)i13;
            i15 = 1;
            while (++i15 < 4) {
                dArr[i15 - 1][i15] -= Test0244.instanceCount;
                Test0244.instanceCount += i15;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i13 + s + i15 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l1, int i6) {

        int i7=61651;
        int i8=-2068;
        int i9=34;
        int i10=23250;
        int i11=38925;
        int i12=12;
        int[] iArr =new int[N];
        float f1=-1.603F;

        FuzzerUtils.init(iArr, -16909);

        i6 = (int)-5L;
        for (i7 = 7; 187 > i7; ++i7) {
            for (i9 = 1; i9 < 9; i9 += 3) {
                byte by1=-84;
                if ((((l1--) + (56 - (i6++))) - iArr[i7 + 1]) == (-((-Test0244.instanceCount) - (l1 * i9)))) continue;
                for (i11 = 1; i11 < 5; i11 += 2) {
                    try {
                        i10 = (-1341749391 % i12);
                        i6 = (-179 % i6);
                        i6 = (i6 % -4316);
                    } catch (ArithmeticException a_e) {}
                    vMeth1(Test0244.dFld, i11);
                    i12 = i10;
                }
                by1 = (byte)i12;
                switch (((i9 % 3) * 5) + 68) {
                case 77:
                    if (Test0244.bFld) continue;
                    i6 >>>= 95;
                    i6 = 28;
                    i12 += (int)f1;
                    break;
                case 71:
                    if (i12 != 0) {
                        vMeth_check_sum += l1 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    break;
                case 78:
                    by1 += (byte)(i9 ^ i11);
                    break;
                }
            }
        }
        vMeth_check_sum += l1 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
    }

    public int iMeth(int i3, long l, float f) {

        int i4=42161, i5=-9, i16=118, i17=98;
        byte by=-125;
        long l2=-2352248291L;
        boolean[] bArr1 =new boolean[N];

        FuzzerUtils.init(bArr1, true);

        for (i4 = 6; i4 < 126; i4++) {
            i5 += (int)(222L + (i4 * i4));
            if (bArr1[i4 + 1] = ((i3 - (i3 * i3)) < ((84.814F / ((by - Test0244.instanceCount) | 1)) + (Test0244.dFld + l))))
                break;
            vMeth(l, -225);
            sFld = (short)i4;
            l += (((i4 * i3) + i4) - i4);
            i5 /= (int)((long)(f) | 1);
        }
        for (i16 = 13; i16 < 322; ++i16) {
            i5 += i4;
            f = by;
            i5 = (int)f;
            l2 = 1;
            while (++l2 < 5) {
                i5 >>= (int) Test0244.instanceCount;
                i17 = i4;
                Test0244.instanceCount = i16;
            }
        }
        long meth_res = i3 + l + Float.floatToIntBits(f) + i4 + i5 + by + i16 + i17 + l2 + FuzzerUtils.checkSum(bArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=12;
        int i1=7;
        int i2=61;
        int i18=-225;
        int[] iArr2 =new int[N];
        double d=-1.97806;
        float f2=0.459F;
        float[][] fArr =new float[N][N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr2, 105);
        FuzzerUtils.init(fArr, 0.772F);

        for (i = 12; i < 202; i++) {
            for (d = 8; d < 132; ++d) {
                bArr[i] = (((Test0244.instanceCount + -43687) - Test0244.instanceCount) == iMeth(i2, Test0244.instanceCount, f2));
                i1 = (int) Test0244.instanceCount;
                i1 -= 8;
                i1 += i;
                iArr2[i] *= i;
                i18 = 1;
                while (++i18 < 2) {
                    i1 = 2;
                    fArr[i18 + 1][i] += 42827;
                    Test0244.instanceCount >>= i18;
                    switch (((i1 >>> 1) % 9) + 24) {
                    case 24:
                    case 25:
                        i2 = (int) Test0244.instanceCount;
                        break;
                    case 26:
                        Test0244.instanceCount += (i18 * Test0244.instanceCount);
                    case 27:
                        Test0244.lArrFld[i + 1][i + 1] >>>= Test0244.instanceCount;
                        switch (((i >>> 1) % 4) + 46) {
                        case 46:
                            Test0244.dFld += 9;
                            break;
                        case 47:
                            switch ((((i2 >>> 1) % 3) * 5) + 48) {
                            case 61:
                                if (Test0244.bFld) continue;
                                break;
                            case 52:
                                i2 <<= -12;
                                Test0244.instanceCount += i;
                                f2 -= i2;
                                break;
                            case 51:
                                i1 /= (int) (Test0244.instanceCount | 1);
                                Test0244.instanceCount = Test0244.instanceCount;
                                i1 += i18;
                                iArr2[i] += -11;
                                break;
                            }
                            if (Test0244.bFld) {
                                Test0244.instanceCount %= (i18 | 1);
                                i2 += (((i18 * i2) + i18) - Test0244.instanceCount);
                            } else if (Test0244.bFld) {
                                f2 *= i18;
                            } else {
                                i2 += (((i18 * i18) + i2) - i1);
                            }
                            break;
                        case 48:
                            iArr2[i18 + 1] = (int)-1.695F;
                        case 49:
                            Test0244.sArrFld[i18] += (short) i2;
                            break;
                        default:
                            f2 += f2;
                        }
                        break;
                    case 28:
                        i2 <<= (int)-231L;
                        break;
                    case 29:
                        iArr2[i18] = (int)d;
                        break;
                    case 30:
                        i2 = i1;
                        break;
                    case 31:
                        iArr2[(int)(d)] *= i1;
                    case 32:
                        i2 += 40;
                        break;
                    default:
                        Test0244.dFld += Test0244.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 f2 i18 = " + i2 + "," + Float.floatToIntBits(f2) + "," + i18);
        FuzzerUtils.out.println("bArr iArr2 fArr = " + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(iArr2) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0244.instanceCount Test0244.dFld Test0244.bFld = " + Test0244.instanceCount + "," +
                Double.doubleToLongBits(Test0244.dFld) + "," + (Test0244.bFld ? 1 : 0));
        FuzzerUtils.out.println("sFld Test0244.lArrFld Test0244.sArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test0244.lArrFld) +
                "," + FuzzerUtils.checkSum(Test0244.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0244 _instance = new Test0244();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
