// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0707 {

    public static final int N = 400;

    public static long instanceCount=76L;
    public byte byFld=-87;
    public static boolean bFld=false;
    public static int iFld=34129;
    public int iFld1=1;
    public static float fFld=1.514F;
    public short[] sArrFld =new short[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0707.iArrFld, -167);
    }

    public static long iMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static int iMeth(byte by, long l, int i) {


        i = (--i);
        i = i;
        long meth_res = by + l + i;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l1) {

        int i5=-6;
        int i6=-5;
        int i7=0;
        int i8=52900;
        int[] iArr1 =new int[N];
        long l2=137L;
        long[] lArr =new long[N];
        short s=-15824;
        boolean b=false;

        FuzzerUtils.init(iArr1, 12);
        FuzzerUtils.init(lArr, 14L);

        for (i5 = 4; i5 < 153; i5++) {
            iArr1[i5 + 1] &= i6;
            lArr[i5] -= i5;
        }
        i6 = 8;
        if (b) {
            i6 -= 47213;
            l1 -= i5;
        } else if (true) {
            l2 = 1;
            do {
                i6 = (int)3107867252216745181L;
                for (i7 = 4; i7 > 1; i7 -= 3) {
                    i6 += (i7 * i7);
                    i8 += i7;
                    i6 += i7;
                    iArr1[(int)(l2 + 1)] >>= i7;
                    i6 += s;
                }
            } while (++l2 < 392);
        } else if (b) {
            i8 -= -9;
        } else {
            Test0707.instanceCount <<= i8;
        }
        vMeth1_check_sum += l1 + i5 + i6 + l2 + i7 + i8 + s + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3, byte by1, int i4) {


        vMeth1(2360815849L);
        Test0707.instanceCount <<= 58183;
        vMeth_check_sum += i3 + by1 + i4;
    }

    public byte byMeth(int i1) {

        int i2=-30691;
        int i9=0;
        int i10=-13;
        int i11=-59262;
        int[] iArr =new int[N];
        short s1=-10871;
        double d=2.61284;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr, 31937);
        FuzzerUtils.init(dArr, 1.73120);

        i2 = 1;
        while (++i2 < 328) {
            if (false) {
                switch (((i2 % 2) * 5) + 103) {
                case 105:
                    iArr[i2 + 1] *= (int)dArr[i2][i2];
                    i1 -= (int)(i1 >>= (int)(iArr[i2 + 1] - (5744942365881250197L * sArrFld[i2])));
                    break;
                case 106:
                    vMeth(i2, byFld, i2);
                    if (Test0707.bFld) {
                        s1 <<= byFld;
                        for (d = 1; d < 5; ++d) {
                            switch ((int)((d % 2) + 19)) {
                            case 19:
                                i9 *= i1;
                                i1 = i1;
                                break;
                            case 20:
                            default:
                                for (i10 = 1; i10 < 2; ++i10) {
                                    Test0707.instanceCount = i9;
                                    i11 += (i10 | i1);
                                }
                            }
                        }
                    } else if (Test0707.bFld) {
                        if (i1 != 0) {
                        }
                    } else {
                        Test0707.instanceCount <<= i2;
                    }
                    break;
                }
            } else if (Test0707.bFld) {
                Test0707.iFld = (int) Test0707.instanceCount;
            }
        }
        long meth_res = i1 + i2 + s1 + Double.doubleToLongBits(d) + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i12=-11, i13=9, i14=63891, i15=13, i16=-47621, i17=196, i18=-30346, i19=3, i20=31, i21=216;
        double d1=0.79793;
        float f=2.234F;
        byte[] byArr =new byte[N];
        boolean[] bArr =new boolean[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(byArr, (byte)-26);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr1, 41L);

        iMeth(byMeth(Test0707.iFld), Test0707.instanceCount, Test0707.iFld);
        for (i12 = 2; i12 < 138; i12 += 3) {
            byArr[i12 - 1] = (byte)i12;
            i13 = 6;
            for (i14 = 2; i14 < 256; i14 += 3) {
                i16 = 1;
                do {
                    Test0707.iArrFld[i12 - 1] += i13;
                    i15 *= iFld1;
                    if (false) continue;
                    byArr[i16 + 1] <<= (byte)i13;
                    bArr[i12 + 1] = Test0707.bFld;
                    d1 = i13;
                    iFld1 += i16;
                } while (++i16 < 7);
                Test0707.iFld = Test0707.iFld;
                for (i17 = 1; i17 < 7; i17++) {
                    Test0707.instanceCount |= Test0707.instanceCount;
                }
                Test0707.iArrFld[i12 + 1] = i12;
                if (Test0707.bFld) continue;
                iFld1 = (int)21656L;
                Test0707.fFld += i15;
                if (Test0707.bFld) break;
                if (Test0707.bFld) continue;
                i13 -= i14;
            }
            for (f = 1; f < i12; ++f) {
                if (Test0707.bFld) continue;
                for (i20 = 1; i20 < 2; i20++) {
                    lArr1[(int)(f + 1)] %= ((long)(f) | 1);
                    i18 = i20;
                    Test0707.iFld += Test0707.iFld;
                }
                i18 = Test0707.iFld;
            }
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 d1 = " + i15 + "," + i16 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i17 i18 f = " + i17 + "," + i18 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("byArr bArr lArr1 = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(bArr)
            + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0707.instanceCount byFld Test0707.bFld = " + Test0707.instanceCount + "," + byFld + "," +
                (Test0707.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0707.iFld iFld1 Test0707.fFld = " + Test0707.iFld + "," + iFld1 + "," +
                Float.floatToIntBits(Test0707.fFld));
        FuzzerUtils.out.println("sArrFld Test0707.iArrFld = " + FuzzerUtils.checkSum(sArrFld) + "," +
                FuzzerUtils.checkSum(Test0707.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0707 _instance = new Test0707();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
