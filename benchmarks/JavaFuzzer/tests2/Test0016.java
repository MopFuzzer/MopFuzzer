// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0016 {

    public static final int N = 400;

    public static volatile long instanceCount=3482780303L;
    public static volatile int iFld=-12;
    public static boolean bFld=true;
    public static short sFld=1982;
    public static volatile byte byFld=91;
    public static long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0016.lArrFld, 4L);
        FuzzerUtils.init(Test0016.fArrFld, -2.801F);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        byte by=46;
        float f2=0.483F;
        int i1=12, i2=-12384, i3=7, i4=-51306;
        short s1=31406;
        double d1=-84.83541;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(dArr, 123.81643);

        by = (byte) Test0016.iFld;
        f2 = Test0016.iFld;
        try {
            for (i1 = 6; i1 < 200; ++i1) {
                s1 = (short) Test0016.instanceCount;
                switch (((i1 % 4) * 5) + 62) {
                case 70:
                    i2 += 21176;
                    break;
                case 71:
                    for (i3 = 1; 8 > i3; ++i3) {
                        i4 += Test0016.iFld;
                        i4 -= Test0016.iFld;
                        f2 += (i3 - Test0016.instanceCount);
                        Test0016.instanceCount += (i3 * i3);
                        f2 = f2;
                        dArr[i1][i1] -= Test0016.iFld;
                        i2 -= Test0016.iFld;
                    }
                case 74:
                    Test0016.iFld += i1;
                    break;
                case 73:
                    Test0016.instanceCount = 17936;
                    break;
                default:
                    d1 += d1;
                }
            }
        }
        catch (NegativeArraySizeException exc1) {
            Test0016.bFld = true;
        }
        vMeth1_check_sum += by + Float.floatToIntBits(f2) + i1 + i2 + s1 + i3 + i4 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l, long l1, float f1) {

        int i6=-25203;
        int i7=3;
        int i8=1015;
        int i9=28632;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 12);

        vMeth1();
        for (int i5 : iArr1) {
            switch (((i5 >>> 1) % 6) + 1) {
            case 1:
                i5 += (int)f1;
                i5 = (int)f1;
                for (i6 = 1; i6 < 4; ++i6) {
                    for (i8 = 1; 2 > i8; i8++) {
                        switch ((((i5 >>> 1) % 2) * 5) + 35) {
                        case 38:
                            switch (((i6 % 1) * 5) + 27) {
                            case 32:
                                l1 /= (i9 | 1);
                                f1 = Test0016.iFld;
                                i7 = Test0016.iFld;
                                break;
                            default:
                                f1 *= i9;
                                Test0016.iFld >>= (int) l;
                            }
                            f1 = i9;
                            break;
                        case 39:
                            i7 = i8;
                        default:
                            if (i9 != 0) {
                                vMeth_check_sum += l + l1 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 +
                                    FuzzerUtils.checkSum(iArr1);
                                return;
                            }
                        }
                    }
                }
                break;
            case 2:
                if (Test0016.bFld) break;
            case 3:
                i9 >>= i5;
                break;
            case 4:
                Test0016.sFld -= (short) Test0016.instanceCount;
            case 5:
                try {
                    i5 = (-1281661484 % Test0016.iFld);
                    i9 = (358039712 % iArr1[(i6 >>> 1) % N]);
                    i5 = (-58925 % i8);
                } catch (ArithmeticException a_e) {}
                break;
            case 6:
                Test0016.instanceCount = i7;
                break;
            }
        }
        vMeth_check_sum += l + l1 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth(short s) {

        float f3=65.319F;
        int i10=-11;
        int i11=88;
        int i12=-165;
        int i13=-17017;
        int i14=28;
        int[] iArr =new int[N];
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(iArr, 5);
        FuzzerUtils.init(sArr, (short)30495);

        iArr[(Test0016.iFld >>> 1) % N] *= (int) (Test0016.iFld - (Test0016.lArrFld[(Test0016.iFld >>> 1) % N] <<= sArr[(Test0016.iFld >>>
                1) % N][(Test0016.iFld >>> 1) % N]));
        vMeth(Test0016.instanceCount, Test0016.instanceCount, f3);
        for (i10 = 1; 151 > i10; i10++) {
            f3 = Test0016.byFld;
            for (i12 = 1; i12 < 11; i12++) {
                i13 += (int)(6728L + (i12 * i12));
                i14 = 1;
                do {
                    Test0016.iFld *= Test0016.sFld;
                    Test0016.fArrFld[i14] *= i12;
                    i13 >>>= 134;
                    if (Test0016.iFld != 0) {
                    }
                    try {
                        i11 = (97 / iArr[i14 - 1]);
                        i11 = (i12 / 50600);
                        i11 = (i14 / -1297422169);
                    } catch (ArithmeticException a_e) {}
                    i11 = i11;
                    i13 -= -5;
                    i13 += 4;
                } while (++i14 < 2);
            }
        }
        long meth_res = s + Float.floatToIntBits(f3) + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=123.60185;
        int i=-92;
        int i15=27;
        int i16=11;
        int i18=-4;
        int i19=-53195;
        int i20=9;
        int i21=55557;
        int i22=0;
        int i23=6;
        int[] iArr2 =new int[N];
        float f=1.646F;
        float[] fArr =new float[N];
        short s2=22117;

        FuzzerUtils.init(fArr, 59.575F);
        FuzzerUtils.init(iArr2, 57794);

        d *= Test0016.lArrFld[(i >>> 1) % N];
        i >>>= (int)(((d + f) % (((long)(-10L * (fArr[(36491 >>> 1) % N]++))) | 1)) - fMeth((short)(-22025)));
        for (i15 = 15; i15 < 287; ++i15) {
            i = (int)-32L;
            i16 *= 130;
            Test0016.iFld += i15;
            iArr2[i15] *= i;
            i16 -= Test0016.byFld;
            i += (int) Test0016.instanceCount;
            i += (188 + (i15 * i15));
            Test0016.instanceCount += i15;
        }
        for (int i17 : iArr2) {
            for (i18 = 3; i18 < 63; ++i18) {
                i17 += (i18 * i18);
                Test0016.instanceCount += Test0016.iFld;
                for (i20 = 1; i20 < 2; ++i20) {
                    i16 = 52054;
                    d %= ((long)(f) | 1);
                    i19 = (int)f;
                    i19 += (int) Test0016.instanceCount;
                    Test0016.byFld += (byte) i20;
                    i19 = 8;
                    try {
                        Test0016.iFld = (-57 % i21);
                        Test0016.iFld = (i15 % iArr2[i20 + 1]);
                        i = (i17 / 1837933265);
                    } catch (ArithmeticException a_e) {}
                }
                iArr2[i18 - 1] = s2;
                for (i22 = 1; 2 > i22; ++i22) {
                    Test0016.iFld += i20;
                    i21 += (i22 - Test0016.instanceCount);
                    Test0016.iFld -= Test0016.iFld;
                    Test0016.iFld = i15;
                    d = 58;
                }
            }
        }

        FuzzerUtils.out.println("d i f = " + Double.doubleToLongBits(d) + "," + i + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i15 i16 i18 = " + i15 + "," + i16 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("s2 i22 i23 = " + s2 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("fArr iArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0016.instanceCount Test0016.iFld Test0016.bFld = " + Test0016.instanceCount + "," + Test0016.iFld +
                "," + (Test0016.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0016.sFld Test0016.byFld Test0016.lArrFld = " + Test0016.sFld + "," + Test0016.byFld + "," +
                FuzzerUtils.checkSum(Test0016.lArrFld));
        FuzzerUtils.out.println("Test0016.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0016.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0016 _instance = new Test0016();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
