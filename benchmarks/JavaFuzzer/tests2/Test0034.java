// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0034 {

    public static final int N = 400;

    public static long instanceCount=13L;
    public volatile int iFld=-5;
    public byte byFld=-37;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0034.iArrFld, -65);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i3) {

        double d=0.94920;
        float f1=-94.826F;
        int i5=5, i6=-42197, i7=5, i8=-12;
        boolean b1=true;

        i3 = i3;
        d += f1;
        for (int i4 : Test0034.iArrFld) {
            for (i5 = 1; i5 < 4; ++i5) {
                i6 >>= i4;
                f1 += Test0034.instanceCount;
                i4 += i5;
                if (b1) continue;
                Test0034.iArrFld[i5 + 1] *= i3;
                d *= f1;
                for (i7 = 1; i7 < 2; ++i7) {
                    i3 -= (int)f1;
                    if (false) {
                        Test0034.instanceCount *= i5;
                    } else if (b1) {
                        i8 += i7;
                    }
                }
            }
        }
        long meth_res = i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i5 + i6 + (b1 ? 1 : 0) + i7 + i8;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(boolean b, int i2) {

        int i9=241, i10=30863, i11=-205, i12=-9;
        float f2=-2.80F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-15);

        Test0034.instanceCount >>= (i2 + i2);
        i2 *= Math.abs((int)(fMeth(i2) + -121));
        for (i9 = 264; i9 > 3; i9--) {
            double d1=-14.41303;
            i2 += (((i9 * f2) + i9) - f2);
            Test0034.instanceCount += i9;
            switch (((i9 % 2) * 5) + 61) {
            case 67:
                f2 -= Test0034.instanceCount;
                byArr[i9] += (byte)-6159268550455789225L;
                break;
            case 66:
                if (true) {
                    Test0034.iArrFld[i9 - 1] += (int) d1;
                    for (i11 = 1; i11 < 6; i11++) {
                        Test0034.iArrFld = Test0034.iArrFld;
                        i10 += (i11 | Test0034.instanceCount);
                        d1 = i2;
                        i12 >>= 178;
                    }
                }
                break;
            default:
                try {
                    i12 = (Test0034.iArrFld[i9 + 1] / -1219246317);
                    i12 = (3408 / i10);
                    Test0034.iArrFld[i9] = (-592551159 % Test0034.iArrFld[i9]);
                } catch (ArithmeticException a_e) {}
            }
        }
        long meth_res = (b ? 1 : 0) + i2 + i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 +
            FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, float f, int i1) {

        int i13=-7, i14=-36716, i15=145, i16=-54433, i17=-197;
        byte by=-45;
        boolean b3=true;

        Test0034.instanceCount += iMeth(true, i);
        if (b3) {
            i1 -= i13;
            try {
                for (i14 = 8; i14 < (177 + 400); ++i14) {
                    Test0034.instanceCount += Test0034.instanceCount;
                    i15 += (i14 * i14);
                }
                for (i16 = 2 - 400; i16 < 382; ++i16) {
                    boolean b2=false;
                    Test0034.instanceCount = i;
                    by += (byte) (((i16 * Test0034.instanceCount) + i15) - i17);
                    Test0034.instanceCount += (((i16 * by) + i13) - i16);
                    Test0034.instanceCount *= i16;
                    i15 -= i;
                    i13 = i14;
                    b2 = b2;
                }
            }
            catch (ArrayIndexOutOfBoundsException exc2) {
                i17 += i16;
            }
            vMeth_check_sum += i + Float.floatToIntBits(f) + i1 + i13 + i14 + i15 + i16 + i17 + by + (b3 ? 1 : 0);
            return;
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + i1 + i13 + i14 + i15 + i16 + i17 + by + (b3 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f3=2.928F;
        float[] fArr =new float[N];
        int i18=-72, i19=-65, i20=3, i21=-146, i22=62726, i23=24301, i24=-36124, i25=-50;
        long l=-61L;
        long[] lArr =new long[N];
        short s=21866;
        double d3=0.56049;

        FuzzerUtils.init(fArr, -43.731F);
        FuzzerUtils.init(lArr, 57L);

        vMeth(iFld, f3, iFld);
        iFld = (int) Test0034.instanceCount;
        for (i18 = 210; 2 < i18; i18 -= 3) {
            l = 1;
            do {
                iFld += iFld;
            } while (++l < 363);
            f3 = f3;
            for (i20 = 363; i20 > 6; i20 -= 3) {
                fArr[(i19 >>> 1) % N] -= i18;
                i21 = i21;
                i21 += (i20 * l);
                Test0034.instanceCount += (-52639 + (i20 * i20));
                for (i22 = 1; i22 < 4; i22++) {
                    s += (short)(i22 * byFld);
                    i19 |= i20;
                    i21 &= iFld;
                    Test0034.instanceCount *= i21;
                    i23 += i18;
                }
                switch ((i20 % 2) + 37) {
                case 37:
                    byFld += (byte)s;
                    i21 += (i20 * i20);
                    i24 = 1;
                    while (++i24 < 4) {
                        double d2=-2.90454;
                        iFld *= iFld;
                        i21 <<= i22;
                        iFld -= (int)d2;
                    }
                    iArrFld1[i20 - 1] = i25;
                case 38:
                    if (Test0034.bFld) {
                        i19 += i20;
                    }
                    lArr[i20 + 1] = l;
                    break;
                }
            }
            d3 += 200;
            Test0034.instanceCount += i21;
        }

        FuzzerUtils.out.println("f3 i18 i19 = " + Float.floatToIntBits(f3) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("l i20 i21 = " + l + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 s = " + i22 + "," + i23 + "," + s);
        FuzzerUtils.out.println("i24 i25 d3 = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("fArr lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0034.instanceCount iFld byFld = " + Test0034.instanceCount + "," + iFld + "," + byFld);
        FuzzerUtils.out.println("Test0034.bFld Test0034.iArrFld iArrFld1 = " + (Test0034.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0034.iArrFld) + "," + FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0034 _instance = new Test0034();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
