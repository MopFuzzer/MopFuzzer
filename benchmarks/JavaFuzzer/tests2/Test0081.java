// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0081 {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public static double dFld=-17.44974;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0081.iArrFld, 54213);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i1) {


        i1 <<= 236;
        long meth_res = i1;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1() {

        int i=63824, i2=-1794, i3=-63917, i4=20914, i5=-136, i6=-23027, i8=155;
        short s=16493;
        byte by=44;
        float f=5.857F;
        boolean b=true;
        long[][] lArr =new long[N][N];
        double[] dArr =new double[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(dArr, -1.91685);

        lArr[(i >>> 1) % N][(i >>> 1) % N] = sMeth(i);
        for (i2 = 14; i2 < 393; ++i2) {
            switch (((i2 % 8) * 5) + 17) {
            case 36:
                Test0081.iArrFld[i2] = i;
                i = (int) Test0081.instanceCount;
                for (i4 = 1; i4 < 4; i4++) {
                    i *= i3;
                }
                i6 = 1;
                while (++i6 < 4) {
                    s += by;
                }
            case 48:
                switch (((i2 % 3) * 5) + 47) {
                case 57:
                    if (i6 != 0) {
                        vMeth1_check_sum += i + i2 + i3 + i4 + i5 + i6 + s + by + Float.floatToIntBits(f) + (b ? 1 : 0)
                            + i8 + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    Test0081.instanceCount += (((i2 * f) + f) - Test0081.instanceCount);
                    if (b) continue;
                    break;
                case 59:
                    if (i2 != 0) {
                        vMeth1_check_sum += i + i2 + i3 + i4 + i5 + i6 + s + by + Float.floatToIntBits(f) + (b ? 1 : 0)
                            + i8 + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    dArr[i2] += i3;
                    break;
                case 61:
                    i3 += (-8 + (i2 * i2));
                    break;
                }
                break;
            case 57:
                i3 >>= i3;
                break;
            case 33:
                s = (short)i;
                break;
            case 24:
                Test0081.instanceCount -= s;
                break;
            case 18:
                i += (int)f;
                break;
            case 44:
                i8 -= (int) Test0081.instanceCount;
                break;
            case 51:
                Test0081.instanceCount = i4;
                break;
            default:
                i3 *= (int) Test0081.dFld;
            }
        }
        vMeth1_check_sum += i + i2 + i3 + i4 + i5 + i6 + s + by + Float.floatToIntBits(f) + (b ? 1 : 0) + i8 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i9=-8, i10=86, i11=-19, i12=-44, i13=144;
        double d=1.123168;
        double[] dArr1 =new double[N];
        boolean b1=false;
        float f1=60.590F;
        float[] fArr =new float[N];
        byte by1=76;

        FuzzerUtils.init(fArr, 0.293F);
        FuzzerUtils.init(dArr1, 103.11662);

        vMeth1();
        for (i9 = 1; i9 < 307; i9++) {
            i10 += i10;
            for (d = 5; d > 1; --d) {
                fArr[(int)(d + 1)] += i10;
                if (b1) {
                    if (b1) continue;
                    i10 *= i11;
                    i10 = 45;
                } else if (false) {
                    f1 += Test0081.instanceCount;
                    Test0081.iArrFld[i9 + 1] *= i11;
                    i11 -= i10;
                    for (i12 = 1; i12 < 2; i12++) {
                        Test0081.iArrFld[i9 - 1] = -10;
                        dArr1[(int)(d - 1)] -= -8L;
                    }
                } else if (b1) {
                    by1 *= (byte)i11;
                } else {
                    f1 *= f1;
                }
            }
        }
        vMeth_check_sum += i9 + i10 + Double.doubleToLongBits(d) + i11 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i12
            + i13 + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {


        vMeth();


        FuzzerUtils.out.println("Test0081.instanceCount Test0081.dFld Test0081.iArrFld = " + Test0081.instanceCount + "," +
                Double.doubleToLongBits(Test0081.dFld) + "," + FuzzerUtils.checkSum(Test0081.iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0081 _instance = new Test0081();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
