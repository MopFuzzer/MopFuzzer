// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0520 {

    public static final int N = 400;

    public static long instanceCount=176L;
    public float fFld=87.925F;
    public static double dFld=-9.81774;
    public static volatile float fFld1=3.742F;
    public static float[][] fArrFld =new float[N][N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0520.fArrFld, 110.453F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i5) {

        int i6=-149;
        int i7=-10;
        int i8=99;
        int i9=59410;
        int[][] iArr =new int[N][N];
        float f=1.555F, f1=2.856F;
        short s=22790;

        FuzzerUtils.init(iArr, -10);

        i6 = 1;
        while ((i6 += 3) < 161) {
            for (f = 29; f > i6; --f) {
                if (i7 != 0) {
                }
                switch ((int)((f % 2) + 73)) {
                case 73:
                    i7 <<= s;
                    i5 += (int)f;
                    switch ((((i5 >>> 1) % 3) * 5) + 72) {
                    case 74:
                        for (i8 = i6; 1 > i8; ++i8) {
                            Test0520.fArrFld[i6 - 1][i6] = 3315830749L;
                            Test0520.instanceCount += s;
                            switch ((int)(((f % 2) * 5) + 66)) {
                            case 73:
                                f1 -= i5;
                                break;
                            case 75:
                                iArr[(int)(f)][i8 + 1] = i6;
                                Test0520.instanceCount += i5;
                                break;
                            default:
                                i9 = (int)-2765L;
                            }
                        }
                        break;
                    case 85:
                        i7 += (int)(((f * i7) + i8) - f);
                        break;
                    case 87:
                        Test0520.instanceCount -= Test0520.instanceCount;
                        break;
                    default:
                        i9 += (int)(f * f);
                    }
                    break;
                case 74:
                    i7 >>= i6;
                    break;
                default:
                    iArr[i6 - 1][i6] += i5;
                }
            }
        }
        long meth_res = i5 + i6 + Float.floatToIntBits(f) + i7 + s + i8 + i9 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1(int i3, int i4) {

        int i10=-135;
        int i11=-10401;
        int i12=3;
        int[] iArr1 =new int[N];
        double d2=-8.30160;
        double d3=-60.40818;
        double d4=2.92366;
        double[] dArr =new double[N];
        long l1=-2160118819L;
        float f2=0.494F;

        FuzzerUtils.init(dArr, 1.8816);
        FuzzerUtils.init(iArr1, -4);

        i4 *= (--i4);
        byMeth(i4);
        i10 -= i10;
        i10 = i3;
        d2 = 1;
        do {
            for (l1 = 1; 6 > l1; l1++) {
                switch ((int)((d2 % 6) + 54)) {
                case 54:
                    i3 += i4;
                    d3 += l1;
                    for (d4 = 1; d4 < 2; ++d4) {
                        dArr[(int) (d4)] -= Test0520.instanceCount;
                        i4 -= (int)f2;
                        i10 = i10;
                        i10 = i11;
                        try {
                            i10 = (-204 / i4);
                            i11 = (i11 % -111);
                            i10 = (i12 % -21580);
                        } catch (ArithmeticException a_e) {}
                    }
                    break;
                case 55:
                    f2 *= l1;
                    break;
                case 56:
                    iArr1[(int)(l1)] = 0;
                    break;
                case 57:
                    Test0520.instanceCount += i10;
                case 58:
                    try {
                        i10 = (181 / i3);
                        i10 = (iArr1[(int)(l1 - 1)] / 14);
                        i4 = (i3 % -54158);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 59:
                    Test0520.instanceCount -= 52069L;
                    break;
                }
            }
        } while (++d2 < 286);
        vMeth1_check_sum += i3 + i4 + i10 + Double.doubleToLongBits(d2) + l1 + i11 + Double.doubleToLongBits(d3) +
            Double.doubleToLongBits(d4) + i12 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(double d, long l, int i1) {

        double d1=100.14337;
        int i2=241, i13=65215, i14=0, i15=-4, i16=-224;
        boolean b=true;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, -10705L);

        for (d1 = 17; d1 < 296; d1++) {
            if (true & (b & b)) break;
            vMeth1(-12, i1);
            i1 += (int)(((d1 * i1) + i1) - i1);
        }
        fFld -= i1;
        i13 = 1;
        while (++i13 < 297) {
            Test0520.instanceCount += l;
            i2 <<= i13;
            fFld = i13;
            for (i14 = i13; i14 < 6; ++i14) {
                i15 = 30464;
                lArr[i13 - 1][i14] <<= i2;
            }
            i16 = 6;
            while (--i16 > 0) {
                i1 *= i14;
                l -= i16;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + l + i1 + Double.doubleToLongBits(d1) + i2 + (b ? 1 : 0) + i13 +
            i14 + i15 + i16 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i17=41047, i18=-4, i19=153, i20=-49821, i21=50436;
        long l2=-126L;
        long[] lArr1 =new long[N];
        boolean b2=true;
        short s2=12647;
        short[][] sArr =new short[N][N];

        FuzzerUtils.init(lArr1, -43591L);
        FuzzerUtils.init(sArr, (short)-21109);

        i = 338;
        do {
            short s1=10720;
            vMeth(Test0520.dFld, Test0520.instanceCount, i);
            switch (((i % 2) * 5) + 103) {
            case 108:
            case 111:
                Test0520.dFld += 99;
                Test0520.instanceCount ^= i;
                s1 -= s1;
                for (i17 = i; 74 > i17; i17++) {
                    byte by=-52;
                    boolean b1=true;
                    i18 += (((i17 * fFld) + Test0520.instanceCount) - Test0520.instanceCount);
                    by &= (byte) Test0520.instanceCount;
                    if (true) break;
                    if (true) continue;
                    if (b1) break;
                    Test0520.dFld += i18;
                    for (i19 = 1; i19 < 1; i19++) {
                        i18 = i;
                        lArr1[i17 - 1] = i20;
                        Test0520.instanceCount = i;
                        Test0520.dFld *= i17;
                        i18 += (((i19 * i20) + by) - i20);
                    }
                }
                break;
            }
        } while (--i > 0);
        i21 = 1;
        do {
            Test0520.instanceCount -= i18;
            l2 = 1;
            do {
                iArrFld[(int)(l2)] = i21;
                iArrFld[(int)(l2 + 1)] = i17;
                if (b2) continue;
                lArr1[i21 - 1] += (long) Test0520.dFld;
                Test0520.instanceCount *= i21;
                Test0520.fFld1 = Test0520.instanceCount;
                b2 = b2;
            } while (++l2 < 144);
            sArr[i21][i21 - 1] &= s2;
        } while (++i21 < 174);

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("l2 b2 s2 = " + l2 + "," + (b2 ? 1 : 0) + "," + s2);
        FuzzerUtils.out.println("lArr1 sArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0520.instanceCount fFld Test0520.dFld = " + Test0520.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0520.dFld));
        FuzzerUtils.out.println("Test0520.fFld1 Test0520.fArrFld iArrFld = " + Float.floatToIntBits(Test0520.fFld1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0520.fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0520 _instance = new Test0520();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
