// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0609 {

    public static final int N = 400;

    public static long instanceCount=178L;
    public int iFld=-51004;
    public static byte byFld=62;
    public static volatile int iFld1=34887;
    public static float fFld=-1.842F;
    public int iFld2=-6552;
    public static int[][] iArrFld =new int[N][N];

    static {
        FuzzerUtils.init(Test0609.iArrFld, -49663);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        double d1=0.31798;
        int i8=109, i9=-32115, i10=3, i11=0, i12=-3;
        float f=0.195F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 3L);

        d1 -= Test0609.byFld;
        d1 = Test0609.iFld1;
        for (i8 = 2; 369 > i8; i8++) {
            for (i10 = 1; i10 < 5; i10++) {
                i12 = 1;
                while (++i12 < 2) {
                    lArr1[i8] += (long)-85.108075;
                    lArr1[i12 + 1] = (long)1.40F;
                    f = i11;
                    Test0609.instanceCount %= (Test0609.byFld | 1);
                    i9 = 3;
                    switch (((i8 % 3) * 5) + 116) {
                    case 129:
                        Test0609.instanceCount <<= Test0609.instanceCount;
                        Test0609.instanceCount *= i9;
                        i9 <<= i10;
                    case 120:
                        i9 += (-91 + (i12 * i12));
                        break;
                    case 127:
                        lArr1[i10 + 1] = -66;
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i7) {


        vMeth1();
        vMeth_check_sum += i7;
    }

    public int iMeth() {

        int i5=-4, i6=13, i13=22585, i14=159, i15=52596, i16=-215, i17=17340, i18=-177;

        for (i5 = 19; i5 < 334; i5++) {
            Test0609.iArrFld[i5 + 1][i5 + 1] -= (iFld++);
            iFld /= (int)((i6++) | 1);
        }
        vMeth(iFld);
        Test0609.fFld = Test0609.instanceCount;
        i6 -= -19119;
        Test0609.instanceCount -= Test0609.instanceCount;
        Test0609.instanceCount = 5278688421347500007L;
        for (i13 = 24; 386 > i13; i13++) {
            Test0609.byFld += (byte) i6;
            Test0609.instanceCount <<= Test0609.instanceCount;
        }
        for (i15 = 6; i15 < 334; i15++) {
            for (i17 = 1; i17 < 5; ++i17) {
                i14 &= (int) Test0609.instanceCount;
                i18 >>= -14;
            }
        }
        long meth_res = i5 + i6 + i13 + i14 + i15 + i16 + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=26316, i1=13, i2=-23, i3=144, i4=13, i19=-102, i20=107, i21=-54144, i22=-175, i23=-2, i24=-10, i25=75,
            i26=73;
        double d=0.112617;
        boolean b=true;
        long l=6845963845941274885L;
        long[] lArr =new long[N];
        float f1=-1.227F;
        float[] fArr =new float[N];

        FuzzerUtils.init(lArr, -1474212908L);
        FuzzerUtils.init(fArr, 13.548F);

        Test0609.iArrFld[(i >>> 1) % N][(i >>> 1) % N] &= Test0609.iArrFld[(i >>> 1) % N][(i >>> 1) % N];
        for (i1 = 5; 151 > i1; ++i1) {
            Test0609.instanceCount *= (long) (((Test0609.iArrFld[i1 - 1][i1]++) * (lArr[i1 + 1] >>>= -69)) - d);
            for (i3 = 3; i3 < 172; i3++) {
                Test0609.iArrFld[(iFld >>> 1) % N][i1 + 1] = (int) (d++);
            }
            i2 += i1;
            Test0609.instanceCount = Math.max(i1, (int) ((d - d) - 39690));
            iMeth();
        }
        Test0609.instanceCount -= iFld2;
        if (b) {
            iFld += iFld2;
        } else if (b) {
            for (i19 = 2; i19 < 300; i19++) {
                Test0609.iFld1 += (i19 ^ (long) Test0609.fFld);
            }
        } else {
            for (i21 = 11; i21 < 381; i21++) {
                for (l = i21; l < 68; ++l) {
                    i24 = 1;
                    do {
                        Test0609.instanceCount = i23;
                        i2 += i24;
                        fArr[i21 + 1] += iFld;
                        i22 -= (int)-2585453336L;
                        i4 -= (int) Test0609.fFld;
                        Test0609.fFld += (i24 + i);
                        Test0609.iArrFld[i24][(int) (l + 1)] += -107;
                        Test0609.instanceCount += (((i24 * iFld) + i25) - i2);
                        lArr[i21] &= Test0609.instanceCount;
                        lArr[i21 + 1] = i19;
                    } while (++i24 < 1);
                    d += i22;
                    for (f1 = 1; f1 < 1; f1++) {
                        d += 12;
                        Test0609.byFld -= (byte) i20;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("d i3 i4 = " + Double.doubleToLongBits(d) + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i19 i20 b = " + i19 + "," + i20 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i21 i22 l = " + i21 + "," + i22 + "," + l);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f1 i26 lArr = " + Float.floatToIntBits(f1) + "," + i26 + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0609.instanceCount iFld Test0609.byFld = " + Test0609.instanceCount + "," + iFld + "," +
                Test0609.byFld);
        FuzzerUtils.out.println("Test0609.iFld1 Test0609.fFld iFld2 = " + Test0609.iFld1 + "," + Float.floatToIntBits(Test0609.fFld) +
            "," + iFld2);
        FuzzerUtils.out.println("Test0609.iArrFld = " + FuzzerUtils.checkSum(Test0609.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0609 _instance = new Test0609();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
