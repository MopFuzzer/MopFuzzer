// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:19 2023
public class Test0158 {

    public static final int N = 400;

    public static long instanceCount=-23634L;
    public static float fFld=48.855F;
    public static boolean bFld=false;
    public static double dFld=73.100536;
    public short sFld=10818;
    public static long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0158.lArrFld, -17097L);
        FuzzerUtils.init(Test0158.fArrFld, -1.345F);
        FuzzerUtils.init(Test0158.iArrFld, -14);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static int iMeth1(byte by1) {

        int i7=0;

        i7 = (int) (i7 * ((--Test0158.instanceCount) - i7));
        long meth_res = by1 + i7;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i10, boolean b) {

        int i11=-53697, i12=13, i13=-24, i14=-14;
        byte by2=67;
        short s1=1775;
        double d=-44.92301;

        Test0158.iArrFld[(i10 >>> 1) % N] = i10;
        Test0158.instanceCount *= Test0158.instanceCount;
        Test0158.iArrFld[(i10 >>> 1) % N] *= i10;
        i10 += (int) Test0158.instanceCount;
        i10 -= i10;
        for (i11 = 14; i11 < 354; ++i11) {
            for (i13 = 5; i13 > 1; i13--) {
                i10 += i12;
                i10 -= (int) Test0158.instanceCount;
                i14 <<= (int) Test0158.instanceCount;
                i14 = by2;
                Test0158.iArrFld[i11] *= s1;
                d = Test0158.instanceCount;
                i12 /= (int) (Test0158.instanceCount | 1);
                i12 += (i13 + Test0158.instanceCount);
            }
        }
        vMeth1_check_sum += i10 + (b ? 1 : 0) + i11 + i12 + i13 + i14 + by2 + s1 + Double.doubleToLongBits(d);
    }

    public static void vMeth(int i8, int i9) {

        short s2=22526;
        int i15=42608, i16=-110, i17=8, i18=-246;
        float f=21.484F;

        i9 = (int) (Test0158.fFld++);
        vMeth1(-12, Test0158.bFld);
        Test0158.fFld *= s2;
        for (long l : Test0158.lArrFld) {
            i8 += i8;
            for (i15 = 1; i15 < 4; ++i15) {
                i9 += (int) Test0158.dFld;
                if (i8 != 0) {
                    vMeth_check_sum += i8 + i9 + s2 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f);
                    return;
                }
                for (i17 = 2; i17 > 1; --i17) {
                    i18 = (int) Test0158.dFld;
                    Test0158.instanceCount *= l;
                    if (i17 != 0) {
                        vMeth_check_sum += i8 + i9 + s2 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f);
                        return;
                    }
                    Test0158.lArrFld[i17 + 1] ^= Test0158.instanceCount;
                    f += (-2L + (i17 * i17));
                    i16 += (i17 | Test0158.instanceCount);
                }
            }
        }
        vMeth_check_sum += i8 + i9 + s2 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f);
    }

    public static int iMeth(byte by) {

        int i1=12;
        int i2=17304;
        int i3=-121;
        int i4=-49426;
        int i5=-14573;
        int i6=6;
        int[] iArr =new int[N];
        short s=5370;

        FuzzerUtils.init(iArr, -15963);

        for (i1 = 14; i1 < 250; i1++) {
            for (i3 = 7; 1 < i3; --i3) {
                for (i5 = i1; i5 < 2; ++i5) {
                    i4 = (int)((-(-(-1.61933 - (i1 + 17837)))) + (i6++));
                    iArr[i1] -= ((-(-(i1 - i4))) - iMeth1((byte)(-(s++))));
                    i2 += (i5 * i5);
                    Test0158.lArrFld[i5 + 1] <<= i5;
                    Test0158.fArrFld[i3 + 1] *= Test0158.instanceCount;
                    vMeth(i3, i2);
                    Test0158.fFld = Test0158.instanceCount;
                    i4 += i5;
                }
                iArr[i3] = i5;
                Test0158.fFld += (i3 * i3);
            }
            i6 = i6;
            s = (short)i5;
        }
        long meth_res = by + i1 + i2 + i3 + i4 + i5 + i6 + s + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=48888, i19=-11, i20=39076, i21=-97, i22=-2, i23=7, i24=39296, i25=-175, i26=-157, i27=83, i28=-3,
            i29=-44985, i30=0;
        byte by4=-126;
        double d1=-35.76973;

        i += iMeth((byte)(-62));
        for (long l1 : Test0158.lArrFld) {
            for (i19 = 1; i19 < 63; i19 += 3) {
                for (i21 = 1; i21 < 4; ++i21) {
                    byte by3=35;
                    Test0158.fFld += (-202 + (i21 * i21));
                    i20 = -1;
                    Test0158.fFld = i22;
                    i22 += i21;
                    Test0158.fArrFld[i21 + 1] = by3;
                    Test0158.iArrFld = FuzzerUtils.int1array(N, (int) 0);
                    i23 = -7805;
                    i23 = i19;
                    by3 = (byte)37916L;
                    Test0158.dFld = 0.616F;
                }
                i = i22;
            }
            for (i24 = 1; i24 < 63; i24++) {
                i20 *= -107;
            }
            Test0158.iArrFld[(i23 >>> 1) % N] >>= i25;
            for (i26 = 3; i26 < 63; ++i26) {
                Test0158.lArrFld = Test0158.lArrFld;
                sFld = (short)i19;
                i23 = (int)l1;
                Test0158.iArrFld = FuzzerUtils.int1array(N, (int) -37982);
            }
            by4 <<= (byte)i26;
            for (i28 = 2; i28 < 63; ++i28) {
                for (d1 = 1; d1 < 2; ++d1) {
                    Test0158.iArrFld[(int) (d1 + 1)] = i27;
                    Test0158.fFld = i27;
                    Test0158.iArrFld[i28 + 1] = i24;
                    i20 = i19;
                }
            }
        }

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 by4 i28 = " + i27 + "," + by4 + "," + i28);
        FuzzerUtils.out.println("i29 d1 i30 = " + i29 + "," + Double.doubleToLongBits(d1) + "," + i30);

        FuzzerUtils.out.println("Test0158.instanceCount Test0158.fFld Test0158.bFld = " + Test0158.instanceCount + "," +
                Float.floatToIntBits(Test0158.fFld) + "," + (Test0158.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0158.dFld sFld Test0158.lArrFld = " + Double.doubleToLongBits(Test0158.dFld) + "," + sFld +
                "," + FuzzerUtils.checkSum(Test0158.lArrFld));
        FuzzerUtils.out.println("Test0158.fArrFld Test0158.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0158.fArrFld)) + "," + FuzzerUtils.checkSum(Test0158.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0158 _instance = new Test0158();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
