// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0449 {

    public static final int N = 400;

    public static long instanceCount=-1436159720092829828L;
    public static volatile float fFld=0.650F;
    public static short sFld=-16571;
    public int iFld=-44363;
    public static int iFld1=60526;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0449.iArrFld, 2);
    }

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, double d1, float f1) {

        int i7=-52605;
        int i8=127;
        int i9=7;
        int i10=-34833;
        int i11=248;
        int[] iArr1 =new int[N];
        boolean b=true;
        short s=-16524;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)2962);
        FuzzerUtils.init(iArr1, -2);

        if (b) {
            i7 = 191;
            while (--i7 > 0) {
                b = false;
                s += s;
                if (b) break;
                d1 = 1.67960;
                if (i7 != 0) {
                    vMeth1_check_sum += l + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i7 + (b ? 1 : 0) +
                        s + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
        }
        for (i8 = 176; i8 > 4; i8 -= 3) {
            i9 = (int)d1;
            for (i10 = 1; i10 < 27; i10++) {
                i9 += i10;
                sArr = FuzzerUtils.short1array(N, (short)-3852);
                try {
                    i11 = (i10 / i9);
                    i9 = (i10 % -21101);
                    i9 = (-470728481 / iArr1[i8 - 1]);
                } catch (ArithmeticException a_e) {}
                i11 += (i10 * i10);
                i11 = i11;
            }
        }
        vMeth1_check_sum += l + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i7 + (b ? 1 : 0) + s + i8 + i9
            + i10 + i11 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i5, int i6, float f) {

        double d2=-29.27513;
        int i12=10, i13=-43426, i15=-6, i16=80, i17=-192, i18=-122;
        short s1=7442;
        short[] sArr1 =new short[N];
        byte by=-65;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 103.503F);
        FuzzerUtils.init(sArr1, (short)-31831);

        vMeth1(Test0449.instanceCount, d2, f);
        for (i12 = 10; i12 < 163; i12++) {
            s1 += (short)i12;
            for (i15 = 1; 10 > i15; ++i15) {
                i13 = i5;
                fArr = FuzzerUtils.float1array(N, (float)-81.524F);
                i16 = (int) Test0449.instanceCount;
                d2 = i15;
                for (i17 = 1; i17 < 2; i17++) {
                    f = (float)d2;
                    Test0449.iArrFld[i15] = (int) 1788983767L;
                    Test0449.instanceCount = i12;
                    sArr1[i15 + 1] = (short) Test0449.instanceCount;
                    by += (byte)(((i17 * i5) + f) - s1);
                    i18 <<= (int) Test0449.instanceCount;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i12 + i13 + s1 + i15 + i16
            + i17 + i18 + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(sArr1);
    }

    public static byte byMeth() {

        int i=17806;
        int i1=-50266;
        int i2=-14;
        int i3=9;
        int i4=60663;
        int[] iArr =new int[N];
        boolean b1=true;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(fArr1, 0.249F);

        i = 1;
        do {
            for (i1 = 1; i1 < 4; i1 += 3) {
                switch ((i1 % 2) + 39) {
                case 39:
                    for (i3 = 1; 4 > i3; ++i3) {
                        Test0449.instanceCount += i3;
                        i2 += i3;
                        i4 <<= (--i2);
                        Test0449.fFld += (i1 - (++i2));
                        iArr[i1 + 1] ^= (int) (Test0449.instanceCount++);
                        if (true) {
                            switch (((Integer.reverseBytes(i1) >>> 1) % 6) + 93) {
                            case 93:
                                vMeth(i, i3, Test0449.fFld);
                                if (b1) break;
                                break;
                            case 94:
                                try {
                                    i2 = (Test0449.iArrFld[i] / i1);
                                    i2 = (i3 % 238);
                                    iArr[i3] = (i1 % -300823292);
                                } catch (ArithmeticException a_e) {}
                                i4 &= i;
                                break;
                            case 95:
                                if (b1) break;
                            case 96:
                                iArr = FuzzerUtils.int1array(N, (int)217);
                            case 97:
                                i4 += (-177 + (i3 * i3));
                                break;
                            case 98:
                                Test0449.instanceCount += (((i3 * Test0449.instanceCount) + i) - i4);
                                break;
                            }
                        } else if (b1) {
                            fArr1[i] += i4;
                        } else if (b1) {
                            i4 = i2;
                        } else {
                            Test0449.instanceCount *= -1;
                        }
                    }
                    break;
                case 40:
                    Test0449.instanceCount -= Test0449.instanceCount;
                    break;
                }
            }
        } while (++i < 382);
        long meth_res = i + i1 + i2 + i3 + i4 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.89247;
        double[] dArr =new double[N];
        byte by1=-82;
        int i19=-4, i20=-14, i21=-13, i22=49912, i23=0, i24=-45, i25=13, i26=2;
        long l1=-1169348659L;
        long l2=-2600389034240599435L;
        long[] lArr =new long[N];
        float f2=0.527F;

        FuzzerUtils.init(lArr, 11L);
        FuzzerUtils.init(dArr, 38.120530);

        d -= (byMeth() + Test0449.sFld);
        by1 = (byte)i19;
        l1 = 129;
        do {
            for (i20 = 3; i20 < 194; ++i20) {
                i19 >>= -51201;
                for (f2 = l1; f2 < 2; f2++) {
                    i21 ^= (int) Test0449.instanceCount;
                    i22 -= (int)l2;
                    i19 <<= i19;
                    Test0449.fFld = 0.225F;
                }
                for (i23 = 1; i23 < 2; ++i23) {
                    i19 = i20;
                }
                Test0449.fFld += i23;
                i24 += i20;
                for (i25 = i20; 2 > i25; ++i25) {
                    switch (((i22 >>> 1) % 6) + 108) {
                    case 108:
                        switch ((((i20 >>> 1) % 3) * 5) + 33) {
                        case 44:
                            Test0449.instanceCount += i25;
                            i26 = by1;
                            i26 -= i22;
                            break;
                        case 48:
                            i22 = 21668;
                            Test0449.instanceCount *= (long) f2;
                            lArr = lArr;
                            i21 -= i20;
                            break;
                        case 41:
                            Test0449.instanceCount = i22;
                            Test0449.iArrFld[i20] *= iFld;
                            i19 = i22;
                            dArr = dArr;
                            break;
                        }
                        i22 = Test0449.iFld1;
                    case 109:
                        i22 >>>= iFld;
                    case 110:
                        Test0449.fFld = f2;
                        break;
                    case 111:
                        i24 -= (int) Test0449.fFld;
                        break;
                    case 112:
                        Test0449.iFld1 >>= 1;
                        break;
                    case 113:
                        i21 = iFld;
                        break;
                    default:
                        Test0449.instanceCount = -74;
                    }
                }
            }
        } while (--l1 > 0);

        FuzzerUtils.out.println("d by1 i19 = " + Double.doubleToLongBits(d) + "," + by1 + "," + i19);
        FuzzerUtils.out.println("l1 i20 i21 = " + l1 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("f2 i22 l2 = " + Float.floatToIntBits(f2) + "," + i22 + "," + l2);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 lArr dArr = " + i26 + "," + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0449.instanceCount Test0449.fFld Test0449.sFld = " + Test0449.instanceCount + "," +
                Float.floatToIntBits(Test0449.fFld) + "," + Test0449.sFld);
        FuzzerUtils.out.println("iFld Test0449.iFld1 Test0449.iArrFld = " + iFld + "," + Test0449.iFld1 + "," +
                FuzzerUtils.checkSum(Test0449.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0449 _instance = new Test0449();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
