// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0048 {

    public static final int N = 400;

    public static long instanceCount=-35L;
    public static volatile int iFld=-170;
    public static byte byFld=-95;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0048.iArrFld, -53568);
        FuzzerUtils.init(Test0048.lArrFld, 70L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        double d=14.63036;
        int i4=36799, i5=-22807, i6=-59184, i7=4, i8=-14, i9=38279, i10=-13;
        boolean b=false;

        d -= Test0048.instanceCount;
        Test0048.instanceCount <<= Test0048.iFld;
        i4 = 251;
        do {
            d -= i4;
        } while ((i4 -= 3) > 0);
        for (i5 = 7; 338 > i5; i5++) {
            Test0048.byFld = (byte) Test0048.iFld;
            Test0048.instanceCount /= (i6 | 1);
            i3 += (-32531 + (i5 * i5));
        }
        for (i7 = 12; i7 < 393; ++i7) {
            Test0048.instanceCount = Test0048.instanceCount;
            for (i9 = 1; i9 < 4; ++i9) {
                int i11=155;
                i10 += i9;
                Test0048.iArrFld[i7] = i11;
                if (b) continue;
                Test0048.byFld *= (byte) i6;
            }
        }
        vMeth1_check_sum += i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0);
    }

    public static void vMeth() {

        int i=8, i1=-192, i2=11, i12=-178;
        float f=-113.799F, f1=-15.716F;
        double d1=-91.46119;

        for (i = 9; i < 159; i++) {
            for (f = 1; f < 11; f++) {
                Test0048.instanceCount = Math.abs(i1++);
            }
            vMeth1(i1);
            d1 += i2;
            if (Test0048.bFld) break;
            i1 = i2;
            for (f1 = 1; f1 < 11; f1++) {
                i1 += (int)d1;
                i12 -= i1;
                i12 -= (int)d1;
                switch ((((Test0048.iFld >>> 1) % 1) * 5) + 67) {
                case 68:
                }
                if (i2 != 0) {
                    vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d1) +
                        Float.floatToIntBits(f1) + i12;
                    return;
                }
                i12 = (int)f1;
                if (Test0048.bFld) continue;
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1) + i12;
    }

    public static long lMeth() {

        int i13=-2403, i14=17530, i15=7058, i16=31034, i17=-28438, i18=-40115;
        float f2=2.239F;

        Test0048.iFld += (int) Test0048.instanceCount;
        vMeth();
        for (i13 = 3; i13 < 224; i13++) {
            Test0048.instanceCount = i13;
            switch ((((i13 >>> 1) % 3) * 5) + 84) {
            case 85:
                for (i15 = 1; 7 > i15; i15++) {
                    Test0048.iFld -= (int) Test0048.instanceCount;
                }
                for (i17 = 1; i17 < 7; ++i17) {
                    i16 >>>= (int) Test0048.instanceCount;
                    switch ((i13 % 6) + 85) {
                    case 85:
                        i18 = 5534;
                        i16 += (int) Test0048.instanceCount;
                        Test0048.byFld -= (byte) 1.762F;
                        i16 -= (int) Test0048.instanceCount;
                    case 86:
                        i18 = i17;
                        break;
                    case 87:
                        i14 += (int)(46151L + (i17 * i17));
                        break;
                    case 88:
                        i18 += i13;
                        break;
                    case 89:
                        Test0048.iArrFld[i17 - 1] = (int) f2;
                        break;
                    case 90:
                    }
                }
                break;
            case 89:
                Test0048.instanceCount += (long) f2;
                break;
            case 97:
                Test0048.iArrFld[i13] >>= i15;
                break;
            }
        }
        long meth_res = i13 + i14 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=-110.1002F;
        float f4=38.709F;
        float[][] fArr =new float[N][N];
        int i19=46, i20=10, i21=-32892, i22=-2, i23=191, i24=-2, i25=-109, i26=-23028, i27=29484;
        double d2=0.92915;
        short s=-23764;
        boolean b1=true;

        FuzzerUtils.init(fArr, -88.935F);

        lMeth();
        f3 *= 2963617825L;
        for (i19 = 290; i19 > 13; i19--) {
            int i28=-229;
            i20 = i19;
            switch ((i19 % 4) + 104) {
            case 104:
                d2 -= Test0048.instanceCount;
                for (f4 = 91; f4 > 5; f4--) {
                    Test0048.iArrFld[i19 - 1] += (int) f3;
                }
                for (i22 = 4; i22 < 91; ++i22) {
                    Test0048.instanceCount -= i21;
                }
                break;
            case 105:
                if (b1) {
                    i23 = i21;
                } else if (true) {
                    fArr[i19 - 1][i19] = (float)d2;
                    for (i24 = 4; i24 < 91; i24++) {
                        for (i26 = 1; i26 < 2; i26++) {
                            i25 = i25;
                            if (Test0048.bFld) {
                                Test0048.lArrFld[i19] &= i27;
                                Test0048.instanceCount *= Test0048.instanceCount;
                                s += (short)(i26 * i26);
                                switch ((i24 % 2) + 19) {
                                case 19:
                                    fArr[i19 + 1][i26] += Test0048.iFld;
                                    Test0048.bFld = Test0048.bFld;
                                    i21 += (int)f4;
                                    if (Test0048.bFld) {
                                        d2 *= i22;
                                        i20 = (int)-96.254F;
                                    } else if (Test0048.bFld) {
                                        Test0048.iArrFld[i19 - 1] = i22;
                                        i20 *= (int)f4;
                                        try {
                                            i21 = (-221 / i24);
                                            Test0048.iFld = (44406 / i22);
                                            i27 = (i27 % -55726);
                                        } catch (ArithmeticException a_e) {}
                                    } else if (false) {
                                        f3 = i22;
                                    }
                                case 20:
                                    Test0048.instanceCount = Test0048.iFld;
                                    break;
                                }
                            } else {
                                i27 += (int)d2;
                            }
                        }
                    }
                } else if (b1) {
                    Test0048.iFld = i19;
                } else {
                    Test0048.instanceCount -= (long) f3;
                }
            case 106:
                Test0048.byFld -= (byte) Test0048.instanceCount;
            case 107:
                i28 += 165;
                break;
            }
        }

        FuzzerUtils.out.println("f3 i19 i20 = " + Float.floatToIntBits(f3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d2 f4 i21 = " + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f4) + "," +
            i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("s b1 fArr = " + s + "," + (b1 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0048.instanceCount Test0048.iFld Test0048.byFld = " + Test0048.instanceCount + "," + Test0048.iFld +
                "," + Test0048.byFld);
        FuzzerUtils.out.println("Test0048.bFld Test0048.iArrFld Test0048.lArrFld = " + (Test0048.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0048.iArrFld) + "," + FuzzerUtils.checkSum(Test0048.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0048 _instance = new Test0048();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
