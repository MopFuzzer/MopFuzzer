// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:59 2023
public class Test0996 {

    public static final int N = 400;

    public static long instanceCount=94L;
    public static float fFld=-2.701F;
    public byte byFld=125;
    public int iFld=9;
    public static int iFld1=16;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0996.iArrFld, -4);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth(int i, int i1, int i2) {

        int i3=-23248;
        int i4=26051;
        int[] iArr =new int[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -17076);
        FuzzerUtils.init(lArr, -7996L);

        iArr[(i1 >>> 1) % N] = (int)((iArr[(-10 >>> 1) % N]--) + (lArr[(i1 >>> 1) % N]--));
        for (i3 = 8; i3 < 295; ++i3) {
            Test0996.fFld = ((++Test0996.instanceCount) - Math.min(9, i4));
            i1 = (int) ((i++) + (-(i2 + Test0996.instanceCount)));
        }
        i2 = (int) Math.abs(Test0996.instanceCount);
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(float f, float f1, long l) {

        int i8=171, i9=-119, i10=100, i11=46877, i12=167, i13=-3;
        boolean b1=false;
        double d=-109.32631;
        byte by=98;

        vMeth(i8, i8, i8);
        if (b1) {
            if (true) {
                Test0996.iArrFld[(45 >>> 1) % N] -= 14504;
                f1 = l;
                for (i9 = 18; i9 < 319; i9 += 2) {
                    for (i11 = 1; 11 > i11; ++i11) {
                        i13 = 1;
                        while (++i13 < 2) {
                            switch (((i9 >>> 1) % 7) + 60) {
                            case 60:
                            case 61:
                                if (b1) continue;
                                if (b1) {
                                    i8 += (((i13 * i11) + i13) - Test0996.fFld);
                                    Test0996.iArrFld[i9] = i9;
                                    d /= (i8 | 1);
                                } else if (b1) {
                                    Test0996.fFld = l;
                                } else {
                                    i8 >>>= i12;
                                }
                            case 62:
                                by >>= (byte)i13;
                                break;
                            case 63:
                                Test0996.fFld -= i12;
                                break;
                            case 64:
                                Test0996.instanceCount -= i13;
                                break;
                            case 65:
                                l = i10;
                            case 66:
                                b1 = b1;
                            default:
                                i12 = (int)l;
                            }
                        }
                    }
                }
            } else {
                i10 *= i10;
            }
        } else if (b1) {
            d += d;
        } else {
            i8 = i8;
        }
        long meth_res = Float.floatToIntBits(f) + Float.floatToIntBits(f1) + l + i8 + i9 + i10 + i11 + i12 + i13 + (b1
            ? 1 : 0) + Double.doubleToLongBits(d) + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static short sMeth(int i6, int i7, boolean b) {

        int i14=-110, i15=115, i16=60, i17=38314;
        byte by1=-75;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -593879120406794214L);

        Test0996.iArrFld[(i6 >>> 1) % N] *= (int) Math.max((long) ((i6 += (int) 1.230F) + Test0996.instanceCount),
                lMeth(Test0996.fFld, Test0996.fFld, Test0996.instanceCount));
        lArr1[(i7 >>> 1) % N] -= -8;
        for (i14 = 18; i14 < 375; i14++) {
            switch (((i6 >>> 1) % 1) + 53) {
            case 53:
                for (i16 = 1; i16 < 5; ++i16) {
                    switch (((i14 % 7) * 5) + 39) {
                    case 52:
                        Test0996.iArrFld[i14 + 1] = (int) Test0996.fFld;
                        Test0996.iArrFld[i14 + 1] -= i16;
                        i15 += (i16 * i7);
                        by1 *= (byte) Test0996.fFld;
                        break;
                    case 41:
                        Test0996.instanceCount = i7;
                        i15 += (i16 * i16);
                        Test0996.instanceCount = i16;
                        Test0996.instanceCount |= i6;
                        break;
                    case 40:
                        i15 >>>= i7;
                        break;
                    case 57:
                        i17 += (int) Test0996.instanceCount;
                    case 59:
                        i6 += (i16 * i16);
                        break;
                    case 43:
                        i15 = (int) Test0996.fFld;
                    case 47:
                        i15 >>>= i16;
                        break;
                    default:
                        by1 += (byte)(i16 + i7);
                    }
                }
                break;
            }
        }
        long meth_res = i6 + i7 + (b ? 1 : 0) + i14 + i15 + i16 + i17 + by1 + FuzzerUtils.checkSum(lArr1);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i5=-238, i18=11480, i19=11, i20=-6751, i21=-16785, i22=19555, i23=-49, i25=62731;
        boolean b2=true;
        double d1=-113.120724;
        short s=-12204;

        vMeth(i5, i5 * i5, sMeth(i5, i5, b2) - -4);
        for (i18 = 11; i18 < 235; i18++) {
            Test0996.fFld += (float) d1;
            if (false) {
                for (i20 = 3; i20 < 112; i20++) {
                    for (i22 = 1; 2 > i22; i22++) {
                        int i24=-44168;
                        i24 = i18;
                        try {
                            i21 = (-385435771 / i20);
                            i5 = (i19 % i21);
                            Test0996.iArrFld[i22 - 1] = (i21 % i18);
                        } catch (ArithmeticException a_e) {}
                        d1 -= i23;
                        Test0996.instanceCount = i20;
                    }
                    i19 = i19;
                    i25 = 1;
                    do {
                        b2 = b2;
                        byFld = (byte)12444L;
                        switch (((i20 >>> 1) % 2) + 43) {
                        case 43:
                            i5 >>= 11;
                            i23 %= (int)(i23 | 1);
                        case 44:
                            if (b2) {
                                Test0996.fFld += i18;
                                Test0996.fFld *= -77;
                                switch (((i20 % 10) * 5) + 94) {
                                case 129:
                                    byFld <<= (byte)i21;
                                    break;
                                case 96:
                                    Test0996.instanceCount = -8;
                                    break;
                                case 107:
                                    i5 += (i25 * iFld);
                                    i19 *= i23;
                                    i21 += (i25 * i25);
                                    break;
                                case 142:
                                    Test0996.instanceCount >>= 0;
                                    Test0996.iArrFld[i20 - 1] *= (int) Test0996.instanceCount;
                                    break;
                                case 106:
                                    d1 = 5;
                                    i5 += (((i25 * i20) + byFld) - i22);
                                    break;
                                case 139:
                                case 119:
                                case 122:
                                    d1 *= Test0996.fFld;
                                    break;
                                case 105:
                                    Test0996.iArrFld[i20] -= i23;
                                    break;
                                case 101:
                                    i5 *= (int)1.389F;
                                    break;
                                }
                            } else if (b2) {
                                i19 -= Test0996.iFld1;
                            }
                            break;
                        }
                    } while (++i25 < 2);
                }
            } else {
                i23 = s;
            }
        }

        FuzzerUtils.out.println("i5 b2 i18 = " + i5 + "," + (b2 ? 1 : 0) + "," + i18);
        FuzzerUtils.out.println("i19 d1 i20 = " + i19 + "," + Double.doubleToLongBits(d1) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i25 s = " + i25 + "," + s);

        FuzzerUtils.out.println("Test0996.instanceCount Test0996.fFld byFld = " + Test0996.instanceCount + "," +
                Float.floatToIntBits(Test0996.fFld) + "," + byFld);
        FuzzerUtils.out.println("iFld Test0996.iFld1 Test0996.iArrFld = " + iFld + "," + Test0996.iFld1 + "," +
                FuzzerUtils.checkSum(Test0996.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0996 _instance = new Test0996();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest lMeth sMeth
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  lMeth ->  lMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
