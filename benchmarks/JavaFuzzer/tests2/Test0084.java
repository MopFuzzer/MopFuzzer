// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0084 {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public static float fFld=0.259F;
    public static byte byFld=-62;
    public static boolean bFld=true;
    public static int iFld=63585;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public double[][] dArrFld =new double[N][N];

    static {
        FuzzerUtils.init(Test0084.iArrFld, 3);
        FuzzerUtils.init(Test0084.fArrFld, 2.123F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l3, int i4, int i5) {

        int i6=-178, i7=55762, i8=9, i9=-2;
        double d=2.22704;
        boolean b=true;
        short s=19840;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 63.711F);

        for (i6 = 4; i6 < 340; ++i6) {
            i7 >>>= 4;
            i5 += i6;
            for (i8 = i6; i8 < 5; ++i8) {
                fArr[i8 + 1] /= (Test0084.instanceCount | 1);
                i9 >>= 1;
                switch ((i6 % 10) + 58) {
                case 58:
                    i7 -= i4;
                    l3 += (long)d;
                    if (b) break;
                    break;
                case 59:
                    d = -2.264F;
                    Test0084.iArrFld[i6] = (int) Test0084.instanceCount;
                    fArr[i6] += -2956544242L;
                    break;
                case 60:
                    i7 = 62865;
                    if (true) continue;
                case 61:
                    s <<= (short)i9;
                    break;
                case 62:
                case 63:
                    Test0084.byFld = (byte) -167;
                case 64:
                    i7 >>= 89;
                case 65:
                    if (i5 != 0) {
                    }
                    break;
                case 66:
                    Test0084.iArrFld[i6 - 1] *= -17803;
                case 67:
                    if (b) continue;
                    break;
                }
            }
        }
        long meth_res = l3 + i4 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + (b ? 1 : 0) + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l2) {

        int i1=-14;
        int i2=36898;
        int i3=52584;
        int[] iArr =new int[N];
        boolean b1=false;
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(byArr, (byte)105);

        for (i1 = 1; i1 < 362; i1++) {
            i3 = 1;
            do {
                short s1=-15757;
                long l4=209L;
                switch (((i3 % 2) * 5) + 73) {
                case 75:
                    iArr[i1] -= (int) ((Test0084.fFld + Test0084.byFld) - iMeth1(Test0084.instanceCount, i3, 106));
                    i2 = i3;
                    i2 = 6;
                    if (false) break;
                    break;
                case 76:
                    i2 += (i3 - Test0084.fFld);
                    i2 ^= (int)7L;
                    if (b1) {
                        Test0084.iArrFld[i3 - 1] = s1;
                        i2 -= i2;
                        i2 = i3;
                    } else if (b1) {
                        byArr[i1 - 1][i1 - 1] *= (byte)i2;
                        i2 = (int)l4;
                    }
                    break;
                default:
                    Test0084.fArrFld[i3 + 1] += Test0084.fFld;
                }
            } while (++i3 < 5);
        }
        long meth_res = l2 + i1 + i2 + i3 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, long l1, int i) {

        int i10=-5, i11=137, i12=-63611, i13=50373, i14=-245;
        double d1=119.45499;

        if (true) {
            i -= iMeth(l1);
        } else if (Test0084.bFld) {
            Test0084.iArrFld[(i >>> 1) % N] -= (int) l1;
            for (i10 = 3; i10 < 280; i10++) {
                l -= 54390;
                Test0084.fFld = -13205;
                for (i12 = 1; i12 < 6; ++i12) {
                    Test0084.instanceCount = -5L;
                    Test0084.iArrFld[i10 + 1] = i10;
                    if (Test0084.bFld) break;
                    i13 = (int)-41001L;
                    i14 = 1;
                    while (++i14 < 2) {
                        i13 += i14;
                        i ^= i10;
                        Test0084.byFld -= (byte) d1;
                    }
                }
            }
            vMeth_check_sum += l + l1 + i + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1);
            return;
        }
        vMeth_check_sum += l + l1 + i + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i15=44334, i16=-173, i17=68, i18=-9, i19=-42024;
        long l5=5L;
        long l6=-1602495360L;
        long[] lArr =new long[N];
        short s2=-10130;

        FuzzerUtils.init(lArr, -1068300538L);

        vMeth(Test0084.instanceCount, 38L, Test0084.iFld);
        Test0084.iFld += (int) Test0084.instanceCount;
        Test0084.iFld -= Test0084.iFld;
        for (i15 = 5; i15 < 178; i15++) {
            switch ((i15 % 4) + 69) {
            case 69:
                Test0084.instanceCount += i15;
                break;
            case 70:
                for (i17 = 5; i17 < 145; ++i17) {
                    for (l5 = 2; l5 > i15; l5 -= 3) {
                        lArr[i17] = -51621;
                        Test0084.iFld += i15;
                        Test0084.fFld /= (l5 | 1);
                        Test0084.iFld += i18;
                    }
                    l6 = 1;
                    do {
                        i18 += (int)(l6 * l6);
                        i19 -= s2;
                        Test0084.fFld += i16;
                        i16 = -26534;
                        if (Test0084.bFld) {
                            Test0084.instanceCount = l5;
                            Test0084.fFld = i19;
                            Test0084.iArrFld[i17] *= i15;
                            dArrFld[(int)(l6)] = dArrFld[i17 + 1];
                        } else if (false) {
                            if (Test0084.bFld) break;
                            Test0084.instanceCount += i17;
                            Test0084.instanceCount = i18;
                        } else {
                            s2 <<= (short)i17;
                            i19 = -103;
                            Test0084.instanceCount = i17;
                        }
                        Test0084.fFld = i18;
                        if (Test0084.bFld) break;
                    } while (++l6 < 2);
                }
                break;
            case 71:
                Test0084.byFld += (byte) (i15 * i15);
                break;
            case 72:
                Test0084.instanceCount += (long) Test0084.fFld;
            }
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 l5 i19 = " + i18 + "," + l5 + "," + i19);
        FuzzerUtils.out.println("l6 s2 lArr = " + l6 + "," + s2 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0084.instanceCount Test0084.fFld Test0084.byFld = " + Test0084.instanceCount + "," +
                Float.floatToIntBits(Test0084.fFld) + "," + Test0084.byFld);
        FuzzerUtils.out.println("Test0084.bFld Test0084.iFld Test0084.iArrFld = " + (Test0084.bFld ? 1 : 0) + "," + Test0084.iFld + "," +
                FuzzerUtils.checkSum(Test0084.iArrFld));
        FuzzerUtils.out.println("Test0084.fArrFld dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0084.fArrFld))
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0084 _instance = new Test0084();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
