// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0050 {

    public static final int N = 400;

    public static long instanceCount=-3997399435L;
    public static boolean bFld=false;
    public static short sFld=31417;
    public static byte byFld=23;
    public static int iFld=49679;
    public double dFld=-38.32935;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0050.iArrFld, 0);
        FuzzerUtils.init(Test0050.lArrFld, 8L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i6, int i7) {

        int i8=10, i9=36612, i10=-2, i11=6, i12=11, i13=-50224;
        float f1=1.232F;
        byte by=-82;
        byte[] byArr =new byte[N];
        short s=-26336;

        FuzzerUtils.init(byArr, (byte)116);

        for (i8 = 3; 281 > i8; i8++) {
            f1 = f1;
            for (i10 = i8; i10 < 6; i10++) {
                f1 /= (Test0050.instanceCount | 1);
                byArr[i10 + 1] = by;
                by += (byte)13;
                i9 = (int) Test0050.instanceCount;
                i11 <<= -134;
                for (i12 = 1; i12 < 1; i12++) {
                    s = (short)i6;
                    i6 += (i12 ^ i13);
                    i13 -= (int) Test0050.instanceCount;
                    i7 -= i13;
                }
                i7 -= i11;
                by = (byte)i7;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + by + i12 + i13 + s +
            FuzzerUtils.checkSum(byArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i) {

        float f=0.1010F;
        int i1=50, i2=-69, i3=52368, i4=-229, i5=40854;
        double d=-1.108195;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -2L);

        Test0050.instanceCount -= (long) f;
        for (i1 = 238; i1 > 13; i1 -= 3) {
            i3 = 1;
            do {
                for (i4 = 1; i4 < 3; i4++) {
                    Test0050.instanceCount *= (long) (i * (fMeth(i1, i3) - i5));
                    if (Test0050.bFld) continue;
                    i = (int)d;
                    i5 *= (int)f;
                    Test0050.iArrFld[i3] >>= i5;
                    try {
                        i = (1624251008 / i2);
                        i = (i5 % i4);
                        i2 = (100 / Test0050.iArrFld[i4 + 1]);
                    } catch (ArithmeticException a_e) {}
                    i2 = -26264;
                    if (Test0050.bFld) break;
                    f -= -1L;
                    lArr = lArr;
                }
            } while ((i3 += 2) < 21);
            Test0050.instanceCount = 23054;
        }
        vMeth1_check_sum += i + Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i14=40194;
        int i15=5717;
        int i16=-4;
        int i17=104;
        int i18=-133;
        int i19=13822;
        int[][] iArr =new int[N][N];
        boolean b=false;

        FuzzerUtils.init(iArr, -47460);

        vMeth1(i14);
        iArr = FuzzerUtils.int2array(N, (int)-13);
        for (i15 = 6; i15 < 180; i15 += 3) {
            for (i17 = 1; i17 < 26; i17++) {
                Test0050.instanceCount = Test0050.instanceCount;
                i19 = 1;
                do {
                    Test0050.iArrFld[i19 + 1] -= 11522;
                    Test0050.sFld += (short) (36.290F + (i19 * i19));
                    i18 -= (int) Test0050.instanceCount;
                    i16 = -43002;
                    Test0050.instanceCount -= -8;
                    Test0050.instanceCount = Test0050.byFld;
                    i14 += (((i19 * i15) + i14) - i17);
                    Test0050.bFld = b;
                    i14 = 164;
                } while (++i19 < 2);
            }
        }
        vMeth_check_sum += i14 + i15 + i16 + i17 + i18 + i19 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i20=-162, i21=33, i22=4025, i23=10, i24=-6, i25=110, i26=-11;
        double d1=0.89248;
        float f2=21.800F;

        vMeth();
        for (i20 = 6; i20 < 298; i20++) {
            for (i22 = 2; 86 > i22; ++i22) {
                i21 += (i22 - Test0050.instanceCount);
                Test0050.lArrFld[i22] ^= -113L;
                Test0050.byFld >>= (byte) Test0050.instanceCount;
                switch ((i22 % 1) + 25) {
                case 25:
                    for (i24 = 1; i24 < 2; ++i24) {
                        Test0050.lArrFld[i22 + 1] += (long) d1;
                        Test0050.instanceCount <<= i21;
                        i23 -= -191;
                        switch ((i22 % 8) + 34) {
                        case 34:
                            i25 = i22;
                            d1 /= (i20 | 1);
                        case 35:
                            Test0050.iArrFld[i20] <<= (int) Test0050.instanceCount;
                            Test0050.byFld -= (byte) i21;
                            Test0050.instanceCount = 3;
                            break;
                        case 36:
                            Test0050.instanceCount += (((i24 * i22) + i25) - i20);
                            switch ((i24 % 3) + 39) {
                            case 39:
                                Test0050.lArrFld[i20 + 1] -= i21;
                                fArrFld[i24 + 1] = i25;
                                switch (((i22 % 10) * 5) + 68) {
                                case 112:
                                    fArrFld[i20 - 1] /= (Test0050.instanceCount | 1);
                                    i21 = Test0050.iFld;
                                    i21 += (i24 | Test0050.instanceCount);
                                    Test0050.iArrFld[i20 - 1] *= (int) Test0050.instanceCount;
                                    break;
                                case 71:
                                    Test0050.byFld = (byte) Test0050.instanceCount;
                                    i25 = i21;
                                    Test0050.iArrFld[i22 - 1] += (int) f2;
                                    Test0050.iArrFld[i22 + 1] -= i23;
                                    break;
                                case 69:
                                    Test0050.iArrFld[i24 - 1] = i23;
                                    break;
                                case 117:
                                    Test0050.bFld = false;
                                    break;
                                case 106:
                                case 82:
                                    if (true) break;
                                    break;
                                case 80:
                                    dFld = Test0050.instanceCount;
                                    break;
                                case 75:
                                    fArrFld[i20 + 1] = 33928;
                                    break;
                                case 118:
                                    Test0050.iFld += Test0050.iFld;
                                    break;
                                case 79:
                                default:
                                    i26 <<= i26;
                                }
                                break;
                            case 40:
                                Test0050.iArrFld[i22 + 1] -= i22;
                            case 41:
                                Test0050.iFld = i21;
                            default:
                                Test0050.iArrFld[i20 - 1] &= (int) Test0050.instanceCount;
                            }
                            break;
                        case 37:
                            Test0050.byFld += (byte) (i24 + i24);
                            break;
                        case 38:
                            Test0050.instanceCount += (i24 + Test0050.instanceCount);
                        case 39:
                            i26 += i23;
                        case 40:
                            i25 = (int)-33.100823;
                        case 41:
                            i26 = Test0050.sFld;
                            break;
                        }
                    }
                    break;
                default:
                    Test0050.iArrFld[i22] *= (int) 114.494F;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("d1 f2 i26 = " + Double.doubleToLongBits(d1) + "," + Float.floatToIntBits(f2) + "," +
            i26);

        FuzzerUtils.out.println("Test0050.instanceCount Test0050.bFld Test0050.sFld = " + Test0050.instanceCount + "," + (Test0050.bFld ? 1
                : 0) + "," + Test0050.sFld);
        FuzzerUtils.out.println("Test0050.byFld Test0050.iFld dFld = " + Test0050.byFld + "," + Test0050.iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0050.iArrFld Test0050.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test0050.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0050.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0050 _instance = new Test0050();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
