// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0643 {

    public static final int N = 400;

    public static long instanceCount=-634683266L;
    public static long lFld=-2304393516353483138L;
    public static volatile double dFld=2.25162;
    public static short sFld=-208;
    public static float fFld=-45.72F;
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld =new double[N];
    public short[] sArrFld =new short[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0643.iArrFld, -58263);
        FuzzerUtils.init(Test0643.dArrFld, 0.20164);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i6) {

        int i7=46286, i8=-159, i9=160, i10=8, i11=-42, i12=-17058;
        double d=-2.77562;
        boolean b=true;
        short s=19678;

        for (i7 = 12; 212 > i7; i7++) {
            for (i9 = 1; i9 < 8; i9++) {
                Test0643.lFld = i10;
                i8 += (int)d;
                b = b;
                for (i11 = 1; 2 > i11; ++i11) {
                    i10 &= i6;
                    s = (short) Test0643.instanceCount;
                    i8 *= i9;
                    b = b;
                    if (true) break;
                    i8 = (int)f;
                    d = -6615894004664567717L;
                }
                i8 += (i9 | i10);
                i8 = 18995;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) + (b ? 1 :
            0) + i11 + i12 + s;
    }

    public static void vMeth(long l) {

        float f1=1.33F;
        int i13=-67, i14=-82, i15=-53356, i16=-70, i17=7;
        long l1=1124735648L;
        boolean b1=true;

        vMeth1(f1, 1793);
        Test0643.lFld = i13;
        for (l1 = 2; l1 < 128; l1++) {
            i13 += (int)(((l1 * l) + i13) - i13);
            i15 = 1;
            while (++i15 < 12) {
                i13 -= (int)f1;
                switch ((((i14 >>> 1) % 4) * 5) + 60) {
                case 73:
                    i13 -= (int) Test0643.lFld;
                    Test0643.lFld = -41;
                    break;
                case 74:
                    Test0643.iArrFld[(int) (l1 - 1)] = i14;
                case 64:
                    f1 = (float) Test0643.dFld;
                    i14 += i15;
                    for (i16 = 1; i16 < 1; ++i16) {
                        f1 += (-1593091632L + (i16 * i16));
                        f1 += ((long)i16 ^ (long)i15);
                    }
                    break;
                case 79:
                    if (b1) continue;
                    break;
                }
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f1) + i13 + l1 + i14 + i15 + i16 + i17 + (b1 ? 1 : 0);
    }

    public static double dMeth() {

        float f2=-1.419F;
        int i18=-199, i19=-1;
        boolean b2=true;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -1.8979);

        try {
            vMeth(Test0643.lFld);
        }
        catch (ArithmeticException exc1) {
            f2 += i18;
            i19 = 1;
            do {
                Test0643.lFld = i18;
                i18 *= (int) Test0643.instanceCount;
                i18 >>= (int) Test0643.lFld;
                b2 = false;
                dArr[i19] -= i19;
                Test0643.instanceCount *= i18;
                Test0643.iArrFld[i19 - 1] = i18;
                if (i18 != 0) {
                }
                f2 *= i19;
                Test0643.lFld += (i19 + i18);
            } while (++i19 < 135);
            i18 -= i19;
        }
        finally {
            Test0643.sFld = (short) f2;
        }
        long meth_res = Float.floatToIntBits(f2) + i18 + i19 + (b2 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-13;
        int i1=-33935;
        int i2=13686;
        int i3=-12;
        int i4=2;
        int i5=-17769;
        int i20=-21818;
        int i21=-3;
        int i22=-14;
        int[] iArr =new int[N];
        byte by=-26;
        float f3=125.729F;
        float[] fArr =new float[N];
        boolean b3=true;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(fArr, -1.105F);
        FuzzerUtils.init(bArr, false);

        for (i = 5; i < 129; ++i) {
            for (i2 = 3; 202 > i2; i2++) {
                for (i4 = i2; 2 > i4; i4 += 3) {
                    i3 = (int)(((--iArr[i2]) - Math.min(i3, i)) + (i1 -= (int)(-dMeth())));
                }
                Test0643.lFld += Test0643.instanceCount;
                Test0643.lFld = i;
                switch ((i % 4) + 47) {
                case 47:
                    switch ((i % 10) + 18) {
                    case 18:
                        Test0643.instanceCount ^= i1;
                        i3 = i;
                        Test0643.dArrFld[i - 1] = -8;
                        break;
                    case 19:
                        switch (((i % 7) * 5) + 76) {
                        case 77:
                            switch ((i2 % 8) + 46) {
                            case 46:
                                Test0643.iArrFld[i + 1] = (int) -154428336L;
                                switch ((i2 % 9) + 30) {
                                case 30:
                                    i1 <<= i2;
                                    iArr[i2] = Test0643.sFld;
                                    for (i20 = 2; i20 > 1; i20--) {
                                        i21 += (i20 + Test0643.instanceCount);
                                        i5 = (int) Test0643.instanceCount;
                                        i5 -= i2;
                                        by += by;
                                        Test0643.dFld = i;
                                        iArr[i2] -= (int) Test0643.instanceCount;
                                        try {
                                            i5 = (i1 / i4);
                                            iArr[i2 + 1] = (i1 / 69);
                                            i1 = (Test0643.iArrFld[i20 + 1] % i1);
                                        } catch (ArithmeticException a_e) {}
                                    }
                                    i21 *= i2;
                                case 31:
                                    Test0643.iArrFld[i + 1] -= (int) Test0643.dFld;
                                    break;
                                case 32:
                                    Test0643.dFld = -239;
                                    i5 = 2180;
                                    Test0643.lFld += (i2 - i20);
                                    break;
                                case 33:
                                    i1 -= (int)f3;
                                case 34:
                                    i1 -= i5;
                                    break;
                                case 35:
                                    Test0643.dFld *= Test0643.sFld;
                                    break;
                                case 36:
                                    fArr = FuzzerUtils.float1array(N, (float)0.201F);
                                    break;
                                case 37:
                                    i21 ^= (int) Test0643.instanceCount;
                                    break;
                                case 38:
                                    i21 = (int) Test0643.lFld;
                                    break;
                                default:
                                    i3 += (int) Test0643.lFld;
                                }
                            case 47:
                                sArrFld[i2 - 1] += (short)i1;
                                break;
                            case 48:
                                try {
                                    i3 = (-19561 % iArr[i2 - 1]);
                                    Test0643.iArrFld[i] = (iArr[i2 - 1] / -256);
                                    i22 = (i4 / Test0643.iArrFld[i2]);
                                } catch (ArithmeticException a_e) {}
                                break;
                            case 49:
                                fArr[i2 + 1] += Test0643.lFld;
                            case 50:
                                i5 <<= i4;
                                break;
                            case 51:
                                Test0643.lFld = i2;
                            case 52:
                                f3 = 0;
                                break;
                            case 53:
                                i3 += (-17192 + (i2 * i2));
                            }
                            break;
                        case 108:
                            Test0643.instanceCount += Test0643.instanceCount;
                            break;
                        case 91:
                            i3 += (i2 * i2);
                        case 79:
                            iArr[i + 1] = i5;
                            break;
                        case 88:
                            i1 *= i3;
                            break;
                        case 110:
                            i22 = i20;
                            break;
                        case 82:
                        }
                    case 20:
                        i21 /= -10;
                        break;
                    case 21:
                        if (b3) break;
                        break;
                    case 22:
                        bArr[i] = true;
                        break;
                    case 23:
                        i21 += (int)f3;
                        break;
                    case 24:
                        i5 += i2;
                    case 25:
                        lArrFld[i - 1] *= i3;
                    case 26:
                        i1 += i2;
                    case 27:
                        f3 = i21;
                        break;
                    }
                    break;
                case 48:
                    try {
                        i1 = (i20 % Test0643.iArrFld[i2]);
                        Test0643.iArrFld[i2] = (i22 % -554231761);
                        i22 = (i21 / i3);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 49:
                    iArr[i - 1] *= by;
                    break;
                case 50:
                    Test0643.fFld *= 82;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("i20 i21 by = " + i20 + "," + i21 + "," + by);
        FuzzerUtils.out.println("f3 i22 b3 = " + Float.floatToIntBits(f3) + "," + i22 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("iArr fArr bArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0643.instanceCount Test0643.lFld Test0643.dFld = " + Test0643.instanceCount + "," + Test0643.lFld +
                "," + Double.doubleToLongBits(Test0643.dFld));
        FuzzerUtils.out.println("Test0643.sFld Test0643.fFld Test0643.iArrFld = " + Test0643.sFld + "," +
                Float.floatToIntBits(Test0643.fFld) + "," + FuzzerUtils.checkSum(Test0643.iArrFld));
        FuzzerUtils.out.println("Test0643.dArrFld sArrFld lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0643.dArrFld)) + "," + FuzzerUtils.checkSum(sArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0643 _instance = new Test0643();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
