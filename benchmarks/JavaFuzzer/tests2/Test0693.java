// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0693 {

    public static final int N = 400;

    public static volatile long instanceCount=-3452279888L;
    public static boolean bFld=false;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0693.iArrFld, -202);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=-21864, i9=-8, i10=0;
        byte by1=-118;
        float f1=-2.471F;
        boolean b=true;
        double d2=123.19754;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -7725539018460668633L);

        Test0693.instanceCount -= i8;
        by1 = (byte)i8;
        switch (((i8 >>> 1) % 2) + 18) {
        case 18:
            i8 ^= 0;
            for (i9 = 233; i9 > 7; i9--) {
                i8 <<= i10;
                if (false) break;
                i8 &= i9;
                i10 *= i10;
                f1 += (i9 * i9);
                Test0693.instanceCount = (long) f1;
                Test0693.iArrFld = FuzzerUtils.int1array(N, (int) -12504);
                lArr[i9 + 1] = i10;
                b = false;
                Test0693.iArrFld[i9 - 1] = i10;
            }
        case 19:
            i10 -= i8;
            break;
        default:
            d2 = f1;
        }
        vMeth2_check_sum += i8 + by1 + i9 + i10 + Float.floatToIntBits(f1) + (b ? 1 : 0) + Double.doubleToLongBits(d2)
            + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l, double d1) {

        int i6=0, i7=2137, i11=142, i12=-8850;
        float f2=-13.1000F;
        byte by2=-61;
        boolean b1=false;

        for (i6 = 323; i6 > 19; --i6) {
            vMeth2();
            Test0693.iArrFld[i6 + 1] /= (int) 2.665F;
            i7 -= i7;
            for (i11 = i6; i11 < 5; i11++) {
                i12 += 56035;
                f2 = Test0693.instanceCount;
                Test0693.iArrFld[i6] -= (int) l;
                Test0693.iArrFld[i6 + 1] += i11;
                by2 += (byte)(i11 * i11);
                if (b1) {
                    i12 |= i12;
                    l -= l;
                    l -= Test0693.instanceCount;
                    f2 += (i11 * f2);
                } else {
                    Test0693.instanceCount |= i12;
                }
            }
        }
        vMeth1_check_sum += l + Double.doubleToLongBits(d1) + i6 + i7 + i11 + i12 + Float.floatToIntBits(f2) + by2 +
            (b1 ? 1 : 0);
    }

    public static void vMeth(int i) {

        int i1=59;
        int i2=25884;
        int i3=-62203;
        int i4=-28554;
        int i5=-176;
        int i13=-52;
        int i14=8;
        int i15=-28;
        int i16=8;
        int[] iArr1 =new int[N];
        float f=2.114F;
        short s=-22747;

        FuzzerUtils.init(iArr1, -18836);

        i1 = 1;
        while (++i1 < 308) {
            for (i2 = 1; i2 < 5; ++i2) {
                byte by=-5;
                double d=34.8511;
                try {
                    i = (i % iArr1[i2 - 1]);
                    i = (-15668 / i);
                    iArr1[i2 + 1] = (i2 / -1694396621);
                } catch (ArithmeticException a_e) {}
                by += (byte)(-((i2 * i2) + (f + i)));
                iArr1[i1] = (int)(iArr1[i2] += (int)(i3 &= (int)(i1 - -16L)));
                s -= (short) (-((d * d) + (Test0693.instanceCount + i3)));
                for (i4 = 1; i4 < 2; i4++) {
                    vMeth1(-4246162023L, d);
                    i = i1;
                    i3 -= i4;
                }
            }
            for (i13 = 1; i13 < 5; i13++) {
                for (i15 = i1; i15 < 2; i15++) {
                    double d3=78.21200;
                    i *= (int) Test0693.instanceCount;
                    Test0693.instanceCount -= i3;
                    d3 -= i3;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + Float.floatToIntBits(f) + s + i4 + i5 + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i17=-52780;
        int i18=4;
        int i19=-3;
        int i20=3;
        int i21=13;
        int i22=-27627;
        int i23=-1203;
        int[] iArr =new int[N];
        byte by3=-69;
        float f3=12.120F;
        long l1=106L;
        long[][] lArr1 =new long[N][N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(iArr, -40271);
        FuzzerUtils.init(lArr1, 82L);
        FuzzerUtils.init(bArr, false);

        iArr = (iArr = (iArr = (iArr = iArr)));
        vMeth(i17);
        i18 = 375;
        do {
            i17 += 24212;
            for (i19 = 4; i19 < 67; i19++) {
                for (i21 = i18; i21 < 2; i21++) {
                    i20 += (i21 + Test0693.instanceCount);
                    by3 += (byte)i17;
                    switch (((i21 % 5) * 5) + 70) {
                    case 77:
                        i22 -= (int) Test0693.instanceCount;
                        i20 |= i20;
                        i22 = (int)-22833L;
                        break;
                    case 81:
                        i22 >>>= i22;
                        Test0693.instanceCount += (i21 * i21);
                        Test0693.instanceCount -= -14;
                        lArr1[i19][i18 + 1] = i18;
                    case 80:
                        i17 = 224;
                        by3 += (byte)-122;
                        break;
                    case 79:
                        i22 = -34879;
                        break;
                    case 86:
                        f3 *= Test0693.instanceCount;
                        i20 += by3;
                        bArr[i18 - 1] = Test0693.bFld;
                        i17 += (((i21 * i19) + i22) - Test0693.instanceCount);
                    }
                    iArr[i19 - 1] = by3;
                }
                i22 *= (int)1.893F;
            }
            switch ((((i19 >>> 1) % 3) * 5) + 100) {
            case 107:
                for (l1 = 67; l1 > 1; l1--) {
                    i20 = (int)l1;
                    i22 <<= (int)l1;
                }
                i22 += (int) Test0693.instanceCount;
                break;
            case 111:
                Test0693.bFld = Test0693.bFld;
                break;
            case 103:
                i17 += (((i18 * i19) + l1) - by3);
                break;
            }
        } while (--i18 > 0);

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("by3 f3 l1 = " + by3 + "," + Float.floatToIntBits(f3) + "," + l1);
        FuzzerUtils.out.println("i23 iArr lArr1 = " + i23 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0693.instanceCount Test0693.bFld Test0693.iArrFld = " + Test0693.instanceCount + "," + (Test0693.bFld
                ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0693.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0693 _instance = new Test0693();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
