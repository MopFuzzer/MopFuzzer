// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:39 2023
public class Test0577 {

    public static final int N = 400;

    public static long instanceCount=2523382066L;
    public float fFld=0.302F;
    public static double dFld=0.55758;
    public static byte byFld=62;
    public short sFld1=-7693;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0577.iArrFld, -48903);
    }

    public static long fMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i12=-250, i13=-51246, i14=-10, i15=4, i16=30698, i17=-18313, i18=8, i19=-77, i20=-65304, i21=-39661;
        boolean b=true;
        byte by1=-122;

        for (i12 = 14; i12 < 288; ++i12) {
            for (i14 = i12; i14 < 6; ++i14) {
                i13 += (int) Test0577.dFld;
            }
            Test0577.iArrFld[i12] *= 251;
            for (i16 = 1; 6 > i16; ++i16) {
                b = b;
                Test0577.iArrFld[i12 - 1] += i16;
                i13 = (int)4L;
            }
            for (i18 = 1; i18 < 6; i18++) {
                for (i20 = 1; i20 < 2; ++i20) {
                    float f2=0.52F;
                    Test0577.instanceCount -= Test0577.instanceCount;
                    i21 += i20;
                    Test0577.iArrFld[i12 - 1] -= (int) f2;
                    by1 >>= (byte)i14;
                    b = b;
                }
            }
        }
        long meth_res = i12 + i13 + i14 + i15 + i16 + i17 + (b ? 1 : 0) + i18 + i19 + i20 + i21 + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth1(int i6, int i7) {

        int i8=-131, i9=-195, i10=-123, i11=7, i22=177, i23=49602;
        float f1=0.465F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 13L);

        for (i8 = 337; i8 > 9; --i8) {
            for (i10 = 1; i10 < 5; i10++) {
                f1 -= (float) ((lArr[i8 - 1] + (++i7)) + Test0577.dFld);
                Test0577.iArrFld[i10 - 1] = (int) (Test0577.dFld + (iMeth() - i10));
                Test0577.instanceCount <<= 252;
                i6 += (i10 - Test0577.byFld);
                i6 += (i10 * i10);
                if (i7 != 0) {
                }
            }
            i11 += (((i8 * i10) + Test0577.instanceCount) - Test0577.byFld);
            for (i22 = i8; 5 > i22; i22++) {
                i23 <<= (int) Test0577.instanceCount;
                i6 = (int)f1;
                Test0577.instanceCount &= i10;
                Test0577.iArrFld[i8] %= (int) ((long) (Test0577.dFld) | 1);
                i11 -= (int)-135L;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + i22 + i23 +
            FuzzerUtils.checkSum(lArr);
        fMeth1_check_sum += meth_res;
        return (float)meth_res;
    }

    public float fMeth(int i4, int i5) {


        i4 = Integer.reverseBytes(i4);
        Test0577.instanceCount = (long) fMeth1(i5, i5);
        long meth_res = i4 + i5;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i3=-244, i24=-3134, i25=8, i26=-28532, i27=7, i28=-13024, i29=46628, i30=-13, i31=14676, i32=4581,
            i33=-43168;
        boolean b1=false;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -4239975085L);

        fFld += (((i3 + i3) + fMeth(i3, i3)) - 28);
        i24 = 1;
        while (++i24 < 279) {
            if (false) {
                for (i25 = 3; i25 < 90; i25 += 3) {
                    short s=-13054;
                    i26 += (((i25 * i3) + fFld) - Test0577.instanceCount);
                    Test0577.instanceCount += (((i25 * fFld) + fFld) - i26);
                    for (i27 = 1; i27 < 4; ++i27) {
                        i26 |= i24;
                        i26 *= -22626;
                        fFld += i27;
                        i26 = i26;
                        fFld += (11 + (i27 * i27));
                    }
                    s += (short)(i25 ^ i26);
                }
                i26 += (((i24 * Test0577.instanceCount) + i29) - Test0577.instanceCount);
                fFld += (i24 * i28);
                i3 = i27;
            } else {
                i28 += i24;
            }
            Test0577.dFld -= sFld1;
            if (b1) {
                lArr1[i24 - 1] = 115;
                i28 >>= i29;
                i26 = sFld1;
                Test0577.byFld |= (byte) i24;
            }
            fFld -= i28;
            for (i30 = 5; i30 < 90; ++i30) {
                for (i32 = 1; i32 < 2; i32++) {
                    Test0577.byFld += (byte) i30;
                    i31 = i31;
                    i26 *= 6029;
                    i3 = i30;
                }
            }
        }

        FuzzerUtils.out.println("i3 i24 i25 = " + i3 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 b1 i30 = " + i29 + "," + (b1 ? 1 : 0) + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0577.instanceCount fFld Test0577.dFld = " + Test0577.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0577.dFld));
        FuzzerUtils.out.println("Test0577.byFld sFld1 Test0577.iArrFld = " + Test0577.byFld + "," + sFld1 + "," +
                FuzzerUtils.checkSum(Test0577.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth1_check_sum: " + fMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0577 _instance = new Test0577();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth1 fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
