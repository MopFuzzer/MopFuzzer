// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0919 {

    public static final int N = 400;

    public static long instanceCount=43651056936428287L;
    public static float fFld=-2.871F;
    public static volatile boolean bFld=false;
    public static byte byFld=17;
    public static int iFld=6;
    public volatile float[] fArrFld =new float[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i9=4, i10=128, i11=7, i12=5, i13=52271;
        long l=26560L;
        boolean b=true;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);

        i9 = 59196;
        i9 = -60521;
        i10 = 1;
        while (++i10 < 264) {
            for (i11 = 1; 6 > i11; i11++) {
                i12 += (i11 | i10);
                l = 1;
                while (++l < 2) {
                    i9 >>>= (int) Test0919.instanceCount;
                }
                i13 = 2;
                do {
                    Test0919.instanceCount = i11;
                    Test0919.instanceCount <<= l;
                    if (b) {
                        i9 <<= (int)l;
                        Test0919.instanceCount += Test0919.instanceCount;
                    } else if (false) {
                        bArr[i13] = b;
                    } else {
                        if (b) break;
                    }
                } while (--i13 > 0);
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + l + i13 + (b ? 1 : 0) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i7=144;
        int i8=-9;
        int i14=41181;
        int i15=0;
        int i16=75;
        int i17=-138;
        int[] iArr =new int[N];
        short s=-9655;
        double d=0.14944;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(lArr, 162L);

        i7 = 1;
        while (++i7 < 371) {
            i8 -= (int) ((-iMeth()) + Test0919.fFld);
            s = (short)i8;
            Test0919.fFld = (float) d;
            Test0919.bFld = Test0919.bFld;
            i14 = 1;
            do {
                for (i15 = 1; i15 < 1; ++i15) {
                    iArr[i14 - 1] -= (int) Test0919.instanceCount;
                    lArr[i15 + 1] = i7;
                    Test0919.bFld = Test0919.bFld;
                    i16 = i14;
                    d = d;
                    i17 = Test0919.byFld;
                    i17 ^= i17;
                    if (Test0919.bFld) break;
                }
            } while (++i14 < 5);
        }
        vMeth1_check_sum += i7 + i8 + s + Double.doubleToLongBits(d) + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(int i4, int i5, int i6) {

        float f=0.679F;
        float[] fArr =new float[N];
        int i18=82, i19=1, i20=21528, i21=-63147;
        short s1=-15632;

        FuzzerUtils.init(fArr, 1.275F);

        Test0919.instanceCount -= (long) ((-(Test0919.instanceCount * f)) + i5);
        vMeth1();
        Test0919.instanceCount <<= i5;
        for (float f1 : fArr) {
            Test0919.instanceCount = -18823;
            i6 *= i5;
            for (i18 = 1; i18 < 4; ++i18) {
                s1 -= (short)i19;
                try {
                    i4 = (-116 % i6);
                    i5 = (i19 % -37);
                    i4 = (i19 / i4);
                } catch (ArithmeticException a_e) {}
                for (i20 = 1; i20 < 2; ++i20) {
                    i4 += (int) Test0919.fFld;
                    i6 ^= i19;
                }
                if (Test0919.bFld) break;
                Test0919.instanceCount -= i21;
                Test0919.byFld += (byte) (i18 * i18);
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f) + i18 + i19 + s1 + i20 + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=12, i1=-60398, i2=-43208, i3=2, i22=-2, i23=127, i24=-4, i25=75, i26=-1971, i27=3767;
        long l1=-27L;
        double d1=-2.123279;
        short s2=-22451;
        boolean[] bArr1 =new boolean[N];

        FuzzerUtils.init(bArr1, true);

        for (i = 1; i < 156; ++i) {
            for (i2 = 8; i2 < 162; i2++) {
                vMeth(i1, i3, i3);
            }
            i3 += (int) Test0919.fFld;
        }
        i22 = 1;
        while (++i22 < 170) {
            Test0919.bFld = Test0919.bFld;
            for (i23 = 6; i23 < 148; ++i23) {
                Test0919.instanceCount += (((i23 * i22) + Test0919.fFld) - i23);
            }
            i3 -= (int) Test0919.instanceCount;
            Test0919.fFld *= -8;
            i25 = 1;
            while (++i25 < 148) {
                i24 = (int)l1;
                switch (((i22 % 7) * 5) + 113) {
                case 134:
                    for (i26 = 1; i26 < 1; ++i26) {
                        if (Test0919.bFld) {
                            fArrFld = fArrFld;
                            i27 <<= i3;
                        }
                        d1 %= (i22 | 1);
                        i27 += (((i26 * Test0919.instanceCount) + i25) - Test0919.fFld);
                        i3 = i26;
                        i27 += i26;
                        i3 += i3;
                        s2 -= (short)i25;
                        i27 += i26;
                        Test0919.byFld = (byte) Test0919.instanceCount;
                        i24 += (10 + (i26 * i26));
                    }
                    break;
                case 129:
                    Test0919.instanceCount += (14 + (i25 * i25));
                    Test0919.iFld += i1;
                    Test0919.byFld += (byte) i25;
                    break;
                case 124:
                    i3 /= (int)18.99F;
                    break;
                case 114:
                    if (Test0919.bFld) break;
                    break;
                case 136:
                    bArr1 = bArr1;
                    break;
                case 131:
                    i1 >>>= (int)l1;
                    break;
                case 135:
                    Test0919.iFld ^= s2;
                    break;
                default:
                    i1 -= (int)d1;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i22 i23 = " + i3 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 l1 = " + i24 + "," + i25 + "," + l1);
        FuzzerUtils.out.println("i26 i27 d1 = " + i26 + "," + i27 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("s2 bArr1 = " + s2 + "," + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test0919.instanceCount Test0919.fFld Test0919.bFld = " + Test0919.instanceCount + "," +
                Float.floatToIntBits(Test0919.fFld) + "," + (Test0919.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0919.byFld Test0919.iFld fArrFld = " + Test0919.byFld + "," + Test0919.iFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0919 _instance = new Test0919();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
