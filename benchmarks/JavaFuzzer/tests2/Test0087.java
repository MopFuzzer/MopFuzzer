// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:16 2023
public class Test0087 {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static byte byFld=-112;
    public static double dFld=60.20155;
    public static volatile short sFld=9517;
    public static volatile boolean bFld=false;
    public int[] iArrFld =new int[N];
    public long[][] lArrFld =new long[N][N];
    public volatile byte[] byArrFld =new byte[N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0087.sArrFld, (short) -24569);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i12=5;
        int i13=118;
        int i14=41503;
        int i15=39848;
        int i16=53109;
        int[] iArr2 =new int[N];
        long l1=1L;
        short s=-31249;
        float f=127.402F;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -69.56517);
        FuzzerUtils.init(iArr2, -101);

        i12 = (int) Test0087.instanceCount;
        for (l1 = 1; l1 < 393; ++l1) {
            dArr[(int)(l1)] *= i12;
            i14 = 1;
            do {
                for (i15 = 1; i15 > 1; --i15) {
                    boolean b=false;
                    i16 >>= i14;
                    i13 += (i15 ^ i13);
                    Test0087.instanceCount -= i16;
                    try {
                        iArr2[i15 - 1] = (i14 % 27979);
                        i12 = (iArr2[i14 - 1] / i16);
                        i16 = (i13 / i14);
                    } catch (ArithmeticException a_e) {}
                    i16 = (int) Test0087.instanceCount;
                    if (b) {
                        switch ((i15 % 6) + 123) {
                        case 123:
                            i16 -= (int) Test0087.dFld;
                            s += (short)f;
                            f *= i13;
                            break;
                        case 124:
                        case 125:
                            i13 <<= i15;
                            break;
                        case 126:
                            Test0087.instanceCount += (((i15 * i16) + Test0087.byFld) - i12);
                            break;
                        case 127:
                            i12 += (((i15 * f) + i13) - i12);
                            break;
                        case 128:
                            i13 += s;
                            break;
                        }
                    }
                }
            } while (++i14 < 4);
        }
        vMeth1_check_sum += i12 + l1 + i13 + i14 + i15 + i16 + s + Float.floatToIntBits(f) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public static short sMeth() {

        int i6=34;
        int i7=36961;
        int i8=6;
        int i9=-221;
        int i10=45927;
        int i11=136;
        int[][] iArr1 =new int[N][N];
        long l=-204L;
        long[] lArr =new long[N];
        byte by=-50;

        FuzzerUtils.init(iArr1, 11660);
        FuzzerUtils.init(lArr, 903319012L);

        Test0087.instanceCount = (Test0087.instanceCount = ((Test0087.instanceCount + i6) + (i6 - -3)));
        for (i7 = 10; i7 < 165; i7++) {
            for (i9 = 1; i9 < 10; ++i9) {
                i8 += (i9 * i9);
                i8 >>= Test0087.byFld;
                Test0087.instanceCount *= iArr1[i7 + 1][i7 + 1];
                i8 += (i9 * i7);
                for (l = 1; l < 2; l++) {
                    iArr1 = (iArr1 = (iArr1 = (iArr1 = iArr1)));
                    Test0087.instanceCount *= (--Test0087.instanceCount);
                    i10 += (int)l;
                    vMeth1();
                    i11 -= Test0087.sFld;
                    lArr[(int)(l)] = l;
                    by *= (byte) Test0087.instanceCount;
                }
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + l + i11 + by + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth() {

        int i3=11545;
        int i4=8;
        int i5=-1973;
        int i17=63404;
        int i18=-6;
        int i19=29770;
        int i20=5;
        int[] iArr =new int[N];
        float f1=0.900F;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(iArr, 116);
        FuzzerUtils.init(lArr1, 43613L);

        i3 = (i3 - -12);
        for (i4 = 1; i4 < 225; i4 += 2) {
            iArr[i4] = sMeth();
            if (i5 != 0) {
                vMeth_check_sum += i3 + i4 + i5 + i17 + i18 + Float.floatToIntBits(f1) + i19 + i20 +
                    FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
                return;
            }
            Test0087.instanceCount *= Test0087.instanceCount;
            i3 = (int) Test0087.dFld;
            for (i17 = i4; i17 < 14; ++i17) {
                Test0087.instanceCount *= (long) Test0087.dFld;
                lArr1 = FuzzerUtils.long2array(N, (long)4L);
                i5 = (int) Test0087.instanceCount;
                f1 = f1;
                for (i19 = i17; i19 < 1; ++i19) {
                    Test0087.dFld %= (Test0087.byFld | 1);
                    i20 -= (int) Test0087.instanceCount;
                    f1 += (-24 + (i19 * i19));
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i17 + i18 + Float.floatToIntBits(f1) + i19 + i20 + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-1824, i1=50629, i2=-14563, i21=3, i22=-25021, i23=31670, i24=38308, i25=-34296, i26=147, i27=63,
            i28=228, i29=11749;
        float f2=2.25F;
        double d=0.23449;

        i = 1;
        while (++i < 170) {
            i1 = (i2++);
            i1 += (i * i1);
            i1 += i;
            vMeth();
            for (i21 = 2; i21 < 148; i21++) {
                if (Test0087.bFld) continue;
                if (true) break;
                Test0087.instanceCount = i21;
                for (i23 = 1; i23 < 2; i23++) {
                    Test0087.sFld -= (short) f2;
                }
                i1 >>= i1;
                try {
                    i24 = (i23 / 11467);
                    i1 = (i2 % 245);
                    i22 = (i % i24);
                } catch (ArithmeticException a_e) {}
                f2 += Test0087.instanceCount;
            }
            try {
                iArrFld[i - 1] = (i22 % i);
                i1 = (i22 % i24);
                i24 = (105 % i22);
            } catch (ArithmeticException a_e) {}
            f2 *= i22;
            iArrFld[i] <<= i24;
            for (i25 = 5; i25 < 148; ++i25) {
                if (Test0087.bFld) break;
                for (i27 = 2; i27 > 1; i27 -= 3) {
                    switch (((i24 >>> 1) % 2) + 64) {
                    case 64:
                        Test0087.sFld >>= (short) Test0087.instanceCount;
                        Test0087.bFld = Test0087.bFld;
                    case 65:
                        Test0087.instanceCount *= Test0087.instanceCount;
                        break;
                    default:
                        switch (i27 + 112) {
                        case 112:
                            Test0087.instanceCount = i21;
                            i2 = i24;
                            i24 = (int) Test0087.instanceCount;
                            i24 = Test0087.sFld;
                            break;
                        case 113:
                            i1 += (int)d;
                        case 114:
                            i1 = (int)d;
                            break;
                        case 115:
                            f2 += (i27 * i27);
                            break;
                        case 116:
                            try {
                                i1 = (i2 / -17758);
                                i26 = (iArrFld[i25 + 1] / -1966120737);
                                i2 = (i27 % i25);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 117:
                            i1 *= 49650;
                            break;
                        case 118:
                            i22 -= i28;
                        case 119:
                            i24 = (int) Test0087.instanceCount;
                            break;
                        case 120:
                        case 121:
                            iArrFld[i] |= (int) Test0087.instanceCount;
                        case 122:
                            Test0087.instanceCount += (((i27 * i1) + Test0087.instanceCount) - Test0087.instanceCount);
                            break;
                        case 123:
                            Test0087.instanceCount = i;
                            break;
                        case 124:
                            i28 *= i26;
                            break;
                        case 125:
                            Test0087.instanceCount += i27;
                        case 126:
                            lArrFld[i27][i27] = i2;
                        case 127:
                            iArrFld[i25 - 1] -= i28;
                            break;
                        case 128:
                            Test0087.dFld = 9;
                            break;
                        case 129:
                            byArrFld[i27] = (byte)-19262;
                            break;
                        case 130:
                            if (Test0087.bFld) continue;
                            break;
                        case 131:
                            Test0087.instanceCount = Test0087.instanceCount;
                            break;
                        case 132:
                        case 133:
                            Test0087.instanceCount *= i26;
                            break;
                        case 134:
                            i24 += 3621;
                            break;
                        case 135:
                            i2 += (i27 | i22);
                            break;
                        case 136:
                            i1 = (int) Test0087.instanceCount;
                            break;
                        case 137:
                            i26 += 254;
                            break;
                        case 138:
                            i1 ^= i1;
                        case 139:
                        case 140:
                            i26 = i1;
                            break;
                        case 141:
                            i1 = i27;
                            break;
                        case 142:
                            d -= 22922;
                            break;
                        case 143:
                            i2 = -31830;
                            break;
                        case 144:
                            iArrFld[i25] |= -110;
                            break;
                        case 145:
                        case 146:
                            i22 >>= -10;
                            break;
                        case 147:
                            Test0087.instanceCount -= 13481L;
                            break;
                        case 148:
                            lArrFld[i27][i27] >>= Test0087.instanceCount;
                            break;
                        case 149:
                            i26 += (i27 * i27);
                        case 150:
                            Test0087.bFld = false;
                            break;
                        case 151:
                            i22 = Test0087.byFld;
                            break;
                        case 152:
                            if (Test0087.bFld) break;
                            break;
                        case 153:
                            Test0087.instanceCount &= Test0087.instanceCount;
                        case 154:
                            i28 /= (int)(i22 | 1);
                            break;
                        case 155:
                            i2 = i25;
                            break;
                        case 156:
                            i24 *= (int)-2.128681;
                            break;
                        case 157:
                            i24 = i22;
                            break;
                        case 158:
                            i24 += (int)-154L;
                            break;
                        case 159:
                            i28 += (((i27 * i1) + i29) - f2);
                        case 160:
                            Test0087.instanceCount += (i27 - i26);
                            break;
                        case 161:
                            i22 *= (int)f2;
                            break;
                        case 162:
                            if (Test0087.bFld) break;
                            break;
                        case 163:
                            Test0087.instanceCount += (i27 ^ i21);
                            break;
                        case 164:
                            if (false) continue;
                            break;
                        case 165:
                            iArrFld[(i23 >>> 1) % N] = i23;
                            break;
                        case 166:
                            f2 -= i28;
                        case 167:
                            iArrFld[i27 - 1] ^= Test0087.byFld;
                        case 168:
                            Test0087.bFld = Test0087.bFld;
                            break;
                        case 169:
                            i2 += (i27 | i26);
                        case 170:
                            Test0087.byFld <<= (byte) i28;
                        case 171:
                            f2 -= i26;
                            break;
                        case 172:
                            lArrFld[i25][i25 - 1] |= Test0087.instanceCount;
                            break;
                        case 173:
                            iArrFld[i] = (int) Test0087.dFld;
                        case 174:
                            Test0087.instanceCount += (i27 * i27);
                        case 175:
                            Test0087.sArrFld[i] -= (short) i;
                        case 176:
                        case 177:
                            try {
                                i1 = (i / iArrFld[i - 1]);
                                i1 = (i % i2);
                                i24 = (-593623849 / i2);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 178:
                            if (Test0087.bFld) continue;
                            break;
                        case 179:
                            Test0087.instanceCount |= Test0087.byFld;
                            break;
                        case 180:
                            f2 *= Test0087.instanceCount;
                        case 181:
                            f2 += Test0087.instanceCount;
                            break;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 f2 i25 = " + i24 + "," + Float.floatToIntBits(f2) + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("d i29 = " + Double.doubleToLongBits(d) + "," + i29);

        FuzzerUtils.out.println("Test0087.instanceCount Test0087.byFld Test0087.dFld = " + Test0087.instanceCount + "," + Test0087.byFld +
                "," + Double.doubleToLongBits(Test0087.dFld));
        FuzzerUtils.out.println("Test0087.sFld Test0087.bFld iArrFld = " + Test0087.sFld + "," + (Test0087.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("lArrFld byArrFld Test0087.sArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(byArrFld) + "," + FuzzerUtils.checkSum(Test0087.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0087 _instance = new Test0087();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
