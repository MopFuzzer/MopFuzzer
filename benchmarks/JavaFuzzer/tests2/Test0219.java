// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:22 2023
public class Test0219 {

    public static final int N = 400;

    public static long instanceCount=4103547001L;
    public int iFld=39119;
    public boolean bFld=true;
    public float fFld=-59.966F;
    public static int[] iArrFld =new int[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0219.iArrFld, 137);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth2(int i1, int i2) {

        int i3=11, i4=-53105, i5=-9034, i6=8, i7=83, i8=43344;

        for (i3 = 11; 188 > i3; i3 += 2) {
            for (i5 = 1; i5 < 18; ++i5) {
                i6 = -4;
            }
            Test0219.instanceCount -= i6;
            if (bFld) {
                Test0219.instanceCount += (((i3 * i3) + i6) - Test0219.instanceCount);
                Test0219.instanceCount <<= i3;
            } else {
                Test0219.instanceCount = -24177;
                i6 |= 16598;
                Test0219.instanceCount += (long) fFld;
                if (bFld) break;
                vMeth2_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8;
                return;
            }
            for (i7 = 1; i7 < 18; i7++) {
                iFld += (((i7 * i3) + i1) - i5);
                Test0219.instanceCount >>= -12;
                i1 += (i7 - i3);
            }
        }
        vMeth2_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8;
    }

    public void vMeth1(int i) {

        double d=-1.12906;

        vMeth2(i, iFld);
        Test0219.instanceCount %= ((long) (d) | 1);
        Test0219.instanceCount *= iFld;
        i -= iFld;
        iFld = iFld;
        Test0219.iArrFld[(iFld >>> 1) % N] = i;
        for (int i9 : Test0219.iArrFld) {
            Test0219.iArrFld[(i9 >>> 1) % N] += (int) Test0219.instanceCount;
            Test0219.instanceCount >>= iFld;
        }
        i = iFld;
        Test0219.iArrFld = Test0219.iArrFld;
        iFld = iFld;
        vMeth1_check_sum += i + Double.doubleToLongBits(d);
    }

    public void vMeth(long l, long l1, short s) {

        int i10=34;
        int i11=-5;
        int i12=-8;
        int i13=-34971;
        int[] iArr =new int[N];
        long l2=3997528467L;

        FuzzerUtils.init(iArr, -11);

        if (bFld) {
            s = (short)(--iArr[(iFld >>> 1) % N]);
            vMeth1(iFld);
            if (bFld) {
                for (i10 = 17; i10 < 297; i10++) {
                    if (bFld) break;
                    for (l2 = 1; l2 < 6; ++l2) {
                        iFld = (int)l2;
                        iFld |= 54366;
                        iFld = i12;
                        i13 = 1;
                        while (++i13 < 2) {
                            iFld *= i10;
                            if (false) break;
                            i11 = i11;
                        }
                    }
                    if (iFld != 0) {
                        vMeth_check_sum += l + l1 + s + i10 + i11 + l2 + i12 + i13 + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
            } else {
                dArrFld[(i11 >>> 1) % N] = i10;
            }
        } else {
            iArr = iArr;
        }
        vMeth_check_sum += l + l1 + s + i10 + i11 + l2 + i12 + i13 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        short s1=10881;
        int i14=13909, i15=3592, i16=-31, i17=119;
        double d1=2.94365;
        float f=-1.194F, f1=11.983F;

        vMeth(Test0219.instanceCount, Test0219.instanceCount, s1);
        for (i14 = 4; i14 < 392; i14++) {
            s1 = (short)110;
            Test0219.instanceCount += (i14 * Test0219.instanceCount);
            for (d1 = 1; d1 < 65; d1++) {
                if (bFld) {
                    Test0219.instanceCount -= (long) d1;
                    iFld = i14;
                }
            }
            iFld += (((i14 * fFld) + i15) - i16);
            i15 *= i14;
            for (f = 2; 65 > f; f++) {
                dArrFld[i14] = 48846;
                f1 = 1;
                do {
                    dArrFld[(int) (f)] -= Test0219.instanceCount;
                    fFld = Test0219.instanceCount;
                    switch ((int)((f1 % 5) + 85)) {
                    case 85:
                        i15 = iFld;
                        Test0219.instanceCount = i17;
                        i15 += -8;
                    case 86:
                        i16 = (int) Test0219.instanceCount;
                        break;
                    case 87:
                        i17 += (int) (((f1 * f1) + Test0219.instanceCount) - Test0219.instanceCount);
                        if (bFld) break;
                        Test0219.instanceCount -= i14;
                        break;
                    case 88:
                        Test0219.iArrFld[(int) (f1)] += iFld;
                        i15 /= 26655;
                        break;
                    case 89:
                        fFld = i16;
                        switch ((int)((f1 % 2) + 18)) {
                        case 18:
                            Test0219.instanceCount += Test0219.instanceCount;
                            i17 -= -31631;
                        case 19:
                            if (bFld) continue;
                            break;
                        }
                        break;
                    }
                } while (++f1 < 2);
            }
        }

        FuzzerUtils.out.println("s1 i14 i15 = " + s1 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("d1 i16 f = " + Double.doubleToLongBits(d1) + "," + i16 + "," +
            Float.floatToIntBits(f));
        FuzzerUtils.out.println("i17 f1 = " + i17 + "," + Float.floatToIntBits(f1));

        FuzzerUtils.out.println("Test0219.instanceCount iFld bFld = " + Test0219.instanceCount + "," + iFld + "," + (bFld ? 1 :
            0));
        FuzzerUtils.out.println("fFld Test0219.iArrFld dArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0219.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0219 _instance = new Test0219();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
