// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0263 {

    public static final int N = 400;

    public static long instanceCount=7588386806625117367L;
    public static byte byFld=79;
    public static double dFld=33.33991;
    public static short sFld=12216;
    public static int[][] iArrFld =new int[N][N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0263.iArrFld, 7);
        FuzzerUtils.init(Test0263.bArrFld, true);
    }

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7) {

        int i8=3;
        int i9=186;
        int i10=-14;
        int i11=-2;
        int i12=1;
        int i13=12319;
        int i14=210;
        int i15=-1;
        int[] iArr1 =new int[N];
        double[] dArr =new double[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr1, 89);
        FuzzerUtils.init(dArr, -1.63800);
        FuzzerUtils.init(lArr, 10L);

        i7 = (int) Test0263.instanceCount;
        Test0263.instanceCount *= Test0263.instanceCount;
        iArr1[(0 >>> 1) % N] = (int) Test0263.instanceCount;
        for (i8 = 4; i8 < 248; ++i8) {
            i9 <<= i7;
            try {
                i9 = (iArr1[i8] / i7);
                i9 = (40366 % i7);
                i9 = (i9 % 6393);
            } catch (ArithmeticException a_e) {}
            Test0263.iArrFld = Test0263.iArrFld;
            for (i10 = 7; i10 > 1; i10--) {
                lArr[i10][i8 + 1] |= 17031;
            }
            Test0263.instanceCount >>= 33892L;
            for (i12 = 1; i12 < 7; ++i12) {
                float f1=0.792F;
                f1 += (((i12 * i9) + f1) - Test0263.instanceCount);
                for (i14 = 1; i14 < 2; i14++) {
                    i15 *= i8;
                    f1 += (((i14 * Test0263.instanceCount) + i12) - i11);
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(boolean b1) {

        int i4=-37802;
        int i5=76;
        int i6=14;
        int i16=4;
        int[] iArr =new int[N];
        float f=111.476F;
        long l=11856L;
        long[][] lArr1 =new long[N][N];
        double d1=-39.41531;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, 245);
        FuzzerUtils.init(lArr1, 0L);
        FuzzerUtils.init(byArr, (byte)-14);

        for (i4 = 4; 313 > i4; ++i4) {
            i6 = 1;
            while (++i6 < 5) {
                switch ((((iArr[i4 + 1] >>> 1) % 2) * 5) + 3) {
                case 10:
                    Test0263.instanceCount = (long) ((++i5) + ((i5--) - f));
                    vMeth1(i5);
                    break;
                case 4:
                    lArr1[(i6 >>> 1) % N][i6] = (long)f;
                    Test0263.instanceCount += i6;
                    switch ((i4 % 8) + 64) {
                    case 64:
                        Test0263.instanceCount -= i4;
                        if (i4 != 0) {
                            vMeth_check_sum += (b1 ? 1 : 0) + i4 + i5 + i6 + Float.floatToIntBits(f) + l + i16 +
                                Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1)
                                + FuzzerUtils.checkSum(byArr);
                            return;
                        }
                        for (l = 1; l > 1; l--) {
                            i16 *= (int)d1;
                            Test0263.instanceCount ^= i4;
                            byArr[i6 + 1] -= (byte)f;
                            i16 = i4;
                        }
                        break;
                    case 65:
                    case 66:
                        i16 += i6;
                    case 67:
                        Test0263.instanceCount += (long) (-2.171F + (i6 * i6));
                        break;
                    case 68:
                        f += (7189 + (i6 * i6));
                        break;
                    case 69:
                        Test0263.iArrFld[i6 + 1][i6] = Test0263.byFld;
                        break;
                    case 70:
                        i5 = i4;
                        break;
                    case 71:
                        i5 >>= Test0263.byFld;
                        break;
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += (b1 ? 1 : 0) + i4 + i5 + i6 + Float.floatToIntBits(f) + l + i16 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(byArr);
    }

    public static boolean bMeth(boolean b) {

        int i2=13, i3=162;
        float f2=-72.329F;

        for (i2 = 1; i2 < 335; ++i2) {
            i3 += i2;
            vMeth(b);
            i3 += (i2 * Test0263.byFld);
            i3 = i2;
            Test0263.iArrFld[i2][i2 - 1] = i2;
            f2 += i2;
            Test0263.iArrFld[i2][i2] = i3;
            Test0263.instanceCount += 47924;
            i3 += (((i2 * i2) + Test0263.instanceCount) - i3);
        }
        i3 ^= i3;
        Test0263.instanceCount += Test0263.instanceCount;
        i3 *= i3;
        i3 |= (int) Test0263.instanceCount;
        i3 -= (int)f2;
        long meth_res = (b ? 1 : 0) + i2 + i3 + Float.floatToIntBits(f2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=51272, i17=-8, i18=2151, i19=8, i20=-181, i21=-69, i22=0;
        double d2=75.106884;
        boolean b2=true;
        float f3=-49.805F;
        float f4=-2.566F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 1.442F);

        for (i = 14; i < 357; ++i) {
            if (bMeth(false)) break;
            Test0263.instanceCount = i;
            Test0263.iArrFld[i - 1][i] *= (int) Test0263.instanceCount;
            fArr[i] = i1;
            for (d2 = i; d2 < 73; ++d2) {
                i17 += (int)-2.385F;
                Test0263.dFld /= (i | 1);
                Test0263.bArrFld[(int) (d2 + 1)] = b2;
                i1 += (int) (((d2 * Test0263.byFld) + i1) - i1);
                Test0263.iArrFld[i][i] -= (int) d2;
                i1 *= i;
            }
            for (i18 = 4; 73 > i18; ++i18) {
                Test0263.iArrFld[i][i] = i17;
                Test0263.instanceCount += (((i18 * i1) + Test0263.byFld) - i1);
                Test0263.instanceCount = i19;
                i1 = (int)f3;
                i1 = (int)-2.707F;
                f3 += i18;
                Test0263.sFld >>>= (short) -5748382855180248512L;
            }
            for (f4 = 73; 2 < f4; --f4) {
                i1 += (int)(3084399896L + (f4 * f4));
                for (i21 = 1; i21 < 2; ++i21) {
                    Test0263.instanceCount <<= Test0263.instanceCount;
                    try {
                        i17 = (Test0263.iArrFld[i][i21 - 1] % Test0263.iArrFld[i][i - 1]);
                        i1 = (Test0263.iArrFld[(int) (f4 - 1)][(0 >>> 1) % N] % i18);
                        i22 = (48050 % Test0263.iArrFld[i][i]);
                    } catch (ArithmeticException a_e) {}
                    Test0263.iArrFld[i - 1][i21 + 1] = (int) 4L;
                    i1 >>= (int)-12L;
                }
                Test0263.instanceCount += (long) (((f4 * i20) + f3) - Test0263.instanceCount);
                i19 += 32978;
            }
        }
        i17 += i19;

        FuzzerUtils.out.println("i i1 d2 = " + i + "," + i1 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i17 b2 i18 = " + i17 + "," + (b2 ? 1 : 0) + "," + i18);
        FuzzerUtils.out.println("i19 f3 f4 = " + i19 + "," + Float.floatToIntBits(f3) + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0263.instanceCount Test0263.byFld Test0263.dFld = " + Test0263.instanceCount + "," + Test0263.byFld +
                "," + Double.doubleToLongBits(Test0263.dFld));
        FuzzerUtils.out.println("Test0263.sFld Test0263.iArrFld Test0263.bArrFld = " + Test0263.sFld + "," +
                FuzzerUtils.checkSum(Test0263.iArrFld) + "," + FuzzerUtils.checkSum(Test0263.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0263 _instance = new Test0263();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
