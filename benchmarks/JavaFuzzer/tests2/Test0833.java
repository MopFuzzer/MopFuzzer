// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:51 2023
public class Test0833 {

    public static final int N = 400;

    public static long instanceCount=7513L;
    public static int iFld=120;
    public static float fFld=-46.970F;
    public boolean bFld=false;
    public long lFld=4L;
    public static byte[] byArrFld =new byte[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0833.byArrFld, (byte) -93);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float[][] fArr =new float[N][N];

        FuzzerUtils.init(fArr, 33.593F);

        fArr[(207 >>> 1) % N][(-43379 >>> 1) % N] *= Test0833.instanceCount;
        vMeth2_check_sum += Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i1, double d, int i2) {

        int i3=-96;
        int i4=15869;
        int i5=-30279;
        int i6=8;
        int i7=14;
        int i8=-84;
        int[] iArr =new int[N];
        long l=2235501283L;
        boolean b=true;

        FuzzerUtils.init(iArr, 3057);

        for (i3 = 316; i3 > 16; --i3) {
            for (l = 1; 6 > l; l++) {
                try {
                    i5 = (i4 / 1725392114);
                    i1 = (8004 / i3);
                    iArr[(int) (l + 1)] = (-54150 % Test0833.iFld);
                } catch (ArithmeticException a_e) {}
                Test0833.fFld += (l + i5);
            }
            i2 = (int) (Test0833.fFld - ((i4++) << (Test0833.instanceCount + i3)));
            iArr[i3] = (i2--);
            for (i6 = 1; 6 > i6; i6++) {
                vMeth2();
                i8 = 1;
                do {
                    Test0833.fFld = 14772L;
                    b = b;
                    if (i3 != 0) {
                        vMeth1_check_sum += i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + l + i5 + i6 + i7 + i8 + (b
                            ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    Test0833.fFld += (i8 * i8);
                } while (++i8 < 2);
                i4 = (int) Test0833.instanceCount;
                Test0833.fFld += i1;
            }
        }
        vMeth1_check_sum += i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + l + i5 + i6 + i7 + i8 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i) {

        double d1=1.65099;
        int i9=240, i10=-137, i11=174, i12=-42021, i13=30332;
        boolean b1=true;
        short s=-12063;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -4318660035838581365L);

        vMeth1(i, d1, 4);
        for (i9 = 2; i9 < 130; i9 += 2) {
            Test0833.fFld = i;
            for (i11 = 1; i11 < 24; ++i11) {
                i10 <<= -37941;
                i = (int) Test0833.instanceCount;
                if (true) break;
                i13 = 1;
                while (++i13 < 2) {
                    i12 = i11;
                    i10 = Test0833.iFld;
                    if (i12 != 0) {
                        vMeth_check_sum += i + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0)
                            + s + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    switch ((((i >>> 1) % 9) * 5) + 103) {
                    case 127:
                        lArr[i13] &= Test0833.instanceCount;
                        if (b1) break;
                        i10 = 8;
                        break;
                    case 135:
                        i12 += (((i13 * i10) + Test0833.instanceCount) - i11);
                        break;
                    case 118:
                        Test0833.fFld += i13;
                        break;
                    case 104:
                        Test0833.iFld += (i13 * i13);
                        break;
                    case 143:
                        i10 >>= (int) Test0833.instanceCount;
                        break;
                    case 129:
                        i12 >>= s;
                        break;
                    case 133:
                        lArr = lArr;
                        break;
                    case 141:
                        Test0833.fFld += 0;
                        break;
                    case 112:
                        Test0833.instanceCount = -70;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) + s +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i14=6, i15=-174, i16=85, i17=-21198;
        double d2=-39.50728;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -1L);

        Test0833.iFld += (int) -36854L;
        vMeth(Test0833.iFld);
        Test0833.iFld -= (int) Test0833.fFld;
        for (byte by : Test0833.byArrFld) {
            Test0833.iFld += Test0833.iFld;
            for (i14 = 1; i14 < 63; ++i14) {
                Test0833.iFld >>= 13;
                for (i16 = 1; 2 > i16; i16++) {
                    Test0833.instanceCount += i16;
                    switch ((i16 % 2) + 15) {
                    case 15:
                        i17 = i16;
                        Test0833.iFld *= i14;
                        Test0833.fFld = Test0833.iFld;
                        break;
                    case 16:
                        Test0833.iFld -= (int) -4286778973621679635L;
                        i15 = i16;
                        bFld = bFld;
                        Test0833.instanceCount -= 11651;
                        break;
                    }
                    i15 = i15;
                    iArrFld[i14 - 1] -= -53214;
                    lFld = i15;
                    i17 = i16;
                    i17 <<= (int)lFld;
                    i17 >>= i15;
                }
                i15 += (int)-166L;
                lArr1[i14 + 1] -= i17;
                if (bFld) {
                    iArrFld = iArrFld;
                    i17 += (i14 * i14);
                    i15 = (int)d2;
                } else if (bFld) {
                    Test0833.instanceCount = i14;
                } else {
                    lFld -= i16;
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 d2 lArr1 = " + i17 + "," + Double.doubleToLongBits(d2) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0833.instanceCount Test0833.iFld Test0833.fFld = " + Test0833.instanceCount + "," + Test0833.iFld +
                "," + Float.floatToIntBits(Test0833.fFld));
        FuzzerUtils.out.println("bFld lFld Test0833.byArrFld = " + (bFld ? 1 : 0) + "," + lFld + "," +
                FuzzerUtils.checkSum(Test0833.byArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0833 _instance = new Test0833();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
