// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:30 2023
public class Test0389 {

    public static final int N = 400;

    public static long instanceCount=-30534L;
    public static byte byFld=-117;
    public static float fFld=54.663F;
    public static volatile double dFld=-70.23544;
    public static volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0389.dArrFld, 60.39362);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i6) {

        long l=-814308992L;
        long[] lArr =new long[N];
        int i7=13;
        int i8=61432;
        int i9=0;
        int[] iArr2 =new int[N];
        short s=-1755;

        FuzzerUtils.init(iArr2, 24068);
        FuzzerUtils.init(lArr, 7172742021051255957L);

        i6 <<= 29671;
        iArr2[(i6 >>> 1) % N] >>= (int) Test0389.instanceCount;
        l = 1;
        do {
            for (i7 = 1; i7 < 9; i7 += 3) {
                i9 = 5;
                while ((i9 -= 2) > 0) {
                    i6 -= s;
                    switch ((i9 % 7) + 30) {
                    case 30:
                        s ^= (short)5;
                        i6 = (int)f;
                        break;
                    case 31:
                        lArr = lArr;
                    case 32:
                        if (true) break;
                        Test0389.instanceCount = i7;
                        Test0389.byFld -= (byte) i8;
                        Test0389.byFld += (byte) (i9 * i9);
                        break;
                    case 33:
                        Test0389.instanceCount = i9;
                        break;
                    case 34:
                        Test0389.dArrFld[i7 - 1] += i9;
                    case 35:
                        Test0389.instanceCount >>>= i9;
                        break;
                    case 36:
                        if (i8 != 0) {
                            vMeth1_check_sum += Float.floatToIntBits(f) + i6 + l + i7 + i8 + i9 + s +
                                FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        break;
                    }
                }
            }
        } while (++l < 172);
        vMeth1_check_sum += Float.floatToIntBits(f) + i6 + l + i7 + i8 + i9 + s + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i2, int i3) {

        int i4=-61289;
        int i5=4;
        int i10=-15125;
        int i11=-30466;
        int i12=108;
        int[] iArr1 =new int[N];
        short s1=-2839;
        short[] sArr =new short[N];
        boolean b=false;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr1, 88);
        FuzzerUtils.init(dArr, -56.125392);
        FuzzerUtils.init(sArr, (short)-24565);

        for (i4 = 7; 286 > i4; ++i4) {
            iArr1[i4 + 1] -= (int) ((++i2) + (dArr[i4] - (89 - (-(i2 + Test0389.instanceCount)))));
            vMeth1(Test0389.fFld, 170);
            i5 >>>= s1;
            if (b) continue;
            i5 >>>= i3;
            i3 += i4;
        }
        i3 <<= i5;
        i10 = 1;
        while (++i10 < 313) {
            i2 = (int) Test0389.instanceCount;
        }
        sArr[(i5 >>> 1) % N] *= s1;
        Test0389.fFld += 246;
        for (i11 = 205; i11 > 10; --i11) {
            i12 = i3;
            i2 += (int)244L;
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + s1 + (b ? 1 : 0) + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr);
    }

    public static void vSmallMeth() {

        int i13=-30514;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, -77);

        vMeth(i13, i13);
        Test0389.fFld = (float) Test0389.dFld;
        vSmallMeth_check_sum += i13 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=-4;
        int i1=-5;
        int i15=-156;
        int i16=14;
        int i17=-38;
        int i18=174;
        int i19=42774;
        int i20=-24889;
        int[] iArr =new int[N];
        short s2=2410;
        long l1=493861621L;
        boolean b1=false;

        FuzzerUtils.init(iArr, 55753);

        for (i = 258; i > 10; i--) {
            iArr[i] %= (int) ((((i * -14) + (-Test0389.instanceCount)) >> Test0389.instanceCount) | 1);
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth();
            for (i15 = 2; i15 < 101; i15++) {
                i1 += (i15 * i15);
                i1 += (int) Test0389.instanceCount;
                i16 = (int) Test0389.fFld;
            }
            i1 = s2;
            l1 = 1;
            do {
                iArr[(int)(l1 - 1)] -= i16;
                if (b1) {
                    i16 *= i16;
                    if (b1) {
                        switch ((i % 1) + 65) {
                        case 65:
                            Test0389.instanceCount = i1;
                            break;
                        default:
                            i16 >>= i16;
                            i16 += i16;
                            if (true) continue;
                            Test0389.instanceCount = i15;
                        }
                        iArr[i + 1] -= s2;
                        for (i17 = i; i17 < 1; i17++) {
                            Test0389.fFld -= i16;
                            i18 *= (int) Test0389.fFld;
                            i1 >>= i1;
                            Test0389.byFld -= (byte) i15;
                            i16 += (int) Test0389.fFld;
                        }
                    } else {
                        for (i19 = 1; i19 < 1; ++i19) {
                            if (b1) {
                            } else {
                                Test0389.instanceCount = i19;
                            }
                            Test0389.instanceCount -= i;
                        }
                    }
                } else if (b1) {
                } else if (true) {
                    iArr[i + 1] += Test0389.byFld;
                }
            } while (++l1 < 101);
        }

        FuzzerUtils.out.println("i i1 i15 = " + i + "," + i1 + "," + i15);
        FuzzerUtils.out.println("i16 s2 l1 = " + i16 + "," + s2 + "," + l1);
        FuzzerUtils.out.println("i17 i18 b1 = " + i17 + "," + i18 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i19 i20 iArr = " + i19 + "," + i20 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0389.instanceCount Test0389.byFld Test0389.fFld = " + Test0389.instanceCount + "," + Test0389.byFld +
                "," + Float.floatToIntBits(Test0389.fFld));
        FuzzerUtils.out.println("Test0389.dFld Test0389.dArrFld = " + Double.doubleToLongBits(Test0389.dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0389.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0389 _instance = new Test0389();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
