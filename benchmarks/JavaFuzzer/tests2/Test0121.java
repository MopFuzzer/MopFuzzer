// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0121 {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static volatile byte byFld=-31;
    public static double dFld=2.47033;
    public volatile float fFld=0.1004F;
    public static double dFld1=-31.18889;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0121.lArrFld, 133L);
        FuzzerUtils.init(Test0121.iArrFld, -5138);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by, byte by1) {

        int i9=50892, i10=50414, i11=31846;
        float f2=0.482F;
        float[] fArr =new float[N];
        boolean b=false;
        short s=-3747;

        FuzzerUtils.init(fArr, -2.12F);

        fArr[(i9 >>> 1) % N] = i9;
        try {
            Test0121.iArrFld[(i9 >>> 1) % N] -= i9;
            Test0121.iArrFld[(i9 >>> 1) % N] >>= i9;
            i9 += i9;
            for (i10 = 9; i10 < 174; i10++) {
                f2 += i11;
                i9 += (i10 * i10);
            }
            if (b) {
                i9 -= 62555;
                Test0121.iArrFld[(i11 >>> 1) % N] = i10;
                i11 += i10;
                vMeth1_check_sum += by + by1 + i9 + i10 + i11 + Float.floatToIntBits(f2) + (b ? 1 : 0) + s +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
        }
        catch (ArithmeticException exc1) {
            s = (short)i10;
        }
        finally {
            i9 = i9;
            i11 -= i9;
        }
        vMeth1_check_sum += by + by1 + i9 + i10 + i11 + Float.floatToIntBits(f2) + (b ? 1 : 0) + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {


        vMeth1(Test0121.byFld, Test0121.byFld);
        long meth_res = 0;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3) {

        int i4=-4876, i5=0, i6=-73, i7=-54302, i8=20463, i12=13, i13=-6;
        float f1=1.21F;
        long l=-156L;
        short s1=-27988;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 2.25031);

        for (i4 = 5; i4 < 169; i4++) {
            for (i6 = 1; i6 < 10; i6++) {
                i3 += (int) (Test0121.instanceCount - i7);
                i7 = (int)(--f1);
            }
        }
        i8 = 1;
        while (++i8 < 278) {
            i7 += (int)(-8L + (i8 * i8));
            if ((l++) == (i7 >>= iMeth())) break;
            for (i12 = 1; 6 > i12; ++i12) {
                s1 <<= (short)i8;
                Test0121.instanceCount = i13;
            }
            i5 ^= i13;
            i5 = (int)f1;
            l >>= i8;
            i7 += (((i8 * i7) + i6) - i7);
            dArr = dArr;
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + l + i12 + i13 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-97, i1=13, i2=32, i14=-14, i15=23477, i16=-27844, i17=-15136, i18=-16;
        long l1=1691149171L, l2=4415280396080907868L;
        boolean b1=true;

        Test0121.instanceCount >>= i;
        Test0121.lArrFld[(i >>> 1) % N] = Test0121.byFld;
        for (i1 = 3; i1 < 184; i1++) {
            float f=-64.425F;
            i *= (int)(((i + f) * i1) - Math.max(i1 % -2926, i));
        }
        vMeth(-35);
        switch ((((i >>> 1) % 2) * 5) + 31) {
        case 40:
            i14 = 1;
            while (++i14 < 245) {
                switch ((i14 % 1) + 30) {
                case 30:
                    Test0121.dFld -= i14;
                    i = i14;
                    break;
                default:
                    switch ((i14 % 8) + 52) {
                    case 52:
                        i2 = (int) Test0121.instanceCount;
                        Test0121.iArrFld[i14 - 1] += i1;
                        break;
                    case 53:
                        i15 = 1;
                        do {
                            if (b1) {
                                for (l1 = i15; 1 > l1; ++l1) {
                                    fFld *= -35335;
                                    i16 += 2;
                                    Test0121.instanceCount += -63908;
                                }
                                Test0121.lArrFld[i14] *= i;
                            }
                            i = i14;
                            i2 >>= i16;
                            i = 65;
                            Test0121.instanceCount <<= i15;
                            for (l2 = 1; l2 < 1; ++l2) {
                                try {
                                    i16 = (76 / i15);
                                    i = (-1577965226 / Test0121.iArrFld[(int) (l2 - 1)]);
                                    i16 = (i16 % -23814);
                                } catch (ArithmeticException a_e) {}
                                i18 /= (int)(l1 | 1);
                                i17 = i18;
                                i18 >>>= i;
                                b1 = false;
                            }
                        } while (++i15 < 103);
                        break;
                    case 54:
                        Test0121.dFld1 -= i17;
                        break;
                    case 55:
                        i = (int)l2;
                        break;
                    case 56:
                        fFld = i1;
                    case 57:
                    case 58:
                        i16 <<= i15;
                        break;
                    case 59:
                        Test0121.iArrFld = FuzzerUtils.int1array(N, (int) -54963);
                        break;
                    default:
                        i18 = Test0121.byFld;
                    }
                }
            }
        case 38:
            fFld -= 101;
            break;
        default:
            i17 += i18;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i14 i15 l1 = " + i14 + "," + i15 + "," + l1);
        FuzzerUtils.out.println("i16 b1 l2 = " + i16 + "," + (b1 ? 1 : 0) + "," + l2);
        FuzzerUtils.out.println("i17 i18 = " + i17 + "," + i18);

        FuzzerUtils.out.println("Test0121.instanceCount Test0121.byFld Test0121.dFld = " + Test0121.instanceCount + "," + Test0121.byFld +
                "," + Double.doubleToLongBits(Test0121.dFld));
        FuzzerUtils.out.println("fFld Test0121.dFld1 Test0121.lArrFld = " + Float.floatToIntBits(fFld) + "," +
                Double.doubleToLongBits(Test0121.dFld1) + "," + FuzzerUtils.checkSum(Test0121.lArrFld));
        FuzzerUtils.out.println("Test0121.iArrFld = " + FuzzerUtils.checkSum(Test0121.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0121 _instance = new Test0121();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
