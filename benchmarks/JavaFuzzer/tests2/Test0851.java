// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0851 {

    public static final int N = 400;

    public static long instanceCount=-57550L;
    public static float fFld=-1.637F;
    public static volatile short sFld=21795;
    public int iFld=58899;
    public static double dFld=-106.52668;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s1, int i9) {

        float f=5.622F;
        int i10=-73, i11=5, i12=0, i13=-7, i14=4;
        boolean b1=true;

        for (f = 3; 148 > f; f++) {
            Test0851.instanceCount >>= -251;
            Test0851.instanceCount -= -78L;
            i9 -= i10;
            i10 += (int)(f * f);
            for (i11 = 1; i11 < 11; ++i11) {
                for (i13 = 2; i13 > 1; i13--) {
                    double d=60.72474;
                    i10 += (((i13 * i13) + i13) - i14);
                    i10 += (i13 ^ i14);
                    Test0851.fFld -= (float) d;
                    i9 = i12;
                    i9 += (int) Test0851.instanceCount;
                    if (b1) {
                        Test0851.instanceCount -= i14;
                        d = 2.73155;
                    } else {
                        i9 *= (int) Test0851.fFld;
                    }
                }
            }
        }
        vMeth2_check_sum += s1 + i9 + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + i14 + (b1 ? 1 : 0);
    }

    public static void vMeth1(short s, int i6, int i7) {

        int i8=-37542;
        int i15=218;
        int i16=-239;
        int i17=4;
        int i18=-24370;
        int[] iArr =new int[N];
        double d1=-8.109033;
        byte by=110;

        FuzzerUtils.init(iArr, 145);

        i7 = i7;
        i8 = 1;
        do {
            vMeth2(s, i6);
            i6 |= i7;
            i7 += i8;
            Test0851.instanceCount = 53811;
            d1 += i7;
            for (i15 = 6; i15 > 1; i15 -= 2) {
                iArr[i15] += by;
                i16 *= by;
                i16 >>= by;
                for (i17 = 1; i17 < 3; i17++) {
                    i6 = i18;
                    i16 = -13;
                    i6 -= (int)-2183961598360542521L;
                }
            }
        } while (++i8 < 289);
        vMeth1_check_sum += s + i6 + i7 + i8 + Double.doubleToLongBits(d1) + i15 + i16 + by + i17 + i18 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i, int i1) {

        boolean b=false;
        boolean[] bArr =new boolean[N];
        int i2=14685, i3=-161, i4=-4, i5=-1, i19=-8827, i20=33520;
        double d2=2.68290;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr, -109.244F);

        b = (((16.34239 * i1) != (Test0851.instanceCount - i1)) || bArr[(i >>> 1) % N]);
        for (i2 = 4; i2 < 203; i2++) {
            for (i4 = i2; i4 < 8; ++i4) {
                vMeth1(Test0851.sFld, i5, 11);
                d2 = 1;
                while ((d2 -= 2) > 0) {
                    Test0851.fFld += 3.254F;
                    Test0851.fFld -= 64374;
                    if (b) break;
                }
                i1 <<= i;
                Test0851.instanceCount += i2;
                for (i19 = 1; 1 > i19; ++i19) {
                    fArr[i4 - 1][i19 - 1] = i3;
                }
            }
            Test0851.fFld += i2;
            if (b) break;
            Test0851.instanceCount = Test0851.instanceCount;
        }
        vMeth_check_sum += i + i1 + (b ? 1 : 0) + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d2) + i19 + i20 +
            FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i21=6;
        int i22=211;
        int i23=-10228;
        int i24=-10;
        int i25=-193;
        int i26=-28862;
        int i27=9;
        int i28=-142;
        int i29=214;
        int i30=-2;
        int[] iArr1 =new
                    int[N];
        long l=2459631144L;
        long[] lArr =new long[N];
        boolean b2=true;

        FuzzerUtils.init(iArr1, 14);
        FuzzerUtils.init(lArr, -46326L);

        vMeth(iFld, iFld);
        iFld += iFld;
        iArr1[(iFld >>> 1) % N] *= Test0851.sFld;
        switch ((((iFld >>> 1) % 3) * 5) + 17) {
        case 28:
        case 30:
            for (i21 = 201; i21 > 10; i21 -= 2) {
                iFld -= (int) Test0851.instanceCount;
                for (i23 = 14; i23 < 264; i23++) {
                    Test0851.sFld += Test0851.sFld;
                    iArr1 = iArr1;
                }
                Test0851.fFld += (i21 * iFld);
                Test0851.fFld -= i24;
                i22 = (int)l;
            }
            Test0851.dFld = Test0851.instanceCount;
            break;
        case 25:
            iArr1[(i23 >>> 1) % N] = (int) Test0851.instanceCount;
            iArr1[(i21 >>> 1) % N] = iFld;
            for (i25 = 2; i25 < 207; i25++) {
                for (i27 = 1; i27 < 122; i27++) {
                    if (b2) {
                        iFld += iFld;
                    } else if (b2) {
                        i26 += (((i27 * i27) + i23) - i26);
                    } else {
                        i22 = -58140;
                        lArr[i25] += i24;
                        i22 = i21;
                        b2 = b2;
                    }
                    Test0851.sFld += (short) i27;
                    i24 += i27;
                    for (i29 = 1; i29 < 2; ++i29) {
                        Test0851.dFld -= -3;
                        Test0851.dFld += i25;
                        try {
                            iFld = (i22 / i26);
                            i22 = (iArr1[i25 - 1] / 197);
                            iArr1[i25 + 1] = (iFld % i23);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        default:
            b2 = b2;
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 l i25 = " + i24 + "," + l + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("b2 i29 i30 = " + (b2 ? 1 : 0) + "," + i29 + "," + i30);
        FuzzerUtils.out.println("iArr1 lArr = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0851.instanceCount Test0851.fFld Test0851.sFld = " + Test0851.instanceCount + "," +
                Float.floatToIntBits(Test0851.fFld) + "," + Test0851.sFld);
        FuzzerUtils.out.println("iFld Test0851.dFld = " + iFld + "," + Double.doubleToLongBits(Test0851.dFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0851 _instance = new Test0851();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
