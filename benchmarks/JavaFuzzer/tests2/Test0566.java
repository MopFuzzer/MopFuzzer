// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0566 {

    public static final int N = 400;

    public static long instanceCount=4L;
    public static volatile float fFld=1.195F;
    public static byte byFld=-87;
    public short sFld=29821;
    public double dFld=0.110625;
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld =new double[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0566.iArrFld, -9);
        FuzzerUtils.init(Test0566.dArrFld, 2.97230);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(long l, int i6, int i7) {

        int i8=-34723;
        int i9=-148;
        int i10=251;
        int i11=248;
        int i12=-11;
        int i13=-6;
        int[] iArr =new int[N];
        byte by=-23;
        byte[] byArr =new byte[N];
        float f1=119.637F;
        double d=-2.36290, d1=104.31320;

        FuzzerUtils.init(byArr, (byte)-113);
        FuzzerUtils.init(iArr, 69);

        i8 = 1;
        while (++i8 < 141) {
            i6 = i7;
        }
        byArr[(i6 >>> 1) % N] ^= (byte)i8;
        i6 = by;
        for (f1 = 14; 382 > f1; f1++) {
            by = (byte)i7;
        }
        for (i10 = 11; i10 < 248; i10++) {
            d = 1;
            do {
                i9 += (int)d;
            } while (++d < 7);
            for (i12 = i10; i12 < 7; ++i12) {
                i13 >>>= i13;
                switch ((i12 % 2) + 90) {
                case 90:
                    iArr[i10 + 1] += i7;
                    d1 *= i12;
                    try {
                        i7 = (i7 / -1524689407);
                        i11 = (-61885 / i11);
                        i9 = (14802 % iArr[i12 + 1]);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 91:
                    Test0566.fFld *= -33208;
                    break;
                default:
                    i13 -= i12;
                }
            }
        }
        long meth_res = l + i6 + i7 + i8 + by + Float.floatToIntBits(f1) + i9 + i10 + i11 + Double.doubleToLongBits(d)
            + i12 + i13 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth() {

        int i4=-10, i5=124, i14=95, i15=-209;

        for (i4 = 12; i4 < 352; ++i4) {
            i5 = (int) ((dMeth(Test0566.instanceCount, i5, i5) * Test0566.instanceCount) - Test0566.byFld);
            i5 -= i4;
        }
        for (i14 = 8; i14 < 147; ++i14) {
            i5 *= (int) Test0566.instanceCount;
            i5 += i15;
        }
        Test0566.iArrFld = Test0566.iArrFld;
        vMeth_check_sum += i4 + i5 + i14 + i15;
    }

    public int iMeth(int i1, int i2, int i3) {

        long l1=-190L;
        int i16=-30, i17=18080, i18=-6;
        boolean b=false;

        vMeth();
        i1 >>= (int)l1;
        Test0566.byFld <<= (byte) 36;
        for (double d2 : Test0566.dArrFld) {
            for (i16 = 1; i16 < 4; ++i16) {
                i17 += i2;
                i18 = 2;
                while (--i18 > 0) {
                    i17 = i2;
                    sFld >>>= (short)l1;
                    i17 += i17;
                    i3 = Test0566.byFld;
                    Test0566.iArrFld[i18 + 1] ^= i16;
                }
                if (b) continue;
                i17 += (i16 + i1);
            }
            i1 += i18;
        }
        long meth_res = i1 + i2 + i3 + l1 + i16 + i17 + i18 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-154, i19=-6, i20=67, i21=-12, i22=-34, i23=-191, i24=91, i25=63421, i26=6, i27=-247, i28=12;
        float f=-1.886F, f2=2.443F;
        boolean b1=false;
        double d3=-125.125670;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -71L);

        i >>= (int)(((i = (int)f) - (-iMeth(i, i, i))) + i);
        i19 = 1;
        do {
            if (b1) continue;
            for (i20 = 1; i20 < 69; ++i20) {
                i21 -= (int)f;
                Test0566.iArrFld[i19] = i19;
            }
        } while (++i19 < 364);
        i21 = i;
        i22 = 1;
        do {
            fArrFld[i22 - 1] = (float)dFld;
            f += (((i22 * i20) + i19) - i21);
            sFld >>= (short)-973958691L;
            Test0566.fFld += i22;
        } while (++i22 < 183);
        for (f2 = 7; f2 < 265; f2 += 3) {
            Test0566.iArrFld[(int) (f2 + 1)] >>= i19;
            i21 += (int) Test0566.instanceCount;
            lArr[(int)(f2 - 1)] -= -12;
        }
        Test0566.iArrFld[(i19 >>> 1) % N] -= i23;
        Test0566.iArrFld[(i22 >>> 1) % N] *= i21;
        dFld -= i20;
        for (d3 = 5; d3 < 266; ++d3) {
            Test0566.instanceCount -= i19;
            i23 += i20;
            for (i25 = 5; i25 < 96; ++i25) {
                Test0566.byFld >>= (byte) Test0566.instanceCount;
                Test0566.instanceCount = Test0566.instanceCount;
                i24 = i26;
                i23 = i20;
                for (i27 = 1; i27 < 2; i27++) {
                    i24 += (((i27 * i) + f2) - i);
                    Test0566.instanceCount += (((i27 * i) + Test0566.instanceCount) - Test0566.instanceCount);
                }
            }
        }

        FuzzerUtils.out.println("i f i19 = " + i + "," + Float.floatToIntBits(f) + "," + i19);
        FuzzerUtils.out.println("b1 i20 i21 = " + (b1 ? 1 : 0) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 f2 i23 = " + i22 + "," + Float.floatToIntBits(f2) + "," + i23);
        FuzzerUtils.out.println("d3 i24 i25 = " + Double.doubleToLongBits(d3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0566.instanceCount Test0566.fFld Test0566.byFld = " + Test0566.instanceCount + "," +
                Float.floatToIntBits(Test0566.fFld) + "," + Test0566.byFld);
        FuzzerUtils.out.println("sFld dFld Test0566.iArrFld = " + sFld + "," + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0566.iArrFld));
        FuzzerUtils.out.println("Test0566.dArrFld fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0566.dArrFld))
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0566 _instance = new Test0566();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
