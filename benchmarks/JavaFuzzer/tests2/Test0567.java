// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0567 {

    public static final int N = 400;

    public static long instanceCount=-7L;
    public static int iFld=0;
    public static boolean bFld=false;
    public volatile int iFld1=32813;
    public double dFld=74.60790;
    public static float fFld=2.483F;
    public static int[] iArrFld =new int[N];
    public static volatile double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0567.iArrFld, -12);
        FuzzerUtils.init(Test0567.dArrFld, -63.15355);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=-39648, i3=110, i4=-230, i5=-11, i6=13, i7=-6;
        short s=3694;
        float f1=-1.537F;

        Test0567.iArrFld[(Test0567.iFld >>> 1) % N] *= (int) Test0567.instanceCount;
        for (i2 = 6; i2 < 125; i2++) {
            Test0567.iFld += s;
            Test0567.iFld <<= i2;
            for (i4 = 1; i4 < 13; i4++) {
                f1 = i5;
                i5 *= (int)f1;
                i3 += i2;
            }
            Test0567.instanceCount >>= i3;
        }
        for (i6 = 6; i6 < 254; i6++) {
            if (Test0567.bFld) break;
            Test0567.instanceCount += i6;
            i5 -= (int) Test0567.instanceCount;
            if (Test0567.bFld) break;
            i3 += (i6 ^ i5);
        }
        vMeth1_check_sum += i2 + i3 + s + i4 + i5 + Float.floatToIntBits(f1) + i6 + i7;
    }

    public static long lMeth(long l) {

        short s1=-10666;
        int i9=18;
        int i10=-4;
        int i11=-11;
        int[][] iArr =new int[N][N];
        float f2=-84.1002F;
        float[] fArr =new float[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(fArr, 115.668F);
        FuzzerUtils.init(dArr, -91.79229);
        FuzzerUtils.init(iArr, -7);

        switch ((((Test0567.iFld >>> 1) % 9) * 5) + 15) {
        case 41:
            vMeth1();
        case 51:
            fArr[(-30622 >>> 1) % N] = Test0567.iFld;
            Test0567.instanceCount *= 10L;
            Test0567.iFld <<= s1;
            Test0567.iFld = Test0567.iFld;
        case 26:
            dArr = dArr;
            for (int i8 : Test0567.iArrFld) {
                for (i9 = 1; i9 < 4; i9++) {
                    l = s1;
                    Test0567.instanceCount = i10;
                }
                Test0567.iFld += Test0567.iFld;
                i11 = 1;
                while (++i11 < 4) {
                    byte by1=71;
                    i10 = by1;
                    dArr[i11 - 1] *= Test0567.iFld;
                }
            }
            break;
        case 50:
            i10 = (int)l;
            break;
        case 27:
            iArr = FuzzerUtils.int2array(N, (int)1);
            break;
        case 48:
            Test0567.iFld += i9;
        case 58:
            i10 = i9;
            break;
        case 55:
            f2 = i9;
            break;
        case 35:
            Test0567.iFld += i10;
            break;
        default:
            i10 >>= (int)l;
        }
        long meth_res = l + s1 + i9 + i10 + i11 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d) {

        boolean b=true;
        float f=0.103F;
        float[] fArr1 =new float[N];
        int i=-6, i1=-28190;
        byte by=58;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)104);
        FuzzerUtils.init(fArr1, 58.737F);

        b = b;
        Test0567.instanceCount = (long) ((f + Test0567.iFld) - (Test0567.iFld--));
        for (i = 12; i < 308; ++i) {
            byArr[i + 1] -= (byte) Test0567.iArrFld[i + 1];
            Test0567.instanceCount += (-Math.min((long) (d - Test0567.iFld), (long) (85 + (by * f))));
            lMeth(Test0567.instanceCount);
            switch (((i % 9) * 5) + 94) {
            case 107:
                try {
                    i1 = (1775132306 % Test0567.iArrFld[i]);
                    i1 = (-1605 / Test0567.iArrFld[i - 1]);
                    Test0567.iFld = (211 / i);
                } catch (ArithmeticException a_e) {}
                Test0567.iFld += i;
                break;
            case 110:
                Test0567.instanceCount = i1;
                break;
            case 116:
                Test0567.iArrFld[i + 1] += (int) 1.47102;
                i1 += (int)209L;
                break;
            case 135:
            case 130:
                Test0567.iFld = (int) Test0567.instanceCount;
                Test0567.iArrFld = Test0567.iArrFld;
                break;
            case 103:
                Test0567.iArrFld[i] <<= (int) Test0567.instanceCount;
                break;
            case 119:
                f += Test0567.iFld;
                break;
            case 95:
                i1 += i1;
                break;
            case 97:
                try {
                    Test0567.iFld = (-49964 % i1);
                    Test0567.iFld = (Test0567.iFld % -39340);
                    i1 = (i1 / i1);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + (b ? 1 : 0) + Float.floatToIntBits(f) + i + i1 + by +
            FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i12=0, i13=213, i14=13, i15=197, i16=-237, i17=18641, i18=-25364, i19=18249, i20=27785;
        byte by2=-2;
        float[] fArr2 =new float[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(fArr2, -66.860F);
        FuzzerUtils.init(bArr, true);

        vMeth(0.81535);
        Test0567.instanceCount = Test0567.instanceCount;
        for (i12 = 172; 3 < i12; --i12) {
            i13 = (int)-2438358999678679286L;
            Test0567.iArrFld = FuzzerUtils.int1array(N, (int) 9);
            Test0567.iArrFld[i12 + 1] <<= (int) Test0567.instanceCount;
            for (i14 = 2; i14 < 148; ++i14) {
                i16 = 1;
                while (++i16 < 2) {
                    Test0567.iFld = i12;
                    by2 -= (byte)i12;
                    Test0567.instanceCount = 58160;
                    i15 = -61524;
                    Test0567.iFld *= iFld1;
                    i15 = iFld1;
                    Test0567.instanceCount += i16;
                    fArr2 = fArr2;
                    bArr[i14 + 1] = Test0567.bFld;
                }
            }
            by2 = (byte)dFld;
            Test0567.fFld += (94 + (i12 * i12));
            for (i17 = 148; i17 > i12; i17--) {
                i13 += (i17 + Test0567.fFld);
                for (i19 = 1; i19 < 1; ++i19) {
                    iFld1 -= (int) Test0567.instanceCount;
                    i20 += (int) Test0567.instanceCount;
                    switch ((i19 % 2) + 55) {
                    case 55:
                        i15 += (33705 + (i19 * i19));
                        Test0567.fFld = Test0567.instanceCount;
                        Test0567.iArrFld[i19 - 1] *= (int) Test0567.fFld;
                        break;
                    case 56:
                        Test0567.iFld >>= (int) Test0567.instanceCount;
                        Test0567.dArrFld[i12] += -1.74950;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 by2 = " + i15 + "," + i16 + "," + by2);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 fArr2 bArr = " + i20 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2))
            + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0567.instanceCount Test0567.iFld Test0567.bFld = " + Test0567.instanceCount + "," + Test0567.iFld +
                "," + (Test0567.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld1 dFld Test0567.fFld = " + iFld1 + "," + Double.doubleToLongBits(dFld) + "," +
                Float.floatToIntBits(Test0567.fFld));
        FuzzerUtils.out.println("Test0567.iArrFld Test0567.dArrFld = " + FuzzerUtils.checkSum(Test0567.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0567.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0567 _instance = new Test0567();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
