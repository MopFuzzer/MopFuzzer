// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0778 {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static byte byFld=72;
    public static int iFld=60006;
    public static boolean bFld=true;
    public static short sFld=23357;
    public volatile long[] lArrFld =new long[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, long l1) {

        double d1=2.86041;
        float f1=126.571F;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 199);

        d1 += Test0778.instanceCount;
        iArr[(i7 >>> 1) % N][(i7 >>> 1) % N] += (int) Test0778.instanceCount;
        f1 -= Test0778.instanceCount;
        i7 = 160;
        i7 -= i7;
        Test0778.byFld <<= (byte) -7;
        iArr[(i7 >>> 1) % N][(i7 >>> 1) % N] *= (int)f1;
        i7 *= i7;
        f1 *= 160;
        i7 <<= -239;
        vMeth1_check_sum += i7 + l1 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l) {

        int i4=-5, i5=39242, i6=4, i8=4, i9=14;
        float f=-18.562F;
        float[] fArr =new float[N];
        double d=53.42223;

        FuzzerUtils.init(fArr, -11.377F);

        i4 = 1;
        while (++i4 < 233) {
            Test0778.instanceCount += i4;
            f = (float) (((-2214962245L - (i4 + i4)) - (Test0778.instanceCount * i4)) + (++d));
            for (i5 = 1; 7 > i5; i5++) {
                i6 += (int)(((i4 - l) - i5) + (-4.117880 + (i4 - -15902)));
                vMeth1(i4, Test0778.instanceCount);
                fArr[i4] = i6;
                i6 = i4;
                l = (long)f;
                l >>= l;
            }
            l *= l;
            switch ((i4 % 4) + 26) {
            case 26:
                for (i8 = i4; i8 < 7; i8++) {
                    i6 = i4;
                    try {
                        i6 = (i4 / -65);
                        i9 = (-22170 % i9);
                        i9 = (2045348005 / i4);
                    } catch (ArithmeticException a_e) {}
                }
                break;
            case 27:
                i6 -= i8;
            case 28:
                f *= f;
                break;
            case 29:
                i6 = i8;
                break;
            }
        }
        vMeth_check_sum += l + i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i5 + i6 + i8 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth() {

        int i2=-79;
        int i3=1;
        int i10=64331;
        int i11=27857;
        int i12=20368;
        int i13=-21703;
        int[] iArr1 =new int[N];
        float f2=1.487F;
        double d2=-1.84950;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -13);
        FuzzerUtils.init(lArr, -103L);

        for (i2 = 10; i2 < 323; ++i2) {
            vMeth(Test0778.instanceCount);
            i3 = i3;
            Test0778.instanceCount *= Test0778.instanceCount;
            for (i10 = 1; i10 < 5; i10 += 3) {
                for (i12 = 1; i12 < 5; ++i12) {
                    Test0778.instanceCount += i12;
                    i3 += (((i12 * f2) + i10) - i12);
                    d2 -= f2;
                    Test0778.instanceCount += (((i12 * i12) + Test0778.instanceCount) - Test0778.byFld);
                    switch (((i12 % 8) * 5) + 105) {
                    case 113:
                        Test0778.instanceCount += (long) f2;
                        i13 *= Test0778.iFld;
                        f2 += (((i12 * i12) + i12) - i2);
                        break;
                    case 119:
                        i11 <<= i10;
                        break;
                    case 132:
                        iArr1 = FuzzerUtils.int1array(N, (int)-13);
                        break;
                    case 120:
                        Test0778.instanceCount *= i3;
                        break;
                    case 145:
                        i13 = i10;
                        break;
                    case 107:
                        Test0778.instanceCount *= Test0778.instanceCount;
                        break;
                    case 124:
                        i3 = 48886;
                    case 128:
                        lArr = lArr;
                        break;
                    }
                }
            }
        }
        long meth_res = i2 + i3 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-176;
        int i1=12130;
        int i14=0;
        int i16=21804;
        int i17=65319;
        int i18=12;
        int i19=105;
        int i20=8;
        int[] iArr2 =new int[N];
        short s=-26141;
        float f3=0.118F, f4=22.576F;

        FuzzerUtils.init(iArr2, 7);

        for (i = 347; i > 8; i--) {
            int i15=1;
            if (Test0778.bFld) {
                Test0778.instanceCount >>>= ((3798783081510703278L - lMeth()) - i1);
                i14 -= i15;
                if (Test0778.bFld) break;
            } else if (Test0778.bFld) {
                for (i16 = 74; i16 > 1; --i16) {
                    i17 += Test0778.byFld;
                }
            } else {
                i18 = 1;
                while (++i18 < 74) {
                    i14 += i1;
                    Test0778.instanceCount += Test0778.instanceCount;
                    i15 = i17;
                    s += (short)(i18 * i16);
                    i15 = (int) Test0778.instanceCount;
                    i19 = 1;
                    do {
                        switch ((i19 % 3) + 33) {
                        case 33:
                            try {
                                i1 = (i17 / 41);
                                i15 = (144 % iArr2[i18]);
                                i15 = (i19 % -192);
                            } catch (ArithmeticException a_e) {}
                            i1 = (int)f3;
                            Test0778.sFld = (short) Test0778.instanceCount;
                            break;
                        case 34:
                            i15 += 25926;
                            break;
                        case 35:
                            Test0778.instanceCount = 2;
                            i1 = (int)1.789F;
                            lArrFld[i18 - 1] <<= i18;
                            break;
                        }
                    } while ((i19 += 3) < 1);
                }
                Test0778.sFld -= (short) i18;
                Test0778.iFld += Test0778.sFld;
                Test0778.sFld -= (short) Test0778.iFld;
            }
            for (f4 = 4; f4 < 74; f4 += 3) {
                i17 *= i16;
            }
            f3 *= Test0778.instanceCount;
            f3 -= i14;
        }
        Test0778.sFld = (short) i;

        FuzzerUtils.out.println("i i1 i14 = " + i + "," + i1 + "," + i14);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("s i19 f3 = " + s + "," + i19 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("f4 i20 iArr2 = " + Float.floatToIntBits(f4) + "," + i20 + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0778.instanceCount Test0778.byFld Test0778.iFld = " + Test0778.instanceCount + "," + Test0778.byFld +
                "," + Test0778.iFld);
        FuzzerUtils.out.println("Test0778.bFld Test0778.sFld lArrFld = " + (Test0778.bFld ? 1 : 0) + "," + Test0778.sFld + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0778 _instance = new Test0778();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
