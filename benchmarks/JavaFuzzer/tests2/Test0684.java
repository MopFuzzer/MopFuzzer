// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:44 2023
public class Test0684 {

    public static final int N = 400;

    public static long instanceCount=-1302162206L;
    public static float fFld=-62.603F;
    public short sFld=31947;
    public static int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0684.iArrFld, -57781);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i6=-10, i7=12, i8=-4, i9=14, i10=-71, i11=12, i12=-9, i13=-102, i14=32446;
        double d=59.30249;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 38261L);

        i6 = i6;
        for (i7 = 4; i7 < 326; ++i7) {
            lArr[i7] = lArr[i7];
            for (i9 = 1; i9 < 5; i9++) {
                Test0684.iArrFld[i7 + 1] = i8;
            }
            i10 *= i9;
            i10 += (int) Test0684.fFld;
            i10 -= (int)d;
            for (i11 = i7; i11 < 5; i11++) {
                for (i13 = 1; i13 < 1; i13 += 2) {
                    i6 -= i12;
                    Test0684.instanceCount |= i12;
                    d = Test0684.instanceCount;
                    i14 *= 152;
                    i14 += (i13 * i13);
                }
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1, int i2, long l) {

        float f=86.863F;
        float[] fArr =new float[N];
        int i3=0, i4=14, i5=195;
        double d1=-108.119903;

        FuzzerUtils.init(fArr, 45.241F);

        for (f = 7; f < 246; f++) {
            for (i4 = 1; i4 < 7; i4 += 3) {
                vMeth();
                i5 += (127 + (i4 * i4));
                Test0684.instanceCount += Test0684.instanceCount;
                d1 -= d1;
                if (true) {
                    i1 = i3;
                    i5 *= (int)l;
                    fArr[(int)(f - 1)] = i5;
                } else {
                    i1 = (int) Test0684.fFld;
                    i5 /= (int)(i5 | 1);
                    i1 += (int) Test0684.fFld;
                    i3 -= i5;
                }
                i1 += (i4 + i4);
            }
        }
        long meth_res = i1 + i2 + l + Float.floatToIntBits(f) + i3 + i4 + i5 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(int i, short s) {

        double d2=1.48904;
        int i15=10;

        Test0684.fFld /= (iMeth(-16750, i, -5799591961839687092L) | 1);
        d2 -= i15;
        vSmallMeth_check_sum += i + s + Double.doubleToLongBits(d2) + i15;
    }

    public void mainTest(String[] strArr1) {

        int i16=-6, i17=-11, i18=-62013, i19=-8, i20=-7404, i21=-52090;
        double d3=-27.68165;
        boolean b=false;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -700697456L);

        for (int smallinvoc=0; smallinvoc<609; smallinvoc++) vSmallMeth(i16, sFld);
        fArrFld[(i16 >>> 1) % N] = i16;
        for (i17 = 6; i17 < 204; i17++) {
            if (b) {
                switch (((i17 % 6) * 5) + 123) {
                case 150:
                    lArr1[i17 - 1] = (long)d3;
                    sFld += (short) (((i17 * sFld) + i18) - Test0684.instanceCount);
                    i19 = 1;
                    while (++i19 < 127) {
                        lArr1[i19 - 1] = Test0684.instanceCount;
                        lArr1[i17 + 1] += Test0684.instanceCount;
                        d3 *= Test0684.fFld;
                        i20 = 1;
                        do {
                            Test0684.fFld = i18;
                            i16 -= 62113;
                        } while (++i20 < 1);
                        sFld += (short)i19;
                        i21 = 1;
                        do {
                            Test0684.instanceCount -= i18;
                            Test0684.fFld = 32387;
                            switch (((i19 % 2) * 5) + 100) {
                            case 106:
                                i18 += (((i21 * i16) + Test0684.fFld) - i19);
                                Test0684.instanceCount += (i21 * i21);
                                Test0684.instanceCount = i16;
                                break;
                            case 102:
                                try {
                                    i16 = (i16 % -38747);
                                    i18 = (156 / i21);
                                    i16 = (-27835 / Test0684.iArrFld[i19 - 1]);
                                } catch (ArithmeticException a_e) {}
                                Test0684.iArrFld[i19 - 1] += i16;
                                break;
                            }
                            i18 += (i21 - Test0684.instanceCount);
                            i18 >>= i20;
                            Test0684.instanceCount = i17;
                            Test0684.iArrFld[i19] += (int) Test0684.fFld;
                            Test0684.instanceCount *= Test0684.instanceCount;
                            Test0684.iArrFld[i17 - 1] >>= 195;
                        } while (++i21 < 1);
                    }
                    break;
                case 125:
                    d3 = i16;
                    break;
                case 133:
                    i16 *= (int) Test0684.instanceCount;
                    break;
                case 126:
                    Test0684.instanceCount = 57;
                    break;
                case 147:
                    i16 += i18;
                    break;
                case 148:
                    Test0684.iArrFld[i17] >>= 5;
                    break;
                default:
                    Test0684.iArrFld[i17 - 1] = i16;
                }
            } else {
                i16 >>>= (int) Test0684.instanceCount;
            }
        }

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("d3 i19 i20 = " + Double.doubleToLongBits(d3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 b lArr1 = " + i21 + "," + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0684.instanceCount Test0684.fFld sFld = " + Test0684.instanceCount + "," +
                Float.floatToIntBits(Test0684.fFld) + "," + sFld);
        FuzzerUtils.out.println("Test0684.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test0684.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0684 _instance = new Test0684();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
