// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0185 {

    public static final int N = 400;

    public static long instanceCount=4L;
    public static volatile float fFld=-37.430F;
    public static long lFld=-3615254137L;
    public boolean bFld=true;
    public double dFld=-127.94752;
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0185.lArrFld, 1970934063L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i9, int i10) {

        double d=112.76388;
        double[] dArr =new double[N];
        int i11=39441;
        int i12=-2;
        int i13=-5;
        int i14=-159;
        int i15=-54099;
        int i16=-13;
        int i17=23925;
        int i18=5;
        int[] iArr2 =new int[N];
        short s=-30326;
        boolean b=true;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(dArr, 98.113374);
        FuzzerUtils.init(iArr2, -169);
        FuzzerUtils.init(lArr, 8646106007021093467L);

        d = i9;
        for (i11 = 2; i11 < 175; i11++) {
            dArr[i11 + 1] += Test0185.instanceCount;
            iArr2[i11 - 1] <<= i9;
            i12 = (int) Test0185.instanceCount;
        }
        lArr[(i9 >>> 1) % N][(i11 >>> 1) % N] <<= s;
        for (i13 = 6; i13 < 335; ++i13) {
            i14 >>>= (int)16314L;
            i10 += i13;
            for (i15 = i13; i15 < 5; i15 += 2) {
                for (i17 = 1; i17 < 1; i17 += 2) {
                    i10 += (int) Test0185.instanceCount;
                    i14 += (int) Test0185.instanceCount;
                    if (b) continue;
                    Test0185.instanceCount = i9;
                }
            }
        }
        long meth_res = i9 + i10 + Double.doubleToLongBits(d) + i11 + i12 + s + i13 + i14 + i15 + i16 + i17 + i18 + (b
            ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i3, float f1, long l2) {

        int i4=0;
        int i5=-1;
        int i6=43;
        int i7=5;
        int i8=168;
        int i19=7;
        int i20=3;
        int i21=252;
        int i22=0;
        int[] iArr1 =new int[N];
        byte by=76;
        double d1=66.7916;
        long l3=-3664406681L;

        FuzzerUtils.init(iArr1, 5);

        for (i4 = 310; i4 > 13; --i4) {
            for (i6 = 1; i6 < 6; i6 += 2) {
                i7 = (int)(-((i6 - i7) + (i3 = (int)f1)));
                i5 <<= (iArr1[i4] - by);
                i7 = ((i7--) - (i5--));
                l2 -= (long)((Math.abs(f1) * (i6 + i8)) + fMeth(i7, i6));
            }
            f1 += (((i4 * i7) + l2) - i4);
            switch (((i4 >>> 1) % 9) + 115) {
            case 115:
                i7 *= (int)l2;
                i8 -= (int)d1;
                for (i19 = i4; i19 < 6; i19++) {
                    iArr1 = iArr1;
                    for (i21 = i4; i21 < 1; ++i21) {
                        i20 -= i6;
                        iArr1[i21] *= 6;
                    }
                }
                break;
            case 116:
                i5 = i4;
            case 117:
                i22 = (int)l2;
                break;
            case 118:
                i20 = (int)l2;
                break;
            case 119:
                i20 += (57 + (i4 * i4));
                break;
            case 120:
                iArr1[i4] = (int) Test0185.instanceCount;
            case 121:
                d1 *= Test0185.instanceCount;
                break;
            case 122:
                l3 = 0;
            case 123:
                Test0185.instanceCount = i8;
                break;
            }
        }
        long meth_res = i3 + Float.floatToIntBits(f1) + l2 + i4 + i5 + i6 + i7 + by + i8 + Double.doubleToLongBits(d1)
            + i19 + i20 + i21 + i22 + l3 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(long l, int i2, long l1) {


        i2 = (i2++);
        iMeth(219, Test0185.fFld, l);
        vSmallMeth_check_sum += l + i2 + l1;
    }

    public void mainTest(String[] strArr1) {

        int i=5498;
        int i1=35330;
        int i23=-12;
        int i24=252;
        int i25=-1;
        int i26=-7;
        int i27=-7;
        int i28=237;
        int i29=120;
        int i30=-8;
        int i31=-178;
        int[] iArr =new
                    int[N];
        float f=61.898F;
        float[] fArr =new float[N];
        double d2=14.85503;
        byte by1=55;

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(fArr, 89.39F);

        Test0185.instanceCount -= (++iArr[(i >>> 1) % N]);
        for (f = 13; 228 > f; f += 2) {
            i1 += (((i - i1) * 7) * i);
        }
        for (int smallinvoc = 0; smallinvoc < 724; smallinvoc++)
            vSmallMeth(Test0185.instanceCount, i1, Test0185.instanceCount);
        Test0185.instanceCount *= 101;
        for (i23 = 148; i23 > 1; i23 -= 3) {
            iArr[i23] = (int) Test0185.lFld;
            i24 = i1;
            for (i25 = 1; i25 < i23; ++i25) {
                if (bFld) continue;
                dFld -= -240;
                Test0185.lFld += (long) (-5.186F + (i25 * i25));
                Test0185.lFld = i;
                d2 = 1;
                do {
                    i26 = (int) Test0185.instanceCount;
                    Test0185.lArrFld[i23] = -8748;
                    Test0185.instanceCount = i26;
                } while (++d2 < 2);
            }
            i26 = (int)d2;
            Test0185.instanceCount >>= 250;
        }
        fArr[(-28226 >>> 1) % N] += i24;
        for (i27 = 245; i27 > 9; i27--) {
            for (i29 = i27; i29 < 106; ++i29) {
                by1 += (byte)(i29 | i24);
                if (bFld) continue;
                switch ((i29 % 10) + 75) {
                case 75:
                case 76:
                case 77:
                    i31 = 1;
                    while (++i31 < 1) {
                        iArr[i27] = (int)dFld;
                        i24 += (-22177 + (i31 * i31));
                        i -= i24;
                        Test0185.lFld = i30;
                    }
                    break;
                case 78:
                    i28 += i31;
                    break;
                case 79:
                    Test0185.lFld = i1;
                    break;
                case 80:
                    try {
                        i28 = (-154 % i23);
                        i = (-112 / i1);
                        i1 = (i26 % i);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 81:
                    i = i26;
                    break;
                case 82:
                    i30 = i27;
                    break;
                case 83:
                    Test0185.lFld = 64591;
                    break;
                case 84:
                    i26 = (int) Test0185.instanceCount;
                default:
                    Test0185.lFld *= -110;
                }
            }
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 d2 i27 = " + i26 + "," + Double.doubleToLongBits(d2) + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("by1 i31 iArr = " + by1 + "," + i31 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0185.instanceCount Test0185.fFld Test0185.lFld = " + Test0185.instanceCount + "," +
                Float.floatToIntBits(Test0185.fFld) + "," + Test0185.lFld);
        FuzzerUtils.out.println("bFld dFld Test0185.lArrFld = " + (bFld ? 1 : 0) + "," + Double.doubleToLongBits(dFld) +
                "," + FuzzerUtils.checkSum(Test0185.lArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0185 _instance = new Test0185();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  fMeth ->  fMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
