// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0194 {

    public static final int N = 400;

    public static long instanceCount=-596584048L;
    public static short sFld=3693;
    public static boolean bFld=true;
    public static float fFld=99.937F;
    public int[] iArrFld =new int[N];
    public static volatile byte[][] byArrFld =new byte[N][N];

    static {
        FuzzerUtils.init(Test0194.byArrFld, (byte) 112);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6, int i7, int i8) {

        int i9=-171;
        int i10=42277;
        int i11=12;
        int i12=39961;
        int[] iArr =new int[N];
        int[][] iArr1 =new int[N][N];
        float f=-100.150F;
        double d1=0.9591;
        boolean b=false;

        FuzzerUtils.init(iArr, 136);
        FuzzerUtils.init(iArr1, -14499);

        i9 = 1;
        do {
            iArr[i9] += (int)f;
            i7 -= (int)d1;
            Test0194.byArrFld[(i7 >>> 1) % N][i9 - 1] = (byte) i6;
            iArr1 = iArr1;
        } while (++i9 < 371);
        for (i10 = 265; i10 > 11; i10 -= 2) {
            iArr[i10] = 9;
        }
        iArr1[(i10 >>> 1) % N][(i11 >>> 1) % N] *= (int)f;
        i7 *= i6;
        i8 *= i9;
        i8 = i10;
        i12 = 263;
        while (--i12 > 0) {
            if (b) {
                i8 -= i11;
                if (i12 != 0) {
                }
            } else if (b) {
                iArr[i12] *= Test0194.sFld;
            } else if (b) {
                Test0194.instanceCount += i12;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i10 + i11 + i12 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i3, int i4, int i5) {

        int i13=58363, i14=-9, i15=14, i16=110;
        byte by1=-22;
        float f1=0.782F;

        if (Test0194.bFld) {
            Test0194.instanceCount *= (i5--);
            iMeth(i5, 2, i4);
            for (i13 = 232; i13 > 1; i13 -= 2) {
                for (i15 = 1; i15 < 14; i15++) {
                    i14 *= i13;
                    i5 += (((i15 * Test0194.instanceCount) + Test0194.instanceCount) - Test0194.instanceCount);
                    i4 /= (int)(i3 | 1);
                    by1 = (byte)i4;
                }
                if (Test0194.bFld) {
                    f1 -= i3;
                    Test0194.instanceCount = -13;
                    Test0194.sFld = (short) Test0194.instanceCount;
                    Test0194.bFld = Test0194.bFld;
                }
                i3 += (i13 + i4);
            }
        } else {
            i5 = 217;
        }
        vMeth1_check_sum += i3 + i4 + i5 + i13 + i14 + i15 + i16 + by1 + Float.floatToIntBits(f1);
    }

    public static void vMeth() {

        int i17=10;
        int i18=-31311;
        int i19=88;
        int i20=211;
        int i21=14;
        int i22=5713;
        int i23=-60262;
        int i24=-165;
        int i25=-22087;
        int[] iArr2 =new int[N];
        double d2=-53.106505;
        float f2=0.111F;
        byte by2=-118;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr2, -63678);
        FuzzerUtils.init(lArr, 1918329652L);

        vMeth1(i17, 7, i17);
        d2 += i17;
        for (i18 = 10; i18 < 342; ++i18) {
            for (i20 = 1; 5 > i20; ++i20) {
                if (Test0194.bFld) {
                    switch (((7 >>> 1) % 2) + 43) {
                    case 43:
                        for (i22 = i18; i22 < 2; ++i22) {
                            i21 += i22;
                            iArr2[i20 - 1] = i18;
                        }
                        i21 += (i20 | i17);
                        for (f2 = 1; f2 < 2; f2++) {
                            by2 -= (byte)-71;
                            Test0194.instanceCount += (long) (((f2 * i17) + Test0194.instanceCount) - i17);
                            i25 -= i21;
                            Test0194.instanceCount += (long) (((f2 * Test0194.instanceCount) + Test0194.instanceCount) - i21);
                        }
                        break;
                    case 44:
                        Test0194.fFld -= i19;
                        break;
                    }
                } else {
                    lArr[i18] += i18;
                }
            }
        }
        vMeth_check_sum += i17 + Double.doubleToLongBits(d2) + i18 + i19 + i20 + i21 + i22 + i23 +
            Float.floatToIntBits(f2) + i24 + by2 + i25 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        byte by=33;
        int i=-49708, i1=-219, i2=60493, i26=-18079, i27=204, i28=48795, i29=10, i30=-29383;

        Test0194.instanceCount <<= (--by);
        i = 378;
        while (--i > 0) {
            double d=1.107230;
            d += (i + (iArrFld[(i >>> 1) % N] % (Math.min(i, i) | 1)));
            for (i1 = 2; i1 < 67; ++i1) {
                vMeth();
                Test0194.instanceCount += (((i1 * i1) + Test0194.sFld) - i2);
                Test0194.fFld *= i1;
                if (Test0194.bFld) break;
                iArrFld[i] *= i;
                iArrFld[i1 - 1] = i;
                Test0194.instanceCount += (i1 * i1);
                for (i26 = 1; i26 < 2; ++i26) {
                    iArrFld = iArrFld;
                    i2 = (int)d;
                }
                i27 *= (int) Test0194.fFld;
                for (i28 = 1; 2 > i28; ++i28) {
                    switch ((i28 % 4) + 84) {
                    case 84:
                    case 85:
                        i29 += i;
                        i30 = -39759;
                        break;
                    case 86:
                        i29 *= 237;
                    case 87:
                        i30 += (i28 | (long) Test0194.fFld);
                        if (Test0194.bFld) {
                            if (Test0194.bFld) break;
                            iArrFld[i28 + 1] -= (int)d;
                            Test0194.instanceCount = i;
                            i29 += i1;
                        } else if (Test0194.bFld) {
                            Test0194.instanceCount >>= i28;
                            i27 -= (int) Test0194.fFld;
                            i30 = i27;
                        } else if (Test0194.bFld) {
                            Test0194.instanceCount *= i28;
                        }
                        break;
                    default:
                        i29 += (((i28 * Test0194.instanceCount) + i26) - Test0194.fFld);
                    }
                }
            }
        }

        FuzzerUtils.out.println("by i i1 = " + by + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i26 i27 = " + i2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);

        FuzzerUtils.out.println("Test0194.instanceCount Test0194.sFld Test0194.bFld = " + Test0194.instanceCount + "," + Test0194.sFld +
                "," + (Test0194.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0194.fFld iArrFld Test0194.byArrFld = " + Float.floatToIntBits(Test0194.fFld) + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test0194.byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0194 _instance = new Test0194();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
