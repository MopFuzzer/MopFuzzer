// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0500 {

    public static final int N = 400;

    public static long instanceCount=-3691337143L;
    public short sFld=-5266;
    public static double dFld=41.128242;
    public static short sFld1=12487;
    public static int iFld=6616;
    public byte byFld=117;
    public long[] lArrFld =new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b) {

        int i8=-14928;
        int i9=-14;
        int i10=192;
        int i11=-130;
        int i12=-48437;
        int i13=20843;
        int i14=44396;
        int[] iArr1 =new int[N];
        float f1=-21.754F;

        FuzzerUtils.init(iArr1, -2);

        Test0500.dFld -= Test0500.sFld1;
        i8 += i8;
        for (i9 = 354; i9 > 20; i9--) {
            Test0500.dFld -= -60L;
            iArr1[i9] = i10;
            if (b) continue;
            for (i11 = 1; i11 < 5; i11++) {
                i13 = 1;
                while (++i13 < 2) {
                    Test0500.instanceCount -= -1;
                    i8 += i13;
                    Test0500.instanceCount -= Test0500.instanceCount;
                    i12 += (((i13 * i12) + i14) - f1);
                    iArr1[i11] -= (int)79.54092;
                    Test0500.instanceCount -= i14;
                    Test0500.instanceCount = Test0500.sFld1;
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i4, int i5, int i6) {

        int i7=13;
        int i15=178;
        int i16=-30;
        int i17=3676;
        int[] iArr2 =new int[N];
        boolean b1=false;
        float f2=118.397F;

        FuzzerUtils.init(iArr2, -107);

        i7 = 1;
        while (++i7 < 143) {
            vMeth1(b1);
            iArr2 = iArr2;
            for (f2 = 1; f2 < 11; f2++) {
                i4 *= i7;
                iArr2 = iArr2;
                i5 = (int) Test0500.dFld;
                for (i16 = 1; i16 < 2; ++i16) {
                    Test0500.instanceCount += (((i16 * Test0500.instanceCount) + i16) - i5);
                    i6 += i16;
                    i15 += -6;
                    i4 = (int) Test0500.instanceCount;
                    Test0500.instanceCount += (long) Test0500.dFld;
                    i15 = i6;
                    if (true) break;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth(int i, int i1) {

        float f=36.164F;
        int i2=-219;
        int i3=3;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 149);

        for (f = 5; f < 201; f++) {
            i1 += (int)f;
            i3 = 1;
            do {
                i2 = (((--i2) * (i - i3)) - (48020 - i1));
                iArr[(int)(f - 1)][(int)(f + 1)] = sFld;
                i1 = (int) (((++Test0500.instanceCount) - Test0500.dFld) + ((i2 = i3) - i));
                vMeth(-8, i1, 142);
                lArrFld[(int)(f + 1)] >>= i3;
                i >>= i2;
                Test0500.instanceCount = (long) f;
                iArr[(int)(f)][i3 - 1] &= -47346;
            } while (++i3 < 8);
            switch ((int)((f % 2) + 80)) {
            case 80:
                i2 += (int)(-1.517F + (f * f));
                iArr[(int) (f)][(int) (f + 1)] -= (int) Test0500.instanceCount;
                break;
            case 81:
                i = 23402;
            default:
                if (i3 != 0) {
                }
            }
        }
        long meth_res = i + i1 + Float.floatToIntBits(f) + i2 + i3 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=118.73319, d1=2.116972;
        int i18=47480;
        int i19=26370;
        int i20=-274;
        int i21=10172;
        int i22=182;
        int i23=1;
        int i24=53351;
        int[][] iArr3 =new int[N][N];
        float f3=0.457F;
        long l=-2638L;
        boolean b2=false;

        FuzzerUtils.init(iArr3, -44299);

        d = iMeth(Test0500.iFld, Test0500.iFld);
        for (d1 = 8; 264 > d1; d1 += 2) {
            for (i19 = 10; i19 < 196; ++i19) {
                f3 = f3;
                byFld += (byte)i19;
                switch ((((i20 >>> 1) % 8) * 5) + 42) {
                case 66:
                    Test0500.iFld += (((i19 * Test0500.instanceCount) + Test0500.iFld) - i21);
                    break;
                case 59:
                    i18 -= Test0500.iFld;
                    l = 1;
                    do {
                        Test0500.sFld1 = (short) i19;
                        i18 *= -64;
                        Test0500.iFld += (int) Test0500.instanceCount;
                        iArr3[i19 - 1][(int)(d1 + 1)] -= -41;
                    } while (++l < 2);
                    break;
                case 51:
                    i22 = 1;
                    do {
                        i20 += -3;
                        i18 = i21;
                        Test0500.iFld ^= Test0500.iFld;
                        f3 -= i21;
                    } while (++i22 < 2);
                    break;
                case 62:
                    Test0500.instanceCount += (long) (1.568F + (i19 * i19));
                    switch ((i19 % 1) + 95) {
                    case 95:
                        i21 += (-13 + (i19 * i19));
                        for (i23 = 1; i23 < 2; i23++) {
                            switch ((int)(((d1 % 1) * 5) + 95)) {
                            case 98:
                                iArr3[(int) (d1)][i23] = (int) Test0500.instanceCount;
                                Test0500.instanceCount <<= Test0500.iFld;
                                Test0500.instanceCount -= i19;
                                break;
                            default:
                                f3 -= (float)48.25559;
                                Test0500.instanceCount += (((i23 * l) + i19) - i24);
                                f3 -= i19;
                                Test0500.instanceCount -= Test0500.iFld;
                            }
                        }
                    default:
                        iArr3[(int)(d1)][(int)(d1 + 1)] -= 188;
                    }
                    break;
                case 76:
                    Test0500.instanceCount -= Test0500.instanceCount;
                    break;
                case 61:
                    i18 >>>= i18;
                    break;
                case 57:
                    i21 += (i19 ^ l);
                    break;
                case 71:
                    if (b2) continue;
                }
            }
        }

        FuzzerUtils.out.println("d d1 i18 = " + Double.doubleToLongBits(d) + "," + Double.doubleToLongBits(d1) + "," +
            i18);
        FuzzerUtils.out.println("i19 i20 f3 = " + i19 + "," + i20 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i21 l i22 = " + i21 + "," + l + "," + i22);
        FuzzerUtils.out.println("i23 i24 b2 = " + i23 + "," + i24 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0500.instanceCount sFld Test0500.dFld = " + Test0500.instanceCount + "," + sFld + "," +
                Double.doubleToLongBits(Test0500.dFld));
        FuzzerUtils.out.println("Test0500.sFld1 Test0500.iFld byFld = " + Test0500.sFld1 + "," + Test0500.iFld + "," + byFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0500 _instance = new Test0500();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
