// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0047 {

    public static final int N = 400;

    public static long instanceCount=-104L;
    public static short sFld=-26998;
    public static byte byFld=-119;
    public double dFld=2.68637;
    public static boolean bFld=true;
    public static float[] fArrFld =new float[N];
    public long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0047.fArrFld, -34.64F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=9, i4=62676, i5=197, i6=196, i7=-9;
        double d=73.54712;
        boolean b=true;

        for (i3 = 5; i3 < 165; ++i3) {
            float f=13.916F;
            f = f;
            i4 += i3;
            Test0047.instanceCount = i4;
            i5 = 1;
            while (++i5 < 10) {
                i4 = i4;
                for (i6 = 1; i6 < 1; i6++) {
                    i4 = i4;
                    i7 = i6;
                    d *= i5;
                    Test0047.fArrFld[i3 - 1] *= i3;
                    Test0047.instanceCount -= 11;
                    if (b) break;
                    i4 += i6;
                    i7 -= (int) Test0047.instanceCount;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + (b ? 1 : 0);
    }

    public static void vMeth1(int i2, long l, long l1) {

        int i8=46162;
        int i9=179;
        int i10=-26;
        int i11=-6;
        int i12=-4;
        int i13=10;
        int[] iArr =new int[N];
        float f1=1.72F;
        double d1=-1.7971;
        boolean b1=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -3919806287L);
        FuzzerUtils.init(iArr, 138);

        vMeth2();
        for (i8 = 5; i8 < 253; i8++) {
            for (i10 = i8; i10 < 7; i10++) {
                i11 += (i10 * i10);
                for (i12 = i8; i12 < 1; ++i12) {
                    switch ((i10 % 6) + 91) {
                    case 91:
                        Test0047.sFld -= (short) f1;
                        i11 += i11;
                        break;
                    case 92:
                    case 93:
                        i13 *= i2;
                        lArr[i10 - 1] = (long)d1;
                        i13 <<= i2;
                        l1 += i12;
                        break;
                    case 94:
                        if (b1) continue;
                        break;
                    case 95:
                        iArr[i8] = (int)l1;
                        i2 = -37609;
                    case 96:
                        try {
                            iArr[i8] = (-884471297 / i2);
                            i2 = (i11 / -24713);
                            i2 = (i12 % 57633);
                        } catch (ArithmeticException a_e) {}
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + l + l1 + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d1) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i) {

        int i1=173;
        int i14=7;
        int i15=-49;
        int i16=72;
        int i17=10;
        int i18=25044;
        int i19=32;
        int[][] iArr1 =new int[N][N];
        long l2=4884559842499574621L;

        FuzzerUtils.init(iArr1, 241);

        i1 = 1;
        do {
            float f2=0.788F;
            vMeth1(57528, l2, Test0047.instanceCount);
            i = 0;
            Test0047.instanceCount *= (long) f2;
            for (i14 = i1; 5 > i14; i14 += 2) {
                Test0047.byFld -= (byte) i1;
            }
            Test0047.byFld += (byte) (i1 | Test0047.instanceCount);
            try {
                i15 = (i14 / iArr1[i1 - 1][i1 + 1]);
                i = (i14 % -1343946776);
                i = (i % i15);
            } catch (ArithmeticException a_e) {}
            i += (-95 + (i1 * i1));
            for (i16 = 1; 5 > i16; ++i16) {
                i15 += i16;
                for (i18 = 2; 1 < i18; i18 -= 3) {
                    l2 -= i1;
                    Test0047.byFld *= (byte) i17;
                    Test0047.instanceCount *= (long) 84.887F;
                }
            }
        } while (++i1 < 309);
        vMeth_check_sum += i + i1 + l2 + i14 + i15 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i20=60333, i21=5, i22=-155, i23=9, i24=-59031, i25=-31074, i26=-6, i27=12, i28=-25933, i29=37102, i30=5;
        float f3=-47.395F;

        vMeth(i20);
        for (i21 = 10; i21 < 309; i21++) {
            i20 += i21;
            for (i23 = 1; i23 < 84; ++i23) {
                i20 *= (int)dFld;
                for (i25 = i21; i25 < 2; ++i25) {
                    i26 = i22;
                    i24 = (int) Test0047.instanceCount;
                    i24 = i24;
                }
                lArrFld = lArrFld;
                for (i27 = 1; 2 > i27; i27++) {
                    i26 <<= Test0047.sFld;
                    Test0047.byFld = (byte) i20;
                    i26 -= Test0047.sFld;
                    dFld += i24;
                    i26 *= i20;
                    Test0047.bFld = Test0047.bFld;
                    Test0047.instanceCount += i27;
                }
                i28 = i27;
                switch (((i23 >>> 1) % 1) + 4) {
                case 4:
                    for (i29 = 2; i29 > 1; --i29) {
                        Test0047.instanceCount *= 111;
                        i24 >>= 6239;
                        f3 -= i24;
                        Test0047.bFld = true;
                        i30 = 6;
                        i30 += i29;
                        Test0047.byFld += (byte) (i29 * i22);
                        i22 -= i23;
                        Test0047.instanceCount += (i29 - Test0047.instanceCount);
                    }
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 f3 = " + i29 + "," + i30 + "," + Float.floatToIntBits(f3));

        FuzzerUtils.out.println("Test0047.instanceCount Test0047.sFld Test0047.byFld = " + Test0047.instanceCount + "," + Test0047.sFld +
                "," + Test0047.byFld);
        FuzzerUtils.out.println("dFld Test0047.bFld Test0047.fArrFld = " + Double.doubleToLongBits(dFld) + "," + (Test0047.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0047.fArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0047 _instance = new Test0047();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
