// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0493 {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static short sFld=-8179;
    public static int[][] iArrFld =new int[N][N];
    public static double[] dArrFld =new double[N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0493.iArrFld, 224);
        FuzzerUtils.init(Test0493.dArrFld, -1.14328);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i5) {

        int i6=-245;
        int i7=63;
        int i8=-49863;
        int i9=210;
        int i10=142;
        int[] iArr =new int[N];
        double d=0.7863;

        FuzzerUtils.init(iArr, 37126);

        for (i6 = 317; i6 > 5; --i6) {
            i7 = i7;
            i7 *= Test0493.sFld;
            i7 = i5;
            i7 += i7;
            for (i8 = 1; 5 > i8; i8++) {
                i5 *= -14;
            }
            iArr[i6 + 1] -= -3684;
            i9 += i7;
            iArr[i6 - 1] += (int)6704260423962798141L;
            i10 = 1;
            while ((i10 += 2) < 5) {
                Test0493.instanceCount %= ((long) (d) | 1);
                try {
                    i9 = (i9 % iArr[i10 - 1]);
                    i9 = (i6 / i9);
                    i9 = (i10 % i9);
                } catch (ArithmeticException a_e) {}
                Test0493.instanceCount = i7;
            }
        }
        i7 += i8;
        vMeth2_check_sum += l1 + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i) {

        int i1=-63643, i2=-160, i3=8, i4=23113, i11=-5, i12=-50529, i13=-217, i14=-8;
        float f2=-116.765F;
        boolean b=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 117L);

        for (i1 = 11; i1 < 354; i1++) {
            switch ((i1 % 6) + 110) {
            case 110:
                switch ((i1 % 3) + 19) {
                case 19:
                    i2 += (((i1 * i2) + f2) - i1);
                    break;
                case 20:
                    Test0493.instanceCount += (i1 * i1);
                    i2 <<= (int) ((i -= (int) (Test0493.instanceCount - Test0493.instanceCount)) + ((++lArr[i1]) - (i++)));
                    for (i3 = 1; i3 < 5; ++i3) {
                        vMeth2(Test0493.instanceCount, i);
                    }
                    break;
                case 21:
                    Test0493.iArrFld[i1 - 1][i1 - 1] *= i;
                    Test0493.instanceCount <<= i1;
                    for (i11 = 5; 1 < i11; i11 -= 3) {
                        for (i13 = 1; i13 < 5; i13++) {
                            i4 *= i11;
                            Test0493.instanceCount >>= -5;
                            b = false;
                        }
                    }
                    break;
                default:
                    f2 -= i14;
                }
                break;
            case 111:
                Test0493.iArrFld[i1][i1] = i;
                break;
            case 112:
                Test0493.instanceCount >>= i12;
                break;
            case 113:
                i4 += (int)f2;
            case 114:
                i = 0;
            case 115:
                Test0493.iArrFld[i1][i1] &= (int) Test0493.instanceCount;
                break;
            default:
                Test0493.instanceCount = Test0493.instanceCount;
            }
        }
        vMeth1_check_sum += i + i1 + i2 + Float.floatToIntBits(f2) + i3 + i4 + i11 + i12 + i13 + i14 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f, float f1, long l) {


        vMeth1(0);
        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + l;
    }

    public void mainTest(String[] strArr1) {

        float f3=80.692F;
        int i15=-3, i16=9, i17=3, i18=-20091, i19=12, i20=6, i21=10, i22=4, i23=41, i24=51503;
        double d1=-2.18090;
        boolean b1=false;
        short[] sArr =new short[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(sArr, (short)20174);
        FuzzerUtils.init(byArr, (byte)-41);

        vMeth(f3, f3, Test0493.instanceCount);
        i15 -= (int) Test0493.instanceCount;
        i15 >>= -252;
        i15 -= 47786;
        f3 = i15;
        f3 *= Test0493.instanceCount;
        Test0493.dArrFld[(i15 >>> 1) % N] += Test0493.instanceCount;
        Test0493.instanceCount ^= -4;
        for (i16 = 11; i16 < 210; i16++) {
            for (i18 = 126; 4 < i18; i18--) {
                Test0493.instanceCount += (i18 ^ Test0493.instanceCount);
                for (i20 = 1; i20 < 2; i20++) {
                    i21 = (int) Test0493.instanceCount;
                    i19 += i20;
                    sArr[i16] *= (short)i20;
                    try {
                        i17 = (i16 % i18);
                        i15 = (i19 % 32);
                        i15 = (1635452406 % i16);
                    } catch (ArithmeticException a_e) {}
                    d1 += Test0493.instanceCount;
                }
                switch ((i18 % 9) + 53) {
                case 53:
                    i15 = (int)40.68586;
                    i22 = 1;
                    while (++i22 < 2) {
                        Test0493.instanceCount = i19;
                        i19 = (int) Test0493.instanceCount;
                        i19 = i17;
                    }
                    i15 += (((i18 * i16) + i17) - Test0493.instanceCount);
                case 54:
                    Test0493.sFld += (short) (53712L + (i18 * i18));
                    for (i23 = i16; 2 > i23; i23++) {
                        switch ((i23 % 2) + 124) {
                        case 124:
                            Test0493.sFld = (short) i15;
                            i19 += (int) Test0493.instanceCount;
                            d1 += Test0493.instanceCount;
                            break;
                        case 125:
                        default:
                            Test0493.instanceCount -= Test0493.sFld;
                        }
                    }
                case 55:
                    fArrFld[i16 - 1] %= ((long)(f3) | 1);
                    break;
                case 56:
                    i24 += i18;
                    break;
                case 57:
                    b1 = false;
                case 58:
                    i24 >>= i19;
                    break;
                case 59:
                    i19 *= i23;
                    break;
                case 60:
                    byArr[i16 - 1] = (byte)i18;
                case 61:
                    Test0493.instanceCount = Test0493.instanceCount;
                    break;
                default:
                    d1 += i17;
                }
            }
        }

        FuzzerUtils.out.println("f3 i15 i16 = " + Float.floatToIntBits(f3) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 d1 = " + i20 + "," + i21 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("b1 sArr byArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(sArr) + "," +
            FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0493.instanceCount Test0493.sFld Test0493.iArrFld = " + Test0493.instanceCount + "," + Test0493.sFld +
                "," + FuzzerUtils.checkSum(Test0493.iArrFld));
        FuzzerUtils.out.println("Test0493.dArrFld fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0493.dArrFld))
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0493 _instance = new Test0493();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
