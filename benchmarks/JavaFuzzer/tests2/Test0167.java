// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0167 {

    public static final int N = 400;

    public static long instanceCount=-8848447518727825709L;
    public float fFld=127.735F;
    public static double dFld=1.40488;
    public static boolean bFld=true;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0167.lArrFld, 27L);
        FuzzerUtils.init(Test0167.iArrFld, 129);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b2) {

        int i11=-104, i12=12, i13=-19267, i14=-7, i15=-126;
        byte by=91;
        byte[] byArr =new byte[N];
        float f2=-125.69F;
        double d1=-1.20123;

        FuzzerUtils.init(byArr, (byte)66);

        for (i11 = 11; 184 > i11; i11 += 3) {
            i12 = i12;
            byArr[i11 + 1] = (byte)i12;
            Test0167.iArrFld[i11 - 1] = i12;
            Test0167.dFld *= -28332;
        }
        i12 <<= (int)55784L;
        i12 -= by;
        f2 = (float) Test0167.dFld;
        Test0167.instanceCount += i11;
        i13 = 269;
        while (--i13 > 0) {
            i12 += (i13 - f2);
        }
        for (d1 = 12; d1 < 292; d1++) {
            Test0167.instanceCount = Test0167.instanceCount;
            try {
                i14 = (Test0167.iArrFld[(int) (d1)] / Test0167.iArrFld[(int) (d1 + 1)]);
                i12 = (i14 / -206);
                i14 = (i12 / i14);
            } catch (ArithmeticException a_e) {}
            i15 -= 4296;
        }
        vMeth1_check_sum += (b2 ? 1 : 0) + i11 + i12 + by + Float.floatToIntBits(f2) + i13 +
            Double.doubleToLongBits(d1) + i14 + i15 + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i9, int i10, float f1) {

        boolean b3=false;
        int i16=-245;
        int i17=1;
        int i18=11;
        int i19=-164;
        int i20=-8;
        int i21=87;
        int i22=-40001;
        int[] iArr =new int[N];
        byte[] byArr1 =new byte[N];

        FuzzerUtils.init(byArr1, (byte)-5);
        FuzzerUtils.init(iArr, 55676);

        i10 = (--i10);
        f1 += Math.min((int) (Test0167.instanceCount + -155), i9);
        vMeth1(b3);
        i10 >>= i9;
        i16 = 1;
        while (++i16 < 231) {
            byArr1[i16] >>= (byte)i16;
            try {
                i10 = (i16 % i9);
                i9 = (8034 / i16);
                i9 = (-229 % i10);
            } catch (ArithmeticException a_e) {}
        }
        byArr1[(i16 >>> 1) % N] = (byte)i10;
        switch ((((i16 >>> 1) % 3) * 5) + 15) {
        case 23:
            iArr[(i16 >>> 1) % N] &= i9;
            for (i17 = 383; i17 > 15; i17 -= 2) {
                for (i19 = 1; i19 < 9; ++i19) {
                    for (i21 = 1; i21 < 2; ++i21) {
                        i20 += i16;
                        Test0167.instanceCount *= i17;
                    }
                }
            }
            break;
        case 21:
            b3 = b3;
        case 19:
            Test0167.dFld = 7158025940238039077L;
        default:
            i22 <<= i20;
        }
        vMeth_check_sum += i9 + i10 + Float.floatToIntBits(f1) + (b3 ? 1 : 0) + i16 + i17 + i18 + i19 + i20 + i21 + i22
            + FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(boolean b1, long l) {

        int i8=9896, i23=-168, i24=49942;
        float f=-17.398F;
        byte by1=-31;
        double[] dArr1 =new double[N];

        FuzzerUtils.init(dArr1, -89.117257);

        i8 <<= Math.min((int) ((-30L + (f - l)) - Math.max(-35782L, l)), Test0167.iArrFld[(i8 >>> 1) % N]++);
        vMeth(i8, i8, f);
        Test0167.iArrFld = FuzzerUtils.int1array(N, (int) -66);
        i8 *= (int)l;
        for (i23 = 1; i23 < 142; i23 += 3) {
            i24 += (-38338 + (i23 * i23));
            i8 >>>= (int) Test0167.instanceCount;
            dArr1 = dArr1;
            switch ((((i8 >>> 1) % 2) * 5) + 22) {
            case 25:
                i24 *= (int)-2491917325997748173L;
                by1 = by1;
                Test0167.instanceCount -= -47697L;
            case 31:
                f -= i8;
                l = i8;
                Test0167.lArrFld = Test0167.lArrFld;
                break;
            }
        }
        long meth_res = (b1 ? 1 : 0) + l + i8 + Float.floatToIntBits(f) + i23 + i24 + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public long lMeth(int i1, int i2, boolean b) {


        Test0167.lArrFld[(201 >>> 1) % N] -= 29;
        long meth_res = i1 + i2 + (b ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i4=8, i5=-22598, i6=-2, i7=-10, i25=-17607, i26=-156, i27=-18192, i28=144;
        double d=1.72442;
        double[] dArr =new double[N];
        short s=-27355;
        byte by2=-31;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(dArr, 0.94806);
        FuzzerUtils.init(bArr, true);

        i = (int) ((-fFld) + (Test0167.instanceCount++));
        lMeth(Test0167.iArrFld[(i >>> 1) % N], -((i - i) - (i - i)), !((i + d) != (d * d)));
        i |= (i - (i++));
        dArr[(i >>> 1) % N] = ((d + (--Test0167.lArrFld[(i >>> 1) % N])) * (s--));
        for (int i3 : Test0167.iArrFld) {
            for (i4 = 3; i4 < 63; ++i4) {
                d = (i5 = (--i3));
                Test0167.instanceCount -= Math.abs((int) ((i4 - d) + (i3 = i)));
                if (((Test0167.instanceCount = (long) (-d)) >> (long) (Math.max(1, i5) + (i5 -= (int) d))) != -100)
                    break;
            }
            for (i6 = 63; i6 > 2; i6 -= 2) {
                switch (((i6 % 2) * 5) + 89) {
                case 96:
                    Test0167.instanceCount ^= iMeth(Test0167.bFld, Test0167.instanceCount);
                    switch (((i6 % 2) * 5) + 60) {
                    case 66:
                        for (i25 = 1; i25 < 3; i25++) {
                            i3 = i7;
                            Test0167.iArrFld[i6 - 1] <<= i26;
                            fFld = i7;
                            i5 += (int) Test0167.instanceCount;
                            Test0167.instanceCount += (long) d;
                            Test0167.iArrFld[i6] = i6;
                            Test0167.instanceCount *= i4;
                        }
                        bArr[i6] = false;
                        if (Test0167.bFld) continue;
                        for (i27 = i6; i27 < 3; i27++) {
                            by2 <<= (byte)i5;
                            by2 = (byte)i3;
                            Test0167.lArrFld[i27] *= (long) d;
                            i7 >>= s;
                            i26 += (((i27 * i4) + i) - i6);
                            i7 *= i25;
                        }
                        break;
                    case 64:
                        Test0167.iArrFld[i6] -= i6;
                    }
                    break;
                case 97:
                    Test0167.lArrFld = Test0167.lArrFld;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i d s = " + i + "," + Double.doubleToLongBits(d) + "," + s);
        FuzzerUtils.out.println("i4 i5 i6 = " + i4 + "," + i5 + "," + i6);
        FuzzerUtils.out.println("i7 i25 i26 = " + i7 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 by2 = " + i27 + "," + i28 + "," + by2);
        FuzzerUtils.out.println("dArr bArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0167.instanceCount fFld Test0167.dFld = " + Test0167.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0167.dFld));
        FuzzerUtils.out.println("Test0167.bFld Test0167.lArrFld Test0167.iArrFld = " + (Test0167.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0167.lArrFld) + "," + FuzzerUtils.checkSum(Test0167.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0167 _instance = new Test0167();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
