// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0115 {

    public static final int N = 400;

    public static volatile long instanceCount=208L;
    public static boolean bFld=false;
    public static volatile long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0115.lArrFld, -8L);
        FuzzerUtils.init(Test0115.dArrFld, -4.8474);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, boolean b) {

        long l=2044892321L, l1=234L;
        short s=-11045;
        int i4=-3;
        int i5=-11;
        int i6=0;
        int[] iArr =new int[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-48);
        FuzzerUtils.init(iArr, 21316);

        byArr[(i3 >>> 1) % N] = (byte)13L;
        l = 1;
        while (++l < 131) {
            float f1=1.130F;
            i3 = -25409;
            f1 -= s;
            Test0115.instanceCount = i3;
            for (l1 = 1; l1 < 12; ++l1) {
                for (i5 = 2; i5 > 1; i5--) {
                    if (b) continue;
                    Test0115.lArrFld[(int) (l1)] = i3;
                    i3 = i4;
                    Test0115.dArrFld[(int) (l)] -= f1;
                    try {
                        i6 = (i6 / i4);
                        iArr[(int)(l1)] = (i6 % 60219);
                        i3 = (6359 % i5);
                    } catch (ArithmeticException a_e) {}
                    Test0115.lArrFld[(int) (l1)] = i4;
                    i6 += i3;
                    i3 |= i5;
                }
            }
        }
        long meth_res = i3 + (b ? 1 : 0) + l + s + l1 + i4 + i5 + i6 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f) {

        int i2=-30, i7=17419, i8=-11, i9=5, i10=-14499, i11=-5, i12=-98;
        boolean b1=false;
        double d=2.35026;
        byte by1=91;

        Test0115.instanceCount = (i2++);
        i2 -= (i2 = iMeth(-13, b1));
        for (i7 = 14; i7 < 305; i7++) {
            b1 = b1;
            for (i9 = 1; i9 < 6; i9++) {
                Test0115.lArrFld[i9] >>= Test0115.instanceCount;
                if (b1) continue;
                for (i11 = 1; i11 < 2; i11++) {
                    d *= Test0115.instanceCount;
                    Test0115.instanceCount = -5;
                    switch (((i8 >>> 1) % 1) + 81) {
                    case 81:
                        switch ((((i8 >>> 1) % 1) * 5) + 34) {
                        case 37:
                            Test0115.lArrFld[i9 + 1] = (long) f;
                            if (b1) break;
                            break;
                        default:
                            by1 = by1;
                        }
                        break;
                    default:
                        Test0115.lArrFld[i11 + 1] += Test0115.instanceCount;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + (b1 ? 1 : 0) + i7 + i8 + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(d) + by1;
    }

    public static void vMeth(byte by) {

        float f2=2.1005F;

        vMeth1(f2);
        vMeth_check_sum += by + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=14, i13=0, i14=-65;
        double d1=104.75764;
        float f3=-1.687F;
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(bArr, false);

        for (i = 10; i < 210; i++) {
            if (Test0115.bFld) {
                vMeth((byte)(-88));
                Test0115.bFld = Test0115.bFld;
                i13 = 1;
                do {
                    i14 = 1;
                    do {
                        short s1=20271;
                        d1 = i13;
                        if (true) {
                            iArrFld[i14] += (int)2666644269L;
                            switch ((i14 % 4) + 40) {
                            case 40:
                                if (false) {
                                    Test0115.lArrFld[i13 + 1] |= Test0115.instanceCount;
                                } else {
                                    try {
                                        iArrFld[i] = (iArrFld[i] / i14);
                                        i1 = (iArrFld[i13] / 129);
                                        i1 = (i13 / 22215);
                                    } catch (ArithmeticException a_e) {}
                                    switch ((((i1 >>> 1) % 10) * 5) + 63) {
                                    case 92:
                                        Test0115.instanceCount += 5;
                                        Test0115.instanceCount &= i14;
                                        Test0115.dArrFld[i] = i13;
                                        break;
                                    case 93:
                                        if (Test0115.bFld) {
                                            bArr[i13 + 1] = bArr[i14 + 1];
                                            i1 = -12;
                                        }
                                        i1 >>= i;
                                    case 67:
                                        i1 += (((i14 * Test0115.instanceCount) + f3) - s1);
                                        i1 += (int)f3;
                                        i1 <<= (int) Test0115.instanceCount;
                                        break;
                                    case 78:
                                        i1 *= i13;
                                        Test0115.bFld = true;
                                        f3 *= i;
                                        i1 += i13;
                                        break;
                                    case 95:
                                    case 94:
                                        Test0115.bFld = Test0115.bFld;
                                        Test0115.instanceCount += i13;
                                        break;
                                    case 104:
                                        iArrFld[i14 - 1] = (int) Test0115.instanceCount;
                                        break;
                                    case 98:
                                        i1 /= (int)((long)(d1) | 1);
                                        break;
                                    case 99:
                                        iArrFld[i - 1] += (int)f3;
                                    case 103:
                                    }
                                }
                                break;
                            case 41:
                                i1 = (int)f3;
                                break;
                            case 42:
                                iArrFld[i14 - 1] = -47956;
                                break;
                            case 43:
                                i1 *= i1;
                                break;
                            default:
                                i1 *= i1;
                            }
                        } else {
                            iArrFld[i - 1] = i14;
                        }
                    } while (++i14 < 1);
                } while (++i13 < 126);
            } else {
                if (Test0115.bFld) continue;
            }
        }

        FuzzerUtils.out.println("i i1 i13 = " + i + "," + i1 + "," + i13);
        FuzzerUtils.out.println("i14 d1 f3 = " + i14 + "," + Double.doubleToLongBits(d1) + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0115.instanceCount Test0115.bFld Test0115.lArrFld = " + Test0115.instanceCount + "," + (Test0115.bFld
                ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0115.lArrFld));
        FuzzerUtils.out.println("Test0115.dArrFld iArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0115.dArrFld))
            + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0115 _instance = new Test0115();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
