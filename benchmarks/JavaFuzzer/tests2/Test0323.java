// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:27 2023
public class Test0323 {

    public static final int N = 400;

    public static long instanceCount=3563622199L;
    public int iFld=64945;
    public static float fFld=-2.560F;
    public static double dFld=0.45242;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0323.iArrFld, 138);
        FuzzerUtils.init(Test0323.lArrFld, 9L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(double d, long l) {

        boolean b=false;
        int i6=12;
        int i7=103;
        int i8=-20494;
        int[] iArr1 =new int[N];
        double d1=-2.98395;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -5);
        FuzzerUtils.init(lArr, 0L);

        b = false;
        switch (((23815 >>> 1) % 2) + 28) {
        case 28:
            if (b) {
                d = i6;
            } else if (false) {
                i6 += i6;
            } else {
                l *= i6;
                for (d1 = 13; d1 < 275; d1++) {
                    i7 -= (int)d;
                    if (b) {
                        if (i7 != 0) {
                        }
                    } else if (b) {
                        i6 = i6;
                    } else if (b) {
                        i8 = 1;
                        while (++i8 < 6) {
                            i7 = i6;
                            Test0323.fFld += (i8 - i6);
                            l -= i8;
                        }
                    }
                }
            }
            break;
        case 29:
            i7 = (int)l;
        default:
            Test0323.fFld -= i7;
        }
        long meth_res = Double.doubleToLongBits(d) + l + (b ? 1 : 0) + i6 + Double.doubleToLongBits(d1) + i7 + i8 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i1, int i2) {

        int i3=1027, i4=-13, i5=-3586, i10=-26400, i11=17704, i12=100, i13=-18960;

        for (i3 = 11; 290 > i3; ++i3) {
            i5 = 1;
            do {
                i4 = (int) ((-(Test0323.instanceCount + Test0323.instanceCount)) - ((i5 - i1) >>> lMeth(Test0323.dFld,
                        Test0323.instanceCount)));
                i1 >>= i1;
            } while (++i5 < 6);
            Test0323.dFld = i5;
            i2 = (int)-10L;
        }
        for (i10 = 5; i10 < 347; ++i10) {
            i1 += (25158 + (i10 * i10));
            i2 += (i10 * i10);
        }
        Test0323.instanceCount = -24728;
        i4 = -60797;
        Test0323.instanceCount <<= i2;
        for (i12 = 4; i12 < 122; i12++) {
            i11 -= (int) Test0323.instanceCount;
            i4 = (int) Test0323.instanceCount;
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i10 + i11 + i12 + i13;
    }

    public int iMeth(int i) {

        int i14=58037, i15=-9, i16=-6, i17=-228, i18=18896;
        boolean b1=false;
        long l2=6368918724887097704L;

        Test0323.fFld = (Test0323.instanceCount++);
        vMeth(i, i);
        i14 = 1;
        do {
            switch (((i14 % 2) * 5) + 120) {
            case 122:
                for (i15 = 12; i15 > 1; i15--) {
                    i16 -= 22;
                    b1 = true;
                    l2 += (-6 + (i15 * i15));
                    for (i17 = 2; i17 > 1; --i17) {
                        Test0323.iArrFld[i15 - 1] <<= 34;
                        iFld += (i17 + i17);
                        b1 = b1;
                        Test0323.instanceCount <<= i15;
                        i16 = (int)1.21526;
                        Test0323.lArrFld[i14 + 1] -= i14;
                    }
                }
                break;
            case 128:
                l2 = -99;
                break;
            }
        } while (++i14 < 135);
        long meth_res = i + i14 + i15 + i16 + (b1 ? 1 : 0) + l2 + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i19=172;
        int i20=-12;
        int i21=-114;
        int i22=8;
        int i23=-5;
        int[][] iArr =new int[N][N];
        short s=-12412;
        boolean b2=true;

        FuzzerUtils.init(iArr, -9700);

        iArr[(iFld >>> 1) % N][(iFld >>> 1) % N] -= (int) ((iMeth(iFld) - iFld) * Test0323.dFld);
        iFld >>= iFld;
        for (double d2 : dArrFld) {
            for (i19 = 2; i19 < 63; ++i19) {
                iFld = (int)d2;
                iFld = (int)d2;
                Test0323.instanceCount ^= iFld;
                Test0323.lArrFld[i19] -= i21;
                iFld *= 6;
                Test0323.instanceCount = i21;
                Test0323.instanceCount += (((i19 * i20) + Test0323.instanceCount) - i21);
                for (i22 = i19; i22 < 2; i22++) {
                    Test0323.instanceCount = s;
                    Test0323.lArrFld[i19 + 1] *= i20;
                    if (false) continue;
                    Test0323.fFld = Test0323.instanceCount;
                    iFld = s;
                    switch (((i20 >>> 1) % 3) + 82) {
                    case 82:
                        Test0323.fFld = i23;
                        break;
                    case 83:
                        Test0323.iArrFld[i22 + 1] = (int) 7649338965284454054L;
                        if (b2) continue;
                        break;
                    case 84:
                        i23 <<= i23;
                        iArr[i22][i19] += (int)49.760F;
                        Test0323.dFld -= 0.0F;
                        break;
                    default:
                        Test0323.instanceCount += i22;
                    }
                    i20 = (int) Test0323.instanceCount;
                }
                i23 += i19;
                d2 = s;
            }
            d2 *= Test0323.fFld;
            i20 -= i20;
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 s = " + i22 + "," + i23 + "," + s);
        FuzzerUtils.out.println("b2 iArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0323.instanceCount iFld Test0323.fFld = " + Test0323.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0323.fFld));
        FuzzerUtils.out.println("Test0323.dFld Test0323.iArrFld Test0323.lArrFld = " + Double.doubleToLongBits(Test0323.dFld) + "," +
                FuzzerUtils.checkSum(Test0323.iArrFld) + "," + FuzzerUtils.checkSum(Test0323.lArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0323 _instance = new Test0323();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
