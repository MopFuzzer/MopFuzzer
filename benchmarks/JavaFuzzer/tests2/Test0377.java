// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0377 {

    public static final int N = 400;

    public static long instanceCount=425339275880386654L;
    public static volatile boolean bFld=false;
    public static byte byFld=-62;
    public float fFld=-125.586F;
    public static double[] dArrFld =new double[N];
    public static volatile float[][] fArrFld =new float[N][N];
    public static float[] fArrFld1 =new float[N];
    public static volatile int[] iArrFld =new int[N];
    public static int[][] iArrFld1 =new int[N][N];

    static {
        FuzzerUtils.init(Test0377.dArrFld, -100.94279);
        FuzzerUtils.init(Test0377.fArrFld, -1.633F);
        FuzzerUtils.init(Test0377.fArrFld1, 0.371F);
        FuzzerUtils.init(Test0377.iArrFld, 13617);
        FuzzerUtils.init(Test0377.iArrFld1, 8);
    }

    public static long fMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i6=-16, i7=242, i8=2, i9=10, i10=34467;
        double d=2.15123, d1=2.96115;
        short s=-22592;
        boolean b=false;
        float f=2.567F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1169200635027068615L);

        for (i6 = 176; i6 > 8; i6--) {
            d = s;
            for (d1 = 1; d1 < 9; ++d1) {
                for (i9 = 1; 2 > i9; i9++) {
                    if (i9 != 0) {
                    }
                    b = false;
                    f = Test0377.instanceCount;
                    i10 = i10;
                    i10 += (i9 | Test0377.instanceCount);
                    i7 += (i9 | Test0377.instanceCount);
                    i10 *= (int) Test0377.instanceCount;
                    if (b) break;
                    lArr[(i8 >>> 1) % N] *= i9;
                }
                i7 = 3;
                i8 = s;
            }
        }
        long meth_res = i6 + i7 + Double.doubleToLongBits(d) + s + Double.doubleToLongBits(d1) + i8 + i9 + i10 + (b ? 1
            : 0) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i3=-5, i4=22705, i5=-192, i11=-14, i12=-252, i13=-47244;
        float f1=114.104F;
        double d2=80.51550, d3=-1.6934;

        for (i3 = 11; 190 > i3; ++i3) {
            Test0377.dArrFld[i3] += Test0377.instanceCount;
            switch ((i3 % 5) + 22) {
            case 22:
                i5 = 1;
                while (++i5 < 9) {
                    i4 += iMeth();
                    i4 <<= i3;
                }
                i11 = 1;
                while (++i11 < 9) {
                    f1 -= i11;
                }
                for (d2 = 1; 9 > d2; ++d2) {
                    i13 = 1;
                    do {
                        i12 = 36;
                        Test0377.fArrFld[i13 - 1][i13] -= i12;
                        i4 *= 153;
                        i12 = 24696;
                        d3 -= Test0377.instanceCount;
                    } while (++i13 < 2);
                }
                break;
            case 23:
            case 24:
                if (Test0377.bFld) continue;
                break;
            case 25:
                i4 -= (int) Test0377.instanceCount;
                break;
            case 26:
                i12 = i11;
            }
        }
        long meth_res = i3 + i4 + i5 + i11 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + i12 + i13 +
            Double.doubleToLongBits(d3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static float fMeth(int i) {

        int i1=-8, i2=28779, i14=8, i15=33192, i16=10;
        float f2=-121.24F;
        double d4=-1.104063;
        long l=25742L;

        for (i1 = 14; 233 > i1; i1++) {
            i2 = (int)((-(288 - (i - 40124))) + (Float.intBitsToFloat(i) * lMeth()));
            i += i2;
        }
        for (i14 = 8; i14 < 191; i14++) {
            for (f2 = i14; f2 < 9; ++f2) {
                d4 /= 5991982905594410631L;
                l = 1;
                do {
                    d4 += 3;
                    i15 = -231;
                    Test0377.instanceCount = -42668;
                    i16 += (10 + (l * l));
                    Test0377.fArrFld1[(int) (f2 + 1)] *= 11.66F;
                    i15 = Test0377.byFld;
                    Test0377.iArrFld[i14 + 1] += i15;
                    i15 += (int)l;
                } while (++l < 1);
            }
        }
        long meth_res = i + i1 + i2 + i14 + i15 + Float.floatToIntBits(f2) + i16 + Double.doubleToLongBits(d4) + l;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=-17846, i18=9925, i19=11, i20=-7, i21=3, i22=12, i23=238, i24=3842, i25=-12, i26=-1, i27=-33479,
            i28=-3, i29=4;
        short s1=-4853;
        double d6=34.84438;
        long l3=-1052290023L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -25165L);

        fMeth(i17);
        Test0377.instanceCount |= -14;
        for (i18 = 2; i18 < 236; ++i18) {
            double d5=0.91085;
            lArr1[i18 - 1] = i18;
            d5 = fFld;
            i20 = 107;
            do {
                for (i21 = i18; i21 < 1; i21++) {
                    i17 = i22;
                }
            } while (--i20 > 0);
            i22 += i23;
            try {
                i19 = (i23 / 1568207187);
                i23 = (-1389940380 / i20);
                i22 = (i18 / 16766);
            } catch (ArithmeticException a_e) {}
            i23 += (((i18 * i18) + s1) - fFld);
        }
        Test0377.instanceCount = -44097;
        Test0377.fArrFld[(i18 >>> 1) % N] = Test0377.fArrFld1;
        Test0377.instanceCount <<= i20;
        for (i24 = 3; i24 < 172; i24++) {
            Test0377.iArrFld[i24 + 1] = i18;
            i26 = 148;
            while (--i26 > 0) {
                if (Test0377.bFld) break;
                d6 *= d6;
                i17 += i26;
                Test0377.byFld = (byte) Test0377.instanceCount;
            }
            i25 = (int) Test0377.instanceCount;
            for (l3 = 2; 148 > l3; l3++) {
                for (i28 = i24; i28 < 2; i28++) {
                    fFld -= -9;
                    fFld = i17;
                    i22 = i23;
                    if (Test0377.bFld) {
                        Test0377.byFld += (byte) i18;
                        i22 += (int) Test0377.instanceCount;
                    } else if (Test0377.bFld) {
                        Test0377.iArrFld = Test0377.iArrFld1[i24];
                    }
                }
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 s1 i24 = " + i23 + "," + s1 + "," + i24);
        FuzzerUtils.out.println("i25 i26 d6 = " + i25 + "," + i26 + "," + Double.doubleToLongBits(d6));
        FuzzerUtils.out.println("l3 i27 i28 = " + l3 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 lArr1 = " + i29 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0377.instanceCount Test0377.bFld Test0377.byFld = " + Test0377.instanceCount + "," + (Test0377.bFld ?
                1 : 0) + "," + Test0377.byFld);
        FuzzerUtils.out.println("fFld Test0377.dArrFld Test0377.fArrFld = " + Float.floatToIntBits(fFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0377.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0377.fArrFld)));
        FuzzerUtils.out.println("Test0377.fArrFld1 Test0377.iArrFld Test0377.iArrFld1 = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0377.fArrFld1)) + "," + FuzzerUtils.checkSum(Test0377.iArrFld) +
                "," + FuzzerUtils.checkSum(Test0377.iArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0377 _instance = new Test0377();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  lMeth ->  lMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
