// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:45 2023
public class Test0706 {

    public static final int N = 400;

    public static long instanceCount=-1538490271L;
    public static volatile byte byFld=16;
    public int iFld=-2212;
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0706.fArrFld, -2.620F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7) {

        int i8=14, i9=43554, i10=-157, i11=-236, i12=35585;
        float f1=14.329F;
        short s2=-24582;
        long l=-6L;
        boolean b=true;

        i7 <<= (int) Test0706.instanceCount;
        i7 /= (int)(i7 | 1);
        for (i8 = 4; i8 < 321; ++i8) {
            for (i10 = 1; i10 < 5; i10++) {
                f1 = i7;
                i9 += i10;
                i7 = s2;
                s2 -= (short)i10;
                switch ((i10 % 9) + 25) {
                case 25:
                    i11 = (int)f1;
                    for (l = 1; 2 > l; ++l) {
                        i11 <<= i8;
                        i12 >>= (int) Test0706.instanceCount;
                        i12 *= (int)24650L;
                        i9 &= i11;
                    }
                case 26:
                    b = b;
                case 27:
                    Test0706.instanceCount >>= i9;
                    break;
                case 28:
                    f1 -= i9;
                    break;
                case 29:
                    Test0706.instanceCount += (i10 * i10);
                case 30:
                    Test0706.instanceCount += (i10 - i7);
                case 31:
                    if (b) break;
                case 32:
                    i9 += i10;
                    break;
                case 33:
                default:
                    if (b) continue;
                }
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + s2 + l + i12 + (b ? 1 : 0);
    }

    public static void vMeth1(short s1, float f, int i3) {

        int i4=6535, i5=18802, i6=-11;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -1623796928882258820L);

        i3 >>>= i3;
        i4 = 1;
        do {
            for (i5 = i4; i5 < 12; ++i5) {
                Test0706.instanceCount += ((i6--) + ((Test0706.instanceCount - i3) * (i4 - Test0706.instanceCount)));
                i3 -= (int) (lArr[i5 + 1] <<= (Test0706.instanceCount * (-12 << (Test0706.instanceCount - i4))));
                vMeth2(i5);
                Test0706.instanceCount = i4;
                i3 -= i3;
                i3 += (int) Test0706.instanceCount;
                i6 = Test0706.byFld;
                Test0706.fArrFld = Test0706.fArrFld;
                if (b1) continue;
            }
            Test0706.instanceCount -= s1;
            i3 += (int)6965708442497443648L;
            Test0706.fArrFld[i4 + 1] = i4;
        } while ((i4 += 2) < 273);
        vMeth1_check_sum += s1 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(short s, int i, int i1) {

        double d=-2.35251, d1=-2.31569, d2=98.60171;
        int i2=-9;
        int[] iArr =new int[N];
        float f2=103.1000F, f3=15.573F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, 9);
        FuzzerUtils.init(lArr1, -6141434646757911648L);

        d *= (++i1);
        for (d1 = 8; d1 < 182; ++d1) {
            Test0706.fArrFld[(int) (d1 + 1)] += ((i1--) + i2);
            d2 = 1;
            do {
                vMeth1(s, f2, i);
                i2 <<= i;
                f2 = i1;
                f2 /= 36048;
                i2 -= i2;
                iArr[(int)(d2 + 1)] *= i2;
                lArr1 = lArr1;
                Test0706.instanceCount = Test0706.instanceCount;
                d = -219;
            } while (++d2 < 9);
            i1 -= i;
            f3 = -227;
        }
        vMeth_check_sum += s + i + i1 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i2 +
            Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        short s3=8525;
        int i13=-13;
        int i14=10211;
        int i15=-192;
        int i16=-218;
        int i17=50640;
        int i18=34946;
        int[] iArr1 =new int[N];
        double d3=-74.70161;
        float f4=-19.109F;
        boolean b2=true;

        FuzzerUtils.init(iArr1, -123);

        vMeth(s3, i13, i13);
        for (i14 = 9; i14 < 188; ++i14) {
            i15 *= i14;
            d3 -= i15;
            for (i16 = 140; i16 > i14; --i16) {
                i13 <<= i14;
                i17 *= (int)f4;
                Test0706.instanceCount += (i16 * i16);
                iArr1[i14 + 1] *= 197;
                Test0706.instanceCount ^= 163;
                i13 += (i16 * i16);
                s3 *= (short)-184L;
                Test0706.instanceCount *= Test0706.instanceCount;
                iArr1[i16 + 1] <<= -13;
                i18 = 1;
                while (++i18 < 1) {
                    if (b2) {
                        i13 -= i16;
                        iFld += (i18 - iFld);
                        Test0706.fArrFld[i16 - 1] += iFld;
                    } else if (b2) {
                        i15 += (int)d3;
                        iArr1[i14 - 1] >>>= i15;
                        Test0706.instanceCount = Test0706.instanceCount;
                        Test0706.instanceCount += i15;
                    }
                    iArr1[i18 + 1] += (int)151L;
                    i17 *= (int)f4;
                    iFld >>>= iFld;
                    i13 = i14;
                    iFld += (i18 + s3);
                }
            }
            i17 >>= i18;
        }
        Test0706.fArrFld[(i16 >>> 1) % N] = 0.390F;

        FuzzerUtils.out.println("s3 i13 i14 = " + s3 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 d3 i16 = " + i15 + "," + Double.doubleToLongBits(d3) + "," + i16);
        FuzzerUtils.out.println("i17 f4 i18 = " + i17 + "," + Float.floatToIntBits(f4) + "," + i18);
        FuzzerUtils.out.println("b2 iArr1 = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0706.instanceCount Test0706.byFld iFld = " + Test0706.instanceCount + "," + Test0706.byFld + "," +
            iFld);
        FuzzerUtils.out.println("Test0706.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0706.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0706 _instance = new Test0706();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
