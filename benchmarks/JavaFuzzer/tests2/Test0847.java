// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0847 {

    public static final int N = 400;

    public static long instanceCount=987972260L;
    public static short sFld=9563;
    public static volatile int iFld=10;
    public float fFld=29.302F;
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0847.iArrFld, 4088);
        FuzzerUtils.init(Test0847.lArrFld, -13L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, short s) {

        int i8=61019;
        int i9=0;
        int i10=1317;
        int i11=-53720;
        int[] iArr1 =new int[N];
        boolean b1=true;
        double d1=0.44427;
        float f2=-2.327F;
        float[] fArr =new float[N];
        long l=789464801269885723L;

        FuzzerUtils.init(iArr1, 8454);
        FuzzerUtils.init(fArr, -102.918F);

        i7 += (int) Test0847.instanceCount;
        Test0847.instanceCount = i7;
        i8 = 1;
        do {
            if (i7 != 0) {
                vMeth2_check_sum += i7 + s + i8 + (b1 ? 1 : 0) + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2)
                    + l + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            if (b1) break;
            Test0847.instanceCount = i7;
            i7 -= (int)d1;
        } while (++i8 < 393);
        Test0847.instanceCount *= i8;
        f2 -= i8;
        for (l = 19; 361 > l; l++) {
            for (i10 = (int)(l); i10 < 5; i10++) {
                i7 += i10;
                iArr1[i10] += i8;
                i9 += (((i10 * f2) + i10) - f2);
                fArr[(int)(l + 1)] -= i7;
            }
        }
        vMeth2_check_sum += i7 + s + i8 + (b1 ? 1 : 0) + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + l +
            i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i5) {

        int i6=-5;
        int i12=0;
        int i13=-13;
        int i14=-7;
        int i15=9;
        int i16=-65389;
        int[] iArr2 =new int[N];
        boolean b=true;
        float f1=0.740F, f3=13.160F;
        byte by=19;

        FuzzerUtils.init(iArr2, -65260);

        i6 = 1;
        while (++i6 < 215) {
            b = (b = ((i5--) != (i6 + f1)));
            Test0847.instanceCount += (((i6 * i5) + i6) - i5);
            vMeth2(i6, Test0847.sFld);
            i5 += (((i6 * Test0847.instanceCount) + Test0847.sFld) - i5);
            for (i12 = 1; 7 > i12; ++i12) {
                i13 *= by;
                i5 >>>= i13;
                i5 = (int) Test0847.instanceCount;
                for (f3 = 1; f3 < 2; f3++) {
                    Test0847.instanceCount = i5;
                    i5 += (int)f3;
                }
                for (i15 = 1; i15 < 2; ++i15) {
                    try {
                        i5 = (iArr2[i6 + 1] % 617548678);
                        i13 = (i14 % 81);
                        iArr2[i15 + 1] = (i6 % 2);
                    } catch (ArithmeticException a_e) {}
                    Test0847.instanceCount += (long) f1;
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i12 + i13 + by +
            Float.floatToIntBits(f3) + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr2);
    }

    public void vMeth(int i) {

        double d=32.69278;
        int i1=39722;
        int i2=-16350;
        int i3=-5;
        int i4=-17;
        int i17=0;
        int i18=11;
        int i19=-4;
        int i20=42726;
        int[] iArr =new int[N];
        float f=-1.878F;
        byte by1=-106;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(byArr, (byte)-37);

        Test0847.instanceCount += iArr[(227 >>> 1) % N];
        for (d = 7; d < 206; d += 2) {
            byArr[(int) (d - 1)] -= (byte) Math.max((int) ((i2 + i) * Test0847.instanceCount), --i);
            i1 = (int)(f--);
            i <<= i2;
            i2 >>>= (int) Test0847.instanceCount;
        }
        for (i3 = 3; i3 < 389; ++i3) {
            vMeth1(152);
            byArr[i3 - 1] *= (byte) Test0847.instanceCount;
        }
        for (i17 = 5; i17 < 224; i17++) {
            for (i19 = 1; 7 > i19; i19++) {
                i |= i19;
                by1 += (byte) Test0847.sFld;
                i20 = i2;
                i18 = (int) Test0847.instanceCount;
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + Float.floatToIntBits(f) + i3 + i4 + i17 + i18 +
            i19 + i20 + by1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=-43347, i22=-6784, i23=14507, i24=-76, i25=38683, i26=10, i27=-7;
        double d2=-2.61881;
        byte by2=69;
        boolean b2=true;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(fArr1, 0.612F);

        vMeth(Test0847.iFld);
        i21 = 1;
        do {
            Test0847.instanceCount -= (long) d2;
            switch (((i21 % 2) * 5) + 115) {
            case 122:
                Test0847.iFld = i21;
                for (i22 = 2; i22 < 101; i22++) {
                    switch (((64699 >>> 1) % 7) + 125) {
                    case 125:
                        Test0847.iFld -= (int) fFld;
                        for (i24 = 2; i24 > 1; --i24) {
                            Test0847.iArrFld[i24 - 1] = Test0847.iFld;
                            Test0847.sFld += (short) (13156 + (i24 * i24));
                            Test0847.iFld += i24;
                            if (true) break;
                            Test0847.iFld &= Test0847.iFld;
                        }
                        break;
                    case 126:
                        Test0847.iArrFld[i21 - 1] -= (int) d2;
                        Test0847.iArrFld[i22 - 1] = i25;
                        for (i26 = 2; i26 > i21; --i26) {
                            i25 *= i23;
                            switch ((i21 % 2) + 75) {
                            case 75:
                                Test0847.lArrFld[i26 - 1] -= i26;
                                i27 = by2;
                                i25 = -20911;
                                break;
                            case 76:
                                i25 += (-35 + (i26 * i26));
                                break;
                            default:
                                fFld += i26;
                            }
                            fFld -= i27;
                            i27 |= i21;
                            i25 *= (int) Test0847.instanceCount;
                            b2 = b2;
                            Test0847.iArrFld[i26] = i22;
                            Test0847.iFld = i24;
                        }
                        break;
                    case 127:
                        fArr1 = fArr1;
                        break;
                    case 128:
                        fFld -= i26;
                    case 129:
                        i25 = -3;
                        break;
                    case 130:
                        i23 /= -19008;
                        break;
                    case 131:
                    }
                }
                break;
            case 125:
                i25 = i22;
                break;
            default:
                Test0847.iArrFld = FuzzerUtils.int1array(N, (int) -150);
            }
        } while (++i21 < 248);

        FuzzerUtils.out.println("i21 d2 i22 = " + i21 + "," + Double.doubleToLongBits(d2) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 by2 = " + i26 + "," + i27 + "," + by2);
        FuzzerUtils.out.println("b2 fArr1 = " + (b2 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0847.instanceCount Test0847.sFld Test0847.iFld = " + Test0847.instanceCount + "," + Test0847.sFld +
                "," + Test0847.iFld);
        FuzzerUtils.out.println("fFld Test0847.iArrFld Test0847.lArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0847.iArrFld) + "," + FuzzerUtils.checkSum(Test0847.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0847 _instance = new Test0847();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
