// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0418 {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public double dFld=-1.14490;
    public static float fFld=1.889F;
    public static volatile short sFld=5668;
    public static boolean bFld=true;

    public static long fMeth_check_sum = 0;
    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static float fMeth(int i1) {


        Test0418.instanceCount = i1;
        long meth_res = i1;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i8, int i9, int i10) {

        int i11=118, i12=1, i13=-59415, i14=153, i15=-20688, i16=-45, i17=-8365;
        byte by=38;
        long l=-3280206103L;
        double d=-126.47681;
        short s=20584;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)22372);

        for (i11 = 2; i11 < 312; i11++) {
            sArr = sArr;
            i9 = i9;
            Test0418.instanceCount >>= by;
            for (l = 1; 5 > l; ++l) {
                i12 = i8;
            }
            by -= (byte)-2162;
            d %= (i8 | 1);
            Test0418.instanceCount += (-237 + (i11 * i11));
        }
        i10 = 1;
        for (i14 = 11; i14 < 219; i14++) {
            i16 = 1;
            while (++i16 < 8) {
                i17 = 1;
                do {
                    Test0418.fFld += (((i17 * s) + i8) - Test0418.fFld);
                    i9 = (int) Test0418.instanceCount;
                } while (++i17 < 1);
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + by + l + i13 + Double.doubleToLongBits(d) + i14 + i15 + i16 + i17 +
            s + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i2=-25, i3=-2, i4=-7, i5=-64888, i6=33909, i7=-244, i18=20503;
        double d1=-1.85798;

        for (i2 = 7; i2 < 133; ++i2) {
            for (i4 = i2; 12 > i4; i4 += 2) {
                switch ((((((int) (i5 - Test0418.instanceCount)) >>> 1) % 8) * 5) + 80) {
                case 93:
                    for (i6 = 1; i6 < 1; i6++) {
                        i3 = iMeth(i2, i4, -12);
                        switch ((i4 % 4) + 83) {
                        case 83:
                            Test0418.instanceCount *= (long) Test0418.fFld;
                            break;
                        case 84:
                        case 85:
                            if (Test0418.bFld) {
                                Test0418.instanceCount |= Test0418.instanceCount;
                                Test0418.sFld += (short) i5;
                            } else {
                                i7 = Test0418.sFld;
                                i5 = i7;
                                i7 += (i6 * Test0418.fFld);
                            }
                            break;
                        case 86:
                            d1 = Test0418.instanceCount;
                            Test0418.instanceCount += (i6 | Test0418.instanceCount);
                        default:
                            Test0418.fFld = i4;
                        }
                    }
                    break;
                case 116:
                    i3 -= i7;
                    break;
                case 115:
                    i5 >>= Test0418.sFld;
                    break;
                case 95:
                    i3 = i18;
                case 105:
                    i5 += (i4 ^ (long) Test0418.fFld);
                    break;
                case 92:
                    Test0418.sFld >>= (short) Test0418.instanceCount;
                case 91:
                    Test0418.sFld += (short) i4;
                    break;
                case 120:
                    d1 = i18;
                    break;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i18;
    }

    public static void vSmallMeth() {

        int i19=54816;

        vMeth();
        i19 = i19;
        vSmallMeth_check_sum += i19;
    }

    public void mainTest(String[] strArr1) {

        int i=97;
        int i20=75;
        int i21=37;
        int i22=-3;
        int i23=59712;
        int i24=0;
        int i25=-53378;
        int[] iArr =new int[N];
        byte by1=33;
        boolean b=false;
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -146);
        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(bArr, true);

        i += (int)-101.12882;
        i /= (int)(i | 1);
        dFld += Test0418.instanceCount;
        i = (int)fMeth(--i);
        for (int smallinvoc=0; smallinvoc<501; smallinvoc++) vSmallMeth();
        switch ((((i >>> 1) % 8) * 5) + 98) {
        case 128:
            i <<= i;
            for (i20 = 5; i20 < 333; i20 += 2) {
                if (b) {
                    Test0418.instanceCount = i21;
                    for (i22 = 9; 153 > i22; ++i22) {
                        switch (((i20 % 7) * 5) + 75) {
                        case 94:
                            for (i24 = 1; i24 < 2; ++i24) {
                                try {
                                    i23 = (-8545 % i);
                                    i = (iArr[i20 - 1] / -56448);
                                    i = (i / 805212649);
                                } catch (ArithmeticException a_e) {}
                                if (Test0418.bFld) continue;
                                lArr[i22 - 1] = by1;
                                Test0418.instanceCount += (9 + (i24 * i24));
                                Test0418.instanceCount = (long) dFld;
                                Test0418.instanceCount -= i20;
                                Test0418.instanceCount = i21;
                                i |= (int) Test0418.instanceCount;
                                if (Test0418.bFld) {
                                    i25 <<= (int) Test0418.instanceCount;
                                } else {
                                    i = by1;
                                    Test0418.instanceCount *= i20;
                                    i21 = i24;
                                }
                                Test0418.instanceCount += 49;
                            }
                            break;
                        case 85:
                            if (Test0418.bFld) continue;
                            i21 = (int)dFld;
                            Test0418.fFld += (((i22 * i22) + i) - Test0418.fFld);
                            break;
                        case 95:
                            i *= (int) Test0418.instanceCount;
                            break;
                        case 100:
                            iArr = FuzzerUtils.int1array(N, (int)-40461);
                            break;
                        case 98:
                            i25 += i22;
                            break;
                        case 76:
                        case 93:
                            i21 >>= i20;
                            break;
                        }
                    }
                } else {
                    i21 = i;
                }
            }
        case 126:
            by1 = (byte) Test0418.fFld;
            break;
        case 118:
            i25 = (int) Test0418.instanceCount;
            break;
        case 117:
            i25 -= i;
        case 125:
            Test0418.instanceCount = Test0418.instanceCount;
        case 109:
            bArr[(49 >>> 1) % N] = Test0418.bFld;
            break;
        case 138:
            Test0418.instanceCount = i24;
            break;
        case 100:
            i /= (int) (Test0418.instanceCount | 1);
            break;
        }

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 by1 b = " + i25 + "," + by1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("iArr lArr bArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr) +
            "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0418.instanceCount dFld Test0418.fFld = " + Test0418.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Float.floatToIntBits(Test0418.fFld));
        FuzzerUtils.out.println("Test0418.sFld Test0418.bFld = " + Test0418.sFld + "," + (Test0418.bFld ? 1 : 0));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0418 _instance = new Test0418();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
