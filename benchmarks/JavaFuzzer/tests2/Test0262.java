// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0262 {

    public static final int N = 400;

    public static long instanceCount=-49137L;
    public static byte byFld=-54;
    public static float fFld=-90.910F;
    public static short sFld=14691;
    public boolean bFld=true;
    public volatile double dFld=2.117046;
    public static double[] dArrFld =new double[N];
    public float[][] fArrFld =new float[N][N];

    static {
        FuzzerUtils.init(Test0262.dArrFld, 43.1175);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i5, int i6) {

        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, 7);

        l += Test0262.byFld;
        iArr[(-4822 >>> 1) % N] = i5;
        i5 += (int) Test0262.fFld;
        vMeth1_check_sum += l + i5 + i6 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(short s, int i2, float f) {

        int i3=-2, i4=-77;
        long l1=518177382L;

        for (i3 = 3; i3 < 353; i3++) {
            vMeth1(l1, i4, i4);
        }
        Test0262.dArrFld[(i3 >>> 1) % N] += Test0262.instanceCount;
        vMeth_check_sum += s + i2 + Float.floatToIntBits(f) + i3 + i4 + l1;
    }

    public static long lMeth() {

        int i1=7, i7=-66, i8=-173, i9=-10, i10=7, i11=100;
        double d=105.64197;

        i1 ^= (int) (-((i1 * i1) * (212 * (Test0262.instanceCount + i1))));
        vMeth(Test0262.sFld, 27938, Test0262.fFld);
        Test0262.instanceCount += (long) Test0262.fFld;
        for (i7 = 15; 274 > i7; i7++) {
            i9 = 1;
            while (++i9 < 6) {
                Test0262.instanceCount = i7;
                i1 = (int)56550L;
                for (i10 = 1; i10 < 1; i10++) {
                    i11 /= (int) ((long) (Test0262.fFld) | 1);
                    i8 = i9;
                    i8 += (22776 + (i10 * i10));
                    d *= 89;
                    i1 += (int)-112.27421;
                }
            }
            d *= 2.738F;
            i1 >>= 7592;
        }
        long meth_res = i1 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-34680;
        int i12=-12;
        int i13=52700;
        int i14=-12;
        int i15=-193;
        int i16=2;
        int i17=-1;
        int i18=-33794;
        int i20=235;
        int i21=196;
        int[] iArr1 =new
                    int[N];
        boolean[] bArr =new boolean[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, 1181474971577373700L);
        FuzzerUtils.init(iArr1, -8);

        i += (int) Test0262.instanceCount;
        lMeth();
        Test0262.fFld += i;
        for (i12 = 11; 394 > i12; i12++) {
            bArr[i12 - 1] = bFld;
            for (i14 = 4; i14 < 66; ++i14) {
                Test0262.fFld += Test0262.byFld;
            }
            Test0262.byFld <<= (byte) Test0262.instanceCount;
            for (i16 = 4; i16 < 66; i16 += 2) {
                Test0262.dArrFld[i16] *= dFld;
                i13 += (int)dFld;
                fArrFld[i16 + 1][i12] = -14637;
                lArr[i16 + 1] *= Test0262.sFld;
            }
            try {
                i = (i16 % 1243860551);
                i = (89 / i);
                i = (221 % i15);
            } catch (ArithmeticException a_e) {}
            Test0262.instanceCount *= i14;
            i13 += i12;
        }
        i18 = 368;
        while (--i18 > 0) {
            i17 = Test0262.sFld;
            Test0262.instanceCount *= i14;
            i = (int) Test0262.fFld;
            i17 <<= (int) Test0262.instanceCount;
            iArr1[i18] = i15;
        }
        for (int i19 : iArr1) {
            for (i20 = 1; 63 > i20; i20++) {
                i21 += i14;
                i19 *= i17;
                switch (((-129 >>> 1) % 4) + 59) {
                case 59:
                    i13 -= (int) Test0262.fFld;
                    Test0262.fFld -= i12;
                    i17 -= (int)-43.47850;
                    break;
                case 60:
                    Test0262.instanceCount &= i20;
                    break;
                case 61:
                    iArr1[i20] -= (int) Test0262.instanceCount;
                    break;
                case 62:
                    i15 >>= i;
                default:
                    bFld = bFld;
                }
            }
        }

        FuzzerUtils.out.println("i i12 i13 = " + i + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i20 = " + i17 + "," + i18 + "," + i20);
        FuzzerUtils.out.println("i21 bArr lArr = " + i21 + "," + FuzzerUtils.checkSum(bArr) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("iArr1 = " + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0262.instanceCount Test0262.byFld Test0262.fFld = " + Test0262.instanceCount + "," + Test0262.byFld +
                "," + Float.floatToIntBits(Test0262.fFld));
        FuzzerUtils.out.println("Test0262.sFld bFld dFld = " + Test0262.sFld + "," + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0262.dArrFld fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0262.dArrFld))
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0262 _instance = new Test0262();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
