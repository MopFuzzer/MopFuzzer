// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:57 2023
public class Test0966 {

    public static final int N = 400;

    public static long instanceCount=1604965034442600463L;
    public static boolean bFld=true;
    public static byte byFld=117;
    public int iFld=-208;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(int i4) {

        short s=-2925;

        i4 = s;
        long meth_res = i4 + s;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth1(int i3) {

        int i5=41675;
        int i6=1;
        int i7=-10;
        int i8=9;
        int[] iArr =new int[N];
        double d=93.76345;
        float f1=108.524F;

        FuzzerUtils.init(iArr, -62290);

        Test0966.bFld = bMeth(232);
        iArr[(i3 >>> 1) % N] = i3;
        for (i5 = 17; i5 < 273; ++i5) {
            switch (((i5 % 4) * 5) + 113) {
            case 116:
                d = -27295;
                break;
            case 117:
                if (Test0966.bFld) {
                    for (i7 = 1; 6 > i7; ++i7) {
                        i8 += i7;
                        i8 += i7;
                        i3 += (-230 + (i7 * i7));
                        i8 = (int) Test0966.instanceCount;
                        d = Test0966.instanceCount;
                        f1 -= i6;
                        if (i7 != 0) {
                        }
                    }
                    Test0966.bFld = Test0966.bFld;
                } else {
                    i3 = i5;
                }
                break;
            case 120:
            case 133:
                if (Test0966.bFld) continue;
                break;
            default:
                i3 = (int)3769154627L;
            }
        }
        long meth_res = i3 + i5 + i6 + Double.doubleToLongBits(d) + i7 + i8 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f) {

        int i1=24647, i2=11022;

        for (i1 = 1; i1 < 394; ++i1) {
            i2 -= (int) (Test0966.instanceCount + iMeth1(i2));
            Test0966.instanceCount ^= Test0966.instanceCount;
        }
        f = -11510;
        Test0966.instanceCount -= (long) f;
        long meth_res = Float.floatToIntBits(f) + i1 + i2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=19155;
        int i9=-1;
        int i10=9;
        int i11=-103;
        int i12=10363;
        int i13=175;
        int i14=219;
        int i15=-8;
        int i16=-207;
        int i17=-1;
        int[] iArr1 =new int[N];
        float f2=1.924F;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr1, -278);
        FuzzerUtils.init(fArr, 8.958F);

        i = (-iMeth(f2));
        Test0966.instanceCount >>= 26511;
        i -= i;
        i = -186;
        for (i9 = 15; i9 < 328; ++i9) {
            if (false) {
                for (i11 = i9; 80 > i11; i11++) {
                    iArr1[i9 - 1] >>= (int)63445L;
                    for (i13 = i9; i13 < 1; i13 += 2) {
                        if (Test0966.bFld) break;
                    }
                    i += i;
                    f2 *= i10;
                    if (Test0966.bFld) {
                        Test0966.instanceCount += (((i11 * i9) + f2) - i);
                        i15 = 1;
                        do {
                            Test0966.instanceCount <<= i9;
                            i10 += (((i15 * Test0966.instanceCount) + i9) - i9);
                        } while (++i15 < 1);
                        for (i16 = i11; i16 < 1; ++i16) {
                            Test0966.instanceCount += (i16 - Test0966.instanceCount);
                            Test0966.byFld &= (byte) Test0966.instanceCount;
                            Test0966.instanceCount ^= i13;
                        }
                    } else if (Test0966.bFld) {
                        Test0966.instanceCount *= i11;
                        fArr[i9][i9 + 1] = -53452;
                        iArr1[i11 - 1] &= 12;
                    } else if (Test0966.bFld) {
                        Test0966.instanceCount <<= iFld;
                        if (Test0966.bFld) continue;
                    }
                    Test0966.instanceCount = i14;
                    Test0966.bFld = Test0966.bFld;
                    iFld = i15;
                    try {
                        iFld = (iArr1[i9] % -54);
                        iFld = (iFld % 804758094);
                        i12 = (185 / i9);
                    } catch (ArithmeticException a_e) {}
                }
            } else if (false) {
            }
        }

        FuzzerUtils.out.println("i f2 i9 = " + i + "," + Float.floatToIntBits(f2) + "," + i9);
        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 iArr1 = " + i16 + "," + i17 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0966.instanceCount Test0966.bFld Test0966.byFld = " + Test0966.instanceCount + "," + (Test0966.bFld ?
                1 : 0) + "," + Test0966.byFld);
        FuzzerUtils.out.println("iFld = " + iFld);

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0966 _instance = new Test0966();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
