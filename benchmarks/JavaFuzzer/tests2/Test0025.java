// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0025 {

    public static final int N = 400;

    public static long instanceCount=10L;
    public static volatile int iFld=26288;
    public static volatile double dFld=10.88345;
    public static boolean bFld=true;
    public static short[] sArrFld =new short[N];
    public static long[] lArrFld =new long[N];
    public static volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0025.sArrFld, (short) 26558);
        FuzzerUtils.init(Test0025.lArrFld, -8L);
        FuzzerUtils.init(Test0025.iArrFld, -234);
    }

    public static long vMeth_check_sum = 0;
    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth() {

        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -54448);

        iArr[(Test0025.iFld >>> 1) % N] += Integer.reverseBytes(-(Test0025.iFld * -3));
        vMeth_check_sum += FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(long l, long l1, int i2) {


        vMeth();
        vSmallMeth_check_sum += l + l1 + i2;
    }

    public static void vMeth1(long l3, float f1) {

        float f2=60.561F;

        f2 += Test0025.iFld;
        vMeth1_check_sum += l3 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2);
    }

    public static int iMeth(long l2, int i9) {

        float f3=94.254F;
        int i10=5, i11=167, i12=27511, i13=156;

        Test0025.iFld *= Test0025.iFld;
        vMeth1(l2, f3);
        for (i10 = 130; i10 > 7; --i10) {
            Test0025.instanceCount >>>= i10;
            l2 = i10;
            for (i12 = 1; 13 > i12; ++i12) {
                f3 -= Test0025.iFld;
                Test0025.dFld = 5039000222575085832L;
                i9 = (int) Test0025.instanceCount;
                i11 *= (int)l2;
                Test0025.iArrFld[i10 - 1] += (int) 1.100035;
                i11 += (i12 + i10);
                i13 = (int) Test0025.dFld;
                f3 = i9;
                i11 += (int)(29140L + (i12 * i12));
            }
        }
        long meth_res = l2 + i9 + Float.floatToIntBits(f3) + i10 + i11 + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(boolean b) {

        int i3=5;
        int i4=-6;
        int i5=10646;
        int i6=-16606;
        int i7=19036;
        int i8=220;
        int[] iArr1 =new int[N];
        short s=16776;
        float f=-85.630F;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr1, 26226);
        FuzzerUtils.init(dArr, -2.111875);

        for (i3 = 2; i3 < 132; i3 += 2) {
            i4 = ((--i5) + (++Test0025.sArrFld[i3]));
            i6 = 1;
            while (++i6 < 24) {
                Test0025.instanceCount -= (--Test0025.lArrFld[i3]);
                iArr1[i3 - 1] = (int) ((--Test0025.instanceCount) + ((Test0025.iFld * s) * (++i4)));
                Test0025.iFld -= (int) ((Test0025.instanceCount + i6) + i5);
                vMeth();
                f = 1;
                do {
                    iArr1 = (iArr1 = iArr1);
                    Test0025.lArrFld = Test0025.lArrFld;
                    dArr = dArr;
                    dArr = dArr;
                } while ((f -= 2) > 0);
                for (i7 = 1; i7 < 1; ++i7) {
                    Test0025.instanceCount -= (66 - ((i6 - Test0025.instanceCount) * (i5 -= i5)));
                    i8 ^= iMeth(Test0025.instanceCount, 218);
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i3 + i4 + i5 + i6 + s + Float.floatToIntBits(f) + i7 + i8 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=0, i14=-12, i15=-173, i16=42, i17=78, i18=-214;
        float f4=-1.968F;
        long l4=10097L, l5=247L;

        for (i = 5; i < 315; ++i) {
            i1 -= (Test0025.iFld++);
            vMeth();
            for (int smallinvoc = 0; smallinvoc < 62; smallinvoc++)
                vSmallMeth(lMeth(Test0025.bFld), Test0025.instanceCount,
                        Test0025.iFld);
            for (i14 = 3; i14 < 81; ++i14) {
                Test0025.iArrFld[i + 1] <<= (int) Test0025.instanceCount;
                Test0025.iFld += i14;
                Test0025.instanceCount -= Test0025.iFld;
                Test0025.dFld -= 23271;
            }
            Test0025.iArrFld[i] -= (int) Test0025.instanceCount;
            i1 |= -48549;
            Test0025.iFld -= (int) f4;
            for (i16 = 3; 81 > i16; i16++) {
                if (Test0025.bFld) {
                    Test0025.instanceCount = i17;
                } else if (Test0025.bFld) {
                    i15 = (int) Test0025.instanceCount;
                    f4 = 4902;
                }
                for (l4 = 1; l4 < 2; ++l4) {
                    Test0025.bFld = true;
                    switch ((int)((l4 % 1) + 97)) {
                    case 97:
                    }
                    i17 = (int)164L;
                    Test0025.iFld = i15;
                    Test0025.iFld *= i18;
                    switch (((i15 >>> 1) % 2) + 41) {
                    case 41:
                        i15 += (int)(l4 | i15);
                        f4 -= f4;
                        Test0025.instanceCount += (l4 - l5);
                    case 42:
                    default:
                        Test0025.iArrFld = Test0025.iArrFld;
                    }
                    Test0025.iArrFld[(int) (l4)] += i18;
                    Test0025.instanceCount -= (long) f4;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i14 = " + i + "," + i1 + "," + i14);
        FuzzerUtils.out.println("i15 f4 i16 = " + i15 + "," + Float.floatToIntBits(f4) + "," + i16);
        FuzzerUtils.out.println("i17 l4 i18 = " + i17 + "," + l4 + "," + i18);
        FuzzerUtils.out.println("l5 = " + l5);

        FuzzerUtils.out.println("Test0025.instanceCount Test0025.iFld Test0025.dFld = " + Test0025.instanceCount + "," + Test0025.iFld +
                "," + Double.doubleToLongBits(Test0025.dFld));
        FuzzerUtils.out.println("Test0025.bFld Test0025.sArrFld Test0025.lArrFld = " + (Test0025.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0025.sArrFld) + "," + FuzzerUtils.checkSum(Test0025.lArrFld));
        FuzzerUtils.out.println("Test0025.iArrFld = " + FuzzerUtils.checkSum(Test0025.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0025 _instance = new Test0025();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest vSmallMeth Test lMeth
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
