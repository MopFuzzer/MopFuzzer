// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:30 2023
public class Test0393 {

    public static final int N = 400;

    public static long instanceCount=2851515450L;
    public static int iFld=-56303;
    public static int[] iArrFld =new int[N];
    public static boolean[] bArrFld =new boolean[N];

    static {
        FuzzerUtils.init(Test0393.iArrFld, 131);
        FuzzerUtils.init(Test0393.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, long l) {

        int i4=-157, i5=-6, i6=-1, i7=37145;
        long l1=-5227999485420782620L;
        long[] lArr =new long[N];
        boolean b=true;
        byte[] byArr =new byte[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(byArr, (byte)-105);
        FuzzerUtils.init(dArr, -1.105520);
        FuzzerUtils.init(lArr, 4635447745475758793L);

        i4 &= i4;
        for (i5 = 7; 185 > i5; i5++) {
            i7 = 1;
            while (++i7 < 9) {
                l1 = 1;
                do {
                    float f2=0.87F;
                    byArr[i7 + 1] = (byte)i4;
                    f2 += l1;
                    dArr[i7 + 1] = 26934L;
                    f2 += i4;
                    if (b) continue;
                    i4 += (int)(l1 * l1);
                    i6 >>>= i7;
                    d1 = f2;
                    i6 += (int)l1;
                    lArr[(int)(l1 + 1)] = -88L;
                } while (++l1 < 1);
                i4 >>= (int) Test0393.instanceCount;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + l + i4 + i5 + i6 + i7 + l1 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(float f1, double d) {

        long l2=34833L;
        int i8=107, i9=27374, i10=14;
        boolean b1=false;

        vMeth1(d, 524140365L);
        d *= Test0393.instanceCount;
        Test0393.instanceCount |= Test0393.iFld;
        for (l2 = 127; l2 > 1; --l2) {
            Test0393.iFld *= -178;
            Test0393.iFld -= (int) l2;
            for (i9 = (int)(l2); i9 < 12; ++i9) {
                if (b1) break;
                if (b1) continue;
                Test0393.iFld += (((i9 * i9) + i10) - l2);
                i10 = (int) Test0393.instanceCount;
                try {
                    i10 = (Test0393.iArrFld[(int) (l2 + 1)] / -1348553701);
                    i10 = (i10 / i9);
                    i10 = (i10 / -33724425);
                } catch (ArithmeticException a_e) {}
                i10 += i8;
                Test0393.bArrFld = FuzzerUtils.boolean1array(N, (boolean) false);
            }
            Test0393.instanceCount %= -4;
        }
        long meth_res = Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + l2 + i8 + i9 + i10 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, short s) {

        float f=2.977F;
        double d2=1.20993;
        int i11=193;
        int i12=32106;
        int[] iArr =new int[N];
        boolean b2=true;

        FuzzerUtils.init(iArr, -9);

        for (int i3 : iArr) {
            iArr[(88 >>> 1) % N] *= 54;
        }
        i2 -= (i2++);
        f = Math.abs(Test0393.instanceCount -= (i2++));
        i2 >>= (int)(f - iMeth(f, 77.128789));
        Test0393.iFld = 128;
        if (false) {
            d2 -= -93;
            for (i11 = 15; i11 < 309; i11++) {
                if (false) break;
                Test0393.instanceCount = (long) -114.194F;
                if (b2) {
                    Test0393.iFld = i12;
                    f += (((i11 * i11) + Test0393.instanceCount) - i12);
                    Test0393.iFld += i11;
                } else {
                    i12 += (int)f;
                }
            }
        }
        vMeth_check_sum += i2 + s + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i11 + i12 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-56727, i1=72, i13=132, i14=63562, i15=-53, i16=41270, i17=34753, i18=185, i19=-44474, i20=-62918, i21=-7;
        double d3=-1.85133, d4=0.21080;
        float f3=-81.936F;
        short s1=26374;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, -48L);

        for (i = 131; i > 7; i -= 2) {
            vMeth(51530, (short)(18383));
            for (d3 = 1; d3 < i; ++d3) {
                try {
                    Test0393.iArrFld[i] = (i / i13);
                    i1 = (i % i1);
                    Test0393.iFld = (56 % i1);
                } catch (ArithmeticException a_e) {}
                for (f3 = 1; f3 < 2; f3++) {
                    Test0393.iFld += i13;
                    i14 += i13;
                }
                for (i15 = 1; i15 < 2; i15++) {
                    i13 |= i13;
                    Test0393.instanceCount <<= 5;
                    Test0393.iFld += (i15 ^ i14);
                    i1 >>= i1;
                    i1 >>= i13;
                }
                i16 *= i;
                s1 += (short) Test0393.instanceCount;
                i13 = -53917;
                s1 = (short)163L;
                for (i17 = 1; i17 < 2; ++i17) {
                    Test0393.iFld <<= i14;
                    Test0393.iFld += (i17 - i17);
                    lArr1[(int)(d3 - 1)][i17] <<= i15;
                    i13 *= -73;
                    Test0393.instanceCount += Test0393.instanceCount;
                }
                Test0393.iFld = i;
                for (i19 = i; i19 < 2; i19++) {
                    d4 += i;
                    Test0393.iArrFld[(int) (d3 - 1)] -= -62638;
                    Test0393.iFld = i17;
                    i20 = (int)123.711F;
                    i21 -= i;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d3 = " + i + "," + i1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i13 f3 i14 = " + i13 + "," + Float.floatToIntBits(f3) + "," + i14);
        FuzzerUtils.out.println("i15 i16 s1 = " + i15 + "," + i16 + "," + s1);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 d4 i21 = " + i20 + "," + Double.doubleToLongBits(d4) + "," + i21);
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0393.instanceCount Test0393.iFld Test0393.iArrFld = " + Test0393.instanceCount + "," + Test0393.iFld +
                "," + FuzzerUtils.checkSum(Test0393.iArrFld));
        FuzzerUtils.out.println("Test0393.bArrFld = " + FuzzerUtils.checkSum(Test0393.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0393 _instance = new Test0393();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
