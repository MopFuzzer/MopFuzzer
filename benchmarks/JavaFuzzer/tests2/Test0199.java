// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0199 {

    public static final int N = 400;

    public static long instanceCount=13L;
    public static byte byFld=64;
    public int iFld=-8;
    public static double dFld=0.26539;
    public static float fFld=90.793F;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(boolean b, int i3, boolean b1) {

        float f=-14.635F, f1=2.864F, f3=0.251F;
        int i4=-176;
        int i5=3;
        int i6=169;
        int i7=6;
        int[] iArr =new int[N];
        long l2=0L;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 2893886950L);
        FuzzerUtils.init(iArr, -12);

        for (f = 11; f < 354; ++f) {
            switch ((int)((f % 8) + 85)) {
            case 85:
            case 86:
                Test0199.instanceCount += (long) (f - Test0199.instanceCount);
                i4 <<= (int) Test0199.instanceCount;
                break;
            case 87:
                for (f1 = 5; f1 > 1; f1 -= 3) {
                    float f2=-69.224F;
                    i4 = i5;
                    f2 += i5;
                }
                i5 += (int)f;
                break;
            case 88:
                i3 = i3;
                f3 = i3;
                break;
            case 89:
                Test0199.instanceCount += (long) (((f * i5) + i5) - i5);
                i6 = 5;
                while (--i6 > 0) {
                    for (l2 = 1; 1 > l2; ++l2) {
                        if (b) continue;
                        i7 = i5;
                    }
                }
            case 90:
            case 91:
                iArr[(int)(f - 1)] += i5;
            case 92:
                Test0199.instanceCount <<= i3;
                break;
            }
        }
        long meth_res = (b ? 1 : 0) + i3 + (b1 ? 1 : 0) + Float.floatToIntBits(f) + i4 + Float.floatToIntBits(f1) + i5
            + Float.floatToIntBits(f3) + i6 + l2 + i7 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i1, double d, int i2) {

        long l=-400875452592919735L;
        boolean b2=false;

        i1 *= (int)((i2 * i2) - (-(62.251F * (l + -2093))));
        i1 *= iMeth2(false, 39444, b2);
        long meth_res = i1 + Double.doubleToLongBits(d) + i2 + l + (b2 ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i=-121;

        i >>= iMeth1(i, Test0199.dFld, i);
        long meth_res = i;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i8=55629, i9=77, i10=-6, i11=-10, i12=3, i13=50, i14=-5, i15=35, i16=39805, i17=1;
        boolean b3=false;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 9L);

        Test0199.byFld -= (byte) (((9 - (Test0199.instanceCount * iFld)) - -9376) + (iFld--));
        iMeth();
        iFld /= (int)(iFld | 1);
        for (i8 = 9; 247 > i8; ++i8) {
            try {
                iFld = (-12919 % i8);
                i9 = (iFld % -47400);
                iFld = (i9 / -4600);
            } catch (ArithmeticException a_e) {}
            i9 += (((i8 * Test0199.instanceCount) + Test0199.fFld) - iFld);
            for (i10 = 3; 106 > i10; i10++) {
                iFld += (-31149 + (i10 * i10));
                i11 = 13;
                Test0199.fFld -= i11;
            }
            Test0199.byFld = (byte) -3;
            lArr1[i8 + 1] -= Test0199.instanceCount;
            for (i12 = 2; 106 > i12; i12++) {
                switch (((iFld >>> 1) % 2) + 70) {
                case 70:
                    iFld -= i12;
                    break;
                case 71:
                    i9 *= i13;
                    break;
                }
                Test0199.instanceCount += i11;
                Test0199.instanceCount += i12;
            }
            for (i14 = 3; i14 < 106; i14++) {
                iFld *= i10;
                Test0199.fFld += (((i14 * i14) + i8) - i10);
                Test0199.instanceCount += (long) Test0199.fFld;
                i9 <<= (int) Test0199.instanceCount;
                Test0199.instanceCount <<= i13;
                Test0199.byFld += (byte) (i14 * Test0199.instanceCount);
                Test0199.instanceCount -= i9;
            }
            if (b3) continue;
        }
        for (i16 = 16; 257 > i16; ++i16) {
            Test0199.fFld += (i16 - iFld);
        }
        i11 = (int) Test0199.fFld;

        FuzzerUtils.out.println("i8 i9 i10 = " + i8 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 b3 = " + i14 + "," + i15 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i16 i17 lArr1 = " + i16 + "," + i17 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0199.instanceCount Test0199.byFld iFld = " + Test0199.instanceCount + "," + Test0199.byFld + "," +
            iFld);
        FuzzerUtils.out.println("Test0199.dFld Test0199.fFld = " + Double.doubleToLongBits(Test0199.dFld) + "," +
                Float.floatToIntBits(Test0199.fFld));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0199 _instance = new Test0199();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
