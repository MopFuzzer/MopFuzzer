// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0650 {

    public static final int N = 400;

    public static long instanceCount=-307709115L;
    public static float fFld=-2.884F;
    public int iFld=0;
    public static boolean[] bArrFld =new boolean[N];
    public static long[] lArrFld =new long[N];
    public static volatile float[] fArrFld =new float[N];
    public static volatile double[] dArrFld =new double[N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0650.bArrFld, true);
        FuzzerUtils.init(Test0650.lArrFld, -11L);
        FuzzerUtils.init(Test0650.fArrFld, 106.878F);
        FuzzerUtils.init(Test0650.dArrFld, 35.32348);
        FuzzerUtils.init(Test0650.sArrFld, (short) -57);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, long l3, int i7) {

        float f=1.72F;
        int i8=-5;
        int i9=5;
        int i10=-235;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, 232);

        Test0650.instanceCount = i7;
        f += i7;
        f *= i7;
        for (long l4 : Test0650.lArrFld) {
            for (i8 = 1; i8 < 4; i8++) {
                iArr[i8 - 1][i8 - 1] = i7;
            }
            i7 = (int)l4;
            i9 |= i8;
            i9 = i7;
            Test0650.lArrFld[(i8 >>> 1) % N] -= (long) -2.1019F;
            i10 = 1;
            do {
                i7 = (int)70.37660;
                l2 &= i8;
                i7 -= (int)l2;
                l4 <<= -48795;
            } while (++i10 < 4);
        }
        vMeth1_check_sum += l2 + l3 + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(long l, long l1, int i6) {

        int i11=84, i12=-56942;
        short s1=13814;

        vMeth1(Test0650.instanceCount, l1, i6);
        for (i11 = 14; i11 < 379; ++i11) {
            i6 -= (int)l1;
            i6 = (int) Test0650.instanceCount;
            i6 = i12;
            s1 <<= (short)-25377;
        }
        long meth_res = l + l1 + i6 + i11 + i12 + s1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i1) {

        int i2=168;
        int i3=0;
        int i4=-53;
        int i5=-11;
        int i13=-11;
        int i14=-47107;
        int[] iArr1 =new int[N];
        boolean b=false;
        short s=20713;
        double d=0.91621;

        FuzzerUtils.init(iArr1, 1616);

        for (i2 = 5; 141 > i2; i2++) {
            for (i4 = 1; i4 < 12; i4 += 3) {
                Test0650.bArrFld[i2 + 1] = b;
                s >>= (short) ((i5 * lMeth(Test0650.instanceCount, Test0650.instanceCount, i5)) * i3);
                d = i3;
                i5 -= i1;
            }
        }
        i1 += (int) Test0650.fFld;
        i1 &= i5;
        iArr1[(i5 >>> 1) % N] = i2;
        i1 *= i4;
        i1 += i5;
        for (i13 = 14; i13 < 293; ++i13) {
            b = b;
        }
        iArr1[(i4 >>> 1) % N] = (int) Test0650.instanceCount;
        i3 -= i4;
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) + s + Double.doubleToLongBits(d) + i13 + i14 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-56532, i15=41, i16=2629, i17=5, i18=30982, i19=-60, i20=-51, i21=117, i22=5, i23=-4;
        short s2=-28212;
        byte by=2;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 774039368L);

        i = (int) (((-(Test0650.instanceCount++)) + lArr[(i >>> 1) % N]) - ((i--) * (i * i)));
        vMeth(i);
        Test0650.instanceCount = s2;
        lArr[(i >>> 1) % N] = (long) Test0650.fFld;
        i *= i;
        switch ((((i >>> 1) % 1) * 5) + 45) {
        case 47:
            s2 = (short)56637L;
            Test0650.instanceCount = Test0650.instanceCount;
            for (i15 = 3; 270 > i15; ++i15) {
                Test0650.instanceCount += (((i15 * i15) + i) - i15);
                s2 -= (short)i16;
                if (false) break;
                Test0650.instanceCount += (long) Test0650.fFld;
                i16 += (int)1.478F;
                iFld += (((i15 * iFld) + i) - i);
                i = iFld;
            }
            break;
        }
        for (i17 = 2; i17 < 169; i17++) {
            i19 = 1;
            do {
                Test0650.instanceCount -= Test0650.instanceCount;
                i18 >>= -56933;
                i18 &= (int) Test0650.instanceCount;
            } while (++i19 < 150);
            i += i17;
            Test0650.sArrFld[i17] *= (short) i17;
            i20 = 1;
            while (++i20 < 150) {
                iFld += (i20 * i20);
            }
            i18 *= i;
            i21 = 1;
            while (++i21 < 150) {
                for (i22 = 1; 1 > i22; ++i22) {
                    i16 += s2;
                    by = (byte) Test0650.fFld;
                }
            }
        }

        FuzzerUtils.out.println("i s2 i15 = " + i + "," + s2 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 by = " + i22 + "," + i23 + "," + by);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0650.instanceCount Test0650.fFld iFld = " + Test0650.instanceCount + "," +
                Float.floatToIntBits(Test0650.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test0650.bArrFld Test0650.lArrFld Test0650.fArrFld = " + FuzzerUtils.checkSum(Test0650.bArrFld) + ","
                + FuzzerUtils.checkSum(Test0650.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0650.fArrFld)));
        FuzzerUtils.out.println("Test0650.dArrFld Test0650.sArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0650.dArrFld)) + "," + FuzzerUtils.checkSum(Test0650.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0650 _instance = new Test0650();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
