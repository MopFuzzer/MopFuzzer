// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:21 2023
public class Test0196 {

    public static final int N = 400;

    public static long instanceCount=4108300028L;
    public float fFld=10.971F;
    public short sFld=20751;
    public long[] lArrFld =new long[N];
    public short[][] sArrFld =new short[N][N];
    public static int[] iArrFld =new int[N];
    public static int[][] iArrFld1 =new int[N][N];
    public static long[] lArrFld1 =new long[N];

    static {
        FuzzerUtils.init(Test0196.iArrFld, 11258);
        FuzzerUtils.init(Test0196.iArrFld1, 0);
        FuzzerUtils.init(Test0196.lArrFld1, 2211137042219731612L);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i7) {


        Test0196.instanceCount = Test0196.instanceCount;
        long meth_res = i7;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth1(int i6) {

        int i8=9, i9=48786, i10=2, i11=71, i12=-50212, i13=-33565;
        float f1=88.66F, f2=84.854F;
        short s=-15340;
        boolean b=true;
        double d2=-117.20047;

        iMeth(i6);
        i8 = 1;
        while (++i8 < 214) {
            Test0196.iArrFld[i8 + 1] -= (int) Test0196.instanceCount;
            for (i9 = 1; i9 < 8; i9++) {
                Test0196.instanceCount = (long) f1;
                s &= (short) Test0196.instanceCount;
                for (i11 = 1; i11 < 2; ++i11) {
                    i12 -= i13;
                    i13 += (int)524634966L;
                    f2 += f2;
                    if (b) {
                        Test0196.iArrFld = FuzzerUtils.int1array(N, (int) 10);
                    } else if (b) {
                        i13 &= (int) Test0196.instanceCount;
                        if (b) continue;
                        i6 = (int)d2;
                    } else if (b) {
                        d2 += i10;
                    } else {
                        i13 = (int) Test0196.instanceCount;
                    }
                }
            }
        }
        long meth_res = i6 + i8 + i9 + i10 + Float.floatToIntBits(f1) + s + i11 + i12 + i13 + Float.floatToIntBits(f2)
            + (b ? 1 : 0) + Double.doubleToLongBits(d2);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth() {

        int i5=-60, i14=-10816, i15=-56123, i16=118, i17=166, i18=240;
        float f3=-58.969F;
        boolean b1=false;

        i5 = 1;
        do {
            Test0196.iArrFld[i5] >>= (int) lMeth1(i5);
            if (false) {
                i14 = i5;
                i14 = i5;
            }
            i14 += (((i5 * i5) + f3) - i5);
        } while (++i5 < 385);
        for (i15 = 6; i15 < 144; ++i15) {
            if (b1) {
                try {
                    i14 = (240 / Test0196.iArrFld1[i15 - 1][i15 + 1]);
                    i16 = (-14130 % Test0196.iArrFld[i15]);
                    i14 = (i14 % Test0196.iArrFld1[i15 - 1][i15 - 1]);
                } catch (ArithmeticException a_e) {}
                Test0196.iArrFld = Test0196.iArrFld;
            } else if (b1) {
                for (i17 = 1; i17 < 11; ++i17) {
                    Test0196.instanceCount = i14;
                    i14 += i17;
                    Test0196.lArrFld1 = Test0196.lArrFld1;
                    Test0196.iArrFld1[i17][i17] += 88;
                }
            } else {
                i14 += 13;
            }
        }
        long meth_res = i5 + i14 + Float.floatToIntBits(f3) + i15 + i16 + i17 + i18 + (b1 ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=63.176F, f4=-55.242F;
        int i=18590, i1=-59324, i2=126, i3=59866, i4=9118, i19=34634, i20=23911, i21=-21, i22=218, i23=6423;
        double d=-1.83247;
        double d1=-83.21992;
        double[] dArr =new double[N];
        byte by=55;
        boolean b2=true;

        FuzzerUtils.init(dArr, -1.18030);

        f *= (i--);
        Test0196.instanceCount += (lArrFld[(i >>> 1) % N] * (lArrFld[(1524 >>> 1) % N] * (i--)));
        sArrFld[(i >>> 1) % N][(i >>> 1) % N] -= (short)i;
        for (d = 14; d < 258; ++d) {
            i1 += (int)((long)d ^ (long)f);
            i2 = 1;
            while (++i2 < 103) {
                for (i3 = 1; i3 < 1; i3++) {
                    if (dArr[i3 - 1] < d) {
                        i1 >>>= 0;
                        f = Test0196.iArrFld[(int) (d - 1)];
                        i4 += i3;
                        Test0196.instanceCount += (long) (((i2 * 2.480F) + (i3 - f)) + (--Test0196.iArrFld[(int) (d - 1)]));
                    } else {
                        d1 *= i4;
                        i *= (int) ((i1 = (int) (55605 * Test0196.instanceCount)) * lMeth());
                        Test0196.iArrFld1 = Test0196.iArrFld1;
                        d1 -= f;
                    }
                }
            }
            i = (int) Test0196.instanceCount;
        }
        for (i19 = 12; 327 > i19; ++i19) {
            for (i21 = 1; i21 < 80; i21++) {
                Test0196.instanceCount = i21;
                for (f4 = 1; 2 > f4; f4++) {
                    fFld -= sFld;
                    i = (int)d1;
                    if (b2) {
                        i >>= by;
                        i23 *= (int) Test0196.instanceCount;
                        i22 += 250;
                    } else if (true) {
                        sArrFld[(int)(f4)] = sArrFld[i21 - 1];
                        Test0196.instanceCount <<= by;
                        i20 += (69 + (f4 * f4));
                    } else {
                        i1 += (int)f4;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i d = " + Float.floatToIntBits(f) + "," + i + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i4 d1 i19 = " + i4 + "," + Double.doubleToLongBits(d1) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("f4 i23 by = " + Float.floatToIntBits(f4) + "," + i23 + "," + by);
        FuzzerUtils.out.println("b2 dArr = " + (b2 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0196.instanceCount fFld sFld = " + Test0196.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + sFld);
        FuzzerUtils.out.println("lArrFld sArrFld Test0196.iArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(sArrFld) + "," + FuzzerUtils.checkSum(Test0196.iArrFld));
        FuzzerUtils.out.println("Test0196.iArrFld1 Test0196.lArrFld1 = " + FuzzerUtils.checkSum(Test0196.iArrFld1) + "," +
                FuzzerUtils.checkSum(Test0196.lArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0196 _instance = new Test0196();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
