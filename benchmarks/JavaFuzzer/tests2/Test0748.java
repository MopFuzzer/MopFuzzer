// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:47 2023
public class Test0748 {

    public static final int N = 400;

    public static long instanceCount=5165814803938023838L;
    public static byte byFld=-116;
    public static int iFld=53602;
    public static double[][] dArrFld =new double[N][N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0748.dArrFld, -1.65727);
        FuzzerUtils.init(Test0748.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i5) {

        int i6=83, i7=4, i8=-59, i9=-51049, i10=2, i11=134;
        float f=0.373F;
        long l1=-16442L;
        boolean b=false;

        i5 >>= i5;
        for (i6 = 7; i6 < 131; i6++) {
            Test0748.instanceCount /= (i6 | 1);
            i7 += (i6 ^ Test0748.instanceCount);
            i5 = -190;
            for (i8 = 13; i8 > 1; --i8) {
                i9 += (i8 - i5);
            }
            i5 += (int)f;
            f += (-8L + (i6 * i6));
            i9 = -46922;
            for (i10 = 1; i10 < 13; i10++) {
                if (b) {
                    Test0748.dArrFld[i10][i10 - 1] = l1;
                    l1 = -37819L;
                    l1 = i6;
                } else if (b) {
                    i7 -= -228;
                } else {
                    l1 ^= -5;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 + l1 + (b ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(long l, byte by, int i4) {

        int i12=-1722;
        int i13=-4;
        int i14=-223;
        int i15=-12;
        int[] iArr =new int[N];
        double d=1.49204, d1=1.26414;
        float f1=38.695F;
        long[] lArr =new long[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(lArr, -583345024L);
        FuzzerUtils.init(byArr, (byte)-23);

        switch ((((i4 *= i4) >>> 1) % 3) + 79) {
        case 79:
            i4 = (int) (Test0748.instanceCount -= lMeth(i4));
            i12 = 214;
            while (--i12 > 0) {
                for (i13 = 1; i13 < 8; ++i13) {
                    for (d = 1; 2 > d; d++) {
                        try {
                            i4 = (i4 / -50);
                            i15 = (iArr[i12 - 1] / i13);
                            i4 = (iArr[(int)(d + 1)] / -100);
                        } catch (ArithmeticException a_e) {}
                        l = Test0748.instanceCount;
                        lArr[(int)(d + 1)] += 14;
                        i15 <<= i14;
                        i15 -= i13;
                        i14 += (int)d;
                        f1 = f1;
                        i4 = i4;
                    }
                    i4 -= i13;
                }
                iArr = FuzzerUtils.int1array(N, (int)3972);
            }
            break;
        case 80:
            l = i14;
            break;
        case 81:
            l *= i4;
        default:
            d1 += i4;
        }
        vMeth1_check_sum += l + by + i4 + i12 + i13 + i14 + Double.doubleToLongBits(d) + i15 + Float.floatToIntBits(f1)
            + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i, int i1) {

        int i2=8, i3=-40513, i16=230, i17=14;
        float f2=109.742F;
        short s=2076;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, 3074391166833234400L);

        for (i2 = 5; 382 > i2; i2++) {
            i1 += i2;
            vMeth1(Test0748.instanceCount, Test0748.byFld, i2);
            switch ((i2 % 5) + 59) {
            case 59:
                for (i16 = 1; 4 > i16; ++i16) {
                    f2 += i;
                    lArr1[i2 - 1][i16] = (long)f2;
                    i -= (int)f2;
                }
                switch (((i1 >>> 1) % 1) + 123) {
                case 123:
                    Test0748.instanceCount += i2;
                }
                Test0748.instanceCount += (((i2 * i3) + i17) - Test0748.iFld);
                break;
            case 60:
                Test0748.instanceCount = Test0748.instanceCount;
                Test0748.instanceCount += 8;
                s |= (short) Test0748.instanceCount;
                break;
            case 61:
                Test0748.iArrFld[i2] = (int) 2416777571L;
            case 62:
                i = 246;
                break;
            case 63:
                i1 <<= 10;
                break;
            default:
                i = i2;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i16 + i17 + Float.floatToIntBits(f2) + s + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        float f3=0.831F;

        vMeth(Test0748.iFld, -64410);
        f3 -= -142;
        Test0748.iFld += Test0748.iFld;
        Test0748.iFld += Test0748.iFld;
        Test0748.iArrFld[(-1 >>> 1) % N] = 58;
        Test0748.iFld = (int) Test0748.instanceCount;

        FuzzerUtils.out.println("f3 = " + Float.floatToIntBits(f3));

        FuzzerUtils.out.println("Test0748.instanceCount Test0748.byFld Test0748.iFld = " + Test0748.instanceCount + "," + Test0748.byFld +
                "," + Test0748.iFld);
        FuzzerUtils.out.println("Test0748.dArrFld Test0748.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0748.dArrFld)) + "," + FuzzerUtils.checkSum(Test0748.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0748 _instance = new Test0748();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
