// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0383 {

    public static final int N = 400;

    public static long instanceCount=56536L;
    public int iFld=11005;
    public static float fFld=0.246F;
    public static boolean bFld=false;
    public static float[][] fArrFld =new float[N][N];
    public static int[] iArrFld =new int[N];
    public static int[][] iArrFld1 =new int[N][N];

    static {
        FuzzerUtils.init(Test0383.fArrFld, -2.932F);
        FuzzerUtils.init(Test0383.iArrFld, -35708);
        FuzzerUtils.init(Test0383.iArrFld1, 2);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {


        Test0383.instanceCount >>= Test0383.instanceCount;
        vMeth2_check_sum += 0;
    }

    public void vMeth1() {

        short s1=-15568;
        short[] sArr =new short[N];
        int i7=3, i8=-8;

        FuzzerUtils.init(sArr, (short)27817);

        vMeth2();
        iFld += s1;
        Test0383.fFld -= Test0383.instanceCount;
        i7 = 13;
        sArr[(iFld >>> 1) % N] = (short)150;
        i7 >>= iFld;
        i8 = 1;
        do {
            iFld = i7;
            iFld = i8;
            iFld = s1;
        } while (++i8 < 234);
        Test0383.fFld += iFld;
        i7 = i7;
        i7 = i8;
        Test0383.iArrFld[(i8 >>> 1) % N] = (int) 28733L;
        iFld >>= iFld;
        vMeth1_check_sum += s1 + i7 + i8 + FuzzerUtils.checkSum(sArr);
    }

    public void vMeth(int i3, int i4) {

        short s=2453;
        int i5=0, i6=-6, i9=23845, i10=238;

        Test0383.iArrFld[(91 >>> 1) % N] += ((i3 += (--i4)) - ((s + s) % ((i3 + i4) | 1)));
        for (i5 = 3; 172 > i5; i5++) {
            i3 += -22;
            vMeth1();
            Test0383.iArrFld = Test0383.iArrFld;
            Test0383.bFld = Test0383.bFld;
            for (i9 = 1; i9 < 9; i9++) {
                i6 += (i9 * i9);
                iFld = i3;
                iFld >>= i6;
                Test0383.instanceCount += Test0383.instanceCount;
                Test0383.bFld = Test0383.bFld;
                try {
                    i6 = (iFld % Test0383.iArrFld[i9 + 1]);
                    i3 = (144 % iFld);
                    iFld = (Test0383.iArrFld[i9 - 1] % -37769);
                } catch (ArithmeticException a_e) {}
                Test0383.instanceCount = 95L;
            }
            i3 |= i3;
        }
        vMeth_check_sum += i3 + i4 + s + i5 + i6 + i9 + i10;
    }

    public void mainTest(String[] strArr3) {

        int i1=-75, i11=-240, i12=-244, i13=8;
        double d=44.87622;
        byte by=15;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -220L);

        i1 = (int) (Test0383.fArrFld[(39 >>> 1) % N][(i1 >>> 1) % N]++);
        for (int i2 : Test0383.iArrFld) {
            i2 >>= i2;
            d *= (((i1 - i1) * -7) + (-i2));
            vMeth(-223, iFld);
            for (i11 = 1; i11 < 63; ++i11) {
                if (Test0383.bFld) break;
                Test0383.instanceCount += (i11 * i11);
                switch (((117 >>> 1) % 9) + 57) {
                case 57:
                    i2 *= i11;
                    i13 = 1;
                    while (++i13 < 2) {
                        Test0383.instanceCount -= Test0383.instanceCount;
                        d *= i2;
                        Test0383.bFld = Test0383.bFld;
                        lArr[i11 + 1] = (long)d;
                        i12 -= (int) Test0383.fFld;
                        Test0383.fFld = i12;
                        by = (byte)iFld;
                        Test0383.fFld += (((i13 * i2) + Test0383.instanceCount) - i12);
                        Test0383.iArrFld[i11] = i13;
                        i2 >>= (int) Test0383.instanceCount;
                    }
                    break;
                case 58:
                    i12 -= (int)-56057L;
                    Test0383.instanceCount += (0 + (i11 * i11));
                    Test0383.instanceCount = i11;
                case 59:
                    iFld += i11;
                    i2 = i13;
                    break;
                case 60:
                    i12 = i12;
                    Test0383.instanceCount -= -11;
                    i1 += i1;
                case 61:
                    i12 -= (int) Test0383.fFld;
                    break;
                case 62:
                    Test0383.instanceCount = iFld;
                    break;
                case 63:
                    Test0383.iArrFld1 = Test0383.iArrFld1;
                    break;
                case 64:
                    i2 >>= i12;
                    break;
                case 65:
                    Test0383.fFld = i1;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i1 d i11 = " + i1 + "," + Double.doubleToLongBits(d) + "," + i11);
        FuzzerUtils.out.println("i12 i13 by = " + i12 + "," + i13 + "," + by);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0383.instanceCount iFld Test0383.fFld = " + Test0383.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0383.fFld));
        FuzzerUtils.out.println("Test0383.bFld Test0383.fArrFld Test0383.iArrFld = " + (Test0383.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0383.fArrFld)) + "," + FuzzerUtils.checkSum(Test0383.iArrFld));
        FuzzerUtils.out.println("Test0383.iArrFld1 = " + FuzzerUtils.checkSum(Test0383.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0383 _instance = new Test0383();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
