// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:24 2023
public class Test0268 {

    public static final int N = 400;

    public static long instanceCount=3320217345540312639L;
    public static float fFld=-2.470F;
    public static short sFld=16167;
    public static volatile double dFld=-2.33249;
    public static int[][] iArrFld =new int[N][N];
    public double[][] dArrFld =new double[N][N];

    static {
        FuzzerUtils.init(Test0268.iArrFld, 4);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f1=7.503F;
        int i7=-60323, i8=-12, i9=-11130, i10=-23, i11=247, i12=242, i13=-6;

        Test0268.instanceCount = 22349;
        f1 = -73;
        i7 = i7;
        i7 = i7;
        f1 += -3791;
        i7 ^= i7;
        i7 *= 84;
        for (i8 = 8; i8 < 300; ++i8) {
            Test0268.instanceCount = (long) 1.90F;
            for (i10 = 1; i10 < 6; i10++) {
                for (i12 = 1; i12 < 2; ++i12) {
                    byte by=48;
                    switch ((i12 % 1) + 91) {
                    case 91:
                        Test0268.iArrFld[i10 - 1][i8 + 1] += i11;
                        i9 += (((i12 * Test0268.instanceCount) + i13) - by);
                        Test0268.instanceCount += i12;
                        break;
                    default:
                        Test0268.iArrFld[i8 + 1][i12] = 38531;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11 + i12 + i13;
    }

    public static void vMeth(long l, float f) {

        int i5=4549;
        int i6=-37831;
        int i14=152;
        int i15=38;
        int i16=181;
        int i17=55787;
        int[] iArr =new int[N];
        double d=30.50951;
        byte by1=-117;
        short[] sArr =new short[N];

        FuzzerUtils.init(sArr, (short)-28325);
        FuzzerUtils.init(iArr, -3155);

        for (i5 = 15; 257 > i5; ++i5) {
            sArr[i5 - 1] *= (short)i6;
            iArr[i5] = (int) ((--iArr[(254 >>> 1) % N]) + (++Test0268.instanceCount));
            vMeth1();
            for (i14 = i5; i14 < 7; ++i14) {
                Test0268.iArrFld[i14 - 1][i14] += (int) -2.248F;
                f += (i14 * i14);
                for (i16 = 1; i16 < 1; i16++) {
                    d = i5;
                    f += (-103.820F + (i16 * i16));
                    i17 += (i16 ^ Test0268.instanceCount);
                }
                Test0268.instanceCount += (0 + (i14 * i14));
                by1 += (byte)i5;
                i15 <<= (int)l;
                i15 = i15;
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + i5 + i6 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d) +
            by1 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i2=-53031, i3=2, i4=4;
        byte[] byArr =new byte[N];
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(byArr, (byte)-48);
        FuzzerUtils.init(lArr, -4L);

        i2 = (i2--);
        for (i3 = 8; i3 < 321; ++i3) {
            vMeth(-8L, Test0268.fFld);
            Test0268.iArrFld[i3][i3 - 1] >>>= -4618;
        }
        Test0268.iArrFld[(-872 >>> 1) % N][(39863 >>> 1) % N] = i2;
        for (byte by2 : byArr) {
            switch (((81 >>> 1) % 1) + 50) {
            case 50:
                Test0268.instanceCount = 187;
                try {
                    i2 = (71598796 / i2);
                    i4 = (208 / i3);
                    i4 = (i3 / 183);
                } catch (ArithmeticException a_e) {}
                break;
            }
            lArr[(i2 >>> 1) % N][(i2 >>> 1) % N] = 43854L;
        }
        long meth_res = i2 + i3 + i4 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=12;
        int i1=-6;
        int i18=47040;
        int i19=115;
        int i20=-12;
        int i22=-39;
        int i23=173;
        int i24=-37840;
        int i25=65;
        int i26=-216;
        int i27=26476;
        int[] iArr1 =new int[N];
        boolean b=false;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr1, 221);
        FuzzerUtils.init(lArr1, 12452L);

        i = ((i1++) - iMeth());
        if (b) {
            i = i1;
            i1 += i1;
            i18 = 1;
            while (++i18 < 174) {
                Test0268.fFld = i1;
                Test0268.instanceCount -= i;
                Test0268.iArrFld[i18 - 1][i18] = (int) Test0268.instanceCount;
                Test0268.sFld &= (short) 12;
                Test0268.instanceCount >>= i18;
                i += (int) Test0268.fFld;
                dArrFld[i18 + 1][i18] -= 4;
                for (i19 = 6; i19 < 144; i19++) {
                    i *= i18;
                }
            }
            i = i1;
        } else if (b) {
            for (int i21 : iArr1) {
                for (i22 = 1; 63 > i22; i22++) {
                    Test0268.instanceCount += i22;
                    Test0268.dFld += i;
                    i += (i22 * i22);
                    i21 += (-1 + (i22 * i22));
                    i /= (int)(i23 | 1);
                    i1 += (int) Test0268.instanceCount;
                }
                for (i24 = 63; i24 > 2; --i24) {
                    Test0268.iArrFld[i24 + 1][i24 - 1] = (int) Test0268.instanceCount;
                    Test0268.sFld |= (short) 238;
                    lArr1[i24 + 1] = Test0268.sFld;
                    for (i26 = 1; i26 < 2; i26++) {
                        i20 <<= (int) Test0268.instanceCount;
                        dArrFld[i26][i26] += Test0268.dFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i18 = " + i + "," + i1 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i22 = " + i19 + "," + i20 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 b = " + i26 + "," + i27 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("iArr1 lArr1 = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0268.instanceCount Test0268.fFld Test0268.sFld = " + Test0268.instanceCount + "," +
                Float.floatToIntBits(Test0268.fFld) + "," + Test0268.sFld);
        FuzzerUtils.out.println("Test0268.dFld Test0268.iArrFld dArrFld = " + Double.doubleToLongBits(Test0268.dFld) + "," +
                FuzzerUtils.checkSum(Test0268.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0268 _instance = new Test0268();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
