// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0453 {

    public static final int N = 400;

    public static long instanceCount=-22517588689654395L;
    public static boolean bFld=false;
    public static short sFld=6243;
    public static int iFld=-148;
    public static byte byFld=93;
    public static boolean bFld1=false;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2) {

        float f=-2.431F;
        int i3=-143;
        int i4=14;
        int i6=61579;
        int i7=-27519;
        int i8=9;
        int i9=4;
        int[] iArr =new int[N];
        byte by=73;
        double d1=104.128162;
        double d2=102.115903;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(dArr, -49.100159);

        f *= i2;
        for (i3 = 2; i3 < 219; ++i3) {
            i2 += i2;
        }
        i4 -= by;
        for (i6 = 12; i6 < 221; i6++) {
            Test0453.sFld += by;
        }
        dArr[(i3 >>> 1) % N][(-13 >>> 1) % N] *= d1;
        for (i8 = 22; i8 < 391; ++i8) {
            d2 *= f;
            d2 += i9;
            switch ((i8 % 1) + 42) {
            case 42:
                switch (((i8 >>> 1) % 2) + 56) {
                case 56:
                    i2 += i8;
                    break;
                case 57:
                    d2 *= Test0453.instanceCount;
                }
                break;
            default:
                Test0453.instanceCount *= i2;
            }
        }
        vMeth2_check_sum += i2 + Float.floatToIntBits(f) + i3 + i4 + by + i6 + i7 + Double.doubleToLongBits(d1) + i8 +
            i9 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1() {

        int i1=-11241;
        int i10=25938;
        int i11=29756;
        int i12=-114;
        int i13=110;
        int i14=-7551;
        int i15=100;
        int[] iArr1 =new int[N];
        short s=12792;
        float f1=0.265F, f2=2.833F;
        double d3=0.125250;

        FuzzerUtils.init(iArr1, -158);

        i1 = s;
        vMeth2(i1);
        for (f1 = 9; f1 < 392; f1++) {
            if (i1 != 0) {
                vMeth1_check_sum += i1 + s + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 +
                    Double.doubleToLongBits(d3) + Float.floatToIntBits(f2) + i14 + i15 + FuzzerUtils.checkSum(iArr1);
                return;
            }
            for (i11 = (int)(f1); i11 < 4; ++i11) {
                Test0453.bFld = Test0453.bFld;
                i13 = 1;
                do {
                    d3 += i10;
                    i10 += (i13 * i13);
                    try {
                        iArr1[i13 + 1] = (i12 / -140);
                        i1 = (-537070411 / i1);
                        i12 = (-441614643 / i13);
                    } catch (ArithmeticException a_e) {}
                    f2 += Test0453.instanceCount;
                    iArr1[i11 - 1] -= i10;
                } while (++i13 < 1);
            }
            for (i14 = 1; i14 < 4; i14++) {
                i10 -= i11;
                i12 <<= -100;
            }
        }
        vMeth1_check_sum += i1 + s + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d3) +
            Float.floatToIntBits(f2) + i14 + i15 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l) {

        int i=-71;
        int[] iArr2 =new int[N];
        double d=-1.72882;
        double[] dArr1 =new double[N];
        float f3=0.922F;

        FuzzerUtils.init(dArr1, -1.77429);
        FuzzerUtils.init(iArr2, 95);

        i = (int)(l + (i + (d++)));
        Test0453.bFld = (((-d) + Math.max(-6784342403442623290L, l)) < i);
        vMeth1();
        i = i;
        l -= i;
        Test0453.instanceCount *= 43672;
        i = i;
        if (true) {
            l += 16770L;
            i = (int)f3;
        }
        for (double d4 : dArr1) {
            iArr2[(i >>> 1) % N] = (int)f3;
            i >>= i;
            i <<= (int) Test0453.instanceCount;
            i = (int)f3;
        }
        vMeth_check_sum += l + i + Double.doubleToLongBits(d) + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        double d5=-2.90942;
        float f4=-1.621F;
        int i16=14;
        int i17=28;
        int i18=45029;
        int i19=132;
        int i20=19752;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, -59);

        vMeth(60301L);
        d5 = 1;
        do {
            Test0453.iFld += (int) (((d5 * Test0453.iFld) + f4) - Test0453.instanceCount);
            for (i16 = 5; i16 < 80; ++i16) {
                i17 <<= i17;
                Test0453.instanceCount += i17;
                for (i18 = i16; 2 > i18; ++i18) {
                    if (Test0453.bFld1) {
                        Test0453.byFld -= (byte) 88;
                        Test0453.iFld = i16;
                        Test0453.iFld += (i18 + Test0453.instanceCount);
                        iArr3[(int)(d5)] = i18;
                    } else {
                        switch (((i18 % 5) * 5) + 39) {
                        case 55:
                        case 59:
                            Test0453.byFld += (byte) i18;
                            break;
                        case 64:
                            f4 += Test0453.instanceCount;
                            Test0453.iFld >>>= i19;
                            switch ((i18 % 2) + 26) {
                            case 26:
                                i19 += (int)(0.202F + (i18 * i18));
                                i17 += (i18 * i18);
                                break;
                            case 27:
                                f4 += i18;
                                Test0453.sFld -= (short) Test0453.instanceCount;
                                break;
                            default:
                                i17 += (-57641 + (i18 * i18));
                                Test0453.iFld <<= i19;
                                i19 *= i16;
                            }
                            break;
                        case 63:
                            f4 = i20;
                            f4 = -51;
                            i17 += (i18 * i18);
                            break;
                        case 58:
                            Test0453.iFld = i17;
                            if (Test0453.bFld) continue;
                            iArr3 = iArr3;
                        default:
                            f4 = -36413;
                        }
                    }
                }
            }
        } while (++d5 < 316);

        FuzzerUtils.out.println("d5 f4 i16 = " + Double.doubleToLongBits(d5) + "," + Float.floatToIntBits(f4) + "," +
            i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 iArr3 = " + i20 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0453.instanceCount Test0453.bFld Test0453.sFld = " + Test0453.instanceCount + "," + (Test0453.bFld ? 1
                : 0) + "," + Test0453.sFld);
        FuzzerUtils.out.println("Test0453.iFld Test0453.byFld Test0453.bFld1 = " + Test0453.iFld + "," + Test0453.byFld + "," + (Test0453.bFld1
            ? 1 : 0));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0453 _instance = new Test0453();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
