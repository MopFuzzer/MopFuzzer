// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0564 {

    public static final int N = 400;

    public static long instanceCount=-224L;
    public static double dFld=64.68430;
    public static short sFld=-8515;
    public static boolean bFld=false;
    public static float fFld=-79.373F;
    public static byte[] byArrFld =new byte[N];
    public int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0564.byArrFld, (byte) -42);
        FuzzerUtils.init(Test0564.fArrFld, 19.64F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4) {

        int i5=123;
        int i6=-29;
        int i7=5442;
        int i8=37870;
        int i9=-85;
        int[] iArr =new int[N];
        long l2=10L;
        long[] lArr =new long[N];
        byte by=64;
        float f=-1.445F;

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(lArr, -3645451843L);

        i5 &= 178;
        for (i6 = 3; i6 < 236; i6++) {
            i5 += (((i6 * i5) + Test0564.instanceCount) - i5);
            l2 = 7;
            do {
                by *= (byte)l2;
                for (i8 = 1; i8 > 1; --i8) {
                    switch ((int)((l2 % 8) + 92)) {
                    case 92:
                        iArr[i8] *= i7;
                        Test0564.fArrFld = Test0564.fArrFld;
                        Test0564.instanceCount += i8;
                        iArr[i6] <<= 4;
                    case 93:
                        i7 += (((i8 * f) + f) - Test0564.instanceCount);
                        i4 += i8;
                    case 94:
                        i4 = i6;
                        i9 += i8;
                        break;
                    case 95:
                        by += (byte) Test0564.dFld;
                        break;
                    case 96:
                        i9 -= 64483;
                        break;
                    case 97:
                        Test0564.sFld *= (short) -40980;
                        break;
                    case 98:
                        lArr[i6 + 1] = Test0564.instanceCount;
                        break;
                    case 99:
                        f += f;
                        break;
                    }
                }
            } while (--l2 > 0);
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + l2 + by + i8 + i9 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i2, int i3, long l1) {


        vMeth2(-42437);
        vMeth1_check_sum += i2 + i3 + l1;
    }

    public static void vMeth(double d1, long l, double d2) {

        int i1=16891;

        Test0564.instanceCount = i1;
        vMeth1(i1, i1, l);
        Test0564.bFld = Test0564.bFld;
        vMeth_check_sum += Double.doubleToLongBits(d1) + l + Double.doubleToLongBits(d2) + i1;
    }

    public void mainTest(String[] strArr1) {

        int i=11, i10=3, i11=-50670, i12=0, i13=-45060, i14=55, i15=60720;
        double d=0.62699;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -3750048079L);

        Test0564.byArrFld[(i >>> 1) % N] = (byte) i;
        i = (int)(((--i) + (iArrFld[(i >>> 1) % N] *= (int)d)) + (++iArrFld[(i >>> 1) % N]));
        vMeth(d, Test0564.instanceCount, Test0564.dFld);
        iArrFld[(i >>> 1) % N] = i;
        for (i10 = 4; i10 < 228; i10++) {
            i11 += (((i10 * i10) + i10) - Test0564.fFld);
            i += i10;
            i11 += i10;
            i12 = 1;
            do {
                i13 = 1;
                do {
                    lArr1[i13 - 1] >>= i12;
                    Test0564.fArrFld[i10 + 1] -= Test0564.instanceCount;
                    i11 += (-22 + (i13 * i13));
                } while ((i13 += 2) < 1);
                for (i14 = i12; i14 < 1; ++i14) {
                    i15 += (((i14 * Test0564.fFld) + i14) - i15);
                    i15 = i13;
                    Test0564.fFld += Test0564.sFld;
                    i11 = i11;
                    Test0564.instanceCount >>= i15;
                    i <<= i10;
                    i11 <<= (int) Test0564.instanceCount;
                    Test0564.instanceCount += (long) (-66.378F + (i14 * i14));
                    switch (((i10 % 6) * 5) + 95) {
                    case 115:
                        Test0564.dFld = i15;
                        i15 = -157;
                        break;
                    case 114:
                        i15 += i15;
                        Test0564.bFld = false;
                        i11 += (28816 + (i14 * i14));
                        break;
                    case 106:
                        Test0564.instanceCount = i14;
                        iArrFld[i14 - 1] = (int) Test0564.instanceCount;
                        break;
                    case 124:
                        i += (((i14 * i14) + i13) - i);
                        break;
                    case 103:
                        Test0564.instanceCount -= Test0564.sFld;
                        break;
                    case 117:
                        iArrFld[i10] -= (int)-3029361012L;
                        break;
                    default:
                        i11 = (int) Test0564.instanceCount;
                    }
                }
            } while (++i12 < 112);
        }

        FuzzerUtils.out.println("i d i10 = " + i + "," + Double.doubleToLongBits(d) + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 lArr1 = " + i14 + "," + i15 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0564.instanceCount Test0564.dFld Test0564.sFld = " + Test0564.instanceCount + "," +
                Double.doubleToLongBits(Test0564.dFld) + "," + Test0564.sFld);
        FuzzerUtils.out.println("Test0564.bFld Test0564.fFld Test0564.byArrFld = " + (Test0564.bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0564.fFld) + "," + FuzzerUtils.checkSum(Test0564.byArrFld));
        FuzzerUtils.out.println("iArrFld Test0564.fArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0564.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0564 _instance = new Test0564();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
