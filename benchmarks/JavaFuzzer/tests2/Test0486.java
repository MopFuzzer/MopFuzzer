// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0486 {

    public static final int N = 400;

    public static long instanceCount=57744L;
    public static long lFld=31603L;
    public static short[] sArrFld =new short[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0486.sArrFld, (short) 30175);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, byte by1) {

        int i4=215;
        int i5=-47888;
        int i6=-12;
        int i7=9;
        int[] iArr1 =new int[N];
        boolean b=false;
        double d=0.72776;
        short s=18986;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, -5);
        FuzzerUtils.init(fArr, -48.164F);

        i3 += (int) Test0486.instanceCount;
        iArr1[(i3 >>> 1) % N] = (int) Test0486.instanceCount;
        for (i4 = 12; 233 > i4; i4++) {
            if (b) continue;
            i6 = 1;
            do {
                for (d = 1; d < 1; d++) {
                    switch (((i4 % 10) * 5) + 109) {
                    case 145:
                        try {
                            i7 = (i5 % iArr1[i4 - 1]);
                            i5 = (i4 % -200);
                            iArr1[(int)(d + 1)] = (-51 % i7);
                        } catch (ArithmeticException a_e) {}
                        iArr1[(int)(d + 1)] %= (int)(i3 | 1);
                        i7 = by1;
                        fArr = fArr;
                        break;
                    case 115:
                        i7 -= i3;
                        Test0486.instanceCount += i6;
                        i7 *= (int)80L;
                        break;
                    case 121:
                        i5 = -114;
                        break;
                    case 139:
                        try {
                            iArr1[(int)(d)] = (i6 / 127);
                            i7 = (i7 % i6);
                            i7 = (i7 % -13870);
                        } catch (ArithmeticException a_e) {}
                    case 143:
                        s += (short)(d - s);
                        break;
                    case 124:
                        by1 += (byte)d;
                        break;
                    case 120:
                        i3 -= i7;
                        break;
                    case 116:
                        i7 >>= i6;
                        break;
                    case 144:
                    case 142:
                        i7 += (int)(d * d);
                        break;
                    default:
                        try {
                            i7 = (i3 / 8220);
                            i5 = (i4 / 1280989601);
                            i3 = (iArr1[i6 - 1] / -1073892167);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            } while (++i6 < 7);
        }
        long meth_res = i3 + by1 + i4 + i5 + (b ? 1 : 0) + i6 + Double.doubleToLongBits(d) + i7 + s +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(byte by) {

        float f=26.590F;
        int i2=5;
        int i8=-138;
        int i9=-3;
        int i10=28884;
        int i11=3;
        int[] iArr =new int[N];
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, 2);
        FuzzerUtils.init(lArr, 2105990803L);

        f *= (Math.min(i2--, iArr[(i2 >>> 1) % N]) % (((long)((++f) - (-12 | i2))) | 1));
        i2 *= iMeth(-44931, by);
        if (false) {
            i8 = 1;
            do {
                f = i8;
                Test0486.instanceCount += (((i8 * i2) + i2) - Test0486.instanceCount);
            } while (++i8 < 370);
            Test0486.lFld = i2;
            i9 = 1;
            while (++i9 < 195) {
                Test0486.instanceCount -= Test0486.lFld;
                if (b1) {
                    iArr[i9 - 1] += 0;
                    i2 = i2;
                    for (i10 = 1; i10 < 8; i10++) {
                        lArr[i10] -= 8;
                        i2 = (int) Test0486.lFld;
                    }
                } else {
                    by += (byte)-65240;
                }
            }
        }
        vMeth1_check_sum += by + Float.floatToIntBits(f) + i2 + i8 + i9 + i10 + i11 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l) {

        int i=179, i1=240;

        for (i = 5; i < 142; ++i) {
            vMeth1((byte)(-49));
        }
        i1 = i1;
        vMeth_check_sum += l + i + i1;
    }

    public void mainTest(String[] strArr1) {

        int i12=2;
        int i13=-11;
        int i14=18651;
        int i15=78;
        int i16=-198;
        int i17=-89;
        int i18=8;
        int i19=2;
        int i20=6;
        int i21=-100;
        int i22=-145;
        int[] iArr2 =new
                    int[N];
        byte by2=-58;
        float f1=1.928F;
        short s1=31892;
        boolean b2=true;
        double d1=-127.75635;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr2, 25977);
        FuzzerUtils.init(dArr, 0.18619);

        vMeth(0L);
        i12 = 1;
        do {
            i13 += (i12 ^ by2);
        } while (++i12 < 132);
        switch ((((-18 >>> 1) % 8) * 5) + 98) {
        case 107:
            for (i14 = 4; i14 < 262; ++i14) {
                Test0486.instanceCount = Test0486.instanceCount;
                for (f1 = 2; 97 > f1; f1++) {
                    Test0486.instanceCount += i16;
                    i13 = s1;
                    i16 = 37880;
                    for (i17 = 2; f1 < i17; --i17) {
                        Test0486.lFld &= s1;
                        Test0486.instanceCount += (i17 * i15);
                        Test0486.instanceCount >>= i15;
                        iArr2[(i18 >>> 1) % N] = -9;
                        Test0486.instanceCount >>>= s1;
                        Test0486.lFld += (-3 + (i17 * i17));
                    }
                    i15 = (int)47.79003;
                    for (i19 = 2; i19 > 1; --i19) {
                        if (b2) break;
                        d1 = i13;
                        i18 = (int) Test0486.lFld;
                        b2 = b2;
                    }
                    i20 += (int)(f1 * i17);
                    if (b2) {
                        for (i21 = 1; i21 < 2; i21 += 3) {
                            i16 += i15;
                            Test0486.lFld += i13;
                            i15 += (int) Test0486.instanceCount;
                            i16 += (int)-11L;
                        }
                    } else {
                        Test0486.sArrFld = FuzzerUtils.short1array(N, (short) -2420);
                    }
                }
            }
            break;
        case 136:
            i13 = i22;
            break;
        case 131:
            i20 = i20;
            break;
        case 105:
            lArrFld[(i21 >>> 1) % N] >>= s1;
            break;
        case 124:
            iArr2[(i22 >>> 1) % N] = (int) Test0486.instanceCount;
        case 129:
            iArr2[(50852 >>> 1) % N] += i22;
            break;
        case 101:
            i22 *= by2;
            break;
        case 113:
            iArr2[(i15 >>> 1) % N] = 47913;
        default:
            iArr2[(i16 >>> 1) % N] = (int)f1;
        }

        FuzzerUtils.out.println("i12 i13 by2 = " + i12 + "," + i13 + "," + by2);
        FuzzerUtils.out.println("i14 i15 f1 = " + i14 + "," + i15 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i16 s1 i17 = " + i16 + "," + s1 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("b2 d1 i21 = " + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d1) + "," + i21);
        FuzzerUtils.out.println("i22 iArr2 dArr = " + i22 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0486.instanceCount Test0486.lFld Test0486.sArrFld = " + Test0486.instanceCount + "," + Test0486.lFld +
                "," + FuzzerUtils.checkSum(Test0486.sArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0486 _instance = new Test0486();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
