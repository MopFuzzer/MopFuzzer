// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:15 2023
public class Test0069 {

    public static final int N = 400;

    public static volatile long instanceCount=-7L;
    public static short sFld=-31113;
    public static boolean bFld=true;
    public static int[] iArrFld =new int[N];
    public static double[] dArrFld =new double[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0069.iArrFld, 3);
        FuzzerUtils.init(Test0069.dArrFld, 66.92542);
        FuzzerUtils.init(Test0069.lArrFld, 3072137686L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=-27012, i3=5, i4=59932, i5=0, i6=-42945;
        float f=-2.324F;
        double d=122.111753;
        long l=128L;

        for (i2 = 232; i2 > 9; --i2) {
            f += (((i2 * Test0069.sFld) + f) - i3);
            Test0069.iArrFld[i2] = Test0069.sFld;
            for (i4 = 1; i4 < 7; ++i4) {
                if (Test0069.bFld) {
                    if (i4 != 0) {
                        vMeth2_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + Double.doubleToLongBits(d) +
                            l + i6;
                        return;
                    }
                    Test0069.instanceCount *= Test0069.instanceCount;
                    vMeth2_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + Double.doubleToLongBits(d) + l +
                        i6;
                    return;
                } else {
                    i3 >>>= (int) Test0069.instanceCount;
                    switch ((i2 % 1) + 38) {
                    case 38:
                        d = i3;
                        break;
                    }
                }
                switch ((i4 % 2) + 46) {
                case 46:
                    Test0069.instanceCount += i4;
                    for (l = 2; l > 1; --l) {
                        Test0069.dArrFld[i2] = i3;
                        d -= f;
                    }
                    break;
                case 47:
                    i5 += i4;
                    break;
                default:
                    Test0069.instanceCount <<= i3;
                }
            }
        }
        vMeth2_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + Double.doubleToLongBits(d) + l + i6;
    }

    public static void vMeth1() {

        int i7=-11, i8=-10, i9=7, i10=3, i11=8, i12=-10578, i13=24127, i14=-13;
        double d1=0.57274;

        vMeth2();
        for (i7 = 19; i7 < 344; ++i7) {
            i8 = i7;
            Test0069.iArrFld[i7] = i7;
            for (i9 = 1; i9 < 5; i9++) {
                i10 = (int) Test0069.instanceCount;
                for (i11 = 1; i11 < 2; i11++) {
                    i8 = -13;
                    d1 += -11;
                    i10 -= Test0069.sFld;
                }
                i12 = i12;
                for (i13 = 1; 2 > i13; i13++) {
                    Test0069.instanceCount = i11;
                    Test0069.instanceCount >>= Test0069.sFld;
                    d1 = 39;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14;
    }

    public static void vMeth(byte by1) {

        int i15=12, i16=-1, i17=-175, i18=-11;
        float f1=-86.636F;
        long l1=-13L;

        vMeth1();
        i15 = 1;
        do {
            i16 |= (int) Test0069.instanceCount;
            Test0069.lArrFld[i15 - 1] = i16;
            Test0069.instanceCount = i16;
        } while (++i15 < 168);
        i16 ^= i16;
        i16 += i16;
        i16 >>>= (int) Test0069.instanceCount;
        f1 += i15;
        l1 = 1;
        while (++l1 < 142) {
            i16 ^= (int) Test0069.instanceCount;
            if (false) {
                for (i17 = 11; 1 < i17; i17--) {
                    i18 = Test0069.sFld;
                    i16 -= -2;
                }
            } else if (Test0069.bFld) {
                i18 = (int)l1;
            } else {
                i16 += (-193 + (l1 * l1));
            }
        }
        vMeth_check_sum += by1 + i15 + i16 + Float.floatToIntBits(f1) + l1 + i17 + i18;
    }

    public void mainTest(String[] strArr1) {

        int i=-3103, i1=-1, i19=13, i20=-6, i21=26, i22=6, i23=189, i24=-5677, i25=-55927, i26=112;
        short s=-15466;
        long l2=-60912L;
        double d2=62.112234;
        float f2=1.263F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 0.827F);

        try {
            for (i = 9; i < 378; ++i) {
                byte by=-65;
                by *= (byte)s;
                i1 += (i1--);
                Test0069.instanceCount += (i | Test0069.instanceCount);
                vMeth(by);
                for (i19 = 3; i19 < 68; i19++) {
                    Test0069.iArrFld[i - 1] = i1;
                    i20 %= (int) (Test0069.instanceCount | 1);
                    i1 = i20;
                }
                i21 = 68;
                while (--i21 > 0) {
                    fArr[i21 + 1] /= (Test0069.instanceCount | 1);
                    l2 = 1;
                    do {
                        Test0069.instanceCount = i19;
                    } while (++l2 < 1);
                    d2 += 4;
                    i1 ^= i19;
                    i22 = 1;
                    while (++i22 < 1) {
                        i20 += (((i22 * f2) + f2) - i19);
                    }
                    Test0069.iArrFld[i + 1] &= i21;
                    i1 += i22;
                    Test0069.bFld = Test0069.bFld;
                    for (i23 = 1; i23 < 1; i23++) {
                        i20 = i19;
                        i20 *= (int)l2;
                        if (true) break;
                        Test0069.instanceCount -= i20;
                    }
                    for (i25 = 1; i25 < 1; i25++) {
                        i20 += i25;
                        i26 >>>= -8470;
                        Test0069.lArrFld[i25 + 1] = -36280;
                    }
                }
            }
        }
        catch (NegativeArraySizeException exc1) {
            d2 -= i26;
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("l2 d2 i22 = " + l2 + "," + Double.doubleToLongBits(d2) + "," + i22);
        FuzzerUtils.out.println("f2 i23 i24 = " + Float.floatToIntBits(f2) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 fArr = " + i25 + "," + i26 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0069.instanceCount Test0069.sFld Test0069.bFld = " + Test0069.instanceCount + "," + Test0069.sFld +
                "," + (Test0069.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0069.iArrFld Test0069.dArrFld Test0069.lArrFld = " + FuzzerUtils.checkSum(Test0069.iArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0069.dArrFld)) + "," + FuzzerUtils.checkSum(Test0069.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0069 _instance = new Test0069();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
