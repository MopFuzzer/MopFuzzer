// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0612 {

    public static final int N = 400;

    public static long instanceCount=-50L;
    public static double dFld=2.33480;
    public short sFld=-12437;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4) {

        float f1=55.618F;
        int i5=-11486;

        f1 = i4;
        i5 = 1;
        do {
            Test0612.instanceCount -= i5;
            try {
                i4 = (i5 % i4);
                i4 = (i5 / -18748);
                i4 = (i5 % i5);
            } catch (ArithmeticException a_e) {}
            f1 += f1;
            i4 -= i5;
        } while (++i5 < 143);
        f1 = i5;
        Test0612.instanceCount -= i5;
        f1 *= i4;
        i4 = i5;
        vMeth2_check_sum += i4 + Float.floatToIntBits(f1) + i5;
    }

    public static void vMeth1(int i2, int i3) {

        int i6=-227;
        int i7=-2943;
        int i8=-12;
        int i9=74;
        int[] iArr1 =new int[N];
        float f3=2.1008F;
        boolean b=true;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr1, -140);
        FuzzerUtils.init(lArr, -248L);

        iArr1[(i2 >>> 1) % N] -= i2;
        vMeth2(i3);
        for (i6 = 14; i6 < 397; ++i6) {
            float f2=98.215F;
            f2 += (i6 + i3);
            try {
                iArr1[i6 - 1] = (i7 % 1353561453);
                i3 = (i2 / -128);
                i2 = (iArr1[i6 - 1] / i7);
            } catch (ArithmeticException a_e) {}
            iArr1[i6] = i7;
        }
        i2 = (int)f3;
        for (i8 = 3; i8 < 262; i8++) {
            Test0612.dFld = Test0612.instanceCount;
            lArr[i8] = lArr[i8];
            i7 = i9;
            Test0612.dFld = Test0612.instanceCount;
            if (true) {
                b = b;
            } else if (b) {
                if (i6 != 0) {
                    vMeth1_check_sum += i2 + i3 + i6 + i7 + Float.floatToIntBits(f3) + i8 + i9 + (b ? 1 : 0) +
                        FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
                    return;
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i6 + i7 + Float.floatToIntBits(f3) + i8 + i9 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f, int i1, long l) {

        byte by=122;
        int i10=-1528;
        int i11=0;
        int i12=-50039;
        int i13=14;
        int i14=-1;
        int i15=-9;
        int[] iArr =new int[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(iArr, 153);
        FuzzerUtils.init(lArr1, 6526637992074831830L);

        i1 = (-32628 + i1);
        l ^= Test0612.instanceCount;
        l = iArr[(i1 >>> 1) % N];
        vMeth1(14, i1);
        i1 += by;
        lArr1[(i1 >>> 1) % N] = (long)f;
        iArr[(-8 >>> 1) % N] -= i1;
        for (i10 = 7; 160 > i10; ++i10) {
            for (i12 = 1; i12 < 10; i12++) {
                switch ((i10 % 2) + 101) {
                case 101:
                    i1 >>= by;
                    for (i14 = i10; i14 < 2; i14++) {
                        iArr[i12 + 1] = 10498;
                        i15 *= (int) Test0612.dFld;
                        i15 = i11;
                    }
                case 102:
                    f *= 202L;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + l + by + i10 + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=27;
        int i16=20071;
        int i17=-13;
        int i18=-13;
        int i19=-52;
        int i20=-8;
        int i21=-6664;
        int i22=15780;
        int[] iArr2 =new int[N];
        float f4=-1.392F;
        boolean b1=true;
        byte by1=11;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(lArr2, -2788740107488223225L);
        FuzzerUtils.init(iArr2, -66);

        i <<= (++i);
        vMeth(1.667F, i, Test0612.instanceCount);
        i16 = 1;
        while (++i16 < 272) {
            i = i16;
            i += (((i16 * f4) + i16) - i16);
            f4 = f4;
            i17 = 1;
            do {
                lArr2[i17] = Test0612.instanceCount;
                for (i18 = i16; i18 < 4; ++i18) {
                    b1 = b1;
                }
                i19 -= (int) Test0612.instanceCount;
                for (i20 = 1; i20 < 4; i20++) {
                    iArr2[(8 >>> 1) % N] = i16;
                    Test0612.instanceCount *= Test0612.instanceCount;
                    iArr2[i20 - 1] -= sFld;
                    if (b1) {
                        f4 *= Test0612.instanceCount;
                        iArr2[i17 - 1] += i;
                    } else {
                        f4 -= i20;
                        i19 = i16;
                        Test0612.instanceCount = i19;
                    }
                    i19 >>>= (int) Test0612.instanceCount;
                    i19 += (12 + (i20 * i20));
                    i = (int) Test0612.instanceCount;
                }
                i22 = 1;
                while (++i22 < 4) {
                    sFld = (short)i;
                    i21 *= (int)f4;
                    i19 = (int) Test0612.instanceCount;
                    i19 = i19;
                    by1 += (byte)sFld;
                }
            } while ((i17 += 3) < 92);
        }

        FuzzerUtils.out.println("i i16 f4 = " + i + "," + i16 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("b1 i20 i21 = " + (b1 ? 1 : 0) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 by1 lArr2 = " + i22 + "," + by1 + "," + FuzzerUtils.checkSum(lArr2));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0612.instanceCount Test0612.dFld sFld = " + Test0612.instanceCount + "," +
                Double.doubleToLongBits(Test0612.dFld) + "," + sFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0612 _instance = new Test0612();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
