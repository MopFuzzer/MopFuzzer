// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:58 2023
public class Test0986 {

    public static final int N = 400;

    public static long instanceCount=21286L;
    public static short sFld=22320;
    public static byte byFld=125;
    public static int[] iArrFld =new int[N];
    public int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0986.iArrFld, 0);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, int i5) {

        long l=-449151009L;
        int i6=-111, i7=106, i8=14, i9=5, i10=-124, i11=-9, i12=1;
        float f2=124.88F, f3=2.895F;
        short s=16861;

        for (l = 8; l < 227; l++) {
            for (f2 = 7; f2 > 1; f2 -= 2) {
                for (i8 = 1; i8 < 3; i8++) {
                    i4 = (int)1524452523L;
                }
                Test0986.iArrFld[(int) (l)] &= i5;
                if (i8 != 0) {
                }
            }
            Test0986.iArrFld[(int) (l)] *= i4;
            i4 += (int) Test0986.instanceCount;
            f3 += f2;
        }
        i10 = 1;
        do {
            i4 += (((i10 * i9) + i6) - s);
            i6 = i4;
            for (i11 = i10; i11 < 7; i11++) {
                i4 += i10;
                Test0986.iArrFld[i11 - 1] = i4;
            }
        } while (++i10 < 228);
        long meth_res = i4 + i5 + l + i6 + Float.floatToIntBits(f2) + i7 + i8 + i9 + Float.floatToIntBits(f3) + i10 + s
            + i11 + i12;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i3=5, i13=7841, i14=-52643, i15=-28586, i16=1, i17=-14, i18=-12, i19=-2;
        float f4=-21.128F;

        i3 |= (int) (-((i3 + Test0986.instanceCount) + (Test0986.instanceCount + i3)));
        Test0986.instanceCount >>= Test0986.instanceCount;
        i3 += iMeth(i3, i3);
        i3 = 9644;
        for (i13 = 8; i13 < 199; i13++) {
            for (i15 = i13; i15 < 8; ++i15) {
                for (i17 = i15; 1 > i17; i17++) {
                    if (true) break;
                }
                Test0986.iArrFld[i15] += i15;
                if (i16 != 0) {
                    vMeth_check_sum += i3 + i13 + i14 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f4) + i19;
                    return;
                }
                i14 *= i3;
                f4 *= i13;
            }
            i18 -= i18;
            Test0986.iArrFld[i13 - 1] = i19;
            i3 >>= (int)2L;
        }
        vMeth_check_sum += i3 + i13 + i14 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f4) + i19;
    }

    public static long lMeth() {

        int i1=-53712, i2=66, i20=-44040, i21=-63343;
        double d=52.50306;
        float f5=-74.250F;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 0.941F);
        FuzzerUtils.init(lArr, -8L);

        for (float f1 : fArr) {
            for (i1 = 1; i1 < 4; i1++) {
                i2 >>>= Test0986.iArrFld[i1 + 1];
                i2 = (i2--);
                i2 = (int) (Test0986.instanceCount++);
                lArr[i1 - 1] <<= (((Test0986.instanceCount++) + (-247 - Test0986.iArrFld[i1 - 1])) - ((-37357 -
                        (Test0986.iArrFld[(i1 >>> 1) % N]++)) - (--Test0986.instanceCount)));
            }
            vMeth();
        }
        fArr[(i2 >>> 1) % N] = (float)d;
        Test0986.instanceCount = -4192938426784835118L;
        f5 -= i2;
        i2 += 36;
        for (i20 = 11; i20 < 278; i20++) {
            fArr[i20] = (float)d;
        }
        d += i20;
        d += i21;
        long meth_res = i1 + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f5) + i20 + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=59.696F;
        int i=-19866, i22=155, i23=10, i24=3, i25=177, i26=212, i27=184;
        double d1=0.3437;
        double[] dArr =new double[N];
        long l1=3112512231L;
        boolean b=true;

        FuzzerUtils.init(dArr, -12.22799);

        f = (((1992746353L - (++i)) % ((Test0986.iArrFld[(7 >>> 1) % N]--) | 1)) - (-143 - (-8L - lMeth())));
        for (i22 = 311; 12 < i22; i22 -= 2) {
            i24 = 1;
            while (++i24 < 168) {
                try {
                    i23 = (125 % i24);
                    i23 = (Test0986.iArrFld[i24 + 1] / Test0986.iArrFld[i24]);
                    i = (i % Test0986.iArrFld[i22 + 1]);
                } catch (ArithmeticException a_e) {}
                i25 = 1;
                while (++i25 < 1) {
                    byte by=75;
                    switch ((i25 % 1) + 95) {
                    case 95:
                        d1 = 9;
                        i += i;
                        Test0986.instanceCount += (i25 + Test0986.instanceCount);
                    }
                    i23 = i22;
                    i23 %= 132;
                    d1 -= Test0986.instanceCount;
                    by += (byte) (((i25 * Test0986.instanceCount) + by) - i23);
                }
                Test0986.iArrFld[i24] >>= i;
                i -= Test0986.sFld;
                try {
                    Test0986.iArrFld[i22] = (-30 / i);
                    i23 = (i22 / Test0986.iArrFld[i22 + 1]);
                    i = (50153 / i);
                } catch (ArithmeticException a_e) {}
                i <<= Test0986.byFld;
                for (i26 = 1; i26 < 1; ++i26) {
                    if (b) {
                        Test0986.instanceCount -= (long) d1;
                        iArrFld1[i26] *= Test0986.sFld;
                        Test0986.iArrFld[i26 + 1] *= i22;
                        l1 = i23;
                    } else if (b) {
                        Test0986.byFld += (byte) i26;
                        i += (i26 + i);
                    } else {
                        i27 = i27;
                        i27 = Test0986.sFld;
                        Test0986.iArrFld = iArrFld1;
                        dArr[i24 - 1] -= l1;
                    }
                    i23 += (((i26 * i24) + l1) - i25);
                }
            }
        }

        FuzzerUtils.out.println("f i i22 = " + Float.floatToIntBits(f) + "," + i + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("d1 i26 i27 = " + Double.doubleToLongBits(d1) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("l1 b dArr = " + l1 + "," + (b ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0986.instanceCount Test0986.sFld Test0986.byFld = " + Test0986.instanceCount + "," + Test0986.sFld +
                "," + Test0986.byFld);
        FuzzerUtils.out.println("Test0986.iArrFld iArrFld1 = " + FuzzerUtils.checkSum(Test0986.iArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0986 _instance = new Test0986();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
