// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0887 {

    public static final int N = 400;

    public static long instanceCount=-248L;
    public static volatile double dFld=-89.93841;
    public static short sFld=914;
    public static short[] sArrFld =new short[N];
    public static int[] iArrFld =new int[N];
    public static long[][] lArrFld =new long[N][N];

    static {
        FuzzerUtils.init(Test0887.sArrFld, (short) -26730);
        FuzzerUtils.init(Test0887.iArrFld, 219);
        FuzzerUtils.init(Test0887.lArrFld, 27286L);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i9, long l, long l1) {

        byte by=127;
        int i10=-69, i11=100, i12=-8, i13=-6;
        float f=1.920F;
        long l2=-253L;
        boolean b=false;

        Test0887.instanceCount -= -1;
        by = (byte)i9;
        i9 = i9;
        i10 = 1;
        do {
            i9 += i9;
            i9 = i10;
            l1 += i9;
            i9 = i10;
            for (i11 = 1; i11 < 4; i11++) {
                f += (((i11 * l1) + i10) - i10);
                i12 += (int)f;
                f -= i11;
            }
            for (l2 = 1; l2 < 4; ++l2) {
                b = b;
                i12 -= -7;
            }
        } while (++i10 < 381);
        vMeth_check_sum += i9 + l + l1 + by + i10 + i11 + i12 + Float.floatToIntBits(f) + l2 + i13 + (b ? 1 : 0);
    }

    public static long lMeth(int i8) {

        int i14=9, i15=63452, i16=-65, i17=-11, i18=11239;
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        float f1=2.696F;
        short s1=21502;

        FuzzerUtils.init(bArr, true);

        vMeth(i8, Test0887.instanceCount, Test0887.instanceCount);
        i8 >>>= (int) Test0887.instanceCount;
        i8 -= i8;
        bArr[(i8 >>> 1) % N] = false;
        for (i14 = 6; i14 < 169; i14++) {
            i8 = i15;
        }
        b1 = b1;
        switch ((((i14 >>> 1) % 3) * 5) + 3) {
        case 11:
            i8 -= i8;
        case 14:
            for (i16 = 4; i16 < 321; i16++) {
                Test0887.dFld = i17;
                i18 = 1;
                do {
                    i8 += (i18 * f1);
                    if (b1) break;
                    i17 *= i17;
                } while (++i18 < 5);
            }
            break;
        case 8:
            Test0887.instanceCount += s1;
        }
        long meth_res = i8 + i14 + i15 + (b1 ? 1 : 0) + i16 + i17 + i18 + Float.floatToIntBits(f1) + s1 +
            FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i1, int i2, int i3) {

        int i4=237, i5=8, i6=-143, i7=1, i19=-12491, i20=-36820;

        for (i4 = 19; i4 < 325; ++i4) {
            for (i6 = 1; i6 < 5; i6 += 3) {
                i5 -= (int)lMeth(i4);
                i2 = 64483;
                i3 += (i6 * i6);
                for (i19 = 1; i19 < 5; i19++) {
                    Test0887.iArrFld[i4 + 1] = i19;
                    try {
                        i2 = (i2 / 425262274);
                        Test0887.iArrFld[i6] = (24 / i4);
                        i5 = (Test0887.iArrFld[i19 + 1] % i20);
                    } catch (ArithmeticException a_e) {}
                    i2 *= i3;
                }
                i7 = i6;
                Test0887.instanceCount <<= i7;
                i7 >>= -111;
                Test0887.instanceCount = i3;
                Test0887.iArrFld[i4] *= (int) Test0887.instanceCount;
                i20 += (i6 * i6);
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + i7 + i19 + i20;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-204;
        int i21=8;
        int i22=134;
        int i23=-24490;
        int i24=-153;
        int i25=55696;
        int i26=114;
        int[] iArr =new int[N];
        boolean b2=true;
        float f3=0.386F;

        FuzzerUtils.init(iArr, 6);

        iArr[(i >>> 1) % N] = iMeth(i, -231, i);
        for (i21 = 15; i21 < 268; ++i21) {
            for (i23 = 4; 99 > i23; ++i23) {
                switch ((((-7 >>> 1) % 6) * 5) + 5) {
                case 6:
                    i22 = i24;
                    Test0887.iArrFld[i23] *= (int) Test0887.instanceCount;
                    for (i25 = 1; i25 < 2; ++i25) {
                        float f2=25.644F;
                        switch ((i21 % 1) + 12) {
                        case 12:
                        default:
                            i26 += i25;
                            f2 *= f2;
                            Test0887.sFld <<= (short) i23;
                            i24 += (int)-1.94783;
                        }
                        Test0887.instanceCount += (-179 + (i25 * i25));
                        i22 += (int) Test0887.dFld;
                        Test0887.dFld = f2;
                        Test0887.lArrFld[i25 + 1][i21] += i26;
                        i22 += i22;
                        i <<= i24;
                        Test0887.iArrFld[i21] += (int) 10L;
                        Test0887.instanceCount = i21;
                    }
                case 32:
                case 24:
                    Test0887.sFld = (short) Test0887.instanceCount;
                case 28:
                    i = -16;
                case 20:
                    i24 >>>= i;
                    i22 >>>= 27705;
                    i += (-63068 + (i23 * i23));
                    break;
                case 18:
                    if (b2) break;
                    f3 = 1;
                    do {
                        i24 = 28071;
                        i = i23;
                        i = (int) Test0887.instanceCount;
                    } while (++f3 < 2);
                    break;
                default:
                    i22 = (int)65.367F;
                }
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 b2 f3 = " + i26 + "," + (b2 ? 1 : 0) + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0887.instanceCount Test0887.dFld Test0887.sFld = " + Test0887.instanceCount + "," +
                Double.doubleToLongBits(Test0887.dFld) + "," + Test0887.sFld);
        FuzzerUtils.out.println("Test0887.sArrFld Test0887.iArrFld Test0887.lArrFld = " + FuzzerUtils.checkSum(Test0887.sArrFld) + ","
                + FuzzerUtils.checkSum(Test0887.iArrFld) + "," + FuzzerUtils.checkSum(Test0887.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0887 _instance = new Test0887();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
