// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:54 2023
public class Test0897 {

    public static final int N = 400;

    public static long instanceCount=3433432916230877258L;
    public boolean bFld=true;
    public double dFld=-2.40709;
    public short sFld=22247;
    public static boolean[] bArrFld =new boolean[N];
    public static long[] lArrFld =new long[N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0897.bArrFld, false);
        FuzzerUtils.init(Test0897.lArrFld, -55218L);
        FuzzerUtils.init(Test0897.sArrFld, (short) 10296);
    }

    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i8, int i9, int i10) {

        int i11=8, i12=19718;
        float f2=-75.462F;

        for (i11 = 186; i11 > 10; --i11) {
            Test0897.bArrFld[i11] = false;
            Test0897.lArrFld[i11] *= i11;
            Test0897.instanceCount += -33;
            i10 >>= (int) Test0897.instanceCount;
        }
        f2 = i12;
        long meth_res = i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth(float f1, long l) {

        int i2=-50476;
        int i3=-27067;
        int i4=162;
        int i5=40905;
        int i6=-156;
        int i7=6;
        int[] iArr =new int[N];
        long l1=-3849253125L;
        double d=-25.52528;
        boolean b1=false;

        FuzzerUtils.init(iArr, -96);

        Test0897.instanceCount *= i2;
        l1 = 1;
        while (++l1 < 375) {
            if (true) {
                i2 += (int) (l1 | Test0897.instanceCount);
                switch ((int)((l1 % 4) + 125)) {
                case 125:
                    if (b1) {
                        l = (long)(f1 + (++d));
                        for (i3 = 1; 5 > i3; i3++) {
                            for (i5 = 2; i5 > 1; i5 -= 2) {
                                i2 = (int)(iArr[i3 + 1] * ((l - 46963) + -40790));
                            }
                            i2 += (int)(d++);
                            i7 -= (((++i2) * (i2 * i2)) >> iMeth1(i4, i3, i4));
                            i2 %= (int)(i4 | 1);
                        }
                        f1 -= Test0897.instanceCount;
                        i2 -= (int)f1;
                    }
                    break;
                case 126:
                    i2 *= (int)l;
                    break;
                case 127:
                    Test0897.sArrFld[(int) (l1)] &= (short) i3;
                    break;
                case 128:
                    l = (long)-123.60915;
                default:
                    l *= l1;
                }
            } else {
                b1 = b1;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i2 + l1 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth() {

        int i1=12;
        int i13=58440;
        int i14=-39238;
        int i15=63840;
        int[][] iArr1 =new int[N][N];
        float f=85.666F;
        boolean b=false;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)117);
        FuzzerUtils.init(iArr1, -7);

        i1 = 1;
        while (++i1 < 207) {
            f += (f--);
            if (b) {
                b = bMeth(f, 3727799872L);
                for (i13 = 1; i13 < 8; i13++) {
                    i15 = 1;
                    while (++i15 < 2) {
                        i14 += (i15 - i15);
                        try {
                            i14 = (i15 / -59118);
                            i14 = (iArr1[i15][i13] / i1);
                            i14 = (i15 / -516251858);
                        } catch (ArithmeticException a_e) {}
                        Test0897.instanceCount = -30085;
                        i14 += i15;
                        i14 <<= i14;
                        iArr1[i15][i15 + 1] *= (int)f;
                        i14 |= i1;
                        i14 >>>= (int)-135L;
                    }
                    Test0897.lArrFld = FuzzerUtils.long1array(N, (long) 5L);
                }
            } else {
                iArr1[i1][i1] = (int)43625L;
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + (b ? 1 : 0) + i13 + i14 + i15 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=26;
        int i16=-10107;
        int i17=25;
        int i18=-2518;
        int i19=145;
        int i20=-118;
        int i21=5;
        int i22=-5;
        int i23=12;
        int i24=-58888;
        int i25=-130;
        int i26=22;
        int i27=-6;
        int[][] iArr2 =new int[N][N];
        float f3=-2.507F;
        float f4=-2.76F;
        float[][] fArr =new float[N][N];
        byte by1=22;
        long l2=57650L;

        FuzzerUtils.init(fArr, 0.486F);
        FuzzerUtils.init(iArr2, 129);

        i |= Math.abs(iMeth());
        for (f3 = 6; f3 < 128; f3++) {
            for (i17 = 3; i17 < 205; i17++) {
                i18 *= 4;
                fArr[(int)(f3 + 1)][(int)(f3 - 1)] -= i18;
                Test0897.instanceCount += Test0897.instanceCount;
                i19 = 1;
                while (++i19 < 2) {
                    i16 += (110 + (i19 * i19));
                }
                i *= i18;
                i18 += (int)-2.396F;
                i16 += (((i17 * i) + f3) - i16);
            }
        }
        i16 >>>= by1;
        for (i20 = 146; i20 > 2; i20 -= 2) {
            f4 = i;
            bFld = bFld;
            i = i17;
            i18 = i16;
            for (i22 = i20; 348 > i22; i22++) {
                i18 += (((i22 * Test0897.instanceCount) + i17) - Test0897.instanceCount);
            }
            for (l2 = 3; l2 < 348; l2++) {
                i25 = 1;
                do {
                    i &= i19;
                    i23 += (((i25 * f4) + l2) - i19);
                    dFld -= dFld;
                    Test0897.lArrFld[i20 - 1] -= (long) 1.746F;
                } while ((i25 += 2) < 2);
                i23 = i21;
            }
            for (i26 = 11; i26 < 348; ++i26) {
                sFld = (short)i16;
                f4 += i25;
                iArr2[i26 + 1][i26] <<= (int)l2;
            }
        }

        FuzzerUtils.out.println("i f3 i16 = " + i + "," + Float.floatToIntBits(f3) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("by1 i20 i21 = " + by1 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("f4 i22 i23 = " + Float.floatToIntBits(f4) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("l2 i24 i25 = " + l2 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 fArr = " + i26 + "," + i27 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0897.instanceCount bFld dFld = " + Test0897.instanceCount + "," + (bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("sFld Test0897.bArrFld Test0897.lArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test0897.bArrFld) +
                "," + FuzzerUtils.checkSum(Test0897.lArrFld));
        FuzzerUtils.out.println("Test0897.sArrFld = " + FuzzerUtils.checkSum(Test0897.sArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0897 _instance = new Test0897();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 bMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
