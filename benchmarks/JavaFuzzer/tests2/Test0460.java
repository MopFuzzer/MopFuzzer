// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:33 2023
public class Test0460 {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static double dFld=56.71103;
    public short sFld=-6366;
    public volatile int iFld=61495;
    public static int[] iArrFld =new int[N];
    public static volatile double[] dArrFld =new double[N];
    public static short[][] sArrFld =new short[N][N];

    static {
        FuzzerUtils.init(Test0460.iArrFld, -35537);
        FuzzerUtils.init(Test0460.dArrFld, -2.126173);
        FuzzerUtils.init(Test0460.sArrFld, (short) 20180);
    }

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by) {

        float f2=99.387F, f3=2.580F;
        int i4=185, i5=37413, i6=-51222, i7=7, i8=-61378;
        boolean b3=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 2866823661L);

        f2 = i4;
        for (i5 = 8; 156 > i5; ++i5) {
            i4 <<= i5;
            i6 <<= i4;
            for (f3 = 1; f3 < 11; ++f3) {
                Test0460.iArrFld[i5 - 1] = i6;
                f2 *= i4;
                i8 = 2;
                do {
                    lArr[i5 + 1] *= i4;
                } while ((i8 -= 3) > 0);
                i7 *= (int)5L;
                b3 = b3;
                Test0460.dFld += f3;
                i4 += (int)f3;
            }
            i6 = i4;
        }
        Test0460.iArrFld = Test0460.iArrFld;
        vMeth1_check_sum += by + Float.floatToIntBits(f2) + i4 + i5 + i6 + Float.floatToIntBits(f3) + i7 + i8 + (b3 ? 1
            : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f1, long l2) {

        byte by1=-53;
        int i9=33285, i10=-6, i11=159;
        long[] lArr1 =new long[N];
        short[] sArr =new short[N];

        FuzzerUtils.init(lArr1, -61993L);
        FuzzerUtils.init(sArr, (short)-23005);

        vMeth1(by1);
        i9 = (int)l2;
        lArr1[(i9 >>> 1) % N] += i9;
        i10 = 1;
        do {
            i11 = 1;
            while (++i11 < 6) {
                i9 = (int)-2484411672L;
                f1 -= i9;
                i9 += (int) Test0460.dFld;
                l2 = 1;
                sArr[i10] >>= (short) Test0460.instanceCount;
                i9 += i11;
                i9 = (int) Test0460.instanceCount;
            }
            i9 <<= by1;
            Test0460.instanceCount = i9;
            i9 = i11;
        } while (++i10 < 253);
        vMeth_check_sum += Float.floatToIntBits(f1) + l2 + by1 + i9 + i10 + i11 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(sArr);
    }

    public static boolean bMeth(long l, long l1) {

        boolean b2=true;
        float f4=-15.627F, f5=-2.35F;
        int i12=-4, i13=101, i14=-4, i15=-13, i16=-10, i17=-8;
        long l3=673560412L;

        b2 = b2;
        vMeth(f4, Test0460.instanceCount);
        for (i12 = 1; i12 < 190; i12++) {
            switch ((((i12 >>> 1) % 1) * 5) + 122) {
            case 123:
                for (l3 = 1; l3 < 8; l3++) {
                    for (f5 = l3; f5 < 2; f5 += 3) {
                        l1 = i12;
                        Test0460.dArrFld = Test0460.dArrFld;
                    }
                    for (i16 = 1; i16 < 2; ++i16) {
                        i17 += i16;
                        Test0460.sArrFld = Test0460.sArrFld;
                        i15 = (int)l1;
                        i17 <<= i17;
                        i15 = -15826;
                        Test0460.iArrFld[i12] = i15;
                    }
                }
                break;
            default:
                i13 = i12;
            }
        }
        long meth_res = l + l1 + (b2 ? 1 : 0) + Float.floatToIntBits(f4) + i12 + i13 + l3 + i14 +
            Float.floatToIntBits(f5) + i15 + i16 + i17;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=-47, i1=-8069, i2=74, i3=-213, i18=22982, i19=24027, i20=38272, i21=-8, i22=138;
        float f=-38.125F;
        boolean b=true, b1=true;
        long[] lArr2 =new long[N], lArr3 =new long[N];

        FuzzerUtils.init(lArr2, 40225L);
        FuzzerUtils.init(lArr3, -210L);

        i -= (int)(i % ((long)(Math.abs(f)) | 1));
        for (i1 = 296; i1 > 3; i1 -= 3) {
            i3 = 258;
            do {
                if (b) continue;
                b1 = (b1 | bMeth(Test0460.instanceCount, 4951099801902061000L));
                for (i18 = 1; 1 > i18; ++i18) {
                    sFld = (short)i;
                    lArr2[i18] = i3;
                    lArr3[i1 - 1] -= -8857;
                    Test0460.iArrFld[i18] -= (int) Test0460.instanceCount;
                    i2 += i18;
                }
                Test0460.instanceCount -= 11144;
                i -= 87;
                Test0460.iArrFld = Test0460.iArrFld;
                for (i20 = 1; i20 < 1; ++i20) {
                    switch (((i20 % 5) * 5) + 40) {
                    case 51:
                        try {
                            Test0460.iArrFld[i1] = (16436 / i2);
                            i = (Test0460.iArrFld[i3 - 1] / i19);
                            i19 = (iFld / 43535);
                        } catch (ArithmeticException a_e) {}
                        Test0460.instanceCount += 3;
                        break;
                    case 49:
                        Test0460.instanceCount <<= i19;
                        f += i2;
                        i19 = i20;
                        lArr3[i20 + 1] = 188L;
                        break;
                    case 43:
                        switch ((i1 % 10) + 102) {
                        case 102:
                            Test0460.instanceCount -= sFld;
                            switch ((((iFld >>> 1) % 2) * 5) + 59) {
                            case 68:
                                try {
                                    i21 = (i1 / i3);
                                    i = (i20 / 55100);
                                    iFld = (i3 % i);
                                } catch (ArithmeticException a_e) {}
                                Test0460.iArrFld[i1] |= i21;
                                break;
                            case 69:
                            }
                            sFld -= (short) Test0460.instanceCount;
                            break;
                        case 103:
                            Test0460.instanceCount -= i20;
                            i2 *= -4;
                        case 104:
                            iFld >>= 20764;
                            break;
                        case 105:
                            Test0460.dFld = i20;
                        case 106:
                            Test0460.dFld += i2;
                            break;
                        case 107:
                            i22 >>>= i3;
                        case 108:
                            if (b1) continue;
                            break;
                        case 109:
                            i22 *= -13;
                            break;
                        case 110:
                            i2 *= i2;
                            break;
                        case 111:
                            i22 = i18;
                            break;
                        }
                    case 50:
                        Test0460.instanceCount += (i20 * i20);
                        break;
                    case 63:
                        Test0460.dArrFld[i1] = 13;
                        break;
                    default:
                        Test0460.instanceCount *= i1;
                    }
                }
            } while (--i3 > 0);
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i2 i3 b = " + i2 + "," + i3 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("b1 i18 i19 = " + (b1 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("lArr2 lArr3 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(lArr3));

        FuzzerUtils.out.println("Test0460.instanceCount Test0460.dFld sFld = " + Test0460.instanceCount + "," +
                Double.doubleToLongBits(Test0460.dFld) + "," + sFld);
        FuzzerUtils.out.println("iFld Test0460.iArrFld Test0460.dArrFld = " + iFld + "," + FuzzerUtils.checkSum(Test0460.iArrFld) +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0460.dArrFld)));
        FuzzerUtils.out.println("Test0460.sArrFld = " + FuzzerUtils.checkSum(Test0460.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0460 _instance = new Test0460();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
