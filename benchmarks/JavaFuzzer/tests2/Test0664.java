// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:43 2023
public class Test0664 {

    public static final int N = 400;

    public static long instanceCount=-2514725447L;
    public short sFld=-13670;
    public static boolean bFld=false;
    public static double dFld=3.96544;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0664.iArrFld, -46457);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l2, short s) {

        int i10=13585;
        int i11=-119;
        int i12=6326;
        int i14=3;
        int[] iArr1 =new int[N];
        int[] iArr2 =new int[N];
        float f1=-107.869F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 24.617F);
        FuzzerUtils.init(iArr1, 10);
        FuzzerUtils.init(iArr2, -14);

        i10 = 1;
        do {
            fArr[i10 - 1] -= 124.576F;
            for (i11 = 5; 1 < i11; --i11) {
                int i13=-1;
                i12 ^= i10;
                i12 = (int)f1;
                if (Test0664.bFld) break;
                i13 += (((i11 * i13) + f1) - i11);
                switch (((i11 % 8) * 5) + 96) {
                case 124:
                    i12 = i13;
                    Test0664.instanceCount *= i10;
                    i14 |= i13;
                    iArr1[i11 - 1] = (int)l2;
                case 129:
                    i14 = (int) Test0664.dFld;
                    try {
                        i14 = (57854 / i12);
                        i12 = (iArr1[i10] % i11);
                        iArr1[i10] = (i10 / iArr1[i11 + 1]);
                    } catch (ArithmeticException a_e) {}
                    i13 = i11;
                case 109:
                    l2 -= i10;
                    break;
                case 116:
                    f1 *= i14;
                    break;
                case 117:
                    i13 *= i11;
                    break;
                case 123:
                    i12 += (i11 * i11);
                    break;
                case 108:
                    iArr2[i11 + 1] = i13;
                    break;
                case 114:
                    i13 -= 4542;
                    break;
                }
            }
        } while (++i10 < 365);
        vMeth2_check_sum += l2 + s + i10 + i11 + i12 + Float.floatToIntBits(f1) + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(long l1, int i8, int i9) {

        short s1=-12474;
        short[] sArr =new short[N];
        int i15=0, i16=50051, i18=177, i19=0, i20=9, i21=-18273, i22=-8;

        FuzzerUtils.init(sArr, (short)22509);

        vMeth2(Test0664.instanceCount, s1);
        i8 = i9;
        Test0664.instanceCount += i9;
        for (i15 = 8; i15 < 263; i15++) {
            Test0664.instanceCount *= i15;
        }
        sArr[(i16 >>> 1) % N] = (short)i15;
        i16 >>= (int)l1;
        for (i18 = 16; i18 < 263; ++i18) {
            i20 = 1;
            while (++i20 < 7) {
                i16 -= i16;
                for (i21 = 1; i21 > i20; i21 -= 2) {
                    Test0664.iArrFld = FuzzerUtils.int1array(N, (int) -27701);
                    i16 = (int)l1;
                    i16 *= 35230;
                    i22 = s1;
                }
            }
        }
        vMeth1_check_sum += l1 + i8 + i9 + s1 + i15 + i16 + i18 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i5, long l) {

        int i6=2, i7=-1409, i23=16, i24=10;
        byte by=-123;

        for (i6 = 3; 163 > i6; i6++) {
            i5 = (i7++);
            vMeth1(Test0664.instanceCount, i5, i6);
            by = by;
            for (i23 = 1; 10 > i23; i23++) {
                Test0664.iArrFld = Test0664.iArrFld;
                i5 |= (int) Test0664.instanceCount;
                i24 <<= by;
                Test0664.instanceCount += (i23 * i23);
                Test0664.instanceCount <<= l;
                i7 = i23;
                l *= (long) Test0664.dFld;
                Test0664.dFld += Test0664.instanceCount;
                l += (((i23 * Test0664.instanceCount) + i5) - i6);
            }
            i7 += (int)(3971392105L + (i6 * i6));
        }
        vMeth_check_sum += i5 + l + i6 + i7 + by + i23 + i24;
    }

    public void mainTest(String[] strArr5) {

        int i=-58694;
        int i1=-13;
        int i2=47948;
        int i3=1;
        int i4=-45;
        int i25=-3;
        int i26=26864;
        int i27=-2;
        int[] iArr =new int[N];
        float f=1.902F;
        float f2=-83.951F;
        float[] fArr1 =new float[N];
        double d=-1.15173;
        byte by1=-72;

        FuzzerUtils.init(iArr, -61);
        FuzzerUtils.init(fArr1, -45.569F);

        for (i = 124; i > 5; i--) {
            Test0664.instanceCount -= (long) (++f);
            for (i2 = 1; i2 < 211; i2++) {
                i3 = (int)16420L;
                i3 += (((i2 * Test0664.instanceCount) + i) - Test0664.instanceCount);
                i1 = (-iArr[i2]);
                sFld = (short) (((Test0664.instanceCount--) * (iArr[i2] = (int) Test0664.instanceCount)) - ((++d) %
                    (Integer.reverseBytes(i2) | 1)));
            }
            i1 *= (int) (((Test0664.instanceCount - Test0664.instanceCount) + i3) -
                    Integer.reverseBytes((int) (Test0664.instanceCount + i1)));
            i4 = 1;
            while ((i4 += 3) < 211) {
                vMeth(i, Test0664.instanceCount);
                for (i25 = 1; i25 < 4; i25++) {
                    iArr[i + 1] -= (int)d;
                    Test0664.instanceCount = i;
                    switch ((((i >>> 1) % 8) * 5) + 123) {
                    case 152:
                        switch ((i % 1) + 54) {
                        case 54:
                            i1 = i1;
                            i26 -= 6;
                            if (Test0664.bFld) {
                                fArr1[i4 - 1] += i1;
                                by1 -= (byte)195;
                                by1 = (byte)f;
                            } else if (Test0664.bFld) {
                                i3 -= (int) Test0664.instanceCount;
                                Test0664.instanceCount = Test0664.instanceCount;
                                i1 += (int)75.926F;
                                f += by1;
                            }
                            switch ((((i4 >>> 1) % 2) * 5) + 45) {
                            case 54:
                                Test0664.instanceCount -= i3;
                                f += (31995 + (i25 * i25));
                                i26 >>= i4;
                                Test0664.iArrFld[i25 + 1] <<= 0;
                                break;
                            case 46:
                                i1 += i25;
                            }
                            break;
                        }
                        break;
                    case 160:
                        fArr1[i4] += i1;
                    case 138:
                        Test0664.dFld += i4;
                        break;
                    case 143:
                        i3 += (i25 * i25);
                        break;
                    case 131:
                        if (Test0664.bFld) continue;
                        break;
                    case 162:
                    case 148:
                        f2 += i;
                        break;
                    case 157:
                        i27 <<= i26;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 d = " + i2 + "," + i3 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i4 i25 i26 = " + i4 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("by1 f2 i27 = " + by1 + "," + Float.floatToIntBits(f2) + "," + i27);
        FuzzerUtils.out.println("iArr fArr1 = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0664.instanceCount sFld Test0664.bFld = " + Test0664.instanceCount + "," + sFld + "," +
                (Test0664.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0664.dFld Test0664.iArrFld = " + Double.doubleToLongBits(Test0664.dFld) + "," +
                FuzzerUtils.checkSum(Test0664.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr4) {

        try {
            Test0664 _instance = new Test0664();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr4);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
