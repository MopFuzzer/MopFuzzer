// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0360 {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=214;
    public static double dFld=1.35204;
    public static byte byFld=98;
    public static long[] lArrFld =new long[N];
    public static short[][] sArrFld =new short[N][N];

    static {
        FuzzerUtils.init(Test0360.lArrFld, 27653L);
        FuzzerUtils.init(Test0360.sArrFld, (short) -21926);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, int i3) {

        boolean b=false;
        double d=-2.130602, d1=-1.93296;
        float f=2.650F, f1=2.251F, f2=-112.422F;
        int i4=10;
        int i5=-150;
        int[][] iArr =new int[N][N];
        byte by=68;

        FuzzerUtils.init(iArr, -192);

        iArr[(6 >>> 1) % N][(-1 >>> 1) % N] = i3;
        b = b;
        d *= -2;
        for (f = 16; f < 342; ++f) {
            f1 = f1;
            if (b) {
                Test0360.lArrFld[(int) (f - 1)] = Test0360.instanceCount;
            } else if (b) {
                Test0360.sArrFld = Test0360.sArrFld;
                d = i4;
                by = (byte)i3;
            }
            f2 = 1;
            do {
                for (d1 = 1; 1 > d1; d1++) {
                    f1 += i5;
                    d -= Test0360.instanceCount;
                    d *= -1813543478L;
                }
            } while (++f2 < 5);
        }
        vMeth1_check_sum += i2 + i3 + (b ? 1 : 0) + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i4 +
            Float.floatToIntBits(f1) + by + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i5 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        float f3=-2.665F;
        float[] fArr =new float[N];
        boolean b1=true;
        short s=-5570;
        int i6=-7, i7=164;

        FuzzerUtils.init(fArr, 0.848F);

        vMeth1(Test0360.iFld, Test0360.iFld);
        f3 -= Test0360.instanceCount;
        fArr[(Test0360.iFld >>> 1) % N] = Test0360.instanceCount;
        Test0360.iFld &= (int) 3222426945157543111L;
        f3 -= -115;
        Test0360.dFld -= Test0360.iFld;
        if (b1) {
            f3 -= Test0360.iFld;
            Test0360.iFld >>= Test0360.iFld;
        } else {
            s -= (short)-3169;
            for (i6 = 14; i6 < 333; ++i6) {
                try {
                    Test0360.iFld = (i7 / i7);
                    i7 = (-1677113984 % Test0360.iFld);
                    Test0360.iFld = (Test0360.iFld / i7);
                } catch (ArithmeticException a_e) {}
                if (b1) {
                    i7 = Test0360.byFld;
                    Test0360.iFld = (int) Test0360.instanceCount;
                } else {
                    i7 += i7;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f3) + (b1 ? 1 : 0) + s + i6 + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        float f4=0.770F;
        long l=8779592665072023619L, l1=-145L;
        int i8=-12;
        int i9=7;
        int i10=-15825;
        int i11=9;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, 226);

        Test0360.instanceCount <<= iMeth();
        f4 += f4;
        Test0360.iFld -= (int) Test0360.instanceCount;
        for (l = 13; l < 236; l += 2) {
            for (l1 = 1; l1 < 14; l1++) {
                i9 %= (int)(i8 | 1);
            }
            Test0360.instanceCount = l1;
            Test0360.dFld %= (l | 1);
            Test0360.iFld = (int) 2.73114;
            iArr1[(int)(l + 1)] = i8;
            i8 -= Test0360.iFld;
            Test0360.iFld += i8;
            for (i10 = 1; 14 > i10; i10++) {
                i9 -= i8;
                Test0360.dFld -= i9;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f4) + l + i8 + l1 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=14, i1=54936;

        for (i = 8; i < 147; ++i) {
            vMeth();
        }

        FuzzerUtils.out.println("i i1 = " + i + "," + i1);

        FuzzerUtils.out.println("Test0360.instanceCount Test0360.iFld Test0360.dFld = " + Test0360.instanceCount + "," + Test0360.iFld +
                "," + Double.doubleToLongBits(Test0360.dFld));
        FuzzerUtils.out.println("Test0360.byFld Test0360.lArrFld Test0360.sArrFld = " + Test0360.byFld + "," +
                FuzzerUtils.checkSum(Test0360.lArrFld) + "," + FuzzerUtils.checkSum(Test0360.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0360 _instance = new Test0360();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
