// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0187 {

    public static final int N = 400;

    public static long instanceCount=187L;
    public float fFld1=24.98F;
    public boolean bFld=true;
    public long[][] lArrFld =new long[N][N];

    public static long fMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i3, int i4, boolean b) {

        int i5=-65076, i6=3, i7=-10, i8=193, i9=145, i10=14;
        float f=-5.887F;
        float[] fArr =new float[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(fArr, 0.468F);
        FuzzerUtils.init(dArr, 78.72073);

        i4 *= (int) Test0187.instanceCount;
        for (i5 = 310; 4 < i5; i5 -= 3) {
            for (i7 = 1; 15 > i7; ++i7) {
                fArr[i5 + 1] -= i7;
                i9 = 1;
                do {
                    i10 += (((i9 * i3) + f) - i10);
                    switch (((i7 % 2) * 5) + 75) {
                    case 84:
                        dArr[i5] *= i4;
                        break;
                    case 81:
                        i6 *= i5;
                        break;
                    }
                    i8 = 3;
                    if (i6 != 0) {
                        vMeth_check_sum += i3 + i4 + (b ? 1 : 0) + i5 + i6 + i7 + i8 + i9 + i10 +
                            Float.floatToIntBits(f) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    f += 49405;
                } while (++i9 < 2);
                if (i9 != 0) {
                    vMeth_check_sum += i3 + i4 + (b ? 1 : 0) + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                i4 *= 41;
                f += -71.510F;
            }
        }
        vMeth_check_sum += i3 + i4 + (b ? 1 : 0) + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static byte byMeth() {

        int i11=11;
        boolean b1=false;

        vMeth(-17, i11, b1);
        long meth_res = i11 + (b1 ? 1 : 0);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static float fMeth(long l, int i2) {

        int i12=2;
        int i13=-25145;
        int i14=0;
        int i15=-14;
        int i16=232;
        int[] iArr =new int[N];
        float f1=-9.436F;
        double d=103.6786;
        double d1=-2.69121;
        double[] dArr1 =new double[N];
        boolean b2=false;

        FuzzerUtils.init(dArr1, 63.64851);
        FuzzerUtils.init(iArr, 48770);

        i2 = byMeth();
        for (i12 = 12; 382 > i12; ++i12) {
            if (b2) {
                switch ((i12 % 1) + 31) {
                case 31:
                }
                for (i14 = 1; i14 < 5; i14 += 2) {
                    f1 -= 126;
                    for (d = 3; d > i12; --d) {
                        dArr1[i14] += l;
                        switch (((i14 % 4) * 5) + 71) {
                        case 72:
                            b2 = b2;
                            f1 += l;
                            i16 += (int)-55.543F;
                            break;
                        case 91:
                            b2 = b2;
                            f1 -= Test0187.instanceCount;
                            d1 = i14;
                            break;
                        case 81:
                            try {
                                i2 = (i16 / i16);
                                i2 = (i16 % i2);
                                i15 = (iArr[(int)(d - 1)] / i2);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 88:
                        }
                    }
                }
            } else {
                iArr[i12] += i12;
            }
        }
        long meth_res = l + i2 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i16 +
            (b2 ? 1 : 0) + Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) +
            FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i=-5;
        int i1=-2;
        int i17=-31398;
        int i18=-95;
        int i19=-33;
        int i20=-30191;
        int[] iArr1 =new int[N];
        long l1=237L;
        double d2=111.89475;
        double d3=-106.31143;
        double[] dArr2 =new double[N];
        float[][] fArr1 =new float[N][N];

        FuzzerUtils.init(fArr1, 0.575F);
        FuzzerUtils.init(dArr2, -1.65272);
        FuzzerUtils.init(iArr1, -39283);

        for (i = 10; 327 > i; ++i) {
            Test0187.instanceCount -= (long) (((i1 | 9) - (i1 - Test0187.instanceCount)) % (((long) (fMeth(Test0187.instanceCount,
                -26791) * i)) | 1));
            i17 = 1;
            do {
                fArr1[i][i + 1] = fFld1;
                for (l1 = 1; l1 < 1; ++l1) {
                    i18 += (int)l1;
                    i18 += (int)l1;
                    i18 = (int) Test0187.instanceCount;
                    i18 = (int)-9L;
                    if (bFld) continue;
                    Test0187.instanceCount += l1;
                }
                dArr2[i - 1] = i;
                for (d2 = 1; d2 < 1; d2++) {
                    d3 -= Test0187.instanceCount;
                    i19 /= (int)(i | 1);
                    fFld1 = i1;
                }
                i20 = 1;
                while ((i20 -= 2) > 0) {
                    i19 += -32;
                    Test0187.instanceCount += Test0187.instanceCount;
                    i1 -= i1;
                    i1 -= (int)-1.75092;
                    i19 = i;
                    switch ((i % 9) + 1) {
                    case 1:
                        i18 -= (int)fFld1;
                        i19 -= 28335;
                    case 2:
                        i18 = -62145;
                        i1 -= i;
                        Test0187.instanceCount += Test0187.instanceCount;
                        break;
                    case 3:
                        lArrFld[i20 - 1][i20 - 1] -= i;
                        iArr1[i17 + 1] = (int)l1;
                        break;
                    case 4:
                        i1 -= (int)d3;
                    case 5:
                        i19 = i19;
                    case 6:
                        Test0187.instanceCount <<= i17;
                        break;
                    case 7:
                        i1 += i20;
                    case 8:
                        i1 += i20;
                        break;
                    case 9:
                        d3 -= 58466L;
                        break;
                    }
                }
            } while (++i17 < 79);
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("l1 i18 d2 = " + l1 + "," + i18 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i19 d3 i20 = " + i19 + "," + Double.doubleToLongBits(d3) + "," + i20);
        FuzzerUtils.out.println("fArr1 dArr2 iArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)) + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0187.instanceCount fFld1 bFld = " + Test0187.instanceCount + "," +
            Float.floatToIntBits(fFld1) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test0187 _instance = new Test0187();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  byMeth ->  byMeth fMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
