// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0605 {

    public static final int N = 400;

    public static long instanceCount=-66L;
    public static int iFld=3;
    public static byte byFld=-61;
    public static float fFld=1.503F;
    public static volatile int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0605.iArrFld, -121);
        FuzzerUtils.init(Test0605.lArrFld, -24706L);
        FuzzerUtils.init(Test0605.dArrFld, -2.35828);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, int i5, long l) {

        int i6=-5, i7=-34, i8=3, i9=110, i10=-181;
        double d=18.130634;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 2.847F);

        for (i6 = 2; i6 < 215; ++i6) {
            i5 = (int)l;
            i7 >>= i7;
            i5 -= i7;
            Test0605.iArrFld[i6 + 1] *= -11;
            fArr[i6] -= Test0605.instanceCount;
            i8 = 1;
            do {
                float f=0.395F;
                d -= Test0605.iFld;
                i7 = i8;
                i7 *= (int)d;
                l += (long)f;
                Test0605.instanceCount += i6;
                for (i9 = 1; i9 < 4; ++i9) {
                    f += i9;
                    Test0605.iFld += (((i9 * Test0605.iFld) + Test0605.instanceCount) - i10);
                }
            } while ((i8 += 3) < 8);
        }
        vMeth1_check_sum += (b ? 1 : 0) + i5 + l + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static double dMeth(int i3, int i4) {

        boolean b1=false;
        boolean[] bArr =new boolean[N];
        int i11=-6, i12=-159, i13=-220, i14=-229, i15=-31467;
        short s1=-19704;
        double d1=13.53470;
        float f1=-2.578F;

        FuzzerUtils.init(bArr, true);

        vMeth1(b1, Test0605.iFld, Test0605.instanceCount);
        Test0605.lArrFld[(Test0605.iFld >>> 1) % N] += 169;
        for (i11 = 6; i11 < 297; i11++) {
            i3 += (((i11 * i12) + i13) - s1);
            i13 = 2156;
            d1 -= 199;
            if (b1) break;
            f1 += Test0605.iFld;
        }
        Test0605.lArrFld[(-96 >>> 1) % N] = 13;
        for (i14 = 3; i14 < 125; ++i14) {
            i13 -= (int)1.203F;
        }
        bArr[(i11 >>> 1) % N] = b1;
        long meth_res = i3 + i4 + (b1 ? 1 : 0) + i11 + i12 + i13 + s1 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1) + i14 + i15 + FuzzerUtils.checkSum(bArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void vMeth(int i1, int i2) {

        int i16=45883, i17=-205, i18=58234, i19=11, i20=21, i21=-5;
        boolean b2=false;
        float f2=58.336F;
        short s2=21463;

        dMeth(Test0605.iFld, Test0605.iFld);
        for (i16 = 9; 190 > i16; i16 += 2) {
            if (b2) break;
            Test0605.instanceCount -= 19739L;
            for (i18 = 17; i18 > i16; --i18) {
                Test0605.iArrFld[i16] -= (int) Test0605.instanceCount;
                Test0605.lArrFld[i16 - 1] += (long) f2;
            }
            f2 -= i2;
            for (i20 = 1; 17 > i20; ++i20) {
                i2 *= i17;
                Test0605.iFld = i2;
                i17 = i21;
                s2 = (short)i1;
                Test0605.lArrFld[i16 - 1] *= Test0605.instanceCount;
                Test0605.lArrFld[i16 - 1] *= 13726L;
            }
        }
        vMeth_check_sum += i1 + i2 + i16 + i17 + (b2 ? 1 : 0) + i18 + i19 + Float.floatToIntBits(f2) + i20 + i21 + s2;
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i22=233, i23=25373, i24=-44195, i25=-3, i26=-5406, i27=-10;
        short s=7714;
        short[] sArr =new short[N];
        double d2=126.109210;
        float f3=-1.352F;

        FuzzerUtils.init(sArr, (short)19531);

        i = 1;
        while (++i < 192) {
            Test0605.iFld &= (int) ((-(s - i)) + ((Test0605.instanceCount * Test0605.iFld) + (-201 + (Test0605.iFld - i))));
            Test0605.iFld >>= sArr[(i >>> 1) % N];
            vMeth(i, i);
            Test0605.iFld &= i;
            Test0605.iFld &= (int) 42L;
        }
        for (i22 = 16; i22 < 373; i22++) {
            Test0605.lArrFld[i22] *= -168;
        }
        Test0605.iArrFld[(-50833 >>> 1) % N] = (int) -13.21180;
        Test0605.dArrFld[(i23 >>> 1) % N] = Test0605.byFld;
        for (i24 = 11; i24 < 289; ++i24) {
            Test0605.iFld &= Test0605.iFld;
            Test0605.lArrFld[i24 + 1] = (long) Test0605.fFld;
            for (i26 = 4; 90 > i26; ++i26) {
                d2 *= i24;
                i23 -= (int) Test0605.instanceCount;
                Test0605.instanceCount += (((i26 * Test0605.fFld) + s) - i25);
                Test0605.instanceCount -= Test0605.instanceCount;
                i25 += (int)d2;
                switch ((i24 % 2) + 117) {
                case 117:
                    Test0605.iArrFld[i24] *= i23;
                    break;
                case 118:
                    Test0605.lArrFld[i24 + 1] = (long) Test0605.fFld;
                    i27 += i26;
                    i27 = (int) Test0605.instanceCount;
                    f3 -= i25;
                default:
                    i23 >>= (int) Test0605.instanceCount;
                    Test0605.instanceCount = i25;
                    Test0605.byFld = (byte) 4;
                }
                Test0605.lArrFld[i26] -= Test0605.instanceCount;
                i27 += i24;
            }
        }

        FuzzerUtils.out.println("i s i22 = " + i + "," + s + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 d2 = " + i26 + "," + i27 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("f3 sArr = " + Float.floatToIntBits(f3) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0605.instanceCount Test0605.iFld Test0605.byFld = " + Test0605.instanceCount + "," + Test0605.iFld +
                "," + Test0605.byFld);
        FuzzerUtils.out.println("Test0605.fFld Test0605.iArrFld Test0605.lArrFld = " + Float.floatToIntBits(Test0605.fFld) + "," +
                FuzzerUtils.checkSum(Test0605.iArrFld) + "," + FuzzerUtils.checkSum(Test0605.lArrFld));
        FuzzerUtils.out.println("Test0605.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0605.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0605 _instance = new Test0605();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
