// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0623 {

    public static final int N = 400;

    public static long instanceCount=-3613931548757957755L;
    public static boolean bFld=true;
    public static long[] lArrFld =new long[N];
    public static double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0623.lArrFld, 64144L);
        FuzzerUtils.init(Test0623.dArrFld, 2.119509);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, float f1) {


        i4 = (int) Test0623.instanceCount;
        vMeth1_check_sum += i4 + Float.floatToIntBits(f1);
    }

    public static void vMeth(int i1, double d) {

        float f=-1.522F, f2=-120.959F;
        int i2=5;
        int i5=-25505;
        int i6=-3;
        int[] iArr =new int[N];
        short s=-14166;

        FuzzerUtils.init(iArr, 134);

        Test0623.instanceCount -= (long) (i1 = (int) ((d - 3) - Test0623.instanceCount));
        for (f = 11; f < 256; ++f) {
            byte by=66;
            Test0623.instanceCount >>= (--i1);
            i2 += (int)(f - by);
            Test0623.instanceCount -= (long) -1.74736;
            vMeth1(i1, f);
            Test0623.instanceCount += (-8856835509968234701L + (f * f));
            f2 = i2;
            for (i5 = (int)(f); i5 < 7; i5++) {
                i1 = (int) Test0623.instanceCount;
                Test0623.dArrFld = Test0623.dArrFld;
                Test0623.instanceCount /= (i2 | 1);
                try {
                    i6 = (83 % iArr[i5 + 1]);
                    i6 = (i6 / 76);
                    i1 = (-111928741 % i2);
                } catch (ArithmeticException a_e) {}
                s += (short)i5;
                i6 = i2;
            }
        }
        vMeth_check_sum += i1 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i2 + Float.floatToIntBits(f2) +
            i5 + i6 + s + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth() {

        int i7=50492, i8=0, i9=-207, i10=160, i11=244, i12=-13, i13=-6, i14=-11, i15=2;
        double d1=88.113526;

        vMeth(i7, d1);
        for (i8 = 7; i8 < 138; i8 += 2) {
            for (i10 = 1; i10 < 24; i10++) {
                for (i12 = 1; i12 < 2; ++i12) {
                    d1 -= d1;
                    Test0623.bFld = Test0623.bFld;
                    i9 = (int) Test0623.instanceCount;
                    i9 = i8;
                    if (Test0623.bFld) continue;
                }
                Test0623.instanceCount = i11;
                for (i14 = i10; i14 < 2; ++i14) {
                    switch (((i12 >>> 1) % 1) + 53) {
                    case 53:
                        i7 >>= (int) Test0623.instanceCount;
                        Test0623.instanceCount += i14;
                        i9 += i8;
                        break;
                    default:
                        try {
                            i11 = (i8 / 770232477);
                            i11 = (-201 / i11);
                            i9 = (201 / i7);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }
        long meth_res = i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=88;
        int i16=-12;
        int i17=3;
        int i18=241;
        int i19=14;
        int i20=-4659;
        int[] iArr1 =new int[N];
        float f3=0.402F;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)96);
        FuzzerUtils.init(iArr1, -98);

        i -= i;
        Test0623.lArrFld[(i >>> 1) % N] <<= (long) ((fMeth() * 11662) - i);
        f3 *= i;
        for (i16 = 11; i16 < 376; i16++) {
            i += -9;
            i += (int) Test0623.instanceCount;
            for (i18 = i16; i18 < 69; i18++) {
                Test0623.instanceCount += i17;
                i20 = 1;
                while (++i20 < 1) {
                    byArr[i18] <<= (byte)-44;
                    iArr1[i18] = i;
                    Test0623.instanceCount = i18;
                    switch ((i18 % 5) + 9) {
                    case 9:
                        i17 >>= 8;
                        i19 <<= -2;
                        f3 += (i20 * i17);
                    case 10:
                        Test0623.instanceCount += (i20 * i17);
                    case 11:
                        Test0623.instanceCount = i19;
                        i += -4894;
                        i17 += i20;
                        break;
                    case 12:
                        try {
                            iArr1[i16 + 1] = (i20 / 209);
                            i19 = (i17 / 118);
                            i = (i % -56105);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 13:
                        try {
                            i17 = (i16 / -165);
                            i19 = (i19 % i19);
                            i17 = (i / -251);
                        } catch (ArithmeticException a_e) {}
                        i17 += i17;
                        if (Test0623.bFld) continue;
                        break;
                    default:
                        f3 += (((i20 * i18) + i) - i20);
                    }
                    i = (int) Test0623.instanceCount;
                    i19 += (int) Test0623.instanceCount;
                    if (Test0623.bFld) continue;
                    Test0623.instanceCount += (long) -2.42F;
                    if (false) continue;
                }
            }
        }

        FuzzerUtils.out.println("i f3 i16 = " + i + "," + Float.floatToIntBits(f3) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 byArr iArr1 = " + i20 + "," + FuzzerUtils.checkSum(byArr) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0623.instanceCount Test0623.bFld Test0623.lArrFld = " + Test0623.instanceCount + "," + (Test0623.bFld
                ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0623.lArrFld));
        FuzzerUtils.out.println("Test0623.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0623.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0623 _instance = new Test0623();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
