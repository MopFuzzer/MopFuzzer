// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:22 2023
public class Test0215 {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static volatile boolean bFld=true;
    public static double dFld=24.99659;
    public static double[] dArrFld =new double[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0215.dArrFld, 3.91538);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        int i4=-53801;
        int i5=6;
        int i6=-13;
        int i7=141;
        int i8=-4;
        int[] iArr =new int[N];
        float f=51.747F;
        long l2=6L;
        long[] lArr =new long[N];
        double d=-56.34556;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 1.63560);
        FuzzerUtils.init(iArr, 80);
        FuzzerUtils.init(lArr, -4121609569L);

        i4 = 1;
        while (++i4 < 307) {
            i5 = i4;
            f += i4;
            switch ((i4 % 7) + 7) {
            case 7:
                i5 = i4;
                break;
            case 8:
                dArr[i4 - 1] += 6;
                try {
                    i5 = (i4 % 12733);
                    i5 = (iArr[i4] % i5);
                    i5 = (-1036471576 % iArr[i4]);
                } catch (ArithmeticException a_e) {}
                break;
            case 9:
                for (i6 = 5; i6 > 1; --i6) {
                    for (l2 = 1; 2 > l2; l2++) {
                        l1 -= i6;
                        if (true) break;
                        l1 = i7;
                        f -= i8;
                        iArr[i4] -= i8;
                    }
                }
                lArr[i4 - 1] = i5;
                break;
            case 10:
                i5 <<= i7;
                break;
            case 11:
                d = i8;
                break;
            case 12:
                l1 ^= i4;
                break;
            case 13:
                d = i7;
                break;
            }
        }
        vMeth1_check_sum += l1 + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + l2 + i8 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3) {

        double d1=2.100879;
        float f1=-1.25F;
        short s=5885;
        int i10=-19303;
        int[] iArr1 =new int[N];
        byte by1=61;
        boolean b=false;

        FuzzerUtils.init(iArr1, 13);

        vMeth1(Test0215.instanceCount);
        i3 >>= (int) Test0215.instanceCount;
        Test0215.instanceCount -= i3;
        Test0215.instanceCount >>>= i3;
        d1 = 7890;
        d1 *= i3;
        f1 = 1;
        while (++f1 < 397) {
            s *= (short)i10;
            Test0215.dArrFld[(int) (f1)] -= i3;
            i10 += (int)d1;
            switch ((int)((f1 % 3) + 115)) {
            case 115:
                i3 -= -141;
                if (false) {
                    if (i10 != 0) {
                        vMeth_check_sum += i3 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + s + i10 + by1
                            + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                } else if (b) {
                    by1 >>= (byte)s;
                } else {
                    Test0215.dArrFld[(int) (f1)] *= i10;
                }
                break;
            case 116:
                if (i3 != 0) {
                    vMeth_check_sum += i3 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + s + i10 + by1 + (b
                        ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                break;
            case 117:
                Test0215.instanceCount <<= -3;
            default:
                iArr1[(int)(f1)] -= i10;
            }
        }
        vMeth_check_sum += i3 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + s + i10 + by1 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l) {

        int i11=-14, i12=-247, i13=2, i14=-9810, i15=0, i16=104;

        vMeth(i11);
        i11 = i11;
        i11 = (int)1.6523;
        Test0215.bFld = Test0215.bFld;
        i12 = 1;
        while (++i12 < 177) {
            i13 = 1;
            do {
                for (i14 = i13; i14 < 1; i14++) {
                    float f2=0.539F;
                    f2 += 61883;
                    i15 += 8;
                    f2 -= -38120;
                    switch (((i13 % 1) * 5) + 53) {
                    case 58:
                        f2 += (float) Test0215.dFld;
                        i16 -= (int)f2;
                        i16 = (int)-159L;
                        i11 *= i13;
                    }
                }
            } while (++i13 < 9);
        }
        long meth_res = l + i11 + i12 + i13 + i14 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-221, i1=-1, i2=-37965, i17=90, i18=99, i19=60998, i20=-6302, i21=4074, i22=-13;
        byte by=89;
        float f3=2.363F;
        short s1=-15377;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i = 303; i > 17; i -= 2) {
            i2 = 1;
            do {
                by *= (byte) iMeth(Test0215.instanceCount);
                Test0215.instanceCount -= i;
                f3 += (((i2 * by) + i1) - i1);
                i1 -= (int) Test0215.instanceCount;
                i1 = i2;
            } while (++i2 < 175);
            Test0215.instanceCount = 7463066384474013166L;
            i1 += i2;
            i1 -= (int) Test0215.instanceCount;
            by = (byte)i2;
        }
        if (Test0215.bFld) {
            iArrFld = iArrFld;
            i1 = i;
        } else if (Test0215.bFld) {
            for (i17 = 6; i17 < 130; ++i17) {
                s1 &= (short)6994482545026478247L;
                for (i19 = 11; i19 < 202; i19++) {
                    if (Test0215.bFld) {
                        i1 >>= i19;
                        i1 = i;
                    } else if (Test0215.bFld) {
                        for (i21 = 1; i21 < 2; ++i21) {
                            i1 = 8128;
                            iArrFld[i21 + 1] = (int) Test0215.dFld;
                            if (true) {
                                switch (((-26 >>> 1) % 9) + 122) {
                                case 122:
                                    i20 += i1;
                                    if (Test0215.bFld) break;
                                    bArr[i21 - 1] = Test0215.bFld;
                                    f3 += i;
                                case 123:
                                    if (Test0215.bFld) continue;
                                    break;
                                case 124:
                                    i20 += -10604;
                                    break;
                                case 125:
                                    i22 *= -247;
                                    break;
                                case 126:
                                    i20 = (int) Test0215.instanceCount;
                                    break;
                                case 127:
                                    f3 = 116;
                                    break;
                                case 128:
                                    i22 += (i21 - i2);
                                    break;
                                case 129:
                                case 130:
                                    s1 = (short)f3;
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        } else if (Test0215.bFld) {
            f3 *= Test0215.instanceCount;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("by f3 i17 = " + by + "," + Float.floatToIntBits(f3) + "," + i17);
        FuzzerUtils.out.println("i18 s1 i19 = " + i18 + "," + s1 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0215.instanceCount Test0215.bFld Test0215.dFld = " + Test0215.instanceCount + "," + (Test0215.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(Test0215.dFld));
        FuzzerUtils.out.println("Test0215.dArrFld iArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0215.dArrFld))
            + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0215 _instance = new Test0215();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
