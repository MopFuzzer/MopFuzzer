// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0473 {

    public static final int N = 400;

    public static volatile long instanceCount=16548L;
    public static volatile float fFld=42.1001F;
    public static long lFld=-14L;
    public volatile int iFld=-19248;
    public static double dFld=-1.104611;
    public static long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0473.lArrFld, 8519L);
        FuzzerUtils.init(Test0473.fArrFld, -1.1022F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l2) {

        int i11=-50108, i12=-2, i13=169, i14=-56097, i15=248;
        float f=2.838F;
        boolean b=true;
        boolean[] bArr =new boolean[N];
        double d1=-113.97791;
        short s=-28618;

        FuzzerUtils.init(bArr, false);

        for (i11 = 2; i11 < 185; i11++) {
            f = i12;
            if (true) {
                i13 = 9;
                while (--i13 > 0) {
                    i14 = 1;
                    while ((i14 += 3) < 1) {
                        i12 = i13;
                        bArr[i11 + 1] = b;
                    }
                    f = i13;
                    i12 -= i13;
                    i15 = 1;
                    do {
                        i12 *= i14;
                        i12 += i15;
                        i12 += (9 + (i15 * i15));
                        d1 = 30363L;
                    } while (--i15 > 0);
                    i12 ^= s;
                }
            } else if (b) {
                b = b;
            }
        }
        long meth_res = l2 + i11 + i12 + Float.floatToIntBits(f) + i13 + i14 + (b ? 1 : 0) + i15 +
            Double.doubleToLongBits(d1) + s + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i10, long l1, double d) {

        int i16=-13;
        int i17=50045;
        int i18=-27633;
        int i19=15961;
        int i20=8740;
        int[] iArr2 =new int[N];
        float f1=-29.854F;
        byte by=5;
        boolean b1=false;
        short[] sArr =new short[N];

        FuzzerUtils.init(iArr2, 10115);
        FuzzerUtils.init(sArr, (short)8166);

        d -= Math.abs(-89);
        l1 = iMeth(-44277L);
        i16 = 1;
        do {
            for (i17 = i16; i17 < 5; i17 += 2) {
                i10 <<= i17;
                iArr2[i16 + 1] &= i10;
                i10 = i10;
                i18 = i18;
                d += i16;
                if (b1) {
                    switch (((i17 >>> 1) % 10) + 59) {
                    case 59:
                        for (f1 = 1; f1 < 1; f1++) {
                            i18 = (int)d;
                            Test0473.fFld += i20;
                            Test0473.fFld = Test0473.instanceCount;
                        }
                        break;
                    case 60:
                        iArr2[i17] = (int)1.91F;
                        break;
                    case 61:
                        sArr[i16] >>= (short) Test0473.lFld;
                        break;
                    case 62:
                        Test0473.lFld &= l1;
                        break;
                    case 63:
                        iArr2[i17 - 1] = by;
                        break;
                    case 64:
                        d -= i10;
                    case 65:
                        Test0473.fArrFld[i16] = Test0473.fFld;
                        break;
                    case 66:
                        l1 %= (i16 | 1);
                        break;
                    case 67:
                        l1 ^= i16;
                        break;
                    case 68:
                        i20 += (int)(-2L + (i17 * i17));
                        break;
                    default:
                        i19 -= i19;
                    }
                } else if (b1) {
                    Test0473.lFld *= 42404;
                } else {
                    if (false) continue;
                }
            }
        } while (++i16 < 338);
        vMeth1_check_sum += i10 + l1 + Double.doubleToLongBits(d) + i16 + i17 + i18 + Float.floatToIntBits(f1) + i19 +
            i20 + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i4, int i5) {

        int i6=38;
        int i7=119;
        int i8=39512;
        int i9=-7;
        int i21=3;
        int i22=-125;
        int i23=12;
        int[] iArr1 =new int[N];
        boolean b2=true;
        long l3=1298589959L;

        FuzzerUtils.init(iArr1, 57469);

        for (i6 = 6; i6 < 122; i6++) {
            try {
                i4 = (iArr1[i6 - 1] % i5);
                iArr1[i6] = (i6 % i6);
                i5 = (i4 / i7);
            } catch (ArithmeticException a_e) {}
            for (i8 = 1; i8 < 13; ++i8) {
                i7 <<= Math.abs(207);
            }
            switch ((((((int)(-(i9 + 14.314F))) >>> 1) % 1) * 5) + 1) {
            case 5:
                vMeth1(i5, -6L, -8.118483);
                Test0473.instanceCount += (2601542839L + (i6 * i6));
                break;
            }
            iArr1[i6 + 1] += (int) Test0473.fFld;
            for (i21 = 1; i21 < 13; i21++) {
                switch ((i21 % 2) + 19) {
                case 19:
                    b2 = true;
                    for (l3 = 1; l3 < 2; l3++) {
                        i23 = i23;
                        i5 = (int) Test0473.lFld;
                        i4 >>>= i22;
                    }
                    break;
                case 20:
                    Test0473.fFld = -4869;
                default:
                    i7 += 1;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i21 + i22 + (b2 ? 1 : 0) + l3 + i23 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=0;
        int i1=5;
        int i2=-118;
        int i3=-19510;
        int i24=-145;
        int i25=-238;
        int i26=-57303;
        int i27=13;
        int i28=3836;
        int[] iArr =new int[N];
        float f2=80.179F, f3=-1.858F;
        double[] dArr =new double[N];

        FuzzerUtils.init(iArr, 214);
        FuzzerUtils.init(dArr, -47.28031);

        for (i = 6; i < 169; i++) {
            for (i2 = 5; i2 < 154; i2 += 3) {
                double d2=0.127188;
                iArr[i2] -= (int) (((Test0473.instanceCount - i) * Integer.reverseBytes(i3)) - i2);
                Test0473.instanceCount -= (((i1 - i1) * (i + i1)) - i);
                vMeth(i2, i1);
                i3 += 2;
                for (f2 = 1; 4 > f2; ++f2) {
                    i3 <<= (int) Test0473.instanceCount;
                    Test0473.fFld += (f2 * iFld);
                    Test0473.fFld = i2;
                    i24 += (-4 + (f2 * f2));
                    i1 += (int)((long)f2 ^ i3);
                    dArr[i + 1] -= i;
                }
                d2 += i1;
                i1 = i24;
                for (f3 = 1; f3 < 4; ++f3) {
                    iFld *= -221;
                    i3 = 1;
                    iFld %= (int)(i3 | 1);
                    d2 = i;
                    i3 *= 57939;
                    Test0473.instanceCount += iFld;
                    Test0473.fFld *= i3;
                }
            }
            Test0473.lFld += i3;
            Test0473.lFld += (long) Test0473.dFld;
            for (i26 = 9; i26 < 154; i26++) {
                Test0473.instanceCount *= (long) Test0473.fFld;
                Test0473.lFld |= i28;
                Test0473.instanceCount += i26;
                i3 <<= i2;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f2 i24 = " + i3 + "," + Float.floatToIntBits(f2) + "," + i24);
        FuzzerUtils.out.println("f3 i25 i26 = " + Float.floatToIntBits(f3) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0473.instanceCount Test0473.fFld Test0473.lFld = " + Test0473.instanceCount + "," +
                Float.floatToIntBits(Test0473.fFld) + "," + Test0473.lFld);
        FuzzerUtils.out.println("iFld Test0473.dFld Test0473.lArrFld = " + iFld + "," + Double.doubleToLongBits(Test0473.dFld) +
                "," + FuzzerUtils.checkSum(Test0473.lArrFld));
        FuzzerUtils.out.println("Test0473.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0473.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0473 _instance = new Test0473();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
