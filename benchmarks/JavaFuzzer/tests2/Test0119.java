// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0119 {

    public static final int N = 400;

    public static long instanceCount=1116527582L;
    public static volatile double dFld=0.23684;
    public float fFld=-1.187F;
    public static int iFld=-2495;

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(float f, int i5, int i6) {

        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 3576829860066334240L);

        lArr[(i5 >>> 1) % N] = i6;
        lArr[(i5 >>> 1) % N] = i6;
        Test0119.instanceCount <<= i6;
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i3, int i4, short s) {

        float f1=0.38F;
        double[] dArr =new double[N];
        byte[] byArr =new byte[N];

        FuzzerUtils.init(dArr, 71.56607);
        FuzzerUtils.init(byArr, (byte)103);

        i4 = (int) (i4 - (Test0119.instanceCount + lMeth1(f1, i4, -25212)));
        dArr[(i3 >>> 1) % N] = 8;
        i3 += i4;
        byArr[(i3 >>> 1) % N] = (byte)i4;
        long meth_res = i3 + i4 + s + Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(byte by, int i) {

        int i1=37214, i2=23853, i7=-53509, i8=-14;
        short s1=4322;
        boolean b=true;

        i -= i;
        i1 = 1;
        while (++i1 < 154) {
            i2 = 10;
            do {
                i = (int)(Long.reverseBytes(lMeth(i2, 7, s1)) + i);
                i = i;
                for (i7 = 1; 1 < i7; i7 -= 3) {
                    i += i8;
                    i8 = (int)fFld;
                    b = b;
                    i8 += i7;
                    i <<= (int)-34L;
                    if (b) break;
                    fFld = i;
                }
                i += i2;
            } while (--i2 > 0);
            i8 = (int) Test0119.instanceCount;
        }
        long meth_res = by + i + i1 + i2 + s1 + i7 + i8 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by1=-68;
        long l=2909756951211482040L, l1=-1823988523L;
        int i9=12;
        int i10=-2;
        int i12=7;
        int i13=110;
        int[] iArr =new int[N];
        int[][] iArr1 =new int[N][N];
        boolean b1=true;
        boolean[][] bArr =new boolean[N][N];
        short s2=24432;

        FuzzerUtils.init(iArr, 8554);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, -50167);

        Test0119.dFld += (iMeth(by1, -8) - by1);
        Test0119.iFld -= Test0119.iFld;
        if (b1) {
            for (l = 5; l < 152; l++) {
                iArr[(int) (l + 1)] += Test0119.iFld;
            }
            Test0119.iFld = Test0119.iFld;
        } else if (b1) {
            bArr[(Test0119.iFld >>> 1) % N][(Test0119.iFld >>> 1) % N] = b1;
        } else if (b1) {
            Test0119.iFld *= (int) Test0119.instanceCount;
            for (l1 = 16; l1 < 397; l1++) {
                if (b1) {
                    iArr[(int) (l1)] = Test0119.iFld;
                    fFld = i9;
                    fFld *= l1;
                } else {
                    fFld -= Test0119.iFld;
                }
                iArr = iArr;
                i9 -= -31;
                switch (((Test0119.iFld >>> 1) % 5) + 103) {
                case 103:
                    Test0119.instanceCount += (l1 + i9);
                    break;
                case 104:
                    s2 *= (short) Test0119.iFld;
                    break;
                case 105:
                    Test0119.instanceCount += (l1 * l1);
                    if (b1) {
                        if (false) {
                            fFld *= Test0119.iFld;
                        } else {
                            s2 += (short)(((l1 * i10) + l) - i9);
                            by1 /= (byte)(by1 | 1);
                        }
                        for (i12 = (int)(l1); i12 < 66; ++i12) {
                            if (true) {
                                i9 *= (int) Test0119.instanceCount;
                                fFld = s2;
                                i9 += i13;
                            }
                        }
                    } else if (b1) {
                        i10 = i12;
                    }
                case 106:
                    iArr1 = iArr1;
                    break;
                case 107:
                    Test0119.iFld -= Test0119.iFld;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("by1 l i9 = " + by1 + "," + l + "," + i9);
        FuzzerUtils.out.println("b1 l1 i10 = " + (b1 ? 1 : 0) + "," + l1 + "," + i10);
        FuzzerUtils.out.println("s2 i12 i13 = " + s2 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("iArr bArr iArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(bArr) +
            "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0119.instanceCount Test0119.dFld fFld = " + Test0119.instanceCount + "," +
                Double.doubleToLongBits(Test0119.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0119.iFld = " + Test0119.iFld);

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0119 _instance = new Test0119();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
