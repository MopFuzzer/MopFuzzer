// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:35 2023
public class Test0507 {

    public static final int N = 400;

    public static long instanceCount=84L;
    public static float fFld=2.138F;
    public static volatile boolean bFld=true;
    public static float fFld1=2.18F;
    public boolean[] bArrFld =new boolean[N];
    public static volatile byte[] byArrFld =new byte[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0507.byArrFld, (byte) 90);
        FuzzerUtils.init(Test0507.iArrFld, -1);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i7) {

        int i8=-120;
        int i9=-211;
        int[][] iArr =new int[N][N];
        boolean b1=true;

        FuzzerUtils.init(iArr, -14);

        for (i8 = 4; i8 < 223; ++i8) {
            b1 = b1;
        }
        iArr[(i8 >>> 1) % N][(i9 >>> 1) % N] = (int)1L;
        long meth_res = i7 + i8 + i9 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        int i10=25, i11=-47492, i12=-152, i13=0, i14=-9, i15=-7, i16=14692, i17=-1;
        double d2=2.27177;
        short s=-16776;
        byte by1=65;

        Test0507.fFld *= lMeth(i10);
        i10 *= i10;
        for (i11 = 20; i11 < 381; i11++) {
            i12 = (int) Test0507.instanceCount;
        }
        i13 = 1;
        do {
            d2 -= Test0507.instanceCount;
        } while (++i13 < 133);
        Test0507.fFld -= -3;
        i12 -= s;
        for (i14 = 312; 7 < i14; i14 -= 3) {
            i12 += (int)1665679591L;
            Test0507.instanceCount -= i11;
            for (i16 = i14; 15 > i16; ++i16) {
                Test0507.fFld = by1;
            }
            Test0507.bFld = Test0507.bFld;
            Test0507.byArrFld[i14 - 1] <<= (byte) i15;
        }
        long meth_res = i10 + i11 + i12 + i13 + Double.doubleToLongBits(d2) + s + i14 + i15 + i16 + i17 + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d1, long l) {

        int i3=14;
        int i4=231;
        int i5=28328;
        int i6=14;
        int i18=17;
        int[][] iArr1 =new int[N][N];
        float f=20.817F;
        boolean b=false;
        boolean[] bArr =new boolean[N];
        double d3=-122.43383;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, -53857L);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, 27927);

        lArr1[(i3 >>> 1) % N][(i3 >>> 1) % N] -= (++i3);
        for (i4 = 20; i4 < 379; i4++) {
            i6 = 1;
            do {
                byte by=-22;
                i3 -= (int)(((-13 - (i3++)) + (l = i3)) - ((l * 57997) + Math.abs(i4)));
                i5 >>= (i3--);
                switch ((i6 % 1) + 14) {
                case 14:
                    i5 += (i6 * i6);
                    break;
                }
                f -= Math.max((~by) - (i6 - 11), --i3);
                bArr[i4 + 1] = (b && (bArr[i6 + 1] || (b = b)));
                i5 = (by * iMeth());
                for (d3 = 1; d3 < 1; ++d3) {
                    iArr1[i6 + 1][(int)(d3 - 1)] = i18;
                    i3 -= i5;
                    Test0507.bFld = b;
                    i18 = -223;
                }
            } while (++i6 < 5);
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + l + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + (b ? 1 : 0)
            + Double.doubleToLongBits(d3) + i18 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=1.43991, d4=10.110823;
        int i=-17268, i1=83, i2=0, i19=-16402, i20=7, i21=12064, i22=9, i23=-13, i24=4622, i25=63, i26=5, i27=18622,
            i28=-41802, i29=189;
        byte by2=48;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 13L);

        for (d = 6; d < 281; d++) {
            for (i1 = 91; d < i1; i1 -= 3) {
                if (bArrFld[(int)(d + 1)]) continue;
                Test0507.instanceCount >>= lArr[(int) (d)];
            }
            vMeth(2.69280, 2302L);
            i19 = 1;
            while (++i19 < 91) {
                if (Test0507.bFld) continue;
                i20 = 1;
                do {
                    d4 -= i1;
                    Test0507.iArrFld[i20 - 1] *= 0;
                    if (Test0507.bFld) break;
                    Test0507.fFld1 -= i;
                    i2 -= i;
                    i <<= by2;
                } while (++i20 < 1);
                i *= (int) Test0507.fFld;
            }
            i = (int) Test0507.instanceCount;
        }
        i += -31246;
        i21 = 251;
        while ((i21 -= 3) > 0) {
            for (i22 = 298; i22 > i21; i22--) {
                i >>= -5;
            }
        }
        i23 = (int) Test0507.instanceCount;
        for (i24 = 2; 350 > i24; ++i24) {
            Test0507.iArrFld[i24 - 1] ^= (int) Test0507.instanceCount;
            for (i26 = 1; i26 < 72; ++i26) {
                d4 = i19;
                for (i28 = 1; i28 < 2; ++i28) {
                    if (Test0507.bFld) break;
                    i23 += (((i28 * i23) + i21) - by2);
                    i23 = i20;
                    Test0507.instanceCount += i28;
                }
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i19 i20 = " + i2 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d4 by2 i21 = " + Double.doubleToLongBits(d4) + "," + by2 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 lArr = " + i28 + "," + i29 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0507.instanceCount Test0507.fFld Test0507.bFld = " + Test0507.instanceCount + "," +
                Float.floatToIntBits(Test0507.fFld) + "," + (Test0507.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0507.fFld1 bArrFld Test0507.byArrFld = " + Float.floatToIntBits(Test0507.fFld1) + "," +
                FuzzerUtils.checkSum(bArrFld) + "," + FuzzerUtils.checkSum(Test0507.byArrFld));
        FuzzerUtils.out.println("Test0507.iArrFld = " + FuzzerUtils.checkSum(Test0507.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0507 _instance = new Test0507();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
