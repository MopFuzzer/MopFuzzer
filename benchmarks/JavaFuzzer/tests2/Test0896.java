// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:54 2023
public class Test0896 {

    public static final int N = 400;

    public static long instanceCount=-41L;
    public byte byFld=-92;
    public static byte byFld1=-7;
    public static double dFld=1.131034;
    public int[] iArrFld =new int[N];
    public float[][] fArrFld =new float[N][N];
    public long[] lArrFld =new long[N];

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, long l2, int i9) {

        int i10=14;
        int i11=21477;
        int i12=53667;
        int i13=-21938;
        int i14=-251;
        int[][] iArr1 =new int[N][N];
        byte by=-76;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr1, -186);
        FuzzerUtils.init(lArr2, 13L);

        for (i10 = 1; i10 < 186; ++i10) {
            for (i12 = 1; 9 > i12; i12++) {
                l2 += i11;
                i13 = i8;
                i14 = 1;
                while (++i14 < 2) {
                    iArr1[i10 + 1][i12 - 1] <<= 0;
                    lArr2[i10 - 1] *= Test0896.instanceCount;
                    i8 -= i12;
                    i9 = i12;
                    iArr1[i12 - 1] = FuzzerUtils.int1array(N, (int)-12010);
                    l2 = 8L;
                    i8 >>>= 20539;
                    i8 += (((i14 * i12) + i8) - i13);
                }
                by &= (byte)i8;
                i11 <<= (int)l2;
            }
        }
        vMeth1_check_sum += i8 + l2 + i9 + i10 + i11 + i12 + i13 + i14 + by + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr2);
    }

    public static float fMeth(short s, int i3, int i4) {

        int i5=-8;
        int i6=11;
        int i7=-1;
        int i15=-1828;
        int i16=-57192;
        int i17=2;
        int[] iArr =new int[N];
        float f=-84.731F;
        float f1=96.64F;
        float[] fArr =new float[N];
        short s1=15257;
        short[] sArr =new short[N];
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(iArr, -160);
        FuzzerUtils.init(lArr1, -3142500959L);
        FuzzerUtils.init(fArr, -2.591F);
        FuzzerUtils.init(sArr, (short)18018);

        for (i5 = 14; i5 < 239; i5++) {
            for (f = 1; f < 7; f++) {
                i3 = (--i7);
                Test0896.instanceCount += iArr[(int) (f - 1)];
                lArr1[i5][(int) (f + 1)] += (i3 += (int) ((-(i5 * i7)) * (Test0896.instanceCount * i3)));
            }
            vMeth1(i5, Test0896.instanceCount, i6);
            i7 = i7;
            for (i15 = 1; 7 > i15; i15++) {
                Test0896.instanceCount = (long) f;
                switch ((i5 % 4) + 4) {
                case 4:
                    i17 = 1;
                    while (++i17 < 2) {
                        i6 = i5;
                        i4 += (int)(0.725F + (i17 * i17));
                        fArr[i5] = s1;
                        i7 <<= i7;
                    }
                case 5:
                    f1 -= Test0896.instanceCount;
                    break;
                case 6:
                    sArr[i15] = (short)-4038838405L;
                case 7:
                }
            }
        }
        long meth_res = s + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + i15 + i16 + i17 + s1 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(long l1) {

        int i1=-113;
        int i2=141;
        int i18=4;
        int i19=3;
        int i20=-27260;
        int[] iArr2 =new int[N];
        double d=-60.86731;
        short s2=11978;
        float f2=-57.378F;
        boolean b=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 6L);
        FuzzerUtils.init(iArr2, -2);

        for (i1 = 10; i1 < 304; ++i1) {
            d += (Math.abs(i2 - i1) - lArr[(i1 >>> 1) % N]);
            i2 += (-175 + (i1 * i1));
            d -= (((l1 - i1) >> Test0896.instanceCount) - fMeth(s2, i1, i2));
            for (f2 = 1; 6 > f2; ++f2) {
                for (i19 = 1; i19 < 2; ++i19) {
                    i2 += (i19 * i19);
                    if (b) break;
                    s2 += (short)63875;
                    iArr2[i1 - 1] = (int)f2;
                    d -= i18;
                    d = 0;
                }
                Test0896.instanceCount |= Test0896.instanceCount;
                Test0896.byFld1 = (byte) Test0896.instanceCount;
            }
            i18 += (((i1 * i18) + i19) - i19);
        }
        vMeth_check_sum += l1 + i1 + i2 + Double.doubleToLongBits(d) + s2 + Float.floatToIntBits(f2) + i18 + i19 + i20
            + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        long l=44L;
        int i=-43, i21=56026, i22=-9, i23=4156, i24=-40084, i25=-56768;
        float f3=2.79F;
        boolean b1=true;

        l = 1;
        do {
            iArrFld[(i >>> 1) % N] = (int)(((--fArrFld[(int)(l + 1)][(int)(l - 1)]) - (byFld - i)) -
                    ((--Test0896.instanceCount) + (Test0896.instanceCount--)));
            vMeth(l);
            i += (int)(l * l);
            Test0896.instanceCount = -251;
            for (i21 = 1; i21 < 109; i21++) {
                for (i23 = 2; i23 > 1; i23 -= 2) {
                    iArrFld[i21] &= i23;
                    i22 >>= i24;
                    Test0896.instanceCount = i24;
                    if (false) break;
                    Test0896.instanceCount = 100;
                    i -= i22;
                    f3 += i23;
                }
                i22 >>= i21;
                iArrFld = iArrFld;
                i22 = i;
                if (false) continue;
            }
            i25 = 1;
            while (++i25 < 109) {
                i = (int)l;
                i = 13;
                switch (((i22 >>> 1) % 4) + 47) {
                case 47:
                    Test0896.instanceCount += -2;
                    break;
                case 48:
                    switch (((i >>> 1) % 9) + 113) {
                    case 113:
                        switch ((int)(((l % 5) * 5) + 70)) {
                        case 83:
                            if (b1) {
                                switch ((int)(((l % 8) * 5) + 85)) {
                                case 95:
                                    fArrFld[i25][i25] += Test0896.instanceCount;
                                    i >>= i22;
                                    break;
                                case 115:
                                    i22 -= Test0896.byFld1;
                                case 106:
                                    i24 += i23;
                                    break;
                                case 116:
                                    i24 += (((i25 * i) + i21) - Test0896.instanceCount);
                                    break;
                                case 124:
                                    i24 += i23;
                                    break;
                                case 118:
                                    i24 = 9;
                                    break;
                                case 92:
                                    if (b1) break;
                                    break;
                                case 87:
                                    Test0896.instanceCount = i21;
                                }
                            } else if (b1) {
                                Test0896.instanceCount = i;
                            } else {
                                lArrFld[i25 + 1] = -13;
                            }
                            break;
                        case 93:
                            iArrFld[(int)(l)] = (int)l;
                            break;
                        case 71:
                        case 81:
                            f3 *= i21;
                        case 73:
                        default:
                            iArrFld[i25 - 1] += (int) Test0896.instanceCount;
                        }
                        break;
                    case 114:
                        iArrFld = iArrFld;
                        break;
                    case 115:
                        i24 += i21;
                        break;
                    case 116:
                        i = -1573;
                    case 117:
                        i22 += i;
                    case 118:
                        if (b1) break;
                        break;
                    case 119:
                        iArrFld[(int)(l)] += i24;
                        break;
                    case 120:
                        i *= (int) Test0896.dFld;
                        break;
                    case 121:
                        Test0896.dFld *= i;
                        break;
                    default:
                        f3 *= -249;
                    }
                case 49:
                    i24 -= byFld;
                    break;
                case 50:
                    i >>= (int) Test0896.instanceCount;
                    break;
                }
            }
        } while (++l < 230);

        FuzzerUtils.out.println("l i i21 = " + l + "," + i + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("f3 i25 b1 = " + Float.floatToIntBits(f3) + "," + i25 + "," + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test0896.instanceCount byFld Test0896.byFld1 = " + Test0896.instanceCount + "," + byFld + "," +
                Test0896.byFld1);
        FuzzerUtils.out.println("Test0896.dFld iArrFld fArrFld = " + Double.doubleToLongBits(Test0896.dFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0896 _instance = new Test0896();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
