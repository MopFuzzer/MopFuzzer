// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0593 {

    public static final int N = 400;

    public static volatile long instanceCount=-6338075805711142061L;
    public static float fFld=-113.355F;
    public static double dFld=90.56666;
    public static short sFld=13107;
    public static int iFld=88;
    public int[] iArrFld =new int[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=82;
        int i6=-7;
        int i7=-214;
        int i8=-47067;
        int i9=-97;
        int i10=216;
        int[] iArr =new int[N];
        long l1=302784283L;
        byte by=-107;
        double d=-25.56469;

        FuzzerUtils.init(iArr, 8);

        for (i5 = 1; i5 < 279; ++i5) {
            i6 = (int) Test0593.fFld;
            i6 += i5;
        }
        for (i7 = 15; i7 < 279; ++i7) {
            i8 += (int) Test0593.instanceCount;
            i6 += i7;
            for (i9 = 1; 6 > i9; i9++) {
                Test0593.fFld = Test0593.fFld;
                Test0593.fFld *= 2171993292018321022L;
                l1 = i10;
                by <<= (byte)i6;
                iArr[i9 - 1] = (int)d;
                i10 = (int)d;
                i6 <<= i5;
                i8 = i6;
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + l1 + by + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(float f, int i3) {

        int i4=159, i11=2, i12=180, i13=-9216;
        short s=-31090;
        float[] fArr =new float[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, 0.56F);
        FuzzerUtils.init(lArr, 52674L);

        i4 = 1;
        while (++i4 < 250) {
            byte by1=-75;
            vMeth1();
            fArr[i4 - 1] /= (i4 | 1);
            i3 = (int) Test0593.instanceCount;
            Test0593.instanceCount %= (i3 | 1);
            i3 = i3;
            i3 -= (int) Test0593.instanceCount;
            switch ((i4 % 10) + 115) {
            case 115:
                for (i11 = 1; i11 < 7; ++i11) {
                    i13 = 1;
                    do {
                        i3 *= i13;
                        lArr[i13] = (long) Test0593.fFld;
                        Test0593.fFld = i13;
                        i12 += -57827;
                        lArr[i11 + 1] *= i3;
                    } while (++i13 < 2);
                }
                break;
            case 116:
                i12 += (int) Test0593.instanceCount;
                break;
            case 117:
                Test0593.instanceCount += (i4 * i4);
                break;
            case 118:
                Test0593.instanceCount *= Test0593.instanceCount;
                break;
            case 119:
                i12 <<= i13;
                break;
            case 120:
                i12 += (((i4 * Test0593.instanceCount) + by1) - s);
            case 121:
                lArr[i4 - 1] >>= 6;
                break;
            case 122:
                s = (short)i13;
                break;
            case 123:
                i3 += (int) Test0593.fFld;
                break;
            case 124:
                i12 -= (int)f;
                break;
            default:
                i3 *= i3;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + i11 + i12 + i13 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i2, long l) {

        int i14=11;
        int i15=-11757;
        int i16=-23408;
        int i17=148;
        int[] iArr1 =new int[N];
        boolean b=false;
        short s1=-7199;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 49.21758);
        FuzzerUtils.init(iArr1, -137);

        i2 >>= (++i2);
        i2 >>= (int) (i2 * ((Test0593.instanceCount * 74.130705) + (i2 *= (int) Test0593.instanceCount)));
        vMeth(1.787F, i2);
        Test0593.instanceCount >>= i2;
        dArr[(i2 >>> 1) % N] = -14378;
        for (i14 = 14; i14 < 348; i14 += 2) {
            for (i16 = 1; i16 < 9; ++i16) {
                if (b) continue;
            }
            iArr1[i14 + 1] = i2;
            iArr1[i14] ^= s1;
        }
        Test0593.dFld *= -27409;
        i17 -= (int)-95.697F;
        iArr1[(i15 >>> 1) % N] *= (int)-1.64833;
        l = i16;
        iArr1[(i17 >>> 1) % N] *= 3778;
        long meth_res = i2 + l + i14 + i15 + i16 + i17 + (b ? 1 : 0) + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-112, i1=-55, i18=-64, i19=5, i20=-2, i21=-2645, i22=77, i23=56341, i24=-4;
        boolean b1=false;
        byte by2=-28;
        long l2=517252053L;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -2L);

        for (i = 352; i > 17; --i) {
            iMeth(i1, 7L);
            Test0593.instanceCount = -58357;
        }
        i18 = 367;
        while (--i18 > 0) {
            if (b1) continue;
            i1 += i18;
            i1 = (int)3103455129L;
            iArrFld[i18] = i;
            i1 = by2;
        }
        for (i19 = 2; i19 < 288; i19++) {
            i1 = i18;
        }
        i20 = i1;
        for (i21 = 6; i21 < 199; ++i21) {
            Test0593.sFld += (short) i21;
            Test0593.fFld -= i21;
            i23 = 130;
            do {
                i22 <<= (int) Test0593.instanceCount;
                iArrFld[i23] = i;
                Test0593.instanceCount += i22;
                i22 *= -1;
                i20 -= i23;
                Test0593.instanceCount = 67;
            } while (--i23 > 0);
            for (l2 = 4; l2 < 130; l2++) {
                i22 = i19;
            }
            lArr1[i21] = i21;
            i22 += (((i21 * i18) + i22) - i24);
            Test0593.iFld = i19;
        }
        i22 -= -236;
        Test0593.instanceCount -= l2;
        Test0593.fFld += l2;

        FuzzerUtils.out.println("i i1 i18 = " + i + "," + i1 + "," + i18);
        FuzzerUtils.out.println("b1 by2 i19 = " + (b1 ? 1 : 0) + "," + by2 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 l2 i24 = " + i23 + "," + l2 + "," + i24);
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0593.instanceCount Test0593.fFld Test0593.dFld = " + Test0593.instanceCount + "," +
                Float.floatToIntBits(Test0593.fFld) + "," + Double.doubleToLongBits(Test0593.dFld));
        FuzzerUtils.out.println("Test0593.sFld Test0593.iFld iArrFld = " + Test0593.sFld + "," + Test0593.iFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0593 _instance = new Test0593();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
