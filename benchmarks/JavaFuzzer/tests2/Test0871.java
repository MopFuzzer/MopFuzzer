// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0871 {

    public static final int N = 400;

    public static long instanceCount=-151L;
    public static int iFld=9;
    public static volatile double dFld=2.115878;
    public float fFld=-31.821F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i4=7, i5=101, i6=-4, i7=27094, i9=48721;
        byte by=82;
        long l=-215L;
        float f1=0.205F;
        boolean b=false;

        for (i4 = 14; 381 > i4; ++i4) {
            for (i6 = 1; 5 > i6; ++i6) {
                int i8=0;
                by = (byte) Test0871.iFld;
                l = l;
                i7 -= (int) Test0871.dFld;
                i7 -= (int)-33096L;
                i5 += (i6 - i5);
                switch (((i6 >>> 1) % 2) + 104) {
                case 104:
                    if (b) {
                        l -= Test0871.instanceCount;
                        i8 += (i6 + f1);
                        b = b;
                    } else {
                        i9 = 1;
                        do {
                            i5 = i6;
                            Test0871.instanceCount |= Test0871.iFld;
                        } while (++i9 < 2);
                    }
                    break;
                case 105:
                    i7 >>= i6;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + by + l + Float.floatToIntBits(f1) + (b ? 1 : 0) + i9;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        int i10=-6;
        int i11=-216;
        int i12=-87;
        int i13=0;
        int[] iArr =new int[N];
        float f2=-2.17F;
        byte by1=61;

        FuzzerUtils.init(iArr, -247);

        Test0871.iFld = Integer.reverseBytes((int) (-233 - (Test0871.iFld * -36489L)));
        Test0871.iFld ^= (int) lMeth();
        iArr[(Test0871.iFld >>> 1) % N] = Test0871.iFld;
        for (i10 = 13; i10 < 288; i10++) {
            for (f2 = 1; f2 < 6; ++f2) {
                float f3=0.454F;
                i13 = 1;
                while (++i13 < 2) {
                    Test0871.instanceCount = Test0871.iFld;
                    by1 += (byte)(i13 * i13);
                    Test0871.instanceCount = i10;
                    Test0871.instanceCount = i10;
                    i12 = (int) Test0871.instanceCount;
                    if (false) continue;
                }
                Test0871.instanceCount += (long) f2;
                f3 -= i13;
            }
            Test0871.iFld = i13;
        }
        vMeth1_check_sum += i10 + i11 + Float.floatToIntBits(f2) + i12 + i13 + by1 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        float f=-4.530F;
        double d=1.62213;
        double d1=0.2760;
        double[] dArr =new double[N];
        int i1=5991;
        int i2=-17871;
        int i3=-204;
        int i14=-132;
        int i15=-13;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -198);
        FuzzerUtils.init(dArr, -1.70032);

        Test0871.iFld = (int) f;
        for (d = 10; d < 168; d++) {
            d1 -= (-Test0871.instanceCount);
            for (i2 = 1; i2 < 10; i2++) {
                vMeth1();
                i3 = i3;
                if (true) continue;
                try {
                    i1 = (15421 % i2);
                    Test0871.iFld = (i3 / i1);
                    i3 = (i2 % iArr1[i2 - 1]);
                } catch (ArithmeticException a_e) {}
                Test0871.instanceCount = Test0871.instanceCount;
                dArr[i2 - 1] = d1;
            }
            Test0871.iFld += (int) ((long) d ^ i1);
        }
        Test0871.instanceCount += i1;
        for (i14 = 10; i14 < 375; i14++) {
            i15 = 221;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i1 + Double.doubleToLongBits(d1) + i2
            + i3 + i14 + i15 + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-12;
        int i16=71;
        int i17=-2;
        int i18=-18822;
        int i19=-31417;
        int i20=167;
        int i21=-123;
        int i22=-24422;
        int[] iArr2 =new int[N];
        long l1=0L;
        long[] lArr =new long[N];
        byte by2=127;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(lArr, -3L);
        FuzzerUtils.init(byArr, (byte)-21);
        FuzzerUtils.init(iArr2, -39156);

        i = 1;
        do {
            switch ((i % 2) + 106) {
            case 106:
                vMeth();
                Test0871.instanceCount = Test0871.instanceCount;
                Test0871.instanceCount += (long) fFld;
                for (i16 = 8; 183 > i16; i16++) {
                    Test0871.dFld *= i;
                    lArr[i16] = 43052;
                    Test0871.instanceCount = i16;
                    Test0871.instanceCount = i16;
                    fFld = i;
                    for (i18 = 1; i18 < 2; i18++) {
                        Test0871.instanceCount *= Test0871.instanceCount;
                        Test0871.dFld -= Test0871.iFld;
                        Test0871.instanceCount >>= i16;
                        i17 += (i18 + i17);
                        i17 -= i17;
                        i17 += (i18 + i17);
                        Test0871.iFld += 40504;
                    }
                }
                break;
            case 107:
                for (l1 = 183; l1 > 4; l1 -= 2) {
                    long l2=37124L;
                    lArr[i - 1] -= i16;
                    byArr = byArr;
                    l2 += (-6 + (l1 * l1));
                    iArr2[i] += (int)l2;
                    i17 += (int)(((l1 * i16) + i16) - i17);
                    i20 += by2;
                }
                Test0871.instanceCount *= i20;
                break;
            default:
                for (i21 = 3; 183 > i21; i21++) {
                    Test0871.instanceCount >>= i18;
                    fFld += i22;
                }
            }
        } while (++i < 137);

        FuzzerUtils.out.println("i i16 i17 = " + i + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 l1 = " + i18 + "," + i19 + "," + l1);
        FuzzerUtils.out.println("i20 by2 i21 = " + i20 + "," + by2 + "," + i21);
        FuzzerUtils.out.println("i22 lArr byArr = " + i22 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0871.instanceCount Test0871.iFld Test0871.dFld = " + Test0871.instanceCount + "," + Test0871.iFld +
                "," + Double.doubleToLongBits(Test0871.dFld));
        FuzzerUtils.out.println("fFld = " + Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0871 _instance = new Test0871();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
