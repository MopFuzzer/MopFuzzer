// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0882 {

    public static final int N = 400;

    public static long instanceCount=13339L;
    public static double dFld=2.20584;
    public static short sFld=1055;
    public static float fFld=53.401F;
    public int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6, int i7) {

        int i8=203;
        int i9=-120;
        int i10=35809;
        int i11=-10;
        int i12=12;
        int i13=61295;
        int[] iArr1 =new int[N];
        short s1=-325;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, 17887);
        FuzzerUtils.init(lArr, 134L);

        i7 -= -238;
        switch ((((i6 >>> 1) % 4) * 5) + 21) {
        case 33:
            for (i8 = 8; i8 < 230; ++i8) {
                i6 >>>= i7;
                i10 = 1;
                do {
                    iArr1[i8 + 1] >>= i5;
                    lArr[i8 - 1] *= i8;
                } while (++i10 < 7);
                for (i11 = 1; i11 < 7; i11++) {
                    Test0882.instanceCount = 3;
                    i13 = 1;
                    do {
                        i5 >>>= s1;
                    } while (++i13 < 2);
                    Test0882.instanceCount = i6;
                    if (i12 != 0) {
                    }
                    i6 >>>= i9;
                    s1 += (short)i12;
                }
            }
            break;
        case 37:
            Test0882.instanceCount -= s1;
            break;
        case 39:
            i12 += i8;
            break;
        case 24:
            i7 = i9;
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + s1 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth() {

        int i4=59853;
        int i14=74;
        int i15=-184;
        int i16=8;
        int[] iArr =new int[N];
        boolean b=false;
        long l=-94L;
        float f=-2.491F;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(fArr, 0.609F);

        iArr[(i4 >>> 1) % N] -= iMeth(i4, i4, i4);
        for (i14 = 8; i14 < 388; ++i14) {
            byte by=-10;
            i15 += i15;
            i4 = (int) Test0882.dFld;
            by = (byte)i15;
            if (b) {
                iArr[i14 + 1] -= (int)4697329938282673958L;
            } else {
                Test0882.dFld *= Test0882.dFld;
                if (true) continue;
            }
            i4 %= (int)(i14 | 1);
            for (l = i14; l < 4; l++) {
                f += (l * l);
                if (i15 != 0) {
                }
                fArr[(int)(l - 1)] -= i4;
                iArr[i14 + 1] <<= 2;
            }
        }
        long meth_res = i4 + i14 + i15 + (b ? 1 : 0) + l + i16 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i1, int i2, int i3) {

        short s=-27266;
        int i17=4;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 39730L);

        s &= (short)i3;
        i1 = (int)fMeth();
        lArr1[(i17 >>> 1) % N] += (long)-2.55262;
        vMeth_check_sum += i1 + i2 + i3 + s + i17 + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i18=-132, i19=239, i20=8, i21=104, i22=165, i23=12, i24=-2;
        byte by1=-50;

        for (int i : iArrFld) {
            vMeth(i, i, i);
            Test0882.dFld = i18;
            i18 -= by1;
            switch (((i19 >>> 1) % 5) + 73) {
            case 73:
                iArrFld[(i >>> 1) % N] *= i19;
                i18 = i;
                i19 <<= i19;
            case 74:
                i19 >>= i18;
                i19 *= 108;
                iArrFld = iArrFld;
            case 75:
                Test0882.instanceCount *= i;
                for (i20 = 1; i20 < 63; i20++) {
                    iArrFld[i20 - 1] += i22;
                    i21 += (i20 * i20);
                }
            case 76:
                Test0882.sFld -= (short) i18;
                break;
            case 77:
                i19 -= i19;
                iArrFld[(i19 >>> 1) % N] >>= (int) Test0882.instanceCount;
            default:
                Test0882.fFld -= i;
                i23 = 1;
                do {
                    i24 = 1;
                    do {
                        i22 -= Test0882.sFld;
                        i22 = (int)112L;
                        Test0882.instanceCount += i20;
                        i22 += i24;
                        i18 += i21;
                        i21 <<= i23;
                        lArrFld[i24 - 1] &= i24;
                        Test0882.dFld = Test0882.instanceCount;
                        Test0882.dFld = i19;
                    } while (--i24 > 0);
                } while (++i23 < 63);
            }
        }

        FuzzerUtils.out.println("i18 by1 i19 = " + i18 + "," + by1 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 = " + i23 + "," + i24);

        FuzzerUtils.out.println("Test0882.instanceCount Test0882.dFld Test0882.sFld = " + Test0882.instanceCount + "," +
                Double.doubleToLongBits(Test0882.dFld) + "," + Test0882.sFld);
        FuzzerUtils.out.println("Test0882.fFld iArrFld lArrFld = " + Float.floatToIntBits(Test0882.fFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0882 _instance = new Test0882();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
