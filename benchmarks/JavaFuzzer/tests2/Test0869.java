// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0869 {

    public static final int N = 400;

    public static long instanceCount=792L;
    public static volatile byte byFld=-57;
    public volatile int[] iArrFld =new int[N];

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        float f1=-72.829F;
        int i7=22242, i8=-5141, i9=0;
        long l3=0L;
        boolean b=true;

        Test0869.instanceCount = i5;
        i6 = i5;
        i5 >>= i5;
        f1 *= i5;
        Test0869.instanceCount = i5;
        f1 *= -81.213F;
        f1 -= 153;
        i5 &= i7;
        i6 = i7;
        try {
            Test0869.instanceCount = i7;
            Test0869.byFld += (byte) i5;
            for (i8 = 3; (342 + 400) > i8; i8++) {
                i9 = (int)l3;
                l3 |= i5;
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            b = b;
        }
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + l3 + (b ? 1 : 0);
    }

    public static void vMeth(long l2, int i, int i1) {

        int i2=47977;
        int i3=97;
        int i4=29758;
        int[][] iArr =new int[N][N];
        float f=0.819F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 5L);
        FuzzerUtils.init(iArr, 240);

        for (i2 = 7; i2 < 147; i2++) {
            i3 += (((i2 * f) + Test0869.instanceCount) - i);
            i >>= i2;
            i4 = 1;
            do {
                lArr[i4 - 1] = i3;
                i1 += (int) ((--Test0869.instanceCount) - ((-(Test0869.byFld + Test0869.instanceCount)) + (-i4)));
                vMeth1(63, i3);
                Test0869.instanceCount -= 0;
                if (false) {
                    i1 = i2;
                }
                switch ((i4 % 1) + 81) {
                case 81:
                    iArr[i4][i4 - 1] <<= (int) Test0869.instanceCount;
                    lArr[i2] -= i2;
                    break;
                default:
                    l2 >>= i;
                }
                Test0869.instanceCount = i2;
            } while (++i4 < 11);
        }
        vMeth_check_sum += l2 + i + i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(long l, long l1) {

        int i10=-12;
        int[] iArr1 =new int[N];

        FuzzerUtils.init(iArr1, -19);

        vMeth(Test0869.instanceCount, -32579, i10);
        iArr1[(i10 >>> 1) % N] = i10;
        vSmallMeth_check_sum += l + l1 + i10 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i11=209;

        for (int smallinvoc = 0; smallinvoc < 137; smallinvoc++)
            vSmallMeth(Test0869.instanceCount, Test0869.instanceCount);
        iArrFld[(i11 >>> 1) % N] *= i11;
        i11 *= i11;
        iArrFld[(-128 >>> 1) % N] *= i11;

        FuzzerUtils.out.println("i11 = " + i11);

        FuzzerUtils.out.println("Test0869.instanceCount Test0869.byFld iArrFld = " + Test0869.instanceCount + "," + Test0869.byFld +
            "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0869 _instance = new Test0869();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
