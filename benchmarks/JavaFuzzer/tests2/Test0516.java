// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:36 2023
public class Test0516 {

    public static final int N = 400;

    public static volatile long instanceCount=-35564L;
    public static float fFld=-45.778F;
    public static byte byFld=40;
    public static double dFld=-1.117351;
    public static long lFld=7L;
    public short sFld=-28078;
    public static float fFld1=43.21F;
    public static int[] iArrFld =new int[N];
    public float[][] fArrFld =new float[N][N];
    public static boolean[][] bArrFld =new boolean[N][N];

    static {
        FuzzerUtils.init(Test0516.iArrFld, 111);
        FuzzerUtils.init(Test0516.bArrFld, true);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i6, byte by) {

        float f1=98.1001F;
        int i7=25807;
        int i8=-140;
        int i9=-8086;
        int[][] iArr1 =new int[N][N];

        FuzzerUtils.init(iArr1, 185);

        for (f1 = 7; f1 < 246; f1++) {
            Test0516.fFld += i6;
            Test0516.instanceCount = -17679;
            i6 = i6;
            i6 = i6;
            Test0516.fFld -= i6;
            Test0516.fFld *= i7;
            i7 -= i7;
            for (i8 = 1; i8 < 7; i8++) {
                i9 -= -123;
                i9 = (int) Test0516.instanceCount;
            }
            Test0516.fFld += i8;
        }
        Test0516.byFld &= (byte) -14;
        Test0516.instanceCount <<= i9;
        iArr1[(i6 >>> 1) % N][(i6 >>> 1) % N] = i9;
        long meth_res = i6 + by + Float.floatToIntBits(f1) + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth1(float f, int i2, int i3) {

        int i4=-32890, i5=-9, i10=10581;
        boolean b=false;
        short s=-30800;
        long[][] lArr1 =new long[N][N];

        FuzzerUtils.init(lArr1, 3919L);

        i3 *= (i3--);
        for (i4 = 2; i4 < 195; ++i4) {
            lArr1[i4 - 1][i4] >>= (long)(dMeth(i2, (byte)(39)) + i5);
            Test0516.dFld *= i3;
            if (b) {
                Test0516.instanceCount = Test0516.instanceCount;
                Test0516.iArrFld = FuzzerUtils.int1array(N, (int) 47808);
                Test0516.instanceCount /= (Test0516.instanceCount | 1);
                i2 &= i4;
            } else {
                s += (short) Test0516.dFld;
                i2 = i2;
            }
            i10 = 1;
            while (++i10 < 8) {
                Test0516.iArrFld[(i10 >>> 1) % N] += -93;
            }
            b = true;
            Test0516.instanceCount = i10;
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + (b ? 1 : 0) + s + i10 +
            FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, long l) {

        int i11=14;
        int i12=-240;
        int i13=5;
        int i14=5;
        int[] iArr =new int[N];
        float f2=-2.95F;
        short s1=4330;

        FuzzerUtils.init(iArr, 59);

        i1 <<= (iArr[(249 >>> 1) % N]++);
        iMeth1(Test0516.fFld, i1, -29763);
        for (i11 = 12; i11 < 217; i11++) {
            Test0516.byFld += (byte) i11;
            i1 += i11;
            iArr[i11 + 1] -= (int)-1.912F;
            f2 = 1;
            while (++f2 < 8) {
                i1 += s1;
                i1 *= (int)l;
                i1 -= i12;
                for (i13 = (int)(f2); i13 < 1; ++i13) {
                    Test0516.fFld -= f2;
                    i12 = (int) Test0516.dFld;
                    iArr[(i1 >>> 1) % N] *= i11;
                    i12 += i14;
                }
            }
        }
        long meth_res = i1 + l + i11 + i12 + Float.floatToIntBits(f2) + s1 + i13 + i14 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i15=14, i16=70, i17=38272, i18=36, i19=-12, i20=-20927, i21=-12;
        float f3=0.938F;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -8L);

        lArr[(i >>> 1) % N] = iMeth(i, Test0516.instanceCount);
        Test0516.fFld = Test0516.lFld;
        for (i15 = 7; i15 < 230; i15++) {
            for (f3 = 5; f3 < 113; ++f3) {
                Test0516.instanceCount = -8317;
            }
            Test0516.dFld = i16;
            fArrFld[(-13 >>> 1) % N][i15 + 1] = i16;
            switch ((i15 % 7) + 98) {
            case 98:
                Test0516.bArrFld[i15] = Test0516.bArrFld[i15 - 1];
                Test0516.lFld -= (long) Test0516.dFld;
                i += i15;
                Test0516.dFld -= -14;
            case 99:
                i17 *= 9;
                i16 += -176;
                Test0516.lFld *= i;
                i16 <<= (int)-8242748332279942403L;
                break;
            case 100:
                Test0516.iArrFld[i15] -= (int) 1.13272;
                for (i18 = 113; 7 < i18; i18 -= 2) {
                    Test0516.fFld += (((i18 * i15) + f3) - i18);
                }
                i = i19;
            case 101:
                for (i20 = 113; i15 < i20; --i20) {
                    switch (((i20 % 6) * 5) + 101) {
                    case 104:
                    case 120:
                        i16 -= (int)f3;
                        Test0516.lFld *= i19;
                        Test0516.iArrFld[i15 - 1] = (int) Test0516.instanceCount;
                        Test0516.lFld -= i21;
                        break;
                    case 129:
                        switch (((i19 >>> 1) % 7) + 62) {
                        case 62:
                            Test0516.dFld = i16;
                            sFld = (short)i20;
                            break;
                        case 63:
                            Test0516.bArrFld[i15][i15 - 1] = b1;
                            break;
                        case 64:
                            Test0516.instanceCount *= i16;
                            break;
                        case 65:
                            Test0516.instanceCount -= 7716950707267394379L;
                        case 66:
                            i19 += (i20 + Test0516.lFld);
                        case 67:
                            Test0516.byFld = (byte) i21;
                            break;
                        case 68:
                            i16 ^= sFld;
                            break;
                        }
                        break;
                    case 111:
                        i21 >>= 17575;
                        break;
                    case 108:
                        i21 -= i19;
                        break;
                    case 105:
                        Test0516.lFld >>= i20;
                    }
                }
                break;
            case 102:
                Test0516.fFld1 += (i15 * Test0516.lFld);
            case 103:
                Test0516.iArrFld[i15 + 1] |= (int) Test0516.lFld;
            case 104:
                Test0516.dFld -= Test0516.instanceCount;
                break;
            }
        }

        FuzzerUtils.out.println("i i15 i16 = " + i + "," + i15 + "," + i16);
        FuzzerUtils.out.println("f3 i17 i18 = " + Float.floatToIntBits(f3) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("b1 lArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0516.instanceCount Test0516.fFld Test0516.byFld = " + Test0516.instanceCount + "," +
                Float.floatToIntBits(Test0516.fFld) + "," + Test0516.byFld);
        FuzzerUtils.out.println("Test0516.dFld Test0516.lFld sFld = " + Double.doubleToLongBits(Test0516.dFld) + "," + Test0516.lFld +
            "," + sFld);
        FuzzerUtils.out.println("Test0516.fFld1 Test0516.iArrFld fArrFld = " + Float.floatToIntBits(Test0516.fFld1) + "," +
                FuzzerUtils.checkSum(Test0516.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("Test0516.bArrFld = " + FuzzerUtils.checkSum(Test0516.bArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0516 _instance = new Test0516();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
