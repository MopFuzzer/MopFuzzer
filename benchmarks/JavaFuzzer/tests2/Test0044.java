// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0044 {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static double dFld=-2.37870;
    public static byte byFld=-90;
    public boolean bFld=true;
    public int iFld=-208;
    public static int[] iArrFld =new int[N];
    public static float[] fArrFld =new float[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0044.iArrFld, -13761);
        FuzzerUtils.init(Test0044.fArrFld, -22.356F);
        FuzzerUtils.init(Test0044.lArrFld, 20740L);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, long l, double d1) {

        float f=-2.767F;
        int i10=-26353, i11=-13, i12=7, i13=55304, i14=41003, i15=248, i16=-70;
        byte by=113;

        f -= i9;
        for (i10 = 14; 314 > i10; ++i10) {
            Test0044.iArrFld[i10 - 1] = i9;
            by = (byte)i9;
            i9 = -10;
            i11 = (int)l;
        }
        Test0044.instanceCount = 12;
        Test0044.iArrFld[(i10 >>> 1) % N] = i10;
        for (i12 = 167; i12 > 1; i12--) {
            for (i14 = 10; 1 < i14; i14 -= 3) {
                i16 = 1;
                do {
                    f += -7;
                    i13 = (int) Test0044.instanceCount;
                    i15 += i16;
                    try {
                        i11 = (i10 % i10);
                        i9 = (-182 / i9);
                        Test0044.iArrFld[i14 - 1] = (-14940 % i14);
                    } catch (ArithmeticException a_e) {}
                } while (++i16 < 4);
            }
        }
        vMeth1_check_sum += i9 + l + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i10 + i11 + by + i12 + i13
            + i14 + i15 + i16;
    }

    public static float fMeth(int i5, int i6) {

        int i7=0, i8=-12, i17=-217, i18=-46, i19=-3;
        double d2=16.101809;
        boolean b=false;

        for (i7 = 3; 395 > i7; ++i7) {
            float f1=0.183F;
            if (i8 != 0) {
            }
            vMeth1(i8, Test0044.instanceCount, Test0044.dFld);
            switch (((i5 >>> 1) % 1) + 96) {
            case 96:
                for (i17 = 1; i17 < 4; i17++) {
                    Test0044.lArrFld[i7 - 1] = (long) Test0044.dFld;
                    i6 += i7;
                    Test0044.instanceCount *= i18;
                }
                Test0044.iArrFld[i7 - 1] >>= i5;
                break;
            default:
                Test0044.iArrFld[i7 - 1] = i8;
                i18 += (((i7 * i18) + Test0044.instanceCount) - i18);
            }
            f1 += (float) Test0044.dFld;
            for (d2 = i7; d2 < 4; d2++) {
                Test0044.dFld = Test0044.byFld;
                if (b) continue;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i17 + i18 + Double.doubleToLongBits(d2) + i19 + (b ? 1 : 0);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i1=-9, i2=-144, i3=-32854, i4=-12, i20=-54937, i21=11, i22=-6399;
        double d=-88.18529;
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(dArr, 2.95647);

        Test0044.fArrFld = (Test0044.fArrFld = (Test0044.fArrFld = (Test0044.fArrFld = Test0044.fArrFld)));
        for (i1 = 398; 10 < i1; i1 -= 2) {
            try {
                Test0044.iArrFld[i1 + 1] = (-11226 % i1);
                i2 = (Test0044.iArrFld[i1 - 1] % -10);
                i2 = (24 % i1);
            } catch (ArithmeticException a_e) {}
            i2 += i1;
        }
        i2 -= (int)((d--) / (i2 | 1));
        for (i3 = 18; 302 > i3; i3++) {
            i4 = (int)(dArr[i3 - 1][i3 - 1] - fMeth(i3, i4));
            i2 = Test0044.byFld;
            i2 += (int)2.212F;
        }
        i20 = 1;
        while (++i20 < 292) {
            i4 = i3;
        }
        for (i21 = 2; i21 < 135; ++i21) {
            Test0044.iArrFld[i21] -= i4;
        }
        vMeth_check_sum += i1 + i2 + Double.doubleToLongBits(d) + i3 + i4 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i23=3850, i24=-14, i25=10, i26=11;
        boolean b1=true;
        float f2=-120.698F;
        short s=22264;

        for (int i : Test0044.iArrFld) {
            vMeth();
            i23 = 1;
            do {
                try {
                    i = (-32772 % Test0044.iArrFld[i23]);
                    i = (-446110497 / i);
                    i = (-692314685 % Test0044.iArrFld[i23]);
                } catch (ArithmeticException a_e) {}
                if (false) continue;
                i24 = 1;
                do {
                    Test0044.instanceCount ^= i;
                    bFld = b1;
                    Test0044.instanceCount = i;
                    Test0044.iArrFld[i23] = (int) Test0044.instanceCount;
                    Test0044.dFld -= i;
                    Test0044.instanceCount += i24;
                    Test0044.instanceCount -= (long) f2;
                    i += (i24 + Test0044.byFld);
                    Test0044.iArrFld[i23 + 1] = i24;
                    i &= i24;
                } while (++i24 < 1);
                Test0044.dFld = i24;
                i += (((i23 * i23) + i24) - f2);
                i += (int) Test0044.instanceCount;
                Test0044.lArrFld[i23 + 1] = (long) 1.70054;
                for (i25 = 1; i25 < 1; i25++) {
                    i26 = -121;
                    Test0044.instanceCount += (i25 + f2);
                    i += (i25 + Test0044.byFld);
                    i -= s;
                    switch (((i23 % 2) * 5) + 51) {
                    case 60:
                        iFld ^= (int) Test0044.instanceCount;
                        s += (short)(i25 + i23);
                        Test0044.instanceCount = Test0044.instanceCount;
                        iFld >>= i23;
                    case 59:
                        iFld >>>= 239;
                        break;
                    default:
                        try {
                            i = (95 / i);
                            i = (i23 % -5615);
                            iFld = (i24 / i25);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            } while (++i23 < 63);
        }

        FuzzerUtils.out.println("i23 i24 b1 = " + i23 + "," + i24 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("f2 i25 i26 = " + Float.floatToIntBits(f2) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("s = " + s);

        FuzzerUtils.out.println("Test0044.instanceCount Test0044.dFld Test0044.byFld = " + Test0044.instanceCount + "," +
                Double.doubleToLongBits(Test0044.dFld) + "," + Test0044.byFld);
        FuzzerUtils.out.println("bFld iFld Test0044.iArrFld = " + (bFld ? 1 : 0) + "," + iFld + "," +
                FuzzerUtils.checkSum(Test0044.iArrFld));
        FuzzerUtils.out.println("Test0044.fArrFld Test0044.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0044.fArrFld)) + "," + FuzzerUtils.checkSum(Test0044.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0044 _instance = new Test0044();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
