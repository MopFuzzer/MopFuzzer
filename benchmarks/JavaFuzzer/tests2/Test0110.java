// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0110 {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static int iFld=10;
    public static double dFld=1.125521;
    public float fFld=0.1002F;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0110.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6) {

        int i7=127;
        int i8=228;
        int i9=-16;
        int i10=-41749;
        int i11=-37936;
        int i12=53120;
        int i13=-37;
        int i14=-47535;
        int[] iArr =new int[N];
        float f=-2.926F;
        boolean b=true;
        byte by1=-61;

        FuzzerUtils.init(iArr, 38092);

        for (i7 = 2; i7 < 159; ++i7) {
            for (i9 = i7; 10 > i9; i9++) {
                for (i11 = i9; i11 < 1; ++i11) {
                    i6 = (int)f;
                    iArr[i9] = (int) Test0110.instanceCount;
                    Test0110.instanceCount >>= Test0110.instanceCount;
                    b = b;
                    iArr[i7] *= (int) Test0110.instanceCount;
                    if (i6 != 0) {
                        vMeth2_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f) + (b ? 1 : 0)
                            + i13 + i14 + by1 + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
                iArr[i9 - 1] = (int)f;
                for (i13 = i7; i13 < 1; i13++) {
                    iArr[i9 + 1] *= i7;
                    by1 += (byte)i10;
                    Test0110.iFld = (int) Test0110.instanceCount;
                    Test0110.iFld >>= i7;
                }
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f) + (b ? 1 : 0) + i13 + i14 +
            by1 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i5) {

        int i15=-161, i16=-2740;
        boolean b1=true;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 32186L);

        vMeth2(Test0110.iFld);
        Test0110.iArrFld[(250 >>> 1) % N] *= (int) Test0110.instanceCount;
        i5 = i5;
        Test0110.iArrFld[(i5 >>> 1) % N] |= (int) -218L;
        if (b1) {
            Test0110.iFld -= (int) Test0110.instanceCount;
            for (i15 = 12; 210 > i15; i15++) {
                Test0110.instanceCount ^= i15;
            }
        }
        lArr[(Test0110.iFld >>> 1) % N] += 825130830L;
        vMeth1_check_sum += i5 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(byte by, double d, int i) {

        int i1=-4561, i2=43966, i3=30314, i4=-52334, i17=-39454;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -7L);

        for (i1 = 2; 296 > i1; i1++) {
            float f1=-1.305F;
            for (i3 = i1; i3 < 6; ++i3) {
                vMeth1(Test0110.iFld);
                i2 -= Test0110.iFld;
                i17 = 1;
                while (++i17 < 1) {
                    i += (i17 * i17);
                    lArr1 = lArr1;
                    Test0110.instanceCount += -246;
                }
                Test0110.instanceCount -= i2;
                i -= -12765;
                i -= i;
            }
            Test0110.iFld = i3;
            Test0110.instanceCount += Test0110.instanceCount;
            Test0110.iFld *= (int) 253L;
            Test0110.iFld += (((i1 * i) + f1) - Test0110.iFld);
        }
        vMeth_check_sum += by + Double.doubleToLongBits(d) + i + i1 + i2 + i3 + i4 + i17 + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        byte by2=-35;
        int i18=-215, i19=-10, i20=-248, i21=-55766, i22=-14, i23=28411, i24=10, i25=-85;
        boolean b2=false;
        float[] fArr =new float[N];
        double[] dArr =new double[N];

        FuzzerUtils.init(fArr, 93.344F);
        FuzzerUtils.init(dArr, 1.106127);

        Test0110.iFld = (++Test0110.iFld);
        vMeth(by2, Test0110.dFld, -7);
        Test0110.iFld = Test0110.iFld;
        Test0110.iFld -= Test0110.iFld;
        Test0110.iFld -= Test0110.iFld;
        for (i18 = 240; 10 < i18; --i18) {
            Test0110.instanceCount -= -58282;
            for (i20 = 109; i20 > 1; i20--) {
                for (i22 = 1; i22 < 2; ++i22) {
                    fFld += i22;
                    Test0110.iFld += (i22 * i22);
                    i19 = -137;
                    Test0110.iFld |= (int) Test0110.instanceCount;
                    Test0110.iFld += (((i22 * i18) + i18) - i22);
                }
            }
            i19 <<= (int) Test0110.instanceCount;
        }
        for (float f2 : fArr) {
            Test0110.iArrFld[(i23 >>> 1) % N] *= (int) fFld;
            for (i24 = 3; i24 < 63; i24++) {
                fFld = Test0110.instanceCount;
                switch (((32775 >>> 1) % 3) + 95) {
                case 95:
                    Test0110.iArrFld[i24] >>>= by2;
                    fArr[i24 + 1] *= i24;
                    i23 += (((i24 * i24) + i23) - Test0110.instanceCount);
                    break;
                case 96:
                case 97:
                    b2 = b2;
                    i25 += (int)f2;
                    dArr[i24] = -55332;
                    break;
                }
                i21 = i18;
                Test0110.instanceCount = i19;
            }
            i23 -= 8;
            Test0110.iArrFld[(i20 >>> 1) % N] = i23;
        }

        FuzzerUtils.out.println("by2 i18 i19 = " + by2 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b2 fArr dArr = " + (b2 ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0110.instanceCount Test0110.iFld Test0110.dFld = " + Test0110.instanceCount + "," + Test0110.iFld +
                "," + Double.doubleToLongBits(Test0110.dFld));
        FuzzerUtils.out.println("fFld Test0110.iArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0110.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0110 _instance = new Test0110();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
