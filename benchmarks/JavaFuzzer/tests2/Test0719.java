// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:46 2023
public class Test0719 {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static short sFld=-10500;
    public static int iFld=-3;
    public static byte byFld=126;
    public int[][] iArrFld =new int[N][N];

    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i5, double d4) {

        int i6=32420, i7=-55, i8=-29607, i9=-51454;
        float f1=-2.696F;

        for (i6 = 5; i6 < 229; ++i6) {
            f1 += (((i6 * Test0719.instanceCount) + i7) - Test0719.iFld);
            Test0719.iFld &= i6;
            l1 += i6;
            Test0719.iFld = i7;
            i7 = (int) Test0719.instanceCount;
            for (i8 = 1; i8 < 7; i8++) {
                Test0719.iFld *= Test0719.sFld;
                f1 += i8;
                i9 += (i8 | Test0719.instanceCount);
                i5 -= i8;
                switch (((i7 >>> 1) % 2) + 5) {
                case 5:
                    l1 <<= i5;
                    i5 *= Test0719.iFld;
                    i5 = 30;
                    break;
                case 6:
                    i5 += -66;
                }
            }
        }
        vMeth_check_sum += l1 + i5 + Double.doubleToLongBits(d4) + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9;
    }

    public static boolean bMeth(double d3, long l) {

        int i3=1379;
        int i4=30772;
        int i10=-28011;
        int i11=1073;
        int i12=-50337;
        int i13=6;
        int i14=-14606;
        int[] iArr1 =new int[N];
        boolean b=false;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 244L);
        FuzzerUtils.init(iArr1, -12);

        lArr[(Test0719.iFld >>> 1) % N][(Test0719.iFld >>> 1) % N] = -11L;
        l = (Test0719.iFld * (iArr1[(Test0719.iFld >>> 1) % N]++));
        for (i3 = 3; i3 < 315; ++i3) {
            vMeth(Test0719.instanceCount, i3, -62.57788);
            for (i10 = 1; i10 < 5; i10++) {
                l = 3L;
                i11 >>= (int)l;
                switch ((i3 % 5) + 47) {
                case 47:
                    for (i12 = i3; i12 < 2; i12++) {
                        iArr1[i3 - 1] <<= i13;
                        Test0719.iFld += 190;
                        i13 -= (int)-7187049100587155768L;
                        Test0719.instanceCount += (-7811449512162866637L + (i12 * i12));
                    }
                    break;
                case 48:
                    i14 <<= Test0719.sFld;
                    i13 += (int)d3;
                    break;
                case 49:
                    i11 -= i12;
                    break;
                case 50:
                    if (b) break;
                    break;
                case 51:
                    i14 >>>= i3;
                    break;
                default:
                    Test0719.instanceCount += (-16179 + (i10 * i10));
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d3) + l + i3 + i4 + i10 + i11 + i12 + i13 + i14 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth(double d2) {

        int i15=0;
        int i16=70;
        int i17=-10;
        int i18=2;
        int i19=4;
        int[] iArr2 =new int[N];
        boolean b1=false;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 10L);
        FuzzerUtils.init(iArr2, -2);

        if (bMeth(d2, Test0719.instanceCount)) {
            Test0719.iFld <<= (++Test0719.iFld);
        } else {
            Test0719.instanceCount = Test0719.iFld;
            lArr1[(Test0719.iFld >>> 1) % N] += 11845;
        }
        for (i15 = 9; 200 > i15; i15++) {
            lArr1[i15] ^= i16;
            Test0719.instanceCount = -218;
            for (i17 = 1; i17 < 8; ++i17) {
                Test0719.instanceCount += (i17 + i18);
                i19 += (((i17 * Test0719.iFld) + i15) - Test0719.instanceCount);
                Test0719.sFld = (short) Test0719.instanceCount;
                Test0719.instanceCount += (i17 * i17);
            }
            iArr2[i15] *= (int) Test0719.instanceCount;
        }
        b1 = false;
        i18 += i17;
        long meth_res = Double.doubleToLongBits(d2) + i15 + i16 + i17 + i18 + i19 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-12.99829;
        int i=-29792;
        int i1=-41022;
        int i2=14;
        int i20=11;
        int i21=2446;
        int i22=5;
        int i23=108;
        int[] iArr =new int[N];
        float f=1.835F;
        float[] fArr =new float[N];
        boolean b2=false;
        long[] lArr2 =new long[N];

        FuzzerUtils.init(iArr, 18446);
        FuzzerUtils.init(fArr, 23.54F);
        FuzzerUtils.init(lArr2, -1351308481483236462L);

        for (d = 2; 151 > d; d += 3) {
            f += (float)d;
            for (i1 = 4; i1 < 383; ++i1) {
                double d1=1.119122;
                i2 += (-42417 + (i1 * i1));
                d1 *= (++i2);
                i2 *= (int) ((Test0719.instanceCount++) + (i2++));
                i2 *= (int)(f + (++iArr[(int)(d)]));
                fArr[(int)(d - 1)] = (++i2);
                Test0719.instanceCount %= (Test0719.instanceCount | 1);
                iArr = (iArr = (iArr = (iArr = iArr)));
                Test0719.sFld >>= (short) ((iArr[i1 + 1] + iMeth(d)) + Test0719.iFld);
                Test0719.iFld *= i2;
            }
            for (i20 = 5; i20 < 134; i20 += 3) {
                b2 = b2;
                f += 7L;
                i2 += (int) Test0719.instanceCount;
                lArr2[i20 + 1] >>= Test0719.instanceCount;
                i >>= i2;
                lArr2[(int)(d + 1)] *= (long)f;
                for (i22 = 1; i22 < 12; ++i22) {
                    lArr2[(int) (d - 1)] = Test0719.byFld;
                    if (false) {
                        i = 1;
                        Test0719.iFld = Test0719.iFld;
                    }
                    switch ((i22 % 7) + 108) {
                    case 108:
                        i = -45071;
                        iArrFld = FuzzerUtils.int2array(N, (int)28);
                        Test0719.instanceCount += i22;
                        break;
                    case 109:
                        Test0719.sFld = (short) Test0719.instanceCount;
                        Test0719.instanceCount *= (long) d;
                    case 110:
                        f -= f;
                        break;
                    case 111:
                        i21 += (((i22 * Test0719.instanceCount) + i) - Test0719.iFld);
                        break;
                    case 112:
                        i2 = Test0719.byFld;
                    case 113:
                        Test0719.iFld <<= Test0719.byFld;
                    case 114:
                        iArr[(int)(d + 1)] *= (int)-74L;
                    default:
                        i21 += (-14678 + (i22 * i22));
                    }
                }
            }
        }

        FuzzerUtils.out.println("d i f = " + Double.doubleToLongBits(d) + "," + i + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i1 i2 i20 = " + i1 + "," + i2 + "," + i20);
        FuzzerUtils.out.println("i21 b2 i22 = " + i21 + "," + (b2 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 iArr fArr = " + i23 + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0719.instanceCount Test0719.sFld Test0719.iFld = " + Test0719.instanceCount + "," + Test0719.sFld +
                "," + Test0719.iFld);
        FuzzerUtils.out.println("Test0719.byFld iArrFld = " + Test0719.byFld + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0719 _instance = new Test0719();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
