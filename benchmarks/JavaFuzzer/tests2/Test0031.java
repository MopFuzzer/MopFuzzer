// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:12 2023
public class Test0031 {

    public static final int N = 400;

    public static volatile long instanceCount=3L;
    public int iFld=-43641;
    public static float fFld=-48.289F;
    public double[] dArrFld =new double[N];
    public static volatile int[][] iArrFld =new int[N][N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0031.iArrFld, -130);
        FuzzerUtils.init(Test0031.lArrFld, 14L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vMeth(int i4, int i5, byte by1) {


        i4 *= (int) ((Test0031.instanceCount * 23487) + ((i5++) - i4));
        vMeth_check_sum += i4 + i5 + by1;
    }

    public static int iMeth(double d1) {

        int i6=-227, i7=-95, i8=3, i10=-6, i11=-14, i12=-11, i13=1, i14=50068, i15=33545;
        long[] lArr =new long[N];
        double[][] dArr =new double[N][N];

        FuzzerUtils.init(lArr, -974173826L);
        FuzzerUtils.init(dArr, 22.18194);

        Test0031.iArrFld[(i6 >>> 1) % N][(-8 >>> 1) % N] += (int) (((++lArr[(-186 >>> 1) % N]) + i6) - i6);
        for (i7 = 3; i7 < 207; ++i7) {
            int i9=-58167;
            i6 /= (int)(Integer.reverseBytes(Math.max(i7 * i6, i7 * 7)) | 1);
            Test0031.instanceCount = ((-(i6++)) * ((i8 * -143) + (Test0031.instanceCount *= Test0031.instanceCount)));
            Test0031.fFld += (((i7 * Test0031.instanceCount) + Test0031.instanceCount) - i7);
            i6 -= (int) (((Test0031.instanceCount++) * (-7L + (-(i8 *= i8)))) + i6);
            vMeth(i6, i9, (byte)(50));
            for (i10 = 8; i10 > 1; --i10) {
                Test0031.iArrFld[i10 - 1][i7 + 1] = i10;
            }
            for (i12 = i7; i12 < 8; i12++) {
                for (i14 = 1; 1 > i14; i14++) {
                    Test0031.instanceCount += (i14 - i8);
                    i11 = -4;
                }
                dArr[i12][i7 + 1] -= 46715;
                Test0031.iArrFld[i12][i7 - 1] += (int) Test0031.fFld;
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i6 + i7 + i8 + i10 + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l, int i2, int i3) {

        byte by2=-21;
        double d2=0.106514;
        int i17=-11210;
        int i18=104;
        int i19=-8;
        int i20=1;
        int[] iArr =new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 226);

        Test0031.iArrFld[(i2 >>> 1) % N] = (Test0031.iArrFld[(i2 >>> 1) % N] = (Test0031.iArrFld[(i2 >>> 1) % N] =
                (Test0031.iArrFld[(i3 >>> 1) % N] = FuzzerUtils.int1array(N, (int) -31172))));
        vMeth((int) (((i2 - Test0031.instanceCount) + by2) - (i2 * (i2--))), Math.max((int) ((Test0031.fFld - 23371) +
                (--Test0031.iArrFld[(i2 >>> 1) % N][(i2 >>> 1) % N])), -77), (byte) (((-(Test0031.iArrFld[(i3 >>> 1) % N][(i2 >>> 1)
                % N]++)) * (i3 = (int) Test0031.instanceCount)) + iMeth(d2)));
        for (int i16 : iArr) {
            iArr[(i2 >>> 1) % N] *= i16;
            i16 *= (int)-109.128521;
            Test0031.lArrFld[(i3 >>> 1) % N] = (long) Test0031.fFld;
            Test0031.iArrFld[(i16 >>> 1) % N] = iArr;
            for (i17 = 1; i17 < 4; i17++) {
                for (i19 = 1; i19 < 2; i19++) {
                    Test0031.instanceCount -= -21661;
                    i2 &= i20;
                    try {
                        i2 = (58 % i20);
                        i16 = (i19 % i16);
                        Test0031.iArrFld[i17 + 1][i17] = (i18 % -244);
                    } catch (ArithmeticException a_e) {}
                }
                if (b) {
                } else {
                    Test0031.instanceCount *= l;
                    if (i17 != 0) {
                    }
                }
            }
        }
        long meth_res = l + i2 + i3 + by2 + Double.doubleToLongBits(d2) + i17 + i18 + i19 + i20 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=25826, i21=-5615, i22=9, i23=-34137, i24=194, i25=-189, i26=190, i27=2790, i28=-154;
        double d=-2.57606;
        float f=111.1014F;
        byte by=-94;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        i = 1;
        do {
            iFld >>= Math.max((int) ((--Test0031.fFld) - (dArrFld[i] = d)), --iFld);
            iFld -= Integer.reverseBytes(--iFld);
            iFld >>= (int) (--Test0031.instanceCount);
        } while (++i < 175);
        for (f = 9; f < 187; f++) {
            d = 7781266039896347918L;
            Test0031.instanceCount = ((-3575 * (++by)) * (++i1));
            iFld *= (int)(i1 - 1.267F);
            Test0031.fFld = lMeth(Test0031.instanceCount, i, i1);
            i1 += (int) (((f * iFld) + Test0031.instanceCount) - i1);
            for (i21 = 141; i21 > 5; i21--) {
                bArr = bArr;
                i1 += i21;
                Test0031.fFld = i21;
                Test0031.fFld += 89;
                iFld = (int)f;
            }
        }
        Test0031.lArrFld[(i21 >>> 1) % N] = -63943L;
        for (i23 = 7; i23 < 131; i23++) {
            for (i25 = 11; i25 < 202; ++i25) {
                i22 = i27;
                Test0031.iArrFld[i25] = FuzzerUtils.int1array(N, (int) 7);
                i28 = 1;
                while (++i28 < 2) {
                    Test0031.fFld += (i28 - i);
                    Test0031.instanceCount += (i28 | Test0031.instanceCount);
                    Test0031.instanceCount >>= Test0031.instanceCount;
                    i26 *= (int)d;
                    iFld = 59957;
                    i22 += (i28 - i24);
                    i1 &= iFld;
                    i1 -= (int) Test0031.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i d f = " + i + "," + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i1 by i21 = " + i1 + "," + by + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 bArr = " + i28 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0031.instanceCount iFld Test0031.fFld = " + Test0031.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0031.fFld));
        FuzzerUtils.out.println("dArrFld Test0031.iArrFld Test0031.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(Test0031.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0031.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0031 _instance = new Test0031();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
