// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0338 {

    public static final int N = 400;

    public static long instanceCount=2768847545L;
    public double dFld=-96.83919;
    public static byte byFld=-7;
    public static double dFld1=79.60402;
    public static float fFld=60.292F;
    public boolean bFld=false;
    public int iFld=79;
    public double[] dArrFld =new double[N];
    public volatile int[] iArrFld =new int[N];
    public float[] fArrFld =new float[N];

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i10, long l2, int i11) {

        boolean b=false;
        float f1=-2.48F;
        int i12=-168;
        int i13=9804;
        int i14=-14;
        int[] iArr1 =new int[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr1, -167);
        FuzzerUtils.init(lArr, -91L);

        i10 /= (int)(i10 | 1);
        i10 -= (int)-1572L;
        b = b;
        for (f1 = 7; f1 < 159; f1++) {
            try {
                i10 = (i11 % -9);
                i12 = (21166 / iArr1[(int)(f1)]);
                i12 = (iArr1[(int)(f1 + 1)] % i10);
            } catch (ArithmeticException a_e) {}
            Test0338.byFld &= (byte) 86;
            i12 = i11;
            iArr1[(int)(f1 + 1)] = i12;
        }
        switch (((i12 >>> 1) % 3) + 40) {
        case 40:
        case 41:
            for (i13 = 19; i13 < 381; ++i13) {
                i10 &= -4151;
                lArr[i13 - 1] = i10;
            }
            Test0338.byFld = (byte) i14;
            i12 -= (int)l2;
            Test0338.dFld1 -= l2;
            break;
        case 42:
            Test0338.fFld *= i10;
        }
        long meth_res = i10 + l2 + i11 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i3, long l1) {

        int i4=-22854;
        int i5=25629;
        int i6=-8;
        int i7=-208;
        int i8=-89;
        int i9=125;
        int i16=-1;
        int[][] iArr =new int[N][N];

        FuzzerUtils.init(iArr, -5);

        for (i4 = 259; 2 < i4; --i4) {
            for (i6 = i4; 6 > i6; ++i6) {
                switch (((i6 % 6) * 5) + 36) {
                case 52:
                    try {
                        iArr[i6][i6 + 1] = (189 % i3);
                        i5 = (i5 / 48890);
                        i7 = (i5 / 2011583738);
                    } catch (ArithmeticException a_e) {}
                    for (i8 = i4; i8 < 1; i8++) {
                        iMeth(i9, Test0338.instanceCount, i7);
                        Test0338.fFld += i8;
                        l ^= -89;
                    }
                    break;
                case 49:
                    i3 = i7;
                    i16 = 1;
                    do {
                        Test0338.fFld += (-58.885F + (i16 * i16));
                        Test0338.instanceCount = (long) Test0338.dFld1;
                    } while ((i16 -= 2) > 0);
                    Test0338.dFld1 += Test0338.dFld1;
                    break;
                case 37:
                    i3 = i3;
                case 56:
                    i3 >>= (int) Test0338.instanceCount;
                    break;
                case 38:
                    Test0338.dFld1 = -30492;
                    break;
                case 39:
                    i7 -= -174;
                    break;
                }
            }
        }
        vMeth_check_sum += l + i3 + l1 + i4 + i5 + i6 + i7 + i8 + i9 + i16 + FuzzerUtils.checkSum(iArr);
    }

    public double dMeth(float f, byte by, int i1) {

        int i2=-14;
        int i17=34;
        int i18=-22443;
        int i19=2;
        int i20=2;
        int i21=-33;
        int i22=-28851;
        int[] iArr2 =new int[N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 209L);
        FuzzerUtils.init(iArr2, -20236);

        i2 = 1;
        do {
            vMeth(Test0338.instanceCount, -2516, Test0338.instanceCount);
        } while (++i2 < 350);
        for (i17 = 2; i17 < 316; i17++) {
            i18 -= by;
            for (i19 = 1; 5 > i19; ++i19) {
                for (i21 = 2; i21 > 1; i21--) {
                    i1 = i17;
                    if (bFld) break;
                    lArr1 = lArr1;
                    iArr2[i19 + 1] = 7;
                    f -= Test0338.instanceCount;
                    i18 = (int) Test0338.dFld1;
                    i1 = (int)dFld;
                    dFld -= 64L;
                }
                iArrFld[i17] *= i18;
            }
        }
        long meth_res = Float.floatToIntBits(f) + by + i1 + i2 + i17 + i18 + i19 + i20 + i21 + i22 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-217, i23=29267, i24=9, i25=40, i26=182, i27=47929, i28=27715, i29=-59, i30=27886, i31=23258, i32=3,
            i33=-187;
        long l3=2L;
        short s=26344;
        float f2=0.367F;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, true);

        dArrFld[(i >>> 1) % N] = (((iArrFld[(i >>> 1) % N]--) + (dFld + dFld)) * (dMeth(1.459F, Test0338.byFld, i) + i));
        i = i;
        fArrFld[(i >>> 1) % N] -= -59.902F;
        iArrFld[(i >>> 1) % N] -= i;
        i <<= (int) Test0338.instanceCount;
        iArrFld[(i >>> 1) % N] += (int) Test0338.instanceCount;
        for (i23 = 11; 190 > i23; i23++) {
            i25 -= Test0338.byFld;
        }
        iArrFld[(i23 >>> 1) % N] *= (int) Test0338.instanceCount;
        l3 = 125;
        while (--l3 > 0) {
            i24 &= (int) Test0338.instanceCount;
            for (i26 = (int)(l3); i26 < 201; ++i26) {
                i24 += (((i26 * i26) + i24) - Test0338.byFld);
            }
            Test0338.instanceCount = (long) Test0338.fFld;
            s += (short)(((l3 * i24) + s) - l3);
            i25 += (int) (((l3 * Test0338.byFld) + Test0338.instanceCount) - i24);
        }
        i28 = 1;
        while (++i28 < 208) {
            Test0338.instanceCount = i;
        }
        dArrFld[(i28 >>> 1) % N] -= i;
        bArr[(i26 >>> 1) % N] = false;
        i27 = i25;
        for (i29 = 9; 382 > i29; i29 += 3) {
            Test0338.instanceCount = i30;
        }
        for (i31 = 2; i31 < 195; i31++) {
            for (f2 = 130; f2 > 7; --f2) {
                if (bFld) break;
                switch ((int)((f2 % 6) + 45)) {
                case 45:
                    Test0338.fFld = l3;
                    i24 *= (int) Test0338.dFld1;
                    break;
                case 46:
                    i32 = iFld;
                    break;
                case 47:
                    Test0338.instanceCount = i24;
                case 48:
                    dFld += i32;
                case 49:
                    i33 = (int) Test0338.instanceCount;
                    break;
                case 50:
                    s += (short)i25;
                    break;
                default:
                    i33 = (int) Test0338.fFld;
                }
            }
        }

        FuzzerUtils.out.println("i i23 i24 = " + i + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 l3 i26 = " + i25 + "," + l3 + "," + i26);
        FuzzerUtils.out.println("i27 s i28 = " + i27 + "," + s + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 f2 i33 = " + i32 + "," + Float.floatToIntBits(f2) + "," + i33);
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0338.instanceCount dFld Test0338.byFld = " + Test0338.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0338.byFld);
        FuzzerUtils.out.println("Test0338.dFld1 Test0338.fFld bFld = " + Double.doubleToLongBits(Test0338.dFld1) + "," +
                Float.floatToIntBits(Test0338.fFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld dArrFld iArrFld = " + iFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0338 _instance = new Test0338();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
