// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0817 {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static float fFld=-83.354F;
    public static byte byFld=10;
    public static volatile int iFld=27801;
    public static int iFld1=-10;
    public static short sFld=-19876;
    public boolean bFld=true;
    public int[] iArrFld =new int[N];
    public static volatile long[] lArrFld =new long[N];
    public volatile float[] fArrFld =new float[N];
    public static short[] sArrFld =new short[N];

    static {
        FuzzerUtils.init(Test0817.lArrFld, 5011597417712643874L);
        FuzzerUtils.init(Test0817.sArrFld, (short) -11835);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i7, int i8) {

        short s=-10834;
        int i9=14;
        int i10=6;
        int i11=-9;
        int i12=38328;
        int[] iArr1 =new int[N];
        double d1=2.41518;
        byte by=-118;

        FuzzerUtils.init(iArr1, -59263);

        i7 = s;
        i8 -= -53262;
        i9 = 1;
        do {
            i8 >>= (int) Test0817.instanceCount;
            d1 -= by;
            i10 = 1;
            do {
                for (i11 = 1; i11 < 1; ++i11) {
                    float f=-55.1015F;
                    l = i7;
                    Test0817.instanceCount = s;
                    s += (short)(i11 * i11);
                    f *= i10;
                    i7 += (39637 + (i11 * i11));
                    i7 = -9;
                    iArr1[i9] = i11;
                    i8 = i9;
                }
            } while (++i10 < 4);
        } while (++i9 < 382);
        vMeth1_check_sum += l + i7 + i8 + s + i9 + Double.doubleToLongBits(d1) + by + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i5=44552, i6=194, i13=17685, i14=-163, i15=225, i16=-7, i17=12;
        double d=1.74696;
        long l1=-1426585711L;

        Test0817.instanceCount <<= ((--Test0817.instanceCount) * -46);
        for (i5 = 8; i5 < 330; ++i5) {
            Test0817.lArrFld[i5] = (long) ((Test0817.instanceCount *= i5) + (d--));
            vMeth1(Test0817.instanceCount, i5, i6);
            Test0817.instanceCount -= i5;
            for (i13 = 1; i13 < 5; ++i13) {
                Test0817.lArrFld[i5] &= 62827;
            }
            for (i15 = 1; i15 < 5; ++i15) {
                Test0817.fFld += (33179 + (i15 * i15));
                Test0817.fFld -= -23077;
                Test0817.instanceCount = i5;
                for (l1 = 1; l1 < 2; l1++) {
                    i17 += (int)(((l1 * i15) + i14) - i13);
                    i17 -= i15;
                    i16 += (int) (((l1 * Test0817.instanceCount) + i13) - Test0817.instanceCount);
                }
            }
        }
        vMeth_check_sum += i5 + i6 + Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + l1 + i17;
    }

    public static double dMeth() {

        int i4=-101;
        int i18=730;
        int i19=8;
        int i20=-13;
        int i21=134;
        int i22=4;
        int i23=-14;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -199);

        iArr[(i4 >>> 1) % N] -= 13121;
        vMeth();
        for (i18 = 339; i18 > 3; i18--) {
            Test0817.instanceCount += (i18 * i18);
            i20 = 1;
            while (++i20 < 5) {
                i4 = i4;
                i4 += i20;
                switch (((i18 % 2) * 5) + 80) {
                case 81:
                    for (i21 = 1; i21 < 1; i21++) {
                        i4 = -48;
                        Test0817.instanceCount &= i18;
                        Test0817.instanceCount += i21;
                    }
                    i22 += (((i20 * Test0817.fFld) + i20) - i21);
                    i23 = i22;
                    break;
                case 89:
                    i22 += (-19633 + (i20 * i20));
                    break;
                default:
                    i23 >>= (int) Test0817.instanceCount;
                }
            }
        }
        long meth_res = i4 + i18 + i19 + i20 + i21 + i22 + i23 + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=51693, i1=190, i2=-3, i3=-133, i24=-2, i25=13, i26=-27304, i27=4;
        double d2=5.100078;
        long l2=-4L;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)-103);

        switch (((((int) (38413 + Test0817.instanceCount)) >>> 1) % 1) + 89) {
        case 89:
            for (i = 13; i < 291; i++) {
                for (i2 = 5; i2 < 90; i2++) {
                    iArrFld[i + 1] *= (int)(dMeth() % (i | 1));
                    Test0817.byFld >>= (byte) i1;
                    switch ((i % 10) + 19) {
                    case 19:
                        d2 += -216;
                        i1 += i2;
                        i24 = 1;
                        while (++i24 < 2) {
                            i3 += i24;
                            Test0817.iFld = Test0817.iFld1;
                        }
                        break;
                    case 20:
                        Test0817.sFld >>= (short) Test0817.instanceCount;
                        for (i25 = 1; i25 < 2; i25++) {
                            Test0817.instanceCount += (((i25 * i25) + i24) - Test0817.instanceCount);
                            Test0817.fFld += (((i25 * Test0817.byFld) + i3) - i24);
                            if (bFld) {
                                if (bFld) continue;
                                Test0817.instanceCount = i1;
                            } else {
                                i3 += (i25 * Test0817.instanceCount);
                            }
                            iArrFld[i + 1] <<= i26;
                            Test0817.iFld1 ^= -234;
                        }
                        i3 = (int)-227L;
                        break;
                    case 21:
                        for (l2 = i; l2 < 2; ++l2) {
                            fArrFld[(int) (l2 - 1)] += Test0817.iFld1;
                            i3 += (int)l2;
                            byArr[(int)(l2)] = (byte)-12721;
                            d2 = Test0817.instanceCount;
                            Test0817.instanceCount = Test0817.instanceCount;
                            Test0817.sArrFld[i2] -= (short) i;
                        }
                        Test0817.iFld1 |= i;
                        break;
                    case 22:
                        i3 += i25;
                        break;
                    case 23:
                        i3 = -223;
                        break;
                    case 24:
                        i27 = (int)d2;
                        break;
                    case 25:
                        Test0817.iFld1 = i24;
                    case 26:
                        Test0817.fFld = i24;
                    case 27:
                        i27 -= i3;
                        break;
                    case 28:
                        Test0817.instanceCount += i24;
                        break;
                    default:
                        try {
                            Test0817.iFld = (i25 % -62989);
                            i26 = (i % iArrFld[i2]);
                            i27 = (56 / Test0817.iFld);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
            break;
        default:
            i3 -= i25;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d2 i24 = " + i3 + "," + Double.doubleToLongBits(d2) + "," + i24);
        FuzzerUtils.out.println("i25 i26 l2 = " + i25 + "," + i26 + "," + l2);
        FuzzerUtils.out.println("i27 byArr = " + i27 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0817.instanceCount Test0817.fFld Test0817.byFld = " + Test0817.instanceCount + "," +
                Float.floatToIntBits(Test0817.fFld) + "," + Test0817.byFld);
        FuzzerUtils.out.println("Test0817.iFld Test0817.iFld1 Test0817.sFld = " + Test0817.iFld + "," + Test0817.iFld1 + "," + Test0817.sFld);
        FuzzerUtils.out.println("bFld iArrFld Test0817.lArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(iArrFld) +
                "," + FuzzerUtils.checkSum(Test0817.lArrFld));
        FuzzerUtils.out.println("fArrFld Test0817.sArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) +
                "," + FuzzerUtils.checkSum(Test0817.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0817 _instance = new Test0817();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
