// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0872 {

    public static final int N = 400;

    public static long instanceCount=9117550440947689193L;
    public static volatile int iFld=-5812;
    public static boolean bFld=true;
    public int iFld1=13;
    public short sFld=-10887;
    public static long[] lArrFld =new long[N];
    public int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0872.lArrFld, -2115683725L);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i5=-160, i6=50, i7=-208, i8=41873, i9=-42, i10=-37479, i11=-17373, i12=-17476;
        double d=-6.58055;
        float f=-86.117F;
        boolean b=false;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)1);

        Test0872.iFld = Test0872.iFld;
        for (i5 = 10; i5 < 177; ++i5) {
            d -= 201;
            Test0872.iFld -= (int) f;
            byArr[i5] -= (byte)-161;
            for (i7 = 1; i7 < 9; ++i7) {
                Test0872.iFld = (int) Test0872.instanceCount;
                for (i9 = 1; i9 < 2; ++i9) {
                    d += -4032927993L;
                    i6 = i9;
                    b = b;
                }
                Test0872.instanceCount = i8;
                for (i11 = i7; 2 > i11; ++i11) {
                    Test0872.lArrFld[i11 + 1] = i8;
                    Test0872.iFld = (int) Test0872.instanceCount;
                }
            }
        }
        long meth_res = i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + (b ? 1 :
            0) + i11 + i12 + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4) {

        boolean b1=false;

        i4 = iMeth();
        b1 = b1;
        vMeth_check_sum += i4 + (b1 ? 1 : 0);
    }

    public static float fMeth(int i3) {

        int i13=-12;
        int i14=112;
        int i15=24;
        int i16=5515;
        int i17=252;
        int i18=-27445;
        int[] iArr =new int[N];
        float f1=-1.803F;

        FuzzerUtils.init(iArr, -34121);

        vMeth(Test0872.iFld);
        i3 = -8080;
        i3 -= i3;
        for (i13 = 317; i13 > 9; i13 -= 3) {
            for (i15 = 1; 15 > i15; i15++) {
                i16 += (175 + (i15 * i15));
                i16 -= Test0872.iFld;
                Test0872.iFld += (((i15 * f1) + i3) - Test0872.instanceCount);
                iArr[i15] = Test0872.iFld;
                Test0872.iFld >>= i3;
            }
            if (Test0872.bFld) continue;
            try {
                i16 = (10105 % i3);
                iArr[i13 - 1] = (i14 % i16);
                Test0872.iFld = (i16 % -17209);
            } catch (ArithmeticException a_e) {}
        }
        for (i17 = 10; 386 > i17; ++i17) {
            i16 &= i3;
            Test0872.iFld += (((i17 * Test0872.instanceCount) + i18) - i14);
        }
        long meth_res = i3 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) + i17 + i18 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-7983, i1=235, i2=100, i19=222, i20=-8, i21=-212, i22=-5, i23=-49520, i24=-14, i25=-10;
        float f2=-2.437F;
        float[] fArr =new float[N];
        double d1=0.46307;
        long[] lArr =new long[N];

        FuzzerUtils.init(fArr, -2.693F);
        FuzzerUtils.init(lArr, -190L);

        Test0872.instanceCount *= (Math.abs(i) + 45009);
        for (i1 = 190; i1 > 11; --i1) {
            i += (i1 * i1);
            fArr[i1] = (fMeth(iFld1) + -44843);
            Test0872.instanceCount += (i1 ^ i1);
            i19 = 1;
            do {
                Test0872.instanceCount += (i19 | i1);
                i = (int) Test0872.instanceCount;
                for (i20 = 1; 1 > i20; ++i20) {
                    try {
                        i21 = (i1 % i);
                        Test0872.iFld = (-743009081 / i2);
                        i = (90 % i2);
                    } catch (ArithmeticException a_e) {}
                    switch ((i19 % 2) + 50) {
                    case 50:
                        i21 += (((i20 * sFld) + i) - Test0872.instanceCount);
                        i21 += (i20 + Test0872.instanceCount);
                        iFld1 -= i20;
                    case 51:
                        Test0872.bFld = Test0872.bFld;
                    default:
                        fArr[i20] -= i1;
                        iArrFld = iArrFld;
                        iArrFld[i20 - 1] >>= i1;
                        Test0872.instanceCount = i;
                    }
                }
                sFld >>= (short)18592;
                iArrFld[i1] = (int) Test0872.instanceCount;
                f2 = i20;
            } while (++i19 < 140);
            for (i22 = 1; i22 < 140; i22++) {
                sFld *= (short)i21;
                Test0872.instanceCount += i20;
                lArr[i22] |= i22;
                for (i24 = i22; 2 > i24; ++i24) {
                    i = sFld;
                    f2 = (float)d1;
                    f2 -= -3;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("f2 i22 i23 = " + Float.floatToIntBits(f2) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 d1 = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("fArr lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0872.instanceCount Test0872.iFld Test0872.bFld = " + Test0872.instanceCount + "," + Test0872.iFld +
                "," + (Test0872.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld1 sFld Test0872.lArrFld = " + iFld1 + "," + sFld + "," +
                FuzzerUtils.checkSum(Test0872.lArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0872 _instance = new Test0872();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
