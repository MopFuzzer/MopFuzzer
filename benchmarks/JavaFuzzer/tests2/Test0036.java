// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:14 2023
public class Test0036 {

    public static final int N = 400;

    public static long instanceCount=-1187773252L;
    public static volatile byte byFld=114;
    public static short sFld=-29596;
    public static volatile double dFld=-56.109497;
    public static volatile float[] fArrFld =new float[N];
    public static volatile long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0036.fArrFld, 1.638F);
        FuzzerUtils.init(Test0036.lArrFld, -788580650L);
        FuzzerUtils.init(Test0036.iArrFld, 205);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s1, int i7) {

        int i8=14, i9=-12, i10=209, i11=-6, i12=-9979, i13=-187;
        float f1=0.616F;
        boolean b=true;
        double d=-2.128188;

        for (i8 = 21; i8 < 391; ++i8) {
            for (i10 = 1; 5 > i10; i10++) {
                f1 -= Test0036.instanceCount;
                if (b) continue;
                f1 = i11;
                Test0036.instanceCount /= (i9 | 1);
                Test0036.instanceCount >>= Test0036.instanceCount;
                if (i9 != 0) {
                    vMeth1_check_sum += s1 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i12 +
                        i13 + Double.doubleToLongBits(d);
                    return;
                }
                for (i12 = 1; i12 < 2; i12++) {
                    switch (((i12 % 1) * 5) + 115) {
                    case 118:
                        d -= Test0036.instanceCount;
                        i13 += i12;
                    default:
                        f1 = i7;
                        Test0036.iArrFld[i8] ^= i13;
                        Test0036.byFld *= (byte) i11;
                    }
                }
            }
        }
        vMeth1_check_sum += s1 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i12 + i13 +
            Double.doubleToLongBits(d);
    }

    public static void vMeth() {

        int i6=-3, i14=10, i15=-37374, i16=-1, i17=29155, i18=21209;
        float f2=0.155F;
        double d1=32.32714;

        Test0036.iArrFld[(i6 >>> 1) % N] += (int) (Test0036.instanceCount--);
        vMeth1(Test0036.sFld, i6);
        f2 += Test0036.instanceCount;
        for (d1 = 298; d1 > 7; d1 -= 2) {
            Test0036.iArrFld[(int) (d1)] += (int) d1;
            for (i15 = 11; i15 > 1; --i15) {
                if (i14 != 0) {
                    vMeth_check_sum += i6 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i14 + i15 + i16 +
                        i17 + i18;
                    return;
                }
                Test0036.fArrFld[i15 + 1] += Test0036.instanceCount;
                i14 += (int)-104.191F;
                for (i17 = 1; i17 < 2; ++i17) {
                    try {
                        i14 = (-1787728070 / i14);
                        i18 = (i14 % 43787);
                        i18 = (-11098 % i17);
                    } catch (ArithmeticException a_e) {}
                    if (i16 != 0) {
                        vMeth_check_sum += i6 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i14 + i15 +
                            i16 + i17 + i18;
                        return;
                    }
                    i16 += Test0036.sFld;
                    Test0036.instanceCount -= i14;
                    Test0036.instanceCount -= -5;
                }
            }
        }
        vMeth_check_sum += i6 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i14 + i15 + i16 + i17 + i18;
    }

    public static int iMeth(int i2, int i3) {

        byte by=-125;
        float f=-72.291F;
        int i4=55849;
        int i5=-14;
        int i19=-122;
        int i20=-23525;
        int[][] iArr =new int[N][N];
        boolean b1=false;
        boolean[] bArr =new boolean[N];
        short[] sArr1 =new short[N];

        FuzzerUtils.init(iArr, -34506);
        FuzzerUtils.init(sArr1, (short)27099);
        FuzzerUtils.init(bArr, false);

        i2 |= (int) ((by++) * Math.min(--Test0036.lArrFld[(i2 >>> 1) % N], (long) (-(f--))));
        for (i4 = 15; i4 < 321; ++i4) {
            i3 += i4;
            iArr[i4] = (iArr[i4] = (iArr[i4 - 1] = iArr[i4]));
            i5 -= (++iArr[i4 - 1][i4 + 1]);
            vMeth();
            i3 += i4;
            sArr1[i4 - 1] -= (short) Test0036.instanceCount;
        }
        bArr[(i4 >>> 1) % N] = b1;
        i5 = i4;
        for (i19 = 8; i19 < 391; i19++) {
            iArr[i19][i19] = (int) Test0036.instanceCount;
            i20 -= (int) Test0036.instanceCount;
            i20 += (i19 ^ i4);
            i3 = (int) Test0036.instanceCount;
        }
        long meth_res = i2 + i3 + by + Float.floatToIntBits(f) + i4 + i5 + (b1 ? 1 : 0) + i19 + i20 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr1) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-42228, i1=9280, i22=36550, i23=-55843, i24=14, i25=104, i26=-229, i27=-5, i28=-39;
        short s=14492;
        short[] sArr =new short[N];
        boolean b2=false;
        boolean[] bArr1 =new boolean[N];
        float f3=-63.88F;

        FuzzerUtils.init(sArr, (short)-12718);
        FuzzerUtils.init(bArr1, true);

        i = 1;
        while (++i < 124) {
            sArr[i - 1] = Short.reverseBytes((short)(--s));
            i1 = (int) (((i1 - i1) - (-(i1--))) + (Test0036.fArrFld[i] * iMeth(i1, i)));
            for (i22 = 8; i22 < 202; ++i22) {
                Test0036.iArrFld[i22] = Test0036.byFld;
            }
            Test0036.instanceCount += (i * i);
            switch ((((i >>> 1) % 5) * 5) + 51) {
            case 61:
            case 62:
                for (i24 = 8; i24 < 202; i24++) {
                    Test0036.iArrFld[i] = (int) Test0036.instanceCount;
                    i1 -= -50473;
                    bArr1[i] = b2;
                    if (true) continue;
                    Test0036.instanceCount += (((i24 * i24) + Test0036.byFld) - Test0036.instanceCount);
                    switch (((i22 >>> 1) % 2) * 5) {
                    case 5:
                        for (i26 = 1; 2 > i26; ++i26) {
                            if (true) break;
                            b2 = b2;
                            switch ((i26 % 3) + 30) {
                            case 30:
                                i23 = i;
                                i23 += (i26 - f3);
                                f3 = (float) Test0036.dFld;
                                break;
                            case 31:
                                Test0036.fArrFld[(-10 >>> 1) % N] = Test0036.byFld;
                                i27 = (int)-6534L;
                                i27 -= (int)-2.696F;
                                break;
                            case 32:
                            }
                            Test0036.iArrFld[i] = i22;
                            i25 = (int) Test0036.dFld;
                            Test0036.iArrFld[i24 + 1] *= Test0036.sFld;
                            i1 = (int)-4355148324473399633L;
                        }
                        Test0036.iArrFld[i + 1] -= 20130;
                        break;
                    case 6:
                        Test0036.iArrFld[i24] = i24;
                        break;
                    }
                }
                break;
            case 52:
                i27 -= i28;
                break;
            case 67:
            case 63:
                Test0036.instanceCount = i23;
                break;
            default:
                Test0036.iArrFld[i] = (int) Test0036.instanceCount;
            }
        }

        FuzzerUtils.out.println("i s i1 = " + i + "," + s + "," + i1);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 b2 i26 = " + i25 + "," + (b2 ? 1 : 0) + "," + i26);
        FuzzerUtils.out.println("i27 f3 i28 = " + i27 + "," + Float.floatToIntBits(f3) + "," + i28);
        FuzzerUtils.out.println("sArr bArr1 = " + FuzzerUtils.checkSum(sArr) + "," + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test0036.instanceCount Test0036.byFld Test0036.sFld = " + Test0036.instanceCount + "," + Test0036.byFld +
                "," + Test0036.sFld);
        FuzzerUtils.out.println("Test0036.dFld Test0036.fArrFld Test0036.lArrFld = " + Double.doubleToLongBits(Test0036.dFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0036.fArrFld)) + "," + FuzzerUtils.checkSum(Test0036.lArrFld));
        FuzzerUtils.out.println("Test0036.iArrFld = " + FuzzerUtils.checkSum(Test0036.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0036 _instance = new Test0036();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
