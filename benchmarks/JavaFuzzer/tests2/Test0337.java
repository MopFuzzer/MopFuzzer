// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:28 2023
public class Test0337 {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static byte byFld=-6;
    public static volatile float fFld=0.560F;
    public static short sFld=-7821;
    public static double dFld=-1.83711;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0337.iArrFld, 0);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(short s, int i5) {

        int i6=46957, i7=135, i8=-2, i9=-203, i10=-44108, i11=-159;
        boolean b=false;

        for (i6 = 7; i6 < 196; ++i6) {
            for (i8 = 1; i8 < 8; i8++) {
                for (i10 = 1; i10 < 2; ++i10) {
                    Test0337.byFld &= (byte) i6;
                    if (b) continue;
                    Test0337.iArrFld[i6] = i5;
                    i5 += i9;
                    if (b) {
                        Test0337.instanceCount -= i6;
                        i5 += i10;
                        Test0337.iArrFld = Test0337.iArrFld;
                        i11 += (i10 ^ i8);
                    }
                    Test0337.instanceCount = i8;
                }
                Test0337.instanceCount += (((i8 * i10) + i8) - Test0337.byFld);
                i9 <<= i11;
            }
        }
        vMeth_check_sum += s + i5 + i6 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0);
    }

    public static int iMeth() {

        int i12=9, i13=219, i14=13, i15=-10, i16=0, i17=1, i18=-2;
        short s1=27834;
        float f1=31.947F;
        boolean b1=false;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -10L);

        vMeth((short)(-16668), i12);
        Test0337.instanceCount = i12;
        lArr[(i12 >>> 1) % N] = Test0337.instanceCount;
        for (i13 = 379; 9 < i13; --i13) {
            i14 >>= (int) Test0337.instanceCount;
            lArr[i13] += -1;
            i12 += i13;
            Test0337.instanceCount -= s1;
            for (i15 = 1; i15 < 5; ++i15) {
                for (i17 = i15; i17 < 2; ++i17) {
                    i16 *= i17;
                    f1 -= i16;
                    Test0337.instanceCount = i17;
                }
            }
            if (b1) break;
            i14 += (i13 + i17);
        }
        long meth_res = i12 + i13 + i14 + s1 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i2, int i3) {

        int i4=-130;
        int i19=-5;
        int i20=-33702;
        int i21=-24161;
        int i22=247;
        int i23=5;
        int i24=-8941;
        int i25=38461;
        int[] iArr1 =new int[N];
        short s2=10538;

        FuzzerUtils.init(iArr1, -56619);

        iArr1[(i2 >>> 1) % N] = Integer.reverseBytes(i2--);
        i4 = iMeth();
        s2 -= (short)179;
        Test0337.instanceCount += i3;
        i2 = i3;
        for (i19 = 11; 341 > i19; i19++) {
            for (i21 = 1; i21 < 5; ++i21) {
                switch ((i21 % 2) + 27) {
                case 27:
                    i23 = 1;
                    while (++i23 < 2) {
                        i22 -= i22;
                    }
                    for (i24 = 1; i24 < 2; ++i24) {
                        i3 += (i24 * i24);
                        Test0337.byFld += (byte) (((i24 * Test0337.instanceCount) + i25) - i20);
                        Test0337.fFld = i4;
                        i3 *= i20;
                    }
                    break;
                case 28:
                    iArr1[i21] = i25;
                    break;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + s2 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=64;
        int i1=-49599;
        int i26=-60704;
        int i27=-166;
        int i28=-204;
        int i29=-11;
        int i30=2;
        int[] iArr =new int[N];
        float f=121.67F;
        float[] fArr =new float[N];
        byte by=-103;
        boolean b2=true;

        FuzzerUtils.init(iArr, -28);
        FuzzerUtils.init(fArr, 1.534F);

        i *= (int)((f - Math.max(i, i)) - (iArr[(i >>> 1) % N]++));
        i1 = 1;
        while (++i1 < 124) {
            by = (byte)(++i);
            i = (int)lMeth(i1, i);
        }
        i26 = 1;
        do {
            i = (int) Test0337.instanceCount;
            for (i27 = i26; i27 < 65; ++i27) {
                i <<= (int) Test0337.instanceCount;
                Test0337.iArrFld[i27 - 1] -= (int) Test0337.instanceCount;
                i28 = -3417;
                b2 = b2;
                f += -197;
                i28 = Test0337.sFld;
                i += (int) Test0337.instanceCount;
                Test0337.iArrFld[i26 - 1] *= i26;
                Test0337.iArrFld[i27 + 1] = i26;
            }
            Test0337.instanceCount += i26;
            Test0337.instanceCount += Test0337.instanceCount;
            Test0337.iArrFld[i26 - 1] = (int) Test0337.instanceCount;
            i = (int) Test0337.dFld;
            i28 += i27;
            for (i29 = 2; i29 < 65; i29++) {
                f += i29;
                i -= i29;
                i30 >>= i29;
                i30 += (int) Test0337.fFld;
                i30 = (int) Test0337.instanceCount;
                i30 += i29;
                Test0337.dFld += 0.117611;
                fArr[i26 - 1] += i30;
            }
        } while (++i26 < 386);

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("by i26 i27 = " + by + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 b2 i29 = " + i28 + "," + (b2 ? 1 : 0) + "," + i29);
        FuzzerUtils.out.println("i30 iArr fArr = " + i30 + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0337.instanceCount Test0337.byFld Test0337.fFld = " + Test0337.instanceCount + "," + Test0337.byFld +
                "," + Float.floatToIntBits(Test0337.fFld));
        FuzzerUtils.out.println("Test0337.sFld Test0337.dFld Test0337.iArrFld = " + Test0337.sFld + "," +
                Double.doubleToLongBits(Test0337.dFld) + "," + FuzzerUtils.checkSum(Test0337.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0337 _instance = new Test0337();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
