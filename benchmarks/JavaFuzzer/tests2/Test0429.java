// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0429 {

    public static final int N = 400;

    public static long instanceCount=1963534977L;
    public static float fFld=-78.21F;
    public static volatile boolean bFld=false;
    public static int[] iArrFld =new int[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0429.iArrFld, -226);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, int i10, int i11) {

        int i12=31502, i13=-56309, i14=-9, i15=13, i16=-246;
        double d1=98.97614;
        boolean b=false;
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(bArr, false);

        i12 = 1;
        while (++i12 < 266) {
            Test0429.fFld *= i12;
            for (i13 = 1; i13 < 6; ++i13) {
                i10 += (i13 ^ i12);
                i14 -= (int)d1;
                l2 -= i10;
            }
            i10 -= (int)l2;
            bArr[i12 - 1] = bArr[i12];
            Test0429.instanceCount = Test0429.instanceCount;
        }
        for (i15 = 6; i15 < 275; i15 += 2) {
            if (b) break;
        }
        vMeth1_check_sum += l2 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(long l1, int i3, int i4) {

        int i5=206;
        int i6=85;
        int i7=-239;
        int i8=-173;
        int i9=-43829;
        int[] iArr =new int[N];
        float f2=-53.899F;
        double d=4.124928;
        byte by=-45;

        FuzzerUtils.init(iArr, -7);

        Test0429.instanceCount = iArr[(i3 >>> 1) % N];
        i5 = 354;
        do {
            f2 *= ((++i3) >>> (i3++));
            i3 += (i5 * i3);
            for (i6 = 1; i6 < 13; i6++) {
                i4 += i7;
                f2 += (i6 * i6);
                try {
                    i3 = (-1410 % i3);
                    i4 = (i5 / 96);
                    iArr[i5] = (i6 / 138);
                } catch (ArithmeticException a_e) {}
                for (i8 = i6; i8 < 2; ++i8) {
                    d *= i6;
                    Test0429.instanceCount = (long) d;
                    d = (i9++);
                    i3 -= (++by);
                    vMeth1(Test0429.instanceCount, -16556, i4);
                    i4 += -10602;
                }
            }
        } while ((i5 -= 3) > 0);
        vMeth_check_sum += l1 + i3 + i4 + i5 + Float.floatToIntBits(f2) + i6 + i7 + i8 + i9 +
            Double.doubleToLongBits(d) + by + FuzzerUtils.checkSum(iArr);
    }

    public int iMeth(float f1) {

        long l=-28746L;
        int i2=-20627, i17=9, i18=-8690, i19=-145, i20=211, i21=-4, i22=-2352;
        double d2=2.10664;
        boolean b1=false;

        for (l = 3; l < 273; l++) {
            vMeth(l, i2, i2);
            i2 += (int)(((l * i2) + i2) - f1);
            try {
                i2 = (1084693462 / i2);
                i2 = (1676507901 % i2);
                i2 = (Test0429.iArrFld[(int) (l - 1)] % i2);
            } catch (ArithmeticException a_e) {}
            i2 = i2;
            for (i17 = (int)(l); i17 < 6; ++i17) {
                Test0429.instanceCount -= 2;
            }
        }
        d2 *= i18;
        for (i19 = 4; i19 < 127; i19++) {
            Test0429.iArrFld[i19] = (int) Test0429.instanceCount;
            for (i21 = 13; i21 > 1; --i21) {
                if (b1) {
                    i20 += (int)l;
                    if (i21 != 0) {
                    }
                } else if (b1) {
                    Test0429.instanceCount = i19;
                } else {
                    i20 = i21;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i2 + i17 + i18 + Double.doubleToLongBits(d2) + i19 + i20 + i21 +
            i22 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i1=4, i23=-14448, i24=-203, i25=-4, i26=-55491, i27=12, i28=77, i29=-43204;
        float f=20.521F;
        double d3=86.32595;
        short s1=30747;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 10L);

        for (i = 8; i < 269; i++) {
            f += (i + iMeth(Test0429.fFld));
            switch (((i % 10) * 5) + 61) {
            case 82:
                for (i23 = 4; i23 < 96; ++i23) {
                    d3 = i24;
                    for (i25 = 1; i25 < 2; ++i25) {
                        short s=-20840;
                        s += (short)(1.413F + (i25 * i25));
                        Test0429.bFld = Test0429.bFld;
                        d3 += Test0429.instanceCount;
                        Test0429.iArrFld[i] >>= i24;
                        i26 <<= -25011;
                        i26 += (i25 | i25);
                    }
                    for (i27 = 2; i27 > 1; i27 -= 3) {
                        switch ((i27 % 9) + 124) {
                        case 124:
                            Test0429.instanceCount = i29;
                            d3 += d3;
                            lArr[i27][i + 1] -= i24;
                            if (true) continue;
                        case 125:
                            i24 = i28;
                            s1 = (short)i24;
                            break;
                        case 126:
                        case 127:
                            d3 *= i;
                            Test0429.iArrFld[i23 - 1] <<= (int) Test0429.instanceCount;
                            lArr[i23][i27 - 1] -= Test0429.instanceCount;
                            Test0429.instanceCount += (long) Test0429.fFld;
                            break;
                        case 128:
                            dArrFld[i27] %= (i28 | 1);
                            s1 += (short)(i27 * i27);
                            i29 += i25;
                        case 129:
                            d3 *= Test0429.instanceCount;
                            i28 >>= -36;
                            i29 -= (int)d3;
                        case 130:
                            Test0429.iArrFld[i] >>= i;
                            break;
                        case 131:
                            i24 |= i1;
                            break;
                        case 132:
                            i26 ^= i26;
                            break;
                        default:
                            Test0429.instanceCount -= i28;
                        }
                    }
                }
                break;
            case 79:
            case 75:
                i29 += i23;
            case 62:
                Test0429.instanceCount -= Test0429.instanceCount;
                break;
            case 70:
                i26 -= 16809;
                break;
            case 74:
                Test0429.iArrFld[i + 1] *= s1;
                break;
            case 92:
                d3 = i23;
                break;
            case 78:
                Test0429.iArrFld[i + 1] = i1;
            case 88:
                i24 -= (int) Test0429.instanceCount;
                break;
            case 65:
                Test0429.iArrFld[i + 1] -= (int) Test0429.fFld;
                break;
            default:
                i1 = i26;
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i23 i24 d3 = " + i23 + "," + i24 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 s1 = " + i28 + "," + i29 + "," + s1);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0429.instanceCount Test0429.fFld Test0429.bFld = " + Test0429.instanceCount + "," +
                Float.floatToIntBits(Test0429.fFld) + "," + (Test0429.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0429.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test0429.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0429 _instance = new Test0429();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
