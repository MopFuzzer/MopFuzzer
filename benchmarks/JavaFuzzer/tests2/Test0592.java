// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0592 {

    public static final int N = 400;

    public static long instanceCount=-2478270510L;
    public static float fFld=51.80F;
    public static short sFld=27218;
    public int iFld=2;
    public boolean bFld=true;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0592.iArrFld, -230);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i8, int i9, byte by) {

        int i10=215, i11=-14, i12=-11656, i13=-222, i14=55968, i15=20182, i16=-4256;
        boolean b=false;
        double d=121.16259;
        short s=31789;

        for (i10 = 3; 331 > i10; ++i10) {
            i11 += (int) Test0592.instanceCount;
            for (i12 = 5; i12 > 1; --i12) {
                for (i14 = 1; i14 < 2; ++i14) {
                    i9 -= i8;
                    i16 += i10;
                    switch ((((i13 >>> 1) % 10) * 5) + 23) {
                    case 54:
                        b = b;
                        if (b) {
                            i15 >>= (int) Test0592.instanceCount;
                        } else if (b) {
                            Test0592.instanceCount *= Test0592.instanceCount;
                        }
                        break;
                    case 44:
                        Test0592.fFld += Test0592.instanceCount;
                        i9 *= -51945;
                        i15 = 131;
                        break;
                    case 50:
                        Test0592.iArrFld[i12 - 1] &= i8;
                        break;
                    case 43:
                        Test0592.iArrFld[i14] >>= (int) Test0592.instanceCount;
                        break;
                    case 62:
                        b = b;
                    case 51:
                        d += Test0592.instanceCount;
                        break;
                    case 59:
                        Test0592.iArrFld = FuzzerUtils.int1array(N, (int) -73);
                    case 55:
                        s = (short) Test0592.instanceCount;
                        break;
                    case 45:
                        Test0592.iArrFld[i10] = by;
                        break;
                    case 29:
                        i9 >>>= i10;
                    default:
                        i13 = -60;
                    }
                }
            }
        }
        long meth_res = i8 + i9 + by + i10 + i11 + i12 + i13 + i14 + i15 + i16 + (b ? 1 : 0) +
            Double.doubleToLongBits(d) + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        int i6=29745, i7=-4, i17=181, i18=-14, i19=150, i20=-13, i21=-42352, i22=14;
        float f=-35.631F;
        byte by1=-5;
        double d1=41.22775;
        boolean b1=true;

        for (i6 = 13; 333 > i6; i6++) {
            f += (--Test0592.iArrFld[i6 + 1]);
            f -= (i7 = Math.min(i7++, iMeth(i7, i6, by1)));
            d1 += i6;
        }
        i7 *= (int) Test0592.instanceCount;
        for (i17 = 5; i17 < 239; ++i17) {
            i7 += (int) Test0592.instanceCount;
        }
        i18 = i18;
        Test0592.instanceCount &= i17;
        for (i19 = 306; 7 < i19; i19 -= 3) {
            Test0592.iArrFld[i19 - 1] -= (int) l;
            for (i21 = 1; i21 < 16; i21++) {
                i7 += (i21 + l);
                if (b1) break;
                Test0592.fFld -= i20;
            }
        }
        vMeth1_check_sum += l + i6 + i7 + Float.floatToIntBits(f) + by1 + Double.doubleToLongBits(d1) + i17 + i18 + i19
            + i20 + i21 + i22 + (b1 ? 1 : 0);
    }

    public static void vMeth(int i, int i1) {

        int i2=-15415, i3=-72, i4=-2, i5=-242, i23=95;
        boolean b2=true;
        double d3=-1.92266;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -7L);

        Test0592.instanceCount -= (i1 + (Test0592.iArrFld[(i1 >>> 1) % N] = (int) (--lArr[(i1 >>> 1) % N])));
        for (i2 = 6; 334 > i2; ++i2) {
            byte by2=-47;
            for (i4 = 1; 5 > i4; i4 += 3) {
                double d2=-90.95804;
                vMeth1(Test0592.instanceCount);
                i += (int)d2;
            }
            i += (i2 * i2);
            by2 >>= (byte)-97;
            i23 = 1;
            do {
                switch ((i23 % 5) + 102) {
                case 102:
                    if (b2) continue;
                    Test0592.instanceCount = Test0592.instanceCount;
                    Test0592.iArrFld[i23 - 1] >>= i3;
                    break;
                case 103:
                    i3 = i4;
                    i3 += (-9 + (i23 * i23));
                    Test0592.instanceCount -= (long) Test0592.fFld;
                case 104:
                    i3 = i;
                case 105:
                    Test0592.sFld += (short) i4;
                    break;
                case 106:
                    Test0592.fFld += (float) d3;
                    break;
                }
            } while (++i23 < 5);
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + i23 + (b2 ? 1 : 0) + Double.doubleToLongBits(d3) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i24=-45903, i25=109, i26=-13095, i27=12, i28=-4, i29=1;
        float f1=0.695F;
        double d4=0.102857;

        vMeth(12, iFld);
        Test0592.instanceCount = -4;
        i24 = 1;
        do {
            Test0592.instanceCount -= i24;
            Test0592.iArrFld[i24 - 1] -= (int) Test0592.instanceCount;
            Test0592.fFld -= i24;
            for (i25 = 1; i25 < 67; i25++) {
                i26 += (23 + (i25 * i25));
                if (true) continue;
            }
            Test0592.iArrFld[i24] = (int) -112.120077;
            for (f1 = 2; f1 < 67; f1++) {
                Test0592.iArrFld[(int) (f1)] += i24;
                Test0592.instanceCount <<= i24;
                i26 -= i27;
                iFld = -11;
            }
            if (false) {
                for (i28 = 67; i28 > 2; i28 -= 2) {
                    Test0592.iArrFld[i24 - 1] >>= (int) Test0592.instanceCount;
                    i26 += (int) Test0592.instanceCount;
                    switch ((i24 % 1) + 48) {
                    case 48:
                        bFld = bFld;
                        Test0592.instanceCount -= -13417;
                        break;
                    }
                    i26 *= (int)f1;
                    Test0592.instanceCount += i28;
                }
                try {
                    i27 = (i29 / i25);
                    Test0592.iArrFld[i24] = (Test0592.iArrFld[i24 - 1] / Test0592.iArrFld[i24]);
                    i27 = (-159 / i27);
                } catch (ArithmeticException a_e) {}
                i26 += i24;
            } else {
                Test0592.instanceCount = i29;
                iFld -= i29;
                d4 = Test0592.instanceCount;
            }
            Test0592.iArrFld[i24 - 1] += 21063;
        } while (++i24 < 374);

        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f1 i27 i28 = " + Float.floatToIntBits(f1) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 d4 = " + i29 + "," + Double.doubleToLongBits(d4));

        FuzzerUtils.out.println("Test0592.instanceCount Test0592.fFld Test0592.sFld = " + Test0592.instanceCount + "," +
                Float.floatToIntBits(Test0592.fFld) + "," + Test0592.sFld);
        FuzzerUtils.out.println("iFld bFld Test0592.iArrFld = " + iFld + "," + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0592.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0592 _instance = new Test0592();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
