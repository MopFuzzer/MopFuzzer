// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0291 {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static double dFld=0.4062;
    public static float fFld=68.713F;
    public int iFld=55760;
    public static long[] lArrFld =new long[N];
    public volatile int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0291.lArrFld, -2974921622L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6) {

        int i7=243;
        int i8=7;
        int i9=-3;
        int i10=1;
        int[] iArr1 =new int[N];
        byte by1=49;
        short s=6538;
        float[] fArr =new float[N];

        FuzzerUtils.init(iArr1, -23);
        FuzzerUtils.init(fArr, 2.999F);

        switch (((13 >>> 1) % 3) + 108) {
        case 108:
            for (i7 = 197; i7 > 5; --i7) {
                float f=-92.554F;
                for (i9 = i7; i9 < 8; ++i9) {
                    i8 = i10;
                }
                iArr1[i7] = i7;
                i8 -= 126;
                iArr1[i7] &= i10;
                fArr[i7] = Test0291.instanceCount;
                Test0291.dFld += i8;
                i8 ^= i5;
                iArr1[i7] ^= (int) Test0291.instanceCount;
                by1 += (byte)(((i7 * i10) + f) - i9);
                fArr = fArr;
            }
            i6 >>= (int)1315228361833407022L;
        case 109:
            i5 |= s;
        case 110:
            i5 <<= i8;
        default:
            Test0291.dFld -= -243;
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + by1 + s + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1() {

        int i4=46078;
        int i11=51;
        int i12=-31;
        int i13=0;
        int[] iArr =new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 137);

        iArr[(i4 >>> 1) % N] = (++i4);
        vMeth2(i4, i4);
        i4 = i4;
        for (i11 = 7; i11 < 282; i11++) {
            iArr[i11 - 1] <<= i11;
            i13 = 6;
            do {
                b = true;
                Test0291.instanceCount += (((i13 * i4) + i11) - i12);
                Test0291.lArrFld[i13] = i13;
                Test0291.fFld -= 11;
                iArr[i11 - 1] >>= i11;
            } while (--i13 > 0);
            Test0291.instanceCount = i13;
            Test0291.instanceCount += (i11 * i11);
        }
        vMeth1_check_sum += i4 + i11 + i12 + i13 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(int i2, int i3) {

        int i14=-187;
        int i15=-248;
        int i16=-63322;
        int i17=-202;
        int i18=58314;
        int i19=11;
        int[] iArr2 =new int[N];
        byte by2=-103;

        FuzzerUtils.init(iArr2, 23290);

        i3 += i2;
        vMeth1();
        i2 -= i3;
        i2 = i2;
        for (i14 = 11; i14 < 292; i14++) {
            Test0291.fFld = i15;
            Test0291.fFld += Test0291.instanceCount;
            by2 >>= (byte)i3;
            for (i16 = 1; i16 < 6; i16++) {
                for (i18 = 1; i18 < 2; ++i18) {
                    iArr2[i16] = (int) Test0291.instanceCount;
                    i15 = 11;
                    Test0291.instanceCount >>= Test0291.instanceCount;
                    i17 = 5;
                    Test0291.fFld += i18;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i14 + i15 + by2 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        byte by=-2;
        int i=109, i1=-7, i20=89, i21=12, i22=4, i23=-163, i24=-122, i25=-104;
        long l=-203L;

        by = (byte)-1;
        for (i = 6; i < 162; ++i) {
            vMeth(i1, iFld);
            for (i20 = 161; i20 > 1; i20 -= 3) {
                short s1=19760;
                iFld = (int) Test0291.instanceCount;
                Test0291.fFld += i20;
                i1 = i22;
                s1 -= (short)i20;
                Test0291.instanceCount += (i20 * i);
                iFld += i1;
                i22 -= iFld;
                i1 = 9;
            }
            for (i23 = 5; i23 < 161; i23++) {
                i25 = 1;
                do {
                    Test0291.lArrFld[i - 1] <<= -7;
                    iArrFld[i23] = (int) Test0291.instanceCount;
                    l += (-2714751046L + (i25 * i25));
                    iFld = (int)1257164594L;
                    if (true) {
                        i24 |= iFld;
                        i1 = i1;
                        i21 += (((i25 * l) + i) - i24);
                        l += (long) Test0291.dFld;
                    }
                    i21 = (int)1.348F;
                    if (false) break;
                    Test0291.dFld = i22;
                    Test0291.dFld -= i20;
                } while (++i25 < 2);
            }
            i24 = (int) Test0291.instanceCount;
            by -= (byte)9;
            i22 >>>= i21;
        }

        FuzzerUtils.out.println("by i i1 = " + by + "," + i + "," + i1);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("l = " + l);

        FuzzerUtils.out.println("Test0291.instanceCount Test0291.dFld Test0291.fFld = " + Test0291.instanceCount + "," +
                Double.doubleToLongBits(Test0291.dFld) + "," + Float.floatToIntBits(Test0291.fFld));
        FuzzerUtils.out.println("iFld Test0291.lArrFld iArrFld = " + iFld + "," + FuzzerUtils.checkSum(Test0291.lArrFld) + ","
            + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0291 _instance = new Test0291();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
