// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0608 {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public volatile int iFld=17164;
    public static float fFld=-2.611F;
    public static byte[] byArrFld =new byte[N];
    public static int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0608.byArrFld, (byte) -31);
        FuzzerUtils.init(Test0608.iArrFld, 24157);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        int i6=1;
        int i7=153;
        int i8=-55720;
        int i9=68;
        int[] iArr =new int[N];
        boolean b1=false;
        double d=47.19180;
        byte by=28;

        FuzzerUtils.init(iArr, 80);

        i6 = 1;
        do {
            i5 = (int) Test0608.fFld;
            for (i7 = 1; i7 < 5; ++i7) {
                i5 *= i7;
            }
            i8 = i7;
            if (b1) continue;
            d -= i5;
            i9 = 1;
            while (++i9 < 5) {
                if (true) {
                    iArr[i6 - 1] -= i7;
                    i5 = by;
                    iArr[i6 - 1] -= by;
                } else if (b1) {
                    Test0608.byArrFld[i9 - 1] = (byte) i6;
                    i8 = i7;
                }
                Test0608.instanceCount = i6;
            }
        } while (++i6 < 374);
        vMeth2_check_sum += i5 + i6 + i7 + i8 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i9 + by +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(boolean b, int i3, int i4) {

        int i10=-7, i11=-41799, i12=-190, i13=-11288, i14=6682, i15=13;

        vMeth2(i4);
        for (i10 = 5; i10 < 247; i10++) {
            i11 -= i4;
            i12 = i4;
            i13 = 1;
            do {
                i14 = 1;
                do {
                    Test0608.instanceCount += (((i14 * i14) + i12) - i14);
                    i11 = (int)2571883141L;
                    i11 += (int) Test0608.fFld;
                } while ((i14 += 3) < 1);
            } while (++i13 < 7);
            Test0608.instanceCount += (long) Test0608.fFld;
            i15 = 1;
            while (++i15 < 7) {
                if (i12 != 0) {
                    vMeth1_check_sum += (b ? 1 : 0) + i3 + i4 + i10 + i11 + i12 + i13 + i14 + i15;
                    return;
                }
                i12 -= (int) Test0608.instanceCount;
                i4 *= i3;
                Test0608.iArrFld[i15 + 1] += (int) 13L;
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i3 + i4 + i10 + i11 + i12 + i13 + i14 + i15;
    }

    public void vMeth() {

        int i=11, i1=-203, i2=-50164, i16=-13, i17=-7901, i18=-67;
        boolean b2=false;
        long l=51804L;
        long[] lArr =new long[N];
        byte by1=92;

        FuzzerUtils.init(lArr, 4116715265104355460L);

        i = 1;
        while (++i < 164) {
            if (b2) {
                for (i1 = 1; i1 < 10; i1++) {
                    vMeth1(b2, i1, i1);
                    i2 >>= (int)209L;
                    lArr[i] *= i;
                    if (b2) continue;
                }
                iFld += (int)-3L;
            } else {
                if (b2) continue;
            }
            for (i16 = 1; i16 < 10; i16++) {
                i17 = i1;
            }
            Test0608.instanceCount = (long) Test0608.fFld;
        }
        for (l = 5; l < 225; ++l) {
            i17 = by1;
            Test0608.instanceCount += (l * l);
        }
        vMeth_check_sum += i + i1 + i2 + (b2 ? 1 : 0) + i16 + i17 + l + i18 + by1 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=-14, i20=-50901, i21=219, i22=-34144, i23=-27, i24=55090, i25=52635, i26=-16, i27=14, i28=-17504,
            i29=172;
        short s=-9543;
        double[] dArr =new double[N];
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(dArr, -103.38602);
        FuzzerUtils.init(bArr, true);

        dArr = (dArr = dArr);
        iFld = (--iFld);
        vMeth();
        for (i19 = 21; i19 < 359; ++i19) {
            i20 -= (int)64.101550;
            i20 += (i19 ^ i19);
            for (i21 = 4; i21 < 74; i21 += 2) {
                int i30=221;
                Test0608.instanceCount *= i19;
                for (i23 = 1; i23 < 3; ++i23) {
                    i20 -= (int) Test0608.instanceCount;
                    bArr[i21 + 1] = true;
                }
                for (i25 = 3; 1 < i25; i25--) {
                    Test0608.instanceCount += i22;
                    i26 -= (int) Test0608.fFld;
                    Test0608.iArrFld[i21] = s;
                    i26 = i26;
                    Test0608.instanceCount -= i21;
                    i26 += (i25 * i24);
                    Test0608.instanceCount = i23;
                }
                Test0608.fFld *= Test0608.fFld;
                switch (((i21 % 3) * 5) + 78) {
                case 87:
                    i26 = i25;
                    Test0608.instanceCount += (((i21 * i22) + i27) - i20);
                    try {
                        i20 = (26467 % i21);
                        Test0608.iArrFld[i21 - 1] = (1414021633 / Test0608.iArrFld[i21]);
                        i27 = (1512893171 / i22);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 93:
                    lArrFld[i19] ^= i23;
                    Test0608.iArrFld[(i20 >>> 1) % N] = i25;
                    for (i28 = 1; i28 < 3; ++i28) {
                        Test0608.instanceCount += (12L + (i28 * i28));
                        lArrFld[i28 - 1] += iFld;
                        Test0608.instanceCount += i28;
                    }
                    break;
                case 84:
                    Test0608.instanceCount = i30;
                default:
                    Test0608.fFld -= i21;
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 s = " + i25 + "," + i26 + "," + s);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("dArr bArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0608.instanceCount iFld Test0608.fFld = " + Test0608.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0608.fFld));
        FuzzerUtils.out.println("Test0608.byArrFld Test0608.iArrFld lArrFld = " + FuzzerUtils.checkSum(Test0608.byArrFld) + "," +
                FuzzerUtils.checkSum(Test0608.iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0608 _instance = new Test0608();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
