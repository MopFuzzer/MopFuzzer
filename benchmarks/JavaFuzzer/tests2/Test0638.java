// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:41 2023
public class Test0638 {

    public static final int N = 400;

    public static long instanceCount=-29L;
    public static short sFld=-21762;
    public volatile double dFld=126.33074;
    public static volatile byte byFld=-99;
    public boolean bFld=false;
    public int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0638.lArrFld, 1L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l, int i4, int i5) {

        int i6=-176;
        int i7=-23153;
        int i8=1;
        int i9=-55064;
        int[] iArr =new int[N];
        boolean b=false;
        float f=0.422F, f1=80.26F;

        FuzzerUtils.init(iArr, -5);

        for (i6 = 3; i6 < 128; ++i6) {
            if (b) {
                switch ((i6 % 1) + 121) {
                case 121:
                    if (b) continue;
                    f = 1;
                    do {
                        Test0638.instanceCount = -38218;
                        b = b;
                        iArr[(int)(f - 1)] <<= i4;
                        f1 += (((f * i5) + i5) - l);
                        f1 = i6;
                        iArr[(int)(f)] = i6;
                        for (i8 = 1; i8 < 4; ++i8) {
                            i5 += (((i8 * i5) + i4) - i5);
                            i5 = i9;
                            i7 -= (int)f;
                        }
                    } while ((f += 3) < 13);
                    break;
                default:
                    i9 += (((i6 * Test0638.instanceCount) + i8) - i5);
                }
            } else {
                l = i6;
            }
        }
        vMeth_check_sum += l + i4 + i5 + i6 + i7 + (b ? 1 : 0) + Float.floatToIntBits(f) + Float.floatToIntBits(f1) +
            i8 + i9 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth1(int i3) {

        double d=1.56611;
        int i10=40;
        int i11=138;
        int i12=3;
        int i13=18899;
        int[] iArr1 =new int[N];
        long l1=-3509964812L;
        float f2=16.401F, f3=1.470F;

        FuzzerUtils.init(iArr1, 27);

        vMeth(Test0638.instanceCount, i3, -93);
        i3 += i3;
        Test0638.instanceCount *= i3;
        i3 <<= -92;
        i3 |= (int) Test0638.instanceCount;
        d += -229;
        i3 += (int) Test0638.instanceCount;
        iArr1[(-221 >>> 1) % N] += i10;
        i3 &= i10;
        for (l1 = 5; l1 < 167; ++l1) {
            for (i12 = 1; 10 > i12; ++i12) {
                f2 = 2;
                do {
                    Test0638.byFld = (byte) Test0638.sFld;
                    f3 = i13;
                    i11 += (int) (((f2 * i10) + l1) - Test0638.instanceCount);
                } while ((f2 -= 3) > 0);
            }
        }
        long meth_res = i3 + Double.doubleToLongBits(d) + i10 + l1 + i11 + i12 + i13 + Float.floatToIntBits(f2) +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i1) {

        int i2=4, i14=224, i15=-71, i16=51250;
        boolean b1=true;
        double d1=1.44982;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 31961L);

        iArrFld[(i1 >>> 1) % N] /= (int) ((Math.min(i1++, Test0638.sFld - -103) + ((i1 - 62148) + (i1 - i1))) | 1);
        i2 = 1;
        while (++i2 < 316) {
            switch (((i2 % 1) * 5) + 42) {
            case 43:
                lArr[i2] = i1;
                i1 = (int)(((++dFld) - i1) + ((iArrFld[i2] = -162) - iMeth1(i1)));
                break;
            default:
                if (b1) break;
                for (i14 = 1; i14 < 5; i14++) {
                    i1 = i1;
                    i15 /= (int)(i2 | 1);
                    i15 = i2;
                    i1 -= i15;
                    for (d1 = 1; d1 < 2; ++d1) {
                        Test0638.instanceCount += (long) (((d1 * i2) + i14) - i16);
                        lArr = lArr;
                        Test0638.instanceCount &= i14;
                    }
                }
            }
        }
        long meth_res = i1 + i2 + (b1 ? 1 : 0) + i14 + i15 + Double.doubleToLongBits(d1) + i16 +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=-40501, i18=-9, i19=193, i20=-235, i21=-2860, i22=-32205;
        long l2=2026417804L;
        float f4=0.979F;
        boolean[][] bArr =new boolean[N][N];

        FuzzerUtils.init(bArr, true);

        for (int i : iArrFld) {
            iMeth(i);
            i -= (int) Test0638.instanceCount;
            for (i17 = 2; 63 > i17; i17++) {
                i = 58064;
                iArrFld[i17 - 1] += i18;
                try {
                    i18 = (i17 % 24966);
                    i18 = (iArrFld[i17 + 1] % -152);
                    i18 = (iArrFld[i17] % -59930);
                } catch (ArithmeticException a_e) {}
                Test0638.instanceCount *= 154;
            }
            if (true) {
                Test0638.instanceCount = Test0638.instanceCount;
                try {
                    iArrFld[(i18 >>> 1) % N] = (33283 / i);
                    i18 = (48966 / i);
                    i = (i / -839);
                } catch (ArithmeticException a_e) {}
                switch ((((53746 >>> 1) % 2) * 5) + 73) {
                case 81:
                    l2 = 1;
                    while (++l2 < 63) {
                        i19 = 1;
                        while (--i19 > 0) {
                            iArrFld[(int)(l2 - 1)] <<= i;
                            i -= (int)dFld;
                            i ^= i19;
                        }
                    }
                    for (f4 = 1; 63 > f4; ++f4) {
                        Test0638.instanceCount += i;
                        Test0638.instanceCount = Test0638.byFld;
                        for (i21 = 1; i21 < 2; ++i21) {
                            bArr[(int)(f4)][(int)(f4)] = bFld;
                            iArrFld[(int) (f4 - 1)] = (int) Test0638.instanceCount;
                            Test0638.instanceCount += (i21 * i21);
                            bFld = bFld;
                            Test0638.byFld *= (byte) i;
                            Test0638.lArrFld[i21] >>= i22;
                            Test0638.byFld -= (byte) f4;
                            i20 = i20;
                        }
                        i18 += (int)(f4 * f4);
                    }
                    break;
                case 83:
                    try {
                        iArrFld[(-181 >>> 1) % N] = (893 % iArrFld[(i18 >>> 1) % N]);
                        i = (187 / i20);
                        iArrFld[(8 >>> 1) % N] = (-255 % iArrFld[(i19 >>> 1) % N]);
                    } catch (ArithmeticException a_e) {}
                    break;
                default:
                    if (bFld) break;
                }
            } else {
                dFld *= 5;
            }
        }

        FuzzerUtils.out.println("i17 i18 l2 = " + i17 + "," + i18 + "," + l2);
        FuzzerUtils.out.println("i19 f4 i20 = " + i19 + "," + Float.floatToIntBits(f4) + "," + i20);
        FuzzerUtils.out.println("i21 i22 bArr = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0638.instanceCount Test0638.sFld dFld = " + Test0638.instanceCount + "," + Test0638.sFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0638.byFld bFld iArrFld = " + Test0638.byFld + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0638.lArrFld = " + FuzzerUtils.checkSum(Test0638.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0638 _instance = new Test0638();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
