// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:50 2023
public class Test0810 {

    public static final int N = 400;

    public static long instanceCount=17086L;
    public static boolean bFld=false;
    public static double dFld=0.98658;
    public static short sFld=-7653;
    public static float fFld=-85.520F;
    public static byte byFld=-69;
    public static int[] iArrFld =new int[N];
    public volatile long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0810.iArrFld, -2);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i3) {

        int i4=-139;
        int i5=-59;
        int i6=5;
        int i7=42;
        int i8=-22137;
        int i9=-18768;
        int i10=14;
        int i11=10;
        int[] iArr =new int[N];
        float f=-34.112F;
        double d=0.129186;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(lArr, 8560L);

        for (i4 = 9; i4 < 329; i4++) {
            i5 += (int)1.46398;
            if (Test0810.bFld) continue;
            f *= i3;
            i6 = 1;
            do {
                iArr[i6 + 1] *= (int)1633388943L;
            } while (++i6 < 5);
        }
        for (i7 = 3; 218 > i7; ++i7) {
            lArr[i7][i7 - 1] -= i4;
        }
        f -= i7;
        i9 = 1;
        do {
            if (Test0810.bFld) {
                for (i10 = 4; 1 < i10; i10--) {
                    Test0810.instanceCount += i9;
                }
            } else {
            }
            Test0810.instanceCount *= (long) d;
            iArr[i9 - 1] += (int)l1;
        } while (++i9 < 397);
        vMeth2_check_sum += l1 + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + i11 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l, int i2) {

        int i12=-135, i13=86, i14=-59706, i15=5;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 1.82149);

        vMeth2(l, i2);
        if (Test0810.bFld) {
            i2 -= i12;
        }
        i2 <<= i2;
        i12 &= (int)l;
        i2 = (int) Test0810.dFld;
        i12 += i12;
        i13 = 1;
        while (++i13 < 284) {
            for (i14 = 1; i14 < 6; i14++) {
                Test0810.sFld = (short) i15;
                i15 += -8;
                l += i14;
                l -= i15;
                i12 = Test0810.sFld;
            }
        }
        l = i13;
        vMeth1_check_sum += l + i2 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i1=55785;
        int i16=-6;
        int i17=38;
        int i18=8;
        int[][] iArr1 =new int[N][N];
        long l2=949698736478151641L, l3=-3712896271L;
        byte by=89;

        FuzzerUtils.init(iArr1, -33938);

        i1 = Integer.reverseBytes(i1);
        vMeth1(229L, i1);
        Test0810.iArrFld = Test0810.iArrFld;
        Test0810.instanceCount = i1;
        for (i16 = 24; i16 < 392; ++i16) {
            for (l2 = 1; l2 < 5; ++l2) {
                i18 += (int)(l2 - i18);
                l3 = 1;
                do {
                    iArr1 = FuzzerUtils.int2array(N, (int)-14);
                    i17 += (int)(l3 - i16);
                    i17 += (-6427 + (l3 * l3));
                    i18 *= (int)l3;
                    Test0810.fFld = Test0810.instanceCount;
                    Test0810.instanceCount >>= by;
                    Test0810.bFld = Test0810.bFld;
                } while (++l3 < 2);
            }
        }
        vMeth_check_sum += i1 + i16 + i17 + l2 + i18 + l3 + by + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-113, i19=179, i20=14;
        float[] fArr =new float[N];
        double[] dArr1 =new double[N];

        FuzzerUtils.init(fArr, 2.756F);
        FuzzerUtils.init(dArr1, 80.120140);

        i >>= (--i);
        i = ((--i) - i);
        vMeth();
        fArr[(i >>> 1) % N] *= 116;
        Test0810.fFld *= i;
        i = i;
        Test0810.instanceCount = Test0810.byFld;
        Test0810.dFld *= i;
        Test0810.sFld >>= (short) Test0810.instanceCount;
        Test0810.instanceCount -= (long) Test0810.fFld;
        for (i19 = 277; i19 > 12; i19--) {
            switch (((i19 % 9) * 5) + 60) {
            case 64:
                if (Test0810.bFld) break;
                break;
            case 71:
                i = -122;
                i20 += (i19 * i19);
                switch (((i19 % 7) * 5) + 26) {
                case 57:
                    if (Test0810.bFld) {
                        Test0810.fFld = 14645;
                    }
                case 44:
                    i20 += i19;
                    break;
                case 36:
                    Test0810.instanceCount *= i20;
                    Test0810.instanceCount = Test0810.instanceCount;
                    break;
                case 37:
                case 47:
                case 28:
                    if (Test0810.bFld) continue;
                    i20 += (((i19 * Test0810.fFld) + Test0810.sFld) - i);
                case 30:
                    if (Test0810.bFld) continue;
                    dArr1[i19 - 1] *= i20;
                    break;
                }
                Test0810.instanceCount += i19;
                break;
            case 76:
                i20 <<= i;
                i += (((i19 * i19) + Test0810.instanceCount) - i20);
                if (Test0810.bFld) continue;
                lArrFld[i19] >>>= i;
            case 90:
                Test0810.instanceCount >>>= i20;
                break;
            case 100:
                i = (int) Test0810.fFld;
                break;
            case 101:
                try {
                    Test0810.iArrFld[i19 - 1] = (i20 / -198);
                    i = (24100 / i19);
                    Test0810.iArrFld[i19 + 1] = (i20 / i);
                } catch (ArithmeticException a_e) {}
                break;
            case 87:
            case 102:
                i >>= i19;
                break;
            case 98:
                if (true) continue;
                break;
            default:
                i20 = i19;
            }
        }

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("fArr dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0810.instanceCount Test0810.bFld Test0810.dFld = " + Test0810.instanceCount + "," + (Test0810.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(Test0810.dFld));
        FuzzerUtils.out.println("Test0810.sFld Test0810.fFld Test0810.byFld = " + Test0810.sFld + "," + Float.floatToIntBits(Test0810.fFld)
                + "," + Test0810.byFld);
        FuzzerUtils.out.println("Test0810.iArrFld lArrFld = " + FuzzerUtils.checkSum(Test0810.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0810 _instance = new Test0810();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
