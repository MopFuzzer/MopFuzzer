// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:53 2023
public class Test0894 {

    public static final int N = 400;

    public static long instanceCount=-6008502565253127036L;
    public static short sFld=28804;
    public volatile byte byFld=28;
    public boolean bFld=false;
    public static int[] iArrFld =new int[N];
    public static short[] sArrFld =new short[N];
    public static boolean[][] bArrFld =new boolean[N][N];
    public static volatile float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0894.iArrFld, -8);
        FuzzerUtils.init(Test0894.sArrFld, (short) 2132);
        FuzzerUtils.init(Test0894.bArrFld, false);
        FuzzerUtils.init(Test0894.fArrFld, -43.68F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4, int i5) {

        double d1=0.69585;
        int i6=4, i7=4, i8=-24929, i9=-242, i10=99;
        float f2=58.362F;
        float[] fArr =new float[N];
        long l2=8L;
        short s=1768;
        byte by=-21;

        FuzzerUtils.init(fArr, -2.277F);

        i4 = i4;
        fArr[(i5 >>> 1) % N] = (float)d1;
        for (i6 = 17; i6 < 360; i6++) {
            i4 += (((i6 * f2) + i5) - Test0894.instanceCount);
            Test0894.iArrFld = Test0894.iArrFld;
            l2 = 1;
            while (++l2 < 5) {
                i8 += (int)(l2 + l2);
                switch ((int)((l2 % 6) + 94)) {
                case 94:
                    for (i9 = i6; i9 < 1; i9++) {
                        fArr = fArr;
                        Test0894.sArrFld[i9 + 1] += (short) -7;
                        Test0894.instanceCount += (long) f2;
                        i8 >>= (int) Test0894.instanceCount;
                        Test0894.instanceCount = i5;
                        Test0894.instanceCount += s;
                    }
                    break;
                case 95:
                case 96:
                    i4 += s;
                    break;
                case 97:
                    Test0894.iArrFld = Test0894.iArrFld;
                    break;
                case 98:
                    i4 += (int)(((l2 * by) + i5) - f2);
                    break;
                case 99:
                    Test0894.instanceCount += l2;
                default:
                    i4 = (int)l2;
                }
            }
        }
        long meth_res = i4 + i5 + Double.doubleToLongBits(d1) + i6 + i7 + Float.floatToIntBits(f2) + l2 + i8 + i9 + i10
            + s + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l1, int i3, double d) {

        int i11=53429;
        int i12=-184;
        int i13=229;
        int i14=221;
        int i15=48671;
        int i16=-186;
        int[] iArr =new int[N];
        boolean b=false;
        byte by1=-96;

        FuzzerUtils.init(iArr, -181);

        iArr[(i3 >>> 1) % N] = (iMeth1(13, i3) + -12);
        for (i11 = 16; i11 < 304; i11++) {
            Test0894.instanceCount += (i11 * i11);
            for (i13 = 1; i13 < 6; i13++) {
                Test0894.sFld = (short) i13;
                i15 = 1;
                do {
                    i14 = i11;
                    i14 = -45502;
                    Test0894.bArrFld[i11][i15 + 1] = b;
                    l1 = 4147992600L;
                    l1 += (i15 ^ i15);
                    iArr[i15] >>= (int)l1;
                    i14 += i11;
                } while (++i15 < 2);
                by1 = (byte)51722;
                l1 -= i16;
            }
        }
        vMeth_check_sum += l1 + i3 + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + i15 + (b ? 1 : 0) + by1 + i16
            + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l) {

        int i17=-7901, i18=-21, i19=-58094, i20=-14424, i21=10;
        double d2=2.31845;
        float f3=-1.68F;
        boolean b2=true;

        vMeth(Test0894.instanceCount, i17, d2);
        if (b2) {
            i18 = 1;
            do {
                i17 = i17;
                for (i19 = 1; i19 < 5; ++i19) {
                    boolean b1=false;
                    if (b1) break;
                    i20 = (int)f3;
                    Test0894.instanceCount ^= i18;
                    Test0894.iArrFld[i18] |= (int) l;
                    i20 += i18;
                }
                switch ((i18 % 1) + 44) {
                case 44:
                    i21 = 1;
                    while (++i21 < 5) {
                        Test0894.fArrFld[i18 - 1] = i19;
                        if (false) break;
                        Test0894.instanceCount %= (Test0894.instanceCount | 1);
                    }
                    break;
                default:
                    f3 = i17;
                }
            } while (++i18 < 331);
        } else if (b2) {
            f3 = i20;
        } else {
            i20 = 14;
        }
        long meth_res = l + i17 + Double.doubleToLongBits(d2) + i18 + i19 + i20 + Float.floatToIntBits(f3) + i21 + (b2
            ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-44.573F, f1=1.907F, f4=0.695F, f5=37.921F;
        int i=51, i1=145, i2=-24405, i22=-5, i23=53714, i24=-63091, i25=26227, i26=97;
        double d3=0.96929;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)119);

        for (f = 10; f < 315; f += 2) {
            for (i1 = (int)(f); i1 < 165; ++i1) {
                f1 -= (iMeth(Test0894.instanceCount) + f4);
                for (f5 = 1; f5 < 1; ++f5) {
                    i22 -= i22;
                    f1 = Test0894.instanceCount;
                    i >>>= 36;
                    i2 += i2;
                    Test0894.instanceCount = -2;
                }
                f4 = f4;
                for (i23 = 1; i23 < 1; i23++) {
                    i *= i23;
                    i2 += (i23 * i23);
                    Test0894.instanceCount >>= -36;
                    Test0894.instanceCount -= 11;
                    byFld >>= (byte)i24;
                    d3 -= i22;
                }
                if (bFld) break;
                switch ((i1 % 1) + 70) {
                case 70:
                    Test0894.iArrFld[(int) (f - 1)] = (int) Test0894.instanceCount;
                }
                i22 = i23;
                i += (i1 + i23);
                byArr[(int)(f)] = (byte)-45.52F;
            }
            i2 += i;
            for (i25 = 7; i25 < 165; i25++) {
                i = (int)d3;
                if (bFld) {
                    Test0894.iArrFld[i25 + 1] -= i24;
                    Test0894.iArrFld[(int) (f)] -= i22;
                    Test0894.sFld = (short) i22;
                } else if (bFld) {
                    Test0894.instanceCount = Test0894.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 f1 f4 = " + i2 + "," + Float.floatToIntBits(f1) + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("f5 i22 i23 = " + Float.floatToIntBits(f5) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 d3 i25 = " + i24 + "," + Double.doubleToLongBits(d3) + "," + i25);
        FuzzerUtils.out.println("i26 byArr = " + i26 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0894.instanceCount Test0894.sFld byFld = " + Test0894.instanceCount + "," + Test0894.sFld + "," +
            byFld);
        FuzzerUtils.out.println("bFld Test0894.iArrFld Test0894.sArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0894.iArrFld) + "," + FuzzerUtils.checkSum(Test0894.sArrFld));
        FuzzerUtils.out.println("Test0894.bArrFld Test0894.fArrFld = " + FuzzerUtils.checkSum(Test0894.bArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0894.fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0894 _instance = new Test0894();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
