// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:40 2023
public class Test0603 {

    public static final int N = 400;

    public static long instanceCount=7518936189380365923L;
    public int iFld=3;
    public static short sFld=12377;
    public static int iFld1=-14;
    public int iFld2=3757;
    public float fFld=26.534F;
    public long[] lArrFld =new long[N];
    public int[] iArrFld =new int[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(double d1, int i6) {

        int i7=130;
        int i8=175;
        int i9=41223;
        int i10=-12358;
        int[] iArr =new int[N];
        float f1=39.273F;
        byte by1=99;
        boolean b=true;
        short[] sArr =new short[N];
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr, -239);
        FuzzerUtils.init(sArr, (short)-24660);
        FuzzerUtils.init(lArr, 6L);

        i6 -= i6;
        for (i7 = 6; i7 < 300; i7 += 2) {
            i8 = i6;
            switch ((i7 % 6) + 51) {
            case 51:
                Test0603.instanceCount = i6;
                break;
            case 52:
                switch ((i7 % 1) + 123) {
                case 123:
                    i6 = (int) Test0603.instanceCount;
                    for (i9 = 1; i9 < 11; ++i9) {
                        f1 = by1;
                        d1 = Test0603.instanceCount;
                        iArr[i9 - 1] += 7;
                        switch ((((i9 >>> 1) % 7) * 5) + 72) {
                        case 104:
                            if (i10 != 0) {
                            }
                            break;
                        case 105:
                            i6 += (2023 + (i9 * i9));
                            iArr[i7 - 1] = i10;
                            break;
                        case 74:
                            i10 += (i9 ^ i9);
                            break;
                        case 86:
                        case 101:
                            iArr[i9] += i7;
                        case 99:
                            i6 += (i9 * i9);
                            break;
                        case 102:
                            i10 = i10;
                            break;
                        default:
                            sArr = sArr;
                        }
                    }
                }
            case 53:
                i10 >>= i8;
            case 54:
                b = b;
                break;
            case 55:
                i8 += (int)d1;
                break;
            case 56:
                lArr[i7 - 1] *= i9;
                break;
            default:
                iArr[i7 - 1] -= -3;
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + by1 + (b ? 1
            : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4, long l) {

        int i5=-52199;
        float f=0.939F;
        double d2=2.79232;

        i5 = 1;
        while (++i5 < 376) {
            i4 += Test0603.sFld;
            l += (((i5 * f) + i5) - Test0603.sFld);
            i4 += iMeth(d2, i5);
        }
        vMeth_check_sum += i4 + l + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2);
    }

    public long lMeth() {

        short s1=-8074;
        byte by=122;
        int i2=-40778, i3=153, i11=-17144, i12=-251, i13=-7542, i14=-3;
        long l1=2277895979909446572L;
        double d3=2.61749;

        s1 = by;
        for (i2 = 4; i2 < 130; i2++) {
            i3 >>>= iFld;
            vMeth(i2, 2L);
            for (i11 = 12; i11 > 1; i11 -= 3) {
                i12 += (i11 ^ i11);
                iFld += -51623;
            }
            by >>= (byte)i2;
        }
        iArrFld[(i12 >>> 1) % N] -= iFld;
        lArrFld = lArrFld;
        for (l1 = 6; 274 > l1; ++l1) {
            d3 += i12;
            i14 = 1;
            do {
                i12 = i13;
                by -= (byte)i12;
            } while (++i14 < 6);
        }
        long meth_res = s1 + by + i2 + i3 + i11 + i12 + l1 + i13 + Double.doubleToLongBits(d3) + i14;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=1.30816;
        short s=15682;
        int i=62424, i1=6, i15=9, i16=-1, i17=33547, i18=-11, i19=82, i20=63261, i21=-12, i22=149;
        boolean b1=false;

        iFld *= (((-(--iFld)) - (iFld - iFld)) / (iFld | 1));
        iFld *= (int)(d--);
        lArrFld[(iFld >>> 1) % N] -= (lArrFld[(iFld >>> 1) % N] + (iArrFld[(iFld >>> 1) % N] -= (s + iFld)));
        for (i = 4; i < 286; ++i) {
            iArrFld[i + 1] += (int)(((i1 - i) - (i1 - 51)) - lMeth());
        }
        d = -11.533F;
        Test0603.instanceCount += i1;
        iFld += i1;
        for (i15 = 5; 205 > i15; i15++) {
            for (i17 = 6; i17 < 126; i17++) {
                Test0603.instanceCount += iFld;
                i16 -= i17;
                iFld = -11885;
                i18 -= (int)d;
                for (i19 = 1; i19 < 2; i19++) {
                    i18 += i19;
                    d += i15;
                    iFld += (i19 | iFld);
                }
                Test0603.iFld1 = i1;
                Test0603.instanceCount *= (long) d;
                try {
                    i16 = (iArrFld[i17] / iFld2);
                    iArrFld[i15] = (168 % i);
                    i18 = (188 % i15);
                } catch (ArithmeticException a_e) {}
                for (i21 = 1; i21 < 2; i21 += 2) {
                    i18 += i21;
                    fFld += (i21 * i18);
                    if (b1) break;
                    i20 -= (int)fFld;
                    i22 += iFld;
                    if (false) break;
                    iArrFld = iArrFld;
                    iArrFld[i21] = i;
                }
            }
        }

        FuzzerUtils.out.println("d s i = " + Double.doubleToLongBits(d) + "," + s + "," + i);
        FuzzerUtils.out.println("i1 i15 i16 = " + i1 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("b1 = " + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test0603.instanceCount iFld Test0603.sFld = " + Test0603.instanceCount + "," + iFld + "," +
                Test0603.sFld);
        FuzzerUtils.out.println("Test0603.iFld1 iFld2 fFld = " + Test0603.iFld1 + "," + iFld2 + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("lArrFld iArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0603 _instance = new Test0603();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
