// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:49 2023
public class Test0797 {

    public static final int N = 400;

    public static volatile long instanceCount=94L;
    public static short sFld=4389;
    public static double dFld=0.64969;
    public float fFld=0.432F;
    public volatile byte byFld=-5;
    public static float[] fArrFld =new float[N];
    public long[] lArrFld =new long[N];

    static {
        FuzzerUtils.init(Test0797.fArrFld, -104.71F);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vSmallMeth(double d, int i) {

        float f1=-16.121F;

        f1 = (-Long.reverseBytes(Test0797.instanceCount - i));
        vSmallMeth_check_sum += Double.doubleToLongBits(d) + i + Float.floatToIntBits(f1);
    }

    public static int iMeth() {

        double d2=0.107083, d3=1.107629;
        int i8=-56698;
        int i9=37971;
        int i10=99;
        int i12=2;
        int i13=102;
        int i14=-13;
        int[] iArr =new int[N];
        boolean b=false;
        float f3=-78.841F;

        FuzzerUtils.init(iArr, 71);

        if (b) {
            d2 %= (i8 | 1);
        } else {
            i8 |= (int) Test0797.instanceCount;
            d2 += i8;
            if (b) {
                for (i9 = 3; i9 < 150; ++i9) {
                    if (b) continue;
                    f3 -= i9;
                }
                i10 = Test0797.sFld;
            } else if (b) {
                for (i12 = 4; i12 < 355; ++i12) {
                    for (d3 = 1; d3 < 5; d3++) {
                        i13 += (int)((long)d3 | (long)f3);
                        i13 += (int) (((d3 * i13) + Test0797.instanceCount) - i10);
                        Test0797.instanceCount >>= i9;
                        i10 += (int)d3;
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d2) + i8 + (b ? 1 : 0) + i9 + i10 + Float.floatToIntBits(f3) + i12 +
            i13 + Double.doubleToLongBits(d3) + i14 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth1(int i3, int i4, float f2) {

        int i5=-10;
        int i6=60;
        int i7=459;
        int i15=7;
        int i16=-147;
        int i17=-61873;
        int i18=-159;
        int[] iArr1 =new int[N];
        boolean b1=true;
        short[] sArr =new short[N];
        byte[][] byArr =new byte[N][N];

        FuzzerUtils.init(iArr1, -50);
        FuzzerUtils.init(sArr, (short)12632);
        FuzzerUtils.init(byArr, (byte)30);

        switch ((((i4 >>> 1) % 4) * 5) + 1) {
        case 4:
            for (i5 = 2; i5 < 354; ++i5) {
                i7 = 1;
                while (++i7 < 5) {
                    i3 &= iMeth();
                    try {
                        i3 = (iArr1[i7 + 1] % iArr1[i7]);
                        i3 = (18985 % i3);
                        iArr1[i7 - 1] = (i5 % i7);
                    } catch (ArithmeticException a_e) {}
                    Test0797.dFld = -24;
                }
                Test0797.instanceCount = (long) Test0797.dFld;
                if (false) continue;
                Test0797.instanceCount ^= i6;
                if (false) {
                    for (i15 = i5; i15 < 5; i15++) {
                        for (i17 = 1; i17 > 1; i17 -= 3) {
                            iArr1[i17] >>>= i16;
                            if (true) break;
                            Test0797.fArrFld[i17 - 1] = i6;
                        }
                    }
                } else if (true) {
                    i18 -= -126;
                } else if (b1) {
                    if (b1) continue;
                } else {
                    Test0797.instanceCount += (i5 ^ (long) f2);
                }
            }
            break;
        case 18:
            i4 = 7;
        case 3:
            i18 += 34;
            break;
        case 9:
            i4 >>= -74;
            break;
        default:
            byArr[(-12562 >>> 1) % N][(-8847 >>> 1) % N] += (byte) Test0797.instanceCount;
        }
        long meth_res = i3 + i4 + Float.floatToIntBits(f2) + i5 + i6 + i7 + i15 + i16 + i17 + i18 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(byArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public long lMeth(int i2) {

        double d1=-2.87771;
        float f4=32.1010F;
        int i19=-5;
        int i20=-32318;
        int i21=-38;
        int i22=41378;
        int i23=-8181;
        int i24=139;
        int i25=12;
        int[] iArr2 =new int[N];
        long l1=10L;
        long[] lArr =new long[N];

        FuzzerUtils.init(iArr2, -6);
        FuzzerUtils.init(lArr, -72L);

        vSmallMeth(d1, (int)((lMeth1(1, -5376, f4) + -31864) + f4));
        i2 = (int)f4;
        for (i19 = 5; 132 > i19; i19 += 3) {
            i20 = i20;
            iArr2[(i20 >>> 1) % N] = i20;
            lArr[i19 + 1] -= i19;
        }
        for (l1 = 8; l1 < 192; l1++) {
            Test0797.instanceCount *= i21;
            for (i22 = 1; 9 > i22; ++i22) {
                for (i24 = 1; 2 > i24; ++i24) {
                    Test0797.instanceCount += (((i24 * f4) + Test0797.instanceCount) - i22);
                    i21 += i24;
                    i21 += (i24 ^ l1);
                    f4 *= f4;
                    i25 |= (int) Test0797.instanceCount;
                }
            }
        }
        long meth_res = i2 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f4) + i19 + i20 + l1 + i21 + i22 + i23
            + i24 + i25 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=0.459F;
        int i1=-62484;
        int i26=-43914;
        int i27=158;
        int i28=-57257;
        int i29=1;
        int i30=15663;
        int[] iArr3 =new int[N];

        FuzzerUtils.init(iArr3, 9);

        f = 1;
        while (++f < 130) {
            for (int smallinvoc=0; smallinvoc<62; smallinvoc++) vSmallMeth((i1 - lMeth(-19931)) + i1, i1);
            i1 = i1;
            i1 = i1;
            for (i26 = (int)(f); 193 > i26; i26++) {
                fFld -= i26;
                lArrFld[i26] += i26;
                for (i28 = i26; i28 < 1; ++i28) {
                    switch ((i26 % 2) + 31) {
                    case 31:
                        switch ((i28 % 9) + 34) {
                        case 34:
                            iArr3[i28] += i27;
                            Test0797.instanceCount = byFld;
                            Test0797.instanceCount += i1;
                            break;
                        case 35:
                            i1 %= (int) (Test0797.instanceCount | 1);
                            Test0797.instanceCount += i28;
                            break;
                        case 36:
                            i1 += (i28 | Test0797.instanceCount);
                            break;
                        case 37:
                            try {
                                iArr3[(int)(f + 1)] = (30535 % i26);
                                iArr3[i26 + 1] = (i30 / i29);
                                i29 = (iArr3[i26 + 1] / i29);
                            } catch (ArithmeticException a_e) {}
                        case 38:
                            iArr3[i28 + 1] -= (int)fFld;
                            i30 *= i26;
                            i27 += (((i28 * i30) + i29) - i29);
                            Test0797.instanceCount += i28;
                            break;
                        case 39:
                            i30 += (((i28 * i26) + i27) - Test0797.instanceCount);
                            i27 >>= i30;
                            switch ((i28 % 3) + 31) {
                            case 31:
                            case 32:
                            case 33:
                                switch ((int)((f % 2) + 25)) {
                                case 25:
                                    i27 = (int) Test0797.instanceCount;
                                    i30 >>= i27;
                                    fFld += (i28 + Test0797.instanceCount);
                                    Test0797.sFld = Test0797.sFld;
                                    break;
                                case 26:
                                    i30 |= -36881;
                                    break;
                                }
                            }
                            break;
                        case 40:
                            Test0797.instanceCount += Test0797.instanceCount;
                        case 41:
                            iArr3[(int)(f)] = i1;
                            break;
                        case 42:
                            lArrFld[(int)(f + 1)] = -52215;
                            break;
                        default:
                            i30 -= i27;
                        }
                    case 32:
                        try {
                            i29 = (iArr3[i26 - 1] / i26);
                            i29 = (14818 % i30);
                            iArr3[(int)(f - 1)] = (-1298349233 % i1);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i1 i26 = " + Float.floatToIntBits(f) + "," + i1 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 iArr3 = " + i30 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0797.instanceCount Test0797.sFld Test0797.dFld = " + Test0797.instanceCount + "," + Test0797.sFld +
                "," + Double.doubleToLongBits(Test0797.dFld));
        FuzzerUtils.out.println("fFld byFld Test0797.fArrFld = " + Float.floatToIntBits(fFld) + "," + byFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0797.fArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0797 _instance = new Test0797();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
