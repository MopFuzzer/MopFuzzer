// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:34 2023
public class Test0472 {

    public static final int N = 400;

    public static long instanceCount=3733880337603467524L;
    public static int iFld=199;
    public static int iFld1=192;
    public float fFld=-11.634F;
    public double dFld=0.86514;
    public static byte byFld=-70;
    public int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public short[] sArrFld =new short[N];
    public static int[][] iArrFld1 =new int[N][N];
    public float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0472.lArrFld, 3936982689L);
        FuzzerUtils.init(Test0472.iArrFld1, 64);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i9) {

        int i10=-89;
        int i11=-61702;
        int i12=75;
        int i13=-83;
        int i14=39;
        int i15=84;
        int[] iArr =new int[N];
        short s1=3807;
        boolean b=true;
        byte by=-99;
        double d=-1.21389;
        float[][] fArr =new float[N][N];

        FuzzerUtils.init(iArr, -28);
        FuzzerUtils.init(fArr, 126.852F);

        if (b) {
            if (true) {
                for (i10 = 5; i10 < 306; i10++) {
                    for (i12 = i10; i12 < 5; ++i12) {
                        Test0472.iFld += i10;
                        iArr[(i10 >>> 1) % N] += s1;
                        if (b) break;
                        for (i14 = 1; 1 > i14; ++i14) {
                            Test0472.instanceCount = i11;
                            if (true) break;
                            i11 = by;
                            fArr[i10][i14] += (float)d;
                        }
                        Test0472.instanceCount ^= i13;
                        b = b;
                        d += Test0472.iFld1;
                    }
                }
            }
        }
        vMeth_check_sum += i9 + i10 + i11 + i12 + i13 + s1 + (b ? 1 : 0) + i14 + i15 + by + Double.doubleToLongBits(d)
            + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public long lMeth() {

        int i4=2368, i5=8, i6=62572, i7=23505, i8=-102, i16=13;
        short s=757;

        for (i4 = 3; i4 < 244; i4++) {
            Test0472.iFld *= (int) ((fFld--) * ((i5 += Test0472.iFld1) + Test0472.iFld));
            if (true) {
                try {
                    i5 = (-44785 / iArrFld[i4 + 1]);
                    i5 = (i4 % -5767);
                    i5 = (iArrFld[i4 + 1] / -67);
                } catch (ArithmeticException a_e) {}
                i6 = 1;
                do {
                    i7 = 1;
                    while (++i7 < 1) {
                        s -= (short)((fFld--) / (iArrFld[(i6 >>> 1) % N] | 1));
                        i5 = (int) Test0472.lArrFld[i6 + 1];
                        Test0472.iFld1 += i7;
                        Test0472.instanceCount = (Test0472.iFld++);
                        Test0472.iFld >>= (i8++);
                        Test0472.instanceCount = (-Test0472.instanceCount);
                        i5 -= Math.min(Test0472.iFld1--, iArrFld[(i6 >>> 1) % N]);
                        s = (short) (Math.abs(-sArrFld[i6]) - Math.min(Test0472.instanceCount, (long) (i7 - dFld)));
                        vMeth(161);
                    }
                } while (++i6 < 7);
            } else {
                i16 += (i4 * i4);
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + s + i8 + i16;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(int i3) {

        int i17=-150, i18=-41105, i19=-8, i20=1747, i21=-3, i22=-61773, i23=-164;

        Test0472.iFld = (int) (((Test0472.iFld++) + (-11 + lMeth())) + dFld);
        for (i17 = 11; 327 > i17; ++i17) {
            short s2=-7764;
            Test0472.iFld1 -= i3;
            Test0472.iFld1 <<= s2;
            i19 += (i17 ^ (long)fFld);
            Test0472.iFld += (((i17 * i17) + i18) - Test0472.iFld);
            switch ((i17 % 2) + 116) {
            case 116:
                for (i20 = 5; i20 > 1; i20 -= 2) {
                    for (i22 = 1; i22 < 3; ++i22) {
                        i18 += s2;
                        sArrFld[i22] <<= (short)11;
                        Test0472.instanceCount += (((i22 * i3) + i21) - Test0472.instanceCount);
                        i3 <<= (int) Test0472.instanceCount;
                        Test0472.iFld1 = (int) Test0472.instanceCount;
                        Test0472.iArrFld1 = Test0472.iArrFld1;
                    }
                }
                break;
            case 117:
                i18 = i23;
                break;
            }
        }
        long meth_res = i3 + i17 + i18 + i19 + i20 + i21 + i22 + i23;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=238, i1=-187, i2=9, i24=11, i25=56641, i26=166;
        float f=-96.611F;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -1.72336);

        i = 1;
        do {
            Test0472.iFld = ((Test0472.iFld++) + Math.min(++Test0472.iFld, ++Test0472.iFld));
            for (i1 = 8; i1 < 148; i1++) {
                f = f;
                Test0472.iFld *= Math.abs((int) ((Test0472.iFld1 = i2) * (0.1934 + (i2++))));
                Test0472.iFld1 += iMeth(i2);
            }
            Test0472.instanceCount += i;
            i24 = 1;
            while (++i24 < 148) {
                boolean b1=false;
                switch (((Test0472.iFld1 >>> 1) % 1) + 51) {
                case 51:
                    if (b1) {
                        try {
                            Test0472.iFld1 = (39106 / Test0472.iFld);
                            Test0472.iFld = (Test0472.iFld / 17022);
                            Test0472.iFld1 = (-1958122028 / i);
                        } catch (ArithmeticException a_e) {}
                        dArr[i] += i2;
                        Test0472.instanceCount = i1;
                        switch (((i24 % 5) * 5) + 63) {
                        case 70:
                            Test0472.iFld -= Test0472.byFld;
                            i2 = i;
                            Test0472.iArrFld1[i24 + 1] = iArrFld;
                            for (i25 = 1; i25 < 1; i25 += 3) {
                                Test0472.iArrFld1[i24][i25 - 1] = -58412;
                                Test0472.iFld = (int) 105.54111;
                                f = i1;
                                i26 += (int) Test0472.instanceCount;
                                Test0472.instanceCount += i25;
                                i2 -= i2;
                                iArrFld[i - 1] -= (int)118.957F;
                                Test0472.iFld1 = (int) Test0472.instanceCount;
                                Test0472.lArrFld[i] >>= Test0472.iFld1;
                                fArrFld[i + 1] += Test0472.instanceCount;
                            }
                            break;
                        case 83:
                            i2 = Test0472.iFld1;
                            i26 += (-7 + (i24 * i24));
                            break;
                        case 86:
                            fFld *= Test0472.instanceCount;
                            break;
                        case 79:
                            Test0472.iFld1 *= (int) Test0472.instanceCount;
                            break;
                        case 64:
                            Test0472.iFld ^= i26;
                            break;
                        }
                    }
                    break;
                default:
                    Test0472.iFld &= Test0472.iFld1;
                }
            }
        } while (++i < 170);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f i24 i25 = " + Float.floatToIntBits(f) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 dArr = " + i26 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0472.instanceCount Test0472.iFld Test0472.iFld1 = " + Test0472.instanceCount + "," + Test0472.iFld +
                "," + Test0472.iFld1);
        FuzzerUtils.out.println("fFld dFld Test0472.byFld = " + Float.floatToIntBits(fFld) + "," +
                Double.doubleToLongBits(dFld) + "," + Test0472.byFld);
        FuzzerUtils.out.println("iArrFld Test0472.lArrFld sArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0472.lArrFld) + "," + FuzzerUtils.checkSum(sArrFld));
        FuzzerUtils.out.println("Test0472.iArrFld1 fArrFld = " + FuzzerUtils.checkSum(Test0472.iArrFld1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0472 _instance = new Test0472();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
