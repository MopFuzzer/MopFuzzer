// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:42 2023
public class Test0649 {

    public static final int N = 400;

    public static volatile long instanceCount=-172L;
    public static volatile double dFld=-2.101509;
    public static volatile boolean bFld=false;
    public static volatile long[] lArrFld =new long[N];
    public static float[] fArrFld =new float[N];

    static {
        FuzzerUtils.init(Test0649.lArrFld, -13L);
        FuzzerUtils.init(Test0649.fArrFld, 18.674F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        float f1=2.45F;
        int i6=-6;
        int i7=-11;
        int i8=127;
        int i9=64400;
        int i10=-21020;
        int[][] iArr =new int[N][N];
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -8553660824858152201L);
        FuzzerUtils.init(iArr, -6);

        for (long l1 : lArr1) {
            int i5=-117;
            f1 *= Test0649.instanceCount;
            iArr[(i5 >>> 1) % N] = iArr[(43994 >>> 1) % N];
            i5 = i5;
        }
        i6 = i6;
        i6 = (int)-1294167472L;
        for (i7 = 12; i7 < 242; i7++) {
            for (i9 = 7; i9 > 1; i9--) {
                Test0649.instanceCount <<= i10;
                Test0649.dFld -= Test0649.instanceCount;
                Test0649.instanceCount *= 5904811088463269L;
                if (true) {
                    i8 = (int) Test0649.instanceCount;
                } else {
                    iArr[i9][i9 + 1] &= i6;
                }
                Test0649.dFld = i8;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(double d, long l) {

        int i1=107, i2=5230, i3=207, i4=-11, i11=54590, i12=-88, i13=14;
        float f=77.773F;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 38L);

        for (i1 = 6; i1 < 171; i1++) {
            for (i3 = 1; 10 > i3; ++i3) {
                lArr[i3] *= i3;
                i2 = (int)(f + (lMeth() + d));
                switch (((i1 % 8) * 5) + 123) {
                case 146:
                    Test0649.instanceCount += (i3 - i2);
                    for (i11 = 1; i11 < 2; i11 += 2) {
                        i4 -= i3;
                        f += i11;
                        i4 = (int)f;
                        f += (((i11 * f) + Test0649.instanceCount) - i12);
                        try {
                            i2 = (39700 % i12);
                            i4 = (i4 / i1);
                            i2 = (82 % i3);
                        } catch (ArithmeticException a_e) {}
                        i13 += i3;
                        f *= l;
                        lArr[i3 + 1] <<= 7;
                    }
                    break;
                case 144:
                    i12 <<= i11;
                    break;
                case 150:
                    i12 <<= 23;
                    break;
                case 159:
                    l -= i3;
                case 138:
                    i12 += i4;
                    break;
                case 124:
                    i12 = i11;
                    break;
                case 137:
                    i13 >>= (int)l;
                case 160:
                    i4 = (int)2.712F;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + l + i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i11 + i12 + i13
            + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=40055;
        int i14=248;
        int i16=-245;
        int[] iArr1 =new int[N];
        double d1=-70.127874;
        byte by=10;
        short s=214;
        long[][] lArr2 =new long[N][N];

        FuzzerUtils.init(iArr1, 3);
        FuzzerUtils.init(lArr2, -7L);

        Test0649.instanceCount *= (long) (Double.longBitsToDouble((long) (i + Test0649.dFld)) - iMeth(Test0649.dFld,
                Test0649.instanceCount));
        for (d1 = 16; d1 < 322; d1++) {
            i += i;
            Test0649.dFld += Test0649.instanceCount;
            Test0649.instanceCount ^= 79;
            i += (int)d1;
            Test0649.instanceCount += i14;
            if (Test0649.bFld) continue;
            by -= (byte)i;
        }
        iArr1[(i >>> 1) % N] ^= i;
        switch (((i14 >>> 1) % 8) + 69) {
        case 69:
            for (int i15 : iArr1) {
                s = (short)i14;
                try {
                    i = (71 % i15);
                    i14 = (i14 / i15);
                    iArr1[(i15 >>> 1) % N] = (-1099893320 / i15);
                } catch (ArithmeticException a_e) {}
                i += (int) Test0649.instanceCount;
            }
            break;
        case 70:
            i = i14;
            break;
        case 71:
            i *= i14;
            break;
        case 72:
            iArr1[(i14 >>> 1) % N] = i14;
            break;
        case 73:
            i += i;
            break;
        case 74:
            lArr2[(i14 >>> 1) % N][(i14 >>> 1) % N] += i;
            break;
        case 75:
            i16 = (int) Test0649.instanceCount;
            break;
        case 76:
            lArr2[(i14 >>> 1) % N][(i14 >>> 1) % N] = i16;
            break;
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d1) + i14 + by + s + i16 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i17=1;
        int i18=952;
        int i19=55278;
        int i20=222;
        int i21=10;
        int i22=163;
        int i23=-2;
        int i24=-226;
        int i25=-51887;
        int[] iArr2 =new int[N];
        short s1=6443;
        byte by1=-54;

        FuzzerUtils.init(iArr2, -35116);

        vMeth();
        for (i17 = 10; i17 < 314; i17 += 2) {
            i18 += (i17 * i17);
            i18 += i18;
            Test0649.bFld = false;
            Test0649.instanceCount *= Test0649.instanceCount;
            Test0649.lArrFld[i17] ^= Test0649.instanceCount;
            for (i19 = 10; i19 < 165; ++i19) {
                Test0649.fArrFld = Test0649.fArrFld;
                i20 = 98;
                for (i21 = 2; i21 > 1; --i21) {
                    Test0649.instanceCount = Test0649.instanceCount;
                    i18 += (((i21 * i20) + Test0649.instanceCount) - Test0649.instanceCount);
                    i20 += i21;
                    i20 = (int) Test0649.dFld;
                }
                i22 += 44456;
                for (i23 = 1; i23 < 2; i23++) {
                    try {
                        i24 = (i20 % i18);
                        i18 = (i21 / iArr2[i17]);
                        i18 = (i24 % 141);
                    } catch (ArithmeticException a_e) {}
                    i22 >>= i17;
                    i24 = i21;
                    Test0649.lArrFld[i17 - 1] += i17;
                }
                s1 /= (short) (Test0649.instanceCount | 1);
                i25 = 1;
                do {
                    i20 += (i25 ^ Test0649.instanceCount);
                    Test0649.instanceCount += i25;
                    iArr2[i19] = by1;
                    iArr2[i17] = i23;
                    i20 = i23;
                } while (++i25 < 2);
                Test0649.bFld = Test0649.bFld;
                i18 *= (int) Test0649.instanceCount;
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 s1 = " + i23 + "," + i24 + "," + s1);
        FuzzerUtils.out.println("i25 by1 iArr2 = " + i25 + "," + by1 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0649.instanceCount Test0649.dFld Test0649.bFld = " + Test0649.instanceCount + "," +
                Double.doubleToLongBits(Test0649.dFld) + "," + (Test0649.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0649.lArrFld Test0649.fArrFld = " + FuzzerUtils.checkSum(Test0649.lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0649.fArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0649 _instance = new Test0649();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
