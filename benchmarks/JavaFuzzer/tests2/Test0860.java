// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:52 2023
public class Test0860 {

    public static final int N = 400;

    public static long instanceCount=3888136859L;
    public static float fFld=3.354F;
    public float fFld1=1.405F;
    public short sFld=12695;
    public static long[] lArrFld =new long[N];
    public int[][] iArrFld =new int[N][N];
    public static float[] fArrFld =new float[N];
    public int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0860.lArrFld, -5L);
        FuzzerUtils.init(Test0860.fArrFld, -5.211F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6, double d, int i7) {

        int i8=3, i9=44, i10=5, i11=0, i12=-6, i13=1;
        boolean b=true;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, 36.6F);

        Test0860.instanceCount = 2000;
        for (i8 = 268; i8 > 12; i8 -= 2) {
            d = i8;
            i9 += (int)d;
            d = i8;
            for (i10 = i8; i10 < 12; ++i10) {
                if (b) break;
                Test0860.lArrFld = Test0860.lArrFld;
                fArr[i10] -= Test0860.instanceCount;
                Test0860.lArrFld[i10 + 1] = Test0860.instanceCount;
                i6 += (int) Test0860.instanceCount;
            }
            for (i12 = 1; i12 < 12; ++i12) {
                d += i11;
                i13 *= (int)d;
                Test0860.lArrFld[i8] += i9;
            }
        }
        long meth_res = i6 + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l, int i5, long l1) {

        double d1=0.20767;

        Test0860.lArrFld[(i5 >>> 1) % N] *= (iMeth(i5, d1, i5) / (i5 | 1));
        vMeth1_check_sum += l + i5 + l1 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(int i, int i1, int i2) {

        short s=23045;
        int i3=-69;
        int i4=14;
        int i14=63273;
        int i15=31878;
        int[][] iArr =new int[N][N];
        byte by=94;
        boolean b1=true;
        boolean[] bArr =new boolean[N];
        double d2=-108.73492;
        float[] fArr1 =new float[N];

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(fArr1, -23.598F);
        FuzzerUtils.init(bArr, false);

        i -= (int) (Math.min((int) (s * 13.953F), i2 * i1) + ((i + Test0860.instanceCount) + (Test0860.fFld - i2)));
        switch ((((7 - Integer.reverseBytes(i)) >>> 1) % 10) + 7) {
        case 7:
            for (i3 = 21; i3 < 382; i3++) {
                vMeth1(Test0860.instanceCount, i3, Test0860.instanceCount);
                Test0860.fFld -= by;
                for (i14 = 1; i14 < 5; ++i14) {
                    long l2=-2896517458L;
                    Test0860.instanceCount *= i3;
                    i4 = i3;
                    switch ((((i1 >>> 1) % 8) * 5) + 46) {
                    case 54:
                        iArr = FuzzerUtils.int2array(N, (int)2);
                        iArr[i3][i3 + 1] -= (int) Test0860.instanceCount;
                        break;
                    case 64:
                        Test0860.instanceCount += i4;
                        by *= (byte) Test0860.fFld;
                        Test0860.fFld = i;
                        fArr1[i14] = i3;
                    case 68:
                        i2 = (int) Test0860.fFld;
                        break;
                    case 53:
                        i1 += (i14 + i4);
                        break;
                    case 78:
                        i = (int)l2;
                        break;
                    case 84:
                        iArr[i3][i3] = i;
                        break;
                    case 57:
                        bArr[i14 + 1] = b1;
                        break;
                    case 52:
                        Test0860.lArrFld[i14] += i14;
                        break;
                    default:
                        i15 += (int) Test0860.instanceCount;
                    }
                }
            }
            break;
        case 8:
            i4 = (int) Test0860.instanceCount;
            break;
        case 9:
            i2 = (int) Test0860.instanceCount;
            break;
        case 10:
            Test0860.fFld += Test0860.instanceCount;
            break;
        case 11:
            fArr1[(i15 >>> 1) % N] = 107L;
            break;
        case 12:
            i1 *= -60;
            break;
        case 13:
            fArr1[(i4 >>> 1) % N] -= -163;
        case 14:
            Test0860.fFld *= i;
            break;
        case 15:
            Test0860.instanceCount = i4;
            break;
        case 16:
            d2 -= i;
            break;
        default:
            iArr[(i >>> 1) % N][(i4 >>> 1) % N] += i;
        }
        vMeth_check_sum += i + i1 + i2 + s + i3 + i4 + by + i14 + i15 + (b1 ? 1 : 0) + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=60051, i17=133, i18=55487, i19=57, i20=-13, i21=-51311, i22=56, i23=30194, i24=9;
        double d3=-2.9918;
        float f=-4.396F;
        boolean b2=false;
        long l3=-13L;

        vMeth(i16, -45, i16);
        if (true) {
            i17 = 1;
            do {
                Test0860.instanceCount &= Test0860.instanceCount;
            } while ((i17 += 2) < 146);
            i16 -= i16;
        } else if (b2) {
            i18 = 1;
            while (++i18 < 189) {
                iArrFld[i18 - 1][i18] = (int) Test0860.instanceCount;
                i16 += (i18 * Test0860.instanceCount);
                for (i19 = i18; i19 < 133; i19++) {
                    for (i21 = 1; i21 < 1; ++i21) {
                        Test0860.instanceCount -= (long) d3;
                        fFld1 += i22;
                        iArrFld[i21][i19 - 1] /= (int) (Test0860.instanceCount | 1);
                    }
                }
                Test0860.fArrFld[i18] += fFld1;
                i22 = sFld;
                Test0860.instanceCount += Test0860.instanceCount;
            }
            for (f = 2; f < 169; f++) {
                switch ((int)((f % 3) + 94)) {
                case 94:
                    Test0860.instanceCount ^= -50389;
                    if (b2) break;
                    i16 += (int) (((f * Test0860.instanceCount) + i18) - Test0860.instanceCount);
                    break;
                case 95:
                    Test0860.instanceCount -= i16;
                    break;
                case 96:
                    i24 = 150;
                    while ((i24 -= 2) > 0) {
                        iArrFld[(int)(f)][i24] = i24;
                        l3 = 2;
                        while (--l3 > 0) {
                            Test0860.instanceCount += l3;
                            Test0860.instanceCount += -14795;
                            i23 += (int)(l3 | i19);
                            Test0860.lArrFld[(int) (l3)] += i24;
                            sFld += (short)i24;
                        }
                    }
                    break;
                }
            }
        } else {
            iArrFld1[(i19 >>> 1) % N] += (int)l3;
        }

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 d3 f = " + i22 + "," + Double.doubleToLongBits(d3) + "," +
            Float.floatToIntBits(f));
        FuzzerUtils.out.println("i23 b2 i24 = " + i23 + "," + (b2 ? 1 : 0) + "," + i24);
        FuzzerUtils.out.println("l3 = " + l3);

        FuzzerUtils.out.println("Test0860.instanceCount Test0860.fFld fFld1 = " + Test0860.instanceCount + "," +
                Float.floatToIntBits(Test0860.fFld) + "," + Float.floatToIntBits(fFld1));
        FuzzerUtils.out.println("sFld Test0860.lArrFld iArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test0860.lArrFld) + ","
            + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test0860.fArrFld iArrFld1 = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0860.fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0860 _instance = new Test0860();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
