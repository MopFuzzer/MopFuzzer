// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:38 2023
public class Test0559 {

    public static final int N = 400;

    public static long instanceCount=1329799021419343744L;
    public static volatile int iFld=253;
    public static byte byFld=-7;
    public static byte[][] byArrFld =new byte[N][N];

    static {
        FuzzerUtils.init(Test0559.byArrFld, (byte) -100);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f2, short s, long l) {

        int i4=-2, i5=-5, i6=51, i7=-23052, i8=58471, i9=4;
        double d=-34.98810;
        float f3=2.984F;
        float[] fArr =new float[N];
        boolean b=false;

        FuzzerUtils.init(fArr, -73.825F);

        for (i4 = 7; i4 < 382; i4++) {
            Test0559.iFld = -159;
            for (i6 = 1; 5 > i6; ++i6) {
                d *= -151;
                f2 *= i5;
                Test0559.iFld = Test0559.iFld;
                fArr[i4] = 28375;
                f2 -= Test0559.iFld;
                Test0559.byArrFld[i4 + 1] = FuzzerUtils.byte1array(N, (byte) 60);
            }
            Test0559.iFld %= 3;
            for (i8 = 1; i8 < 5; i8++) {
                i5 ^= Test0559.byFld;
                f3 = 1;
                while (++f3 < 2) {
                    l |= 3027351635126219041L;
                    if (b) continue;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f2) + s + l + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 + i9 +
            Float.floatToIntBits(f3) + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        float f1=0.311F;
        double d1=2.83767;
        int i10=55461, i11=-44425, i12=69, i13=148, i14=4, i15=-16282;

        Test0559.iFld = (int) Math.abs((213 - Math.abs(f1)) + (-iMeth(f1, (short) (-3066), Test0559.instanceCount)));
        d1 = Test0559.instanceCount;
        for (i10 = 167; i10 > 2; i10--) {
            for (i12 = 1; i12 < 10; ++i12) {
                i13 >>= i11;
                Test0559.byFld >>= (byte) Test0559.instanceCount;
                i13 = 242;
                f1 += (-58469 + (i12 * i12));
                Test0559.iFld += Test0559.iFld;
                f1 += i13;
                i13 -= i11;
                Test0559.iFld = i13;
            }
        }
        for (i14 = 18; i14 < 298; i14++) {
            f1 = i13;
            Test0559.instanceCount += (2912687543125628670L + (i14 * i14));
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + i14 + i15;
    }

    public static void vMeth() {


        vMeth1();
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=3;
        int i1=203;
        int i2=34437;
        int i3=-96;
        int i16=-8;
        int i17=-72;
        int i18=55961;
        int i19=-230;
        int[] iArr =new int[N];
        float f=-97.239F;
        boolean b1=true, b2=true;
        double d2=0.21885;
        long l1=-3091897993285393144L;
        long[] lArr =new long[N];
        short s1=24063;

        FuzzerUtils.init(lArr, 1L);
        FuzzerUtils.init(iArr, 34311);

        for (i = 8; i < 170; i++) {
            f -= i1;
        }
        for (i2 = 12; i2 < 241; i2++) {
            f += (i2 * f);
            Test0559.instanceCount += (-97 + (i2 * i2));
            if (false) {
                Test0559.instanceCount += (long) (110.988F + (i2 * i2));
                Test0559.instanceCount = (i1--);
            } else if (b1) {
                vMeth();
            } else if (b1) {
                Test0559.iFld = 238;
                i1 *= i2;
                lArr[(i >>> 1) % N] = Test0559.iFld;
            }
            if (b2) continue;
            Test0559.iFld >>= i;
            iArr[i2] += i;
            for (d2 = 5; d2 < 110; ++d2) {
                l1 <<= i3;
                if (b2) break;
                s1 += (short)i2;
            }
            i16 += i1;
        }
        for (i17 = 397; i17 > 14; --i17) {
            i16 &= Test0559.iFld;
            Test0559.iFld -= (int) l1;
            i16 = i1;
            i19 = 1;
            do {
                i16 = i17;
                f -= Test0559.iFld;
                if (b1) break;
                i3 = 10282;
                lArr[i19 - 1] = i3;
            } while (++i19 < 66);
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i3 b1 = " + i2 + "," + i3 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("b2 d2 i16 = " + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d2) + "," + i16);
        FuzzerUtils.out.println("l1 s1 i17 = " + l1 + "," + s1 + "," + i17);
        FuzzerUtils.out.println("i18 i19 lArr = " + i18 + "," + i19 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0559.instanceCount Test0559.iFld Test0559.byFld = " + Test0559.instanceCount + "," + Test0559.iFld +
                "," + Test0559.byFld);
        FuzzerUtils.out.println("Test0559.byArrFld = " + FuzzerUtils.checkSum(Test0559.byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0559 _instance = new Test0559();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
