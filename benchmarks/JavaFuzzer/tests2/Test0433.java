// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:32 2023
public class Test0433 {

    public static final int N = 400;

    public static volatile long instanceCount=134L;
    public short sFld=-26748;
    public static float fFld=-16.889F;
    public static short sFld1=22133;
    public static volatile byte byFld=-33;
    public static boolean bFld=true;

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static long lMeth(int i1, long l) {

        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -65411);

        i1 = (int) (((++i1) + (iArr[(-12 >>> 1) % N] = (int) l)) * (Test0433.instanceCount = (i1++)));
        i1 = (int)(--l);
        long meth_res = i1 + l + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth2(long l4, long l5, int i12) {

        int i13=31976;
        int i14=3;
        int i15=-61754;
        int[] iArr2 =new int[N];
        double d=0.127816;

        FuzzerUtils.init(iArr2, -22557);

        i12 <<= i12;
        i13 = 1;
        while (++i13 < 143) {
            if (Test0433.bFld) {
                l4 = 2L;
                Test0433.fFld = i13;
                switch (((i12 >>> 1) % 9) + 68) {
                case 68:
                    i12 <<= i12;
                    for (i14 = 1; 11 > i14; ++i14) {
                        i12 -= (int)d;
                        i12 /= -58;
                        i15 += i12;
                    }
                    Test0433.instanceCount = l5;
                    i15 <<= Test0433.sFld1;
                    break;
                case 69:
                    i12 += Test0433.sFld1;
                    i12 += (i13 * i13);
                case 70:
                case 71:
                    i12 |= i13;
                    break;
                case 72:
                    iArr2[i13] += -54874;
                    break;
                case 73:
                    i12 = i14;
                    break;
                case 74:
                    l4 -= 1;
                case 75:
                case 76:
                    i12 = Test0433.byFld;
                    break;
                }
            } else if (Test0433.bFld) {
                iArr2[i13 - 1] >>= i14;
            } else {
                Test0433.fFld = i13;
                vMeth2_check_sum += l4 + l5 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d) +
                    FuzzerUtils.checkSum(iArr2);
                return;
            }
        }
        vMeth2_check_sum += l4 + l5 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(int i11, long l3) {

        double d1=0.36742;
        int i16=67, i17=5, i18=2, i19=161, i20=-50153, i21=-63326;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 320394430L);

        vMeth2(l3, Test0433.instanceCount, i11);
        Test0433.byFld = (byte) d1;
        for (i16 = 1; i16 < 133; i16 += 3) {
            lArr[i16 - 1] -= -213;
            for (i18 = 35; i18 > 2; i18 -= 3) {
                d1 += Test0433.instanceCount;
                for (i20 = 1; 4 > i20; ++i20) {
                    Test0433.instanceCount *= (long) d1;
                    i21 += i20;
                    Test0433.byFld = (byte) i18;
                    l3 += 855;
                    i21 = (int) Test0433.instanceCount;
                    i21 += Test0433.byFld;
                    i19 %= -18199;
                    i19 += Test0433.sFld1;
                }
            }
        }
        vMeth1_check_sum += i11 + l3 + Double.doubleToLongBits(d1) + i16 + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(long l1, long l2) {

        int i7=-36144;
        int i8=-49803;
        int i9=-126;
        int i10=35;
        int i22=28884;
        int i23=80;
        int[] iArr3 =new int[N];
        byte by=-99;

        FuzzerUtils.init(iArr3, 42497);

        Test0433.instanceCount -= (l2--);
        for (i7 = 11; i7 < 328; ++i7) {
            for (i9 = 1; 5 > i9; ++i9) {
                l1 = (long)Float.intBitsToFloat(i8 - (i8--));
                i10 >>= (by++);
                vMeth1(i7, l2);
                i8 -= (int)l2;
                i10 = i7;
                l2 /= 35487;
                iArr3[i9 + 1] += (int)l1;
                i8 &= i8;
                l1 >>= i10;
            }
            for (i22 = 1; i22 < 5; i22++) {
                by *= (byte)i9;
                iArr3[i22 + 1] -= i8;
            }
        }
        vMeth_check_sum += l1 + l2 + i7 + i8 + i9 + i10 + by + i22 + i23 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=-5753;
        int i2=3;
        int i3=103;
        int i4=12;
        int i5=-63;
        int i6=-46838;
        int i24=-106;
        int i25=-14685;
        int i26=185;
        int i27=-5;
        int i28=-5;
        int i29=12;
        int i30=79;
        int[] iArr1 =new int[N];
        float f=36.576F;
        float[] fArr =new float[N];
        double d2=2.114280;

        FuzzerUtils.init(iArr1, -19337);
        FuzzerUtils.init(fArr, 43.207F);

        i = 1;
        while (++i < 314) {
            f = lMeth((int) (iArr1[i] >>= (int) (Test0433.instanceCount--)), (i2--) + Test0433.instanceCount);
            for (i3 = 5; i3 < 80; i3++) {
                Test0433.instanceCount += i3;
                i4 += (((i3 * f) + Test0433.instanceCount) - sFld);
            }
            for (i5 = 2; i5 < 80; i5++) {
                i2 = (int)lMeth((i4 - i5) * (i5 - i6), -10L);
            }
            vMeth(Test0433.instanceCount, Test0433.instanceCount);
            i2 = i4;
            for (i24 = 80; i24 > 4; i24--) {
                fArr[i24] -= f;
                iArr1[i24 - 1] >>>= i;
                i6 = Test0433.byFld;
                Test0433.fFld -= i2;
                i4 += i24;
            }
        }
        i2 %= (int) (Test0433.byFld | 1);
        iArr1[(i >>> 1) % N] = i2;
        for (i26 = 5; i26 < 285; ++i26) {
            sFld >>= (short) Test0433.instanceCount;
            i2 += (-62 + (i26 * i26));
            i2 *= (int) Test0433.instanceCount;
        }
        for (i28 = 2; i28 < 122; ++i28) {
            if (Test0433.bFld) continue;
        }
        i30 = 1;
        do {
            i27 <<= i29;
            i2 = (int)-218L;
            Test0433.instanceCount = -50551;
            d2 = i6;
            iArr1[i30 - 1] += (int) Test0433.fFld;
            if (true) break;
        } while (++i30 < 230);

        FuzzerUtils.out.println("i f i2 = " + i + "," + Float.floatToIntBits(f) + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("i6 i24 i25 = " + i6 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 d2 = " + i29 + "," + i30 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("iArr1 fArr = " + FuzzerUtils.checkSum(iArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0433.instanceCount sFld Test0433.fFld = " + Test0433.instanceCount + "," + sFld + "," +
                Float.floatToIntBits(Test0433.fFld));
        FuzzerUtils.out.println("Test0433.sFld1 Test0433.byFld Test0433.bFld = " + Test0433.sFld1 + "," + Test0433.byFld + "," + (Test0433.bFld
            ? 1 : 0));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0433 _instance = new Test0433();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
