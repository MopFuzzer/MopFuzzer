// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:17 2023
public class Test0125 {

    public static final int N = 400;

    public static long instanceCount=-1653267794L;
    public static float fFld=0.873F;
    public static boolean bFld=true;
    public static long lFld=-15476L;
    public static long[] lArrFld =new long[N];
    public static int[] iArrFld =new int[N];
    public double[] dArrFld =new double[N];

    static {
        FuzzerUtils.init(Test0125.lArrFld, -10L);
        FuzzerUtils.init(Test0125.iArrFld, -1);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by) {

        int i3=-13;
        int[] iArr =new int[N];

        FuzzerUtils.init(iArr, -8);

        iArr[(i3 >>> 1) % N] = i3;
        iArr[(-15 >>> 1) % N] = i3;
        i3 = i3;
        i3 = (int) Test0125.fFld;
        i3 >>= i3;
        vMeth1_check_sum += by + i3 + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth() {

        byte by1=-43;
        float f1=61.943F;
        float[] fArr =new float[N];
        int i4=-3;
        int i5=8;
        int i6=45221;
        int i7=-72;
        int i8=28452;
        int i9=-129;
        int i10=-114;
        int[][] iArr1 =new int[N][N];
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, -113.107256);
        FuzzerUtils.init(fArr, -21.418F);
        FuzzerUtils.init(iArr1, -3);

        vMeth1(by1);
        f1 = i4;
        for (i5 = 8; i5 < 272; i5++) {
            i6 += (i5 - i4);
        }
        for (double d1 : dArr) {
            Test0125.lArrFld[(i4 >>> 1) % N] = Test0125.instanceCount;
            fArr[(-14 >>> 1) % N] = f1;
            if (Test0125.bFld) {
                switch (((i5 >>> 1) % 2) + 117) {
                case 117:
                    for (i7 = 1; i7 < 4; i7++) {
                        iArr1[i7] = iArr1[i7 - 1];
                        switch ((i7 % 10) + 55) {
                        case 55:
                        case 56:
                            for (i9 = 1; 2 > i9; ++i9) {
                                i10 = i8;
                            }
                            fArr[i7] = i7;
                        case 57:
                            Test0125.instanceCount += (((i7 * i6) + i9) - i8);
                            break;
                        case 58:
                            i8 = (int) Test0125.instanceCount;
                            break;
                        case 59:
                            i10 += (i7 * i5);
                            break;
                        case 60:
                            Test0125.fFld += Test0125.instanceCount;
                        case 61:
                            iArr1[i7][i7 + 1] = i7;
                            break;
                        case 62:
                            i6 = (int)f1;
                            break;
                        case 63:
                            i8 ^= i7;
                            break;
                        case 64:
                            if (i10 != 0) {
                            }
                        }
                    }
                    break;
                case 118:
                    if (Test0125.bFld) continue;
                    break;
                default:
                    i10 = i10;
                }
            } else if (Test0125.bFld) {
                d1 -= Test0125.fFld;
            }
        }
        long meth_res = by1 + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + i8 + i9 + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i) {

        int i1=-171;
        int i2=-3;
        int i11=-47607;
        int i12=-3291;
        int i13=0;
        int i14=4;
        int[] iArr2 =new int[N];
        float f=-1.1013F;
        double d=-81.57112;
        byte by2=-115;

        FuzzerUtils.init(iArr2, -5);

        for (i1 = 16; i1 < 372; i1 += 3) {
            i2 -= (int) (((f--) + (Test0125.instanceCount - d)) + lMeth());
            i += (((i1 * f) + by2) - i1);
            for (i11 = i1; i11 < 13; i11 += 2) {
                Test0125.instanceCount *= Test0125.instanceCount;
                Test0125.fFld *= i2;
                Test0125.lFld *= Test0125.lFld;
                for (i13 = 1; 1 > i13; ++i13) {
                    Test0125.instanceCount += i13;
                    f *= f;
                    iArr2[i1 - 1] = (int) Test0125.lFld;
                    Test0125.fFld += i2;
                    f = i;
                    Test0125.fFld *= 802372913578169981L;
                    i14 = (int) Test0125.lFld;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + by2 + i11 + i12 + i13 +
            i14 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i15=-131, i16=13, i17=5, i18=10, i19=1, i20=-4;
        byte by3=-4;
        double d2=125.112887;

        vMeth(i15);
        i16 = 251;
        while (--i16 > 0) {
            i15 *= i16;
            i15 >>= 10;
            Test0125.lFld |= Test0125.instanceCount;
            for (i17 = 5; i17 < 100; i17++) {
                Test0125.bFld = Test0125.bFld;
                for (i19 = 1; i19 < 2; ++i19) {
                    int i21=2;
                    switch ((i19 % 2) + 93) {
                    case 93:
                        i15 = (int) Test0125.instanceCount;
                        i15 += (i19 - Test0125.fFld);
                        i20 -= (int) Test0125.lFld;
                        i15 += (i19 * i19);
                        break;
                    case 94:
                        i20 -= i16;
                        break;
                    default:
                        i20 = i17;
                        switch (((i19 % 5) * 5) + 99) {
                        case 111:
                            i21 += (i19 ^ i17);
                            break;
                        case 112:
                            i20 <<= (int) Test0125.instanceCount;
                            switch ((i17 % 10) + 66) {
                            case 66:
                                i20 += (int)-80.764F;
                                i20 = i19;
                                break;
                            case 67:
                                Test0125.iArrFld[i17] *= (int) Test0125.lFld;
                                Test0125.fFld += i19;
                                Test0125.instanceCount += (i19 + i17);
                                break;
                            case 68:
                                i21 *= (int) Test0125.instanceCount;
                                Test0125.instanceCount = i21;
                                break;
                            case 69:
                                Test0125.lFld = i16;
                                by3 += (byte) Test0125.fFld;
                                break;
                            case 70:
                                Test0125.lFld = 2259735558L;
                                break;
                            case 71:
                                dArrFld[i17 + 1] += i16;
                            case 72:
                                Test0125.lFld = by3;
                                break;
                            case 73:
                                i20 = (int) Test0125.lFld;
                            case 74:
                                i21 += i19;
                            case 75:
                                d2 %= ((long)(d2) | 1);
                            }
                            break;
                        case 100:
                            by3 *= (byte)-5;
                            break;
                        case 117:
                            i20 += (int) Test0125.instanceCount;
                        case 107:
                            i21 += i21;
                            break;
                        default:
                            i21 += (int) Test0125.lFld;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("by3 d2 = " + by3 + "," + Double.doubleToLongBits(d2));

        FuzzerUtils.out.println("Test0125.instanceCount Test0125.fFld Test0125.bFld = " + Test0125.instanceCount + "," +
                Float.floatToIntBits(Test0125.fFld) + "," + (Test0125.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0125.lFld Test0125.lArrFld Test0125.iArrFld = " + Test0125.lFld + "," +
                FuzzerUtils.checkSum(Test0125.lArrFld) + "," + FuzzerUtils.checkSum(Test0125.iArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0125 _instance = new Test0125();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
