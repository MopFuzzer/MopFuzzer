// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0161 {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public static boolean bFld=false;
    public static volatile int iFld=-9;
    public short sFld=-4583;
    public static double dFld=0.7711;
    public static int iFld1=123;
    public static int[][] iArrFld =new int[N][N];
    public static int[] iArrFld1 =new int[N];

    static {
        FuzzerUtils.init(Test0161.iArrFld, 8);
        FuzzerUtils.init(Test0161.iArrFld1, 20842);
    }

    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4, long l, short s) {

        float f=52.449F;
        int i5=-8;
        int i6=-47;
        int i7=59627;
        int i8=-24291;
        int i9=-12;
        int i10=7;
        int i11=-10;
        int i12=248;
        int[] iArr =new int[N];
        byte by1=-102;
        double d=96.38100;

        FuzzerUtils.init(iArr, 13);

        iArr[(i4 >>> 1) % N] += (int)f;
        for (i5 = 181; i5 > 10; --i5) {
            i4 -= i4;
            for (i7 = 1; i7 < 9; ++i7) {
                for (i9 = 2; i9 > 1; i9--) {
                    Test0161.bFld = Test0161.bFld;
                    by1 >>= (byte)i7;
                    i10 = (int)2441454208L;
                    i6 += -30;
                }
                i6 += (((i7 * i6) + i9) - i5);
                i8 *= by1;
                i4 += (i7 + Test0161.instanceCount);
                for (i11 = 1; i11 < 2; i11 += 3) {
                    d += i6;
                    l <<= l;
                }
            }
        }
        long meth_res = i4 + l + s + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i9 + i10 + by1 + i11 + i12 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i2=113;
        int i3=13;
        int i13=28;
        int[] iArr1 =new int[N];
        short s1=-19703;
        float f1=-29.946F;
        long l1=131L;

        FuzzerUtils.init(iArr1, 6);

        for (i2 = 3; i2 < 215; ++i2) {
            if (i3 != 0) {
            }
            i3 >>= (int) (((-(Test0161.instanceCount + i3)) - iMeth1(i3, Test0161.instanceCount, s1)) + i3);
            if (i2 != 0) {
            }
            if (Test0161.bFld) continue;
            s1 += (short)f1;
            i3 += (int) Test0161.instanceCount;
            i3 = i3;
            i3 = i3;
            iArr1[i2 - 1] -= i2;
        }
        i3 += i3;
        for (l1 = 381; l1 > 23; --l1) {
            f1 += (((l1 * f1) + i3) - l1);
            Test0161.instanceCount <<= i2;
            i13 = (int)f1;
        }
        long meth_res = i2 + i3 + s1 + Float.floatToIntBits(f1) + l1 + i13 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth(byte by, int i1) {

        int i14=-168;
        int i15=10;
        int i16=8;
        int i17=177;
        int i18=52853;
        int i19=-43864;
        int[] iArr2 =new int[N];
        float f2=22.799F;
        double d1=1.116978;

        FuzzerUtils.init(iArr2, -2);

        i1 &= iMeth();
        for (i14 = 191; i14 > 6; i14--) {
            for (i16 = 1; 9 > i16; i16++) {
                for (i18 = i14; i18 < 2; ++i18) {
                    i1 += (i18 + i17);
                }
                i15 = (int)13L;
                f2 += ((long)i16 ^ (long)i18);
                i15 = i1;
                iArr2[i14 - 1] >>= i19;
                Test0161.instanceCount += i14;
                if (Test0161.bFld) continue;
                Test0161.iFld -= (int) 56L;
            }
            d1 += Test0161.instanceCount;
        }
        d1 += Test0161.iFld;
        i19 = Test0161.iFld;
        long meth_res = by + i1 + i14 + i15 + i16 + i17 + i18 + i19 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=25620, i20=-8, i21=92, i22=29077, i23=146, i24=-246, i25=-11, i26=58223, i27=-8;
        boolean b=false;
        float f3=-1.870F;
        long l2=1983000570L;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 18030L);

        i = 1;
        while (++i < 233) {
            Test0161.instanceCount += (((i * Test0161.instanceCount) + i) - i);
            b = (!(!bMeth((byte) (-28), Test0161.iFld)));
            Test0161.iArrFld[i + 1][i - 1] *= sFld;
        }
        Test0161.bFld = Test0161.bFld;
        Test0161.iFld |= -182;
        for (i20 = 7; i20 < 274; ++i20) {
            Test0161.iFld -= Test0161.iFld;
            for (i22 = 1; i22 < 94; ++i22) {
                Test0161.dFld -= 0;
                i23 += i22;
            }
            Test0161.iArrFld1[i20] = (int) 1.993F;
            i23 = Test0161.iFld;
            i23 |= (int) Test0161.instanceCount;
            i23 = (int)f3;
            i21 = i;
        }
        for (l2 = 5; l2 < 358; ++l2) {
            i23 *= -16023;
            switch ((int)((l2 % 9) + 68)) {
            case 68:
                i25 -= (int) Test0161.instanceCount;
                break;
            case 69:
                i23 += (int)-2L;
                if (Test0161.bFld) {
                    if (Test0161.bFld) {
                        f3 = i20;
                    } else if (b) {
                        Test0161.iArrFld1[(int) (l2 - 1)] = Test0161.iFld1;
                    } else {
                        if (b) continue;
                        for (i26 = 71; i26 > 3; i26 -= 3) {
                            i27 *= Test0161.iFld1;
                        }
                        i24 += i23;
                        Test0161.instanceCount += l2;
                    }
                } else if (Test0161.bFld) {
                    Test0161.iArrFld1[(int) (l2 + 1)] <<= i26;
                }
                break;
            case 70:
                Test0161.iFld1 = (int) l2;
                break;
            case 71:
                i24 >>= i20;
                break;
            case 72:
            case 73:
                Test0161.iArrFld1 = Test0161.iArrFld1;
                break;
            case 74:
                i27 >>= 54609;
            case 75:
                lArr[(int)(l2 + 1)] = l2;
                break;
            case 76:
                lArr[(int)(l2 + 1)] += 223;
                break;
            }
        }

        FuzzerUtils.out.println("i b i20 = " + i + "," + (b ? 1 : 0) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f3 l2 i24 = " + Float.floatToIntBits(f3) + "," + l2 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0161.instanceCount Test0161.bFld Test0161.iFld = " + Test0161.instanceCount + "," + (Test0161.bFld ? 1
                : 0) + "," + Test0161.iFld);
        FuzzerUtils.out.println("sFld Test0161.dFld Test0161.iFld1 = " + sFld + "," + Double.doubleToLongBits(Test0161.dFld) + ","
                + Test0161.iFld1);
        FuzzerUtils.out.println("Test0161.iArrFld Test0161.iArrFld1 = " + FuzzerUtils.checkSum(Test0161.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0161.iArrFld1));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0161 _instance = new Test0161();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
