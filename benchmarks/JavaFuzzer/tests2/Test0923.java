// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:55 2023
public class Test0923 {

    public static final int N = 400;

    public static long instanceCount=-4110656642801572271L;
    public int iFld=-47466;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0923.iArrFld, -147);
    }

    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static int iMeth(boolean b, double d, int i) {


        i = (i++);
        long meth_res = (b ? 1 : 0) + Double.doubleToLongBits(d) + i;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i8, int i9) {

        int i10=12, i11=-956, i12=-113, i13=-14, i14=-2, i15=-55468;
        double d2=0.92116;
        boolean b1=false;
        float f=-2.954F;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, 3951665119028707700L);

        for (i10 = 4; i10 < 173; ++i10) {
            if (b1) {
                for (i12 = i10; i12 < 9; i12++) {
                    switch (((i12 % 2) * 5) + 31) {
                    case 37:
                        Test0923.iArrFld[i12 + 1] += (int) 119L;
                        Test0923.instanceCount += i12;
                        break;
                    case 38:
                        i13 = i10;
                        break;
                    }
                    for (i14 = 1; 1 > i14; i14++) {
                        i15 *= (int)d2;
                        if (b1) break;
                        Test0923.instanceCount = 948349711591400982L;
                        i8 += i12;
                        lArr1[i14 - 1] += Test0923.instanceCount;
                        i8 -= (int)f;
                        i13 = (int) Test0923.instanceCount;
                    }
                }
            } else {
                if (i13 != 0) {
                    vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d2) + (b1
                        ? 1 : 0) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr1);
                    return;
                }
            }
        }
        vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d2) + (b1 ? 1 : 0) +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth1(int i2, int i3, double d1) {

        short s=29072;
        int i4=-9, i5=137, i6=4, i7=-20059, i16=7, i17=-23, i18=-1, i19=12;
        double[] dArr =new double[N];

        FuzzerUtils.init(dArr, 2.1187);

        Test0923.instanceCount = 5;
        s >>>= (short) Math.max((-(i2 >>= (int) Test0923.instanceCount)) + (i3 - i2), (long) (s * (-53.723F - (i2 - i3))));
        for (i4 = 277; i4 > 2; i4--) {
            for (i6 = i4; 6 > i6; ++i6) {
                vMeth(i4, -154);
                if (true) {
                    for (i16 = 1; i16 > 1; --i16) {
                        Test0923.instanceCount = i6;
                    }
                } else {
                    i3 = i2;
                    for (i18 = 1; 1 > i18; i18++) {
                        i5 += (((i18 * i16) + i18) - i3);
                        Test0923.instanceCount += (11255 + (i18 * i18));
                    }
                }
                Test0923.iArrFld[i6] <<= (int) Test0923.instanceCount;
                dArr[i4] = i2;
                s = (short)i7;
            }
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d1) + s + i4 + i5 + i6 + i7 + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth() {

        int i1=-145, i20=-10, i21=-98, i22=-2, i23=52388;
        float f1=-28.418F, f2=-115.153F;
        short s1=-15878;
        long[][] lArr2 =new long[N][N];

        FuzzerUtils.init(lArr2, 230L);

        i1 -= iMeth1(i1, i1, 62.19929);
        for (f1 = 3; 139 > f1; ++f1) {
            boolean b2=true;
            try {
                i1 = (i20 / Test0923.iArrFld[(int) (f1 - 1)]);
                i20 = (i1 / -16834);
                Test0923.iArrFld[(int) (f1)] = (i20 % i20);
            } catch (ArithmeticException a_e) {}
            i1 &= i20;
            switch ((int)(((f1 % 2) * 5) + 95)) {
            case 96:
                i20 -= i20;
                break;
            case 98:
                if (b2) {
                    i20 -= (int)f2;
                    i21 = 1;
                    do {
                        i20 *= i21;
                    } while (++i21 < 12);
                    i1 += (int) Test0923.instanceCount;
                } else {
                    i1 += s1;
                    for (i22 = 1; i22 < 12; i22++) {
                        i1 += (((i22 * i23) + i22) - i1);
                        lArr2[i22 - 1][(int)(f1)] = i21;
                    }
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f1) + i20 + Float.floatToIntBits(f2) + i21 + s1 + i22 + i23 +
            FuzzerUtils.checkSum(lArr2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, 13L);

        lArr[(iFld >>> 1) % N] = (iFld *= iMeth(bMeth(), -2.28921, 24568));

        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0923.instanceCount iFld Test0923.iArrFld = " + Test0923.instanceCount + "," + iFld + "," +
                FuzzerUtils.checkSum(Test0923.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0923 _instance = new Test0923();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 bMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
