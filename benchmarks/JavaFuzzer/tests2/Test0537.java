// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:37 2023
public class Test0537 {

    public static final int N = 400;

    public static long instanceCount=2023917319L;
    public static double dFld=112.62665;
    public static volatile short sFld=-24062;
    public static byte byFld=-2;
    public static int[] iArrFld =new int[N];

    static {
        FuzzerUtils.init(Test0537.iArrFld, 5);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(int i2, long l2, float f) {

        int i3=-6, i4=3, i5=6, i6=-15643, i7=162;
        short s=6850;
        long[] lArr =new long[N];

        FuzzerUtils.init(lArr, -6914784794962398649L);

        i2 = -7;
        lArr[(-5 >>> 1) % N] = i2;
        Test0537.dFld *= i2;
        i2 = i2;
        Test0537.dFld = l2;
        for (i3 = 12; i3 < 226; i3++) {
            i5 -= (int)f;
            l2 *= 162L;
            for (i6 = 1; i6 < 8; i6++) {
                Test0537.instanceCount >>= i5;
                Test0537.iArrFld[i3 + 1] = i4;
                Test0537.dFld -= 196;
                f += f;
                s -= (short)i7;
                i4 = (int) Test0537.dFld;
            }
        }
        long meth_res = i2 + l2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + s + FuzzerUtils.checkSum(lArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(long l, long l1) {

        int i=22183, i1=32998, i8=-5, i9=0, i10=10, i11=-61021, i12=-10, i13=17;
        float f1=2.823F;
        boolean b=false;

        for (i = 9; 233 > i; ++i) {
            bMeth(-97, l1, -101.344F);
            for (i8 = 1; i8 < 7; ++i8) {
                for (i10 = 2; 1 < i10; i10--) {
                    i11 = i10;
                    i1 *= (int)-4L;
                    i9 *= i10;
                    Test0537.iArrFld[(i9 >>> 1) % N] *= (int) 1.586F;
                    i9 = Test0537.sFld;
                    f1 -= i;
                }
                Test0537.iArrFld[i8] = (int) f1;
                for (i12 = 2; i12 > 1; --i12) {
                    i11 += (i12 + i12);
                    i9 &= (int)l;
                    if (b) break;
                }
            }
        }
        vMeth_check_sum += l + l1 + i + i1 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + (b ? 1 : 0);
    }

    public static int iMeth() {

        int i14=-163, i15=43137, i16=-8, i17=1, i18=-33152, i19=236;
        byte by=23;
        boolean b1=false;
        long[] lArr1 =new long[N];

        FuzzerUtils.init(lArr1, -5136773595258630146L);

        if (b1) {
            vMeth(Test0537.instanceCount, Test0537.instanceCount);
        } else if (b1) {
            for (i14 = 4; i14 < 224; i14++) {
                Test0537.dFld *= i14;
                for (i16 = 7; 1 < i16; i16--) {
                    i17 = (int)3031257035222492747L;
                    for (i18 = 1; i18 < 2; ++i18) {
                        Test0537.instanceCount = i17;
                        lArr1[i16 - 1] = 11;
                        lArr1[i14] >>= i16;
                        Test0537.sFld += (short) (i18 * by);
                        if (b1) continue;
                        Test0537.sFld <<= (short) i14;
                    }
                    b1 = b1;
                    i17 -= (int) Test0537.dFld;
                }
            }
        } else {
            Test0537.instanceCount = i16;
        }
        long meth_res = i14 + i15 + i16 + i17 + i18 + i19 + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i20=156, i21=7, i22=236, i23=-7, i24=-1, i25=-235, i26=-10, i27=-8, i28=-11, i29=12, i30=-251;
        float f2=0.497F;
        float[] fArr =new float[N];

        FuzzerUtils.init(fArr, -2.241F);

        iMeth();
        for (i20 = 214; i20 > 12; i20--) {
            for (i22 = 124; i20 < i22; i22--) {
                boolean b2=false;
                for (i24 = 1; 1 > i24; i24 += 2) {
                    i25 += (7596 + (i24 * i24));
                    i23 = i23;
                }
                f2 -= (float) Test0537.dFld;
                Test0537.dFld -= -7;
                if (b2) continue;
                i23 = i21;
                i23 *= i23;
                b2 = b2;
            }
            Test0537.instanceCount += Test0537.sFld;
            Test0537.instanceCount += (((i20 * i20) + i24) - Test0537.byFld);
            i26 = 1;
            do {
                for (i27 = i20; i27 < 1; i27++) {
                    i28 = i28;
                    switch ((((i22 >>> 1) % 2) * 5) + 1) {
                    case 6:
                        Test0537.dFld -= i21;
                        i28 += i27;
                        fArr[i26 + 1] += i20;
                        f2 *= Test0537.instanceCount;
                        break;
                    case 10:
                        f2 += i24;
                        break;
                    }
                    switch ((((12 >>> 1) % 2) * 5) + 80) {
                    case 83:
                        Test0537.iArrFld[i26 - 1] >>= i29;
                        i23 <<= (int)-5L;
                        i29 += i29;
                        i30 = i24;
                        break;
                    case 85:
                        i25 += i21;
                        i21 *= i28;
                        break;
                    default:
                        f2 -= i28;
                    }
                }
            } while (++i26 < 124);
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f2 i26 i27 = " + Float.floatToIntBits(f2) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0537.instanceCount Test0537.dFld Test0537.sFld = " + Test0537.instanceCount + "," +
                Double.doubleToLongBits(Test0537.dFld) + "," + Test0537.sFld);
        FuzzerUtils.out.println("Test0537.byFld Test0537.iArrFld = " + Test0537.byFld + "," + FuzzerUtils.checkSum(Test0537.iArrFld));

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0537 _instance = new Test0537();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
