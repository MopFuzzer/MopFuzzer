// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:20 2023
public class Test0189 {

    public static final int N = 400;

    public static long instanceCount=16641L;
    public static boolean bFld=false;
    public static float fFld=-2.520F;
    public static short sFld=1220;
    public double dFld=-102.102581;
    public static volatile boolean bFld1=false;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i=-8;
        float f=93.963F;

        i *= i;
        i = i;
        f -= -104;
        Test0189.instanceCount >>>= 143;
        Test0189.bFld = Test0189.bFld;
        vMeth2_check_sum += i + Float.floatToIntBits(f);
    }

    public static void vMeth1(long l1) {

        int i1=-2, i2=-7, i3=12, i4=-51300;
        long l2=6L, l3=6170195502420918849L;
        boolean b=true;
        byte by=-59;

        vMeth2();
        i1 >>= 5;
        i1 /= -10;
        for (l2 = 2; l2 < 193; ++l2) {
            for (i3 = 1; 8 > i3; i3++) {
                Test0189.fFld = i3;
                l3 = 1;
                while (++l3 < 2) {
                    i4 += (int)l3;
                    i1 -= i1;
                    i1 *= (int)-1.487F;
                    i2 += (int)l1;
                    i2 <<= i3;
                    if (b) continue;
                }
                l1 += (((i3 * by) + i2) - i3);
                i2 >>>= by;
            }
        }
        vMeth1_check_sum += l1 + i1 + l2 + i2 + i3 + i4 + l3 + (b ? 1 : 0) + by;
    }

    public static void vMeth(long l) {

        int i5=-14;
        int i6=5;
        int i7=-5;
        int i8=76;
        int i9=-62777;
        int i10=4167;
        int[] iArr =new int[N];
        short s=11445;
        byte by1=96;
        boolean[] bArr =new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, 251);

        vMeth1(71129015L);
        Test0189.fFld = i5;
        for (i6 = 4; i6 < 156; i6++) {
            if (Test0189.bFld) {
                s ^= (short) Test0189.instanceCount;
                by1 = (byte)i6;
                i8 = 1;
                do {
                    for (i9 = 1; i9 < 1; i9++) {
                        bArr[i8 - 1] = Test0189.bFld;
                        Test0189.instanceCount ^= i9;
                        Test0189.instanceCount += i10;
                        i10 += -163;
                        Test0189.instanceCount -= (long) Test0189.fFld;
                        i7 = i6;
                    }
                    Test0189.instanceCount -= i5;
                } while (++i8 < 10);
            } else {
                iArr[i6 + 1] -= (int) Test0189.fFld;
            }
        }
        vMeth_check_sum += l + i5 + i6 + i7 + s + by1 + i8 + i9 + i10 + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        long l4=489166576121428276L;
        int i11=-17441;
        int i12=-2;
        int i13=-2;
        int i14=-42845;
        int i15=70;
        int i16=-10982;
        int i17=186;
        int[] iArr1 =new int[N];
        float f1=87.704F;
        float[] fArr =new float[N];
        boolean[] bArr1 =new boolean[N];

        FuzzerUtils.init(iArr1, 183);
        FuzzerUtils.init(fArr, -88.750F);
        FuzzerUtils.init(bArr1, false);

        vMeth(Test0189.instanceCount);
        for (l4 = 5; l4 < 283; l4++) {
            for (i12 = 5; i12 < 90; ++i12) {
                for (i14 = 1; i14 < 2; ++i14) {
                    switch ((((i15 >>> 1) % 1) * 5) + 66) {
                    case 69:
                        i11 = (int)f1;
                        i11 >>= i11;
                        break;
                    }
                    switch ((i14 % 1) + 105) {
                    case 105:
                        iArr1[i12] = i14;
                        iArr1[i14 + 1] += (int)f1;
                        i11 -= i14;
                    }
                    iArr1[i14] -= (int) Test0189.instanceCount;
                    i11 += i15;
                    i11 = (int)-49559L;
                    i13 %= (int)(i12 | 1);
                }
                Test0189.sFld += (short) dFld;
                switch (((73 >>> 1) % 1) + 110) {
                case 110:
                    i13 += (-11 + (i12 * i12));
                    i15 = 14;
                    fArr[i12] = Test0189.fFld;
                    i16 = 1;
                    do {
                        switch ((int)(((l4 % 5) * 5) + 75)) {
                        case 80:
                            bArr1[(int)(l4 + 1)] = true;
                            iArr1[i12 - 1] <<= (int) Test0189.instanceCount;
                            break;
                        case 86:
                            i17 *= i12;
                            iArr1[i12 + 1] = (int) Test0189.instanceCount;
                            break;
                        case 81:
                        case 92:
                            try {
                                iArr1[i12 - 1] = (iArr1[i12 - 1] % -14274);
                                i13 = (37 / i13);
                                i11 = (i14 / i17);
                            } catch (ArithmeticException a_e) {}
                            Test0189.instanceCount -= i13;
                            i17 -= i17;
                            break;
                        case 79:
                            dFld += Test0189.instanceCount;
                            break;
                        default:
                            Test0189.instanceCount *= i17;
                        }
                    } while (++i16 < 2);
                    break;
                default:
                    Test0189.bFld = Test0189.bFld1;
                }
            }
        }

        FuzzerUtils.out.println("l4 i11 i12 = " + l4 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("f1 i16 i17 = " + Float.floatToIntBits(f1) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("iArr1 fArr bArr1 = " + FuzzerUtils.checkSum(iArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test0189.instanceCount Test0189.bFld Test0189.fFld = " + Test0189.instanceCount + "," + (Test0189.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0189.fFld));
        FuzzerUtils.out.println("Test0189.sFld dFld Test0189.bFld1 = " + Test0189.sFld + "," + Double.doubleToLongBits(dFld) + ","
                + (Test0189.bFld1 ? 1 : 0));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0189 _instance = new Test0189();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
