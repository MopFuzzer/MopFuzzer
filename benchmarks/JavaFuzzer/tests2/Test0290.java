// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:26 2023
public class Test0290 {

    public static final int N = 400;

    public static volatile long instanceCount=-28630L;
    public short sFld=6189;
    public static int iFld=-64;
    public static volatile int iFld1=-36582;
    public static float fFld=0.160F;
    public static volatile int iFld2=203;
    public boolean bFld=false;
    public int[] iArrFld =new int[N];
    public long[] lArrFld =new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static void vMeth(long l, int i8, short s) {


        i8 ^= (-(i8--));
        vMeth_check_sum += l + i8 + s;
    }

    public static long lMeth1(int i9) {

        int i10=-33036;
        int i11=-8;
        int i12=-2;
        int i13=14;
        int i14=-4;
        int i15=-6;
        int[] iArr =new int[N];
        byte by1=85;
        long[][] lArr =new long[N][N];

        FuzzerUtils.init(lArr, 4044422117L);
        FuzzerUtils.init(iArr, -25153);

        for (i10 = 2; i10 < 122; i10++) {
            for (i12 = 1; 13 > i12; ++i12) {
                for (i14 = i10; i14 < 2; i14 += 3) {
                    boolean b=false;
                    switch (((i10 % 2) * 5) + 36) {
                    case 37:
                        Test0290.instanceCount += i9;
                        i9 = by1;
                        lArr[i12][i10] = Test0290.instanceCount;
                        break;
                    case 40:
                        Test0290.iFld1 -= (int) Test0290.instanceCount;
                        Test0290.instanceCount -= i13;
                        i13 = Test0290.iFld;
                        iArr[i14 + 1] ^= (int) Test0290.instanceCount;
                        break;
                    }
                    Test0290.instanceCount = i12;
                    if (b) continue;
                    i13 = i9;
                    i11 = i13;
                }
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + i14 + i15 + by1 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth() {

        short s1=31239;
        int i16=-14, i17=-8, i18=-1, i19=-158, i20=-5, i21=-210;
        float f1=-39.198F;
        boolean b1=false;

        Test0290.iFld += (int) ((Test0290.instanceCount *= (++Test0290.iFld)) - Math.min(lMeth1(Test0290.iFld1), Test0290.instanceCount));
        Test0290.instanceCount = s1;
        Test0290.fFld = Test0290.iFld;
        for (i16 = 10; 164 > i16; i16 += 2) {
            for (i18 = 1; i18 < 20; ++i18) {
                switch ((i18 % 3) + 115) {
                case 115:
                    switch (((i16 >>> 1) % 6) + 43) {
                    case 43:
                        Test0290.iFld *= i19;
                        i20 &= (int) Test0290.instanceCount;
                        break;
                    case 44:
                        Test0290.instanceCount -= Test0290.iFld;
                        break;
                    case 45:
                        Test0290.fFld += (i18 * i18);
                        break;
                    case 46:
                        for (f1 = 1; f1 < 2; f1++) {
                            if (b1) break;
                            if (b1) continue;
                            Test0290.fFld = -183;
                        }
                        break;
                    case 47:
                        Test0290.iFld1 |= i20;
                        break;
                    case 48:
                        i21 += i18;
                        break;
                    default:
                        Test0290.iFld <<= i19;
                    }
                case 116:
                    i17 += (int) Test0290.fFld;
                    break;
                case 117:
                    Test0290.iFld += i18;
                    break;
                default:
                    if (b1) continue;
                }
            }
        }
        long meth_res = s1 + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f1) + i21 + (b1 ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i7) {

        short s2=-19420;
        int i22=21546, i23=192, i24=-12550, i25=4, i26=172, i27=-11;
        boolean b2=false;
        double d=-1.83333;

        vMeth(lMeth(), Test0290.iFld, s2);
        for (i22 = 19; i22 < 395; ++i22) {
            Test0290.iFld1 = 31870;
            if (b2) break;
            for (i24 = 1; i24 < 4; i24++) {
                for (i26 = 2; i26 > 1; --i26) {
                    i27 = 15442;
                    Test0290.iFld = (int) Test0290.instanceCount;
                    i7 = (int) Test0290.instanceCount;
                    Test0290.fFld += (((i26 * i24) + Test0290.instanceCount) - Test0290.instanceCount);
                    Test0290.fFld = i23;
                    i23 >>= i23;
                    Test0290.instanceCount = i7;
                }
                Test0290.instanceCount = (long) d;
                if (i22 != 0) {
                }
            }
        }
        long meth_res = i7 + s2 + i22 + i23 + (b2 ? 1 : 0) + i24 + i25 + i26 + i27 + Double.doubleToLongBits(d);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=0.791F;
        float[] fArr =new float[N];
        int i=-61870, i1=5, i2=8, i3=7, i4=-221, i5=6, i6=11844;
        byte by=34;
        double d1=-9.57460;

        FuzzerUtils.init(fArr, 57.225F);

        for (f = 150; f > 2; f--) {
            for (i1 = 169; i1 > 2; --i1) {
                Test0290.instanceCount >>= i;
                i2 >>= ((~(--sFld)) * ((-(iArrFld[(int)(f)] *= -223)) - (sFld <<= (short)i)));
                by += (byte)i2;
                i += (i1 * i1);
                for (i3 = 2; i3 > 1; i3 -= 2) {
                    i4 += (i4 - sFld);
                }
                for (i5 = 2; i5 > f; i5--) {
                    switch (((iMeth(i4) >>> 1) % 5) + 56) {
                    case 56:
                        fArr[(int)(f + 1)] = i5;
                        Test0290.iFld1 += by;
                        break;
                    case 57:
                        by = (byte)i5;
                        Test0290.iFld = Test0290.iFld1;
                        break;
                    case 58:
                        Test0290.fFld += Test0290.instanceCount;
                        iArrFld[(Test0290.iFld1 >>> 1) % N] *= (int) f;
                        if (bFld) {
                            i4 = i5;
                        } else if (bFld) {
                            iArrFld[i5 + 1] = (int) Test0290.instanceCount;
                            iArrFld[i5 + 1] -= i5;
                        } else if (bFld) {
                            i4 += (((i5 * Test0290.instanceCount) + i) - Test0290.iFld2);
                            Test0290.iFld2 >>>= Test0290.iFld2;
                        } else {
                            Test0290.fFld = Test0290.fFld;
                            if (bFld) continue;
                            Test0290.instanceCount += (long) d1;
                            Test0290.fFld = i3;
                        }
                    case 59:
                        Test0290.fFld += 224521525L;
                        break;
                    case 60:
                        if (bFld) break;
                        i2 += (((i5 * Test0290.instanceCount) + i4) - Test0290.iFld1);
                        lArrFld = lArrFld;
                        break;
                    default:
                        Test0290.fFld -= Test0290.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 by i3 = " + i2 + "," + by + "," + i3);
        FuzzerUtils.out.println("i4 i5 i6 = " + i4 + "," + i5 + "," + i6);
        FuzzerUtils.out.println("d1 fArr = " + Double.doubleToLongBits(d1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0290.instanceCount sFld Test0290.iFld = " + Test0290.instanceCount + "," + sFld + "," +
                Test0290.iFld);
        FuzzerUtils.out.println("Test0290.iFld1 Test0290.fFld Test0290.iFld2 = " + Test0290.iFld1 + "," +
                Float.floatToIntBits(Test0290.fFld) + "," + Test0290.iFld2);
        FuzzerUtils.out.println("bFld iArrFld lArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(iArrFld) + ","
            + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0290 _instance = new Test0290();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
