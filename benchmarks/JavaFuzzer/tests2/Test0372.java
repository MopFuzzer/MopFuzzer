// Generated by Java* Fuzzer test generator (1.0.001). Fri Dec  8 09:12:29 2023
public class Test0372 {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static short sFld=17278;
    public static double dFld=-38.45324;
    public boolean bFld=true;
    public static float[] fArrFld =new float[N];
    public static int[] iArrFld =new int[N];
    public static long[] lArrFld =new long[N];
    public long[] lArrFld1 =new long[N];

    static {
        FuzzerUtils.init(Test0372.fArrFld, 80.444F);
        FuzzerUtils.init(Test0372.iArrFld, 44724);
        FuzzerUtils.init(Test0372.lArrFld, 4320L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, int i6, int i7) {

        float f=-90.49F, f1=1.538F;
        int i8=7, i9=3179;
        byte by1=20;
        byte[] byArr =new byte[N];

        FuzzerUtils.init(byArr, (byte)108);

        f -= Test0372.sFld;
        i8 = 1;
        do {
            i7 = i8;
            i7 -= (int) Test0372.instanceCount;
        } while (++i8 < 291);
        i7 ^= i6;
        i7 -= i6;
        Test0372.instanceCount *= (long) f;
        for (f1 = 8; f1 < 220; f1++) {
            byArr[(int)(f1)] = (byte)l2;
            by1 += (byte)f1;
            i6 += (int)-6339642632607277041L;
            i6 += (int)f1;
        }
        i6 = i6;
        i7 = i8;
        i6 >>= -26310;
        vMeth1_check_sum += l2 + i6 + i7 + Float.floatToIntBits(f) + i8 + Float.floatToIntBits(f1) + i9 + by1 +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i5, long l1) {

        int i10=-7;
        int i11=-239;
        int i12=-50567;
        int i13=-27972;
        int i14=48;
        int i15=-20822;
        int[] iArr =new int[N];
        double d=54.86855;
        float f2=1.498F;
        byte by2=3;
        long l3=-4778L;
        boolean b=false;

        FuzzerUtils.init(iArr, 222);

        vMeth1(l1, 209, i5);
        for (i10 = 12; i10 < 269; ++i10) {
            for (i12 = i10; i12 < 6; ++i12) {
                d -= -157;
                f2 += (i12 * i12);
                switch ((i10 % 9) + 114) {
                case 114:
                    switch (((i12 % 10) * 5) + 23) {
                    case 49:
                        for (i14 = 1; i14 < 1; ++i14) {
                            Test0372.fArrFld[i12] = by2;
                            i15 += (i14 * i14);
                            iArr[i10] -= i10;
                            i13 <<= (int)l1;
                            l1 = i11;
                            l1 += (((i14 * Test0372.instanceCount) + i13) - i13);
                        }
                        i11 >>= 0;
                        break;
                    case 63:
                        f2 -= i11;
                        break;
                    case 31:
                    case 70:
                        Test0372.instanceCount = i12;
                        break;
                    case 35:
                        iArr[i10] += 242;
                    case 40:
                        by2 += (byte)(i12 | (long)f2);
                        break;
                    case 64:
                        i13 <<= (int)l3;
                        break;
                    case 32:
                        iArr[i12 - 1] = i14;
                    case 29:
                        Test0372.instanceCount = i13;
                        break;
                    case 42:
                        l3 -= (long)d;
                    default:
                        by2 += (byte)213;
                    }
                case 115:
                    by2 += (byte)i10;
                    break;
                case 116:
                    f2 += l1;
                case 117:
                    if (i13 != 0) {
                        vMeth_check_sum += i5 + l1 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) +
                            Float.floatToIntBits(f2) + i14 + i15 + by2 + l3 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    break;
                case 118:
                    b = true;
                case 119:
                    if (i11 != 0) {
                        vMeth_check_sum += i5 + l1 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) +
                            Float.floatToIntBits(f2) + i14 + i15 + by2 + l3 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                case 120:
                    i13 += (i12 * i12);
                    break;
                case 121:
                    l3 *= i11;
                case 122:
                    i11 += (int)-31.311F;
                    break;
                }
            }
        }
        vMeth_check_sum += i5 + l1 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) +
            i14 + i15 + by2 + l3 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i2, long l, byte by) {

        int i3=-8, i4=-14, i16=-1196, i17=-189, i18=-63, i19=213, i20=-13, i21=4;

        for (i3 = 130; i3 > 4; i3 -= 2) {
            vMeth(i3, l);
            l += (((i3 * i2) + i2) - by);
            Test0372.iArrFld[i3] = i4;
            i2 >>= (int) Test0372.instanceCount;
            i4 -= i4;
            Test0372.instanceCount += i3;
            Test0372.lArrFld[i3 - 1] = 0;
        }
        for (i16 = 20; 372 > i16; i16++) {
            for (i18 = i16; i18 < 5; ++i18) {
                float f3=0.778F;
                for (i20 = 1; 1 > i20; i20++) {
                    by >>= (byte)-246;
                    l &= i17;
                }
                Test0372.instanceCount = 0;
                f3 *= l;
            }
        }
        long meth_res = i2 + l + by + i3 + i4 + i16 + i17 + i18 + i19 + i20 + i21;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=8888, i1=-63679, i22=31793, i23=-125, i24=85, i25=134, i26=165, i27=-43482;
        byte by3=65;
        float f4=-119.709F;

        for (i = 14; i < 250; ++i) {
            i1 += (int) ((lMeth(i1, Test0372.instanceCount, by3) >>> i) + f4);
            for (i22 = 106; i22 > 5; i22--) {
                i23 += i23;
                switch ((((i23 >>> 1) % 10) * 5) + 101) {
                case 114:
                    for (i24 = 1; i24 < 2; ++i24) {
                        Test0372.instanceCount -= i;
                        i25 += 212;
                        Test0372.dFld *= by3;
                        f4 = Test0372.instanceCount;
                    }
                    break;
                case 116:
                    i1 += i22;
                    i23 += (i22 ^ i23);
                    if (true) {
                        Test0372.iArrFld[i22 + 1] -= i22;
                        i23 -= (int) Test0372.instanceCount;
                    } else if (bFld) {
                        switch (((i22 % 1) * 5) + 75) {
                        case 76:
                            i25 ^= i23;
                            i25 += (((i22 * by3) + i23) - i24);
                            break;
                        }
                        switch (((i % 5) * 5) + 48) {
                        case 60:
                            f4 += (i22 + i25);
                            switch (((i22 % 6) * 5) + 53) {
                            case 78:
                                lArrFld1[i - 1] = i23;
                                for (i26 = 1; i26 < 2; ++i26) {
                                    Test0372.iArrFld[i26 + 1] += (int) 2.322F;
                                    Test0372.instanceCount >>>= 93;
                                    try {
                                        Test0372.iArrFld[i] = (i22 % i27);
                                        i27 = (-52442 / i);
                                        i25 = (i22 % i25);
                                    } catch (ArithmeticException a_e) {}
                                    i23 = i26;
                                    i27 = i;
                                    i23 *= i25;
                                }
                                Test0372.dFld = Test0372.instanceCount;
                                break;
                            case 77:
                                i23 = i23;
                                break;
                            case 54:
                                Test0372.sFld /= (short) (i23 | 1);
                            case 56:
                                Test0372.instanceCount = (long) Test0372.dFld;
                                break;
                            case 74:
                                f4 *= Test0372.instanceCount;
                                break;
                            case 59:
                                i23 += (((i22 * i) + i23) - i);
                            }
                            break;
                        case 68:
                        case 71:
                            Test0372.instanceCount += (i22 * i22);
                        case 56:
                            i1 = (int) Test0372.dFld;
                            break;
                        case 57:
                            i27 = i27;
                            break;
                        }
                    } else {
                        Test0372.fArrFld[i22 - 1] += i24;
                    }
                    break;
                case 123:
                    i27 += i23;
                case 126:
                    i27 += (((i22 * i1) + f4) - f4);
                    break;
                case 128:
                    i1 += (((i22 * i26) + i27) - i27);
                    break;
                case 134:
                    try {
                        i1 = (-51453 / i22);
                        i1 = (-908894254 / i26);
                        i25 = (i25 % -1421);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 117:
                    if (true) continue;
                    break;
                case 132:
                    by3 += (byte)i22;
                    break;
                case 113:
                    Test0372.iArrFld[i - 1] = 5;
                    break;
                case 122:
                    i25 <<= -30290;
                    break;
                default:
                    f4 -= f4;
                }
            }
        }

        FuzzerUtils.out.println("i i1 by3 = " + i + "," + i1 + "," + by3);
        FuzzerUtils.out.println("f4 i22 i23 = " + Float.floatToIntBits(f4) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test0372.instanceCount Test0372.sFld Test0372.dFld = " + Test0372.instanceCount + "," + Test0372.sFld +
                "," + Double.doubleToLongBits(Test0372.dFld));
        FuzzerUtils.out.println("bFld Test0372.fArrFld Test0372.iArrFld = " + (bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0372.fArrFld)) + "," + FuzzerUtils.checkSum(Test0372.iArrFld));
        FuzzerUtils.out.println("Test0372.lArrFld lArrFld1 = " + FuzzerUtils.checkSum(Test0372.lArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test0372 _instance = new Test0372();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
