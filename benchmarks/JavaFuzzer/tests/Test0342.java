// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0342 {

    public static final int N = 400;

    public static long instanceCount = 8829010580214823291L;
    public static boolean bFld = true;
    public static float fFld = 62.78F;
    public static byte byFld = -75;
    public static int iFld = -53047;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0342.iArrFld, 44384);
    }

    public static int iMeth1(int i4, double d, int i5) {

        int i6 = -13;
        int i7 = 20388;
        int i8 = -7;
        int i9 = -19;
        int i10 = -145;
        int[] iArr = new int[N];
        float f = 0.171F;
        short s = -22616;
        long[] lArr = new long[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(lArr, -1L);
        FuzzerUtils.init(dArr, 1.20190);
        FuzzerUtils.init(iArr, -18519);

        for (i6 = 8; i6 < 381; ++i6) {
            i8 = 1;
            while ((i8 += 2) < 5) {
                i5 += -60;
                i5 += i8;
                for (i9 = 1; i9 < 3; ++i9) {
                    switch ((((-248 >>> 1) % 3) * 5) + 113) {
                        case 119:
                            i10 = (int) Test0342.instanceCount;
                            switch (((i6 % 7) * 5) + 30) {
                                case 44:
                                    f = (float) d;
                                    break;
                                case 48:
                                    i7 += (i9 - i10);
                                    i7 = (int) f;
                                case 46:
                                    lArr[i6 + 1] = (long) f;
                                    Test0342.instanceCount += (147 + (i9 * i9));
                                    f = i10;
                                    Test0342.instanceCount += (i9 * i9);
                                    break;
                                case 32:
                                    s <<= (short) i5;
                                    break;
                                case 36:
                                    i5 += (((i9 * i5) + s) - i6);
                                    break;
                                case 59:
                                    dArr[i9 - 1] = 2;
                                    break;
                                case 52:
                                    dArr = dArr;
                            }
                            break;
                        case 117:
                            i4 -= 117;
                            break;
                        case 128:
                            try {
                                i10 = (i7 % -21427);
                                i7 = (i6 / i8);
                                i5 = (-62577 / iArr[i6 + 1]);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                    }
                }
            }
        }
        long meth_res = i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + s +
                FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(long l, int i2, int i3) {

        int i11 = -22062, i12 = -163, i13 = -57252, i14 = -73;
        double d1 = -1.4954;
        short s1 = -17607;
        float f2 = 0.81F;
        boolean[] bArr = new boolean[N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr1, 3691194227L);

        i2 -= iMeth1(i2, 29.30259, i3);
        bArr[(i2 >>> 1) % N] = Test0342.bFld;
        for (i11 = 20; i11 < 396; i11++) {
            l += i12;
            i2 |= i11;
            d1 %= -45.619F;
            for (i13 = i11; i13 < 4; ++i13) {
                float f1 = 2.170F;
                byte by = 97;
                s1 -= (short) 1.701F;
                if (i2 != 0) {
                }
                lArr1[i13 + 1] += (long) f1;
                Test0342.iArrFld[i13 + 1] = (int) f2;
                i3 >>= i14;
                by -= (byte) Test0342.instanceCount;
                Test0342.iArrFld[i13 + 1] = (int) -21140L;
                i12 = 13;
            }
        }
        long meth_res = l + i2 + i3 + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 + s1 +
                Float.floatToIntBits(f2) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {

        int i = -37345, i1 = 33593, i15 = -68, i16 = -10601, i17 = 10, i18 = -48027, i19 = -124, i20 = -8;
        short s2 = 25736;
        double d2 = -15.61423;
        float[][] fArr = new float[N][N];
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr, 44.787F);
        FuzzerUtils.init(fArr1, 94.85F);

        fArr[(i >>> 1) % N][(i >>> 1) % N] += (((i + i) + (i1 * Test0342.instanceCount)) + (Math.abs(0.33F) -
                iMeth(Test0342.instanceCount, i, -1898)));
        for (i15 = 178; i15 > 7; --i15) {
            for (i17 = 1; i17 < 9; ++i17) {
                for (i19 = i17; i19 < 2; i19++) {
                    i1 = s2;
                    Test0342.iArrFld[i19 + 1] = s2;
                    if (i15 != 0) {
                        vMeth_check_sum += i + i1 + i15 + i16 + i17 + i18 + i19 + i20 + s2 +
                                Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                        return;
                    }
                    switch ((((i18 >>> 1) % 4) * 5) + 113) {
                        case 133:
                            i += i19;
                            Test0342.instanceCount += (((i19 * i1) + Test0342.fFld) - i);
                            s2 += (short) (i19 * i19);
                            Test0342.instanceCount = 56612;
                            break;
                        case 130:
                            Test0342.byFld += (byte) i15;
                            fArr1[i15 + 1] = (float) d2;
                            break;
                        case 119:
                            Test0342.fFld = i20;
                            break;
                        case 132:
                            Test0342.iArrFld[i19 - 1] = i20;
                            break;
                        default:
                            Test0342.instanceCount <<= Test0342.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i15 + i16 + i17 + i18 + i19 + i20 + s2 + Double.doubleToLongBits(d2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void main(String[] strArr) {

        try {
            Test0342 _instance = new Test0342();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d3 = -1.6727;

        vMeth();
        d3 = Test0342.iFld;
        Test0342.instanceCount = Test0342.iFld;

        FuzzerUtils.out.println("d3 = " + Double.doubleToLongBits(d3));

        FuzzerUtils.out.println("Test0342.instanceCount Test0342.bFld Test0342.fFld = " + Test0342.instanceCount + "," + (Test0342.bFld ? 1
                : 0) + "," + Float.floatToIntBits(Test0342.fFld));
        FuzzerUtils.out.println("Test0342.byFld Test0342.iFld Test0342.iArrFld = " + Test0342.byFld + "," + Test0342.iFld + "," +
                FuzzerUtils.checkSum(Test0342.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
