// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test0503 {

    public static final int N = 400;

    public static long instanceCount = -14L;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public int iFld = -51898;
    public long[] lArrFld = new long[N];

    public static int iMeth(int i9) {

        int i10 = 11, i11 = -35850;

        i9 = (int) Test0503.instanceCount;
        i10 = 1;
        while ((i10 += 3) < 332) {
            i11 = 1;
            do {
                Test0503.instanceCount = i10;
            } while (++i11 < 14);
        }
        i9 = i11;
        long meth_res = i9 + i10 + i11;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth1(int i4, int i5) {

        byte by = 50;
        int i7 = -18799;
        int i8 = 13;
        int i12 = -7;
        int[] iArr = new int[N];
        boolean b = true;
        float f1 = -108.491F;

        FuzzerUtils.init(iArr, -134);

        for (int i6 : iArr) {
            Test0503.instanceCount *= (long) (-47.794F + ((-31722 - (i5 - by)) % ((Test0503.instanceCount - -36703) | 1)));
            for (i7 = 1; i7 < 4; i7++) {
                double d1 = 64.108813;
                by += (byte) i7;
                if (d1 != (-i8)) {
                    b = b;
                } else {
                    if ((--i6) >= ((Short.reverseBytes((short) (-11506)) - i5) * (iMeth(-57) + i7))) continue;
                }
            }
            f1 /= (by | 1);
            i5 &= i5;
            if (b) {
                i12 -= i4;
                f1 *= -101;
                i8 = -11;
                i6 >>= 4;
            } else {
                iArr[(0 >>> 1) % N] >>= i12;
            }
        }
        long meth_res = i4 + i5 + by + i7 + i8 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i12 +
                FuzzerUtils.checkSum(iArr);
        lMeth1_check_sum += meth_res;
        return (long) meth_res;
    }

    public static long lMeth(long l, double d, float f) {

        int i = -3;
        int i1 = 13;
        int i2 = 2;
        int i3 = -189;
        int i13 = 188;
        int i14 = 60656;
        int i15 = 1;
        int[] iArr1 = new int[N];
        float f2 = 1.450F;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(iArr1, -4);
        FuzzerUtils.init(fArr, -1.448F);

        for (i = 11; i < 204; i += 3) {
            for (i2 = 1; i2 < 24; ++i2) {
                Test0503.instanceCount = Math.max((int) (lMeth1(-1, i) / -17), i3);
                i1 *= (int) l;
            }
            for (i13 = 1; 24 > i13; ++i13) {
                i14 <<= 2629;
                i3 += (((i13 * f2) + i13) - Test0503.instanceCount);
                l <<= -75;
                i14 = (int) Test0503.instanceCount;
                i14 += (i13 * i13);
                i1 += i13;
                i15 = 1;
                while (++i15 < 2) {
                    try {
                        i1 = (57932 % i1);
                        i3 = (i14 / 242);
                        iArr1[i15 + 1] = (iArr1[i13] / i3);
                    } catch (ArithmeticException a_e) {
                    }
                    i1 <<= (int) -599678202L;
                    fArr[i13][i15 + 1] *= i1;
                }
            }
        }
        long meth_res = l + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i + i1 + i2 + i3 + i13 + i14 +
                Float.floatToIntBits(f2) + i15 + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0503 _instance = new Test0503();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d2 = -1.85977;
        float f3 = -1.481F, f4 = 0.17F;
        int i16 = 9;
        int i17 = -228;
        int i18 = -112;
        int i19 = -37;
        int i20 = 7;
        int i21 = 2;
        int i22 = 232;
        int i23 = 36363;
        int i24 = -7;
        int i25 = 11;
        int i26 = -17;
        int i27 = 72;
        int i28 = 74;
        int i29 = -10;
        int[] iArr2 = new int[N];
        boolean b1 = true;

        FuzzerUtils.init(iArr2, 52183);

        iFld += (int) lMeth(-13L, d2, f3);
        for (i16 = 8; i16 < 311; ++i16) {
            for (i18 = 3; i18 < 83; i18++) {
                Test0503.instanceCount >>= 6;
                for (f4 = 1; 2 > f4; ++f4) {
                    i21 = iFld;
                    i21 += (int) (f4 * f4);
                    Test0503.instanceCount -= (long) f3;
                    Test0503.instanceCount = Test0503.instanceCount;
                    iArr2[i16] += (int) Test0503.instanceCount;
                    lArrFld[i16 + 1] >>= i18;
                    iArr2[i16 + 1] = (int) d2;
                }
                i19 += (((i18 * i17) + i17) - Test0503.instanceCount);
                i19 = -11745;
            }
            i19 += (i16 * i16);
            if (b1) continue;
            if (b1) {
                iFld = iFld;
                for (i22 = i16; 83 > i22; i22 += 2) {
                    f3 = Test0503.instanceCount;
                }
                try {
                    i21 = (i21 % i16);
                    i23 = (i19 / iArr2[i16]);
                    iFld = (i21 / 35170);
                } catch (ArithmeticException a_e) {
                }
                d2 *= Test0503.instanceCount;
            }
        }
        for (i24 = 12; 287 > i24; i24++) {
            iArr2[i24 - 1] -= i20;
            for (i26 = 91; i24 < i26; i26--) {
                switch ((((141 >>> 1) % 2) * 5) + 85) {
                    case 86:
                        for (i28 = 1; 1 > i28; i28++) {
                            lArrFld[i24 + 1] >>= Test0503.instanceCount;
                            i27 |= i25;
                            i19 -= i18;
                        }
                        break;
                    case 88:
                        f3 += (20509L + (i26 * i26));
                        break;
                    default:
                        iFld += (((i26 * i18) + Test0503.instanceCount) - f4);
                }
            }
        }

        FuzzerUtils.out.println("d2 f3 i16 = " + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f3) + "," +
                i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f4 i20 i21 = " + Float.floatToIntBits(f4) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("b1 i22 i23 = " + (b1 ? 1 : 0) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0503.instanceCount iFld lArrFld = " + Test0503.instanceCount + "," + iFld + "," +
                FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
