// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test0411 {

    public static final int N = 400;

    public static long instanceCount = 245L;
    public static int[] iArrFld = new int[N];
    public static float[][] fArrFld = new float[N][N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0411.iArrFld, -4);
        FuzzerUtils.init(Test0411.fArrFld, 2.949F);
    }

    public static void vMeth1(long l) {

        int i3 = 100, i4 = -10, i5 = -45331, i6 = 10, i7 = 8184, i8 = 1763, i9 = 182;
        long l1 = 14L;
        long[] lArr = new long[N];
        double d2 = 1.849;

        FuzzerUtils.init(lArr, 4L);

        for (i3 = 291; i3 > 2; --i3) {
            lArr[i3 + 1] |= i4;
            Test0411.instanceCount += -65;
        }
        for (i5 = 353; i5 > 2; --i5) {
            for (i7 = 1; i7 < 5; i7++) {
                i6 = 12560;
                if (i3 != 0) {
                    vMeth1_check_sum += l + i3 + i4 + i5 + i6 + i7 + i8 + i9 + l1 + Double.doubleToLongBits(d2) +
                            FuzzerUtils.checkSum(lArr);
                    return;
                }
                i9 = 1;
                while (++i9 < 2) {
                    boolean b = true;
                    i6 += i9;
                    i4 += (int) l1;
                    Test0411.instanceCount -= 6L;
                    Test0411.iArrFld[i5] = (int) l1;
                    if (true) {
                        Test0411.iArrFld[i7 + 1] += (int) l1;
                        d2 /= (i6 | 1);
                    } else if (b) {
                        if (b) break;
                    } else if (b) {
                        i4 = (int) l;
                    } else {
                        i6 += i5;
                        vMeth1_check_sum += l + i3 + i4 + i5 + i6 + i7 + i8 + i9 + l1 + Double.doubleToLongBits(d2) +
                                FuzzerUtils.checkSum(lArr);
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + i6 + i7 + i8 + i9 + l1 + Double.doubleToLongBits(d2) +
                FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(double d1) {

        int i10 = -61452, i11 = -8, i12 = 3, i13 = 130;
        byte by = -70;
        float f = -15.918F;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 4184051390L);

        vMeth1(Test0411.instanceCount);
        d1 += 14738;
        for (i10 = 18; i10 < 334; ++i10) {
            i11 <<= i10;
            i12 = 1;
            while (++i12 < 5) {
                i13 = 1;
                do {
                    lArr1[i10] += by;
                    i11 = 198;
                    Test0411.instanceCount -= -39807;
                    Test0411.instanceCount = Test0411.instanceCount;
                    Test0411.instanceCount = i12;
                    i11 = (int) Test0411.instanceCount;
                    f -= i12;
                    i11 += (((i13 * i12) + Test0411.instanceCount) - i10);
                    Test0411.instanceCount = (long) f;
                } while (--i13 > 0);
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + by + Float.floatToIntBits(f) +
                FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i1, int i2, double d) {

        float f1 = 2.360F;
        int i14 = -13, i15 = -43, i16 = -2, i17 = 16013, i18 = -1;
        double d3 = 23.29246;
        double[] dArr = new double[N];
        byte by1 = -126;
        short s = 13472;
        boolean b1 = false;

        FuzzerUtils.init(dArr, 0.101861);

        vMeth(d);
        for (f1 = 5; f1 < 233; ++f1) {
            i14 += i2;
            for (i15 = 1; i15 < 7; ++i15) {
                Test0411.fArrFld[i15 + 1][i15 - 1] += 181L;
                i1 = i16;
            }
            for (d3 = f1; d3 < 7; ++d3) {
                i18 = 1;
                while (++i18 < 1) {
                    by1 = (byte) i18;
                    s = (short) i17;
                    i14 >>= i2;
                    dArr[i18] -= 598719258L;
                    if (b1) {
                        d = i17;
                        i17 += i15;
                    }
                }
            }
        }
        long meth_res = i1 + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i14 + i15 + i16 +
                Double.doubleToLongBits(d3) + i17 + i18 + by1 + s + (b1 ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0411 _instance = new Test0411();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -17084, i19 = -44801, i20 = -14, i21 = -11189, i22 = 7, i23 = -21330, i24 = 1, i25 = 9;
        double d4 = -11.98425;
        short s1 = 1454;

        i = iMeth(i, -245, d4);
        d4 += -218440023L;
        i += (int) d4;
        i = (int) Test0411.instanceCount;
        Test0411.instanceCount -= (long) 60.106416;
        for (i19 = 5; i19 < 347; i19 += 2) {
            i21 = 1;
            while (++i21 < 147) {
                i22 = 1;
                do {
                    i -= i20;
                } while ((i22 += 3) < 1);
                Test0411.iArrFld[i19 - 1] = -37;
                i20 -= i20;
                switch (((i19 % 10) * 5) + 5) {
                    case 45:
                        Test0411.instanceCount += (long) d4;
                        i20 = i20;
                        break;
                    case 14:
                    case 34:
                        Test0411.iArrFld[i19] -= (int) d4;
                        break;
                    case 7:
                        Test0411.iArrFld[i21] -= s1;
                        for (i23 = 1; i23 < 1; i23++) {
                            Test0411.iArrFld[i23 + 1] <<= s1;
                            i -= (int) Test0411.instanceCount;
                            Test0411.instanceCount *= Test0411.instanceCount;
                            Test0411.instanceCount ^= i23;
                            i >>= i23;
                            i &= -22916;
                            try {
                                i20 = (128 / i19);
                                i24 = (-22547 / Test0411.iArrFld[i23 + 1]);
                                Test0411.iArrFld[(i >>> 1) % N] = (40945 % i21);
                            } catch (ArithmeticException a_e) {
                            }
                            i25 += i22;
                        }
                        break;
                    case 52:
                        i24 = i23;
                        break;
                    case 18:
                        i20 *= i19;
                        i25 += (int) 2.127045;
                    case 9:
                        i20 += (int) Test0411.instanceCount;
                        i25 = i;
                        break;
                    case 42:
                        i25 *= i25;
                    case 33:
                        i20 <<= i20;
                        break;
                    case 40:
                        try {
                            i20 = (i21 % 22);
                            i = (-618015410 / i);
                            Test0411.iArrFld[i19 + 1] = (i24 % i23);
                        } catch (ArithmeticException a_e) {
                        }
                        break;
                    default:
                        Test0411.instanceCount += i22;
                }
            }
        }

        FuzzerUtils.out.println("i d4 i19 = " + i + "," + Double.doubleToLongBits(d4) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("s1 i23 i24 = " + s1 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 = " + i25);

        FuzzerUtils.out.println("Test0411.instanceCount Test0411.iArrFld Test0411.fArrFld = " + Test0411.instanceCount + "," +
                FuzzerUtils.checkSum(Test0411.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0411.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
