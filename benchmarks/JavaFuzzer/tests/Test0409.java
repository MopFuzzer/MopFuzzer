// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test0409 {

    public static final int N = 400;

    public static long instanceCount = -6L;
    public static volatile float fFld = 2.111F;
    public static float[] fArrFld = new float[N];
    public static double[] dArrFld = new double[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0409.fArrFld, -88.380F);
        FuzzerUtils.init(Test0409.dArrFld, 0.7166);
    }

    public int iFld = -212;

    public static long lMeth() {

        int i5 = 22, i6 = -25506, i7 = -8, i8 = 25199, i9 = -3, i10 = -241;
        byte by = 99;
        boolean b1 = false;
        double d = 1.19826;

        for (i5 = 7; 310 > i5; i5++) {
            i6 ^= by;
        }
        b1 = b1;
        switch ((((i5 >>> 1) % 1) * 5) + 43) {
            case 46:
                for (i7 = 5; i7 < 282; i7++) {
                    for (i9 = 1; 6 > i9; ++i9) {
                        i6 -= i9;
                        i10 *= (int) d;
                        i6 = -119;
                        i6 -= i5;
                        Test0409.dArrFld[i9] -= -9;
                        i8 -= (int) Test0409.fFld;
                        i8 >>>= -7271;
                        i8 *= i5;
                    }
                    Test0409.fArrFld[i7] = i7;
                }
                break;
        }
        long meth_res = i5 + i6 + by + (b1 ? 1 : 0) + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth1(int i3, int i4) {

        byte by1 = 98;
        double d1 = 0.55134;
        int i11 = 0, i12 = -1, i13 = -44759, i14 = -50114, i15 = 9;
        boolean b2 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 7198568559896868962L);

        i3 -= (int) lMeth();
        by1 = (byte) i3;
        d1 = i3;
        for (i11 = 207; 9 < i11; --i11) {
            Test0409.instanceCount = i12;
            if (i3 != 0) {
                vMeth1_check_sum += i3 + i4 + by1 + Double.doubleToLongBits(d1) + i11 + i12 + (b2 ? 1 : 0) + i13 + i14
                        + i15 + FuzzerUtils.checkSum(lArr);
                return;
            }
            by1 = by1;
            lArr[i11] += Test0409.instanceCount;
            b2 = b2;
            Test0409.fFld += i11;
            i12 += i11;
            i13 = 1;
            while (++i13 < 8) {
                for (i14 = i11; i14 < 1; ++i14) {
                    i15 = (int) Test0409.fFld;
                    i12 += (i14 | i15);
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + by1 + Double.doubleToLongBits(d1) + i11 + i12 + (b2 ? 1 : 0) + i13 + i14 + i15 +
                FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1, int i2, long l) {


        vMeth1(i1, i1);
        long meth_res = i1 + i2 + l;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0409 _instance = new Test0409();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(int i) {

        boolean b = false;
        float f = 2.81F;

        b = ((Test0409.fArrFld[(i >>> 1) % N] + f) < Test0409.fArrFld[(i >>> 1) % N]);
        vMeth_check_sum += i + (b ? 1 : 0) + Float.floatToIntBits(f);
    }

    public void mainTest(String[] strArr1) {

        int i16 = 35717;
        int i17 = 4;
        int i18 = 94;
        int i19 = 49;
        int i20 = -3;
        int i21 = -199;
        int i22 = -61058;
        int i23 = -8784;
        int i24 = -14;
        int i25 = -52996;
        int i26 = 3;
        int[][] iArr = new int[N][N];
        boolean b3 = false;
        boolean[] bArr = new boolean[N];
        double d2 = 1.75715;
        short s = -23975;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr, -204);
        FuzzerUtils.init(lArr1, 52L);
        FuzzerUtils.init(bArr, false);

        iFld -= (int) (((iFld--) - iFld) - Math.abs(iFld + -8));
        vMeth((int) (((Test0409.instanceCount * -19762) + iMeth(103, 12, Test0409.instanceCount)) + iFld));
        if (false) {
            for (i16 = 380; i16 > 6; --i16) {
                i17 = (int) Test0409.instanceCount;
                b3 = true;
                for (i18 = 67; i18 > 1; i18--) {
                    iFld += (((i18 * iFld) + i16) - Test0409.instanceCount);
                    Test0409.fFld = i18;
                    for (i20 = 2; 1 < i20; i20--) {
                        iArr[i20 + 1][i16 - 1] -= -3490;
                        d2 += i16;
                        i17 >>= -7595;
                        Test0409.instanceCount = s;
                        if (true) continue;
                        Test0409.instanceCount += (i20 * i16);
                        Test0409.fArrFld = Test0409.fArrFld;
                    }
                    Test0409.instanceCount = i20;
                    i17 += (i18 * i18);
                    i21 = (int) Test0409.instanceCount;
                    i17 += (i18 + i18);
                    Test0409.instanceCount = iFld;
                    Test0409.instanceCount = (long) -71.170F;
                    lArr1[i16] = i20;
                }
                for (i22 = 1; i22 < 67; ++i22) {
                    for (i24 = 1; 2 > i24; ++i24) {
                        i21 += (i24 | i26);
                        i17 *= (int) Test0409.fFld;
                        Test0409.fFld -= i21;
                        i25 = (int) Test0409.instanceCount;
                    }
                }
            }
        } else {
            bArr[(28464 >>> 1) % N] = true;
        }

        FuzzerUtils.out.println("i16 i17 b3 = " + i16 + "," + i17 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d2 s = " + i21 + "," + Double.doubleToLongBits(d2) + "," + s);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 iArr = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr1 bArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0409.instanceCount iFld Test0409.fFld = " + Test0409.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0409.fFld));
        FuzzerUtils.out.println("Test0409.fArrFld Test0409.dArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0409.fArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0409.dArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
