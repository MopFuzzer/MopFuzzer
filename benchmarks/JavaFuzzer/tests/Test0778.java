// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0778 {

    public static final int N = 400;

    public static long instanceCount = 34204L;
    public static short sFld = -19546;
    public static volatile boolean bFld = false;
    public static float fFld = 125.186F;
    public static byte byFld = -50;
    public static double[] dArrFld = new double[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0778.dArrFld, 2.101615);
    }

    public double dFld = -1.67874;

    public static void vMeth2(double d1) {

        float f1 = 2.541F;
        int i11 = -8, i12 = 10, i13 = 2, i14 = 14, i15 = 11, i16 = -105;
        byte by = -15;
        short[][] sArr = new short[N][N];

        FuzzerUtils.init(sArr, (short) -16132);

        f1 = Test0778.instanceCount;
        i11 >>>= i11;
        i12 = 1;
        do {
            i11 = i12;
            for (i13 = 1; i13 < 6; i13++) {
                i11 = i12;
                i11 >>>= i14;
                for (i15 = i13; i15 < 2; ++i15) {
                    i14 += (int) Test0778.instanceCount;
                    if (false) {
                        by = (byte) i16;
                    } else {
                        i11 = (int) Test0778.instanceCount;
                        sArr[i15][i15 - 1] = (short) i12;
                        i14 -= i11;
                    }
                    i16 -= (int) Test0778.instanceCount;
                }
            }
        } while (++i12 < 282);
        vMeth2_check_sum += Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + i15 + i16
                + by + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1() {

        int i9 = -11, i10 = -6, i17 = 236, i18 = -8, i19 = -64042;
        double d2 = 23.48409;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i9 = 11; i9 < 246; i9++) {
            vMeth2(d2);
            i10 -= 42;
            d2 *= 14L;
            Test0778.bFld = Test0778.bFld;
        }
        i17 = i17;
        for (i18 = 8; i18 < 160; i18++) {
            d2 -= i9;
            bArr[i18] = Test0778.bFld;
            i17 = i17;
            i19 += (-148 + (i18 * i18));
            Test0778.fFld *= Test0778.fFld;
            i17 += (((i18 * i10) + i17) - i17);
            i19 = -4040;
            Test0778.instanceCount <<= i17;
        }
        vMeth1_check_sum += i9 + i10 + Double.doubleToLongBits(d2) + i17 + i18 + i19 + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i5, double d, int i6) {

        long l = -40855L, l1 = 7L;
        int i7 = -49066;
        int i8 = -102;
        int i20 = -6;
        int i21 = 7;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, 38635);

        l = 287;
        while ((l -= 3) > 0) {
            for (l1 = 1; l1 < 16; l1++) {
                iArr1[(int) (l + 1)] |= iArr1[(int) (l1)];
            }
            i6 = (((++i6) + (i7 - Test0778.sFld)) * -10);
            i8 = 1;
            while (++i8 < 16) {
                vMeth1();
                i5 += (((i8 * i6) + i7) - i8);
                i7 += (i8 * i8);
                i5 += (-92 + (i8 * i8));
                switch ((int) ((l % 8) + 84)) {
                    case 84:
                        for (i20 = 1; i20 < 1; ++i20) {
                            switch ((i8 % 10) + 103) {
                                case 103:
                                    i5 <<= i7;
                                    Test0778.instanceCount >>= l1;
                                    iArr1[(int) (l - 1)] = i8;
                                    break;
                                case 104:
                                    if (Test0778.bFld) continue;
                                case 105:
                                    i6 -= 60;
                                    break;
                                case 106:
                                    i21 = (int) -23890L;
                                    break;
                                case 107:
                                    i6 *= i8;
                                    break;
                                case 108:
                                    d += -211;
                                    break;
                                case 109:
                                    iArr1[i20 - 1] += i20;
                                case 110:
                                    i21 -= (int) Test0778.fFld;
                                    break;
                                case 111:
                                    Test0778.sFld += (short) d;
                                case 112:
                                    if (false) break;
                                    break;
                            }
                        }
                        break;
                    case 85:
                        i21 >>= (int) l1;
                        break;
                    case 86:
                        iArr1[i8 - 1] *= (int) Test0778.fFld;
                        break;
                    case 87:
                        Test0778.fFld -= i5;
                        break;
                    case 88:
                        if (Test0778.bFld) break;
                    case 89:
                        i5 = i21;
                        break;
                    case 90:
                        i7 += (i8 | Test0778.instanceCount);
                        break;
                    case 91:
                        Test0778.instanceCount >>= Test0778.instanceCount;
                    default:
                        d = i21;
                }
            }
        }
        vMeth_check_sum += i5 + Double.doubleToLongBits(d) + i6 + l + l1 + i7 + i8 + i20 + i21 +
                FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0778 _instance = new Test0778();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 12;
        int i1 = -1;
        int i2 = -1;
        int i3 = -197;
        int i4 = -129;
        int i22 = -27903;
        int i23 = 212;
        int i24 = -13;
        int[] iArr = new int[N];
        float f = 6.181F;
        short s = -31421;
        short[] sArr1 = new short[N];
        double[] dArr = new double[N];
        long[][] lArr = new long[N][N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr, 116);
        FuzzerUtils.init(dArr, 0.103346);
        FuzzerUtils.init(sArr1, (short) -19006);
        FuzzerUtils.init(lArr, 12L);
        FuzzerUtils.init(lArr1, 221L);

        for (i = 3; 142 > i; i++) {
            for (i2 = 180; i2 > 3; i2--) {
                i1 = (int) ((Test0778.dArrFld[i] - f) + dFld);
                i3 += (int) ((Test0778.instanceCount--) - ((i2 - Test0778.instanceCount) + (--i1)));
                i4 = 1;
                while (++i4 < 2) {
                    i3 += (i4 - Test0778.instanceCount);
                    i1 = (int) ((i1 >> (i1--)) + ((i4 + s) * (Test0778.instanceCount >>> i3)));
                    i1 = (Math.min(i3, iArr[i + 1]--) - (++iArr[i4]));
                }
                vMeth(i, dFld, i1);
                Test0778.instanceCount = i3;
                i1 *= i4;
                i1 += i2;
            }
            switch ((i % 8) + 28) {
                case 28:
                    Test0778.instanceCount += (i * i);
                    i1 *= (int) dFld;
                    Test0778.instanceCount ^= Test0778.byFld;
                    switch (((i % 8) * 5) + 6) {
                        case 42:
                            Test0778.instanceCount += (i * i);
                            Test0778.byFld >>= (byte) i3;
                            dFld += 119;
                            for (i22 = 3; i22 < 180; ++i22) {
                                i3 -= (int) Test0778.instanceCount;
                                i3 += (i22 + Test0778.instanceCount);
                                Test0778.byFld += (byte) i22;
                                Test0778.instanceCount -= (long) dFld;
                                switch (((i2 >>> 1) % 8) + 17) {
                                    case 17:
                                        dArr[i] += i22;
                                        i23 = (int) dFld;
                                        f += i22;
                                    case 18:
                                        i23 /= (int) (i1 | 1);
                                    case 19:
                                        sArr1[i22 - 1] -= (short) Test0778.instanceCount;
                                    case 20:
                                        i1 -= i4;
                                        break;
                                    case 21:
                                        iArr[i22 - 1] = 111;
                                    case 22:
                                        i1 = Test0778.sFld;
                                        break;
                                    case 23:
                                        i3 += (i22 * Test0778.instanceCount);
                                        break;
                                    case 24:
                                        lArr = lArr;
                                }
                            }
                            break;
                        case 16:
                            Test0778.byFld -= (byte) Test0778.fFld;
                            break;
                        case 40:
                            Test0778.instanceCount /= (Test0778.instanceCount | 1);
                            break;
                        case 15:
                            Test0778.instanceCount = 100;
                            break;
                        case 34:
                            dFld += -29;
                            break;
                        case 33:
                            i23 = i2;
                            break;
                        case 29:
                            i23 -= i;
                            break;
                        case 21:
                            Test0778.fFld = Test0778.byFld;
                        default:
                            i1 -= i22;
                    }
                    break;
                case 29:
                    Test0778.instanceCount = -18154;
                    break;
                case 30:
                    i23 += i4;
                    break;
                case 31:
                    i1 = i24;
                    break;
                case 32:
                    i3 = i1;
                    break;
                case 33:
                    i24 += i22;
                    break;
                case 34:
                    Test0778.instanceCount -= Test0778.instanceCount;
                case 35:
                    if (false) break;
                    break;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f i4 = " + i3 + "," + Float.floatToIntBits(f) + "," + i4);
        FuzzerUtils.out.println("s i22 i23 = " + s + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 iArr dArr = " + i24 + "," + FuzzerUtils.checkSum(iArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("sArr1 lArr lArr1 = " + FuzzerUtils.checkSum(sArr1) + "," + FuzzerUtils.checkSum(lArr)
                + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0778.instanceCount dFld Test0778.sFld = " + Test0778.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0778.sFld);
        FuzzerUtils.out.println("Test0778.bFld Test0778.fFld Test0778.byFld = " + (Test0778.bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0778.fFld) + "," + Test0778.byFld);
        FuzzerUtils.out.println("Test0778.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0778.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
