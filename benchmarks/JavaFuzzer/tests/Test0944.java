// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0944 {

    public static final int N = 400;

    public static volatile long instanceCount = 2192L;
    public static long[] lArrFld1 = new long[N];
    public static byte[] byArrFld = new byte[N];
    public static int[][] iArrFld = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0944.lArrFld1, -43039L);
        FuzzerUtils.init(Test0944.byArrFld, (byte) -72);
        FuzzerUtils.init(Test0944.iArrFld, -157);
    }

    public volatile short sFld = 32474;
    public volatile long[] lArrFld = new long[N];

    public static void vMeth1(int i8, long l1, int i9) {

        int i10 = 12;
        int i11 = -251;
        int i12 = -73;
        int[] iArr = new int[N];
        float f = -77.979F;
        float[] fArr = new float[N];
        double d = 0.39781;
        boolean b = true;

        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(fArr, 53.334F);

        for (i10 = 12; i10 < 219; i10++) {
            f -= i8;
            i12 = 1;
            do {
                d += i9;
            } while (++i12 < 8);
            switch (((i10 % 5) * 5) + 39) {
                case 46:
                    i11 = i12;
                    b = true;
                    break;
                case 54:
                case 47:
                    d -= i11;
                    i11 = (int) -44596L;
                    i8 = (int) Test0944.instanceCount;
                    break;
                case 51:
                    switch ((((i11 >>> 1) % 4) * 5) + 57) {
                        case 74:
                            Test0944.lArrFld1[i10 - 1] -= (long) d;
                            break;
                        case 69:
                            iArr[i10 + 1] = (int) 7695L;
                            break;
                        case 60:
                            i8 = (int) 57341L;
                            fArr[i10] *= i8;
                            break;
                        case 68:
                            i8 += i11;
                            break;
                        default:
                            l1 += i10;
                    }
                    break;
                case 48:
                    i9 += (int) -599981362574254153L;
            }
        }
        vMeth1_check_sum += i8 + l1 + i9 + i10 + i11 + Float.floatToIntBits(f) + i12 + Double.doubleToLongBits(d) + (b
                ? 1 : 0) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i6 = 55223;
        int i7 = 5863;
        int i13 = 0;
        int i14 = 176;
        int i15 = -55278;
        int[] iArr1 = new int[N];
        double d1 = 16.5971;
        byte by = -64;
        short s = 29566;
        long l2 = 5458L;
        float f1 = 7.760F;

        FuzzerUtils.init(iArr1, -59931);

        Test0944.instanceCount *= -33857;
        for (i6 = 11; i6 < 302; i6++) {
            vMeth1(-37183, 362814267169588188L, i7);
            i7 <<= (int) Test0944.instanceCount;
            i7 = i6;
            for (i13 = 1; i13 < 6; i13 += 3) {
                for (d1 = i6; d1 < 6; d1++) {
                    by = (byte) i15;
                }
                switch ((i6 % 1) + 45) {
                    case 45:
                        iArr1[i13] = (int) d1;
                        Test0944.byArrFld[i13] >>>= (byte) Test0944.instanceCount;
                    default:
                        i7 += i13;
                        i15 = i15;
                        s *= (short) l2;
                }
                f1 -= i6;
            }
        }
        long meth_res = i6 + i7 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + by + s + l2 +
                Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i5) {

        int i16 = -3, i17 = -13954, i18 = 239, i19 = 4, i20 = -11;
        byte by1 = 15;
        float f2 = -26.615F;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -2.33400);

        i5 += (6862 + iMeth());
        Test0944.lArrFld1[(i5 >>> 1) % N] = -4;
        i16 = 1;
        while (++i16 < 211) {
            i5 *= i16;
        }
        for (i17 = 9; 391 > i17; i17++) {
            i5 = i5;
            for (i19 = 1; i19 < 4; i19++) {
                by1 = (byte) i5;
                Test0944.instanceCount = Test0944.instanceCount;
                i18 = i17;
                dArr[i19] -= i16;
            }
            f2 = i16;
            dArr = FuzzerUtils.double1array(N, (double) 98.9584);
            Test0944.iArrFld[i17 - 1][i17] *= -199;
            i5 -= (int) Test0944.instanceCount;
        }
        vMeth_check_sum += i5 + i16 + i17 + i18 + i19 + i20 + by1 + Float.floatToIntBits(f2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0944 _instance = new Test0944();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        long l = 2237151146L;
        int i = 36, i1 = 62, i2 = -217, i3 = -66, i4 = 72;
        double d2 = -15.120220;
        float f3 = 1.226F, f4 = 0.1007F;

        for (l = 11; l < 269; l++) {
            for (i1 = 97; i1 > 1; i1--) {
                for (i3 = (int) (l); i3 < 2; ++i3) {
                    i += i3;
                    lArrFld = (lArrFld = lArrFld);
                    vMeth(i4);
                    i4 = (int) 43247L;
                    i2 <<= i3;
                    d2 += i2;
                    Test0944.lArrFld1[i1 + 1] >>>= l;
                    i4 = (int) l;
                    Test0944.instanceCount += l;
                }
                f3 -= i1;
                f4 = 1;
                while (++f4 < 2) {
                    i -= (int) l;
                    i2 = i3;
                    i2 ^= i4;
                    d2 *= sFld;
                    i += (int) f4;
                    i4 += (int) (((f4 * i3) + i) - i);
                    d2 = i1;
                    Test0944.iArrFld[(int) (l)][(int) (l)] -= i2;
                }
                lArrFld[(int) (l + 1)] += -14;
                if (false) break;
                Test0944.instanceCount = -63434;
                Test0944.instanceCount >>= i3;
                i2 += i2;
                i ^= i;
                i2 >>= i2;
            }
            Test0944.lArrFld1[(int) (l)] -= i2;
        }

        FuzzerUtils.out.println("l i i1 = " + l + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("d2 f3 f4 = " + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f3) + "," +
                Float.floatToIntBits(f4));

        FuzzerUtils.out.println("Test0944.instanceCount sFld lArrFld = " + Test0944.instanceCount + "," + sFld + "," +
                FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test0944.lArrFld1 Test0944.byArrFld Test0944.iArrFld = " + FuzzerUtils.checkSum(Test0944.lArrFld1) +
                "," + FuzzerUtils.checkSum(Test0944.byArrFld) + "," + FuzzerUtils.checkSum(Test0944.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
