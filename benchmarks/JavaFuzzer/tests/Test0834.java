// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0834 {

    public static final int N = 400;

    public static long instanceCount = 23562L;
    public static short sFld = 11234;
    public static volatile int iFld = -135;
    public static boolean bFld = false;
    public static byte byFld = -6;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public long[] lArrFld = new long[N];

    public static int iMeth(int i9, int i10) {

        int i11 = 42;
        int i12 = -155;
        int i13 = -4;
        int i14 = 6;
        int i15 = -4;
        int i16 = 95;
        int i17 = 27288;
        int[] iArr = new int[N];
        float f1 = -64.370F;
        double d1 = 107.32277;
        byte by1 = -102;

        FuzzerUtils.init(iArr, 11150);

        for (i11 = 6; i11 < 266; ++i11) {
            Test0834.sFld <<= (short) i9;
        }
        i12 = i11;
        Test0834.instanceCount += i12;
        Test0834.instanceCount += Test0834.sFld;
        Test0834.sFld <<= (short) -38531L;
        iArr[(i10 >>> 1) % N] *= (int) f1;
        f1 -= Test0834.instanceCount;
        Test0834.instanceCount *= i10;
        for (i13 = 4; i13 < 226; i13++) {
            for (i15 = 1; i15 < 7; i15++) {
                for (d1 = 2; d1 > 1; --d1) {
                    Test0834.instanceCount += (long) (((d1 * i13) + i10) - by1);
                }
                i16 = i16;
                i9 += (int) -9L;
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 +
                Double.doubleToLongBits(d1) + i17 + by1 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i7, int i8, long l2) {

        int i18 = -4, i19 = 5, i20 = -9;
        float f2 = 67.379F;
        float[] fArr = new float[N];
        double d2 = -99.47281;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -38299L);
        FuzzerUtils.init(fArr, 2.85F);

        i8 = iMeth(i8, i8);
        for (i18 = 3; i18 < 354; i18++) {
            i8 += (-62235 + (i18 * i18));
            i8 += i18;
            switch (((i7 >>> 1) % 9) + 108) {
                case 108:
                    lArr[i18 - 1] += (long) -19.501F;
                    i20 = 1;
                    while (++i20 < 5) {
                        l2 += (((i20 * f2) + i7) - i8);
                        i8 -= (int) d2;
                        Test0834.instanceCount += (long) f2;
                        i7 <<= i7;
                        i8 += (int) l2;
                        if (Test0834.bFld) {
                            f2 -= l2;
                        } else if (Test0834.bFld) {
                            f2 += Test0834.iFld;
                        } else {
                            i19 *= Test0834.iFld;
                        }
                    }
                    break;
                case 109:
                    i8 += i18;
                    break;
                case 110:
                    f2 -= l2;
                    break;
                case 111:
                    if (Test0834.bFld) break;
                    break;
                case 112:
                    Test0834.iFld += (((i18 * l2) + l2) - i7);
                    break;
                case 113:
                    Test0834.iFld = i7;
                    break;
                case 114:
                    i7 |= i7;
                    break;
                case 115:
                    i19 += i18;
                    break;
                case 116:
                    fArr = fArr;
                    break;
            }
        }
        vMeth1_check_sum += i7 + i8 + l2 + i18 + i19 + i20 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) +
                FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(long l1, int i3, byte by) {

        short s = -18108;
        int i4 = -23554;
        int i5 = -60124;
        int i6 = -96;
        int i21 = 169;
        int[] iArr1 = new int[N];
        float f = -2.825F, f3 = 55.282F;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, -2116993321L);
        FuzzerUtils.init(iArr1, 5);

        s >>= (short) (((10L + (--Test0834.instanceCount)) + i4) / (((long) (1357L - (f + Test0834.instanceCount))) | 1));
        for (i5 = 8; i5 < 139; i5++) {
            vMeth1(Test0834.iFld, i5, l1);
            l1 += (i5 + i4);
            if (Test0834.bFld) break;
            Test0834.sFld += (short) i5;
            f += (129 + (i5 * i5));
            for (f3 = 1; f3 < 12; ++f3) {
                lArr1[i5] <<= 24419;
                by = (byte) 37651;
                switch (((i6 >>> 1) % 2) + 13) {
                    case 13:
                        if (true) {
                            s += (short) Test0834.iFld;
                            i21 += i21;
                            iArr1[(int) (f3 - 1)] &= i6;
                        }
                        break;
                    case 14:
                        f = i4;
                }
            }
        }
        vMeth_check_sum += l1 + i3 + by + s + i4 + Float.floatToIntBits(f) + i5 + i6 + Float.floatToIntBits(f3) + i21 +
                FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0834 _instance = new Test0834();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 28342;
        int i1 = 28888;
        int i2 = 63388;
        int i22 = 95;
        int i23 = 49;
        int i24 = 6448;
        int i25 = 0;
        int i26 = -2;
        int i27 = -112;
        int i28 = 14159;
        int i29 = 60584;
        int i30 = 5667;
        int i31 = -10;
        int i32 = -202;
        int[] iArr2 = new int[N];
        double d = 12.22119;
        float f4 = 6.828F;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -24518);
        FuzzerUtils.init(iArr2, 2);

        for (i = 4; i < 144; i++) {
            long l = 1704428295L;
            l <<= (-i);
            for (d = 3; d < 179; d++) {
                vMeth(Test0834.instanceCount, i1, Test0834.byFld);
            }
            sArr[i] = (short) i22;
            Test0834.iFld = i22;
            i2 += (61049 + (i * i));
            Test0834.byFld = (byte) Test0834.iFld;
            for (i23 = 2; i23 < 179; i23++) {
                if (Test0834.bFld) {
                    Test0834.instanceCount += (i23 * i22);
                    if (Test0834.bFld) {
                        l += i22;
                    }
                    Test0834.iFld += 54806;
                } else {
                    for (i25 = 2; i25 > 1; --i25) {
                        lArrFld[i - 1] &= i27;
                    }
                    for (i28 = i23; i28 < 2; ++i28) {
                        Test0834.instanceCount += i28;
                    }
                    i29 <<= (int) -5554678209567639845L;
                    i2 = i25;
                }
                i30 = 1;
                while (++i30 < 2) {
                    i2 = i24;
                    Test0834.sFld = (short) -83.93000;
                    iArr2 = FuzzerUtils.int1array(N, (int) 14);
                    l += (((i30 * f4) + i30) - i29);
                    Test0834.instanceCount += (-13 + (i30 * i30));
                    i26 += (((i30 * i2) + i25) - i28);
                }
                for (i31 = 1; i31 < 2; i31++) {
                    iArr2[i23] <<= i23;
                    i1 += (((i31 * i1) + i32) - i1);
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 i22 i23 = " + i2 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 f4 i31 = " + i30 + "," + Float.floatToIntBits(f4) + "," + i31);
        FuzzerUtils.out.println("i32 sArr iArr2 = " + i32 + "," + FuzzerUtils.checkSum(sArr) + "," +
                FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0834.instanceCount Test0834.sFld Test0834.iFld = " + Test0834.instanceCount + "," + Test0834.sFld +
                "," + Test0834.iFld);
        FuzzerUtils.out.println("Test0834.bFld Test0834.byFld lArrFld = " + (Test0834.bFld ? 1 : 0) + "," + Test0834.byFld + "," +
                FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
