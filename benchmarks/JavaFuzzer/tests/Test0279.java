// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0279 {

    public static final int N = 400;

    public static long instanceCount = 218L;
    public static double dFld = 1.4436;
    public static float fFld = 2.348F;
    public static byte byFld = 40;
    public static short sFld = 4905;
    public static short[] sArrFld = new short[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0279.sArrFld, (short) 8763);
    }

    public static long lMeth(long l, float f1) {

        long l1 = -10L;
        int i8 = 12;
        int i9 = 1;
        int i10 = 9;
        int[] iArr = new int[N];
        double d = -16.8841;

        FuzzerUtils.init(iArr, 34839);

        for (int i7 : iArr) {
            short s = -27138;
            if (false) {
                s -= (short) i7;
                Test0279.instanceCount = i7;
            }
            l -= i7;
            iArr[(i7 >>> 1) % N] >>= (int) l;
            for (l1 = 1; l1 < 4; ++l1) {
                i7 += i8;
                f1 *= (float) d;
                for (i9 = (int) (l1); 2 > i9; i9++) {
                    l *= i10;
                    i10 = (int) l;
                    i8 -= i7;
                    i10 += (i9 * l1);
                    i7 = (int) Test0279.instanceCount;
                }
            }
        }
        long meth_res = l + Float.floatToIntBits(f1) + l1 + i8 + Double.doubleToLongBits(d) + i9 + i10 +
                FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth1() {

        int i2 = -7, i3 = 42839, i4 = 2, i5 = 247, i6 = -191, i11 = -3;
        float f2 = 82.225F;
        boolean b = true;

        for (i2 = 10; 347 > i2; i2++) {
            for (i4 = 1; i4 < 5; ++i4) {
                i6 = 1;
                while (++i6 < 2) {
                    i5 = (int) Math.max(lMeth(Test0279.instanceCount, f2), Test0279.instanceCount);
                    i5 += (((i6 * i4) + i2) - i4);
                    i5 += i6;
                    b = false;
                    Test0279.instanceCount += i5;
                    Test0279.instanceCount = i3;
                    i3 &= (int) Test0279.instanceCount;
                }
                i3 -= (int) Test0279.dFld;
                i11 = 1;
                while (++i11 < 2) {
                    i5 <<= i5;
                    i5 -= (int) f2;
                    Test0279.instanceCount -= 0;
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f2) + (b ? 1 : 0) + i11;
    }

    public static void vMeth(float f) {

        int i = -63712, i1 = -43644, i12 = 6, i13 = -48452, i14 = 56;
        boolean b1 = true;
        byte by = 97;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -70L);

        for (i = 8; i < 160; i++) {
            vMeth1();
            i12 = 10;
            do {
                i1 += i12;
                i1 += (int) Test0279.instanceCount;
                Test0279.instanceCount -= i1;
                Test0279.instanceCount += (-13 + (i12 * i12));
            } while (--i12 > 0);
            lArr[i] += i1;
            switch (((i % 3) * 5) + 59) {
                case 61:
                    for (i13 = 1; i13 < 10; ++i13) {
                        if (b1) {
                            Test0279.sArrFld[i - 1] += (short) -140;
                            vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i12 + i13 + i14 + (b1 ? 1 : 0) + by +
                                    FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        i1 += (-51760 + (i13 * i13));
                        lArr = lArr;
                        i14 /= (int) (i12 | 1);
                    }
                case 73:
                    i1 *= (int) f;
                    break;
                case 66:
                    by += (byte) i;
                    break;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i12 + i13 + i14 + (b1 ? 1 : 0) + by +
                FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0279 _instance = new Test0279();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i15 = -31;
        int i16 = 52026;
        int i17 = 40630;
        int i18 = -4;
        int i19 = -2;
        int i20 = 18959;
        int i21 = 250;
        int[] iArr1 = new int[N];
        long l2 = -168L, l3 = 26366L;
        boolean b2 = true;
        double d1 = -16.111413;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr1, 50476);
        FuzzerUtils.init(dArr, 107.127318);

        vMeth(Test0279.fFld);
        i15 += Test0279.byFld;
        for (l2 = 6; l2 < 232; l2++) {
            Test0279.instanceCount += l2;
            switch ((int) (((l2 % 10) * 5) + 16)) {
                case 51:
                    Test0279.fFld += l2;
                    Test0279.instanceCount -= -116;
                    break;
                case 33:
                    l3 = 1;
                    while (++l3 < 111) {
                        i16 = i15;
                        iArr1 = iArr1;
                        if (b2) continue;
                        i16 += (int) (((l3 * i16) + Test0279.instanceCount) - i16);
                        Test0279.instanceCount >>= Test0279.instanceCount;
                        for (i17 = (int) (l2); i17 < 1; i17++) {
                            i15 = i17;
                            Test0279.instanceCount = Test0279.byFld;
                            i18 = -69;
                            b2 = false;
                            i15 = i16;
                        }
                        switch ((int) (((l2 % 1) * 5) + 102)) {
                            case 104:
                                Test0279.fFld += (l3 * i18);
                                for (d1 = l3; d1 < 1; ++d1) {
                                    i19 *= (int) Test0279.instanceCount;
                                    i19 *= i17;
                                }
                                for (i20 = 1; i20 > 1; --i20) {
                                    i19 = 43;
                                    Test0279.instanceCount = Test0279.sFld;
                                    Test0279.fFld -= Test0279.fFld;
                                    i15 |= -64755;
                                    i19 -= i17;
                                }
                                break;
                        }
                    }
                    break;
                case 32:
                    i18 += (int) l2;
                    break;
                case 55:
                    if (b2) continue;
                    break;
                case 53:
                    i16 = (int) l2;
                    break;
                case 42:
                    iArr1 = iArr1;
                    break;
                case 57:
                    i19 += (int) (l2 * Test0279.instanceCount);
                    break;
                case 54:
                    i16 = i18;
                    break;
                case 45:
                    Test0279.sArrFld[(int) (l2 - 1)] = (short) l3;
                    break;
                case 27:
                    if (b2) break;
                    break;
                default:
                    Test0279.fFld -= (float) d1;
            }
        }

        FuzzerUtils.out.println("i15 l2 i16 = " + i15 + "," + l2 + "," + i16);
        FuzzerUtils.out.println("l3 b2 i17 = " + l3 + "," + (b2 ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 d1 i19 = " + i18 + "," + Double.doubleToLongBits(d1) + "," + i19);
        FuzzerUtils.out.println("i20 i21 iArr1 = " + i20 + "," + i21 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0279.instanceCount Test0279.dFld Test0279.fFld = " + Test0279.instanceCount + "," +
                Double.doubleToLongBits(Test0279.dFld) + "," + Float.floatToIntBits(Test0279.fFld));
        FuzzerUtils.out.println("Test0279.byFld Test0279.sFld Test0279.sArrFld = " + Test0279.byFld + "," + Test0279.sFld + "," +
                FuzzerUtils.checkSum(Test0279.sArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
