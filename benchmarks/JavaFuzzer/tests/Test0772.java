// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0772 {

    public static final int N = 400;

    public static long instanceCount = -4L;
    public static volatile short sFld = 1321;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0772.iArrFld, 160);
    }

    public static boolean bMeth(int i1) {


        i1 = (-Test0772.iArrFld[(i1 >>> 1) % N]);
        long meth_res = i1;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(double d, int i) {

        boolean b = true;

        b = bMeth((int) ((Test0772.iArrFld[(i >>> 1) % N]--) - Long.reverseBytes(Test0772.instanceCount)));
        vMeth_check_sum += Double.doubleToLongBits(d) + i + (b ? 1 : 0);
    }

    public static int iMeth(int i5) {

        double d2 = 39.39318;
        int i6 = 1, i7 = 6, i8 = 7, i9 = 7, i10 = 13;
        float f = 2.327F;

        vMeth(d2, 7);
        for (i6 = 2; i6 < 308; ++i6) {
            switch (((i6 % 6) * 5) + 66) {
                case 72:
                case 83:
                    for (i8 = i6; i8 < 5; ++i8) {
                        switch ((i6 % 1) + 3) {
                            case 3:
                                Test0772.instanceCount = i5;
                                Test0772.iArrFld[i6 + 1] += (int) -3450270674L;
                                i5 = i8;
                                i10 = 1;
                                while (++i10 < 1) {
                                    Test0772.instanceCount = (long) 1.630F;
                                    f = Test0772.instanceCount;
                                    i7 <<= 168;
                                    i9 = i6;
                                    d2 -= d2;
                                }
                                break;
                            default:
                                Test0772.instanceCount = Test0772.instanceCount;
                        }
                    }
                    break;
                case 88:
                    if (i10 != 0) {
                    }
                case 93:
                    f *= Test0772.instanceCount;
                    break;
                case 91:
                    i5 += (i6 | Test0772.instanceCount);
                    break;
                case 92:
                    i9 = (int) Test0772.instanceCount;
                    break;
            }
        }
        long meth_res = i5 + Double.doubleToLongBits(d2) + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0772 _instance = new Test0772();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d1 = 52.110146;
        int i2 = -36285, i3 = 59, i4 = 31728, i11 = -32238, i12 = 166, i13 = 5076, i14 = -57228, i15 = 6, i16 = 46780;
        byte by = 70;
        float f1 = 0.608F;
        float[] fArr = new float[N];
        boolean b1 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -2174816909L);
        FuzzerUtils.init(fArr, 0.476F);

        vMeth(++d1, 191);
        d1 = i2;
        for (i3 = 5; i3 < 238; ++i3) {
            switch ((i3 % 7) + 33) {
                case 33:
                    vMeth(d1++, iMeth(i4) - -123);
                    i4 += i3;
                    lArr[i3] += i3;
                    for (i11 = 6; i11 < 108; i11++) {
                        switch (((i11 % 5) * 5) + 56) {
                            case 65:
                                i2 -= by;
                                break;
                            case 59:
                                i4 = -1;
                                i4 = (int) Test0772.instanceCount;
                                i12 <<= i4;
                                break;
                            case 72:
                                f1 -= i2;
                                i4 >>>= (int) Test0772.instanceCount;
                                for (i13 = 2; 1 < i13; i13 -= 3) {
                                    i4 *= (int) 432529649108698683L;
                                    if (b1) break;
                                    f1 -= -13;
                                    i12 = i11;
                                    Test0772.iArrFld[i13 + 1] -= (int) d1;
                                    i14 += (((i13 * i12) + i3) - i3);
                                    f1 += -7;
                                }
                                Test0772.iArrFld[i11] = (int) -78.47F;
                                break;
                            case 58:
                                for (i15 = i11; 2 > i15; ++i15) {
                                    Test0772.sFld += (short) Test0772.instanceCount;
                                    i16 -= i11;
                                    i16 ^= by;
                                }
                                Test0772.instanceCount = 220;
                            case 63:
                                i4 += (i11 + i14);
                            default:
                                f1 += i11;
                        }
                    }
                    break;
                case 34:
                    i14 = i14;
                    break;
                case 35:
                    i16 |= (int) Test0772.instanceCount;
                    break;
                case 36:
                    i12 = (int) 92L;
                case 37:
                    fArr[i3] *= 12496;
                    break;
                case 38:
                    i16 *= (int) 3758123997L;
                    break;
                case 39:
                    i12 = (int) Test0772.instanceCount;
                    break;
                default:
                    Test0772.iArrFld[i3 + 1] += (int) d1;
            }
        }

        FuzzerUtils.out.println("d1 i2 i3 = " + Double.doubleToLongBits(d1) + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i4 i11 i12 = " + i4 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("by f1 i13 = " + by + "," + Float.floatToIntBits(f1) + "," + i13);
        FuzzerUtils.out.println("i14 b1 i15 = " + i14 + "," + (b1 ? 1 : 0) + "," + i15);
        FuzzerUtils.out.println("i16 lArr fArr = " + i16 + "," + FuzzerUtils.checkSum(lArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0772.instanceCount Test0772.sFld Test0772.iArrFld = " + Test0772.instanceCount + "," + Test0772.sFld +
                "," + FuzzerUtils.checkSum(Test0772.iArrFld));

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest iMeth
//DEBUG  bMeth ->  bMeth vMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
