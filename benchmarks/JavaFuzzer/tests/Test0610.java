// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0610 {

    public static final int N = 400;

    public static long instanceCount = -26097597L;
    public static short sFld = -24331;
    public static int iFld1 = -252;
    public static float fFld = -2.468F;
    public static volatile int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0610.iArrFld, -4);
    }

    public double dFld = 1.38437;

    public static void vMeth1(byte by) {

        int i3 = 8, i4 = 16528, i5 = 32445, i6 = -36760, i7 = -13;
        float f2 = 122.810F;
        long[] lArr = new long[N];
        short[] sArr = new short[N];

        FuzzerUtils.init(lArr, -63239L);
        FuzzerUtils.init(sArr, (short) 15321);

        for (i3 = 1; 152 > i3; ++i3) {
            Test0610.iFld1 = i4;
            Test0610.instanceCount = Test0610.iFld1;
            i5 = 1;
            do {
                f2 = -14597;
            } while (++i5 < 10);
        }
        try {
            for (i6 = 9; i6 < 146; ++i6) {
                i4 += i5;
                lArr[i6 - 1] = i4;
                f2 += i6;
                Test0610.iArrFld[i6] = by;
                Test0610.instanceCount = (long) f2;
                Test0610.iArrFld[i6 - 1] = (int) Test0610.instanceCount;
                i4 >>= i6;
                sArr[i6] += (short) Test0610.iFld1;
            }
        } catch (UserDefinedExceptionTest0610 exc1) {
            i7 *= -13;
        }
        vMeth1_check_sum += by + i3 + i4 + i5 + Float.floatToIntBits(f2) + i6 + i7 + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(sArr);
    }

    public static long lMeth(int i2, long l, boolean b) {

        byte by1 = -91;
        int i8 = -28717, i9 = -8, i10 = 34, i11 = 205;
        float f3 = 18.828F, f4 = 11.861F;

        Test0610.iFld1 *= Math.max(i2, --Test0610.iFld1);
        vMeth1(by1);
        for (i8 = 5; 301 > i8; ++i8) {
            f3 = l;
            Test0610.iArrFld = Test0610.iArrFld;
            i2 = (int) l;
            Test0610.instanceCount = l;
            f4 = 1;
            while (++f4 < 6) {
                Test0610.iFld1 += (int) (f4 * Test0610.instanceCount);
                i9 -= i2;
                for (i10 = 1; 1 > i10; i10++) {
                    l <<= -111;
                    l = 13;
                    i9 += i10;
                    try {
                        Test0610.iFld1 = (-240 / i9);
                        Test0610.iArrFld[(int) (f4 - 1)] = (i10 % 30579);
                        Test0610.iFld1 = (-1829199739 % i8);
                    } catch (ArithmeticException a_e) {
                    }
                }
            }
        }
        long meth_res = i2 + l + (b ? 1 : 0) + by1 + i8 + i9 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) +
                i10 + i11;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i1, float f) {

        int i12 = 11839, i13 = 9, i14 = 1, i15 = 37326;
        double d = -36.60497;
        float[] fArr = new float[N];
        long[][] lArr1 = new long[N][N];

        FuzzerUtils.init(fArr, 5.683F);
        FuzzerUtils.init(lArr1, 8516717135774586439L);

        Test0610.iArrFld[(i1 >>> 1) % N] = i1;
        for (float f1 : fArr) {
            Test0610.sFld += (short) lMeth(32, -1442312918L, true);
            lArr1[(-1 >>> 1) % N][(i1 >>> 1) % N] <<= Test0610.iFld1;
            Test0610.iFld1 ^= i1;
            for (i12 = 1; i12 < 4; i12++) {
                i1 ^= Test0610.iFld1;
                for (i14 = 1; 2 > i14; i14 += 2) {
                    i13 = i13;
                    Test0610.iFld1 = (int) Test0610.instanceCount;
                    Test0610.instanceCount = i13;
                    i13 *= i14;
                    i15 += (i14 * i12);
                    i15 <<= Test0610.iFld1;
                    d = 129;
                }
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static void main(String[] strArr2) {

        try {
            Test0610 _instance = new Test0610();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr2);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr3) {

        short s = 4180;
        int i = -174, i16 = -30676, i17 = 19686, i18 = -48976, i19 = -1, i20 = 157, i21 = 10, i22 = 28842, i23 = 86;
        byte by2 = 69;
        float f5 = 2.230F;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 0.121392);

        s >>= (short) ((i <<= Test0610.iArrFld[(i >>> 1) % N]) - ((i + i) * (-57074 - (Test0610.instanceCount--))));
        i += (int) Float.intBitsToFloat((int) (i | (Test0610.instanceCount * i)));
        vMeth(Test0610.iFld1, Test0610.fFld);
        i16 = 1;
        do {
            Test0610.iFld1 += i16;
            i >>= by2;
            i = -50068;
            for (i17 = 10; i17 < 298; ++i17) {
                double d1 = 2.129137;
                by2 -= (byte) i18;
                i19 = 1;
                while (++i19 < 2) {
                    i18 += (i19 * i19);
                }
                d1 -= -48310L;
            }
            for (i20 = i16; i20 < 298; i20++) {
                s = (short) Test0610.fFld;
                for (i22 = 1; i22 > 1; i22--) {
                    switch ((((i20 >>> 1) % 6) * 5) + 6) {
                        case 14:
                            i += i20;
                            i21 -= Test0610.iFld1;
                            i21 += (((i22 * i17) + i23) - i16);
                            f5 += Test0610.instanceCount;
                        case 21:
                            Test0610.iArrFld[i16 + 1] *= (int) Test0610.fFld;
                            break;
                        case 15:
                            Test0610.fFld += Test0610.instanceCount;
                            break;
                        case 22:
                            Test0610.fFld += (55107 + (i22 * i22));
                            s += (short) (((i22 * Test0610.instanceCount) + i19) - i23);
                            break;
                        case 17:
                            switch ((i20 % 9) + 52) {
                                case 52:
                                    Test0610.instanceCount -= (long) 1.89F;
                                    by2 += (byte) (i22 ^ i23);
                                    i += (int) dFld;
                                    break;
                                case 53:
                                    Test0610.instanceCount -= Test0610.instanceCount;
                                    break;
                                case 54:
                                    dFld *= i;
                                    break;
                                case 55:
                                    i18 += i22;
                                case 56:
                                    dArr[i20] = -39;
                                    break;
                                case 57:
                                    i23 = i;
                                    break;
                                case 58:
                                    Test0610.iFld1 = i22;
                                    break;
                                case 59:
                                    by2 += (byte) (i22 * i22);
                                case 60:
                                    i18 = i18;
                                    break;
                            }
                            break;
                        case 32:
                            i23 += (i22 * Test0610.instanceCount);
                            break;
                        default:
                            i21 = i;
                    }
                }
            }
        } while ((i16 += 3) < 252);

        FuzzerUtils.out.println("s i i16 = " + s + "," + i + "," + i16);
        FuzzerUtils.out.println("by2 i17 i18 = " + by2 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 f5 = " + i22 + "," + i23 + "," + Float.floatToIntBits(f5));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0610.instanceCount Test0610.sFld Test0610.iFld1 = " + Test0610.instanceCount + "," + Test0610.sFld +
                "," + Test0610.iFld1);
        FuzzerUtils.out.println("Test0610.fFld dFld Test0610.iArrFld = " + Float.floatToIntBits(Test0610.fFld) + "," +
                Double.doubleToLongBits(dFld) + "," + FuzzerUtils.checkSum(Test0610.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}

///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest0610 extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
