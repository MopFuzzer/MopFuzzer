// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0622 {

    public static final int N = 400;

    public static long instanceCount = 4L;
    public static float fFld = -23.210F;
    public static int iFld = -55860;
    public static short sFld = -14237;
    public static short[][] sArrFld = new short[N][N];
    public static volatile int[] iArrFld = new int[N];
    public static float[][] fArrFld = new float[N][N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0622.sArrFld, (short) 32322);
        FuzzerUtils.init(Test0622.iArrFld, 9);
        FuzzerUtils.init(Test0622.fArrFld, 2.549F);
    }

    public int iFld1 = -1545;
    public boolean bFld = false;

    public static void vMeth1(int i6, int i7) {

        int i8 = -35992;
        int i9 = 54469;
        int i10 = -14990;
        int i11 = 7;
        int i12 = 234;
        int i13 = 15;
        int i14 = -6;
        int i15 = -3;
        int[] iArr = new int[N];
        byte by = -93;
        double d = -94.79011;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 47);
        FuzzerUtils.init(lArr, 5L);

        for (i8 = 2; i8 < 223; ++i8) {
            i6 += (((i8 * i9) + i6) - Test0622.fFld);
            for (i10 = 1; i10 < 7; i10 += 2) {
                by *= (byte) i8;
                iArr[i10] = Test0622.iFld;
                for (i12 = 3; i12 > 1; i12 -= 3) {
                    i9 <<= i6;
                    iArr[i12] = (int) Test0622.instanceCount;
                    i7 -= i12;
                    i6 -= (int) d;
                    d = -2.540F;
                }
            }
            for (i14 = 1; 7 > i14; ++i14) {
                i7 = (int) Test0622.instanceCount;
                lArr[i8] <<= i11;
            }
            try {
                i11 = (1632165099 / i14);
                iArr[i8] = (i6 / -171);
                i6 = (-209 % iArr[i8]);
            } catch (ArithmeticException a_e) {
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + by + i12 + i13 + Double.doubleToLongBits(d) + i14 + i15 +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f, int i3) {

        int i4 = 5;
        int i5 = 55236;
        int i16 = -2;
        int[] iArr1 = new int[N];
        boolean b = true;
        byte by1 = -74;
        long l = 7944609699365530572L;
        float f1 = 0.430F;

        FuzzerUtils.init(iArr1, 36188);

        for (i4 = 10; 396 > i4; i4++) {
            b = b;
            vMeth1(i3, 4);
            i3 += 102;
            switch (((i4 % 7) * 5) + 85) {
                case 108:
                    Test0622.iFld -= by1;
                    Test0622.iFld = 74;
                case 105:
                    l += i4;
                    i3 = i4;
                case 96:
                    if (false) {
                        Test0622.instanceCount += (1795391946L + (i4 * i4));
                        for (f1 = 4; f1 > 1; f1--) {
                            i3 += i4;
                            Test0622.fFld = 0;
                            Test0622.sArrFld[(int) (f1)][i4] <<= (short) 26902;
                        }
                    } else {
                        i3 %= (int) (i5 | 1);
                    }
                    break;
                case 99:
                    iArr1 = FuzzerUtils.int1array(N, (int) 2);
                case 89:
                    i3 += (i4 * Test0622.fFld);
                    break;
                case 100:
                    i5 >>= (int) Test0622.instanceCount;
                case 113:
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + (b ? 1 : 0) + by1 + l + Float.floatToIntBits(f1) +
                i16 + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i, int i1) {

        int i2 = 28251;
        int i17 = -12;
        int i18 = -1;
        int i19 = -12;
        int i20 = 32791;
        int i21 = 14336;
        int i22 = -1;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, -15972);

        i2 = 1;
        do {
            vMeth(-63.591F, i);
            Test0622.instanceCount -= i2;
        } while (++i2 < 299);
        for (i17 = 8; i17 < 237; i17++) {
            Test0622.sFld += (short) i17;
            i += (int) -2.115205;
        }
        i18 = (int) Test0622.instanceCount;
        i19 = 1;
        while (++i19 < 166) {
            iArr2[i19 - 1] = i17;
            for (i20 = 1; i20 < 10; i20++) {
                i1 = i;
                i22 = 1;
                do {
                    Test0622.instanceCount *= i1;
                } while (++i22 < 2);
                i -= (int) Test0622.instanceCount;
                i1 = -6;
            }
        }
        long meth_res = i + i1 + i2 + i17 + i18 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0622 _instance = new Test0622();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i23 = -42646, i24 = -4, i25 = 232, i26 = 40125, i27 = 55054, i28 = 34205, i29 = 8, i30 = -61149, i31 = 5, i32 = 11883, i33 = -4,
                i34 = -146;
        double d1 = 0.95400;
        byte by2 = 8;

        lMeth(Test0622.iFld, -8);
        Test0622.iFld >>= Test0622.iFld;
        i23 = 1;
        while ((i23 += 2) < 398) {
            Test0622.iArrFld[i23 + 1] = -1;
            i24 = 1;
            while (++i24 < 126) {
                i25 = 1;
                while (++i25 < 1) {
                    Test0622.instanceCount += (((i25 * Test0622.instanceCount) + i23) - Test0622.fFld);
                    Test0622.iArrFld[i24 + 1] -= Test0622.iFld;
                    iFld1 += i24;
                    Test0622.instanceCount *= i25;
                    bFld = bFld;
                    Test0622.fFld = i23;
                }
                for (i26 = 1; i26 > 1; --i26) {
                    if (false) continue;
                    Test0622.instanceCount += i23;
                    Test0622.instanceCount = (long) d1;
                }
                for (i28 = 1; i28 < 1; ++i28) {
                    iFld1 = iFld1;
                }
            }
            Test0622.iArrFld = Test0622.iArrFld;
            i30 = 1;
            while (++i30 < 126) {
                Test0622.iArrFld[i30 - 1] = i27;
                for (i31 = 1; i31 < 1; ++i31) {
                    by2 <<= (byte) Test0622.iFld;
                    Test0622.fArrFld = Test0622.fArrFld;
                }
                if (bFld) break;
                Test0622.iFld = i26;
                i29 = iFld1;
                for (i33 = 1; i33 < 1; i33++) {
                    Test0622.instanceCount = i27;
                    Test0622.iFld &= i34;
                }
            }
        }

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 d1 = " + i26 + "," + i27 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 by2 = " + i31 + "," + i32 + "," + by2);
        FuzzerUtils.out.println("i33 i34 = " + i33 + "," + i34);

        FuzzerUtils.out.println("Test0622.instanceCount Test0622.fFld Test0622.iFld = " + Test0622.instanceCount + "," +
                Float.floatToIntBits(Test0622.fFld) + "," + Test0622.iFld);
        FuzzerUtils.out.println("Test0622.sFld iFld1 bFld = " + Test0622.sFld + "," + iFld1 + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0622.sArrFld Test0622.iArrFld Test0622.fArrFld = " + FuzzerUtils.checkSum(Test0622.sArrFld) + ","
                + FuzzerUtils.checkSum(Test0622.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0622.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
