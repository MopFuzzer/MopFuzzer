// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test0436 {

    public static final int N = 400;

    public static long instanceCount = -3L;
    public static float fFld = -2.433F;
    public static double[][] dArrFld = new double[N][N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0436.dArrFld, -33.119388);
    }

    public byte byFld = -21;
    public boolean bFld = false;
    public long[] lArrFld = new long[N];
    public byte[] byArrFld = new byte[N];

    public static int iMeth(int i5, int i6, boolean b) {


        Test0436.instanceCount += (long) 123.551F;
        Test0436.instanceCount = i6;
        long meth_res = i5 + i6 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth(int i2) {

        int i3 = -3, i4 = 8, i7 = -36516, i8 = 137;
        boolean b1 = true;
        float f = -1.694F;
        double d1 = -82.128622;
        double[][] dArr = new double[N][N];

        FuzzerUtils.init(dArr, 55.13777);

        i3 = 384;
        do {
            i4 = 4;
            while (--i4 > 0) {
                if (Test0436.instanceCount > (iMeth(i4, i3, b1) - -142)) continue;
                dArr[i3 + 1][i3 - 1] += -16791;
                for (i7 = i4; i7 < 1; i7++) {
                    Test0436.instanceCount += (i7 | i3);
                    if (b1) {
                        i2 *= i8;
                        f = (float) d1;
                        i8 -= i7;
                        i2 += (int) 2605L;
                    }
                }
                f = -111.478F;
                i2 = i4;
            }
        } while (--i3 > 0);
        Test0436.instanceCount = Test0436.instanceCount;
        dArr[(i8 >>> 1) % N][(i3 >>> 1) % N] = i3;
        long meth_res = i2 + i3 + i4 + (b1 ? 1 : 0) + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i, int i1) {

        double d = -2.130095;
        int i9 = 243;
        int i10 = 12;
        int i11 = -116;
        int i12 = -201;
        int i13 = -41061;
        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, 168);

        d -= (-((i++) * lMeth(i1)));
        for (i9 = 12; i9 < 250; i9++) {
            for (i11 = 1; 7 > i11; ++i11) {
                i12 <<= i;
                switch (((i9 >>> 1) % 1) + 13) {
                    case 13:
                        iArr = iArr;
                        iArr[i9 - 1] >>>= i10;
                        d -= i10;
                        break;
                    default:
                        i1 = (int) 774143538L;
                        i10 += (int) 11L;
                        i13 = 1;
                        do {
                            d -= Test0436.instanceCount;
                            d = i11;
                            Test0436.instanceCount = i12;
                        } while (++i13 < 2);
                }
                Test0436.fFld += ((long) i11 | (long) i9);
            }
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + i13 +
                FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0436 _instance = new Test0436();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i14 = -50322;
        int i15 = 60;
        int i17 = -7;
        int i18 = -49867;
        int i19 = 6;
        int i20 = 53421;
        int i21 = -6;
        int i22 = 34862;
        int[] iArr1 = new int[N];
        int[] iArr2 = new int[N];
        double d2 = -85.30205;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr1, 8);
        FuzzerUtils.init(iArr2, -1);
        FuzzerUtils.init(bArr, true);

        vMeth(i14, -31415);
        Test0436.instanceCount = i14;
        Test0436.fFld += i14;
        iArr1[(i14 >>> 1) % N] = byFld;
        i15 = 1;
        do {
            i14 = (int) Test0436.instanceCount;
            Test0436.dArrFld[i15][i15 + 1] = Test0436.instanceCount;
            i14 += (int) Test0436.instanceCount;
            i14 += (int) (0.793F + (i15 * i15));
            iArr1[i15] = i15;
        } while ((i15 += 2) < 200);
        Test0436.fFld = i14;
        for (int i16 : iArr1) {
            for (i17 = 3; i17 < 63; ++i17) {
                i18 *= -61;
                Test0436.instanceCount += (((i17 * Test0436.instanceCount) + i15) - Test0436.instanceCount);
                i14 %= (int) -73.46445;
                i18 += i17;
                i18 += (i17 ^ i17);
            }
            lArrFld = lArrFld;
            for (i19 = 3; i19 < 63; ++i19) {
                i14 <<= i20;
                byArrFld[i19 + 1] = (byte) 51670;
                if (bFld) {
                    switch (((i17 >>> 1) % 1) + 20) {
                        case 20:
                            for (i21 = 1; i21 < 2; i21++) {
                                i14 = i15;
                                Test0436.instanceCount += (-24660 + (i21 * i21));
                                iArr1[i19] = i22;
                                iArr2[i21 + 1] ^= (int) Test0436.instanceCount;
                                d2 -= Test0436.instanceCount;
                            }
                            break;
                        default:
                            bFld = bFld;
                    }
                } else if (bFld) {
                    bArr[i19 - 1] = bFld;
                } else if (bFld) {
                    if (true) continue;
                } else {
                    i22 += (i19 * Test0436.instanceCount);
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 i17 = " + i14 + "," + i15 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 d2 = " + i21 + "," + i22 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("iArr1 iArr2 bArr = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(iArr2)
                + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0436.instanceCount Test0436.fFld byFld = " + Test0436.instanceCount + "," +
                Float.floatToIntBits(Test0436.fFld) + "," + byFld);
        FuzzerUtils.out.println("bFld Test0436.dArrFld lArrFld = " + (bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0436.dArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("byArrFld = " + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
