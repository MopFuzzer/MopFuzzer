// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0750 {

    public static final int N = 400;

    public static long instanceCount = 30627L;
    public static float fFld = 2.655F;
    public static short sFld = -1146;
    public static boolean bFld = false;
    public static int[][] iArrFld = new int[N][N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0750.iArrFld, 43768);
    }

    public static float fMeth(int i6) {

        int i7 = 12, i8 = 33493, i9 = 11, i10 = -36775;
        byte by1 = -110;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -13113);

        Test0750.sFld ^= (short) 47088;
        i6 = i6;
        for (i7 = 17; i7 < 272; ++i7) {
            i9 = 1;
            while (++i9 < 6) {
                double d1 = -75.100818;
                if (true) {
                    sArr[i7 + 1] -= (short) 2.123F;
                } else {
                    d1 += i8;
                    i6 += (i9 - Test0750.fFld);
                    i6 = (int) Test0750.instanceCount;
                }
                i10 = 1;
                do {
                    if (Test0750.bFld) {
                        i8 += (int) Test0750.instanceCount;
                        Test0750.fFld += by1;
                        Test0750.iArrFld[i7][i7 - 1] *= i6;
                    } else {
                        i6 = (int) Test0750.instanceCount;
                    }
                } while (++i10 < 1);
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + by1 + FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth(int i5) {


        i5 >>= (int) Test0750.instanceCount;
        Test0750.iArrFld[(i5 >>> 1) % N][(i5 >>> 1) % N] -= (int) ((i5 * (Test0750.instanceCount - -3706L)) *
                Test0750.instanceCount);
        Test0750.fFld *= ((Test0750.fFld /= -19970) * Long.reverseBytes(34774 * (-Test0750.iArrFld[(i5 >>> 1) % N][(i5 >>> 1) %
                N])));
        fMeth(i5);
        i5 = i5;
        vMeth_check_sum += i5;
    }

    public static int iMeth(int i1) {

        double d = 0.98526;
        byte by = 114;
        int i2 = -21015, i3 = -7958, i4 = -4, i11 = 211, i12 = 12, i13 = -5;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 7240178997369086214L);

        d += (by *= (byte) Test0750.instanceCount);
        for (i2 = 6; i2 < 128; ++i2) {
            i4 = 1;
            do {
                Test0750.instanceCount += (i4 * i1);
                vMeth(i3);
                lArr[i2] -= Test0750.instanceCount;
                i3 = (int) Test0750.instanceCount;
                i1 += i4;
            } while (++i4 < 13);
            i11 = 1;
            while (++i11 < 13) {
                switch (((i2 % 5) * 5) + 25) {
                    case 50:
                        switch (((i2 % 2) * 5) + 120) {
                            case 130:
                                for (i12 = 1; 1 > i12; ++i12) {
                                    i1 += (i12 * i12);
                                    i3 -= i3;
                                    Test0750.fFld += (i12 + Test0750.instanceCount);
                                }
                                break;
                            case 127:
                                i13 += (i11 * i11);
                                break;
                        }
                        break;
                    case 43:
                        i1 += (((i11 * i12) + i13) - i11);
                        break;
                    case 39:
                        i3 = i2;
                    case 28:
                        i13 -= i1;
                        break;
                    case 49:
                        i1 += (i11 * i11);
                    default:
                        i13 -= 18;
                }
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + by + i2 + i3 + i4 + i11 + i12 + i13 +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0750 _instance = new Test0750();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 900, i14 = 2, i15 = -2, i16 = -42741, i17 = -249, i18 = 42426;
        double d2 = -62.21998;
        byte by2 = 1;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 11L);

        i = 1;
        do {
            Test0750.fFld = (iMeth(-4) >> 6135714611661987541L);
            i14 += (((i * Test0750.instanceCount) + i14) - Test0750.fFld);
            for (d2 = 3; 196 > d2; d2++) {
                for (i16 = 1; i16 < 2; i16++) {
                    if (Test0750.bFld) {
                        Test0750.bFld = Test0750.bFld;
                        Test0750.fFld *= Test0750.instanceCount;
                        i15 = i16;
                        i14 -= (int) Test0750.instanceCount;
                    }
                    try {
                        i15 = (Test0750.iArrFld[i][(int) (d2)] / 1175072309);
                        i15 = (i16 / -2046967722);
                        i15 = (-62122 % i14);
                    } catch (ArithmeticException a_e) {
                    }
                    i15 += i;
                    Test0750.instanceCount *= Test0750.instanceCount;
                    i17 <<= i15;
                    Test0750.iArrFld[i16][i + 1] = (int) Test0750.instanceCount;
                    Test0750.iArrFld[(int) (d2 + 1)][i16 - 1] = (int) Test0750.instanceCount;
                    i14 *= 235;
                    Test0750.iArrFld[i16 - 1][(int) (d2)] >>>= i17;
                }
                Test0750.iArrFld[i][i] = i;
                Test0750.instanceCount >>>= Test0750.instanceCount;
                lArr1[(int) (d2)] *= -5;
                if (Test0750.bFld) break;
                try {
                    i17 = (58842 % i15);
                    i17 = (-830453731 / Test0750.iArrFld[i - 1][(int) (d2)]);
                    i14 = (43283 / i14);
                } catch (ArithmeticException a_e) {
                }
                if (Test0750.bFld) continue;
                by2 += (byte) (d2 * Test0750.sFld);
            }
            Test0750.instanceCount += (i * i);
            i17 += (((i * Test0750.sFld) + i) - Test0750.fFld);
            i18 = 1;
            do {
                i15 += (37459 + (i18 * i18));
                i14 = -83;
            } while (++i18 < 196);
        } while (++i < 128);

        FuzzerUtils.out.println("i i14 d2 = " + i + "," + i14 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("by2 i18 lArr1 = " + by2 + "," + i18 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0750.instanceCount Test0750.fFld Test0750.sFld = " + Test0750.instanceCount + "," +
                Float.floatToIntBits(Test0750.fFld) + "," + Test0750.sFld);
        FuzzerUtils.out.println("Test0750.bFld Test0750.iArrFld = " + (Test0750.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0750.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
