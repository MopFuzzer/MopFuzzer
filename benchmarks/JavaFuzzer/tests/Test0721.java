// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0721 {

    public static final int N = 400;

    public static long instanceCount = 35918L;
    public static float fFld = -1.98F;
    public static byte byFld = -91;
    public static long[] lArrFld = new long[N];
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0721.lArrFld, 2535L);
    }

    public boolean bFld = false;
    public volatile byte[] byArrFld = new byte[N];

    public static short sMeth(int i10, boolean b, long l) {

        int i11 = -1, i12 = 146, i13 = 60, i14 = -159, i15 = -6, i16 = 0;
        short s = -7774;
        float f = -2.734F;

        i10 = i10;
        i10 = (int) Test0721.instanceCount;
        b = b;
        for (i11 = 6; i11 < 169; ++i11) {
            l += i11;
            i12 -= s;
            if (true) break;
        }
        for (i13 = 3; 203 > i13; ++i13) {
            i12 += (((i13 * Test0721.fFld) + i13) - i13);
            i15 = 1;
            while (++i15 < 8) {
                l += i10;
            }
        }
        for (f = 10; f < 270; ++f) {
            Test0721.fFld *= Test0721.instanceCount;
            Test0721.instanceCount = i16;
            i16 -= (int) f;
        }
        long meth_res = i10 + (b ? 1 : 0) + l + i11 + i12 + s + i13 + i14 + i15 + Float.floatToIntBits(f) + i16;
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static int iMeth(int i5) {

        int i6 = -52, i7 = -6, i8 = -11, i9 = 28482, i17 = -60390, i18 = 231, i19 = -182, i20 = 100;
        byte by = 73;
        boolean b1 = false;
        double d1 = -2.28916;
        short s1 = 12188;

        i5 *= (int) 1.598F;
        for (i6 = 11; i6 < 187; ++i6) {
            for (i8 = 1; 9 > i8; i8 += 3) {
                i9 += (((i8 * i9) + i9) - by);
                i7 = i5;
                Test0721.fFld *= ((sMeth(24, b1, Test0721.instanceCount) * 12) - 3);
                i7 <<= i9;
                i5 *= i5;
            }
            for (i17 = 9; i17 > 1; i17--) {
                i9 *= i6;
                i9 *= (int) d1;
                Test0721.instanceCount *= Test0721.instanceCount;
                for (i19 = 2; i19 > 1; i19 -= 2) {
                    Test0721.lArrFld[i17 + 1] = s1;
                    i18 = (int) Test0721.instanceCount;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + by + (b1 ? 1 : 0) + i17 + i18 + Double.doubleToLongBits(d1) + i19 +
                i20 + s1;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static float fMeth(int i1, int i2) {

        int i3 = -122;
        int i4 = -38446;
        int i21 = 9;
        int i22 = 89;
        int i23 = -38604;
        int i24 = -1;
        int i25 = 167;
        int i26 = -43268;
        int[] iArr = new int[N];
        double d = -2.582;

        FuzzerUtils.init(iArr, 37797);

        for (i3 = 5; i3 < 279; i3++) {
            i2 += i4;
            d *= ((i1 = (i2--)) + iMeth(-56150));
            i4 *= 4;
            iArr[i3 + 1] -= i1;
        }
        for (i21 = 8; i21 < 142; ++i21) {
            i1 += (i21 * Test0721.fFld);
            for (i23 = 1; i23 < 12; ++i23) {
                iArr[i23 + 1] += i21;
                d += i4;
                i4 += (int) Test0721.instanceCount;
                i1 += Test0721.byFld;
                for (i25 = 1; 2 > i25; ++i25) {
                    d = Test0721.instanceCount;
                    i4 *= i23;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + Double.doubleToLongBits(d) + i21 + i22 + i23 + i24 + i25 + i26 +
                FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0721 _instance = new Test0721();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -2;
        int i27 = 94;
        int i28 = 11;
        int i29 = 67;
        int i30 = -12;
        int i31 = -41206;
        int[] iArr1 = new int[N];
        float f1 = 106.172F, f2 = 36.205F, f3 = 101.737F;
        short s2 = 3359;
        double d2 = -51.75399;

        FuzzerUtils.init(iArr1, 7);

        i = (int) ((fMeth(i, i) + Test0721.byFld) * -100.23222);
        i -= (int) f1;
        s2 >>= (short) i;
        Test0721.instanceCount <<= i;
        i += (int) Test0721.instanceCount;
        i = i;
        Test0721.instanceCount = i;
        Test0721.fFld = i;
        i = i;
        f2 = 307;
        while (--f2 > 0) {
            d2 = -4;
            i = (int) Test0721.instanceCount;
            s2 = (short) Test0721.instanceCount;
            if (true) {
                for (f3 = f2; 82 > f3; f3++) {
                    for (i28 = 1; 1 > i28; i28++) {
                        byArrFld[i28 + 1] += (byte) i;
                        d2 *= 2.134F;
                        s2 -= (short) -38846;
                        i29 >>>= (int) -4102470741L;
                        iArr1[(18648 >>> 1) % N] = i27;
                        Test0721.byFld >>= (byte) Test0721.instanceCount;
                        i29 = (int) Test0721.instanceCount;
                        bFld = bFld;
                    }
                    d2 -= 9;
                    i += (int) (f3 + i);
                    i += i29;
                    for (i30 = 1; i30 < 1; ++i30) {
                        f1 *= i27;
                        d2 += Test0721.instanceCount;
                    }
                }
            } else {
                i31 += (int) 2L;
            }
        }

        FuzzerUtils.out.println("i f1 s2 = " + i + "," + Float.floatToIntBits(f1) + "," + s2);
        FuzzerUtils.out.println("f2 d2 f3 = " + Float.floatToIntBits(f2) + "," + Double.doubleToLongBits(d2) + "," +
                Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 iArr1 = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0721.instanceCount Test0721.fFld Test0721.byFld = " + Test0721.instanceCount + "," +
                Float.floatToIntBits(Test0721.fFld) + "," + Test0721.byFld);
        FuzzerUtils.out.println("bFld Test0721.lArrFld byArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0721.lArrFld) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
