// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0255 {

    public static final int N = 400;

    public static long instanceCount = 199L;
    public static boolean bFld = true;
    public static byte byFld = 24;
    public static float fFld = -1.530F;
    public static long[] lArrFld = new long[N];
    public static double[] dArrFld = new double[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0255.lArrFld, -197L);
        FuzzerUtils.init(Test0255.dArrFld, 0.108101);
        FuzzerUtils.init(Test0255.iArrFld, -26018);
    }

    public int iFld = 14;

    public static int iMeth1() {

        int i8 = -8391, i9 = 10, i10 = -3, i11 = 11, i12 = -3, i13 = 14759, i14 = -199;
        boolean[] bArr = new boolean[N];
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr, 45.121F);

        for (i8 = 5; i8 < 222; i8++) {
            i10 += i9;
            i10 = i9;
            for (i11 = 7; i11 > 1; i11--) {
                bArr[i8 - 1] = Test0255.bFld;
                for (i13 = 2; i13 > 1; --i13) {
                    Test0255.instanceCount -= i14;
                    Test0255.lArrFld[i13] += i12;
                    Test0255.instanceCount -= i14;
                    i9 = i9;
                    Test0255.instanceCount -= Test0255.byFld;
                    Test0255.instanceCount += i13;
                    fArr[i8 + 1][i8 + 1] += i12;
                }
                i12 = i13;
                if (i14 != 0) {
                }
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(bArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth() {

        short s1 = 16290;
        int i15 = 18997;
        int i16 = -59346;
        int i17 = 61872;
        int i18 = 8;
        int i19 = -11709;
        int i20 = 11;
        int i21 = -23801;
        int[][] iArr1 = new int[N][N];
        float f1 = -124.85F;
        float[] fArr1 = new float[N];
        long l1 = 2000799373L;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr1, -250);
        FuzzerUtils.init(dArr, -51.48346);
        FuzzerUtils.init(fArr1, 114.8F);

        s1 = (short) Math.min(iMeth1(), i15);
        try {
            for (i16 = 1; i16 < 206; i16++) {
                iArr1[i16 + 1][i16 - 1] >>>= i17;
                i18 = 8;
                while (--i18 > 0) {
                    for (f1 = 1; f1 < 1; ++f1) {
                        dArr[i18 - 1] -= s1;
                    }
                    i15 += (((i18 * i16) + f1) - i18);
                    l1 = 12;
                    fArr1[i16 + 1] += (float) 2.50601;
                    i20 = 1;
                    while (++i20 < 1) {
                        i21 <<= (int) l1;
                        i17 += (int) (-69.420F + (i20 * i20));
                        i21 >>>= (int) l1;
                        Test0255.instanceCount = Test0255.instanceCount;
                    }
                }
            }
        } catch (UserDefinedExceptionTest0255 exc2) {
            i21 -= i20;
        } catch (NullPointerException exc3) {
            Test0255.lArrFld = Test0255.lArrFld;
        }
        long meth_res = s1 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f1) + i19 + l1 + i20 + i21 +
                FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i2) {

        int i3 = 80;
        int i4 = 13628;
        int i5 = -9439;
        int i6 = -8;
        int i7 = -10;
        int[][] iArr = new int[N][N];
        float f = -7.488F;

        FuzzerUtils.init(iArr, -7);

        i3 = 1;
        do {
            for (i4 = 1; i4 < 7; i4++) {
                Test0255.bFld = ((--i5) != (Test0255.byFld++));
                for (i6 = 1; i6 < 2; i6++) {
                    double d = 23.60584;
                    Test0255.bFld = Test0255.bFld;
                    switch ((i4 % 2) + 29) {
                        case 29:
                            Test0255.instanceCount = ((i5++) & (iArr[i6][i4 - 1]++));
                            break;
                        case 30:
                            f *= (float) (Math.max(Test0255.instanceCount--, Test0255.lArrFld[i6]) - (Math.abs(26.122736) - (i3 *
                                    i7)));
                            i2 = (int) (((iArr[(i2 >>> 1) % N][i4] = (int) Test0255.instanceCount) * (-9054 +
                                    Test0255.instanceCount)) * (Math.abs(i3) * (-4 * iMeth())));
                            Test0255.dArrFld[i6 - 1] *= -1;
                            i2 = (int) Test0255.instanceCount;
                    }
                    i2 += (int) d;
                    i7 += 7369;
                }
            }
            Test0255.dArrFld[i3] -= i2;
            i5 += i7;
        } while (++i3 < 222);
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0255 _instance = new Test0255();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        short s = -32531;
        int i = -11, i1 = -55282, i22 = 128, i23 = 61, i24 = -82, i25 = 11235, i26 = -12;
        double d1 = 111.444;
        float f2 = -67.232F;
        long l2 = 1118029097L;

        s = (short) iFld;
        for (i = 1; 147 > i; ++i) {
            vMeth(65022);
        }
        if (Test0255.bFld) {
            Test0255.fFld *= i1;
            i1 += iFld;
            i22 = 135;
            while (--i22 > 0) {
                Test0255.byFld += (byte) d1;
                if (Test0255.bFld) {
                    d1 = iFld;
                    Test0255.fFld = i22;
                } else if (Test0255.bFld) {
                    i1 += -7;
                } else if (Test0255.bFld) {
                    d1 = -2244594417083513007L;
                    i1 += (((i22 * iFld) + i1) - Test0255.instanceCount);
                }
            }
            for (i23 = 11; i23 < 241; i23 += 3) {
                Test0255.instanceCount <<= i22;
                for (i25 = 5; i25 < 329; i25++) {
                    d1 -= i1;
                    f2 = 1;
                    do {
                        i26 += (int) f2;
                        switch ((i25 % 2) + 111) {
                            case 111:
                                Test0255.iArrFld[i23] >>>= (int) Test0255.instanceCount;
                                break;
                            case 112:
                                i26 = i1;
                                l2 -= i25;
                                i24 = i1;
                                Test0255.instanceCount *= iFld;
                                break;
                        }
                        iFld += (int) Test0255.instanceCount;
                        Test0255.iArrFld[i23 + 1] = iFld;
                        Test0255.iArrFld[i25 - 1] ^= i26;
                        if (Test0255.bFld) continue;
                    } while ((f2 += 3) < 2);
                }
            }
        } else {
            i26 += (int) -46450L;
        }

        FuzzerUtils.out.println("s i i1 = " + s + "," + i + "," + i1);
        FuzzerUtils.out.println("i22 d1 i23 = " + i22 + "," + Double.doubleToLongBits(d1) + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("f2 l2 = " + Float.floatToIntBits(f2) + "," + l2);

        FuzzerUtils.out.println("Test0255.instanceCount iFld Test0255.bFld = " + Test0255.instanceCount + "," + iFld + "," +
                (Test0255.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0255.byFld Test0255.fFld Test0255.lArrFld = " + Test0255.byFld + "," +
                Float.floatToIntBits(Test0255.fFld) + "," + FuzzerUtils.checkSum(Test0255.lArrFld));
        FuzzerUtils.out.println("Test0255.dArrFld Test0255.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0255.dArrFld)) + "," + FuzzerUtils.checkSum(Test0255.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}

///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest0255 extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
