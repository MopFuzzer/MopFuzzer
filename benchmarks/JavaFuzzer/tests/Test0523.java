// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test0523 {

    public static final int N = 400;

    public static long instanceCount = 1L;
    public static volatile double dFld = 52.7501;
    public static volatile boolean bFld = false;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public short sFld = 27763;
    public double[] dArrFld = new double[N];

    public static void vMeth2(float f) {

        int i5 = -1;
        int i6 = 194;
        int i7 = 137;
        int i8 = 0;
        int[] iArr = new int[N];
        boolean b1 = false;
        float[] fArr = new float[N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(fArr, 0.148F);
        FuzzerUtils.init(lArr1, 19L);
        FuzzerUtils.init(iArr, -114);

        i5 = 1;
        while (++i5 < 130) {
            i6 = (int) 3666016530L;
            for (i7 = i5; i7 < 12; ++i7) {
                switch ((i7 % 6) + 1) {
                    case 1:
                        i8 *= (int) Test0523.dFld;
                        fArr = fArr;
                        i8 += (-4 + (i7 * i7));
                        break;
                    case 2:
                        i8 = i7;
                        i6 <<= -235;
                        i6 >>= i5;
                        break;
                    case 3:
                        i8 *= (int) 3L;
                        Test0523.instanceCount = i7;
                        i6 += (((i7 * i6) + Test0523.instanceCount) - i8);
                        if (b1) continue;
                        break;
                    case 4:
                        lArr1[i7 - 1] -= i7;
                        break;
                    case 5:
                        try {
                            i8 = (i5 % 47569);
                            i8 = (i5 % i5);
                            i6 = (iArr[i5 + 1] % i6);
                        } catch (ArithmeticException a_e) {
                        }
                    case 6:
                        i8 += i7;
                    default:
                        Test0523.dFld = i8;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + (b1 ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1) +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(boolean b) {

        float f1 = 2.818F;
        long l = 37956L;
        long[] lArr = new long[N];
        int i9 = -9;
        int[] iArr1 = new int[N];
        byte by = 0;

        FuzzerUtils.init(lArr, -7175504135745830296L);
        FuzzerUtils.init(iArr1, -5);

        switch ((((((int) (-14 - lArr[(238 >>> 1) % N])) >>> 1) % 1) * 5) + 11) {
            case 16:
                vMeth2(f1);
                for (l = 278; l > 10; l -= 2) {
                    Test0523.instanceCount += l;
                }
                break;
        }
        Test0523.instanceCount = i9;
        i9 = (int) Test0523.dFld;
        Test0523.instanceCount <<= by;
        iArr1[(i9 >>> 1) % N] -= by;
        vMeth1_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f1) + l + i9 + by + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0523 _instance = new Test0523();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(int i4, double d) {

        int i10 = -196, i11 = 44521, i12 = 28914;
        float f2 = 1.472F;
        byte by1 = 12;
        boolean b2 = false;
        boolean[] bArr1 = new boolean[N];

        FuzzerUtils.init(bArr1, false);

        vMeth1(true);
        sFld &= (short) 58876L;
        i10 = 1;
        while (++i10 < 214) {
            bArr1 = FuzzerUtils.boolean1array(N, (boolean) false);
            f2 += i10;
            i4 *= -3;
            for (i11 = i10; 8 > i11; i11++) {
                by1 += (byte) (i11 ^ i10);
                Test0523.instanceCount = i12;
                f2 += (float) d;
                switch ((i10 % 2) + 117) {
                    case 117:
                        i12 -= by1;
                        sFld = (short) -9;
                        dArrFld = dArrFld;
                        by1 += (byte) (i11 * i11);
                        break;
                    case 118:
                        Test0523.instanceCount >>= 5139;
                    default:
                        if (b2) continue;
                }
            }
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d) + i10 + Float.floatToIntBits(f2) + i11 + i12 + by1 + (b2 ? 1
                : 0) + FuzzerUtils.checkSum(bArr1);
    }

    public void mainTest(String[] strArr1) {

        int i = 59572;
        int i1 = 1;
        int i2 = 52694;
        int i3 = -41864;
        int i13 = 60010;
        int i14 = 27208;
        int[] iArr2 = new int[N];
        float f3 = -50.832F;
        float[][] fArr1 = new float[N][N];
        boolean[][] bArr = new boolean[N][N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -110);
        FuzzerUtils.init(fArr1, 0.399F);

        for (i = 6; i < 194; i++) {
            switch (((i % 1) * 5) + 109) {
                case 112:
                    bArr[i + 1] = (bArr[i] = (bArr[i] = (bArr[i + 1] = bArr[i])));
                    for (i2 = 2; i2 < 133; ++i2) {
                        vMeth(i2, Test0523.dFld);
                        switch ((((i >>> 1) % 4) * 5) + 75) {
                            case 78:
                                i3 += (80 + (i2 * i2));
                                i1 = 13688;
                                switch (((i2 >>> 1) % 2) + 72) {
                                    case 72:
                                        i1 += (i2 * i2);
                                        i1 += (int) (1343201672L + (i2 * i2));
                                        break;
                                    case 73:
                                        Test0523.dFld -= -60478;
                                        i1 = (int) Test0523.instanceCount;
                                        break;
                                    default:
                                        for (i13 = 1; i13 < 2; ++i13) {
                                            i3 *= (int) Test0523.instanceCount;
                                            switch (((i2 >>> 1) % 10) * 5) {
                                                case 36:
                                                    Test0523.instanceCount &= i14;
                                                    if (Test0523.bFld) break;
                                                    iArr2[i13 + 1] = i3;
                                                    iArr2[i2 + 1] *= i14;
                                                    break;
                                                case 2:
                                                    Test0523.instanceCount *= i;
                                                    f3 -= i;
                                                    dArrFld[i] -= i1;
                                                    i1 += i13;
                                                    break;
                                                case 7:
                                                    i3 += i;
                                                    iArr2[i13] += i3;
                                                    break;
                                                case 43:
                                                    fArr1[i13 - 1][i] -= -52L;
                                                    i1 += (i13 * i13);
                                                    Test0523.instanceCount = i2;
                                                    Test0523.instanceCount >>= i14;
                                                    break;
                                                case 34:
                                                    if (Test0523.bFld) break;
                                                    break;
                                                case 17:
                                                    Test0523.instanceCount = i2;
                                                    break;
                                                case 23:
                                                case 40:
                                                    if (Test0523.bFld) continue;
                                                    break;
                                                case 26:
                                                    i3 += (i13 - i);
                                                    break;
                                                case 1:
                                                    i14 *= i13;
                                                    break;
                                                default:
                                                    i1 -= i;
                                            }
                                        }
                                }
                                break;
                            case 83:
                                Test0523.instanceCount &= i14;
                            case 91:
                                iArr2[i] -= (int) -2.5840;
                                break;
                            case 94:
                                i1 <<= (int) 3858977618L;
                                break;
                            default:
                                Test0523.instanceCount = i3;
                        }
                    }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i13 i14 = " + i3 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("f3 bArr iArr2 = " + Float.floatToIntBits(f3) + "," + FuzzerUtils.checkSum(bArr) + ","
                + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0523.instanceCount Test0523.dFld sFld = " + Test0523.instanceCount + "," +
                Double.doubleToLongBits(Test0523.dFld) + "," + sFld);
        FuzzerUtils.out.println("Test0523.bFld dArrFld = " + (Test0523.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
