// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0321 {

    public static final int N = 400;

    public static long instanceCount = 5L;
    public static float fFld = -2.507F;
    public static double dFld = -65.85280;
    public static byte[] byArrFld = new byte[N];
    public static volatile long[] lArrFld = new long[N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0321.byArrFld, (byte) -98);
        FuzzerUtils.init(Test0321.lArrFld, 6614L);
    }

    public int[] iArrFld = new int[N];

    public static long lMeth1(int i7, int i8, long l1) {

        float f1 = -53.124F;
        int i9 = -38809;
        int i10 = 25980;
        int i11 = 239;
        int i12 = 48;
        int i13 = 29951;
        int i14 = -1;
        int[] iArr = new int[N];
        double d1 = -2.26124;
        boolean b = true;
        boolean[] bArr = new boolean[N];
        short s = -11963;

        FuzzerUtils.init(iArr, 192);
        FuzzerUtils.init(bArr, false);

        i7 = i7;
        Test0321.instanceCount >>= i7;
        f1 = Test0321.instanceCount;
        for (i9 = 3; i9 < 128; i9++) {
            for (i11 = 1; 13 > i11; i11++) {
                Test0321.instanceCount += i11;
                d1 = i9;
                for (i13 = 2; 1 < i13; i13--) {
                    iArr[i9] *= (int) l1;
                    i7 = (int) 13L;
                    bArr[i11 - 1] = b;
                    Test0321.fFld += (10.31F + (i13 * i13));
                    iArr = iArr;
                    iArr[i9 + 1] += s;
                    iArr = iArr;
                }
            }
        }
        long meth_res = i7 + i8 + l1 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d1) +
                i13 + i14 + (b ? 1 : 0) + s + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
        lMeth1_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i3, int i4, float f) {

        byte by = -21;
        double d = -88.116334;
        int i5 = 19341;
        int i6 = -176;
        int i15 = 0;
        int i16 = -252;
        int[] iArr1 = new int[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, -25);
        FuzzerUtils.init(lArr, 59306L);

        i4 += (int) (f--);
        by = (byte) Test0321.instanceCount;
        for (d = 19; d < 360; d++) {
            i6 = 1;
            while (++i6 < 5) {
                f += i6;
                lMeth1(i5, i4, Test0321.instanceCount);
                i3 = i6;
                by += by;
                iArr1[i6] &= (int) -209L;
                for (i15 = 1; i15 < 1; i15++) {
                    Test0321.instanceCount *= i16;
                    i16 *= (int) Test0321.instanceCount;
                    i3 += i15;
                    iArr1[i15] = i16;
                    lArr[(int) (d)] -= i4;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f) + by + Double.doubleToLongBits(d) + i5 + i6 + i15 + i16 +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(long l, int i2) {

        int i17 = 70;
        int i18 = -19560;
        int i19 = 12;
        int[] iArr2 = new int[N];
        boolean b1 = false;
        double[] dArr = new double[N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr2, 121);
        FuzzerUtils.init(dArr, -2.50832);
        FuzzerUtils.init(lArr1, 9L);

        vMeth(i2, i2, Test0321.fFld);
        i17 = 1;
        do {
            iArr2[i17] = (int) Test0321.dFld;
            if (true) continue;
            i2 = (int) Test0321.dFld;
        } while (++i17 < 356);
        i18 = 1;
        while (++i18 < 234) {
            int i20 = -8;
            l += i18;
            switch ((i18 % 10) + 43) {
                case 43:
                    if (b1) {
                        i2 = i17;
                        Test0321.dFld = i18;
                        if (b1) break;
                        i2 += (i18 - i19);
                    } else {
                        Test0321.instanceCount = -76;
                        i19 += (int) Test0321.instanceCount;
                    }
                    break;
                case 44:
                    i2 += (((i18 * i17) + i17) - Test0321.fFld);
                    break;
                case 45:
                    i2 = (int) l;
                    break;
                case 46:
                    i2 -= 74;
                    break;
                case 47:
                    i19 = 84;
                    break;
                case 48:
                    i20 += (i18 - i20);
                case 49:
                    i20 = (int) -25091L;
                    break;
                case 50:
                    dArr[i18 - 1] = l;
                case 51:
                    lArr1[i18 - 1] ^= i2;
                    break;
                case 52:
                    i19 -= i20;
                    break;
            }
        }
        long meth_res = l + i2 + i17 + i18 + (b1 ? 1 : 0) + i19 + FuzzerUtils.checkSum(iArr2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0321 _instance = new Test0321();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 1, i1 = 33853, i21 = -189, i22 = -93, i23 = 3596, i24 = -124, i25 = 55265, i26 = 8, i27 = -44931;
        boolean b2 = true;
        float f2 = -1.517F;

        for (i = 11; i < 180; i++) {
            i1 >>= (int) ((i1++) - lMeth(Test0321.instanceCount, i));
            for (i21 = 148; i21 > 1; i21--) {
                i1 += (i21 + i1);
                i1 += (i21 + i22);
                Test0321.byArrFld[i21 - 1] = (byte) Test0321.instanceCount;
            }
            i1 -= i1;
            i23 = 1;
            while (++i23 < 148) {
                for (i24 = i23; 1 > i24; i24++) {
                    Test0321.lArrFld[i + 1] += i21;
                    Test0321.dFld /= 19.129967;
                    Test0321.fFld += -200;
                    i22 = (int) Test0321.instanceCount;
                    Test0321.fFld -= Test0321.instanceCount;
                    Test0321.instanceCount = Test0321.instanceCount;
                    i1 <<= i23;
                    if (b2) continue;
                    i25 = i22;
                    iArrFld = iArrFld;
                }
                i25 *= i23;
                i22 <<= i21;
                for (i26 = 1; i26 < 1; i26++) {
                    if (b2) break;
                    Test0321.fFld = i24;
                    Test0321.instanceCount += -9135035838805521886L;
                    if (b2) continue;
                    f2 += i26;
                    i25 = i21;
                    Test0321.instanceCount |= -198;
                    if (true) break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i21 = " + i + "," + i1 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 b2 i26 = " + i25 + "," + (b2 ? 1 : 0) + "," + i26);
        FuzzerUtils.out.println("i27 f2 = " + i27 + "," + Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test0321.instanceCount Test0321.fFld Test0321.dFld = " + Test0321.instanceCount + "," +
                Float.floatToIntBits(Test0321.fFld) + "," + Double.doubleToLongBits(Test0321.dFld));
        FuzzerUtils.out.println("Test0321.byArrFld Test0321.lArrFld iArrFld = " + FuzzerUtils.checkSum(Test0321.byArrFld) + "," +
                FuzzerUtils.checkSum(Test0321.lArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
