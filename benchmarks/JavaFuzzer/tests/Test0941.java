// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0941 {

    public static final int N = 400;

    public static long instanceCount = 20172L;
    public static boolean bFld = false;
    public static short sFld = -2644;
    public static double dFld = 1.120708;
    public static volatile float fFld = 0.985F;
    public static int iFld = 12205;
    public static volatile int[] iArrFld = new int[N];
    public static float[] fArrFld = new float[N];
    public static volatile float[][] fArrFld1 = new float[N][N];
    public static long bMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0941.iArrFld, 2);
        FuzzerUtils.init(Test0941.fArrFld, -113.20F);
        FuzzerUtils.init(Test0941.fArrFld1, -2.63F);
    }

    public boolean bFld1 = true;

    public static byte byMeth(int i11, long l, byte by) {

        double d = -67.46097;
        int i12 = 10940;
        int i13 = 7;
        int i14 = 7;
        int i15 = -2;
        int i16 = 57;
        int i17 = -5;
        int[] iArr = new int[N];
        int[][] iArr1 = new int[N][N];

        FuzzerUtils.init(iArr, 58);
        FuzzerUtils.init(iArr1, -4);

        for (d = 9; d < 242; ++d) {
            for (i13 = 1; i13 < 7; ++i13) {
                for (i15 = 2; i15 > i13; i15 -= 3) {
                    Test0941.dFld = 10;
                    i16 *= -4;
                    Test0941.dFld = i15;
                    iArr[(int) (d + 1)] >>= i15;
                }
            }
            i11 += (int) 1.414F;
            switch (((i15 >>> 1) % 1) + 93) {
                case 93:
                    i17 = 7;
                    do {
                        Test0941.sFld *= (short) Test0941.instanceCount;
                        iArr[(int) (d)] -= i15;
                        iArr1 = iArr1;
                        l = i13;
                        i11 = i13;
                    } while (--i17 > 0);
            }
        }
        long meth_res = i11 + l + by + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static long lMeth(int i10) {

        float f1 = -1.434F;
        byte by1 = -29;
        int i18 = -155;
        int i19 = 1;
        int i20 = 27369;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, -50);

        i10 += (int) f1;
        byMeth(-71, Test0941.instanceCount, by1);
        Test0941.instanceCount = i10;
        i18 = 1;
        do {
            for (i19 = 1; i19 < 6; ++i19) {
                i20 -= (int) Test0941.instanceCount;
                iArr2[i19 + 1] = i20;
                iArr2[i19 + 1] *= i19;
                Test0941.instanceCount = i20;
                i20 += i19;
                if (true) break;
                f1 += (((i19 * i20) + i18) - Test0941.instanceCount);
                i20 ^= i18;
            }
            iArr2[i18 + 1] += Test0941.sFld;
            iArr2[i18] -= i10;
        } while (++i18 < 260);
        long meth_res = i10 + Float.floatToIntBits(f1) + by1 + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static boolean bMeth(float f) {

        int i4 = 51, i5 = -96, i6 = -12, i7 = -3, i8 = -6, i9 = 5;

        for (i4 = 13; 244 > i4; i4 += 2) {
            for (i6 = 1; 14 > i6; i6++) {
                i5 = (int) (Test0941.sFld + Test0941.dFld);
            }
        }
        for (i8 = 8; i8 < 379; i8++) {
            i7 *= (int) (i7 - ((i4 + i5) + (i6 - Test0941.dFld)));
            lMeth(-148);
            i5 += (int) (0.545F + (i8 * i8));
            i7 -= i8;
        }
        Test0941.iArrFld[(-5 >>> 1) % N] *= i5;
        Test0941.fArrFld[(i4 >>> 1) % N] -= Test0941.instanceCount;
        i5 = i8;
        long meth_res = Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + i9;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void main(String[] strArr) {

        try {
            Test0941 _instance = new Test0941();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -44673, i1 = -250, i2 = 32807, i3 = -415, i21 = -149, i22 = -69, i23 = 7;
        byte by2 = 16;
        boolean[] bArr = new boolean[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, 72.96107);

        for (i = 153; i > 4; --i) {
            for (i2 = 9; 168 > i2; i2++) {
                switch (((i2 % 2) * 5) + 3) {
                    case 8:
                        if (bArr[i] = (Test0941.bFld = (bMeth(Test0941.fFld) || Test0941.bFld))) continue;
                        i1 = (int) Test0941.instanceCount;
                        break;
                    case 6:
                        Test0941.iArrFld[i] = i3;
                        break;
                    default:
                        Test0941.fFld = Test0941.instanceCount;
                }
                Test0941.instanceCount <<= i;
                Test0941.sFld = (short) Test0941.instanceCount;
            }
        }
        i3 += 11;
        i21 = 1;
        while (++i21 < 247) {
            i1 += (i21 ^ i3);
            Test0941.bFld = Test0941.bFld;
            if (bFld1) {
                Test0941.instanceCount = i21;
                Test0941.dFld *= 6;
            } else {
                Test0941.fFld += (16867 + (i21 * i21));
                for (i22 = 2; 102 > i22; ++i22) {
                    if (false) {
                        bArr[i21] = true;
                    } else {
                        dArr[i22] *= i23;
                    }
                    i3 += (i22 - by2);
                    Test0941.sFld = (short) i22;
                    Test0941.instanceCount -= Test0941.instanceCount;
                    Test0941.iArrFld[i22 - 1] += i23;
                    i23 <<= (int) Test0941.instanceCount;
                    i3 = i23;
                    i3 <<= Test0941.sFld;
                    Test0941.fArrFld1[i21][i21] += i;
                    Test0941.iFld += (((i22 * Test0941.instanceCount) + i3) - i2);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i21 i22 = " + i3 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 by2 bArr = " + i23 + "," + by2 + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0941.instanceCount Test0941.bFld Test0941.sFld = " + Test0941.instanceCount + "," + (Test0941.bFld ? 1
                : 0) + "," + Test0941.sFld);
        FuzzerUtils.out.println("Test0941.dFld Test0941.fFld bFld1 = " + Double.doubleToLongBits(Test0941.dFld) + "," +
                Float.floatToIntBits(Test0941.fFld) + "," + (bFld1 ? 1 : 0));
        FuzzerUtils.out.println("Test0941.iFld Test0941.iArrFld Test0941.fArrFld = " + Test0941.iFld + "," +
                FuzzerUtils.checkSum(Test0941.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0941.fArrFld)));
        FuzzerUtils.out.println("Test0941.fArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0941.fArrFld1)));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  lMeth ->  lMeth bMeth mainTest
//DEBUG  byMeth ->  byMeth lMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
