// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0074 {

    public static final int N = 400;

    public static long instanceCount = 4982666716126452104L;
    public static int iFld = 47;
    public static volatile boolean bFld = false;
    public static byte byFld = -18;
    public static volatile boolean bFld1 = true;
    public static volatile int[][] iArrFld = new int[N][N];
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0074.iArrFld, 55);
        FuzzerUtils.init(Test0074.fArrFld, -80.113F);
    }

    public static void vMeth1(long l2) {

        int i5 = 43;
        int i6 = 159;
        int i7 = 2;
        int i8 = 180;
        int i9 = -11;
        int i10 = 7;
        int i11 = -13;
        int i12 = 2;
        int i13 = 176;
        int[] iArr = new int[N];
        double d1 = -80.6404;
        byte by = 124;

        FuzzerUtils.init(iArr, 172);

        i5 -= 6;
        Test0074.instanceCount >>= i5;
        iArr[(62206 >>> 1) % N] <<= (int) Test0074.instanceCount;
        for (i6 = 5; 230 > i6; i6++) {
            for (i8 = 1; i8 < 7; ++i8) {
                Test0074.instanceCount += i8;
                d1 += i5;
            }
            iArr[i6 + 1] = (int) Test0074.instanceCount;
            for (i10 = 1; i10 < 7; ++i10) {
                i11 = i7;
                Test0074.instanceCount = (long) 1.92578;
                for (i12 = 1; i12 < 2; ++i12) {
                    i9 = i6;
                    by = (byte) l2;
                    i11 -= i10;
                }
            }
        }
        vMeth1_check_sum += l2 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + by +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l1) {

        boolean b = false;
        boolean[] bArr = new boolean[N];
        int i14 = -59926, i15 = 10520, i16 = 4, i17 = 53638, i18 = -13752, i19 = -15492;
        long[] lArr = new long[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(lArr, -3L);
        FuzzerUtils.init(fArr, -2.766F);
        FuzzerUtils.init(bArr, false);

        b = b;
        vMeth1(l1);
        i14 = 1;
        do {
            float f1 = 0.574F;
            lArr[i14] = (long) f1;
        } while (++i14 < 303);
        for (i15 = 20; i15 < 391; ++i15) {
            i17 = 1;
            while (++i17 < 5) {
                float f2 = 0.287F;
                short s = 5844;
                i16 = i14;
                fArr[i17] -= f2;
                lArr[i17] -= s;
                s += (short) (((i17 * Test0074.instanceCount) + i15) - i17);
                for (i18 = i15; i18 < 1; i18++) {
                    i16 >>= i14;
                    Test0074.iArrFld[i17 + 1][i18 - 1] = 41983;
                    bArr[i15 - 1] = b;
                    i16 -= (int) l1;
                }
            }
        }
        vMeth_check_sum += l1 + (b ? 1 : 0) + i14 + i15 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(lArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth(int i2, int i3, int i4) {

        int i20 = 3, i21 = 18237;
        boolean b1 = false;
        long l3 = -62903L;
        float f3 = 90.862F;
        short s1 = -7135;

        vMeth(Test0074.instanceCount);
        i2 <<= i4;
        for (i20 = 8; i20 < 231; ++i20) {
            byte by1 = -121;
            if (b1) continue;
            i2 = (int) Test0074.instanceCount;
            Test0074.fArrFld[i20] -= i21;
            i4 += (-4 + (i20 * i20));
            i21 += i2;
            if (true) {
                switch (((i20 % 2) * 5) + 78) {
                    case 88:
                        i4 *= i21;
                        i3 *= (int) l3;
                        l3 += (((i20 * f3) + s1) - Test0074.iFld);
                    case 82:
                        f3 *= l3;
                        Test0074.instanceCount <<= Test0074.instanceCount;
                        break;
                    default:
                        l3 += i2;
                }
            } else if (true) {
                i4 = 220;
            } else if (b1) {
                f3 += i2;
            } else {
                Test0074.instanceCount <<= by1;
            }
        }
        long meth_res = i2 + i3 + i4 + i20 + i21 + (b1 ? 1 : 0) + l3 + Float.floatToIntBits(f3) + s1;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0074 _instance = new Test0074();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -51951, i1 = 2, i22 = 87, i23 = -47629, i24 = -8, i25 = -7;
        long l = 4096704175508390508L;
        float f = 27.906F;
        double d = 58.101111;
        short s2 = -25374;

        for (i = 12; 262 > i; ++i) {
            i1 -= (int) (-(Test0074.instanceCount - Test0074.instanceCount));
            l = 101;
            do {
                f = l;
                d -= ((i1 + (++i1)) + Integer.reverseBytes(iMeth(i1, i1, i1)));
                Test0074.iFld *= (int) -2.1003F;
                i1 += (int) f;
                Test0074.fArrFld[(int) (l - 1)] -= Test0074.iFld;
                i1 += (int) l;
                i1 -= i1;
                Test0074.iFld -= (int) -2.78034;
            } while ((l -= 3) > 0);
            Test0074.iArrFld[(i >>> 1) % N][i] &= (int) Test0074.instanceCount;
        }
        for (i22 = 6; i22 < 182; i22 += 3) {
            Test0074.iFld += (i22 - Test0074.iFld);
            f %= (i23 | 1);
            Test0074.fArrFld[i22 + 1] -= (float) 2.121384;
            i24 = 1;
            while (++i24 < 368) {
                i25 = 1;
                do {
                    int i26 = -149;
                    i23 = (int) d;
                    switch (((i >>> 1) % 9) + 85) {
                        case 85:
                            Test0074.iFld += (int) (2.858F + (i25 * i25));
                            switch ((((i25 >>> 1) % 10) * 5) + 90) {
                                case 94:
                                    i1 = s2;
                                    break;
                                case 93:
                                    Test0074.iArrFld[i22 - 1][i22 + 1] >>= i25;
                                    Test0074.instanceCount += i25;
                                    break;
                                case 133:
                                    Test0074.iFld -= 12551;
                                    Test0074.iFld += (i25 ^ i23);
                                    break;
                                case 117:
                                    if (true) continue;
                                    i1 = i23;
                                    d -= i23;
                                case 115:
                                    Test0074.iArrFld[i22] = Test0074.iArrFld[i22 - 1];
                                    break;
                                case 96:
                                    i23 = 6700;
                                case 140:
                                    i23 += (i25 - i24);
                                    break;
                                case 116:
                                    if (Test0074.bFld) continue;
                                    break;
                                case 101:
                                    i1 = i25;
                                case 129:
                                    Test0074.iArrFld[i24 - 1][i25 + 1] -= i;
                                    break;
                                default:
                                    f += i25;
                            }
                        case 86:
                            i23 <<= Test0074.iFld;
                            break;
                        case 87:
                            Test0074.iArrFld[i24 - 1][i25 + 1] *= (int) d;
                            break;
                        case 88:
                            i1 = Test0074.byFld;
                            break;
                        case 89:
                            Test0074.instanceCount |= s2;
                        case 90:
                            s2 -= (short) -1.97776;
                        case 91:
                            i26 = (int) Test0074.instanceCount;
                        case 92:
                            Test0074.instanceCount = i24;
                        case 93:
                            if (Test0074.bFld1) break;
                        default:
                            Test0074.iFld = -9;
                    }
                } while (++i25 < 2);
            }
        }

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("f d i22 = " + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("s2 = " + s2);

        FuzzerUtils.out.println("Test0074.instanceCount Test0074.iFld Test0074.bFld = " + Test0074.instanceCount + "," + Test0074.iFld +
                "," + (Test0074.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0074.byFld Test0074.bFld1 Test0074.iArrFld = " + Test0074.byFld + "," + (Test0074.bFld1 ? 1 : 0) + ","
                + FuzzerUtils.checkSum(Test0074.iArrFld));
        FuzzerUtils.out.println("Test0074.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0074.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
