// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test0651 {

    public static final int N = 400;

    public static volatile long instanceCount = 4071690109L;
    public static float fFld = -105.436F;
    public static short sFld = -14311;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public volatile int[] iArrFld = new int[N];

    public static void vMeth1(int i4, long l) {

        double d = -71.117768;
        int i5 = 63809;
        int i6 = -1;
        int i7 = 8;
        int i8 = 38498;
        int i9 = -56;
        int[] iArr = new int[N];
        boolean b = true;
        byte by = 4;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 39);
        FuzzerUtils.init(lArr, -95870234585605229L);

        i4 -= (int) d;
        i5 = 1;
        do {
            l = 99;
            for (i6 = i5; i6 < 7; ++i6) {
                Test0651.instanceCount = i4;
                i4 <<= (int) l;
                iArr[i5 + 1] += (int) l;
                for (i8 = 1; i8 < 1; i8++) {
                    if (b) {
                        Test0651.instanceCount >>= i5;
                        i9 -= (int) Test0651.instanceCount;
                    }
                    lArr[i6 + 1] <<= Test0651.instanceCount;
                    i4 += i8;
                    Test0651.fFld += ((long) i8 ^ (long) Test0651.fFld);
                    by -= (byte) i5;
                }
            }
        } while (++i5 < 246);
        vMeth1_check_sum += i4 + l + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + by +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i10 = 8;
        int i11 = 146;
        int i12 = 3;
        int[][] iArr1 = new int[N][N];
        double d1 = -1.68135;
        boolean b1 = false;
        short s = -16476;
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr1, -26624);
        FuzzerUtils.init(fArr, -39.461F);

        vMeth1(-7, Test0651.instanceCount);
        i10 = i10;
        d1 -= i10;
        Test0651.instanceCount += i10;
        i10 = i10;
        iArr1 = FuzzerUtils.int2array(N, (int) 51575);
        for (i11 = 11; i11 < 349; i11 += 2) {
            Test0651.instanceCount -= i11;
            b1 = false;
            Test0651.instanceCount >>= Test0651.instanceCount;
            Test0651.instanceCount = s;
        }
        i12 -= i10;
        i12 = (int) d1;
        i10 -= i11;
        fArr[(i10 >>> 1) % N] = i11;
        long meth_res = i10 + Double.doubleToLongBits(d1) + i11 + i12 + (b1 ? 1 : 0) + s + FuzzerUtils.checkSum(iArr1)
                + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i1) {

        float f1 = 78.204F;
        int i2 = -4;
        int i3 = 46515;
        int i13 = 28;
        int i14 = -5;
        int i15 = 64910;
        int i16 = -39;
        int i17 = 160;
        int i18 = 32675;
        int i19 = -8448;
        int i20 = -62384;
        int[] iArr2 = new
                int[N];
        long l1 = 195L;

        FuzzerUtils.init(iArr2, -11);

        f1 = ((i2 + (i3++)) - ((Test0651.instanceCount - i3) - iMeth()));
        i1 = i1;
        i13 = 1;
        while (++i13 < 262) {
            for (i14 = 1; i14 < 6; ++i14) {
                i3 &= (int) Test0651.instanceCount;
                try {
                    i3 = (43917 % i3);
                    i1 = (i3 % iArr2[i14]);
                    i2 = (-222 % i13);
                } catch (ArithmeticException a_e) {
                }
            }
        }
        for (i16 = 4; i16 < 168; i16++) {
            for (l1 = i16; l1 < 10; ++l1) {
                i2 += (int) (((l1 * i14) + i14) - i3);
                i15 += (int) (l1 | i13);
            }
            for (i19 = 1; 10 > i19; i19++) {
                iArr2[i19 - 1] += (int) -101L;
                i15 += (((i19 * i18) + i17) - i3);
                Test0651.instanceCount += -46473;
                iArr2[i19 + 1] -= i16;
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f1) + i2 + i3 + i13 + i14 + i15 + i16 + i17 + l1 + i18 + i19 + i20
                + FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0651 _instance = new Test0651();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 10, i21 = 26, i22 = -10, i23 = -4, i24 = 10, i25 = 11, i26 = -232, i27 = 25397;
        float f = -98.368F;
        long l2 = -37706L;
        long l3 = -156L;
        long[] lArr1 = new long[N];
        boolean b2 = true;
        double d2 = -2.18106;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(lArr1, 12L);
        FuzzerUtils.init(byArr, (byte) 122);

        i >>= (int) ((9 + i) % (((long) ((i - f) - (i -= i))) | 1));
        vMeth(36789);
        i = (int) Test0651.instanceCount;
        for (l2 = 4; l2 < 197; l2++) {
            if (b2) continue;
            i22 = 1;
            do {
                short s1 = -4311;
                i += s1;
                d2 *= i21;
                i &= i;
            } while (++i22 < 130);
        }
        lArr1 = lArr1;
        byArr[(i >>> 1) % N] -= (byte) i22;
        Test0651.instanceCount += i;
        i21 = (int) Test0651.instanceCount;
        iArrFld[(i >>> 1) % N] += 0;
        i += i21;
        for (l3 = 1; 289 > l3; l3++) {
            i = (int) 14L;
            i23 -= i;
            if (b2) {
                for (i24 = 5; 87 > i24; ++i24) {
                    Test0651.instanceCount = -3;
                    i23 = i;
                }
                Test0651.sFld += (short) i;
            }
            i25 += (int) l3;
            i21 = (int) l3;
            for (i26 = 3; i26 < 87; i26++) {
                b2 = b2;
            }
            if (b2) {
                i = (int) l3;
            } else {
                i25 <<= i21;
            }
        }

        FuzzerUtils.out.println("i f l2 = " + i + "," + Float.floatToIntBits(f) + "," + l2);
        FuzzerUtils.out.println("i21 b2 i22 = " + i21 + "," + (b2 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("d2 l3 i23 = " + Double.doubleToLongBits(d2) + "," + l3 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 lArr1 byArr = " + i27 + "," + FuzzerUtils.checkSum(lArr1) + "," +
                FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0651.instanceCount Test0651.fFld Test0651.sFld = " + Test0651.instanceCount + "," +
                Float.floatToIntBits(Test0651.fFld) + "," + Test0651.sFld);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
