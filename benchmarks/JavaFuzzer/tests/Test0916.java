// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0916 {

    public static final int N = 400;

    public static volatile long instanceCount = 519L;
    public static volatile float fFld = -50.176F;
    public static boolean bFld = false;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public volatile double[] dArrFld = new double[N];

    public static void vMeth1(float f2, int i6, long l) {

        float f3 = 43.882F;
        byte by1 = 22;
        int i7 = -41325;
        int i8 = 11;
        int i9 = 25367;
        int i10 = 8;
        int i11 = -5;
        int i12 = 229;
        int[] iArr1 = new int[N];
        short s = -21253;

        FuzzerUtils.init(iArr1, 101);

        f3 = 1;
        do {
            i6 -= i6;
        } while (++f3 < 346);
        i6 *= by1;
        for (i7 = 9; i7 < 268; i7++) {
            for (i9 = 6; i9 > 1; --i9) {
                f2 += (-7.389F + (i9 * i9));
                if (false) {
                    i8 += (int) l;
                }
                i10 += i9;
                i6 = i8;
                for (i11 = 1; i11 < 2; ++i11) {
                    s = (short) Test0916.instanceCount;
                    if (false) {
                        i10 >>= i12;
                        i10 *= s;
                    } else if (true) {
                        i6 |= i11;
                    } else {
                        iArr1[i9 - 1] = -98;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + i6 + l + Float.floatToIntBits(f3) + by1 + i7 + i8 + i9 + i10 +
                i11 + i12 + s + FuzzerUtils.checkSum(iArr1);
    }

    public static double dMeth(byte by, int i4, int i5) {

        float f4 = 102.370F;
        double d = 0.72883;
        int i13 = 9, i14 = -68, i15 = 93, i16 = -5, i17 = -38600, i18 = 21842, i19 = 46, i20 = 28;

        vMeth1(f4, i4, -54110L);
        d += i4;
        i4 *= by;
        for (i13 = 10; i13 < 262; i13++) {
            for (i15 = 1; i15 < 6; ++i15) {
                i14 += i14;
                for (i17 = 1; 2 > i17; ++i17) {
                    i16 *= (int) d;
                }
                i5 += (((i15 * i17) + i18) - Test0916.instanceCount);
                for (i19 = 1; i19 < 2; i19++) {
                    f4 += i18;
                    i5 += i16;
                    f4 *= -7635991670397043888L;
                    i18 += (i19 | i19);
                    i14 += (int) Test0916.instanceCount;
                }
            }
        }
        long meth_res = by + i4 + i5 + Float.floatToIntBits(f4) + Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 +
                i17 + i18 + i19 + i20;
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static void vMeth(int i1) {

        int i2 = -11, i3 = 122, i21 = -138, i22 = 34098, i23 = -3185, i24 = 65, i25 = -8, i26 = -1;
        byte by2 = -37;
        double d1 = 0.120377;

        for (i2 = 6; i2 < 253; ++i2) {
            dMeth(by2, -11, i1);
        }
        for (i21 = 6; i21 < 327; ++i21) {
            if (true) break;
            for (i23 = 1; i23 < 5; i23++) {
                i3 = i22;
                i22 = (int) Test0916.instanceCount;
                i24 *= i21;
                for (i25 = 1; i25 < 2; ++i25) {
                    i22 += (int) Test0916.fFld;
                    d1 = i26;
                    i3 += (i25 ^ i24);
                    if (false) continue;
                    i22 += (i25 ^ (long) Test0916.fFld);
                    i22 = 16323;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + by2 + i21 + i22 + i23 + i24 + i25 + i26 + Double.doubleToLongBits(d1);
    }

    public static void main(String[] strArr) {

        try {
            Test0916 _instance = new Test0916();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -219;
        int i27 = -76;
        int i28 = -16916;
        int i29 = -53883;
        int i30 = 6;
        int i31 = -21;
        int i32 = 0;
        int i33 = 0;
        int i34 = -5;
        int i35 = 6;
        int[][] iArr = new
                int[N][N];
        float f = -48.865F, f1 = -2.600F;
        byte by3 = -69;
        long l1 = 13L;

        FuzzerUtils.init(iArr, 45001);

        Test0916.instanceCount &= (long) ((Math.min(i, i) + i) * f);
        f1 = 1;
        do {
            i += (int) Test0916.instanceCount;
            i >>= (int) ((~(iArr[(int) (f1 - 1)][(int) (f1)] <<= (int) 1L)) - dArrFld[(int) (f1 + 1)]);
            i >>= (int) Test0916.instanceCount;
            vMeth(i);
            for (i27 = 12; i27 < 193; i27 += 3) {
                Test0916.instanceCount += (((i27 * i28) + by3) - i27);
            }
        } while ((f1 += 2) < 260);
        Test0916.instanceCount = i;
        i29 = 130;
        while (--i29 > 0) {
            for (i30 = 9; 193 > i30; i30++) {
                double d2 = 2.88646;
                d2 += i29;
                if (false) {
                    if (Test0916.bFld) continue;
                    i = (int) Test0916.instanceCount;
                    switch (((i27 >>> 1) % 2) + 6) {
                        case 6:
                            for (i32 = 1; i32 < 2; i32++) {
                                i33 = i31;
                                if (Test0916.bFld) {
                                    l1 += (i32 + l1);
                                } else if (Test0916.bFld) {
                                    iArr[i30][i29] = i29;
                                }
                            }
                            iArr[i29 + 1] = FuzzerUtils.int1array(N, (int) 47006);
                            iArr[i29 - 1][i29] *= i;
                            iArr[i29 - 1][i30 + 1] = i27;
                            break;
                        case 7:
                            i31 -= i29;
                            i33 += i30;
                            switch (((i31 >>> 1) % 5) + 81) {
                                case 81:
                                    for (i34 = 1; i34 < 2; i34++) {
                                        i35 = (int) 10L;
                                        i28 = (int) Test0916.instanceCount;
                                    }
                                case 82:
                                    Test0916.fFld = -117;
                                    break;
                                case 83:
                                    i35 += (i30 + f);
                                    break;
                                case 84:
                                    if (Test0916.bFld) continue;
                                    break;
                                case 85:
                                    i33 -= -56318;
                                    break;
                            }
                            break;
                    }
                } else {
                    i35 += (int) (-214L + (i30 * i30));
                }
            }
        }

        FuzzerUtils.out.println("i f f1 = " + i + "," + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i27 i28 by3 = " + i27 + "," + i28 + "," + by3);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 i33 l1 = " + i32 + "," + i33 + "," + l1);
        FuzzerUtils.out.println("i34 i35 iArr = " + i34 + "," + i35 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0916.instanceCount Test0916.fFld Test0916.bFld = " + Test0916.instanceCount + "," +
                Float.floatToIntBits(Test0916.fFld) + "," + (Test0916.bFld ? 1 : 0));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
