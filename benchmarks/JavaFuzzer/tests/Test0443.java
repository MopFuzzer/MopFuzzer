// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test0443 {

    public static final int N = 400;

    public static volatile long instanceCount = -2L;
    public static int iFld = -60025;
    public static boolean bFld = false;
    public static int iFld1 = -130;
    public static byte byFld = 51;
    public static double dFld = 0.109514;
    public static int[] iArrFld = new int[N];
    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0443.iArrFld, -3);
    }

    public float fFld = 0.660F;
    public short[] sArrFld = new short[N];

    public static long lMeth() {

        int i2 = 180;
        byte by = 15;

        Test0443.iArrFld[(i2 >>> 1) % N] += (int) ((Test0443.instanceCount *= (by * i2)) + (-96 >>> i2));
        long meth_res = i2 + by;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth1(int i7, short s, long l1) {

        int i9 = 0, i10 = -4429, i11 = -13, i12 = 0;
        float f = 8.789F;

        for (int i8 : Test0443.iArrFld) {
            Test0443.iArrFld[(i8 >>> 1) % N] = Test0443.iFld;
            i8 >>= i8;
            for (i9 = 1; i9 < 4; ++i9) {
                Test0443.instanceCount += (((i9 * i8) + f) - i8);
                f += i9;
                Test0443.iFld = -31952;
                i8 *= i10;
                for (i11 = 1; i11 < 2; i11++) {
                    if (Test0443.bFld) break;
                    i10 += i9;
                    i7 += i11;
                    Test0443.iArrFld[i11 - 1] = 12;
                    i8 += i9;
                    Test0443.iArrFld[i9 + 1] += i7;
                }
            }
        }
        vMeth1_check_sum += i7 + s + l1 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12;
    }

    public static void vMeth() {

        int i6 = 24432, i13 = -14, i14 = -44898, i15 = -1, i16 = 57253, i17 = 0;
        float f1 = 85.877F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 186531094L);

        lArr[(i6 >>> 1) % N] |= (i6 -= ((++i6) - (++i6)));
        vMeth1(Test0443.iFld1, (short) (-27817), Test0443.instanceCount);
        i13 = 1;
        while (++i13 < 292) {
            for (i14 = 1; 6 > i14; ++i14) {
                Test0443.iFld -= i14;
                Test0443.iFld1 += (-13 + (i14 * i14));
                Test0443.iFld = (int) f1;
                Test0443.iArrFld[i13 + 1] += (int) -4273387758L;
                if (i14 != 0) {
                    vMeth_check_sum += i6 + i13 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 +
                            FuzzerUtils.checkSum(lArr);
                    return;
                }
                i6 += i14;
                Test0443.bFld = Test0443.bFld;
                Test0443.byFld = (byte) Test0443.instanceCount;
            }
            for (i16 = i13; i16 < 6; ++i16) {
                i17 = i17;
                Test0443.instanceCount += (((i16 * i15) + i16) - Test0443.instanceCount);
            }
        }
        vMeth_check_sum += i6 + i13 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 + FuzzerUtils.checkSum(lArr);
    }

    public static byte byMeth(long l, int i3) {

        int i4 = 33626, i5 = -9;

        for (i4 = 9; i4 < 152; ++i4) {
            vMeth();
            i3 >>= (int) Test0443.instanceCount;
        }
        Test0443.iArrFld[(57123 >>> 1) % N] -= Test0443.iFld1;
        long meth_res = l + i3 + i4 + i5;
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0443 _instance = new Test0443();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -63, i1 = 4, i18 = -12927, i19 = -38629, i20 = -7, i21 = -9359;
        short s1 = 23061;

        for (i = 11; i < 314; i++) {
            sArrFld[i] *= (short) ((lMeth() >> byMeth(Test0443.instanceCount, i1)) + 3422593509L);
            i18 = 83;
            do {
                if (Test0443.bFld) continue;
                for (i19 = i; i19 < 1; i19++) {
                    Test0443.byFld = (byte) Test0443.instanceCount;
                    try {
                        i20 = (Test0443.iArrFld[i - 1] / Test0443.iFld1);
                        Test0443.iFld1 = (-65186 / i18);
                        Test0443.iArrFld[i - 1] = (Test0443.iFld / 10956);
                    } catch (ArithmeticException a_e) {
                    }
                    i1 += (int) fFld;
                    fFld = 41803;
                    Test0443.iArrFld[i18 + 1] = i19;
                    i1 += (6 + (i19 * i19));
                    i1 = i18;
                    Test0443.instanceCount = Test0443.iFld1;
                    Test0443.iArrFld[i18 + 1] += i19;
                }
                Test0443.instanceCount >>= i20;
                Test0443.iArrFld[i18 - 1] -= (int) 114L;
                i21 = 1;
                do {
                    Test0443.iFld -= (int) Test0443.instanceCount;
                    Test0443.iFld1 *= (int) fFld;
                    i1 >>= -6037;
                    if (Test0443.bFld) break;
                    switch (((i19 >>> 1) % 2) + 124) {
                        case 124:
                            try {
                                Test0443.iArrFld[i] = (i19 / -520692332);
                                Test0443.iFld1 = (i21 / Test0443.iFld1);
                                i1 = (Test0443.iFld % -24529);
                            } catch (ArithmeticException a_e) {
                            }
                            Test0443.byFld = (byte) Test0443.iFld;
                            Test0443.instanceCount >>= i1;
                            Test0443.iFld = i20;
                            break;
                        case 125:
                            s1 += (short) i21;
                            Test0443.dFld = i1;
                            i1 &= -5;
                            break;
                        default:
                            i1 *= i;
                    }
                } while (++i21 < 1);
            } while (--i18 > 0);
        }

        FuzzerUtils.out.println("i i1 i18 = " + i + "," + i1 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("s1 = " + s1);

        FuzzerUtils.out.println("Test0443.instanceCount Test0443.iFld Test0443.bFld = " + Test0443.instanceCount + "," + Test0443.iFld +
                "," + (Test0443.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0443.iFld1 Test0443.byFld fFld = " + Test0443.iFld1 + "," + Test0443.byFld + "," +
                Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0443.dFld sArrFld Test0443.iArrFld = " + Double.doubleToLongBits(Test0443.dFld) + "," +
                FuzzerUtils.checkSum(sArrFld) + "," + FuzzerUtils.checkSum(Test0443.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
