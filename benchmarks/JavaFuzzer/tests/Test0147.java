// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0147 {

    public static final int N = 400;

    public static long instanceCount = 0L;
    public static byte byFld = -78;
    public static int iFld = -235;
    public static int iFld1 = 211;
    public static long[] lArrFld = new long[N];
    public static float[] fArrFld = new float[N];
    public static byte[] byArrFld = new byte[N];
    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0147.lArrFld, -5300655344602649562L);
        FuzzerUtils.init(Test0147.fArrFld, -2.41F);
        FuzzerUtils.init(Test0147.byArrFld, (byte) -14);
    }

    public static void vMeth1(float f2, boolean b, boolean b1) {

        long l = -5L;
        int i5 = -14;
        int i6 = -11;
        int i7 = -4;
        int[][] iArr1 = new int[N][N];
        double d = -1.30233;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -106.807F);
        FuzzerUtils.init(iArr1, -12390);

        for (l = 7; l < 176; ++l) {
            i5 = 29949;
            f2 = Test0147.iFld;
            fArr[(int) (l)] -= -14;
            Test0147.lArrFld[(int) (l)] += Test0147.iFld;
            switch (((i5 >>> 1) % 8) + 82) {
                case 82:
                    i5 += (int) (((l * i5) + Test0147.iFld) - Test0147.byFld);
                    for (i6 = 1; i6 < 9; ++i6) {
                        iArr1[i6 - 1][i6 + 1] += (int) d;
                        iArr1[(int) (l - 1)][(int) (l)] -= i5;
                        Test0147.instanceCount *= i5;
                        try {
                            i5 = (i5 / 29030);
                            iArr1[(int) (l)][i6 - 1] = (126 / iArr1[(int) (l - 1)][(int) (l)]);
                            i7 = (-61626 % i7);
                        } catch (ArithmeticException a_e) {
                        }
                        Test0147.iFld += (i6 ^ i5);
                        Test0147.iFld -= (int) f2;
                        i7 += (int) 1.72174;
                    }
                    break;
                case 83:
                    i7 = i6;
                    break;
                case 84:
                    iArr1[(int) (l + 1)][(int) (l)] = Test0147.iFld;
                    break;
                case 85:
                    iArr1[(int) (l - 1)][(int) (l)] += 9;
                    break;
                case 86:
                    Test0147.byFld = (byte) -20543;
                    break;
                case 87:
                    Test0147.instanceCount = Test0147.instanceCount;
                    break;
                case 88:
                    i5 += (int) (((l * Test0147.iFld) + i7) - f2);
                case 89:
                    i7 = i5;
                default:
                    if (b1) continue;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + (b ? 1 : 0) + (b1 ? 1 : 0) + l + i5 + i6 + i7 +
                Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i3 = -48153;
        int i4 = -1770;
        int i8 = 49551;
        int i9 = -53809;
        int[] iArr = new int[N];
        boolean b2 = false;
        double d1 = -78.14957;

        FuzzerUtils.init(iArr, -43);

        Test0147.iFld /= (int) -4506018305088354211L;
        for (i3 = 20; i3 < 359; ++i3) {
            iArr[i3 + 1] = (++i4);
            vMeth1(25.261F, b2, b2);
            iArr[i3 - 1] += -46475;
            for (i8 = 1; 5 > i8; i8++) {
                i9 += (int) d1;
                i9 = Test0147.iFld;
                Test0147.iFld1 += (int) Test0147.instanceCount;
                Test0147.iFld += (i8 * i8);
            }
            Test0147.iFld = Test0147.iFld1;
            iArr[i3 + 1] -= (int) Test0147.instanceCount;
        }
        Test0147.fArrFld[(i9 >>> 1) % N] += Test0147.iFld1;
        Test0147.instanceCount = Test0147.instanceCount;
        i9 += -17952;
        vMeth_check_sum += i3 + i4 + (b2 ? 1 : 0) + i8 + i9 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(int i2) {

        float f1 = 2.599F;

        Test0147.lArrFld[(9 >>> 1) % N] = (long) (f1++);
        vMeth();
        vSmallMeth_check_sum += i2 + Float.floatToIntBits(f1);
    }

    public static void main(String[] strArr) {

        try {
            Test0147 _instance = new Test0147();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -3588;
        int i1 = -229;
        int i10 = -112;
        int i11 = 2845;
        int i12 = -157;
        int i13 = 36;
        int i14 = -79;
        int i15 = 231;
        int[] iArr2 = new int[N];
        float f3 = -120.751F;
        double d2 = 2.56580;
        short s = 27880;
        boolean b3 = true;

        FuzzerUtils.init(iArr2, 5);

        for (i = 4; i < 362; i += 3) {
            float f = -4.372F;
            f += ((Test0147.byFld + Test0147.lArrFld[i - 1]) << (Test0147.instanceCount++));
            for (int smallinvoc = 0; smallinvoc < 62; smallinvoc++) vSmallMeth(Test0147.iFld);
            Test0147.instanceCount += Test0147.instanceCount;
            Test0147.instanceCount = i1;
            Test0147.lArrFld[i] += Test0147.iFld;
        }
        iArr2[(Test0147.iFld1 >>> 1) % N] <<= i1;
        switch ((((Test0147.iFld1 >>> 1) % 1) * 5) + 79) {
            case 84:
                for (i10 = 7; i10 < 273; ++i10) {
                    for (i12 = i10; i12 < 94; i12++) {
                        Test0147.iFld += (i12 ^ i12);
                        f3 *= i13;
                        switch (((i >>> 1) % 1) + 98) {
                            case 98:
                                switch ((i10 % 2) + 91) {
                                    case 91:
                                        iArr2[i12 + 1] += -211;
                                        for (i14 = 1; i14 < 1; i14++) {
                                            i15 *= (int) d2;
                                            i11 += i14;
                                            if (b3) {
                                                Test0147.iFld1 += i14;
                                                Test0147.instanceCount -= 3;
                                                Test0147.byArrFld = FuzzerUtils.byte1array(N, (byte) -92);
                                                s -= s;
                                            } else if (b3) {
                                                i1 ^= -64;
                                            } else if (b3) {
                                                b3 = b3;
                                                i11 = i;
                                            }
                                            Test0147.iFld = (int) -765488366L;
                                            f3 += i14;
                                            Test0147.instanceCount += (i14 * i14);
                                        }
                                        i15 += (i12 ^ Test0147.instanceCount);
                                        break;
                                    case 92:
                                        Test0147.instanceCount += Test0147.iFld1;
                                        break;
                                    default:
                                        i11 -= Test0147.byFld;
                                }
                        }
                    }
                }
                break;
        }

        FuzzerUtils.out.println("i i1 i10 = " + i + "," + i1 + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("f3 i14 i15 = " + Float.floatToIntBits(f3) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("d2 s b3 = " + Double.doubleToLongBits(d2) + "," + s + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0147.instanceCount Test0147.byFld Test0147.iFld = " + Test0147.instanceCount + "," + Test0147.byFld +
                "," + Test0147.iFld);
        FuzzerUtils.out.println("Test0147.iFld1 Test0147.lArrFld Test0147.fArrFld = " + Test0147.iFld1 + "," +
                FuzzerUtils.checkSum(Test0147.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0147.fArrFld)));
        FuzzerUtils.out.println("Test0147.byArrFld = " + FuzzerUtils.checkSum(Test0147.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
