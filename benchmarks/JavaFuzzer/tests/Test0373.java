// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0373 {

    public static final int N = 400;

    public static long instanceCount = 3303155480L;
    public static volatile short sFld = -20840;
    public static volatile boolean[] bArrFld = new boolean[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0373.bArrFld, false);
    }

    public int iFld = -32;
    public volatile float fFld = 118.659F;
    public double dFld = -11.97575;

    public static void vMeth2(int i5) {

        int i6 = -202;
        int i7 = 5;
        int i8 = -1;
        int i9 = 11;
        int i10 = 11;
        int i11 = -65;
        int[] iArr1 = new int[N];
        double d1 = 2.117976;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, -5);
        FuzzerUtils.init(lArr, 1005634027L);

        for (i6 = 6; i6 < 211; ++i6) {
            for (i8 = 1; i8 < 8; ++i8) {
                try {
                    i9 = (43232 / i6);
                    i5 = (-180 % iArr1[i8 + 1]);
                    i5 = (-551323118 % i9);
                } catch (ArithmeticException a_e) {
                }
                iArr1[i6] += i7;
                for (i10 = 2; 1 < i10; --i10) {
                    float f1 = 0.842F;
                    switch ((i8 % 2) + 82) {
                        case 82:
                        case 83:
                            Test0373.instanceCount -= -44L;
                            i9 += i5;
                            i5 = (int) d1;
                        default:
                            Test0373.sFld = (short) i6;
                    }
                    iArr1[i8] += i5;
                    f1 = i6;
                    iArr1[i10 + 1] = (int) Test0373.instanceCount;
                    lArr = lArr;
                    i9 = (int) f1;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(double d) {

        int i = 9929;
        int i1 = -112;
        int i2 = 54060;
        int i3 = -55526;
        int i4 = 0;
        int i12 = -15654;
        int i13 = -28748;
        int[][] iArr = new int[N][N];
        float f = 39.807F;

        FuzzerUtils.init(iArr, -8);

        for (i = 8; i < 265; ++i) {
            switch ((i % 2) + 14) {
                case 14:
                    iArr[i + 1][i] = (int) ((Long.reverseBytes(Test0373.instanceCount) + (i2 - d)) - ((i2 - f) + f));
                    for (i3 = 1; i3 < 6; ++i3) {
                        byte by = -39;
                        vMeth2(i12);
                        switch ((i % 10) + 114) {
                            case 114:
                                i1 += i3;
                                i13 = i1;
                                i2 = i12;
                                break;
                            case 115:
                                Test0373.instanceCount >>= Test0373.instanceCount;
                                f -= i12;
                                break;
                            case 116:
                                f += i2;
                                Test0373.bArrFld[i3] = false;
                                break;
                            case 117:
                                i1 += (((i3 * i3) + i2) - i12);
                                i1 = 65;
                                break;
                            case 118:
                                if (false) break;
                            case 119:
                                i4 = by;
                                break;
                            case 120:
                                i13 = (int) Test0373.instanceCount;
                                break;
                            case 121:
                                Test0373.instanceCount = Test0373.sFld;
                            case 122:
                                i2 >>= i3;
                                break;
                            case 123:
                                i4 -= i1;
                                break;
                        }
                    }
                    break;
                case 15:
                    i13 <<= i3;
                    break;
                default:
                    d -= f;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + Float.floatToIntBits(f) + i3 + i4 + i12 + i13 +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        double d2 = 0.77147;
        int i14 = 14;
        int i15 = 124;
        int i16 = 11;
        int i17 = -7;
        int i18 = -15198;
        int i19 = 16666;
        int[][] iArr2 = new int[N][N];
        byte by1 = 127;
        float f2 = 0.252F;

        FuzzerUtils.init(iArr2, 98);

        vMeth1(d2);
        for (i14 = 3; i14 < 215; i14++) {
            iArr2[i14][i14] += (int) Test0373.instanceCount;
            i15 -= (int) d2;
            d2 += Test0373.sFld;
        }
        for (i16 = 15; i16 < 274; ++i16) {
            i15 += (i16 * i15);
            Test0373.instanceCount <<= i16;
            if (i15 != 0) {
                vMeth_check_sum += Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + by1 + Float.floatToIntBits(f2)
                        + i18 + i19 + FuzzerUtils.checkSum(iArr2);
                return;
            }
        }
        iArr2[(i14 >>> 1) % N][(i17 >>> 1) % N] *= by1;
        by1 = (byte) f2;
        for (i18 = 2; i18 < 165; ++i18) {
            Test0373.instanceCount = i16;
            i19 = (int) d2;
            if (i14 != 0) {
                vMeth_check_sum += Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + by1 + Float.floatToIntBits(f2)
                        + i18 + i19 + FuzzerUtils.checkSum(iArr2);
                return;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + by1 + Float.floatToIntBits(f2) + i18 +
                i19 + FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0373 _instance = new Test0373();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        boolean b = false;
        double d3 = 2.9460;
        int i20 = 14223;
        int i21 = -35;
        int i22 = -14;
        int i23 = -8751;
        int i24 = 45272;
        int i25 = 15105;
        int i26 = -95;
        int i27 = 10;
        int i28 = 6;
        int[] iArr3 = new int[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 72.402F);
        FuzzerUtils.init(iArr3, -20444);

        iFld += (int) ((169L * (iFld >>> iFld)) - Test0373.instanceCount);
        vMeth();
        if (b) {
            fFld = Test0373.sFld;
        }
        iFld = iFld;
        for (float f3 : fArr) {
            d3 %= (iFld | 1);
            d3 += iFld;
            iFld >>= iFld;
            Test0373.instanceCount -= 1204;
            if (b) {
                for (i20 = 63; i20 > 3; i20--) {
                    for (i22 = 1; i22 < 2; ++i22) {
                        i23 = i21;
                        i23 = i22;
                        iArr3[i20 - 1] %= (int) (Test0373.instanceCount | 1);
                        i23 = (int) Test0373.instanceCount;
                        d3 += iFld;
                        Test0373.instanceCount += (i22 * i22);
                        i23 <<= (int) -61509L;
                        i21 -= i23;
                    }
                    i23 = (int) Test0373.instanceCount;
                }
            } else {
                d3 += -51827;
                for (i24 = 1; i24 < 63; i24 += 3) {
                    fArr[i24] += i20;
                    for (i26 = 1; 4 > i26; i26++) {
                        iFld -= i23;
                    }
                }
                i28 = 1;
                while ((i28 += 3) < 63) {
                    i23 *= i21;
                    dFld = Test0373.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("b d3 i20 = " + (b ? 1 : 0) + "," + Double.doubleToLongBits(d3) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 fArr = " + i27 + "," + i28 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0373.instanceCount iFld Test0373.sFld = " + Test0373.instanceCount + "," + iFld + "," +
                Test0373.sFld);
        FuzzerUtils.out.println("fFld dFld Test0373.bArrFld = " + Float.floatToIntBits(fFld) + "," +
                Double.doubleToLongBits(dFld) + "," + FuzzerUtils.checkSum(Test0373.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
