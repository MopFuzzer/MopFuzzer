// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0841 {

    public static final int N = 400;

    public static long instanceCount = 6L;
    public static int iFld = -135;
    public static volatile int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0841.iArrFld, 3);
    }

    public byte byFld = 60;
    public long lFld = 207L;
    public float[] fArrFld = new float[N];

    public static void main(String[] strArr) {

        try {
            Test0841 _instance = new Test0841();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth2(float f1, int i) {

        int i1 = 13, i2 = -33975;
        long l1 = 7297108440975230193L;

        f1 *= i;
        for (i1 = 16; 371 > i1; ++i1) {
            Test0841.iFld += (((i1 * byFld) + l1) - f1);
        }
        fArrFld[(Test0841.iFld >>> 1) % N] -= f1;
        vMeth2_check_sum += Float.floatToIntBits(f1) + i + i1 + i2 + l1;
    }

    public void vMeth1() {

        float f2 = -22.897F;
        int i3 = 243, i4 = -11, i5 = 12598, i6 = -82, i7 = 9;
        double d = 36.105154;
        boolean b = true;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) 16);

        Test0841.iArrFld[(Test0841.iFld >>> 1) % N] += (byFld -= byArr[(-5 >>> 1) % N]);
        vMeth2(f2, Test0841.iFld);
        Test0841.instanceCount >>= Test0841.iFld;
        for (i3 = 14; 362 > i3; ++i3) {
            Test0841.iFld -= 1;
            i4 = i4;
            Test0841.iFld = (int) f2;
            d -= byFld;
            i5 = 1;
            while (++i5 < 5) {
                for (i6 = 1; i6 < 1; i6++) {
                    if (b) {
                        i7 *= i7;
                        i4 *= (int) Test0841.instanceCount;
                        f2 = i6;
                    } else if (b) {
                        i4 += 896;
                    } else {
                        i4 = (int) -10L;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + (b ? 1 :
                0) + FuzzerUtils.checkSum(byArr);
    }

    public void vMeth(long l, float f) {

        int i8 = -128, i9 = -226, i10 = 4, i11 = -58, i12 = 56, i13 = -35;
        short s = -182;
        boolean b1 = true;

        Test0841.iArrFld[(Test0841.iFld >>> 1) % N] *= (int) (((Test0841.iFld |= Test0841.iFld) - Long.reverseBytes(-11L)) * (Test0841.iFld
                *= (int) (87.561F - Test0841.iFld)));
        vMeth1();
        for (i8 = 128; i8 > 6; i8--) {
            Test0841.iFld >>= i8;
            Test0841.iFld = i8;
            for (i10 = 13; i10 > i8; --i10) {
                l = i10;
                l += (28932 + (i10 * i10));
                i9 = 0;
                i11 += (int) (51L + (i10 * i10));
                if (b1) {
                    Test0841.iFld += (((i10 * Test0841.iFld) + i11) - s);
                    for (i12 = 1; i12 > 1; i12 -= 3) {
                        Test0841.iArrFld[i10 - 1] /= (int) (l | 1);
                        s = (short) i9;
                    }
                } else if (b1) {
                    Test0841.instanceCount += i10;
                }
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + s + i12 + i13 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f3 = -58.488F;
        int i14 = 3581, i15 = 5, i16 = -28353, i17 = 6, i18 = -4452, i19 = 31, i20 = 8, i21 = 6542, i22 = -13, i23 = -214, i24 = 12, i25 = 2,
                i26 = 21052;
        short s1 = 5957;
        boolean b2 = false;
        long l2 = -1L;
        long[] lArr = new long[N];
        double d1 = -1.105286;

        FuzzerUtils.init(lArr, 1597852329L);

        vMeth(Test0841.instanceCount, f3);
        for (i14 = 2; i14 < 169; i14++) {
            s1 += (short) 1.42157;
        }
        for (i16 = 7; i16 < 171; ++i16) {
            Test0841.instanceCount += i15;
            Test0841.instanceCount -= i17;
            Test0841.iArrFld[i16 - 1] += 14;
            lArr[i16 + 1] = Test0841.instanceCount;
            i17 += (((i16 * i16) + i14) - Test0841.instanceCount);
        }
        Test0841.iArrFld[(i15 >>> 1) % N] ^= (int) Test0841.instanceCount;
        Test0841.iFld -= 0;
        for (i18 = 292; i18 > 12; i18 -= 2) {
            byFld += (byte) i16;
            i17 = (int) lFld;
            if (true) break;
            for (i20 = 3; i20 < 179; ++i20) {
                if (b2) {
                    for (i22 = 1; i22 < 2; i22++) {
                        i23 -= 61453;
                        i23 = i24;
                    }
                } else {
                    if (b2) {
                        i15 += (int) lFld;
                        for (l2 = 1; l2 < 2; ++l2) {
                            i17 += (int) l2;
                            Test0841.instanceCount = Test0841.iFld;
                            s1 = (short) i24;
                            f3 = i22;
                            try {
                                i17 = (-9 % i15);
                                i25 = (49565 / i17);
                                i15 = (i17 / i26);
                            } catch (ArithmeticException a_e) {
                            }
                            i26 += (int) (l2 | i15);
                        }
                        d1 = lFld;
                    } else {
                        Test0841.iFld = (int) Test0841.instanceCount;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f3 i14 i15 = " + Float.floatToIntBits(f3) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("s1 i16 i17 = " + s1 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 b2 l2 = " + i24 + "," + (b2 ? 1 : 0) + "," + l2);
        FuzzerUtils.out.println("i25 i26 d1 = " + i25 + "," + i26 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0841.instanceCount Test0841.iFld byFld = " + Test0841.instanceCount + "," + Test0841.iFld + "," +
                byFld);
        FuzzerUtils.out.println("lFld Test0841.iArrFld fArrFld = " + lFld + "," + FuzzerUtils.checkSum(Test0841.iArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
