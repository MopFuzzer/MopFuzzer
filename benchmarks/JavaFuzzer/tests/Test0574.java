// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test0574 {

    public static final int N = 400;

    public static long instanceCount = -12L;
    public static double dFld = 0.11314;
    public static float fFld = 0.698F;
    public static short sFld = 12327;
    public static boolean bFld = false;
    public static int[][] iArrFld = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0574.iArrFld, 72);
    }

    public long[] lArrFld = new long[N];

    public static void vMeth1(long l, int i2, int i3) {

        int i4 = -9, i5 = -177, i6 = -14, i7 = 7;
        float f = 0.1016F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 909077820L);

        i3 >>= (int) Test0574.instanceCount;
        l = i3;
        i2 = -34;
        for (i4 = 7; i4 < 349; i4++) {
            i3 *= (int) 7L;
            for (i6 = 1; i6 < 5; i6++) {
                lArr[i4 + 1] -= i5;
                i2 &= 88;
                i5 -= i4;
                i2 = (int) f;
                i2 += (int) -2280642502L;
                i3 = i4;
            }
        }
        vMeth1_check_sum += l + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1) {

        int i8 = -41090, i9 = 85, i10 = 131, i11 = 11, i12 = 100, i13 = -106;
        double d1 = -90.56268;
        byte by = 95;

        vMeth1(Test0574.instanceCount, i1, i1);
        i8 = 1;
        while (++i8 < 144) {
            Test0574.dFld += i8;
            i1 *= i8;
        }
        for (d1 = 353; d1 > 12; d1 -= 3) {
            Test0574.instanceCount += i9;
            i1 *= 43088;
            for (i10 = 1; i10 < 14; i10++) {
                Test0574.instanceCount = i8;
                for (i12 = 1; 2 > i12; i12 += 2) {
                    switch (((i10 >>> 1) % 5) + 108) {
                        case 108:
                            by += (byte) (i12 + i13);
                            Test0574.fFld += (((i12 * Test0574.fFld) + Test0574.instanceCount) - i1);
                        case 109:
                            i1 += i12;
                            Test0574.iArrFld[i12 - 1] = Test0574.iArrFld[i12];
                            break;
                        case 110:
                            Test0574.instanceCount += (((i12 * Test0574.instanceCount) + i12) - i1);
                            break;
                        case 111:
                            Test0574.instanceCount += (((i12 * Test0574.instanceCount) + i8) - i8);
                            break;
                        case 112:
                            Test0574.instanceCount &= i13;
                            break;
                    }
                }
            }
        }
        long meth_res = i1 + i8 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 + by;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(double d, int i) {

        int i14 = 24615;
        int i15 = 14932;
        int i16 = 205;
        int i17 = -201;
        int i18 = 13;
        int i19 = -240;
        int[] iArr = new int[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -1.69611);
        FuzzerUtils.init(iArr, -77);

        dArr[(i >>> 1) % N] = (d -= d);
        Test0574.instanceCount *= i;
        iArr[(i >>> 1) % N] += iMeth(i);
        d -= -3644873107166492862L;
        for (i14 = 1; i14 < 342; ++i14) {
            for (i16 = 1; 5 > i16; ++i16) {
                Test0574.instanceCount *= 8;
                i17 += i14;
                i += (i16 * Test0574.instanceCount);
                i -= i16;
                for (i18 = 1; i18 < 2; i18++) {
                    Test0574.instanceCount += (((i18 * i14) + i18) - i);
                    Test0574.instanceCount += (165L + (i18 * i18));
                    i17 *= i18;
                    Test0574.iArrFld[i18 + 1][(159 >>> 1) % N] += i18;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i14 + i15 + i16 + i17 + i18 + i19 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0574 _instance = new Test0574();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = 17768, i21 = 18715, i22 = -25, i23 = -39414, i24 = 25085, i25 = 31102, i26 = -4, i27 = -19, i28 = 31319, i29 = -228;
        long l1 = -7L;
        float[] fArr = new float[N];
        double[][] dArr1 = new double[N][N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(fArr, 2.970F);
        FuzzerUtils.init(dArr1, -46.56358);
        FuzzerUtils.init(bArr, false);

        vMeth(Test0574.dFld, i20);
        for (i21 = 7; i21 < 272; ++i21) {
            i20 = i22;
            fArr[i21] = 11;
            i22 = (int) Test0574.instanceCount;
            Test0574.sFld >>= (short) 58L;
            dArr1[i21 - 1][i21 - 1] -= i22;
            Test0574.fFld -= Test0574.instanceCount;
            Test0574.fFld += -50413;
        }
        i23 = 1;
        do {
            i22 += (int) 1990025149L;
            i24 = 1;
            do {
                Test0574.iArrFld[i23 - 1][i24 + 1] += i22;
                i20 += i24;
                Test0574.fFld += ((long) i24 ^ (long) i21);
                for (l1 = 1; l1 > 1; --l1) {
                    Test0574.instanceCount = i20;
                    i22 += (int) (l1 * l1);
                    bArr[i24] = Test0574.bFld;
                    i25 <<= i25;
                    Test0574.instanceCount = -11;
                }
            } while (++i24 < 132);
            Test0574.instanceCount = i22;
        } while (++i23 < 190);
        for (i26 = 4; i26 < 232; i26++) {
            for (i28 = 4; i28 < 110; i28++) {
                i27 = 4;
                lArrFld[i28] = i22;
                Test0574.instanceCount &= -138L;
                if (false) break;
            }
            Test0574.iArrFld[i26 - 1][i26] -= (int) Test0574.fFld;
            Test0574.instanceCount += (long) Test0574.dFld;
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 l1 = " + i23 + "," + i24 + "," + l1);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 fArr = " + i28 + "," + i29 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("dArr1 bArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," +
                FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0574.instanceCount Test0574.dFld Test0574.fFld = " + Test0574.instanceCount + "," +
                Double.doubleToLongBits(Test0574.dFld) + "," + Float.floatToIntBits(Test0574.fFld));
        FuzzerUtils.out.println("Test0574.sFld Test0574.bFld Test0574.iArrFld = " + Test0574.sFld + "," + (Test0574.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0574.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
