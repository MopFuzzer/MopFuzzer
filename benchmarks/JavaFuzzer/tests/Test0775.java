// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0775 {

    public static final int N = 400;

    public static long instanceCount = 4939744670922091369L;
    public static byte byFld = 71;
    public static short sFld = -6983;
    public static float fFld = 1.721F;
    public static boolean bFld = false;
    public static int[] iArrFld = new int[N];
    public static int[] iArrFld1 = new int[N];
    public static long[][] lArrFld = new long[N][N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0775.iArrFld, -12);
        FuzzerUtils.init(Test0775.iArrFld1, 11);
        FuzzerUtils.init(Test0775.lArrFld, -4L);
    }

    public static void vMeth1(long l1) {

        double d = 0.28666;
        int i8 = 242, i9 = -21070, i10 = -59617, i11 = -252, i12 = -39, i13 = 34081;
        boolean b1 = false;

        d %= (i8 | 1);
        Test0775.instanceCount -= i8;
        for (i9 = 10; i9 < 257; ++i9) {
            Test0775.lArrFld[i9][i9] <<= 30767;
            Test0775.iArrFld[i9] += Test0775.byFld;
            i8 += i11;
            i8 = (int) Test0775.instanceCount;
            i8 *= Test0775.byFld;
            if (b1) {
                Test0775.iArrFld1[i9 - 1] += i9;
            } else if (b1) {
                for (i12 = i9; 7 > i12; ++i12) {
                    Test0775.sFld += (short) 2;
                    l1 >>= i9;
                    Test0775.fFld -= i12;
                    if (b1) break;
                }
            } else if (b1) {
                l1 = (long) 1.114F;
            } else {
                i10 = i10;
            }
        }
        vMeth1_check_sum += l1 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0);
    }

    public static void vMeth(int i4, int i5) {

        float f = -112.358F;
        int i6 = 3, i7 = 31795, i14 = -52751, i15 = 8, i16 = 9;

        Test0775.iArrFld1[(203 >>> 1) % N] = (int) ((i5 - f) + i5);
        for (i6 = 12; i6 < 196; i6++) {
            f += (((i6 * f) + i5) - Test0775.instanceCount);
            vMeth1(Test0775.instanceCount);
            for (i14 = 1; 9 > i14; ++i14) {
                i7 += (int) Test0775.instanceCount;
            }
            i4 += (i6 * i5);
            Test0775.fFld /= (Test0775.instanceCount | 1);
            Test0775.lArrFld[i6 - 1][i6] >>= 7;
        }
        Test0775.instanceCount = Test0775.instanceCount;
        i16 = 1;
        do {
            i15 -= (int) f;
        } while (++i16 < 175);
        Test0775.iArrFld1 = Test0775.iArrFld;
        Test0775.sFld |= (short) i16;
        Test0775.lArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] *= i6;
        vMeth_check_sum += i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + i14 + i15 + i16;
    }

    public static int iMeth(int i1, int i2, long l) {

        boolean b = true;
        double d1 = 118.113329;
        int i17 = -194, i18 = 8;

        l -= Test0775.iArrFld[(153 >>> 1) % N];
        for (int i3 : Test0775.iArrFld) {
            b = b;
            vMeth(i2, i2);
            if (true) {
                l >>= i2;
                Test0775.iArrFld1[(i2 >>> 1) % N] = -58868;
            } else if (b) {
                d1 = -156;
                i2 = i3;
            } else {
                for (i17 = 1; i17 < 4; i17++) {
                    Test0775.fFld += i1;
                    Test0775.instanceCount += (((i17 * i18) + i17) - l);
                }
                Test0775.iArrFld1 = Test0775.iArrFld;
                Test0775.instanceCount -= i18;
                Test0775.fFld = i3;
            }
        }
        long meth_res = i1 + i2 + l + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0775 _instance = new Test0775();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 6170, i20 = -15639, i21 = 12, i22 = -14, i23 = -26395;
        float f1 = 0.340F;
        float[] fArr = new float[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 2.10284);
        FuzzerUtils.init(fArr, 0.651F);

        i = 1;
        do {
            iMeth(i, i, Test0775.instanceCount);
            for (i20 = 6; 144 > i20; i20++) {
                double d2 = -26.52115;
                try {
                    i21 = (21996 % i20);
                    i21 = (-5707 % i21);
                    Test0775.iArrFld1[i20] = (i % 48253);
                } catch (ArithmeticException a_e) {
                }
                Test0775.fFld += i20;
                i21 += (int) Test0775.fFld;
                switch ((i % 3) + 6) {
                    case 6:
                        dArr[i] -= -127L;
                        break;
                    case 7:
                        i21 = (int) Test0775.instanceCount;
                        break;
                    case 8:
                        for (f1 = 1; f1 < 2; ++f1) {
                            if (Test0775.bFld) break;
                            Test0775.byFld += (byte) ((long) f1 | i22);
                            i21 += (int) (f1 * Test0775.instanceCount);
                            Test0775.fFld = i21;
                            Test0775.instanceCount = i22;
                            Test0775.instanceCount += (long) (f1 + i21);
                            i21 *= (int) 1.318F;
                            fArr[(int) (f1)] -= i21;
                        }
                        i22 -= (int) d2;
                    default:
                        Test0775.fFld *= f1;
                        Test0775.byFld += (byte) Test0775.instanceCount;
                        Test0775.instanceCount >>= i21;
                }
                Test0775.iArrFld1[i - 1] = (int) Test0775.instanceCount;
                Test0775.instanceCount = i20;
                i21 += (i20 * i20);
            }
            Test0775.instanceCount += (((i * i) + i20) - i22);
            Test0775.lArrFld[i + 1][i - 1] = i21;
            i23 = 1;
            while (++i23 < 144) {
                Test0775.iArrFld[i23 + 1] = i21;
                Test0775.instanceCount = i23;
            }
        } while (++i < 174);

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("f1 i22 i23 = " + Float.floatToIntBits(f1) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("dArr fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0775.instanceCount Test0775.byFld Test0775.sFld = " + Test0775.instanceCount + "," + Test0775.byFld +
                "," + Test0775.sFld);
        FuzzerUtils.out.println("Test0775.fFld Test0775.bFld Test0775.iArrFld = " + Float.floatToIntBits(Test0775.fFld) + "," +
                (Test0775.bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(Test0775.iArrFld));
        FuzzerUtils.out.println("Test0775.iArrFld1 Test0775.lArrFld = " + FuzzerUtils.checkSum(Test0775.iArrFld1) + "," +
                FuzzerUtils.checkSum(Test0775.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
