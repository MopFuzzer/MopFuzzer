// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0801 {

    public static final int N = 400;

    public static long instanceCount = 8137630398560577931L;
    public static int iFld = 41;
    public static byte byFld = -37;
    public static boolean bFld = false;
    public static int[][] iArrFld1 = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0801.iArrFld1, -3);
    }

    public int iFld1 = 184;
    public short sFld = 1356;
    public int iFld2 = -165;
    public int[] iArrFld = new int[N];

    public static double dMeth(int i4) {

        double d1 = 0.122471;

        d1 *= i4;
        long meth_res = i4 + Double.doubleToLongBits(d1);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static byte byMeth(long l1) {

        double d = -82.79488;
        int i5 = 13, i6 = -193, i7 = 56840, i8 = -5480, i9 = -40, i10 = 8;
        float f1 = -126.893F;
        byte by1 = -48;

        Test0801.iFld = (int) (((Test0801.instanceCount + d) - Test0801.iArrFld1[(Test0801.iFld >>> 1) % N][(Test0801.iFld >>> 1) % N]) +
                dMeth(56741));
        for (i5 = 12; 241 > i5; ++i5) {
            Test0801.iFld += (int) f1;
            i6 = 48486;
            i7 = 7;
            do {
                f1 *= i6;
                Test0801.iFld = Test0801.iFld;
                i6 += (int) -110.974F;
                i6 = Test0801.iFld;
            } while (--i7 > 0);
            f1 -= i6;
            switch (((i5 % 9) * 5) + 2) {
                case 33:
                    for (i8 = 1; i8 < 7; i8++) {
                        i9 -= i7;
                        i6 += i8;
                        Test0801.byFld *= (byte) Test0801.iFld;
                    }
                    break;
                case 9:
                    by1 >>= (byte) i6;
                case 4:
                    l1 += (i5 * i5);
                    break;
                case 7:
                    Test0801.iArrFld1[i5 - 1] = FuzzerUtils.int1array(N, (int) 115);
                    break;
                case 39:
                case 27:
                    Test0801.iFld -= 15512;
                    break;
                case 37:
                    try {
                        i10 = (135 / i10);
                        i6 = (181 / i8);
                        i6 = (i9 % Test0801.iArrFld1[i5][i5]);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 43:
                    Test0801.iArrFld1[i5 + 1][i5 - 1] >>= (int) Test0801.instanceCount;
                    break;
                case 22:
                    Test0801.instanceCount = i10;
                    break;
                default:
                    i9 >>= (int) l1;
            }
        }
        long meth_res = l1 + Double.doubleToLongBits(d) + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + by1 + i10;
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0801 _instance = new Test0801();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(int i2) {

        float f = 0.832F;
        int i3 = -8, i11 = 1, i12 = -78, i13 = 220, i14 = 33937, i15 = 243;
        long l2 = -45008L;
        long[] lArr = new long[N];
        boolean b = true;

        FuzzerUtils.init(lArr, -63820L);

        iArrFld[(i2 >>> 1) % N] >>>= (int) ((i2 >>>= (-(i2 * i2))) + ((i2 + 0.110529) - (i2 / (Test0801.instanceCount |
                1))));
        Test0801.instanceCount = (long) ((--i2) * ((f + 11) + (i3 >> Test0801.iFld)));
        byMeth(Test0801.instanceCount);
        i3 = (int) Test0801.instanceCount;
        for (i11 = 6; i11 < 136; ++i11) {
            for (l2 = 1; l2 < 12; l2 += 2) {
                b = b;
                switch ((int) ((l2 % 10) + 45)) {
                    case 45:
                        Test0801.iArrFld1[(int) (l2)][(int) (l2 + 1)] = i3;
                        i13 *= i12;
                        for (i14 = 1; i14 < 3; ++i14) {
                            Test0801.instanceCount += Test0801.iFld;
                            i2 -= i3;
                            i2 = (int) l2;
                            i13 *= -68;
                        }
                        break;
                    case 46:
                        lArr[(int) (l2 - 1)] *= (long) f;
                        break;
                    case 47:
                        i3 += iFld1;
                        break;
                    case 48:
                        f += -1.582F;
                        break;
                    case 49:
                        i2 *= iFld1;
                    case 50:
                        Test0801.iArrFld1[i11 - 1] = Test0801.iArrFld1[i11 - 1];
                    case 51:
                        Test0801.instanceCount += l2;
                        break;
                    case 52:
                        if (b) break;
                        break;
                    case 53:
                        Test0801.byFld = (byte) i3;
                        break;
                    case 54:
                        i15 = i14;
                        break;
                }
            }
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + i3 + i11 + i12 + l2 + i13 + (b ? 1 : 0) + i14 + i15 +
                FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i = -30313;
        int i1 = -36912;
        int i16 = 29912;
        int i17 = 8;
        int i18 = 2;
        int i19 = 59923;
        int i20 = -11;
        int[] iArr = new int[N];
        byte by = 13;
        long l = 100L;
        float f2 = -1.162F;
        short[] sArr = new short[N];

        FuzzerUtils.init(iArr, 18777);
        FuzzerUtils.init(sArr, (short) 26320);

        for (i = 13; i < 372; i++) {
            i1 += (int) (iArr[i + 1] - (7L >> by));
            l = 1;
            while (++l < 70) {
                vMeth(-47);
                Test0801.iFld = sFld;
            }
            i1 -= iFld1;
            for (i16 = 70; 2 < i16; i16 -= 3) {
                i17 += (i16 * i16);
                for (i18 = 4; i18 > i; i18--) {
                    double d2 = 1.83069;
                    if (Test0801.bFld) {
                        iFld1 += (int) (38.852F + (i18 * i18));
                        Test0801.byFld -= (byte) i17;
                        i20 -= 0;
                    } else if (Test0801.bFld) {
                        Test0801.iFld *= (int) f2;
                        if (false) continue;
                        switch ((i16 % 1) + 113) {
                            case 113:
                                by += (byte) d2;
                                i19 -= i19;
                                break;
                            default:
                        }
                        sArr[i18 - 1] /= (short) ((long) (f2) | 1);
                    } else {
                        i20 += i16;
                        i17 += (i18 + i20);
                        Test0801.instanceCount = l;
                    }
                    Test0801.iArrFld1[i16 - 1][i16 - 1] *= 3;
                    iFld1 = i1;
                    iArr[i + 1] &= Test0801.iFld;
                    switch (((i16 >>> 1) % 7) + 124) {
                        case 124:
                            sFld = (short) Test0801.iFld;
                            break;
                        case 125:
                        case 126:
                            f2 += 2.561F;
                        case 127:
                            Test0801.bFld = Test0801.bFld;
                            Test0801.instanceCount += (((i18 * l) + i1) - iFld2);
                            break;
                        case 128:
                            Test0801.iFld += i18;
                            break;
                        case 129:
                            Test0801.iArrFld1[i16] = iArr;
                        case 130:
                            i1 *= (int) -4106323369L;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 by = " + i + "," + i1 + "," + by);
        FuzzerUtils.out.println("l i16 i17 = " + l + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("f2 iArr sArr = " + Float.floatToIntBits(f2) + "," + FuzzerUtils.checkSum(iArr) + "," +
                FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0801.instanceCount Test0801.iFld Test0801.byFld = " + Test0801.instanceCount + "," + Test0801.iFld +
                "," + Test0801.byFld);
        FuzzerUtils.out.println("iFld1 sFld Test0801.bFld = " + iFld1 + "," + sFld + "," + (Test0801.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld2 iArrFld Test0801.iArrFld1 = " + iFld2 + "," + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0801.iArrFld1));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
