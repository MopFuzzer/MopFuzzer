// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test0989 {

    public static final int N = 400;

    public static long instanceCount = -3L;
    public static int iFld = -122;
    public static long lFld = -117L;
    public static long[] lArrFld = new long[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0989.lArrFld, 171L);
        FuzzerUtils.init(Test0989.iArrFld, 3939);
    }

    public byte byFld = -84;
    public float fFld = -10.160F;

    public static void vMeth(int i) {

        byte by = 111;

        i = (int) (((i + Test0989.instanceCount) + (by++)) + Test0989.lArrFld[(i >>> 1) % N]);
        vMeth_check_sum += i + by;
    }

    public static int iMeth(double d1, float f) {

        byte by2 = 8;
        int i7 = -28600, i8 = -6254, i9 = 10, i10 = 13, i11 = 48220;

        Test0989.iFld = (int) Test0989.instanceCount;
        Test0989.instanceCount = Test0989.iFld;
        by2 = (byte) Test0989.instanceCount;
        for (i7 = 4; i7 < 249; i7++) {
            Test0989.iFld += (-118 + (i7 * i7));
            for (i9 = i7; 7 > i9; ++i9) {
                Test0989.iArrFld[i9 + 1] = i7;
                i10 += (i9 - Test0989.instanceCount);
                if (true) {
                    Test0989.iArrFld[i7 - 1] += (int) Test0989.instanceCount;
                    Test0989.instanceCount = Test0989.instanceCount;
                    i11 = 1;
                    do {
                        Test0989.iArrFld[i9 + 1] -= (int) f;
                        Test0989.lArrFld[i11] = i11;
                        Test0989.iFld += i11;
                    } while (++i11 < 1);
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + by2 + i7 + i8 + i9 + i10 + i11;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static double dMeth(long l, int i6) {

        double d2 = 0.19920;
        int i12 = -135, i13 = -63789, i14 = -2, i15 = 184, i16 = 40698, i17 = 55;
        float f1 = 0.907F;
        boolean b = false;

        Test0989.iFld = iMeth(d2, 0.116F);
        l *= i6;
        for (i12 = 9; i12 < 186; i12++) {
            Test0989.iFld += (((i12 * i6) + i13) - i13);
            Test0989.iFld = (int) Test0989.instanceCount;
        }
        Test0989.iFld -= i6;
        for (i14 = 14; i14 < 388; i14++) {
            for (i16 = 1; i16 < 5; i16++) {
                i13 = (int) 102L;
                Test0989.iArrFld[i16 + 1] = (int) 48.374F;
                i13 >>= i12;
            }
            i6 += (int) f1;
        }
        if (false) {
            i17 = -35314;
            i17 = Test0989.iFld;
        } else if (b) {
            Test0989.iFld = i15;
        } else {
            i17 -= (int) Test0989.lFld;
        }
        long meth_res = l + i6 + Double.doubleToLongBits(d2) + i12 + i13 + i14 + i15 + i16 + i17 +
                Float.floatToIntBits(f1) + (b ? 1 : 0);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static long lMeth(double d) {

        int i4 = 12, i5 = -48726;
        byte by1 = -127;

        Test0989.iFld = (int) Test0989.instanceCount;
        Test0989.iFld = (--Test0989.iFld);
        for (i4 = 9; 149 > i4; ++i4) {
            Test0989.instanceCount |= (Test0989.instanceCount + Test0989.iFld);
            Test0989.instanceCount -= (long) ((--i5) - ((i5 + by1) - (d--)));
            vMeth((int) (((Test0989.iArrFld[i4 - 1]++) - (i4 * i5)) - ((i5++) + dMeth(3501334980L, 106))));
        }
        long meth_res = Double.doubleToLongBits(d) + i4 + i5 + by1;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0989 _instance = new Test0989();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i1 = 46619, i2 = 10, i3 = -5179, i18 = -200, i19 = 9521, i20 = -44, i21 = 6, i22 = 10;
        double d3 = 116.66676;
        double[] dArr = new double[N];
        float f2 = -2.838F;
        boolean b1 = true;

        FuzzerUtils.init(dArr, 1.48666);

        vMeth(i1);
        if (false) {
            for (i2 = 9; i2 < 268; i2++) {
                byFld += (byte) (lMeth(d3) * i1);
            }
            i1 = i2;
            i1 *= i3;
        }
        try {
            Test0989.instanceCount += i2;
            i3 = i2;
            d3 = i3;
            for (i18 = 1; i18 < (241 + 400); ++i18) {
                i3 %= (int) (Test0989.instanceCount | 1);
                for (i20 = i18; i20 < (63 + 400); ++i20) {
                    for (f2 = 1; f2 < (1 + 400); ++f2) {
                        switch ((int) ((f2 % 7) + 111)) {
                            case 111:
                                fFld += (f2 * f2);
                                Test0989.lFld += -16339;
                                switch ((int) ((f2 % 2) + 16)) {
                                    case 16:
                                        Test0989.iArrFld[i20 + 1] = (int) Test0989.instanceCount;
                                        break;
                                    case 17:
                                        i22 += (9 + (f2 * f2));
                                        i22 = Test0989.iFld;
                                        b1 = b1;
                                        dArr[i20] -= 60.318F;
                                        break;
                                }
                                i22 *= (int) 11809L;
                                break;
                            case 112:
                                Test0989.lArrFld[i20 - 1] = -47162;
                                Test0989.instanceCount += (long) ((long) f2 ^ byFld);
                                Test0989.iArrFld = Test0989.iArrFld;
                                i3 = (int) Test0989.lFld;
                            case 113:
                                i22 = (int) fFld;
                            case 114:
                                Test0989.iFld = i18;
                                break;
                            case 115:
                                Test0989.iFld *= (int) Test0989.lFld;
                                break;
                            case 116:
                                i3 += (int) (((f2 * fFld) + i3) - i21);
                                break;
                            case 117:
                                Test0989.lArrFld[i20 + 1] = (long) -2.66387;
                                break;
                            default:
                                byFld += (byte) f2;
                        }
                    }
                }
            }
        } catch (ArrayIndexOutOfBoundsException exc1) {
            i21 &= i2;
        }

        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("d3 i18 i19 = " + Double.doubleToLongBits(d3) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 f2 = " + i20 + "," + i21 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i22 b1 dArr = " + i22 + "," + (b1 ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0989.instanceCount byFld Test0989.iFld = " + Test0989.instanceCount + "," + byFld + "," +
                Test0989.iFld);
        FuzzerUtils.out.println("Test0989.lFld fFld Test0989.lArrFld = " + Test0989.lFld + "," + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0989.lArrFld));
        FuzzerUtils.out.println("Test0989.iArrFld = " + FuzzerUtils.checkSum(Test0989.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  dMeth ->  dMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
