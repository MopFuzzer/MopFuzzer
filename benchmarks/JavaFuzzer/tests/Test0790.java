// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0790 {

    public static final int N = 400;

    public static long instanceCount = -64800L;
    public static short sFld = -12515;
    public static float fFld = -1.714F;
    public static long[] lArrFld = new long[N];
    public static double[] dArrFld = new double[N];
    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0790.lArrFld, -1800923630406713872L);
        FuzzerUtils.init(Test0790.dArrFld, 50.54318);
    }

    public static void vSmallMeth() {

        int i2 = 38968;

        Test0790.instanceCount = (i2 >>= i2);
        i2 *= (int) (((i2 * Test0790.instanceCount) + (i2 + i2)) + i2);
        vSmallMeth_check_sum += i2;
    }

    public static int iMeth1() {

        int i12 = 12;

        i12 -= -181;
        i12 *= i12;
        long meth_res = i12;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static double dMeth(int i11, double d2) {

        int i13 = -19740, i14 = -14;
        float f1 = -55.421F;
        boolean b = false;

        for (double d3 : Test0790.dArrFld) {
            i11 -= (iMeth1() + i11);
            for (i13 = 1; i13 < 4; i13++) {
                byte by2 = -72;
                i11 += (int) f1;
                i11 -= (int) d2;
                f1 += (i13 * i13);
                i11 >>= i11;
                switch ((i13 % 3) + 108) {
                    case 108:
                        f1 += (((i13 * i14) + i14) - by2);
                        Test0790.instanceCount *= 11;
                        break;
                    case 109:
                        i11 = (int) Test0790.instanceCount;
                        break;
                    case 110:
                        i14 >>= i13;
                        i14 = (int) Test0790.instanceCount;
                        i14 = i14;
                        b = b;
                        break;
                    default:
                        i11 += i14;
                }
            }
        }
        long meth_res = i11 + Double.doubleToLongBits(d2) + i13 + i14 + Float.floatToIntBits(f1) + (b ? 1 : 0);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static int iMeth(int i10, double d1) {

        byte by1 = -86;
        int i15 = -186;
        int i16 = 1;
        int i17 = 216;
        int i18 = 6;
        int i19 = 7547;
        int i20 = -121;
        int[][] iArr = new int[N][N];

        FuzzerUtils.init(iArr, 5);

        Test0790.lArrFld[(i10 >>> 1) % N] = (++i10);
        by1 = (byte) (Test0790.dArrFld[(-6 >>> 1) % N] * ((i10 + by1) << (65 >> i10)));
        i10 -= (int) (iArr[(i10 >>> 1) % N][(i10 >>> 1) % N] % ((long) (dMeth(i10, 0.81624)) | 1));
        i10 = (int) Test0790.instanceCount;
        for (i15 = 11; i15 < 295; i15++) {
            for (i17 = 1; i17 < 6; ++i17) {
                Test0790.sFld *= (short) 9106;
                Test0790.fFld = 6;
                for (i19 = 1; i19 < 2; ++i19) {
                    i18 >>= i17;
                    Test0790.instanceCount <<= i15;
                    iArr[i19 - 1][i19 + 1] <<= i19;
                    iArr[i15 + 1][i17] += i20;
                    iArr[i15 - 1][i15 + 1] += (int) 74L;
                    i18 += (i19 - by1);
                }
            }
        }
        long meth_res = i10 + Double.doubleToLongBits(d1) + by1 + i15 + i16 + i17 + i18 + i19 + i20 +
                FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0790 _instance = new Test0790();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 14;
        int i1 = 189;
        int i3 = 5;
        int i4 = 4;
        int i5 = 11;
        int i6 = -21187;
        int i7 = 12;
        int i8 = 49;
        int i9 = 29971;
        int i21 = -199;
        int i22 = 5;
        int i23 = -9;
        int[] iArr1 = new
                int[N];
        float f = 0.553F;
        float[] fArr = new float[N];
        double d = -114.109206;
        byte by = -30;

        FuzzerUtils.init(fArr, 78.796F);
        FuzzerUtils.init(iArr1, 10998);

        for (i = 4; 135 > i; i++) {
            for (int smallinvoc = 0; smallinvoc < 62; smallinvoc++) vSmallMeth();
            f = Test0790.instanceCount;
            i1 = (++i1);
            vSmallMeth();
            for (i3 = 8; i3 < 191; i3++) {
                f += fArr[i + 1];
            }
        }
        vSmallMeth();
        for (i5 = 4; i5 < 142; ++i5) {
            vSmallMeth();
            i6 += (-Math.abs(Math.abs(i3)));
            for (d = 5; d < 182; ++d) {
                fArr = (fArr = (fArr = (fArr = fArr)));
                vSmallMeth();
                for (i8 = 1; i8 < 2; ++i8) {
                    i7 = (int) ((Test0790.sFld--) * (Math.abs(Test0790.instanceCount) * (i4 - i4)));
                    by &= (byte) Math.abs((i4--) - iMeth(i, -77.60107));
                    by = (byte) 30;
                    i7 += i8;
                    i4 = (int) Test0790.fFld;
                }
                i7 += (int) 17.31F;
                for (i21 = 2; i21 > 1; i21 -= 2) {
                    boolean b1 = false;
                    try {
                        iArr1[i5 + 1] = (25254 / i8);
                        i7 = (-653244566 / i6);
                        i4 = (i / -75);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0790.lArrFld[(int) (d)] += i4;
                    try {
                        i6 = (-10201 % i22);
                        i4 = (iArr1[i5] % i21);
                        i23 = (23538 / i8);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0790.sFld = (short) i9;
                    if (b1) continue;
                    Test0790.instanceCount = i21;
                    if (b1) continue;
                    i1 -= i;
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("i6 d i7 = " + i6 + "," + Double.doubleToLongBits(d) + "," + i7);
        FuzzerUtils.out.println("i8 i9 by = " + i8 + "," + i9 + "," + by);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("fArr iArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
                FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0790.instanceCount Test0790.sFld Test0790.fFld = " + Test0790.instanceCount + "," + Test0790.sFld +
                "," + Float.floatToIntBits(Test0790.fFld));
        FuzzerUtils.out.println("Test0790.lArrFld Test0790.dArrFld = " + FuzzerUtils.checkSum(Test0790.lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0790.dArrFld)));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
