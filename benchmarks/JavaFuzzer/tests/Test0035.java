// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test0035 {

    public static final int N = 400;

    public static long instanceCount = 1061230953571730190L;
    public static volatile int iFld = -87;
    public static boolean bFld = true;
    public static float fFld = 1.185F;
    public static int[] iArrFld = new int[N];
    public static byte[] byArrFld = new byte[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0035.iArrFld, 234);
        FuzzerUtils.init(Test0035.byArrFld, (byte) -46);
    }

    public long[][] lArrFld = new long[N][N];
    public short[] sArrFld = new short[N];

    public static void vMeth1(int i10) {

        int i11 = 60950, i12 = -243, i13 = -13;
        byte by1 = -89;
        long l1 = 2587121707L;
        long[] lArr = new long[N];
        short s1 = -8456;

        FuzzerUtils.init(lArr, -3112269121L);

        for (i11 = 6; 139 > i11; ++i11) {
            Test0035.iArrFld[i11 - 1] = i12;
            Test0035.byArrFld[i11 - 1] -= (byte) -18043;
            Test0035.bFld = Test0035.bFld;
            i10 = (int) 5L;
            by1 = (byte) -14784;
            i10 += i10;
            Test0035.fFld -= 24;
            i12 = (int) Test0035.instanceCount;
            for (l1 = i11; l1 < 12; ++l1) {
                switch ((int) ((l1 % 9) + 29)) {
                    case 29:
                        Test0035.iArrFld[(int) (l1 + 1)] = (int) -39342L;
                        i12 = (int) l1;
                        Test0035.iFld += (int) (((l1 * i10) + Test0035.fFld) - Test0035.iFld);
                    case 30:
                        lArr[i11] ^= Test0035.instanceCount;
                        break;
                    case 31:
                        Test0035.instanceCount += (((l1 * s1) + i10) - i13);
                        break;
                    case 32:
                        by1 = (byte) i10;
                        break;
                    case 33:
                        Test0035.instanceCount <<= s1;
                        break;
                    case 34:
                        i12 -= (int) Test0035.fFld;
                        break;
                    case 35:
                        Test0035.bFld = Test0035.bFld;
                        break;
                    case 36:
                        by1 >>= (byte) i11;
                    case 37:
                        i12 = i13;
                        break;
                    default:
                        i10 += (int) (((l1 * Test0035.fFld) + by1) - Test0035.instanceCount);
                }
            }
        }
        vMeth1_check_sum += i10 + i11 + i12 + by1 + l1 + i13 + s1 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i6) {

        int i7 = 12, i8 = -48282, i9 = -38691, i14 = -56, i15 = 122;
        double d = 0.35910;
        short s2 = 25354;

        i6 = (int) (--Test0035.instanceCount);
        i6 = (--i6);
        i6 = i6;
        for (i7 = 7; i7 < 152; i7++) {
            i8 >>= (int) (((i6 + i6) + Test0035.instanceCount) * ((Test0035.iFld = (int) Test0035.instanceCount) - Test0035.iArrFld[i7]));
            for (d = 1; d < 11; ++d) {
                vMeth1(Test0035.iFld);
                i9 += (int) d;
                switch (((i7 % 2) * 5) + 7) {
                    case 8:
                        if (Test0035.bFld) break;
                        break;
                    case 15:
                        i8 |= i9;
                        Test0035.iFld = s2;
                        break;
                }
                for (i14 = 1; i14 < 2; ++i14) {
                    i15 += i14;
                    Test0035.instanceCount += i7;
                }
            }
        }
        long meth_res = i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + s2 + i14 + i15;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(float f, long l, int i) {

        int i1 = 5, i2 = -4528, i3 = -2, i4 = -3, i5 = 90, i16 = 28;
        short s = -25900;

        for (i1 = 4; i1 < 146; i1 += 2) {
            byte by = -58;
            i2 *= (++i2);
            i += Math.max((int) (l * (i1 + 48210L)), (i <<= -1) - (i1 * i2));
            i = (i++);
            f /= ((by - (i * s)) | 1);
            i2 += (Test0035.iArrFld[i1] * (i = i1));
        }
        i3 = 1;
        do {
            for (i4 = 1; i4 < 6; ++i4) {
                i2 += iMeth(i);
                i16 = 1;
                do {
                    switch (((i3 % 7) * 5) + 109) {
                        case 111:
                            i *= i4;
                            i2 += (4 + (i16 * i16));
                            break;
                        case 141:
                            i5 <<= i4;
                            i += i16;
                            break;
                        case 136:
                            i -= i5;
                            break;
                        case 129:
                            Test0035.iFld *= 2;
                            break;
                        case 131:
                            Test0035.iFld += (i16 * f);
                            break;
                        case 123:
                            if (Test0035.bFld) continue;
                            break;
                        case 142:
                            i5 += (int) l;
                            break;
                    }
                } while (++i16 < 2);
            }
        } while (++i3 < 283);
        vMeth_check_sum += Float.floatToIntBits(f) + l + i + i1 + i2 + s + i3 + i4 + i5 + i16;
    }

    public static void main(String[] strArr) {

        try {
            Test0035 _instance = new Test0035();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i17 = 12844, i18 = 0, i19 = -24, i20 = 36762;
        byte by2 = -37;
        float f1 = 0.439F, f2 = 1.437F;
        short s3 = -18241;
        double d1 = -49.118545;

        vMeth(Test0035.fFld, -1366576615L, Test0035.iFld);
        for (i17 = 19; i17 < 344; i17++) {
            Test0035.fFld *= i18;
            switch ((i17 % 1) + 48) {
                case 48:
                    for (i19 = i17; i19 < 77; i19++) {
                        i18 = i19;
                        Test0035.fFld += 101;
                        by2 <<= (byte) Test0035.iFld;
                        i20 -= -12420;
                        switch (((Test0035.iFld >>> 1) % 5) + 47) {
                            case 47:
                                if (true) {
                                    f1 = 1;
                                    do {
                                        int i21 = -8;
                                        Test0035.iFld += i19;
                                        switch (((i19 % 7) * 5) + 29) {
                                            case 43:
                                                i20 *= i20;
                                                Test0035.iFld += Test0035.iFld;
                                                s3 += (short) (((f1 * i18) + i18) - i20);
                                                lArrFld[i19][i17 + 1] -= i17;
                                                break;
                                            case 35:
                                                d1 -= Test0035.instanceCount;
                                                Test0035.iArrFld[(int) (f1 + 1)] = (int) Test0035.fFld;
                                                break;
                                            case 44:
                                                Test0035.byArrFld = FuzzerUtils.byte1array(N, (byte) -67);
                                                d1 += -44885;
                                                Test0035.instanceCount = i19;
                                                i20 += (6 + (f1 * f1));
                                                break;
                                            case 51:
                                                Test0035.iArrFld[(int) (f1 + 1)] = (int) Test0035.instanceCount;
                                                f2 = i19;
                                                i18 = i18;
                                                break;
                                            case 48:
                                                Test0035.instanceCount += (long) (((f1 * i18) + i18) - i21);
                                                if (false) continue;
                                                d1 += Test0035.instanceCount;
                                            case 37:
                                            case 63:
                                                by2 += (byte) (f1 + Test0035.instanceCount);
                                                break;
                                        }
                                    } while ((f1 += 2) < 1);
                                } else {
                                    i20 = Test0035.iFld;
                                }
                                break;
                            case 48:
                                if (Test0035.bFld) continue;
                                break;
                            case 49:
                                d1 = -5;
                                break;
                            case 50:
                                Test0035.iArrFld = Test0035.iArrFld;
                                break;
                            case 51:
                                Test0035.instanceCount <<= 14L;
                                break;
                            default:
                                sArrFld[i19 - 1] = (short) i19;
                        }
                    }
                    break;
                default:
                    i18 += i17;
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 by2 f1 = " + i20 + "," + by2 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("s3 d1 f2 = " + s3 + "," + Double.doubleToLongBits(d1) + "," +
                Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test0035.instanceCount Test0035.iFld Test0035.bFld = " + Test0035.instanceCount + "," + Test0035.iFld +
                "," + (Test0035.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0035.fFld Test0035.iArrFld Test0035.byArrFld = " + Float.floatToIntBits(Test0035.fFld) + "," +
                FuzzerUtils.checkSum(Test0035.iArrFld) + "," + FuzzerUtils.checkSum(Test0035.byArrFld));
        FuzzerUtils.out.println("lArrFld sArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
