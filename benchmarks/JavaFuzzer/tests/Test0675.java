// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0675 {

    public static final int N = 400;

    public static long instanceCount = -6414589728213071300L;
    public static float fFld = 85.372F;
    public static boolean bFld = true;
    public static short sFld = -563;
    public static byte byFld = 64;
    public static long lFld = -14L;
    public static long[] lArrFld = new long[N];
    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0675.lArrFld, -859670490L);
    }

    public int[] iArrFld = new int[N];

    public static short sMeth(int i3) {

        int i4 = 230, i5 = -25668, i6 = -6, i7 = 13, i8 = 8;
        boolean b = false;
        short s = 6979;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -1.815F);

        for (i4 = 10; i4 < 318; ++i4) {
            if (b) break;
        }
        fArr[(i3 >>> 1) % N] = i5;
        i6 = 264;
        do {
            switch ((((i4 >>> 1) % 2) * 5) + 117) {
                case 120:
                    if (b) {
                        i5 *= i3;
                        i5 -= i4;
                        i3 += (((i6 * i5) + Test0675.instanceCount) - Test0675.instanceCount);
                        Test0675.instanceCount = i5;
                    }
                    s -= (short) i5;
                    for (i7 = 1; i7 < 18; i7 += 3) {
                        if (i8 != 0) {
                        }
                    }
                    Test0675.fFld += i8;
                    break;
                case 127:
                    i3 += i6;
                    break;
            }
        } while ((i6 -= 3) > 0);
        long meth_res = i3 + i4 + i5 + (b ? 1 : 0) + i6 + s + i7 + i8 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void vMeth(int i2) {

        int i9 = -184, i10 = 218, i11 = -9814, i12 = -222, i13 = -63891;
        short s1 = -11189;
        long l1 = 8928029554519682419L;

        Test0675.lArrFld[(i2 >>> 1) % N] += (-(i2 + sMeth(i2)));
        for (i9 = 2; i9 < 154; ++i9) {
            i10 -= i2;
            i10 += (i9 * i9);
            i10 *= s1;
            if (i9 != 0) {
                vMeth_check_sum += i2 + i9 + i10 + s1 + i11 + i12 + l1 + i13;
                return;
            }
            i10 += (((i9 * i10) + Test0675.instanceCount) - i10);
            for (i11 = 1; 10 > i11; ++i11) {
                for (l1 = 1; 2 > l1; l1 += 3) {
                    if (Test0675.bFld) {
                        i12 = (int) Test0675.fFld;
                        i10 += (int) 10L;
                    } else {
                        if (false) {
                            Test0675.fFld = i9;
                            i10 = -2;
                        }
                        vMeth_check_sum += i2 + i9 + i10 + s1 + i11 + i12 + l1 + i13;
                        return;
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i9 + i10 + s1 + i11 + i12 + l1 + i13;
    }

    public static void vSmallMeth(int i, int i1, long l) {


        vMeth(i1);
        vSmallMeth_check_sum += i + i1 + l;
    }

    public static void main(String[] strArr) {

        try {
            Test0675 _instance = new Test0675();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i14 = -51, i15 = 252, i16 = 10, i17 = -23455, i18 = 6, i19 = 14, i20 = 6, i21 = 37378, i22 = -13;
        long l2 = -11L, l3 = 17132L;
        float f = 2.227F;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 2.21785);

        for (int smallinvoc = 0; smallinvoc < 940; smallinvoc++) vSmallMeth(i14, i14, -1955264455L);
        i14 = (int) Test0675.instanceCount;
        for (l2 = 18; l2 < 318; l2++) {
            i15 = i14;
            Test0675.instanceCount = i14;
            for (l3 = 3; l3 < 84; l3++) {
                Test0675.fFld = i16;
                iArrFld[(int) (l2 + 1)] = i14;
                for (i17 = 2; i17 > 1; --i17) {
                    short s2 = -15148;
                    iArrFld[(int) (l2 + 1)] = (int) Test0675.fFld;
                    i14 += s2;
                    i15 += (((i17 * i15) + i15) - i14);
                    dArr[(int) (l3)] += -3259204221L;
                    i16 += (i17 * i17);
                    i16 -= i18;
                    i15 = 253;
                }
            }
            for (i19 = 5; 84 > i19; i19++) {
                for (f = 1; f < 2; f++) {
                    iArrFld[(int) (l2 - 1)] = (int) -1.92117;
                    Test0675.sFld = (short) i16;
                    Test0675.fFld += i14;
                    i21 = i19;
                    switch ((int) (((l2 % 8) * 5) + 36)) {
                        case 49:
                            Test0675.fFld += Test0675.instanceCount;
                            iArrFld[(int) (f)] -= i17;
                            iArrFld[i19] += (int) -56533L;
                            break;
                        case 46:
                            Test0675.fFld -= Test0675.instanceCount;
                            Test0675.instanceCount = -12425;
                            dArr[(int) (l2)] += Test0675.byFld;
                            break;
                        case 48:
                            Test0675.fFld += f;
                        case 40:
                            i16 = (int) -115.106310;
                            break;
                        case 59:
                            iArrFld[(int) (f + 1)] = (int) Test0675.lFld;
                            break;
                        case 76:
                            try {
                                i22 = (104 / i15);
                                i18 = (155 / i14);
                                iArrFld[(int) (f)] = (i15 % 4788);
                            } catch (ArithmeticException a_e) {
                            }
                        case 39:
                            Test0675.fFld = l2;
                        case 65:
                            Test0675.lFld *= l3;
                            break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i14 l2 i15 = " + i14 + "," + l2 + "," + i15);
        FuzzerUtils.out.println("l3 i16 i17 = " + l3 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("f i21 i22 = " + Float.floatToIntBits(f) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0675.instanceCount Test0675.fFld Test0675.bFld = " + Test0675.instanceCount + "," +
                Float.floatToIntBits(Test0675.fFld) + "," + (Test0675.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0675.sFld Test0675.byFld Test0675.lFld = " + Test0675.sFld + "," + Test0675.byFld + "," + Test0675.lFld);
        FuzzerUtils.out.println("Test0675.lArrFld iArrFld = " + FuzzerUtils.checkSum(Test0675.lArrFld) + "," +
                FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  sMeth ->  sMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
