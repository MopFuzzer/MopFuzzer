// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0291 {

    public static final int N = 400;

    public static volatile long instanceCount = -4327622886248031417L;
    public static float fFld = 0.147F;
    public static boolean bFld = true;
    public static volatile double dFld = -44.59851;
    public static short sFld = 25982;
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0291.iArrFld, -163);
    }

    public static void vMeth(int i10, long l1) {

        float f = -31.652F;
        int i11 = 45824, i12 = -252, i13 = 65069, i14 = 7;
        long l2 = 1089311133L, l3 = 8L, l4 = -2905373737L;
        double d = 73.67295;

        i10 >>>= (int) l1;
        for (f = 4; f < 290; ++f) {
            i11 += (int) f;
            i12 = (int) Test0291.fFld;
            for (l2 = 1; l2 < 6; ++l2) {
                l1 = (long) Test0291.fFld;
                for (l3 = 2; l3 > 1; l3--) {
                    Test0291.instanceCount += (l3 * l3);
                    i12 -= i14;
                    i11 -= (int) l3;
                    if (Test0291.bFld) continue;
                    d = f;
                    l4 = -10285;
                    i11 -= i12;
                    if (Test0291.bFld) break;
                }
            }
        }
        vMeth_check_sum += i10 + l1 + Float.floatToIntBits(f) + i11 + i12 + l2 + i13 + l3 + i14 +
                Double.doubleToLongBits(d) + l4;
    }

    public static boolean bMeth() {

        int i8 = 179, i9 = -4151;
        long l5 = -19L;

        for (i8 = 4; 217 > i8; i8++) {
            short s = 29582;
            vMeth(i8, l5);
            s += (short) (-2 + (i8 * i8));
            i9 = -84;
            i9 = i9;
            i9 = (int) Test0291.dFld;
        }
        long meth_res = i8 + i9 + l5;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth(int i1) {

        int i2 = 0, i3 = -26331, i4 = 33, i5 = -177, i6 = 5, i7 = 29;
        long l = -42235L;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, -73.146F);

        for (i2 = 10; 336 > i2; ++i2) {
            i4 = 5;
            do {
                Test0291.fFld %= (i1 | 1);
                Test0291.instanceCount += i4;
                fArr[i2][i4 + 1] -= (Test0291.fFld--);
                for (l = i4; l < 1; ++l) {
                    i3 += (((i3 - i2) - (i1 + i1)) % (((i4 + i1) / ((i1 + i3) | 1)) | 1));
                    i3 *= (int) fArr[i4 - 1][i2 - 1];
                }
            } while (--i4 > 0);
            i1 += (i2 * i2);
            i1 += (((i2 * Test0291.instanceCount) + i5) - i5);
            fArr[i2 + 1][i2 + 1] += (--Test0291.iArrFld[i2 + 1]);
            for (i6 = 1; i6 < 5; i6++) {
                if (bMeth()) continue;
                i7 += (273 + (i6 * i6));
            }
            i7 = (int) l;
        }
        long meth_res = i1 + i2 + i3 + i4 + l + i5 + i6 + i7 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0291 _instance = new Test0291();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -21403, i15 = 149, i16 = 249, i17 = 1, i18 = 1, i19 = -27844, i20 = 64, i21 = -37859, i22 = -59148, i23 = -173, i24 = 17360,
                i25 = -3318;
        byte by = -45;
        long[] lArr = new long[N];
        float[] fArr1 = new float[N];

        FuzzerUtils.init(lArr, -2896383109L);
        FuzzerUtils.init(fArr1, 1.307F);

        Test0291.iArrFld[(i >>> 1) % N] = (int) (Test0291.instanceCount - ((i / (i | 1)) + (++Test0291.instanceCount)));
        Test0291.instanceCount += ((by--) + (iMeth(i) - i));
        i -= i;
        switch (((i >>> 1) % 6) + 91) {
            case 91:
                i += (int) 1.120F;
                for (i15 = 13; i15 < 359; i15++) {
                    i += i15;
                }
                break;
            case 92:
                i16 *= i;
            case 93:
                i16 |= (int) Test0291.instanceCount;
            case 94:
                Test0291.iArrFld[(i16 >>> 1) % N] <<= (int) Test0291.instanceCount;
                Test0291.instanceCount -= i16;
                i = i16;
                i -= (int) Test0291.instanceCount;
            case 95:
                Test0291.sFld = (short) i16;
                for (i17 = 14; i17 < 330; ++i17) {
                    i += (((i17 * i17) + i16) - Test0291.fFld);
                }
                i16 = i;
                i19 = 1;
                while (++i19 < 288) {
                    for (i20 = 3; i20 < 87; i20++) {
                        i18 = (int) Test0291.instanceCount;
                        lArr[i20 - 1] = i18;
                        for (i22 = 1; i22 < 2; ++i22) {
                            lArr[i22] -= i20;
                            i16 += (int) Test0291.dFld;
                        }
                        i18 += (i20 * i20);
                        Test0291.iArrFld[i20] = i17;
                        Test0291.instanceCount += (((i20 * i20) + i15) - i15);
                        for (i24 = 1; i24 < 2; i24++) {
                            if (Test0291.bFld) continue;
                            i23 += (i24 * Test0291.instanceCount);
                        }
                    }
                }
            case 96:
                i23 *= i23;
                break;
            default:
                fArr1[(i20 >>> 1) % N] -= i20;
        }

        FuzzerUtils.out.println("i by i15 = " + i + "," + by + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 lArr fArr1 = " + i25 + "," + FuzzerUtils.checkSum(lArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0291.instanceCount Test0291.fFld Test0291.bFld = " + Test0291.instanceCount + "," +
                Float.floatToIntBits(Test0291.fFld) + "," + (Test0291.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0291.dFld Test0291.sFld Test0291.iArrFld = " + Double.doubleToLongBits(Test0291.dFld) + "," +
                Test0291.sFld + "," + FuzzerUtils.checkSum(Test0291.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
