// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0149 {

    public static final int N = 400;

    public static long instanceCount = 3L;
    public static float fFld = 0.36F;
    public static short sFld = -31559;
    public static boolean bFld = false;
    public static volatile double dFld = 79.99667;
    public static long[] lArrFld = new long[N];
    public static double[] dArrFld = new double[N];
    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0149.lArrFld, 2835878575531067386L);
        FuzzerUtils.init(Test0149.dArrFld, -98.9411);
    }

    public byte[] byArrFld = new byte[N];

    public static void vSmallMeth(int i) {

        short[][] sArr = new short[N][N];

        FuzzerUtils.init(sArr, (short) -28977);

        i = ((i * (i + 13)) * (--sArr[(i >>> 1) % N][(i >>> 1) % N]));
        i += i;
        vSmallMeth_check_sum += i + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(byte by, int i8, int i9) {

        int i10 = 22342;
        int i11 = -61968;
        int i12 = -137;
        int i13 = 41489;
        int i14 = -5;
        int[] iArr2 = new int[N];
        double d2 = -2.85000, d3 = -39.126284;

        FuzzerUtils.init(iArr2, -64964);

        for (i10 = 7; i10 < 192; i10++) {
            boolean b = false;
            i9 = (int) Test0149.instanceCount;
            switch (((i10 % 5) * 5) + 88) {
                case 106:
                    iArr2 = iArr2;
                    i9 = i8;
                    if (b) {
                        i12 = 1;
                        while (++i12 < 9) {
                            for (i13 = 1; i13 < 1; i13 += 2) {
                                d2 += d2;
                                d2 = Test0149.fFld;
                                d2 *= i11;
                                iArr2[i13 + 1] = i11;
                                i9 += (int) Test0149.instanceCount;
                                try {
                                    i9 = (i10 % i9);
                                    iArr2[i10 + 1] = (iArr2[i12 + 1] % -16054);
                                    i14 = (iArr2[i13 - 1] / -705111822);
                                } catch (ArithmeticException a_e) {
                                }
                                Test0149.fFld -= i12;
                            }
                        }
                    } else {
                        i8 <<= i11;
                    }
                    break;
                case 92:
                    Test0149.sFld >>>= (short) -32L;
                case 100:
                    i14 += i10;
                    break;
                case 94:
                    i8 += i9;
                    break;
                case 95:
                default:
                    iArr2[i10] -= (int) d3;
            }
        }
        vMeth_check_sum += by + i8 + i9 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d2) +
                Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr2);
    }

    public static byte byMeth(int i6, int i7) {

        byte by1 = 93;
        int i15 = 0;
        int i16 = -10241;
        int i17 = 133;
        int[] iArr3 = new int[N];
        double d4 = -1.106995;
        double[] dArr = new double[N];
        short[] sArr1 = new short[N];

        FuzzerUtils.init(iArr3, -126);
        FuzzerUtils.init(dArr, -55.96390);
        FuzzerUtils.init(sArr1, (short) 13947);

        vMeth(by1, i6, i6);
        i7 = (int) Test0149.instanceCount;
        switch ((((i6 >>> 1) % 8) * 5) + 14) {
            case 24:
                for (i15 = 11; i15 < 201; i15++) {
                    boolean b1 = false;
                    if (b1) {
                        iArr3[i15] = -189;
                        i6 = 31498;
                    } else if (b1) {
                        i17 = 1;
                        while (++i17 < 8) {
                            iArr3[i15] -= i16;
                            i16 += i7;
                            i16 -= i16;
                            Test0149.fFld = by1;
                            Test0149.instanceCount += Test0149.instanceCount;
                            Test0149.sFld = (short) Test0149.instanceCount;
                            i6 -= i15;
                        }
                    } else if (b1) {
                        iArr3 = FuzzerUtils.int1array(N, (int) -9);
                    }
                }
                break;
            case 30:
                dArr[(i7 >>> 1) % N] = 1.0F;
                break;
            case 42:
                i6 = (int) 3256117795951959659L;
                break;
            case 31:
                by1 = (byte) d4;
                break;
            case 52:
                iArr3[(i15 >>> 1) % N] -= -12;
            case 43:
                Test0149.lArrFld[(i16 >>> 1) % N] *= (long) Test0149.fFld;
                break;
            case 48:
                Test0149.bFld = Test0149.bFld;
                break;
            case 49:
                sArr1[(i17 >>> 1) % N] += (short) i6;
                break;
            default:
                Test0149.sFld -= (short) Test0149.fFld;
        }
        long meth_res = i6 + i7 + by1 + i15 + i16 + i17 + Double.doubleToLongBits(d4) + FuzzerUtils.checkSum(iArr3) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr1);
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static int iMeth(int i2) {

        float f = 1.851F;
        float[] fArr = new float[N];
        int i3 = -240;
        int i4 = 9;
        int i5 = -14;
        int[] iArr1 = new int[N];
        double d = -4.78647, d1 = 0.120102;
        long l1 = -8L;

        FuzzerUtils.init(iArr1, 191);
        FuzzerUtils.init(fArr, 106.434F);

        for (f = 10; f < 397; f += 2) {
            for (d = f; d < 8; ++d) {
                Test0149.lArrFld[(int) (f - 1)] <<= (++iArr1[(int) (f + 1)]);
                i3 += (int) (d + i2);
                i3 = (int) (((~(--i3)) + (Test0149.instanceCount + f)) / (((long) (--Test0149.fFld)) | 1));
                Test0149.instanceCount = (((i3 - Test0149.instanceCount) + Long.reverseBytes(Test0149.instanceCount)) - (i2++));
                i4 += (int) ((long) d ^ i2);
                i3 += (int) (-f);
            }
            for (l1 = (long) (f); 8 > l1; ++l1) {
                Test0149.fFld = (--fArr[(int) (l1 + 1)]);
                i3 >>= iArr1[(int) (f + 1)];
                Test0149.instanceCount = (i3 * i5);
                i2 += (int) (l1 - i3);
                iArr1[(int) (f)] = (int) (l1 * (-Math.abs(Test0149.fFld)));
            }
            d1 += byMeth(104, i2);
        }
        long meth_res = i2 + Float.floatToIntBits(f) + i3 + Double.doubleToLongBits(d) + i4 + l1 + i5 +
                Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0149 _instance = new Test0149();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        long l = -9155968194724472843L;
        int i1 = 9613;
        int i18 = 4;
        int i19 = -41944;
        int i20 = 233;
        int i21 = -3951;
        int i22 = 35;
        int i23 = -1403;
        int[] iArr = new int[N];
        float f1 = 2.552F;
        short s = -22756;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr, 63903);
        FuzzerUtils.init(bArr, false);

        for (int smallinvoc = 0; smallinvoc < 829; smallinvoc++) vSmallMeth(0);
        for (l = 14; 336 > l; l++) {
            iArr[(int) (l - 1)] -= (int) Math.abs((i1 + i1) + iMeth(i1));
            i1 += (34453 + (l * l));
            switch ((int) (((l % 2) * 5) + 37)) {
                case 44:
                    iArr[(int) (l)] = i1;
                    i18 = 78;
                    while (--i18 > 0) {
                        i1 = (int) 1.979F;
                        i1 <<= (int) Test0149.instanceCount;
                        i1 -= -11;
                        if (true) {
                            i1 += i18;
                            for (f1 = 1; f1 < 1; ++f1) {
                                Test0149.bFld = false;
                                i19 = -3;
                                Test0149.dArrFld[(int) (l)] = i18;
                                s *= (short) i18;
                                i1 = (int) Test0149.dFld;
                                try {
                                    i19 = (i1 / -17315);
                                    i1 = (i1 / i19);
                                    i19 = (iArr[i18] / i1);
                                } catch (ArithmeticException a_e) {
                                }
                                if (Test0149.bFld) {
                                    bArr[i18 + 1] = Test0149.bFld;
                                    Test0149.instanceCount = 35;
                                } else {
                                    iArr[i18] <<= (int) l;
                                }
                                Test0149.instanceCount *= i20;
                            }
                            for (i21 = i18; i21 < 1; i21++) {
                                i20 >>= i22;
                                byArrFld[i18 + 1] = (byte) i19;
                                i1 += i1;
                                iArr[i21 + 1] += i19;
                            }
                            Test0149.lArrFld[(int) (l - 1)] = i23;
                        } else {
                            Test0149.instanceCount += (((i18 * s) + l) - l);
                        }
                    }
                    break;
                case 40:
                    Test0149.instanceCount = 2;
                    break;
            }
        }

        FuzzerUtils.out.println("l i1 i18 = " + l + "," + i1 + "," + i18);
        FuzzerUtils.out.println("f1 i19 s = " + Float.floatToIntBits(f1) + "," + i19 + "," + s);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 iArr bArr = " + i23 + "," + FuzzerUtils.checkSum(iArr) + "," +
                FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0149.instanceCount Test0149.fFld Test0149.sFld = " + Test0149.instanceCount + "," +
                Float.floatToIntBits(Test0149.fFld) + "," + Test0149.sFld);
        FuzzerUtils.out.println("Test0149.bFld Test0149.dFld Test0149.lArrFld = " + (Test0149.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0149.dFld) + "," + FuzzerUtils.checkSum(Test0149.lArrFld));
        FuzzerUtils.out.println("Test0149.dArrFld byArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0149.dArrFld)) + "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  byMeth ->  byMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
