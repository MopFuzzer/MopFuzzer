// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0282 {

    public static final int N = 400;

    public static long instanceCount = 238L;
    public static int iFld = -61776;
    public static long[] lArrFld = new long[N];
    public static float[] fArrFld = new float[N];
    public static long fMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0282.lArrFld, -3407904265L);
        FuzzerUtils.init(Test0282.fArrFld, 0.302F);
    }

    public double[] dArrFld = new double[N];

    public static int iMeth(int i6) {

        float f = 1.115F;
        int i7 = -1, i8 = -57011, i9 = -4, i10 = 48904;
        double d2 = 0.16034;

        Test0282.instanceCount -= (long) f;
        i6 <<= Test0282.iFld;
        for (i7 = 5; i7 < 229; ++i7) {
            Test0282.iFld = Test0282.iFld;
            i6 = i6;
        }
        i6 = i8;
        Test0282.iFld -= (int) d2;
        for (i9 = 21; i9 < 355; ++i9) {
            i10 = i8;
            i6 *= -2;
        }
        long meth_res = i6 + Float.floatToIntBits(f) + i7 + i8 + Double.doubleToLongBits(d2) + i9 + i10;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static float fMeth1(int i5) {

        byte by = -24;
        float f1 = -2.368F;
        int i11 = -2;
        int i12 = -7;
        int i13 = -63504;
        int i14 = -2267;
        int i15 = -22467;
        int i16 = 34120;
        int[] iArr = new int[N];
        boolean b = true;

        FuzzerUtils.init(iArr, -23344);

        Test0282.iFld *= iMeth(Test0282.iFld);
        iArr[(i5 >>> 1) % N] = Test0282.iFld;
        by *= (byte) i5;
        f1 = Test0282.iFld;
        for (i11 = 5; 287 > i11; ++i11) {
            for (i13 = 1; i13 < 6; ++i13) {
                for (i15 = 1; i15 < 2; i15++) {
                    short s1 = -5561;
                    i5 += i16;
                    Test0282.lArrFld[i13] -= Test0282.iFld;
                    Test0282.iFld = (int) f1;
                    i12 += i15;
                    s1 *= (short) Test0282.iFld;
                    if (b) break;
                }
                iArr[i13 - 1] = (int) Test0282.instanceCount;
                i5 = i11;
            }
        }
        long meth_res = i5 + by + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + i15 + i16 + (b ? 1 : 0) +
                FuzzerUtils.checkSum(iArr);
        fMeth1_check_sum += meth_res;
        return (float) meth_res;
    }

    public static float fMeth() {

        double d1 = -2.55508;
        int i2 = 5;
        int i3 = 23;
        int i4 = 199;
        int[][] iArr1 = new int[N][N];
        short s = 28939;
        float f2 = 2.212F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -3L);
        FuzzerUtils.init(iArr1, 7);

        Test0282.iFld += (int) (--d1);
        i2 = 1;
        do {
            Test0282.iFld = 75;
            for (i3 = i2; 16 > i3; i3++) {
                i4 += (int) (Double.longBitsToDouble(-(Test0282.instanceCount * Test0282.instanceCount)) - (i4--));
                s = (short) i3;
                Test0282.iFld += (int) fMeth1(i2);
                Test0282.iFld = i4;
                Test0282.instanceCount = (long) f2;
                Test0282.iFld += i4;
                f2 *= Test0282.instanceCount;
            }
            iArr1[i2][i2] *= 14;
            Test0282.iFld += i2;
            i4 += 64327;
            i4 = 4;
        } while ((i2 += 3) < 293);
        long meth_res = Double.doubleToLongBits(d1) + i2 + i3 + i4 + s + Float.floatToIntBits(f2) +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0282 _instance = new Test0282();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -32785;
        int i1 = -43341;
        int i17 = 92;
        int i18 = -38662;
        int i19 = 2;
        int i20 = 13;
        int i21 = -12;
        int i22 = 58696;
        int i23 = -14;
        int i24 = -42;
        int[] iArr2 = new
                int[N];
        double d = 2.122828;
        float f3 = 0.729F, f4 = -2.705F, f5 = -117.366F;
        short s2 = 21610;
        long l1 = -5435100925283437489L;
        long[][] lArr1 = new long[N][N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr2, 5);
        FuzzerUtils.init(byArr, (byte) 103);
        FuzzerUtils.init(lArr1, -4059451084692639710L);

        try {
            for (i = 1; 344 > i; ++i) {
                i1 *= (int) (d * (i1 *= (int) fMeth()));
                Test0282.iFld -= (int) 1723081692584322343L;
            }
            i17 = 298;
            do {
                for (i18 = 4; 84 > i18; i18++) {
                    i1 -= Test0282.iFld;
                }
                for (f3 = 84; f3 > 5; f3 -= 3) {
                    try {
                        i1 = (-242 / i);
                        iArr2[i17] = (-116 % iArr2[i17]);
                        i19 = (Test0282.iFld / i19);
                    } catch (ArithmeticException a_e) {
                    }
                    dArrFld[(int) (f3)] += Test0282.instanceCount;
                    byArr[(int) (f3)] += (byte) i18;
                    for (i21 = 1; i21 < 4; i21++) {
                        switch ((i21 % 2) + 69) {
                            case 69:
                                i1 *= i18;
                                i19 *= i21;
                                break;
                            case 70:
                                i1 = i22;
                                f4 -= (float) d;
                                break;
                            default:
                                i22 <<= s2;
                                i19 += (-90 + (i21 * i21));
                                f4 -= f5;
                        }
                        i22 += (((i21 * Test0282.iFld) + i18) - i21);
                        Test0282.iFld ^= i19;
                    }
                    i20 = i20;
                    for (i23 = i17; i23 < 4; ++i23) {
                        Test0282.fArrFld[i17 + 1] = f3;
                        i1 += (14632 + (i23 * i23));
                        i20 = Test0282.iFld;
                        try {
                            iArr2[(int) (f3)] = (i19 / 137);
                            i20 = (i / -535307014);
                            Test0282.iFld = (i23 / 1703490652);
                        } catch (ArithmeticException a_e) {
                        }
                        i19 = 125;
                        i22 >>= i20;
                    }
                }
            } while (--i17 > 0);
        } catch (ArithmeticException exc2) {
            lArr1 = FuzzerUtils.long2array(N, (long) -3321775985L);
        } catch (UserDefinedExceptionTest0282 exc3) {
            iArr2[(1 >>> 1) % N] = (int) l1;
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f3 i20 i21 = " + Float.floatToIntBits(f3) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 f4 s2 = " + i22 + "," + Float.floatToIntBits(f4) + "," + s2);
        FuzzerUtils.out.println("f5 i23 i24 = " + Float.floatToIntBits(f5) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("l1 iArr2 byArr = " + l1 + "," + FuzzerUtils.checkSum(iArr2) + "," +
                FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0282.instanceCount Test0282.iFld Test0282.lArrFld = " + Test0282.instanceCount + "," + Test0282.iFld +
                "," + FuzzerUtils.checkSum(Test0282.lArrFld));
        FuzzerUtils.out.println("dArrFld Test0282.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0282.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth1_check_sum: " + fMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}

///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest0282 extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth1 fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
