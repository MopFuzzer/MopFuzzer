// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test0653 {

    public static final int N = 400;

    public static long instanceCount = -10L;
    public static volatile long lFld = -5396065155609082286L;
    public static byte byFld = -68;
    public static int iFld = -59;
    public static short sFld = -18104;
    public static double dFld = 0.12377;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public int iFld1 = -30739;
    public int[][] iArrFld = new int[N][N];

    public static long lMeth1(long l, float f1) {

        int i4 = -61569;
        int i5 = 245;
        int i6 = 66;
        int i7 = -32;
        int i8 = 128;
        int i9 = 90;
        int i11 = -49089;
        int[] iArr1 = new int[N];
        boolean b = false;
        float f2 = -71.708F;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, -3);
        FuzzerUtils.init(lArr, 2595288573L);

        for (i4 = 4; 242 > i4; i4++) {
            i5 <<= Test0653.sFld;
            iArr1[i4 + 1] = i4;
            i5 *= (int) Test0653.instanceCount;
            switch ((((Test0653.iFld >>> 1) % 7) * 5) + 114) {
                case 123:
                    i5 <<= 0;
                    break;
                case 120:
                    lArr[i4] >>= -22371;
                case 141:
                    i5 *= i4;
                    Test0653.lFld += (-51838 + (i4 * i4));
                    if (b) {
                        for (i6 = 7; i6 > 1; i6--) {
                            lArr = lArr;
                        }
                    } else {
                        for (i8 = 1; 7 > i8; ++i8) {
                            f1 = i4;
                            iArr1[i4 + 1] = (int) l;
                        }
                    }
                case 122:
                case 148:
                    i5 >>= (int) Test0653.lFld;
                    break;
                case 137:
                    f2 += (i4 - Test0653.byFld);
                    break;
                case 133:
                    Test0653.iFld = i11;
                    break;
            }
        }
        long meth_res = l + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 +
                Float.floatToIntBits(f2) + i11 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth() {

        float f3 = 74.392F;
        boolean b1 = false;
        int i12 = -9;
        int i13 = 58153;
        int i14 = 10;
        int i15 = -4;
        int[][] iArr = new int[N][N];
        double d1 = 55.127664;

        FuzzerUtils.init(iArr, 221);

        try {
            Test0653.instanceCount /= (--Test0653.instanceCount);
            Test0653.byFld = (byte) ((--iArr[(Test0653.iFld >>> 1) % N][(Test0653.iFld >>> 1) % N]) % (lMeth1(Test0653.instanceCount,
                    f3) * 2));
            b1 = b1;
            Test0653.iFld -= Test0653.iFld;
            try {
                for (i12 = 392; 2 < i12; --i12) {
                    i13 += (i12 | i12);
                    Test0653.lFld |= Test0653.lFld;
                    for (i14 = 1; i14 < 4; i14++) {
                        i15 = (int) d1;
                        i13 += (int) d1;
                        Test0653.lFld = i15;
                        i13 <<= i13;
                        iArr[i12][i14] = -11;
                    }
                }
            } catch (NegativeArraySizeException exc3) {
                i13 -= 178;
            }
        } catch (ArithmeticException exc4) {
            i15 >>>= Test0653.byFld;
        }
        long meth_res = Float.floatToIntBits(f3) + (b1 ? 1 : 0) + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d1) +
                FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0653 _instance = new Test0653();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public long lMeth(double d, int i1) {

        short s = 9853;
        byte by = -24;
        int i2 = 19347, i3 = -24, i16 = -9604, i17 = -250, i18 = 51218, i19 = -54732;
        float f4 = -69.905F;
        boolean b2 = true;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, false);

        i1 -= (int) ((Double.longBitsToDouble(Test0653.instanceCount) % ((i1 + s) | 1)) * (--Test0653.lFld));
        i1 += (int) (~(long) ((s * 126.387F) * (by * i1)));
        for (i2 = 9; i2 < 177; ++i2) {
            iMeth();
            i3 -= i3;
            for (i16 = 1; i16 < 9; i16++) {
                i3 *= (int) f4;
            }
            switch ((i2 % 2) + 2) {
                case 2:
                    f4 = i16;
                    bArr[i2] = b2;
                    for (i18 = 1; 9 > i18; ++i18) {
                        i1 = (int) Test0653.lFld;
                        Test0653.iFld += (int) f4;
                        d -= -2.984F;
                        Test0653.sFld = (short) -762882742L;
                    }
                    break;
                case 3:
                    i1 = i1;
                    break;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i1 + s + by + i2 + i3 + i16 + i17 + Float.floatToIntBits(f4) + (b2
                ? 1 : 0) + i18 + i19 + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = -117, i20 = 241, i21 = -39361, i22 = 10531, i23 = 224, i24 = 26952, i25 = 9, i26 = 7501, i27 = -244, i28 = 239;
        float f = 0.560F;
        double d2 = -6.60970;
        boolean b3 = false;

        i = 1;
        do {
            f += lMeth(Test0653.dFld, Test0653.iFld);
            Test0653.iFld += (i | i);
            for (i20 = i; i20 < 69; ++i20) {
                Test0653.sFld += (short) i20;
                for (d2 = 1; 1 > d2; d2 += 2) {
                    f -= i20;
                    iArrFld[(int) (d2)][i + 1] *= Test0653.iFld;
                    Test0653.instanceCount = Test0653.lFld;
                    iArrFld[i][i20 - 1] += i21;
                    Test0653.lFld += (long) (d2 - Test0653.lFld);
                    iFld1 *= Test0653.sFld;
                    if (true) continue;
                    Test0653.lFld += iFld1;
                    Test0653.iFld >>>= i;
                    Test0653.lFld += (-140L + (d2 * d2));
                }
                if (b3) break;
            }
            iArrFld[i - 1][i] = i22;
        } while (++i < 366);
        Test0653.sFld = (short) Test0653.lFld;
        for (i23 = 12; i23 < 231; ++i23) {
            for (i25 = 7; 115 > i25; i25++) {
                i26 >>= i23;
                for (i27 = 1; i27 < 2; i27++) {
                    switch (((i27 % 4) * 5) + 123) {
                        case 127:
                            i28 |= i27;
                            break;
                        case 139:
                            Test0653.iFld += (i27 + Test0653.lFld);
                            i22 -= Test0653.iFld;
                            f += (((i27 * i20) + i23) - Test0653.lFld);
                        case 132:
                        case 126:
                            Test0653.instanceCount += (((i27 * i27) + f) - iFld1);
                            iArrFld[i27 - 1][i25 - 1] = i;
                            break;
                        default:
                            iArrFld[i27] = iArrFld[i23];
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f i20 = " + i + "," + Float.floatToIntBits(f) + "," + i20);
        FuzzerUtils.out.println("i21 d2 i22 = " + i21 + "," + Double.doubleToLongBits(d2) + "," + i22);
        FuzzerUtils.out.println("b3 i23 i24 = " + (b3 ? 1 : 0) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 = " + i28);

        FuzzerUtils.out.println("Test0653.instanceCount Test0653.lFld Test0653.byFld = " + Test0653.instanceCount + "," + Test0653.lFld +
                "," + Test0653.byFld);
        FuzzerUtils.out.println("Test0653.iFld Test0653.sFld Test0653.dFld = " + Test0653.iFld + "," + Test0653.sFld + "," +
                Double.doubleToLongBits(Test0653.dFld));
        FuzzerUtils.out.println("iFld1 iArrFld = " + iFld1 + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
