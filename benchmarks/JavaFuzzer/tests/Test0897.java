// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0897 {

    public static final int N = 400;

    public static long instanceCount = 28L;
    public static volatile float fFld = 1.955F;
    public static int iFld = 0;
    public static double dFld = 66.54314;
    public static int iFld1 = 10;
    public static byte byFld = -108;
    public static short sFld = 20124;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0897.iArrFld, -194);
        FuzzerUtils.init(Test0897.lArrFld, -6815964265220317157L);
    }

    public static void vMeth2() {

        float f = 19.308F;
        int i6 = 6, i7 = -34099, i8 = 20110, i9 = 24601, i10 = -63027, i11 = 7761;
        long l3 = -2405036776L;
        byte by = 92;
        short s2 = 30640;

        for (f = 14; f < 271; f++) {
            for (i7 = 6; i7 > 1; i7 -= 2) {
                for (l3 = 1; l3 < 3; ++l3) {
                    Test0897.iArrFld[i7] = (int) -2.91F;
                }
                Test0897.fFld = i9;
                by = (byte) i6;
                i8 = (int) Test0897.dFld;
                i9 >>= s2;
                i8 *= (int) Test0897.dFld;
                for (i10 = 1; i10 < 3; i10++) {
                    i6 -= i7;
                    by += (byte) i10;
                    i8 -= (int) Test0897.instanceCount;
                }
                Test0897.iArrFld[i7] -= i7;
            }
            i8 <<= i8;
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i6 + i7 + i8 + l3 + i9 + by + s2 + i10 + i11;
    }

    public static void vMeth1(short s, short s1) {

        int i12 = 58883, i13 = 2, i14 = -4, i15 = 55, i16 = 3;
        double d = 2.16080;
        boolean b = false, b1 = false;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 15675L);

        vMeth2();
        Test0897.iFld1 += (int) 45.3601;
        i12 = 1;
        while (++i12 < 281) {
            for (d = 1; d < 6; ++d) {
                Test0897.iFld1 *= Test0897.iFld1;
                Test0897.iArrFld[i12 - 1] += Test0897.iFld1;
                i13 <<= Test0897.iFld;
                for (i14 = 1; i14 < 2; ++i14) {
                    Test0897.iArrFld[(int) (d - 1)] += (int) Test0897.fFld;
                    Test0897.instanceCount *= (long) Test0897.fFld;
                    if (b) {
                        lArr1 = FuzzerUtils.long1array(N, (long) 0L);
                    } else if (b) {
                        i15 = Test0897.iFld;
                        Test0897.fFld -= 2;
                        Test0897.iFld += i14;
                    } else if (b1) {
                        i16 <<= i16;
                    } else {
                        s1 += (short) (i14 | Test0897.byFld);
                    }
                }
            }
        }
        vMeth1_check_sum += s + s1 + i12 + Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + (b ? 1 : 0) + (b1 ? 1 :
                0) + FuzzerUtils.checkSum(lArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0897 _instance = new Test0897();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public float fMeth(int i3) {

        int i4 = -13044, i5 = 4;

        for (i4 = 12; 285 > i4; i4++) {
            Test0897.iArrFld[i4 + 1] += (int) Test0897.fFld;
            Test0897.instanceCount = (-Test0897.iArrFld[i4]);
            i5 = (int) (101.298F * i5);
            Test0897.iArrFld[i4 - 1] = (i5++);
            Test0897.iFld += (i4 ^ i4);
            Test0897.iArrFld[i4 - 1] = (i5++);
        }
        Test0897.fFld %= (Test0897.iArrFld[(5 >>> 1) % N] | 1);
        long meth_res = i3 + i4 + i5;
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public void vMeth(long l, long l1) {

        long l2 = 2956749987L;
        long[] lArr = new long[N];
        int i = 9;
        int i1 = 13205;
        int i2 = 32415;
        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, 133);
        FuzzerUtils.init(lArr, -1568365702L);

        for (l2 = 19; l2 < 355; l2++) {
            i <<= i;
            try {
                iArr[(int) (l2)] = (i % -56137);
                iArr[(int) (l2)] = (8 % i);
                i = (iArr[(int) (l2)] % -1856);
            } catch (ArithmeticException a_e) {
            }
            for (i1 = 5; 1 < i1; i1--) {
                Test0897.instanceCount *= 130;
                Test0897.fFld *= ((++i2) * fMeth(i2 - -41493));
                lArr[(int) (l2 - 1)] -= (long) fMeth(i1);
                Test0897.iFld -= (int) ((l %= ((-3545L + Test0897.iArrFld[i1 + 1]) | 1)) + ((-(i2 - l2)) + (i - Test0897.iFld)));
            }
            vMeth1(Test0897.sFld, Test0897.sFld);
            Test0897.iFld1 = (int) l1;
            Test0897.iFld1 = i1;
            Test0897.dFld += -32319;
            iArr[(int) (l2 - 1)] = i1;
            i2 >>>= i1;
        }
        Test0897.dFld += -252;
        vMeth_check_sum += l + l1 + l2 + i + i1 + i2 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i17 = 9, i18 = 157, i19 = 0, i20 = 68, i21 = 1, i22 = -11, i23 = -155, i24 = -28215;
        boolean b2 = true;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, 1.75F);

        vMeth(-70L, Test0897.instanceCount);
        for (i17 = 4; i17 < 153; i17++) {
            Test0897.fFld -= Test0897.iFld1;
            for (i19 = 168; i19 > 10; i19 -= 2) {
                for (i21 = 3; i21 > 1; i21--) {
                    Test0897.iArrFld[i17] >>= i20;
                }
                Test0897.iArrFld[(i21 >>> 1) % N] <<= i18;
                i22 -= 0;
                i20 = i18;
                if (b2) {
                    Test0897.instanceCount *= Test0897.instanceCount;
                    i20 += (((i19 * Test0897.iFld) + i20) - Test0897.instanceCount);
                } else if (b2) {
                    switch ((i17 % 10) + 6) {
                        case 6:
                            Test0897.iFld1 = Test0897.byFld;
                            Test0897.fFld += -13;
                            break;
                        case 7:
                            Test0897.iFld1 += i19;
                        case 8:
                            i18 = i19;
                            Test0897.iFld1 -= (int) Test0897.fFld;
                            break;
                        case 9:
                            i20 ^= (int) 49L;
                            fArr = fArr;
                            i20 |= i22;
                            i20 += (int) Test0897.dFld;
                            break;
                        case 10:
                            Test0897.instanceCount ^= i22;
                            Test0897.fFld += ((long) i19 ^ (long) Test0897.instanceCount);
                        case 11:
                            Test0897.instanceCount += (((i19 * Test0897.instanceCount) + Test0897.fFld) - i18);
                            for (i23 = 1; i23 < 3; i23++) {
                                Test0897.fFld += (i23 * i23);
                                Test0897.lArrFld[i19] += i18;
                                Test0897.iFld = (int) 34677L;
                                Test0897.lArrFld[i23] *= -6;
                            }
                            break;
                        case 12:
                            Test0897.iFld -= Test0897.byFld;
                            break;
                        case 13:
                            Test0897.instanceCount = Test0897.iFld;
                            break;
                        case 14:
                            i22 *= 8;
                            break;
                        case 15:
                            Test0897.sFld = (short) 58279;
                            break;
                        default:
                            Test0897.instanceCount <<= 1678983534883873778L;
                    }
                } else {
                    Test0897.iArrFld[i17] -= -148;
                }
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 b2 = " + i23 + "," + i24 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0897.instanceCount Test0897.fFld Test0897.iFld = " + Test0897.instanceCount + "," +
                Float.floatToIntBits(Test0897.fFld) + "," + Test0897.iFld);
        FuzzerUtils.out.println("Test0897.dFld Test0897.iFld1 Test0897.byFld = " + Double.doubleToLongBits(Test0897.dFld) + "," +
                Test0897.iFld1 + "," + Test0897.byFld);
        FuzzerUtils.out.println("Test0897.sFld Test0897.iArrFld Test0897.lArrFld = " + Test0897.sFld + "," +
                FuzzerUtils.checkSum(Test0897.iArrFld) + "," + FuzzerUtils.checkSum(Test0897.lArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
