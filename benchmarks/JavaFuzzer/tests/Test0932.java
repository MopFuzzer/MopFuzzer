// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0932 {

    public static final int N = 400;

    public static long instanceCount = -35953L;
    public static volatile byte byFld = 72;
    public static long[] lArrFld = new long[N];
    public static int[] iArrFld = new int[N];
    public static volatile short[] sArrFld = new short[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0932.lArrFld, 6311267360253009550L);
        FuzzerUtils.init(Test0932.iArrFld, -17694);
        FuzzerUtils.init(Test0932.sArrFld, (short) -25710);
    }

    public boolean bFld = false;

    public static int iMeth(long l, int i11) {

        int i12 = 180;

        i11 += 0;
        l <<= i11;
        Test0932.lArrFld[(i11 >>> 1) % N] = 1L;
        i11 += i11;
        i11 = Test0932.byFld;
        l <<= i12;
        Test0932.byFld >>= (byte) i11;
        long meth_res = l + i11 + i12;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(short s, int i4) {

        int i5 = -209;
        int i6 = -12;
        int i7 = -3;
        int i8 = -172;
        int i9 = -64553;
        int i10 = 45006;
        int[] iArr1 = new int[N];
        float f1 = -84.597F, f2 = 91.767F;
        boolean b = true;
        double d = 68.129054;

        FuzzerUtils.init(iArr1, -8);

        for (i5 = 167; i5 > 1; i5 -= 3) {
            for (i7 = 1; i7 < 28; ++i7) {
                iArr1[i5] += i6;
                for (i9 = 1; i9 < 2; ++i9) {
                    i10 *= (int) (i9 + ((Test0932.instanceCount--) * f1));
                    f2 = (i6 = ((++i10) - (i6 - i7)));
                    Test0932.lArrFld[i5] -= ((Math.max(0, 9) - (++Test0932.instanceCount)) + (++i8));
                    if (b) break;
                    i4 *= i8;
                    switch (((i7 % 5) * 5) + 108) {
                        case 132:
                            f2 = i6;
                            iArr1[i7] = iMeth(Test0932.instanceCount, i7);
                            i4 = i7;
                            i6 -= i10;
                        case 109:
                            Test0932.instanceCount += i9;
                        case 112:
                            Test0932.instanceCount *= i9;
                        case 133:
                            f2 += i9;
                            break;
                        case 129:
                            d = f2;
                            break;
                    }
                }
            }
        }
        vMeth1_check_sum += s + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2)
                + (b ? 1 : 0) + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i3 = -65169;
        int i13 = 8;
        int i14 = -8;
        int i15 = 56394;
        int[] iArr = new int[N];
        float f = 1.880F;
        short s1 = -13517;
        short[] sArr = new short[N];
        double d1 = -81.99816;
        boolean b1 = true;

        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(sArr, (short) 29068);

        iArr[(119 >>> 1) % N] += (int) (i3 + (i3 - (f--)));
        vMeth1(s1, i3);
        i13 = 1;
        while (++i13 < 292) {
            i3 *= i13;
            i14 = 1;
            while (++i14 < 6) {
                for (d1 = 1; d1 < 1; ++d1) {
                    f -= f;
                    i15 -= i15;
                    i3 += (int) (d1 + f);
                    if (b1) {
                        Test0932.instanceCount -= -84;
                        if (i13 != 0) {
                            vMeth_check_sum += i3 + Float.floatToIntBits(f) + s1 + i13 + i14 +
                                    Double.doubleToLongBits(d1) + i15 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                                    FuzzerUtils.checkSum(sArr);
                            return;
                        }
                        i15 += (int) (d1 + i13);
                    } else if (b1) {
                        sArr[i14 - 1] >>>= (short) i13;
                    } else if (b1) {
                        Test0932.lArrFld[i14 - 1] = (long) f;
                    }
                }
            }
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + s1 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + (b1 ? 1
                : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0932 _instance = new Test0932();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -5, i1 = 220, i2 = 4, i16 = 130, i17 = 51243, i18 = 10;
        float f3 = -126.42F;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -1.602F);

        i = 1;
        while (++i < 367) {
            for (i1 = 4; i1 < 69; ++i1) {
                vMeth();
                for (i16 = 1; i16 < 2; i16++) {
                    if (bFld) break;
                    if (bFld) {
                        Test0932.instanceCount <<= i17;
                        i17 ^= i2;
                        switch (((i % 7) * 5) + 99) {
                            case 120:
                                f3 = Test0932.instanceCount;
                                f3 += (117L + (i16 * i16));
                                i2 = i16;
                                break;
                            case 109:
                                f3 -= f3;
                                Test0932.byFld += (byte) (i16 * i16);
                                i2 = 10;
                                break;
                            case 104:
                                i2 += (-25 + (i16 * i16));
                                break;
                            case 122:
                                f3 -= f3;
                                fArr = fArr;
                                i2 = (int) Test0932.instanceCount;
                                break;
                            case 134:
                                Test0932.iArrFld[i] += -12;
                                Test0932.instanceCount -= i16;
                                Test0932.sArrFld[i16 + 1] = (short) 1548708197L;
                                break;
                            case 119:
                                if (bFld) continue;
                                Test0932.iArrFld[i] = -2357;
                                i2 += (((i16 * Test0932.instanceCount) + i1) - Test0932.instanceCount);
                                i2 = Test0932.byFld;
                                break;
                            case 101:
                        }
                        try {
                            i2 = (i % 241);
                            i2 = (i2 / i18);
                            i2 = (i1 % i1);
                        } catch (ArithmeticException a_e) {
                        }
                    } else {
                        Test0932.instanceCount -= i17;
                        Test0932.instanceCount -= (long) f3;
                        Test0932.instanceCount -= -21367;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i16 i17 f3 = " + i16 + "," + i17 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i18 fArr = " + i18 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0932.instanceCount Test0932.byFld bFld = " + Test0932.instanceCount + "," + Test0932.byFld + "," +
                (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0932.lArrFld Test0932.iArrFld Test0932.sArrFld = " + FuzzerUtils.checkSum(Test0932.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0932.iArrFld) + "," + FuzzerUtils.checkSum(Test0932.sArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
