// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0769 {

    public static final int N = 400;

    public static long instanceCount = -95460825L;
    public static volatile int iFld = 8;
    public static boolean bFld = false;
    public static byte byFld = -114;
    public static float fFld = 0.411F;
    public static int[][] iArrFld = new int[N][N];
    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0769.iArrFld, 249);
    }

    public short sFld = 28006;

    public static int iMeth1() {

        int i9 = 49702, i10 = 8, i11 = -59045, i12 = -2;
        float f = -8.15F;

        for (i9 = 375; i9 > 15; i9 -= 2) {
            Test0769.instanceCount |= 9;
            for (i11 = 1; i11 < 9; i11++) {
                Test0769.iArrFld[i9 + 1][i11 - 1] = 58462;
                Test0769.iFld += (int) (-1.388F + (i11 * i11));
                Test0769.iArrFld[i9 + 1][i11 - 1] *= i12;
                i10 = i11;
                f = Test0769.iFld;
            }
            Test0769.bFld = Test0769.bFld;
            i10 += -35924;
            i12 += (i9 + i12);
            switch (((i9 % 2) * 5) + 79) {
                case 88:
                    Test0769.byFld *= (byte) Test0769.iFld;
                    break;
                case 80:
                    f = i12;
                    i12 += (57850 + (i9 * i9));
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + Float.floatToIntBits(f);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i4, int i5, int i6) {

        int i7 = -38569, i8 = 45007, i13 = -205, i14 = 0, i15 = -38896, i16 = -24;
        double d = -38.113306;
        float f1 = -1.445F;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -2.597F);

        for (i7 = 176; i7 > 2; i7 -= 2) {
            Test0769.iFld = Math.min(Math.min(Test0769.iFld * i4, Math.abs(i6)), iMeth1());
            Test0769.iArrFld[i7][i7 - 1] = i4;
            d *= -3;
            Test0769.instanceCount &= Test0769.instanceCount;
            Test0769.instanceCount += 235L;
            Test0769.instanceCount += (((i7 * i7) + f1) - i7);
            fArr[i7 + 1] += Test0769.byFld;
            if (i6 != 0) {
            }
        }
        for (i13 = 5; i13 < 212; ++i13) {
            for (i15 = 1; i15 < 8; i15++) {
                try {
                    Test0769.iFld = (2146818426 % Test0769.iArrFld[i13 + 1][i15 + 1]);
                    i8 = (-220 % i5);
                    Test0769.iArrFld[i13][i13] = (i6 / -109);
                } catch (ArithmeticException a_e) {
                }
                Test0769.instanceCount += (i15 * i15);
                i6 ^= (int) Test0769.instanceCount;
                Test0769.instanceCount += i15;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i13 + i14 +
                i15 + i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static short sMeth(long l) {

        int i = -5, i1 = 9101, i2 = 7, i3 = 2, i17 = 13, i18 = -17107, i19 = 0, i20 = -3;
        float f2 = -2.751F;
        short s = -66;
        double[] dArr = new double[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(dArr, 0.120569);
        FuzzerUtils.init(lArr, -9L);

        for (i = 7; 200 > i; ++i) {
            l *= (long) Math.abs(Math.abs(i * Test0769.instanceCount));
        }
        for (i2 = 146; i2 > 8; i2--) {
            Test0769.iFld += i3;
            i1 += iMeth(i2, i3, i3);
            for (i17 = 1; i17 < 11; i17++) {
                i1 += (i17 + Test0769.instanceCount);
                f2 = l;
                i3 += i17;
                Test0769.iArrFld[i2 + 1][i17] = 60;
                dArr[i2] += i;
                for (i19 = 2; i19 > i2; i19--) {
                    s <<= (short) i2;
                    f2 += i2;
                    lArr[i19 + 1] = i19;
                }
            }
        }
        long meth_res = l + i + i1 + i2 + i3 + i17 + i18 + Float.floatToIntBits(f2) + i19 + i20 + s +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0769 _instance = new Test0769();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i21 = -9, i22 = 55, i23 = 32383, i24 = 55051;
        double d1 = -82.25028;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, -43.32F);

        Test0769.iFld -= (sMeth(1090687266L) + Test0769.iFld);
        i21 = 1;
        while ((i21 += 2) < 155) {
            Test0769.bFld = Test0769.bFld;
            Test0769.fFld = Test0769.iFld;
            Test0769.iFld = Test0769.iFld;
            for (i22 = 10; i22 < 325; ++i22) {
                Test0769.instanceCount -= i22;
                sFld = (short) 8L;
                Test0769.iFld += (int) (50707L + (i22 * i22));
                if (Test0769.bFld) {
                    Test0769.bFld = Test0769.bFld;
                    Test0769.iArrFld[i21][i22 - 1] >>>= sFld;
                } else if (Test0769.bFld) {
                    i23 = (int) Test0769.instanceCount;
                } else if (false) {
                    d1 += Test0769.byFld;
                }
                if (Test0769.bFld) break;
                switch ((i21 % 10) + 97) {
                    case 97:
                        i24 = 1;
                        while (++i24 < 2) {
                            Test0769.iFld = Test0769.iFld;
                            Test0769.fFld += i24;
                            Test0769.instanceCount += i24;
                            Test0769.iFld = i22;
                            Test0769.instanceCount -= i23;
                            Test0769.iFld += Test0769.iFld;
                            Test0769.iFld *= 5;
                            fArr1[i22 - 1] -= -40;
                            i23 += i24;
                        }
                        break;
                    case 98:
                        Test0769.iFld += i22;
                        if (true) {
                            Test0769.iArrFld[i21] = Test0769.iArrFld[i22 + 1];
                            Test0769.iArrFld[i22][i22 + 1] *= (int) Test0769.fFld;
                        } else if (true) {
                            i23 <<= (int) Test0769.instanceCount;
                        } else {
                            Test0769.instanceCount = -3793647085L;
                        }
                        break;
                    case 99:
                        Test0769.iFld <<= 112;
                        break;
                    case 100:
                        Test0769.instanceCount >>>= i22;
                        break;
                    case 101:
                    case 102:
                    case 103:
                        Test0769.iFld += (i22 ^ Test0769.iFld);
                    case 104:
                        if (Test0769.bFld) break;
                        break;
                    case 105:
                        d1 += i22;
                        break;
                    case 106:
                }
            }
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d1 i24 fArr1 = " + Double.doubleToLongBits(d1) + "," + i24 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0769.instanceCount Test0769.iFld Test0769.bFld = " + Test0769.instanceCount + "," + Test0769.iFld +
                "," + (Test0769.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0769.byFld Test0769.fFld sFld = " + Test0769.byFld + "," + Float.floatToIntBits(Test0769.fFld) +
                "," + sFld);
        FuzzerUtils.out.println("Test0769.iArrFld = " + FuzzerUtils.checkSum(Test0769.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
