// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0320 {

    public static final int N = 400;

    public static long instanceCount = 4539223936337442867L;
    public static byte byFld = 127;
    public static int iFld = -28416;
    public static short sFld = -9331;
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0320.fArrFld, 52.893F);
    }

    public double dFld = -59.59911;

    public static int iMeth(int i1, int i2, int i3) {

        float f1 = 59.310F;

        Test0320.instanceCount = (long) ((f1++) + i3);
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {


        Test0320.iFld *= Test0320.iFld;
        Test0320.iFld = Test0320.iFld;
        vMeth_check_sum += 0;
    }

    public static int iMeth1(int i18, float f3, short s1) {

        int i19 = -201;
        int i20 = 12;
        int i21 = -4;
        int i22 = -233;
        int i23 = -12159;
        int[] iArr2 = new int[N];
        boolean b = true;

        FuzzerUtils.init(iArr2, -35882);

        i19 = 1;
        do {
            vMeth();
            i18 += i18;
        } while (++i19 < 238);
        for (i20 = 2; i20 < 163; i20 += 3) {
            for (i22 = i20; i22 < 29; ++i22) {
                i18 = (int) -4930337148476902318L;
            }
            iArr2[i20] &= (int) -51L;
            if (b) {
                Test0320.instanceCount = i19;
                Test0320.byFld <<= Test0320.byFld;
                Test0320.instanceCount -= 238;
            } else {
                Test0320.instanceCount += (i20 * i20);
            }
            if (b) break;
            i18 += (int) Test0320.instanceCount;
            b = true;
        }
        long meth_res = i18 + Float.floatToIntBits(f3) + s1 + i19 + i20 + i21 + i22 + i23 + (b ? 1 : 0) +
                FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth(int i10) {

        int i11 = 11;
        int i12 = -7;
        int i13 = 0;
        int i14 = 0;
        int i15 = 121;
        int i16 = 10;
        int i17 = 14578;
        int i24 = 221;
        int i25 = -45842;
        int[] iArr1 = new int[N];
        float f2 = -19.345F;
        double d = 0.85223;

        FuzzerUtils.init(iArr1, 3);

        for (i11 = 20; 344 > i11; ++i11) {
            i12 *= iMeth((int) ((i11 * Test0320.instanceCount) - Test0320.byFld), (int) ((i13 + i13) - (Test0320.instanceCount--)),
                    (int) ((i10 * 0.125551) * (Test0320.iFld % (Test0320.iFld | 1))));
            for (i14 = 5; i14 > 1; --i14) {
                iArr1[i14 - 1] = (int) (--f2);
            }
            iArr1[i11 + 1] += (int) (((252L * (Test0320.sFld * Test0320.iFld)) * iMeth(i13, -7, i11)) + (Test0320.iFld--));
            i16 = 1;
            do {
                switch (((i16 % 7) * 5) + 57) {
                    case 88:
                        i17 = ((Integer.reverseBytes(i11) | (i13 - Test0320.iFld)) + (-(++Test0320.iFld)));
                        Test0320.instanceCount += (-6462205420662660675L + (i16 * i16));
                        i17 -= i10;
                        break;
                    case 70:
                        Test0320.instanceCount += iMeth1(-59042, f2, Test0320.sFld);
                        break;
                    case 73:
                        for (i24 = 3; i24 > 1; i24--) {
                            i12 += (((i24 * i12) + Test0320.byFld) - i11);
                            Test0320.iFld = i12;
                            Test0320.fArrFld[i24 - 1] = Test0320.instanceCount;
                        }
                        break;
                    case 77:
                        i12 += i16;
                        break;
                    case 72:
                        i15 = (int) d;
                    case 68:
                        i10 += i16;
                        break;
                    case 75:
                        i17 -= 138;
                        break;
                    default:
                        i10 += i16;
                }
            } while ((i16 += 2) < 5);
        }
        long meth_res = i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) + i16 + i17 + i24 + i25 +
                Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0320 _instance = new Test0320();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f = 19.974F, f4 = -1.673F;
        int i = -170;
        int i4 = 15;
        int i5 = -4;
        int i6 = 124;
        int i7 = 0;
        int i8 = -23888;
        int i9 = 9;
        int i26 = 2;
        int i27 = -104;
        int[] iArr = new int[N];
        byte by = -45;
        short s = 4474;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(lArr, -18201L);

        Test0320.instanceCount = (long) ((-2.31749 - (dFld--)) * (f--));
        i = iMeth(i++, i, (0 * (i = i)) + i);
        i = (-Integer.reverseBytes((int) (i * f)));
        for (i4 = 3; 187 > i4; i4++) {
            Test0320.fArrFld[i4 - 1] = ((Test0320.instanceCount + (i + 12L)) * iMeth((int) (iArr[i4] = (int) -1405661833L), i +=
                    i5, iArr[i4 - 1]));
            lArr = (lArr = (lArr = lArr));
            for (i6 = 3; i6 < 136; ++i6) {
                by = (byte) (((i5 - Test0320.instanceCount) << i) >>> (--iArr[i4 + 1]));
                for (i8 = 1; i8 < 2; ++i8) {
                    i = (int) (Test0320.instanceCount++);
                    s += (short) (((i8 * i6) + f) - f);
                    s += (short) ((Math.max(i, 1) * dFld) * (Test0320.instanceCount * (i6 + i8)));
                    i >>>= (int) ((long) ((i9++) * (i6 + f)) >>> (long) (-(f * i9)));
                    i7 |= (++i9);
                    by >>>= (byte) Math.max(Test0320.instanceCount, lMeth(-8));
                    i5 = i6;
                    i5 -= (int) Test0320.instanceCount;
                }
                iArr[i6 + 1] += (int) dFld;
                for (i26 = 1; 2 > i26; ++i26) {
                    i27 += (i26 - i6);
                    i27 = i5;
                    i5 += i;
                    iArr[i6] -= i4;
                    by += (byte) f;
                }
            }
            f4 = 1;
            while ((f4 += 2) < 136) {
                i += (int) f4;
                lArr[(int) (f4)] += Test0320.iFld;
                Test0320.instanceCount += (long) (((f4 * i8) + i27) - Test0320.instanceCount);
                dFld += -54293;
                f = (float) dFld;
            }
        }

        FuzzerUtils.out.println("f i i4 = " + Float.floatToIntBits(f) + "," + i + "," + i4);
        FuzzerUtils.out.println("i5 i6 i7 = " + i5 + "," + i6 + "," + i7);
        FuzzerUtils.out.println("by i8 i9 = " + by + "," + i8 + "," + i9);
        FuzzerUtils.out.println("s i26 i27 = " + s + "," + i26 + "," + i27);
        FuzzerUtils.out.println("f4 iArr lArr = " + Float.floatToIntBits(f4) + "," + FuzzerUtils.checkSum(iArr) + "," +
                FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0320.instanceCount dFld Test0320.byFld = " + Test0320.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0320.byFld);
        FuzzerUtils.out.println("Test0320.iFld Test0320.sFld Test0320.fArrFld = " + Test0320.iFld + "," + Test0320.sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0320.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
