// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0793 {

    public static final int N = 400;

    public static long instanceCount = 30141L;
    public static boolean bFld = true;
    public static short sFld = 13029;
    public static long[] lArrFld = new long[N];
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0793.lArrFld, 3L);
    }

    public volatile double dFld = 108.127014;

    public static boolean bMeth(int i5, float f1) {

        int i6 = 59878, i7 = 49293, i8 = 79, i9 = 15114, i10 = 228, i11 = -7;
        double d = -92.25313, d1 = -70.64438;
        short s = -16271;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, -23082L);

        for (i6 = 11; i6 < 231; i6++) {
            f1 = f1;
            for (i8 = 1; i8 < 7; i8++) {
                lArr1[i6 - 1] -= Test0793.instanceCount;
                for (d = 1; d < 2; d++) {
                    i10 += i7;
                    lArr1[(int) (d - 1)] *= i7;
                    i10 <<= 134;
                    Test0793.bFld = Test0793.bFld;
                    Test0793.instanceCount -= s;
                    i9 += (int) (d * d);
                }
            }
        }
        for (d1 = 5; d1 < 173; d1++) {
            i9 += (int) (d1 + i9);
            i7 -= 87;
            f1 *= (float) d;
        }
        long meth_res = i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + i10 + s +
                Double.doubleToLongBits(d1) + i11 + FuzzerUtils.checkSum(lArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static float fMeth() {

        int i3 = 19686, i4 = 242, i12 = 4, i13 = -40835, i14 = 243, i15 = 44761;
        byte by = -84;
        float f2 = -104.431F;
        double d2 = -41.100178;
        short s1 = 1741;

        for (i3 = 361; i3 > 12; i3--) {
            i4 += by;
            bMeth(i4, f2);
            for (i12 = 1; i12 < 5; ++i12) {
                Test0793.lArrFld[i12] = -4;
                d2 = Test0793.instanceCount;
                i4 = i4;
            }
        }
        i4 -= s1;
        by <<= (byte) i13;
        i13 = i3;
        for (i14 = 17; i14 < 385; ++i14) {
            Test0793.bFld = Test0793.bFld;
            i13 -= i3;
        }
        i4 = (int) 2470181678L;
        i15 = (int) Test0793.instanceCount;
        long meth_res = i3 + i4 + by + Float.floatToIntBits(f2) + i12 + i13 + Double.doubleToLongBits(d2) + s1 + i14 +
                i15;
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static int iMeth(int i1, int i2) {

        int i16 = 5, i17 = 1, i18 = 243, i19 = 43620, i20 = -10, i21 = 177;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -5695087456596219112L);

        lArr[(-5 >>> 1) % N] = (long) (-fMeth());
        for (i16 = 334; i16 > 10; i16--) {
            if (Test0793.bFld) {
                i2 = 23199;
            } else {
                i1 += (28 + (i16 * i16));
                for (i18 = 1; i18 < 5; i18++) {
                    for (i20 = 1; i20 < 2; ++i20) {
                        Test0793.bFld = true;
                        i19 = (int) Test0793.instanceCount;
                        i17 += i20;
                        Test0793.sFld += (short) (((i20 * Test0793.instanceCount) + Test0793.instanceCount) - i19);
                    }
                    Test0793.instanceCount -= Test0793.sFld;
                    Test0793.sFld >>= (short) i20;
                    i21 = -24275;
                    Test0793.sFld = (short) Test0793.instanceCount;
                }
            }
        }
        long meth_res = i1 + i2 + i16 + i17 + i18 + i19 + i20 + i21 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr2) {

        try {
            Test0793 _instance = new Test0793();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr2);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr3) {

        int i = -55722;
        int i22 = -55;
        int i23 = 32297;
        int i24 = 3209;
        int i25 = -2;
        int i26 = 12517;
        int i27 = 13;
        int i28 = -13;
        int i29 = -55;
        int[] iArr = new int[N];
        double d3 = 7.81156;
        double d4 = 1.16908;
        double[] dArr = new double[N];
        long l = -3530317153048758126L;
        long[] lArr2 = new long[N];
        float f3 = -84.580F;
        byte by1 = 115;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 8482);
        FuzzerUtils.init(dArr, 97.48653);
        FuzzerUtils.init(iArr, -53997);
        FuzzerUtils.init(lArr2, -10L);

        sArr[(89 >>> 1) % N] = (short) (i <<= Math.min(iMeth(i, i), i));
        for (d3 = 4; d3 < 207; ++d3) {
            switch ((int) ((d3 % 5) + 126)) {
                case 126:
                    dArr[(int) (d3)] *= Test0793.sFld;
                case 127:
                case 128:
                    Test0793.bFld = false;
                    break;
                case 129:
                    iArr[(int) (d3)] >>= i;
                    i += (int) Test0793.instanceCount;
                    i = 60546;
                    Test0793.instanceCount *= 34445;
                    break;
                case 130:
                    for (l = 1; 124 > l; ++l) {
                        i22 = (int) f3;
                        f3 += l;
                        if (Test0793.bFld) continue;
                    }
                    dFld -= Test0793.instanceCount;
                    Test0793.bFld = false;
                    break;
            }
            i += (int) (d3 * d3);
        }
        for (i24 = 2; i24 < 158; ++i24) {
            i26 = 1;
            while (++i26 < 161) {
                i /= (int) (i24 | 1);
                i25 += (i26 - i23);
            }
            i22 += (i24 * i24);
            Test0793.instanceCount *= i23;
            i25 = i22;
            for (d4 = i24; 161 > d4; d4++) {
                for (i28 = 1; i28 < 1; i28++) {
                    f3 += (i28 * i25);
                    Test0793.instanceCount += (i28 * i28);
                }
                by1 -= (byte) 14;
                lArr2[(int) (d4 + 1)] = 95L;
                i22 |= i27;
            }
        }

        FuzzerUtils.out.println("i d3 i22 = " + i + "," + Double.doubleToLongBits(d3) + "," + i22);
        FuzzerUtils.out.println("l i23 f3 = " + l + "," + i23 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d4 i27 i28 = " + Double.doubleToLongBits(d4) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 by1 sArr = " + i29 + "," + by1 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("dArr iArr lArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
                FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0793.instanceCount Test0793.bFld Test0793.sFld = " + Test0793.instanceCount + "," + (Test0793.bFld ? 1
                : 0) + "," + Test0793.sFld);
        FuzzerUtils.out.println("dFld Test0793.lArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0793.lArrFld));

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  bMeth ->  bMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
