// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0850 {

    public static final int N = 400;

    public static long instanceCount = -14991L;
    public static volatile int iFld = 14;
    public static volatile float fFld = 0.1022F;
    public static boolean bFld = false;
    public static short[] sArrFld = new short[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0850.sArrFld, (short) 4810);
    }

    public double dFld = 123.114091;

    public static void vMeth2(int i5) {

        int i6 = 10;
        int i7 = 28247;
        int i8 = 20112;
        int i9 = 61705;
        int i10 = 8;
        int i11 = 42017;
        int[] iArr1 = new int[N];
        boolean b = false;
        boolean[] bArr = new boolean[N];
        float f = 48.306F, f1 = 0.703F;
        short s = 31770;

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, 2);

        i5 -= (int) -2.112455;
        for (i6 = 13; i6 < 346; ++i6) {
            bArr[i6 - 1] = b;
            for (i8 = 1; i8 < 5; ++i8) {
                i10 = (int) 7183833862913017865L;
                f = 1;
                while (++f < 2) {
                    i5 += (int) ((long) f ^ i8);
                    switch (((i11 >>> 1) % 10) + 45) {
                        case 45:
                            b = b;
                            iArr1[(int) (f + 1)] += -93;
                            i5 += i10;
                        case 46:
                            Test0850.instanceCount *= i10;
                            break;
                        case 47:
                            i7 += (int) (f * f);
                            s -= (short) Test0850.instanceCount;
                            i11 += (int) -1.706F;
                        case 48:
                            Test0850.instanceCount >>>= Test0850.instanceCount;
                            break;
                        case 49:
                            i9 += i5;
                            break;
                        case 50:
                            i9 = 1;
                            break;
                        case 51:
                            iArr1[i6 - 1] >>= i10;
                            break;
                        case 52:
                            i10 += i7;
                            break;
                        case 53:
                            f1 *= i8;
                        case 54:
                            i11 = i8;
                            break;
                    }
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + s +
                Float.floatToIntBits(f1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1() {

        int i2 = 13;
        int i3 = 20521;
        int i4 = 14236;
        int i12 = 14;
        int i13 = 5063;
        int i14 = -58;
        int i15 = -51584;
        int i16 = 102;
        int i17 = -34;
        int[][] iArr = new int[N][N];
        short s1 = 19258;
        float f2 = -39.933F;
        boolean b1 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 33690);
        FuzzerUtils.init(lArr, 40130L);

        Test0850.instanceCount *= iArr[(i2 >>> 1) % N][(i2 >>> 1) % N];
        for (i3 = 15; 280 > i3; i3++) {
            lArr = lArr;
            vMeth2(i3);
            i4 -= i4;
            i4 = i2;
        }
        for (i12 = 21; 343 > i12; i12 += 3) {
            i2 >>= i2;
            if (b1) {
                Test0850.instanceCount = s1;
                for (i14 = 1; i14 < 15; ++i14) {
                    i13 += (((i14 * i15) + Test0850.instanceCount) - i2);
                    for (i16 = i12; i16 < 2; i16 += 2) {
                        f2 += (((i16 * i3) + Test0850.iFld) - i12);
                        Test0850.iFld -= i17;
                    }
                }
            } else if (b1) {
                i4 *= (int) f2;
            } else {
                Test0850.instanceCount = i4;
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i12 + i13 + s1 + i14 + i15 + i16 + i17 + Float.floatToIntBits(f2) + (b1 ? 1
                : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(byte by) {

        int i = -192;
        int i1 = -45616;
        int i18 = 0;
        int i19 = -23025;
        int[] iArr2 = new int[N];
        boolean b2 = true;
        boolean[] bArr1 = new boolean[N];
        double d = -1.32348;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr2, 18980);
        FuzzerUtils.init(lArr1, -135L);
        FuzzerUtils.init(bArr1, false);

        for (i = 1; i < 237; ++i) {
            if (b2) {
                vMeth1();
                if (b2) break;
                iArr2[i - 1] = (int) Test0850.instanceCount;
                Test0850.iFld = i1;
            } else if (b2) {
                d = 1;
                do {
                    lArr1[(int) (d)] += (long) Test0850.fFld;
                    Test0850.instanceCount += (long) 1.5162;
                } while (++d < 7);
                by += (byte) (i * i);
                for (i18 = 1; i18 < 7; ++i18) {
                    short s2 = 16684;
                    i1 += i18;
                    s2 -= (short) Test0850.instanceCount;
                    iArr2[i + 1] = Test0850.iFld;
                    bArr1[i18] = b2;
                }
            }
        }
        vMeth_check_sum += by + i + i1 + (b2 ? 1 : 0) + Double.doubleToLongBits(d) + i18 + i19 +
                FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0850 _instance = new Test0850();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        byte by1 = -42;
        byte[] byArr = new byte[N];
        int i20 = -49946;
        int i21 = 0;
        int i22 = 64456;
        int i23 = 88;
        int i24 = -150;
        int i25 = -20398;
        int i26 = 10215;
        int i27 = 14126;
        int i28 = -19;
        int[] iArr3 = new
                int[N];
        short s4 = 9321;
        long[] lArr2 = new long[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(byArr, (byte) -23);
        FuzzerUtils.init(lArr2, -38089L);
        FuzzerUtils.init(iArr3, -6);
        FuzzerUtils.init(dArr, -25.95141);

        vMeth(by1);
        Test0850.instanceCount *= (long) dFld;
        for (i20 = 4; i20 < 212; i20++) {
            Test0850.iFld = -14539;
            byArr = byArr;
        }
        for (i22 = 6; i22 < 147; i22++) {
            i24 = 1;
            while (++i24 < 178) {
                Test0850.instanceCount = Test0850.iFld;
                for (i25 = i24; i25 < 1; i25++) {
                    i23 += i25;
                    i26 += (((i25 * Test0850.instanceCount) + i20) - Test0850.instanceCount);
                    by1 += (byte) i25;
                    i23 = (int) Test0850.instanceCount;
                    dFld = -51.356F;
                    lArr2[(11 >>> 1) % N] >>= i22;
                }
                for (i27 = 1; i27 < 1; ++i27) {
                    Test0850.fFld += (223 + (i27 * i27));
                    if (Test0850.bFld) break;
                    Test0850.instanceCount += i27;
                    Test0850.instanceCount = i27;
                    Test0850.instanceCount *= i21;
                    switch (((i20 >>> 1) % 2) + 114) {
                        case 114:
                            if (Test0850.bFld) continue;
                            break;
                        case 115:
                            iArr3[i24] += i22;
                            dArr[i27] = dFld;
                            Test0850.iFld += (i27 - i23);
                            Test0850.instanceCount = (long) dFld;
                            break;
                        default:
                            Test0850.instanceCount += (i27 * s4);
                            iArr3[i24 - 1] >>= (int) -70L;
                            i21 = i28;
                    }
                }
            }
        }

        FuzzerUtils.out.println("by1 i20 i21 = " + by1 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 s4 byArr = " + i28 + "," + s4 + "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("lArr2 iArr3 dArr = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(iArr3)
                + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0850.instanceCount Test0850.iFld Test0850.fFld = " + Test0850.instanceCount + "," + Test0850.iFld +
                "," + Float.floatToIntBits(Test0850.fFld));
        FuzzerUtils.out.println("dFld Test0850.bFld Test0850.sArrFld = " + Double.doubleToLongBits(dFld) + "," + (Test0850.bFld ? 1
                : 0) + "," + FuzzerUtils.checkSum(Test0850.sArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
