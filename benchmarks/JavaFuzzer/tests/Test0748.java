// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0748 {

    public static final int N = 400;

    public static long instanceCount = 51443L;
    public static double dFld1 = 0.95418;
    public static volatile float fFld = 1.240F;
    public static volatile int[] iArrFld = new int[N];
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0748.iArrFld, 23);
    }

    public double dFld = -58.48630;
    public long lFld = -16L;
    public boolean bFld = true;
    public long[] lArrFld = new long[N];

    public static void vMeth1(int i12, double d) {

        double d1 = -89.98757;
        int i13 = 12055, i14 = 25080;
        byte by = 96;
        float f = 37.142F;
        long l = -233L;
        long[] lArr = new long[N];
        boolean b1 = true;

        FuzzerUtils.init(lArr, -10409L);

        for (d1 = 7; d1 < 131; d1++) {
            switch ((int) ((d1 % 6) + 84)) {
                case 84:
                    lArr[(int) (d1)] >>= i12;
                    by >>= (byte) -32576;
                    break;
                case 85:
                    if (b1) {
                        i12 &= -10;
                        i13 += (int) (((d1 * f) + l) - l);
                        i13 = -225;
                    } else if (b1) {
                        i14 = 1;
                        while (++i14 < 13) {
                            short s = 8026;
                            s += (short) i13;
                        }
                    } else if (b1) {
                        i12 *= by;
                        vMeth1_check_sum += i12 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i13 + by +
                                Float.floatToIntBits(f) + l + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
                        return;
                    } else {
                        f = by;
                        l -= l;
                        i13 += (int) (d1 * i14);
                        i13 <<= i13;
                    }
                    break;
                case 86:
                    f += (float) ((long) d1 | (long) i13);
                    break;
                case 87:
                    Test0748.instanceCount *= i12;
                    break;
                case 88:
                    i13 *= i14;
                    break;
                case 89:
                    i13 |= by;
                    break;
            }
        }
        vMeth1_check_sum += i12 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i13 + by +
                Float.floatToIntBits(f) + l + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i7, int i8) {

        int i9 = 3, i10 = 136, i11 = 41531, i16 = -56148, i17 = 14, i18 = -9, i19 = -11;
        short s1 = -12846;
        float f1 = -63.373F;

        for (i9 = 22; i9 < 353; i9++) {
            i7 = 54100;
            if (i9 != 0) {
                vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + i16 + i17 + s1 + Float.floatToIntBits(f1) + i18 + i19;
                return;
            }
        }
        i11 = 1;
        do {
            vMeth1(i8, Test0748.dFld1);
            i7 |= (int) Test0748.instanceCount;
            Test0748.instanceCount -= i10;
            Test0748.iArrFld[i11 + 1] <<= i7;
            for (i16 = 1; 7 > i16; ++i16) {
                s1 -= (short) -9;
            }
            Test0748.instanceCount = Test0748.instanceCount;
            f1 += i7;
            for (i18 = 1; 7 > i18; i18++) {
                Test0748.instanceCount = i10;
                i8 >>>= -3408;
            }
        } while (++i11 < 235);
        vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + i16 + i17 + s1 + Float.floatToIntBits(f1) + i18 + i19;
    }

    public static double dMeth(int i5, int i6) {

        int i20 = 11, i21 = 227, i22 = 36592, i23 = -140, i24 = 57166, i25 = 20408, i26 = -6, i27 = 14, i28 = 47615, i29 = -39092;
        long l1 = -164L;
        long[] lArr1 = new long[N];
        float f2 = 0.352F;

        FuzzerUtils.init(lArr1, 5L);

        vMeth(i5, 14);
        for (i20 = 17; i20 < 275; i20++) {
            i5 += i20;
            i21 ^= i20;
            i22 = 1;
            do {
                Test0748.instanceCount = i22;
            } while (++i22 < 6);
            i6 >>= (int) -6878L;
        }
        i23 = 1;
        while (++i23 < 366) {
            for (i24 = 1; i24 < 5; i24++) {
                i25 = 123;
            }
        }
        for (l1 = 146; l1 > 2; l1--) {
            for (i27 = 1; i27 < 11; ++i27) {
                try {
                    i21 = (i25 % 1779261031);
                    i6 = (i29 / -50359);
                    i25 = (i6 / i28);
                } catch (ArithmeticException a_e) {
                }
                f2 = l1;
            }
            lArr1[(int) (l1 + 1)] *= (long) Test0748.dFld1;
        }
        long meth_res = i5 + i6 + i20 + i21 + i22 + i23 + i24 + i25 + l1 + i26 + i27 + i28 + i29 +
                Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr1);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0748 _instance = new Test0748();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -233;
        int i1 = 185;
        int i2 = 47344;
        int i3 = -38;
        int i4 = -64096;
        int[] iArr = new int[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr, -1);
        FuzzerUtils.init(fArr, 0.167F);

        i = 1;
        do {
            for (i1 = 1; i1 < 65; i1++) {
                for (i3 = i; 2 > i3; i3++) {
                    boolean b = true;
                    i2 += i3;
                    switch (((i % 8) * 5) + 10) {
                        case 19:
                            if (b = b) break;
                            Test0748.instanceCount = (i4++);
                            break;
                        case 40:
                            Test0748.instanceCount += i3;
                            i2 += i3;
                            iArr[i] <<= iArr[i1];
                            break;
                        case 47:
                            lArrFld[i3 - 1] ^= (i4++);
                            dFld = (dMeth(176, i3) + -1425234725L);
                            break;
                        case 24:
                            if (b) {
                                i4 -= i3;
                                i2 += (((i3 * i1) + i1) - i4);
                            }
                            i4 *= (int) Test0748.dFld1;
                            Test0748.instanceCount -= Test0748.instanceCount;
                            break;
                        case 46:
                            i2 = i3;
                        case 15:
                            lFld = i4;
                            i2 -= -46214;
                            dFld -= Test0748.instanceCount;
                            i4 += (i3 + i4);
                        case 12:
                            Test0748.fFld = i3;
                            Test0748.instanceCount *= Test0748.instanceCount;
                            i4 += (((i3 * i4) + Test0748.fFld) - i);
                            break;
                        case 32:
                            if (bFld) {
                                i2 += (i3 ^ i1);
                                fArr[i] = (float) Test0748.dFld1;
                            }
                            i2 = i2;
                            break;
                        default:
                            Test0748.iArrFld[i3 - 1] = i1;
                    }
                }
            }
        } while (++i < 390);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 iArr = " + i3 + "," + i4 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0748.instanceCount dFld Test0748.dFld1 = " + Test0748.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Double.doubleToLongBits(Test0748.dFld1));
        FuzzerUtils.out.println("lFld Test0748.fFld bFld = " + lFld + "," + Float.floatToIntBits(Test0748.fFld) + "," + (bFld ?
                1 : 0));
        FuzzerUtils.out.println("lArrFld Test0748.iArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(Test0748.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
