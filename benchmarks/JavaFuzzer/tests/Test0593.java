// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0593 {

    public static final int N = 400;

    public static long instanceCount = -12L;
    public static volatile short sFld = -8994;
    public static float fFld = 102.665F;
    public static volatile byte byFld = -13;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public int[] iArrFld = new int[N];
    public long[] lArrFld = new long[N];

    public static void vMeth2() {

        int i6 = -4, i7 = -34328, i8 = -6, i9 = -12454, i10 = 164, i11 = -7, i12 = 28;
        byte by = 44, by1 = -36;
        boolean b = false;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -100.205F);

        if (true) {
            for (i6 = 8; 179 > i6; ++i6) {
                i8 = 1;
                while (++i8 < 9) {
                    fArr[i6] = 0;
                    i7 += (4 + (i8 * i8));
                    i7 = by;
                }
                by1 += (byte) i6;
                Test0593.instanceCount = i7;
                for (i9 = 1; i9 < 9; i9++) {
                    Test0593.instanceCount = i10;
                }
                for (i11 = 9; 1 < i11; --i11) {
                    if (i11 != 0) {
                        vMeth2_check_sum += i6 + i7 + i8 + by + by1 + i9 + i10 + i11 + i12 + (b ? 1 : 0) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                    i12 -= 20405;
                    i7 = i6;
                }
                if (b) continue;
            }
        } else if (b) {
            i12 += (int) Test0593.instanceCount;
        }
        vMeth2_check_sum += i6 + i7 + i8 + by + by1 + i9 + i10 + i11 + i12 + (b ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i3, int i4, int i5) {

        float f = -2.256F;
        int i13 = -47297;
        int i14 = 64047;
        int i15 = -22958;
        int i16 = 10987;
        int i17 = -166;
        int i18 = -31750;
        int i19 = 663;
        int i20 = -18;
        int[] iArr = new int[N];
        long l = 308699980L;
        long[][] lArr = new long[N][N];
        double d1 = 19.39229;
        boolean b1 = false;

        FuzzerUtils.init(iArr, 112);
        FuzzerUtils.init(lArr, -243L);

        vMeth2();
        f *= -18806;
        if (b1) {
            for (i13 = 8; i13 < 222; i13++) {
                i3 = 38731;
                switch (((i13 % 9) * 5) + 49) {
                    case 86:
                        i4 *= (int) 40413455560245287L;
                        switch (((i13 % 5) * 5) + 64) {
                            case 86:
                                for (i15 = i13; i15 < 8; ++i15) {
                                    double d = 35.60035;
                                    d = i4;
                                    i3 = (int) Test0593.instanceCount;
                                }
                                break;
                            case 79:
                                for (i17 = 1; i17 < 8; i17++) {
                                    for (i19 = 2; i19 > 1; i19--) {
                                        iArr[i13] += i18;
                                        i20 += (((i19 * Test0593.instanceCount) + i13) - f);
                                    }
                                }
                                break;
                            case 80:
                                lArr[i13][i13] = (long) f;
                                break;
                            case 88:
                                i14 += (i13 + l);
                                break;
                            case 83:
                                d1 = Test0593.instanceCount;
                                break;
                            default:
                                iArr[i13] -= i4;
                        }
                        break;
                    case 72:
                        i18 ^= Test0593.sFld;
                        break;
                    case 74:
                    case 92:
                        d1 *= i16;
                        break;
                    case 57:
                        b1 = b1;
                    case 62:
                        d1 = 6565397930695876401L;
                    case 91:
                    case 58:
                        l = l;
                        break;
                    case 66:
                        i16 += (int) l;
                        break;
                    default:
                        i3 += (int) Test0593.instanceCount;
                }
            }
        } else {
            iArr[(i15 >>> 1) % N] += i16;
        }
        vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f) + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + l
                + Double.doubleToLongBits(d1) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1, int i2) {

        int i21 = -4, i22 = -45308, i23 = 71;
        double d2 = -84.101837;
        double[] dArr = new double[N];
        long l1 = 7364724406072230891L;
        long[] lArr1 = new long[N];
        float f1 = -109.810F;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, 0.310F);
        FuzzerUtils.init(lArr1, 1411640926694924061L);
        FuzzerUtils.init(dArr, -23.129132);

        vMeth1(i1, i1, 20927);
        i21 = 1;
        do {
            i22 = 1;
            do {
                Test0593.instanceCount <<= i2;
                d2 -= Test0593.instanceCount;
                fArr1[i21 - 1] -= i2;
                for (l1 = 1; 1 < l1; l1--) {
                    f1 += i23;
                    Test0593.instanceCount *= (long) -105.115489;
                }
                switch (((-1 >>> 1) % 8) + 55) {
                    case 55:
                        i2 += i22;
                        i1 = (int) l1;
                        i1 = 10;
                        i2 ^= (int) -10079L;
                        break;
                    case 56:
                        lArr1[i21 - 1] -= (long) d2;
                    case 57:
                        f1 += (((i22 * i21) + Test0593.instanceCount) - l1);
                    case 58:
                        f1 -= (float) 25.44745;
                        break;
                    case 59:
                        Test0593.instanceCount += (((i22 * i21) + i23) - i1);
                        break;
                    case 60:
                        dArr[i21] += -12455;
                        break;
                    case 61:
                        Test0593.instanceCount = 42562;
                    case 62:
                        i23 &= (int) -30480L;
                        break;
                    default:
                        i1 <<= (int) Test0593.instanceCount;
                }
            } while (++i22 < 5);
        } while (++i21 < 365);
        vMeth_check_sum += i1 + i2 + i21 + i22 + Double.doubleToLongBits(d2) + l1 + i23 + Float.floatToIntBits(f1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(lArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0593 _instance = new Test0593();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 27494, i24 = -237, i25 = 12, i26 = 2069, i27 = -110, i28 = 39, i29 = -2;
        boolean b2 = true;
        double d3 = 1.111410, d4 = 1.35461;

        i = 1;
        while (++i < 186) {
            vMeth(i, i);
            for (i24 = 4; i24 < 135; i24++) {
                if (b2) break;
                i25 += (((i24 * Test0593.fFld) + Test0593.sFld) - i);
                iArrFld[i24] = (int) 1.285F;
                for (i26 = i; i26 < 2; i26++) {
                    iArrFld[i24] <<= i26;
                    i25 = (int) Test0593.instanceCount;
                    i27 = i;
                    switch ((((17 >>> 1) % 1) * 5) + 91) {
                        case 96:
                            i27 += (5 + (i26 * i26));
                            break;
                        default:
                            if (b2) continue;
                    }
                    iArrFld[i24 - 1] = i26;
                    Test0593.instanceCount = i;
                    i25 += (i26 - i26);
                    b2 = b2;
                    i25 += (i26 * i26);
                    i25 += (((i26 * i25) + i27) - i25);
                }
                i27 += (i24 ^ i24);
                Test0593.instanceCount += (((i24 * Test0593.instanceCount) + Test0593.byFld) - i);
            }
            d3 += 8;
            i27 += i25;
            for (i28 = 4; i28 < 135; ++i28) {
                lArrFld[i] = 33;
                Test0593.instanceCount <<= i25;
                d4 = 1;
                do {
                    i29 |= i24;
                    i27 *= i26;
                    if (b2) continue;
                } while (++d4 < 2);
            }
        }

        FuzzerUtils.out.println("i i24 i25 = " + i + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b2 i26 i27 = " + (b2 ? 1 : 0) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d3 i28 i29 = " + Double.doubleToLongBits(d3) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("d4 = " + Double.doubleToLongBits(d4));

        FuzzerUtils.out.println("Test0593.instanceCount Test0593.sFld Test0593.fFld = " + Test0593.instanceCount + "," + Test0593.sFld +
                "," + Float.floatToIntBits(Test0593.fFld));
        FuzzerUtils.out.println("Test0593.byFld iArrFld lArrFld = " + Test0593.byFld + "," + FuzzerUtils.checkSum(iArrFld) +
                "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
