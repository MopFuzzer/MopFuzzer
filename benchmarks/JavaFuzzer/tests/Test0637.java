// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test0637 {

    public static final int N = 400;

    public static long instanceCount = -4362289467731232902L;
    public static byte byFld = 79;
    public static double dFld = -85.94160;
    public static boolean bFld = true;
    public static volatile short sFld = 4674;
    public static volatile int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0637.iArrFld, 123);
        FuzzerUtils.init(Test0637.lArrFld, 2L);
    }

    public long lFld = 5390264107072322024L;

    public static int iMeth1(int i5, int i6, int i7) {

        int i8 = 6;
        int i9 = 170;
        int i10 = -15106;
        int i11 = 23782;
        int i12 = -6760;
        int i13 = -8;
        int[] iArr = new int[N];
        double d = 1.76658;
        float f1 = 81.7F, f2 = 89.813F;

        FuzzerUtils.init(iArr, -152);

        for (i8 = 21; 351 > i8; ++i8) {
            iArr[i8 - 1] *= (int) d;
            Test0637.instanceCount *= Test0637.instanceCount;
            i6 += (i8 - f1);
            for (i10 = 1; 5 > i10; i10++) {
                i11 &= i6;
                iArr[i8] -= i10;
                Test0637.instanceCount -= -14;
                d *= i9;
                Test0637.instanceCount += (i10 + i5);
                i5 += i10;
                iArr[i10 - 1] *= Test0637.byFld;
            }
            for (f2 = i8; 5 > f2; f2++) {
                iArr[i8 + 1] <<= i13;
                i13 -= i7;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i10 + i11 +
                Float.floatToIntBits(f2) + i12 + i13 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {

        int i4 = 6, i14 = -247;
        float f3 = 57.406F;

        i4 *= (i4++);
        iMeth1(i4, i4, i4);
        Test0637.instanceCount = i4;
        i4 += -30863;
        if (Test0637.bFld) {
            i4 *= (int) Test0637.instanceCount;
            i14 = 1;
            while (++i14 < 181) {
                switch ((((i14 >>> 1) % 7) * 5) + 2) {
                    case 8:
                        switch ((i14 % 2) + 35) {
                            case 35:
                                Test0637.instanceCount *= -196;
                                break;
                            case 36:
                                f3 *= i4;
                                i4 = i4;
                        }
                        i4 <<= i14;
                        Test0637.instanceCount += (i14 | i4);
                        break;
                    case 7:
                        Test0637.dFld %= (Test0637.instanceCount | 1);
                        break;
                    case 22:
                        i4 <<= i4;
                        break;
                    case 25:
                        i4 = (int) Test0637.instanceCount;
                    case 32:
                        i4 += (12 + (i14 * i14));
                        break;
                    case 37:
                        Test0637.iArrFld[i14] = -214;
                        break;
                    case 5:
                        i4 += (int) f3;
                        break;
                }
            }
        } else {
            i4 <<= i14;
        }
        vMeth_check_sum += i4 + i14 + Float.floatToIntBits(f3);
    }

    public static int iMeth() {

        int i2 = -102, i3 = 126, i15 = -61, i16 = 65, i17 = 59620;
        short s = -12287;

        for (i2 = 1; i2 < 307; i2++) {
            vMeth();
            for (i15 = 1; i15 < 5; i15++) {
                i17 = 1;
                do {
                    Test0637.instanceCount += i17;
                    i3 += (((i17 * Test0637.instanceCount) + i3) - Test0637.byFld);
                    switch (((18823 >>> 1) % 3) + 117) {
                        case 117:
                            try {
                                Test0637.iArrFld[i2 - 1] = (i17 / i17);
                                i3 = (-172 % i16);
                                i16 = (i17 % -52712);
                            } catch (ArithmeticException a_e) {
                            }
                            Test0637.dFld *= Test0637.dFld;
                            i16 = i3;
                            break;
                        case 118:
                            s -= s;
                            break;
                        case 119:
                            Test0637.instanceCount ^= i17;
                            Test0637.byFld = (byte) i2;
                            i3 += (i17 + i15);
                            Test0637.instanceCount += Test0637.instanceCount;
                            break;
                        default:
                            Test0637.iArrFld[i2] >>= i3;
                    }
                } while (++i17 < 2);
            }
        }
        long meth_res = i2 + i3 + i15 + i16 + i17 + s;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0637 _instance = new Test0637();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -61232, i1 = 38951, i19 = 39, i20 = 10, i21 = -13, i22 = 246, i23 = -8, i24 = -45, i25 = 7, i26 = 6;
        float f = -17.266F;
        float[] fArr = new float[N];
        double d1 = 42.47922;

        FuzzerUtils.init(fArr, -1.788F);

        for (i = 1; i < 269; ++i) {
            i1 += i;
            i1 += (i * f);
            i1 = iMeth();
            fArr[i + 1] = i;
            i1 += i;
            i1 += (((i * i1) + i) - f);
            f = i1;
            i1 = (int) Test0637.instanceCount;
            i1 += (i * i);
            f += i;
        }
        for (i19 = 3; i19 < 158; i19++) {
            Test0637.lArrFld[i19] <<= 186;
            d1 = 1;
            do {
                for (i21 = 1; 1 > i21; i21++) {
                    f -= i1;
                    i1 &= -24;
                    Test0637.sFld |= Test0637.byFld;
                    i20 *= -6;
                    if (Test0637.bFld) break;
                }
            } while (++d1 < 162);
        }
        if (Test0637.bFld) {
            Test0637.instanceCount *= (long) d1;
            i23 = 1;
            do {
                if (true) break;
            } while (++i23 < 324);
        } else if (Test0637.bFld) {
            for (i24 = 13; 388 > i24; i24++) {
                i25 += (((i24 * i22) + Test0637.instanceCount) - i25);
                i26 = 1;
                while ((i26 += 2) < 67) {
                    i25 >>= i19;
                    f += (((i26 * i22) + i) - i);
                    i25 += (int) lFld;
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i19 i20 d1 = " + i19 + "," + i20 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0637.instanceCount Test0637.byFld Test0637.dFld = " + Test0637.instanceCount + "," + Test0637.byFld +
                "," + Double.doubleToLongBits(Test0637.dFld));
        FuzzerUtils.out.println("Test0637.bFld Test0637.sFld lFld = " + (Test0637.bFld ? 1 : 0) + "," + Test0637.sFld + "," + lFld);
        FuzzerUtils.out.println("Test0637.iArrFld Test0637.lArrFld = " + FuzzerUtils.checkSum(Test0637.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0637.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
