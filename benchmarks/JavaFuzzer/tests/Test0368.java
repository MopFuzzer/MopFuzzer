// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0368 {

    public static final int N = 400;

    public static long instanceCount = -4164061232078469363L;
    public static volatile int iFld = 5;
    public static volatile int iFld1 = -218;
    public static int iFld2 = 1;
    public static boolean bFld = true;
    public static double[] dArrFld1 = new double[N];
    public static volatile float[] fArrFld1 = new float[N];
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0368.dArrFld1, -50.18287);
        FuzzerUtils.init(Test0368.fArrFld1, 1.738F);
    }

    public int[] iArrFld = new int[N];
    public double[][] dArrFld = new double[N][N];
    public float[] fArrFld = new float[N];

    public static void vMeth1(long l) {

        boolean b = false, b1 = true;
        float f1 = 0.245F;
        int i5 = -31027;
        int i6 = -2810;
        int i7 = -8;
        int[] iArr = new int[N];
        double d1 = 50.66520;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 208);
        FuzzerUtils.init(lArr, 169L);

        if (b) {
            Test0368.iFld = Test0368.iFld;
            Test0368.instanceCount += Test0368.iFld1;
        } else {
            if (b) {
                iArr[(Test0368.iFld1 >>> 1) % N] *= (int) l;
                for (f1 = 350; 1 < f1; f1 -= 3) {
                    i6 = 1;
                    do {
                        Test0368.iFld >>>= i5;
                        i7 = 1;
                        while (++i7 < 1) {
                            lArr[(int) (f1 + 1)] = 43307;
                            Test0368.instanceCount += i7;
                            l = Test0368.iFld;
                            d1 *= i7;
                            try {
                                i5 = (190 / Test0368.iFld);
                                i5 = (Test0368.iFld1 % i7);
                                Test0368.iFld1 = (i6 % Test0368.iFld1);
                            } catch (ArithmeticException a_e) {
                            }
                        }
                        Test0368.dArrFld1[i6] += i7;
                    } while (++i6 < 13);
                }
            } else if (b1) {
                l = -4L;
            } else {
                i5 += (int) l;
            }
        }
        vMeth1_check_sum += l + (b ? 1 : 0) + Float.floatToIntBits(f1) + i5 + i6 + i7 + Double.doubleToLongBits(d1) +
                (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3, int i4) {

        int i8 = 62;
        int i9 = -82;
        int i10 = -4;
        int i11 = 114;
        int[] iArr1 = new int[N];
        float f2 = 0.292F;
        double d2 = 71.101382;
        byte by = -11;

        FuzzerUtils.init(iArr1, 12);

        vMeth1(Test0368.instanceCount);
        Test0368.iFld -= -226;
        Test0368.instanceCount = 1209019268L;
        Test0368.iFld -= Test0368.iFld1;
        Test0368.iFld1 -= (int) Test0368.instanceCount;
        Test0368.iFld = i4;
        for (i8 = 146; i8 > 1; i8--) {
            iArr1[i8 + 1] %= (int) (i9 | 1);
            Test0368.instanceCount *= (long) f2;
            d2 -= d2;
            Test0368.fArrFld1 = FuzzerUtils.float1array(N, (float) 91.823F);
            for (i10 = 11; i10 > i8; i10--) {
                f2 += (((i10 * i4) + Test0368.iFld1) - f2);
                by += (byte) Test0368.instanceCount;
                f2 -= i4;
            }
        }
        vMeth_check_sum += i3 + i4 + i8 + i9 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) + i10 + i11 + by
                + FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth() {

        int i2 = -32289;
        int i12 = -38089;
        int i13 = 58;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, 10039);

        i2 = 313;
        do {
            vMeth(Test0368.iFld, -50751);
            Test0368.iFld += (((i2 * i2) + Test0368.iFld2) - Test0368.instanceCount);
            iArr2[i2 - 1] <<= Test0368.iFld1;
            Test0368.iFld1 += i2;
            for (i12 = 1; i12 < 5; i12 += 2) {
                iArr2[i12 + 1] -= Test0368.iFld2;
                Test0368.instanceCount += (i12 * Test0368.iFld1);
            }
        } while (--i2 > 0);
        long meth_res = i2 + i12 + i13 + FuzzerUtils.checkSum(iArr2);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0368 _instance = new Test0368();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -9, i1 = -10223, i14 = -53389, i15 = -76, i16 = -9, i17 = 22131;
        float f = 4.763F;
        double d = 2.44451;
        long l1 = 4114622057L;

        Test0368.iFld = (iArrFld[(Test0368.iFld >>> 1) % N] - iArrFld[(Test0368.iFld >>> 1) % N]);
        for (i = 8; i < 346; ++i) {
            f += (float) (d - ((Test0368.instanceCount + Test0368.instanceCount) - (--dArrFld[i - 1][i])));
            fArrFld[i - 1] = fMeth();
        }
        i14 = 1;
        do {
            d = i1;
            Test0368.iFld1 -= (int) 2.501F;
            Test0368.iFld2 |= (int) Test0368.instanceCount;
            for (i15 = 6; i15 < 121; ++i15) {
                l1 = 1;
                do {
                    if (Test0368.bFld) continue;
                    iArrFld[i15 + 1] >>>= -2;
                    Test0368.iFld >>= i1;
                    f = i14;
                } while (++l1 < 2);
                Test0368.bFld = Test0368.bFld;
                f += i15;
            }
            i17 = i;
        } while (++i14 < 207);
        Test0368.iFld1 = i16;
        iArrFld[(-27666 >>> 1) % N] *= (int) d;
        iArrFld[(i17 >>> 1) % N] = -58179;

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d i14 i15 = " + Double.doubleToLongBits(d) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 l1 i17 = " + i16 + "," + l1 + "," + i17);

        FuzzerUtils.out.println("Test0368.instanceCount Test0368.iFld Test0368.iFld1 = " + Test0368.instanceCount + "," + Test0368.iFld +
                "," + Test0368.iFld1);
        FuzzerUtils.out.println("Test0368.iFld2 Test0368.bFld iArrFld = " + Test0368.iFld2 + "," + (Test0368.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("dArrFld fArrFld Test0368.dArrFld1 = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0368.dArrFld1)));
        FuzzerUtils.out.println("Test0368.fArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0368.fArrFld1)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
