// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0238 {

    public static final int N = 400;

    public static volatile long instanceCount = -5575115493692389087L;
    public static double dFld = -6.16133;
    public static int iFld = -3926;
    public static boolean bFld = false;
    public static volatile float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0238.fArrFld, -95.266F);
        FuzzerUtils.init(Test0238.iArrFld, -154);
    }

    public static void vMeth(boolean b) {

        int i5 = 132;
        int i6 = -245;
        int i7 = -143;
        int i8 = 12;
        int i9 = 27673;
        int[] iArr = new int[N];
        float f1 = -1.541F;

        FuzzerUtils.init(iArr, 50094);

        for (i5 = 1; i5 < 247; i5++) {
            for (i7 = 1; i7 < 7; i7 += 2) {
                f1 *= i8;
                f1 = i5;
                i6 += (int) Test0238.dFld;
                if (i6 != 0) {
                    vMeth_check_sum += (b ? 1 : 0) + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 +
                            FuzzerUtils.checkSum(iArr);
                    return;
                }
                i8 *= (int) Test0238.instanceCount;
                Test0238.fArrFld[i7 - 1] -= i7;
                f1 += (i7 * Test0238.instanceCount);
                iArr[i7] >>= (int) Test0238.instanceCount;
            }
        }
        i6 *= i6;
        i6 = i8;
        i9 = 1;
        do {
            if (b) break;
        } while (++i9 < 327);
        iArr[(i8 >>> 1) % N] = -7;
        vMeth_check_sum += (b ? 1 : 0) + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth1(int i3, short s, float f) {

        int i4 = -31786, i10 = 8169, i11 = 23474;
        boolean b1 = true;
        long l1 = -4L;

        i4 = 1;
        do {
            vMeth(b1);
            Test0238.iArrFld[i4 + 1] <<= i4;
            i3 *= i4;
            i3 = i4;
            Test0238.instanceCount = 7;
        } while (++i4 < 364);
        for (i10 = 3; 243 > i10; ++i10) {
            i11 += (int) (8871829467811374607L + (i10 * i10));
            i3 = Test0238.iFld;
            l1 = 7;
            while (--l1 > 0) {
                i3 += i11;
            }
            if (b1) continue;
            if (false) {
                Test0238.dFld = Test0238.instanceCount;
            } else if (b1) {
                i11 *= (int) Test0238.instanceCount;
            }
        }
        long meth_res = i3 + s + Float.floatToIntBits(f) + i4 + (b1 ? 1 : 0) + i10 + i11 + l1;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i2, long l, double d) {

        short s1 = -19654;
        float f2 = 83.174F;
        long l2 = -8L;
        int i12 = 13, i13 = -14325, i14 = -11, i15 = 2;
        byte by = -67;

        i2 >>= iMeth1(Test0238.iFld, s1, 0.700F);
        Test0238.iArrFld[(Test0238.iFld >>> 1) % N] ^= i2;
        i2 <<= Test0238.iFld;
        Test0238.iFld = -155;
        f2 = f2;
        l2 = 246;
        do {
            for (i12 = 1; i12 < 7; i12++) {
                i13 += (i12 | by);
            }
        } while (--l2 > 0);
        i2 = (int) l;
        s1 += (short) l2;
        for (i14 = 287; i14 > 8; i14 -= 3) {
            Test0238.iArrFld = Test0238.iArrFld;
            Test0238.iFld >>= (int) l2;
        }
        f2 += i2;
        i15 -= i14;
        long meth_res = i2 + l + Double.doubleToLongBits(d) + s1 + Float.floatToIntBits(f2) + l2 + i12 + i13 + by + i14
                + i15;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0238 _instance = new Test0238();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 58158, i1 = -239, i16 = 60689, i17 = -5, i18 = -53448, i19 = 6, i20 = -33375;
        float f3 = -1.381F;
        byte by1 = -27;
        long l3 = -1991831130942306327L;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -123.44788);

        for (i = 10; i < 293; i += 3) {
            Test0238.dFld = iMeth(i1, Test0238.instanceCount, 48.22675);
            for (i16 = 13; i16 < 266; ++i16) {
                Test0238.instanceCount -= (long) 1.138F;
                f3 -= by1;
                Test0238.fArrFld[i] *= Test0238.instanceCount;
                Test0238.iFld += (i16 ^ (long) f3);
            }
            for (l3 = i; l3 < 266; ++l3) {
                i17 += (int) (l3 ^ i16);
                for (i19 = 1; i19 < 1; i19++) {
                    switch ((int) ((l3 % 1) + 69)) {
                        case 69:
                            switch ((int) (((l3 % 8) * 5) + 19)) {
                                case 28:
                                    i20 = i1;
                                    i1 += (int) f3;
                                case 27:
                                    by1 -= (byte) l3;
                                    i18 = (int) Test0238.instanceCount;
                                    break;
                                case 51:
                                    if (true) {
                                        Test0238.iFld += (i19 * i19);
                                        Test0238.iArrFld[i] >>= i20;
                                        i20 = i1;
                                    } else if (Test0238.bFld) {
                                        Test0238.instanceCount = by1;
                                        f3 -= Test0238.instanceCount;
                                        by1 += (byte) (i19 * l3);
                                    } else {
                                        i20 = (int) f3;
                                        Test0238.iFld += (((i19 * i20) + f3) - i19);
                                    }
                                    i1 *= (int) f3;
                                    i17 |= 44;
                                    break;
                                case 25:
                                    f3 *= i1;
                                    i18 = -4;
                                    i18 += (i19 * i);
                                case 49:
                                    i18 &= i18;
                                    break;
                                case 42:
                                    i18 = (int) f3;
                                    break;
                                case 44:
                                    dArr[(int) (l3)] -= i16;
                                    break;
                                case 54:
                                    Test0238.iFld = (int) Test0238.instanceCount;
                                    break;
                                default:
                                    Test0238.instanceCount -= i20;
                            }
                            break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i16 = " + i + "," + i1 + "," + i16);
        FuzzerUtils.out.println("i17 f3 by1 = " + i17 + "," + Float.floatToIntBits(f3) + "," + by1);
        FuzzerUtils.out.println("l3 i18 i19 = " + l3 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 dArr = " + i20 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0238.instanceCount Test0238.dFld Test0238.iFld = " + Test0238.instanceCount + "," +
                Double.doubleToLongBits(Test0238.dFld) + "," + Test0238.iFld);
        FuzzerUtils.out.println("Test0238.bFld Test0238.fArrFld Test0238.iArrFld = " + (Test0238.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0238.fArrFld)) + "," + FuzzerUtils.checkSum(Test0238.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
