// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0808 {

    public static final int N = 400;

    public static long instanceCount = -17125L;
    public static boolean bFld = true;
    public static int iFld = -6;
    public static byte byFld = -53;
    public static float fFld = 0.645F;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public short sFld = -7456;
    public int iFld1 = 1;
    public volatile long[] lArrFld = new long[N];

    public static void vMeth() {

        int i5 = -10;

        i5 >>= i5;
        Test0808.instanceCount += Test0808.instanceCount;
        i5 >>= -14;
        Test0808.bFld = Test0808.bFld;
        i5 = -9;
        i5 *= i5;
        i5 -= i5;
        vMeth_check_sum += i5;
    }

    public static float fMeth(int i2, float f1, int i3) {

        long l = -1679188117L, l1 = 134L;
        int i4 = -5, i6 = 7, i7 = 6, i8 = -7;
        double d = -13.36747;
        float[][] fArr1 = new float[N][N];

        FuzzerUtils.init(fArr1, 116.123F);

        fArr1 = (fArr1 = fArr1);
        for (l = 13; l < 310; ++l) {
            vMeth();
            for (l1 = 1; l1 < 6; ++l1) {
                for (i7 = (int) (l); i7 < 2; i7++) {
                    d *= 24742L;
                    Test0808.instanceCount += (long) -1.320F;
                    i4 = (int) f1;
                    Test0808.instanceCount += l;
                    i6 = i7;
                    i4 -= i4;
                }
                i3 = i7;
                i8 += (int) (-1.857F + (l1 * l1));
            }
            Test0808.instanceCount -= i4;
            d = i4;
        }
        long meth_res = i2 + Float.floatToIntBits(f1) + i3 + l + i4 + l1 + i6 + i7 + i8 + Double.doubleToLongBits(d) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0808 _instance = new Test0808();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth() {

        int i = -6708;
        int i1 = -111;
        int i9 = 13;
        int i10 = -160;
        int i11 = 134;
        int[] iArr = new int[N];
        short s = 1105;
        double d1 = 76.4279;
        double[] dArr = new double[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 0.916F);
        FuzzerUtils.init(iArr, 152);
        FuzzerUtils.init(dArr, -2.43357);

        for (float f : fArr) {
            for (i = 1; 4 > i; ++i) {
                i1 = (int) fMeth(i, f, i1);
                iArr[i - 1] = 7;
                s += (short) (((i * Test0808.instanceCount) + f) - Test0808.instanceCount);
                dArr[(Test0808.iFld >>> 1) % N] -= i1;
                i9 = 2;
                while ((i9 -= 3) > 0) {
                    Test0808.iFld = Test0808.iFld;
                }
                for (i10 = 1; i10 < 2; i10++) {
                    f = f;
                    f += (i10 - i);
                    i11 -= 65;
                    d1 += Test0808.instanceCount;
                    i11 = -38784;
                    if (i10 != 0) {
                    }
                }
            }
        }
        long meth_res = i + i1 + s + i9 + i10 + i11 + Double.doubleToLongBits(d1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d2 = 2.24398;
        int i12 = 55411;
        int i13 = 5563;
        int i14 = -1;
        int i15 = 80;
        int i16 = -42;
        int i17 = -11;
        int i18 = 9;
        int i19 = 121;
        int i20 = 148;
        int i21 = 62471;
        int[] iArr1 = new
                int[N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr1, 148);
        FuzzerUtils.init(bArr, false);

        iMeth();
        iArr1[(Test0808.iFld >>> 1) % N] -= (int) Test0808.instanceCount;
        Test0808.iFld += (int) Test0808.instanceCount;
        if (true) {
            d2 += Test0808.iFld;
            for (i12 = 8; i12 < 362; ++i12) {
                Test0808.iFld += i12;
                bArr[i12] = Test0808.bFld;
                i13 = i13;
                lArrFld[i12 + 1] -= Test0808.iFld;
            }
            for (i14 = 4; i14 < 132; i14++) {
                Test0808.instanceCount *= i14;
                Test0808.instanceCount = 14;
                for (i16 = 5; i16 < 196; ++i16) {
                    for (i18 = i14; i18 < 2; i18 += 3) {
                        lArrFld[i14 - 1] = i15;
                        i15 += (((i18 * i13) + Test0808.instanceCount) - Test0808.byFld);
                        Test0808.instanceCount = Test0808.instanceCount;
                    }
                    for (i20 = 1; i20 < 2; ++i20) {
                        Test0808.instanceCount = i17;
                        Test0808.instanceCount += (i20 * i20);
                        i15 += (int) Test0808.instanceCount;
                        sFld = (short) Test0808.instanceCount;
                        i13 = (int) Test0808.instanceCount;
                        i17 = i17;
                        Test0808.fFld += (i20 + iFld1);
                        if (Test0808.bFld) break;
                        if (false) break;
                        Test0808.instanceCount = Test0808.instanceCount;
                    }
                    Test0808.instanceCount = -5;
                }
            }
        } else if (Test0808.bFld) {
            i19 -= Test0808.byFld;
        }

        FuzzerUtils.out.println("d2 i12 i13 = " + Double.doubleToLongBits(d2) + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 iArr1 = " + i20 + "," + i21 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0808.instanceCount Test0808.bFld Test0808.iFld = " + Test0808.instanceCount + "," + (Test0808.bFld ? 1
                : 0) + "," + Test0808.iFld);
        FuzzerUtils.out.println("Test0808.byFld sFld Test0808.fFld = " + Test0808.byFld + "," + sFld + "," +
                Float.floatToIntBits(Test0808.fFld));
        FuzzerUtils.out.println("iFld1 lArrFld = " + iFld1 + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
