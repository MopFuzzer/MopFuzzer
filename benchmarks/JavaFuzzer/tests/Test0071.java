// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0071 {

    public static final int N = 400;

    public static long instanceCount = -49013L;
    public static short sFld = 22463;
    public static float fFld = 2.387F;
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0071.lArrFld, -62788L);
    }

    public double dFld = -22.126507;

    public static void vMeth2(int i8) {

        int i9 = -12;
        int i10 = -31450;
        int i11 = 18;
        int i12 = -579;
        int i13 = 9;
        int i14 = 182;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, -247);

        for (i9 = 5; i9 < 350; i9++) {
            for (i11 = 1; i11 < 5; i11++) {
                i12 += (((i11 * Test0071.fFld) + i12) - i12);
                i10 = i9;
                for (i13 = 1; i13 < 2; i13++) {
                    Test0071.lArrFld[i13] -= (long) Test0071.fFld;
                    iArr2[i11 - 1] = i10;
                    Test0071.instanceCount *= Test0071.instanceCount;
                    i14 = (int) Test0071.instanceCount;
                    i8 -= (int) Test0071.instanceCount;
                    i10 = -10;
                    i12 &= 10630;
                }
                Test0071.instanceCount >>= i12;
            }
            Test0071.instanceCount += (i9 | i11);
            i10 = i14;
        }
        vMeth2_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(boolean b) {

        float f1 = 0.961F;
        int i15 = 248;
        int i16 = -7107;
        int i17 = -8;
        int i18 = -2;
        int i19 = -3;
        int i20 = -9;
        int i21 = 124;
        int i22 = 14;
        int[] iArr3 = new int[N];
        byte by1 = -10;

        FuzzerUtils.init(iArr3, -96);

        f1 = 1;
        do {
            Test0071.fFld += (41308 + (f1 * f1));
        } while (++f1 < 244);
        vMeth2(i15);
        Test0071.fFld -= Test0071.fFld;
        for (i16 = 14; i16 < 335; ++i16) {
            for (i18 = 1; i18 < 5; i18++) {
                double d = -40.120446;
                d += i20;
                i15 += i18;
                switch (((i20 >>> 1) % 8) + 46) {
                    case 46:
                        for (i21 = 1; i21 < 2; ++i21) {
                            i17 += i21;
                        }
                        iArr3[i18 + 1] *= (int) Test0071.instanceCount;
                        Test0071.instanceCount -= i19;
                        i15 = (int) Test0071.instanceCount;
                        break;
                    case 47:
                        iArr3[i16] = (int) -821L;
                    case 48:
                        i20 += (i18 + i22);
                        break;
                    case 49:
                        i17 += i18;
                    case 50:
                        i22 = (int) Test0071.instanceCount;
                    case 51:
                        i19 = i19;
                    case 52:
                        by1 = (byte) i20;
                    case 53:
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f1) + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 +
                by1 + FuzzerUtils.checkSum(iArr3);
    }

    public static void vMeth(long l) {

        int i5 = 75;
        int i6 = 64933;
        int i7 = 0;
        int i23 = -9;
        int i24 = 0;
        int[] iArr1 = new int[N];
        boolean b1 = true;

        FuzzerUtils.init(iArr1, 12);

        for (i5 = 14; i5 < 312; ++i5) {
            i6 = (iArr1[i5] / (i5 | 1));
            i6 += (int) ((Test0071.instanceCount--) - -60728);
            i6 *= (int) -99.18F;
            switch ((i5 % 7) + 101) {
                case 101:
                    Test0071.lArrFld[i5 - 1] *= 11L;
                    i7 = 1;
                    do {
                        i6 += (--Test0071.sFld);
                        switch (((i5 % 4) * 5) + 65) {
                            case 74:
                                vMeth1(true);
                                iArr1[i7 - 1] >>= Test0071.sFld;
                                for (i23 = 1; i23 < 1; ++i23) {
                                    i24 += (((i23 * i24) + Test0071.fFld) - Test0071.instanceCount);
                                }
                                i24 = i23;
                                break;
                            case 81:
                                i6 = i23;
                                break;
                            case 84:
                                Test0071.fFld -= 1.220F;
                                break;
                            case 68:
                                b1 = b1;
                                break;
                        }
                    } while (++i7 < 6);
                    break;
                case 102:
                    l = -6515831528542125680L;
                    break;
                case 103:
                    l -= i7;
                case 104:
                    l <<= l;
                    break;
                case 105:
                    i6 *= i24;
                    break;
                case 106:
                    i6 -= i6;
                    break;
                case 107:
                    l = i23;
                default:
                    Test0071.instanceCount = i23;
            }
        }
        vMeth_check_sum += l + i5 + i6 + i7 + i23 + i24 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0071 _instance = new Test0071();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -21631;
        int i1 = 52833;
        int i2 = 8;
        int i3 = -13;
        int i4 = 161;
        int[][] iArr = new int[N][N];
        byte by = -69;
        short s = -2548;
        short[] sArr = new short[N];
        float f = -107.717F;
        long l1 = 197L;
        boolean b2 = true;

        FuzzerUtils.init(iArr, -41);
        FuzzerUtils.init(sArr, (short) 27432);

        for (i = 13; i < 215; ++i) {
            i1 += (((i * i) + i) - i1);
            for (i2 = 3; i2 < 124; i2++) {
                switch ((i % 7) + 65) {
                    case 65:
                        if (b2) {
                            i4 = 1;
                            while ((i4 += 2) < 2) {
                                by += (byte) i4;
                                i1 = (int) Test0071.instanceCount;
                                s += (short) i4;
                                iArr[i4 - 1][i2 + 1] *= (int) (((i3 - f) + (i4 | Test0071.instanceCount)) + i4);
                                switch ((i % 6) + 111) {
                                    case 111:
                                        i3 = (int) ((Math.min(i4, i) + (Test0071.lArrFld[(i4 >>> 1) % N]--)) - (--dFld));
                                        switch ((i2 % 10) + 65) {
                                            case 65:
                                                try {
                                                    i3 = (-29691 / i);
                                                    i3 = (22069 % iArr[i2][i4]);
                                                    iArr[i - 1][i + 1] = (i3 / 56140);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i3 *= (--sArr[i]);
                                                break;
                                            case 66:
                                                by -= (byte) ((~(6 + i3)) - ((-(i2 * Test0071.instanceCount)) + (f - f)));
                                                break;
                                            case 67:
                                                vMeth(l1);
                                            case 68:
                                                Test0071.lArrFld[i4 + 1] ^= i1;
                                                i1 += i;
                                                i1 >>>= i2;
                                                if (true) {
                                                    l1 += (i4 + l1);
                                                    Test0071.instanceCount += i4;
                                                    dFld *= l1;
                                                    i1 <<= i3;
                                                } else if (b2) {
                                                    f += (((i4 * i4) + i3) - i1);
                                                    dFld *= 233L;
                                                    i3 *= i1;
                                                }
                                                break;
                                            case 69:
                                                iArr[i4][i2 - 1] = (int) Test0071.instanceCount;
                                                try {
                                                    i3 = (i4 % 11031);
                                                    iArr[i2 + 1][i2 - 1] = (-9469 / i);
                                                    i1 = (i3 / -721641642);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                break;
                                            case 70:
                                                f = 30343;
                                                break;
                                            case 71:
                                                Test0071.instanceCount *= i1;
                                                break;
                                            case 72:
                                                by >>= (byte) -247L;
                                                break;
                                            case 73:
                                                i3 <<= (int) Test0071.instanceCount;
                                                break;
                                            case 74:
                                        }
                                        break;
                                    case 112:
                                        i1 = i2;
                                        break;
                                    case 113:
                                        Test0071.instanceCount += (((i4 * i) + i3) - i1);
                                        break;
                                    case 114:
                                        i1 += (((i4 * Test0071.instanceCount) + i3) - Test0071.sFld);
                                        break;
                                    case 115:
                                        i3 = i3;
                                        break;
                                    case 116:
                                        try {
                                            i1 = (i3 / i2);
                                            i3 = (i1 / -483);
                                            i3 = (i % i1);
                                        } catch (ArithmeticException a_e) {
                                        }
                                        break;
                                    default:
                                        i1 += (int) Test0071.instanceCount;
                                }
                            }
                        } else if (b2) {
                            i3 = i3;
                        }
                    case 66:
                        i1 *= -244;
                    case 67:
                        i1 <<= (int) l1;
                    case 68:
                        i3 = (int) -13L;
                        break;
                    case 69:
                        f += 65.860F;
                        break;
                    case 70:
                        i1 += (i2 * i2);
                        break;
                    case 71:
                        i1 += i2;
                    default:
                        i1 = -46273;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 by = " + i3 + "," + i4 + "," + by);
        FuzzerUtils.out.println("s f l1 = " + s + "," + Float.floatToIntBits(f) + "," + l1);
        FuzzerUtils.out.println("b2 iArr sArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
                FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0071.instanceCount dFld Test0071.sFld = " + Test0071.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + Test0071.sFld);
        FuzzerUtils.out.println("Test0071.fFld Test0071.lArrFld = " + Float.floatToIntBits(Test0071.fFld) + "," +
                FuzzerUtils.checkSum(Test0071.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
