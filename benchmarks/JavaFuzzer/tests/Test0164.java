// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test0164 {

    public static final int N = 400;

    public static long instanceCount = -191L;
    public static double dFld = 1.21039;
    public static volatile boolean bFld = false;
    public static int iFld1 = -32568;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public float fFld = -35.664F;
    public int iFld = 52;
    public float[] fArrFld = new float[N];

    public static void vMeth(int i1, int i2) {

        float f = -1.927F;

        f -= ((Float.intBitsToFloat(i2) + (Test0164.instanceCount - i1)) - ((i1 += (int) Test0164.instanceCount) ^
                Test0164.instanceCount));
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f);
    }

    public static boolean bMeth(long l, int i8, int i9) {

        int i10 = 1, i11 = 28510, i12 = 30343, i13 = -5, i14 = 8934, i15 = -3;
        byte by2 = -109;
        float f1 = 2.234F;

        i9 *= i8;
        for (i10 = 8; i10 < 227; i10 += 3) {
            for (i12 = 21; i10 < i12; --i12) {
                switch ((((i13 >>> 1) % 1) * 5) + 38) {
                    case 41:
                        Test0164.dFld = by2;
                        i13 += -10180;
                        break;
                }
                i13 += i11;
                f1 -= i8;
            }
        }
        for (i14 = 20; 367 > i14; i14++) {
            f1 *= -13;
            switch ((i14 % 1) + 86) {
                case 86:
                    i13 = i12;
                    i11 += i15;
                    i13 *= 63;
                    i8 = i8;
                    break;
            }
        }
        long meth_res = l + i8 + i9 + i10 + i11 + i12 + i13 + by2 + Float.floatToIntBits(f1) + i14 + i15;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth1(int i3, byte by1) {

        int i4 = 3, i5 = -222, i6 = 234, i7 = -18, i16 = -173;

        for (i4 = 7; i4 < 346; i4++) {
            for (i6 = 1; i6 < 5; ++i6) {
                if (bMeth(Test0164.instanceCount, -209, -54341)) continue;
                i5 -= i4;
                i16 = 1;
                while (++i16 < 2) {
                    boolean b = false;
                    switch ((((i16 >>> 1) % 6) * 5) + 52) {
                        case 82:
                            i5 *= (int) Test0164.instanceCount;
                            b = b;
                            i5 += i16;
                            i5 += (-39862 + (i16 * i16));
                            break;
                        case 78:
                            i3 = i3;
                        case 59:
                            if (i5 != 0) {
                            }
                            break;
                        case 56:
                            i3 += (i16 * i16);
                        case 76:
                            if (b) break;
                            b = b;
                            break;
                        case 63:
                            i7 -= (int) Test0164.instanceCount;
                            break;
                    }
                }
            }
        }
        long meth_res = i3 + by1 + i4 + i5 + i6 + i7 + i16;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i, byte by) {

        int i17 = -24177;

        vMeth(iMeth1(i, by) - i, 18);
        Test0164.bFld = Test0164.bFld;
        i17 -= i;
        long meth_res = i + by + i17;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0164 _instance = new Test0164();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        byte by3 = -106;
        byte[] byArr = new byte[N];
        float f2 = -11.646F;
        int i18 = 134;
        int i19 = -4;
        int i20 = -14;
        int i21 = 49421;
        int i22 = -189;
        int i23 = 8;
        int i24 = -58425;
        int[] iArr = new int[N];
        short s = -31137;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, -76);
        FuzzerUtils.init(lArr, -1668932417918123300L);
        FuzzerUtils.init(byArr, (byte) 90);

        fFld = Test0164.instanceCount;
        Test0164.dFld += (iFld - (iArr[(iFld >>> 1) % N] + (Test0164.instanceCount * -49008L)));
        iArr[(iFld >>> 1) % N] += (iMeth(iFld, by3) - -4);
        for (f2 = 17; 303 > f2; ++f2) {
            i18 *= i18;
            Test0164.dFld -= 6;
            lArr[(int) (f2)] >>= iFld;
            fArrFld[(int) (f2 + 1)] -= 128;
            i18 >>= (int) 16791L;
            Test0164.iFld1 <<= i18;
            for (i19 = 2; i19 < 88; ++i19) {
                Test0164.instanceCount <<= i18;
                i18 = 117;
                Test0164.instanceCount += (((i19 * Test0164.iFld1) + i20) - i18);
                iArr[(int) (f2 - 1)] -= (int) 1.979F;
                fFld -= s;
            }
            for (i21 = 2; i21 < 88; i21++) {
                switch ((int) (((f2 % 6) * 5) + 16)) {
                    case 23:
                        byArr[(int) (f2 + 1)] = by3;
                        fFld *= (float) -115.85180;
                    case 40:
                        i22 = iFld;
                        lArr[i21 + 1] += i20;
                        iArr[(int) (f2 - 1)] += i20;
                        for (i23 = 1; i23 < 2; i23++) {
                            i24 = i23;
                            lArr[i21] &= i18;
                            if (false) break;
                            fFld += 12;
                            iArr[i23] = (int) Test0164.instanceCount;
                            i20 <<= (int) Test0164.instanceCount;
                        }
                        break;
                    case 22:
                        Test0164.instanceCount = Test0164.instanceCount;
                        break;
                    case 28:
                        fFld += (((i21 * i20) + Test0164.instanceCount) - Test0164.instanceCount);
                        break;
                    case 36:
                        i20 *= -42319;
                        break;
                    case 17:
                        by3 += (byte) (i21 * i21);
                        break;
                }
            }
        }

        FuzzerUtils.out.println("by3 f2 i18 = " + by3 + "," + Float.floatToIntBits(f2) + "," + i18);
        FuzzerUtils.out.println("i19 i20 s = " + i19 + "," + i20 + "," + s);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 iArr lArr = " + i24 + "," + FuzzerUtils.checkSum(iArr) + "," +
                FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0164.instanceCount fFld Test0164.dFld = " + Test0164.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0164.dFld));
        FuzzerUtils.out.println("iFld Test0164.bFld Test0164.iFld1 = " + iFld + "," + (Test0164.bFld ? 1 : 0) + "," + Test0164.iFld1);
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
