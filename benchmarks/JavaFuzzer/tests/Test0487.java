// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test0487 {

    public static final int N = 400;

    public static volatile long instanceCount = -126L;
    public static float fFld = 2.894F;
    public static short sFld = -26004;
    public static long[][] lArrFld = new long[N][N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0487.lArrFld, -4L);
        FuzzerUtils.init(Test0487.iArrFld, 192);
    }

    public static void vMeth1(boolean b, long l, int i2) {

        int i3 = 251;
        double d = -51.40307;
        float f1 = -124.875F;

        b = b;
        i3 = 1;
        do {
            i2 -= (int) ((-(d++)) * ((f1 - l) - (-(i2 % (i3 | 1)))));
        } while (++i3 < 242);
        vMeth1_check_sum += (b ? 1 : 0) + l + i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1);
    }

    public static boolean bMeth(boolean b1, int i4) {

        int i5 = -47;
        int i6 = 10616;
        int i7 = 7411;
        int i8 = 43;
        int i9 = -9;
        int i10 = -11;
        int[] iArr = new int[N];
        float f2 = 2.106F;
        short s = -26887;

        FuzzerUtils.init(iArr, -57922);

        for (i5 = 7; i5 < 141; i5++) {
            for (i7 = 1; i7 < 12; i7++) {
                i8 += (i7 - i8);
                if (b1) {
                    for (f2 = 1; f2 < 2; ++f2) {
                        Test0487.lArrFld[(int) (f2 + 1)][i5 + 1] += (long) (((++iArr[(int) (f2 + 1)]) + (i5 - i8)) + (i5 /
                                (((long) (f2 * i5)) | 1)));
                        s += (short) i6;
                        i8 -= (--i8);
                    }
                } else if (b1) {
                    try {
                        iArr[i7] = (iArr[i7 - 1] / i6);
                        i9 = (i6 / 51);
                        i10 = (i5 % i4);
                    } catch (ArithmeticException a_e) {
                    }
                    vMeth1(b1, Test0487.instanceCount, i8);
                } else {
                    i9 += (((i7 * i7) + s) - i9);
                    Test0487.instanceCount = -25094L;
                    iArr = iArr;
                }
                iArr[i5 - 1] = i4;
                s *= (short) i5;
            }
        }
        long meth_res = (b1 ? 1 : 0) + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + i9 + s + i10 +
                FuzzerUtils.checkSum(iArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth() {

        boolean b2 = false;
        int i11 = -53632, i12 = 14, i13 = 59869, i14 = -191, i15 = 32242, i16 = 0;
        double d1 = -2.36872;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 67.284F);

        vMeth1(bMeth(b2, i11), -155L, 4);
        for (i12 = 1; i12 < 180; i12++) {
            i11 = i12;
            i11 += (((i12 * i13) + i11) - i12);
            i13 >>= i13;
            i14 = 1;
            while (++i14 < 9) {
                Test0487.instanceCount *= Test0487.instanceCount;
            }
            fArr[i12 - 1] += Test0487.instanceCount;
            i11 -= i14;
            Test0487.instanceCount += (6380L + (i12 * i12));
        }
        d1 -= Test0487.fFld;
        for (i15 = 1; i15 < 241; ++i15) {
            Test0487.lArrFld[i15][i15] += i12;
            i16 += (int) -88.784F;
            Test0487.instanceCount += (i15 * i12);
        }
        vMeth_check_sum += (b2 ? 1 : 0) + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0487 _instance = new Test0487();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 66, i1 = 12136;
        float f = 0.610F;
        boolean b3 = false;

        Test0487.instanceCount -= i;
        for (f = 208; f > 12; f -= 3) {
            vMeth();
            Test0487.iArrFld[(int) (f + 1)] &= i;
            Test0487.instanceCount *= Test0487.instanceCount;
            i *= (int) Test0487.fFld;
            i = (int) -2553367340L;
        }
        Test0487.sFld = (short) Test0487.instanceCount;
        b3 = b3;

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("b3 = " + (b3 ? 1 : 0));

        FuzzerUtils.out.println("Test0487.instanceCount Test0487.fFld Test0487.sFld = " + Test0487.instanceCount + "," +
                Float.floatToIntBits(Test0487.fFld) + "," + Test0487.sFld);
        FuzzerUtils.out.println("Test0487.lArrFld Test0487.iArrFld = " + FuzzerUtils.checkSum(Test0487.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0487.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest bMeth
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
