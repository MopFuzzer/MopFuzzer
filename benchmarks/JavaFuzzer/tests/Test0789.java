// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0789 {

    public static final int N = 400;

    public static long instanceCount = -4283788524L;
    public static boolean bFld = false;
    public static byte byFld = -65;
    public static short[] sArrFld = new short[N];
    public static int[] iArrFld = new int[N];
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0789.sArrFld, (short) -9216);
        FuzzerUtils.init(Test0789.iArrFld, 12);
    }

    public double dFld = -81.109816;

    public static void vMeth1(double d) {

        int i2 = 7;
        int i3 = 27516;
        int i4 = -2;
        int i5 = -122;
        int[] iArr = new int[N];
        float f = 48.699F;
        byte by = 121;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 3508418198L);
        FuzzerUtils.init(iArr, 0);

        for (long l1 : lArr) {
            if (i2 != 0) {
                vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + by +
                        FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                return;
            }
        }
        Test0789.instanceCount = Test0789.instanceCount;
        i2 = (int) Test0789.instanceCount;
        i3 = 1;
        do {
            for (i4 = 1; 6 > i4; i4++) {
                f = by;
                Test0789.instanceCount += (long) f;
                lArr[i3] -= i3;
                f += 11.201F;
            }
            i2 -= i5;
        } while (++i3 < 273);
        Test0789.sArrFld[(i3 >>> 1) % N] = (short) i5;
        i5 -= i5;
        iArr = iArr;
        i2 -= i4;
        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + by +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l) {

        double d1 = 12.27282;
        int i6 = -13816, i7 = 103, i8 = 43798, i9 = -64638;
        long l2 = 6988510040732108910L;
        long l3 = -190L;
        long l4 = 3385084954698324843L;
        long[] lArr1 = new long[N];
        float f1 = -105.176F;
        short s = -20957;

        FuzzerUtils.init(lArr1, 3515300294039816496L);

        vMeth1(d1);
        for (i6 = 315; i6 > 11; i6 -= 3) {
            l2 = 15;
            do {
                for (i8 = 1; i8 < 1; ++i8) {
                    l = i9;
                    lArr1[(int) (l2 - 1)] = -52;
                    switch ((i8 % 9) + 61) {
                        case 61:
                            i7 -= (int) l2;
                            Test0789.bFld = true;
                            switch (((i7 >>> 1) % 4) + 43) {
                                case 43:
                                    switch (((i6 % 4) * 5) + 109) {
                                        case 113:
                                            i9 |= i6;
                                            f1 += (((i8 * i9) + s) - Test0789.byFld);
                                            lArr1[i6] *= l3;
                                            d1 = l2;
                                            break;
                                        case 116:
                                            i7 += (i8 * i8);
                                            break;
                                        case 111:
                                            i7 -= (int) f1;
                                        case 120:
                                            Test0789.iArrFld[i6] += (int) l3;
                                    }
                                    break;
                                case 44:
                                    i9 += (i8 * f1);
                                case 45:
                                    i7 = (int) l4;
                                    break;
                                case 46:
                                    s = (short) l;
                                    break;
                                default:
                                    i7 <<= i9;
                            }
                            break;
                        case 62:
                            l4 += i8;
                            break;
                        case 63:
                            i9 = i7;
                            break;
                        case 64:
                            l4 = (long) 66.603F;
                            break;
                        case 65:
                            i7 <<= i7;
                            break;
                        case 66:
                            i9 >>>= -28560;
                        case 67:
                            i9 = (int) 245L;
                            break;
                        case 68:
                            l4 += 192;
                            break;
                        case 69:
                            Test0789.iArrFld[i8 + 1] <<= i6;
                            break;
                    }
                }
            } while (--l2 > 0);
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d1) + i6 + i7 + l2 + i8 + i9 + Float.floatToIntBits(f1) + s + l3
                + l4 + FuzzerUtils.checkSum(lArr1);
    }

    public static double dMeth() {

        int i1 = -37330, i10 = 44051, i11 = 3, i12 = 13, i13 = 236, i14 = -52789;
        long l5 = -95L;
        long[][] lArr2 = new long[N][N];
        float f2 = 0.202F;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -8.301F);
        FuzzerUtils.init(lArr2, -74L);

        i1 = 1;
        do {
            vMeth(87L);
        } while (++i1 < 121);
        Test0789.iArrFld = Test0789.iArrFld;
        for (l5 = 2; 296 > l5; ++l5) {
            i10 = i10;
            try {
                i10 = (7310 / i1);
                i10 = (-60 / i10);
                Test0789.iArrFld[(int) (l5 + 1)] = (97 / i10);
            } catch (ArithmeticException a_e) {
            }
            if (true) {
                for (i11 = 1; i11 < 6; i11++) {
                    i10 >>= i1;
                    for (i13 = 1; i13 < 2; i13++) {
                        fArr[i11] = i14;
                        i12 = i12;
                        i10 *= (int) f2;
                        i10 += i14;
                        lArr2 = lArr2;
                    }
                }
            } else if (Test0789.bFld) {
                i12 += (int) (l5 | i1);
            } else {
                lArr2[(int) (l5)] = lArr2[(int) (l5 - 1)];
            }
        }
        long meth_res = i1 + l5 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr2);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0789 _instance = new Test0789();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 5, i15 = 131, i16 = 64, i17 = 22, i18 = 47381, i19 = 158, i20 = -7043, i21 = -34058, i22 = -30609, i23 = 8;
        float f3 = -22.784F, f4 = 25.709F;
        boolean[] bArr = new boolean[N];
        long[][] lArr3 = new long[N][N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr3, -260904189888111731L);

        i += (int) dMeth();
        for (i15 = 10; 206 > i15; i15++) {
            switch (((i15 % 2) * 5) + 82) {
                case 89:
                    Test0789.instanceCount += (long) (-2.708F + (i15 * i15));
                    for (f3 = i15; f3 < 128; ++f3) {
                        switch ((int) ((f3 % 1) + 72)) {
                            case 72:
                                Test0789.instanceCount *= i17;
                                for (i18 = 1; i18 < 1; i18++) {
                                    Test0789.iArrFld[i18] >>= i19;
                                }
                                f4 = 1;
                                do {
                                    Test0789.iArrFld[(int) (f4)] = -5;
                                    Test0789.iArrFld[(int) (f4)] += (int) dFld;
                                    if (true) continue;
                                } while (++f4 < 1);
                                break;
                        }
                        for (i20 = 1; 1 > i20; ++i20) {
                            if (Test0789.bFld) break;
                            bArr[i20] = true;
                        }
                        Test0789.byFld *= (byte) i21;
                        Test0789.instanceCount -= i16;
                    }
                    break;
                case 87:
                    Test0789.instanceCount = (long) f3;
                    i19 >>= -27;
                    i19 -= 7;
                    break;
                default:
                    i17 <<= i18;
                    switch (((i19 >>> 1) % 3) + 81) {
                        case 81:
                            if (Test0789.bFld) {
                                i19 += i20;
                                lArr3 = lArr3;
                                for (i22 = i15; i22 < 128; ++i22) {
                                    i23 -= (int) f3;
                                    dFld += i22;
                                }
                                Test0789.iArrFld[i15 - 1] = 19962;
                            }
                        case 82:
                            i19 += i15;
                        case 83:
                            Test0789.byFld += (byte) f3;
                            break;
                    }
            }
        }

        FuzzerUtils.out.println("i i15 i16 = " + i + "," + i15 + "," + i16);
        FuzzerUtils.out.println("f3 i17 i18 = " + Float.floatToIntBits(f3) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 f4 i20 = " + i19 + "," + Float.floatToIntBits(f4) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("bArr lArr3 = " + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(lArr3));

        FuzzerUtils.out.println("Test0789.instanceCount Test0789.bFld Test0789.byFld = " + Test0789.instanceCount + "," + (Test0789.bFld ?
                1 : 0) + "," + Test0789.byFld);
        FuzzerUtils.out.println("dFld Test0789.sArrFld Test0789.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(Test0789.sArrFld) + "," + FuzzerUtils.checkSum(Test0789.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
