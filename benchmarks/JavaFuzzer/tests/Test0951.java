// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0951 {

    public static final int N = 400;

    public static long instanceCount = -63794L;
    public static double dFld = 0.120567;
    public static int iFld = 10;
    public static short sFld = 19798;
    public static volatile boolean bFld = false;
    public static int iFld1 = 2;
    public static double[] dArrFld = new double[N];
    public static short[] sArrFld = new short[N];
    public static float[] fArrFld = new float[N];
    public static boolean[] bArrFld = new boolean[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0951.dArrFld, 58.105852);
        FuzzerUtils.init(Test0951.sArrFld, (short) -23879);
        FuzzerUtils.init(Test0951.fArrFld, -1.253F);
        FuzzerUtils.init(Test0951.bArrFld, false);
    }

    public float fFld = 2.638F;

    public static void vMeth1(int i2) {

        int i3 = 51989, i4 = 242, i5 = 33, i6 = 3, i7 = -52868;
        boolean b = false;
        long l2 = -124204996L;
        byte by = 104;
        short s = 7723;
        float f1 = 2.670F;

        for (i3 = 1; i3 < 206; i3++) {
            Test0951.instanceCount += i2;
            if (b) {
                if (b) {
                    for (i5 = i3; i5 < 8; i5++) {
                        b = b;
                        switch (((i5 % 5) * 5) + 114) {
                            case 129:
                            case 132:
                                for (l2 = 1; l2 < 1; ++l2) {
                                    by += (byte) l2;
                                    if (b) {
                                        if (b) continue;
                                        Test0951.instanceCount = i5;
                                        i7 += i7;
                                    } else if (false) {
                                        i2 = i6;
                                        i2 += by;
                                    } else {
                                        i4 = s;
                                    }
                                }
                                break;
                            case 133:
                                f1 = (float) Test0951.dFld;
                            case 136:
                                i6 += (int) -3804362923L;
                                break;
                            case 134:
                                Test0951.dFld += i5;
                                break;
                        }
                    }
                } else {
                    Test0951.iFld = (int) l2;
                }
            } else if (b) {
                i6 += (i3 * s);
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + (b ? 1 : 0) + l2 + i7 + by + s + Float.floatToIntBits(f1);
    }

    public static int iMeth(long l1) {

        int i1 = -36397;
        int i8 = -43353;
        int i9 = 7;
        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, -245);

        i1 = 1;
        do {
            vMeth1(i1);
            iArr[i1 - 1] += (int) -175L;
            i8 = 1;
            do {
                iArr[i1 + 1] -= -57008;
                Test0951.iFld += (int) l1;
                Test0951.iFld = i1;
                Test0951.instanceCount += (64797 + (i8 * i8));
                Test0951.iFld *= i8;
                i9 = -46;
            } while (++i8 < 6);
            l1 = i9;
            i9 |= (int) l1;
            iArr[i1] += (int) -888104209L;
        } while (++i1 < 299);
        long meth_res = l1 + i1 + i8 + i9 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i) {

        double d1 = -1.118151;
        float f = -6.111F;
        int i10 = -13, i11 = -3, i12 = -238, i13 = -47719;
        byte by1 = -115;
        byte[] byArr = new byte[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(byArr, (byte) 74);
        FuzzerUtils.init(lArr, -193L);

        d1 = i;
        byArr[(i >>> 1) % N] -= (byte) ((lArr[(i >>> 1) % N] * (f + i)) * i);
        for (long l : lArr) {
            i >>= iMeth(-6106981768680078475L);
            switch (((Test0951.iFld >>> 1) % 10) + 28) {
                case 28:
                    i *= -47941;
                    Test0951.dArrFld[(Test0951.iFld >>> 1) % N] = Test0951.instanceCount;
                    l -= -10;
                    Test0951.dFld += i;
                    break;
                case 29:
                    for (i10 = 1; i10 < 4; i10++) {
                        for (i12 = 1; i12 < 2; i12++) {
                            Test0951.sArrFld[i10] -= (short) i;
                            Test0951.instanceCount += 10;
                            Test0951.instanceCount *= Test0951.iFld;
                        }
                        Test0951.sFld = (short) l;
                    }
                    break;
                case 30:
                    l *= (long) d1;
                    break;
                case 31:
                    i11 = i12;
                case 32:
                    by1 = (byte) i13;
                case 33:
                    if (Test0951.bFld) break;
                    break;
                case 34:
                    lArr[(Test0951.iFld1 >>> 1) % N] += i13;
                case 35:
                    Test0951.sFld %= (short) (i | 1);
                    break;
                case 36:
                    Test0951.fArrFld[(Test0951.iFld1 >>> 1) % N] += Test0951.instanceCount;
                case 37:
                    Test0951.dFld = f;
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + by1 +
                FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0951 _instance = new Test0951();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d = -1.35496;
        int i14 = 134;
        int i15 = -12;
        int i16 = -16254;
        int i17 = 30260;
        int i18 = -10;
        int i19 = -20;
        int i20 = 95;
        int[] iArr1 = new int[N];
        byte by2 = -16;

        FuzzerUtils.init(iArr1, -206);

        fFld *= (float) d;
        vMeth(Test0951.iFld1);
        for (i14 = 6; 350 > i14; i14++) {
            Test0951.iFld |= Test0951.iFld;
            for (i16 = 4; i16 < 73; i16++) {
                i17 -= 26943;
                for (i18 = 1; i18 < 2; i18++) {
                    Test0951.instanceCount += i18;
                    iArr1[i18] -= Test0951.iFld;
                    Test0951.iFld1 >>= Test0951.iFld1;
                    switch (((i16 % 3) * 5) + 4) {
                        case 18:
                            switch ((i16 % 5) + 30) {
                                case 30:
                                    Test0951.instanceCount = (long) d;
                                    break;
                                case 31:
                                    Test0951.iFld = (int) fFld;
                                    Test0951.dArrFld = Test0951.dArrFld;
                                    switch ((i18 % 2) + 123) {
                                        case 123:
                                            i17 += (((i18 * Test0951.iFld1) + i19) - i14);
                                            break;
                                        case 124:
                                            Test0951.iFld1 *= i20;
                                    }
                                    fFld += Test0951.instanceCount;
                                    break;
                                case 32:
                                    Test0951.instanceCount += (((i18 * i17) + fFld) - i15);
                                    i15 = i16;
                                    i17 = (int) Test0951.instanceCount;
                                    break;
                                case 33:
                                    Test0951.iFld |= i15;
                                    by2 = (byte) Test0951.iFld;
                                    if (Test0951.bFld) continue;
                                    i15 += (int) Test0951.instanceCount;
                                    break;
                                case 34:
                                    Test0951.dArrFld[i18 - 1] -= i19;
                                    Test0951.iFld1 += i16;
                                    Test0951.bArrFld[i18] = Test0951.bFld;
                                    Test0951.fArrFld[i18 + 1] *= 11;
                                    break;
                                default:
                                    Test0951.instanceCount = i14;
                            }
                            break;
                        case 15:
                            Test0951.instanceCount <<= Test0951.iFld;
                        case 6:
                            i15 += (((i18 * i15) + by2) - i18);
                    }
                }
            }
        }

        FuzzerUtils.out.println("d i14 i15 = " + Double.doubleToLongBits(d) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 by2 = " + i19 + "," + i20 + "," + by2);
        FuzzerUtils.out.println("iArr1 = " + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0951.instanceCount fFld Test0951.dFld = " + Test0951.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(Test0951.dFld));
        FuzzerUtils.out.println("Test0951.iFld Test0951.sFld Test0951.bFld = " + Test0951.iFld + "," + Test0951.sFld + "," + (Test0951.bFld ? 1
                : 0));
        FuzzerUtils.out.println("Test0951.iFld1 Test0951.dArrFld Test0951.sArrFld = " + Test0951.iFld1 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0951.dArrFld)) + "," + FuzzerUtils.checkSum(Test0951.sArrFld));
        FuzzerUtils.out.println("Test0951.fArrFld Test0951.bArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0951.fArrFld)) + "," + FuzzerUtils.checkSum(Test0951.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
