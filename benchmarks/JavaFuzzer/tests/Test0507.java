// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test0507 {

    public static final int N = 400;

    public static long instanceCount = 1554150514748774293L;
    public static int iFld = -123;
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0507.iArrFld, -5);
    }

    public boolean[] bArrFld = new boolean[N];

    public static long lMeth(int i8, long l2) {

        int i9 = -7, i10 = -38758, i11 = 0, i12 = -51729, i13 = 8, i14 = -6, i15 = -32040;
        long[] lArr = new long[N];
        double[] dArr = new double[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(lArr, 2573192985L);
        FuzzerUtils.init(dArr, 0.127123);
        FuzzerUtils.init(fArr, 2.924F);

        lArr[(Test0507.iFld >>> 1) % N] *= Test0507.iFld;
        for (i9 = 6; 175 > i9; ++i9) {
            double d1 = 1.69661;
            lArr[i9] -= Test0507.iFld;
            i10 >>= (int) Test0507.instanceCount;
            Test0507.iFld = Test0507.iFld;
            l2 -= (long) d1;
        }
        for (i11 = 6; i11 < 367; i11 += 2) {
            for (i13 = 9; i13 > 1; i13 -= 3) {
                i12 += i15;
            }
            Test0507.instanceCount -= (long) -91.7216;
            Test0507.iArrFld[i11] = -4673;
            dArr[i11] -= i9;
            fArr[i11] = l2;
            Test0507.instanceCount -= i11;
            i12 -= i10;
        }
        long meth_res = i8 + l2 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i1, int i2, long l) {

        long l1 = 8973125404063539642L;
        long[][] lArr1 = new long[N][N];
        int i3 = -61;
        int i4 = 153;
        int i5 = 172;
        int i6 = 3;
        int i7 = 2;
        int i16 = -184;
        int[][] iArr = new int[N][N];
        byte by = 122;
        float f = 1.610F;
        boolean b = true;

        FuzzerUtils.init(iArr, -3);
        FuzzerUtils.init(lArr1, 2L);

        for (l1 = 2; l1 < 352; l1++) {
            for (i4 = 1; i4 < 5; i4++) {
                i1 += i4;
                for (i6 = 1; i6 < 2; ++i6) {
                    l += i6;
                    iArr[i6 + 1][i4] = (int) ((lMeth(i5, l) - i6) - 9087L);
                    i16 -= by;
                    switch (((i4 >>> 1) % 3) + 77) {
                        case 77:
                            lArr1 = FuzzerUtils.long2array(N, (long) -3235762656L);
                            i1 >>= Test0507.iFld;
                        case 78:
                        case 79:
                            Test0507.instanceCount /= -11;
                            Test0507.iFld += (int) 1.321F;
                            i1 = i2;
                            f += (((i6 * l1) + f) - i2);
                            break;
                    }
                    if (b) continue;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + l + l1 + i3 + i4 + i5 + i6 + i7 + i16 + by + Float.floatToIntBits(f) + (b ? 1 : 0)
                + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0507 _instance = new Test0507();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(int i) {

        int i17 = -101, i18 = 2, i19 = -194, i20 = -115, i21 = 7;
        float f1 = 1.640F;
        short[] sArr = new short[N];
        long[] lArr2 = new long[N];

        FuzzerUtils.init(sArr, (short) 11845);
        FuzzerUtils.init(lArr2, 1088738661679156513L);

        vMeth(Test0507.iFld, -43463, 3118225921801735722L);
        try {
            Test0507.iFld *= -22855;
            i17 = 1;
            while (++i17 < 207) {
                i += Test0507.iFld;
                sArr[i17 + 1] = (short) Test0507.iFld;
                lArr2[i17] += Test0507.iFld;
                Test0507.iArrFld[i17 - 1] += 12;
                for (i18 = i17; i18 < 8; i18++) {
                    Test0507.instanceCount >>= i;
                    try {
                        Test0507.iArrFld[i17 - 1] = (Test0507.iFld % Test0507.iFld);
                        Test0507.iArrFld[i17 + 1] = (-29285 / i18);
                        Test0507.iFld = (Test0507.iFld % Test0507.iFld);
                    } catch (ArithmeticException a_e) {
                    }
                    for (i20 = 1; i20 < 1; ++i20) {
                        try {
                            i19 = (Test0507.iArrFld[i17 + 1] / Test0507.iFld);
                            i21 = (i / 216);
                            i21 = (Test0507.iArrFld[i20 + 1] / 83);
                        } catch (ArithmeticException a_e) {
                        }
                        i19 <<= Test0507.iFld;
                        i21 += (int) (10L + (i20 * i20));
                    }
                }
            }
        } catch (NegativeArraySizeException exc1) {
            i19 = (int) f1;
        }
        long meth_res = i + i17 + i18 + i19 + i20 + i21 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(sArr) +
                FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d = 1.71151;
        int i22 = 43047, i23 = 69, i24 = 10, i25 = -7, i26 = 117, i28 = 129, i29 = -56966;
        boolean b1 = false;
        float f2 = 2.799F;

        d += Math.abs((Test0507.iFld >>> Test0507.iFld) - iMeth(Test0507.iFld));
        for (i22 = 14; 354 > i22; ++i22) {
            i24 = 1;
            do {
                i25 = 1;
                while (--i25 > 0) {
                    Test0507.iFld = Test0507.iFld;
                    Test0507.instanceCount %= (i25 | 1);
                    Test0507.instanceCount = (long) 1.104934;
                }
            } while (++i24 < 74);
            i23 = i23;
            Test0507.instanceCount |= Test0507.iFld;
        }
        i23 = 22771;
        i26 = 1;
        while (++i26 < 355) {
            b1 = b1;
            Test0507.iFld = -2;
            i23 += (((i26 * f2) + f2) - Test0507.instanceCount);
        }
        f2 -= i22;
        bArrFld[(-22812 >>> 1) % N] = b1;
        Test0507.iArrFld[(i26 >>> 1) % N] += Test0507.iFld;
        switch ((((-5 >>> 1) % 2) * 5) + 84) {
            case 86:
                if (b1) {
                    i23 -= (int) Test0507.instanceCount;
                } else if (b1) {
                    Test0507.instanceCount = -35078;
                    for (int i27 : Test0507.iArrFld) {
                        Test0507.instanceCount = Test0507.iFld;
                        i27 += (int) f2;
                        if (b1) continue;
                        if (b1) break;
                        Test0507.iFld <<= i26;
                        for (i28 = 1; 63 > i28; ++i28) {
                            i27 = i22;
                            Test0507.iArrFld[i28 + 1] *= i29;
                        }
                    }
                } else {
                    i29 = (int) Test0507.instanceCount;
                }
                break;
            case 85:
                Test0507.instanceCount = Test0507.iFld;
        }

        FuzzerUtils.out.println("d i22 i23 = " + Double.doubleToLongBits(d) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("b1 f2 i28 = " + (b1 ? 1 : 0) + "," + Float.floatToIntBits(f2) + "," + i28);
        FuzzerUtils.out.println("i29 = " + i29);

        FuzzerUtils.out.println("Test0507.instanceCount Test0507.iFld Test0507.iArrFld = " + Test0507.instanceCount + "," + Test0507.iFld +
                "," + FuzzerUtils.checkSum(Test0507.iArrFld));
        FuzzerUtils.out.println("bArrFld = " + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
