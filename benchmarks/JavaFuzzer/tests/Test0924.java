// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0924 {

    public static final int N = 400;

    public static long instanceCount = -16888L;
    public static volatile float fFld = 0.615F;
    public static int[][] iArrFld = new int[N][N];
    public static volatile short[] sArrFld = new short[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0924.iArrFld, 4);
        FuzzerUtils.init(Test0924.sArrFld, (short) 8932);
    }

    public int[] iArrFld1 = new int[N];

    public static void vMeth2(double d1, int i6) {

        int i7 = -109, i8 = 8, i9 = 10, i10 = 130, i11 = 4;

        i7 = 1;
        while (++i7 < 246) {
            for (i8 = 1; i8 < 7; ++i8) {
                Test0924.instanceCount += (((i8 * i7) + Test0924.instanceCount) - Test0924.fFld);
                Test0924.fFld += 36220;
                Test0924.instanceCount += i8;
                for (i10 = 1; i10 < 2; i10++) {
                    Test0924.iArrFld[i7 + 1][i10 - 1] >>>= (int) Test0924.instanceCount;
                    d1 = Test0924.fFld;
                    i6 += (i10 * i10);
                    Test0924.fFld = i10;
                    i9 -= i10;
                    i9 += i9;
                }
            }
            Test0924.iArrFld[i7][i7 + 1] *= (int) -1.29F;
            i6 |= (int) Test0924.instanceCount;
            if (i11 != 0) {
                vMeth2_check_sum += Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + i11;
                return;
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth1(long l1) {

        int i12 = -4;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -504950280L);

        vMeth2(0.113707, i12);
        lArr[(i12 >>> 1) % N] >>= i12;
        vMeth1_check_sum += l1 + i12 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l) {

        int i3 = 4, i4 = -8, i5 = 4, i13 = 5;
        double d = 109.79837, d2 = 0.95858;
        boolean b = false;
        byte by = -39;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 4105467655L);

        for (i3 = 6; 168 > i3; ++i3) {
            d = (((i4 - 23791) / (i3 | 1)) + (++l));
            i4 -= i4;
        }
        i5 = 1;
        do {
            vMeth1(Test0924.instanceCount);
            switch ((i5 % 2) + 14) {
                case 14:
                    lArr1[i5 - 1] = -207;
                    switch (((3 >>> 1) % 2) + 78) {
                        case 78:
                            if (b) continue;
                            Test0924.fFld += by;
                            Test0924.instanceCount += i3;
                            for (d2 = i5; d2 < 6; ++d2) {
                                Test0924.instanceCount -= 21517;
                                d = Test0924.fFld;
                                Test0924.iArrFld[(int) (d2)][(i5 >>> 1) % N] -= (int) Test0924.fFld;
                            }
                            break;
                        case 79:
                            i13 >>>= -157;
                            break;
                        default:
                            i13 += i5;
                    }
                    break;
                case 15:
                    i13 += (((i5 * i3) + i5) - i4);
                    break;
                default:
                    i4 = i3;
            }
        } while (++i5 < 283);
        vMeth_check_sum += l + i3 + i4 + Double.doubleToLongBits(d) + i5 + (b ? 1 : 0) + by +
                Double.doubleToLongBits(d2) + i13 + FuzzerUtils.checkSum(lArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0924 _instance = new Test0924();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 175;
        int i1 = 2;
        int i2 = 8;
        int i14 = -60011;
        int i15 = -41;
        int i16 = 32;
        int i17 = 145;
        int i18 = -13;
        int i19 = 209;
        int i20 = -74;
        int[] iArr = new int[N];
        boolean b1 = false;
        boolean[] bArr = new boolean[N];
        double d3 = -1.61737;
        long[] lArr2 = new long[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr, -60720);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr2, -145L);
        FuzzerUtils.init(fArr, 2.568F);

        for (i = 19; 361 > i; ++i) {
            i2 = 1;
            do {
                vMeth(Test0924.instanceCount);
            } while (++i2 < 74);
            i1 = -32091;
            i1 += (i * i);
            i1 = i;
            Test0924.instanceCount = i1;
            try {
                i1 = (i1 / 13006);
                i1 = (Test0924.iArrFld[i - 1][i - 1] % i1);
                i1 = (Test0924.iArrFld[i][i] % Test0924.iArrFld[i][i]);
            } catch (ArithmeticException a_e) {
            }
            Test0924.instanceCount = i2;
        }
        i1 <<= i1;
        b1 = b1;
        iArr[(i1 >>> 1) % N] *= i2;
        bArr[(i2 >>> 1) % N] = b1;
        i1 -= i;
        for (i14 = 2; i14 < 338; i14++) {
            Test0924.sArrFld[i14] = (short) -5;
        }
        i1 *= i2;
        i16 = 1;
        do {
            d3 -= i;
            for (i17 = 1; i17 < 101; ++i17) {
                for (i19 = 1; i19 < 2; i19 += 2) {
                    Test0924.iArrFld[i16 - 1][i19] -= (int) Test0924.fFld;
                    Test0924.fFld = (float) d3;
                    i15 += (((i19 * Test0924.fFld) + i19) - Test0924.instanceCount);
                    iArrFld1[i19] >>= i15;
                    i15 /= -19978;
                    lArr2 = lArr2;
                }
                b1 = true;
                i20 += i20;
                fArr[i16 - 1] -= i19;
            }
        } while (++i16 < 248);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("b1 i14 i15 = " + (b1 ? 1 : 0) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 d3 i17 = " + i16 + "," + Double.doubleToLongBits(d3) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("iArr bArr lArr2 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(bArr) +
                "," + FuzzerUtils.checkSum(lArr2));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0924.instanceCount Test0924.fFld Test0924.iArrFld = " + Test0924.instanceCount + "," +
                Float.floatToIntBits(Test0924.fFld) + "," + FuzzerUtils.checkSum(Test0924.iArrFld));
        FuzzerUtils.out.println("Test0924.sArrFld iArrFld1 = " + FuzzerUtils.checkSum(Test0924.sArrFld) + "," +
                FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
