// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0966 {

    public static final int N = 400;

    public static long instanceCount = -697177060L;
    public static int iFld = 21;
    public static float fFld = 13.438F;
    public static volatile int[][] iArrFld = new int[N][N];
    public static float[] fArrFld = new float[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0966.iArrFld, 13);
        FuzzerUtils.init(Test0966.fArrFld, -2.915F);
    }

    public static int iMeth(float f1, int i7, short s1) {

        int i8 = 11, i9 = -1, i10 = 85, i11 = -55, i12 = -14, i13 = -16915, i14 = 27546;
        boolean b = true;
        byte by = 96;

        i8 -= (int) 874119504L;
        if (b) {
            Test0966.iFld <<= (int) Test0966.instanceCount;
            for (i9 = 10; i9 < 371; i9 += 3) {
                for (i11 = 13; i11 > 1; i11 -= 3) {
                    i7 = i11;
                    switch ((i11 % 4) + 56) {
                        case 56:
                            Test0966.instanceCount += -43;
                            break;
                        case 57:
                        case 58:
                            Test0966.iFld -= i7;
                            i12 = i7;
                            for (i13 = 1; i13 < 4; ++i13) {
                                Test0966.iArrFld[i9][i9 - 1] -= (int) 253L;
                                i14 *= 9;
                                if (i10 != 0) {
                                }
                                Test0966.fFld += (i13 * i13);
                            }
                        case 59:
                            b = b;
                        default:
                            i12 ^= (int) Test0966.instanceCount;
                    }
                }
            }
        } else if (b) {
            by <<= (byte) i13;
        } else if (b) {
            i7 = i10;
        } else {
            Test0966.instanceCount = 11;
        }
        long meth_res = Float.floatToIntBits(f1) + i7 + s1 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + (b ? 1 : 0) + by;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i6) {

        short s = -28526;
        double d3 = -53.65526;
        int i15 = -109, i16 = -43, i17 = -81, i18 = 183, i19 = -18415;
        boolean b1 = true;

        try {
            i6 <<= (int) (((s + Test0966.fFld) * (i6 * -58425)) + (Test0966.iArrFld[(Test0966.iFld >>> 1) % N][(-73 >>> 1) % N] *=
                    iMeth(Test0966.fFld, i6, s)));
        } catch (ArrayIndexOutOfBoundsException exc3) {
            i6 += (int) Test0966.instanceCount;
        }
        try {
            i6 *= (int) Test0966.fFld;
            d3 = 4157956606L;
            for (i15 = 1; i15 < (361 + 400); ++i15) {
                Test0966.instanceCount >>>= -785243957L;
                if (b1) {
                    for (i17 = 1; i17 < (4 + 400); ++i17) {
                        Test0966.instanceCount = Test0966.instanceCount;
                        Test0966.iArrFld[i17 - 1][i15] >>= Test0966.iFld;
                        b1 = b1;
                    }
                } else {
                    i16 = i16;
                    i18 %= (int) 1.118506;
                }
            }
        } catch (NullPointerException exc4) {
            i6 = i19;
        } catch (ArrayIndexOutOfBoundsException exc5) {
            Test0966.fArrFld[(i18 >>> 1) % N] += i15;
        }
        vMeth1_check_sum += i6 + s + Double.doubleToLongBits(d3) + i15 + i16 + i17 + i18 + (b1 ? 1 : 0) + i19;
    }

    public static void vMeth(int i3, int i4, int i5) {

        float f = 2.323F;
        double d2 = 79.1326;
        int i20 = 222, i21 = -42161, i22 = 1;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 54476L);

        Test0966.iFld = (int) (Test0966.iFld = (int) ((f = (float) d2) - Test0966.instanceCount));
        lArr1[(Test0966.iFld >>> 1) % N] *= (long) ((f++) + (lArr1[(i4 >>> 1) % N] + (i4 + i4)));
        d2 *= Test0966.instanceCount;
        vMeth1(Test0966.iFld);
        Test0966.instanceCount = (long) f;
        Test0966.instanceCount = i3;
        i20 = 1;
        while ((i20 += 2) < 139) {
            Test0966.fArrFld[i20] = i4;
            i5 += (int) Test0966.instanceCount;
            i3 += (int) Test0966.instanceCount;
            Test0966.fArrFld = Test0966.fArrFld;
            Test0966.instanceCount >>>= i20;
        }
        for (i21 = 3; i21 < 188; ++i21) {
            i3 = i4;
            Test0966.iFld *= i3;
        }
        vMeth_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i20 + i21 + i22 +
                FuzzerUtils.checkSum(lArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0966 _instance = new Test0966();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 13;
        int i1 = -11;
        int i2 = 4115;
        int i23 = -7;
        int i24 = 15141;
        int i25 = -5014;
        int i26 = 87;
        int[] iArr = new int[N];
        long l = 3514886226L;
        long[] lArr = new long[N];
        double d1 = -1.58582;
        boolean b2 = false;

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(lArr, 2303746455L);

        i = 1;
        while (++i < 179) {
            double d = -108.43304;
            Test0966.instanceCount = (long) (-((d * i) * (i + Test0966.instanceCount)));
            Test0966.iFld *= (iArr[i - 1]--);
            Test0966.iFld += (((i * l) + i) - Test0966.iFld);
            if (b2) {
                lArr[i] = ((6938 - (++Test0966.iFld)) >> (++Test0966.iFld));
            } else if (b2) {
                d1 = 140;
                while (--d1 > 0) {
                    Test0966.iFld += (int) (d1 - Test0966.iFld);
                    for (i1 = 1; i1 < 1; i1++) {
                        vMeth(-14, i1, i1);
                        if (b2) continue;
                        Test0966.iFld += i1;
                        Test0966.instanceCount >>= -1;
                        Test0966.iArrFld[i][i + 1] >>= i2;
                        Test0966.iFld -= 74;
                        Test0966.iFld = i;
                        Test0966.iFld <<= 17185;
                        Test0966.iFld >>= (int) 11L;
                        Test0966.instanceCount = Test0966.instanceCount;
                    }
                }
                Test0966.instanceCount -= i;
            } else if (b2) {
                i2 -= (int) d;
            } else {
                Test0966.iFld -= (int) -2.24754;
                for (i23 = 3; i23 < 140; i23++) {
                    if (b2) continue;
                }
                for (i25 = 8; 140 > i25; i25++) {
                    Test0966.iFld += i25;
                    i26 += (int) d;
                    l += l;
                }
            }
        }
        i24 = (int) Test0966.instanceCount;
        i2 = 179;

        FuzzerUtils.out.println("i l d1 = " + i + "," + l + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i1 i2 b2 = " + i1 + "," + i2 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 iArr lArr = " + i26 + "," + FuzzerUtils.checkSum(iArr) + "," +
                FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0966.instanceCount Test0966.iFld Test0966.fFld = " + Test0966.instanceCount + "," + Test0966.iFld +
                "," + Float.floatToIntBits(Test0966.fFld));
        FuzzerUtils.out.println("Test0966.iArrFld Test0966.fArrFld = " + FuzzerUtils.checkSum(Test0966.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0966.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
