// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test0867 {

    public static final int N = 400;

    public static long instanceCount = 7498449922261300926L;
    public static int iFld = -7;
    public static volatile double dFld = -59.46694;
    public static boolean bFld = false;
    public static volatile double[] dArrFld = new double[N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0867.dArrFld, -2.125066);
    }

    public volatile short sFld = -1659;
    public long[] lArrFld = new long[N];

    public static void vMeth1(int i8, int i9) {

        int i10 = 225;
        int i11 = 7250;
        int i12 = 43032;
        int i13 = 35961;
        int i14 = -166;
        int i15 = -9;
        int[] iArr = new int[N];
        float f1 = 108.330F;
        float[] fArr = new float[N];
        long l1 = -6L;

        FuzzerUtils.init(fArr, 37.517F);
        FuzzerUtils.init(iArr, -194);

        fArr[(i9 >>> 1) % N] = Test0867.iFld;
        for (i10 = 2; i10 < 147; ++i10) {
            Test0867.instanceCount += i10;
            if (Test0867.bFld) {
                for (i12 = 1; 11 > i12; ++i12) {
                    for (i14 = 1; i14 < 2; i14 += 2) {
                        Test0867.iFld += (i14 * i14);
                        Test0867.bFld = Test0867.bFld;
                        Test0867.dFld += i9;
                        if (Test0867.bFld) {
                            Test0867.dArrFld[i10] = i15;
                        }
                        Test0867.iFld &= Test0867.iFld;
                    }
                    f1 += i15;
                    iArr[i10 + 1] = i9;
                    Test0867.instanceCount *= i13;
                }
            } else {
                Test0867.iFld <<= (int) l1;
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + l1 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i5, long l) {

        int i6 = 1, i7 = -192, i16 = 14, i17 = 197, i18 = 132;
        float f2 = 0.797F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -2685339032238998237L);

        l >>= Test0867.iFld;
        for (i6 = 15; 299 > i6; ++i6) {
            vMeth1(i6, i5);
            i5 *= i5;
            lArr[i6 - 1] -= -26372;
            for (i16 = i6; 6 > i16; ++i16) {
                i7 = (int) l;
            }
            if (true) continue;
            i18 = 1;
            do {
                i17 -= i7;
                switch (((i6 % 6) * 5) + 12) {
                    case 28:
                        Test0867.bFld = Test0867.bFld;
                        l += i18;
                        i5 += i18;
                        break;
                    case 14:
                        Test0867.iFld = (int) Test0867.instanceCount;
                        break;
                    case 39:
                        f2 -= -1.349F;
                        break;
                    case 24:
                        if (true) continue;
                        break;
                    case 29:
                        if (Test0867.bFld) break;
                        break;
                    case 32:
                        i5 *= (int) Test0867.instanceCount;
                        break;
                }
            } while (++i18 < 6);
        }
        vMeth_check_sum += i5 + l + i6 + i7 + i16 + i17 + i18 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(int i, int i1, int i2) {

        int i3 = 62;
        int i4 = 3943;
        int i19 = 76;
        int i20 = -55592;
        int i21 = 13;
        int i22 = -5;
        int[] iArr1 = new int[N];
        byte by1 = 92;
        float f3 = -64.796F;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, 2.275F);
        FuzzerUtils.init(iArr1, -5271);

        for (i3 = 10; 320 > i3; ++i3) {
            vMeth(i2, Test0867.instanceCount);
            i = -64;
            i4 >>= 23502;
            fArr1[i3 + 1] = 37.839F;
            for (i19 = 1; i19 < 5; i19++) {
                iArr1[i3 - 1] -= (int) Test0867.instanceCount;
                for (i21 = i19; i21 < 2; ++i21) {
                    iArr1[i21 + 1] <<= i20;
                    Test0867.iFld += (i21 * i21);
                    Test0867.iFld += by1;
                }
                if (Test0867.bFld) {
                    if (i1 != 0) {
                    }
                } else if (false) {
                    i20 = i20;
                    f3 -= i19;
                }
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + i19 + i20 + i21 + i22 + by1 + Float.floatToIntBits(f3) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0867 _instance = new Test0867();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f = 2.969F;
        float[] fArr2 = new float[N];
        byte by = 12;
        int i23 = -53122;
        int i24 = 10;
        int i25 = 14;
        int i26 = 14;
        int i27 = -12120;
        int i28 = -94;
        int i29 = -11;
        int[] iArr2 = new int[N];
        long l2 = 7667L;

        FuzzerUtils.init(fArr2, 1.781F);
        FuzzerUtils.init(iArr2, 65);

        f = (-7704L * ((9411 - (by++)) + Test0867.iFld));
        Test0867.iFld = (int) (((Test0867.iFld + Test0867.dFld) - lMeth(Test0867.iFld, Test0867.iFld, Test0867.iFld)) - by);
        for (i23 = 18; i23 < 309; i23++) {
            fArr2[i23 - 1] -= i23;
            if (Test0867.bFld) break;
            l2 = 86;
            while (--l2 > 0) {
                Test0867.dFld -= i23;
                f %= 230;
                Test0867.instanceCount += Test0867.iFld;
                Test0867.instanceCount <<= i23;
                f = l2;
                f = sFld;
                for (i25 = 1; i25 < 1; i25++) {
                    i26 = (int) l2;
                    i24 += (int) Test0867.instanceCount;
                }
                Test0867.iFld = (int) Test0867.instanceCount;
                if (Test0867.bFld) {
                    if (Test0867.bFld) break;
                } else if (Test0867.bFld) {
                    i27 = 1;
                    do {
                        Test0867.dFld += 12;
                        Test0867.iFld += i27;
                        i26 <<= i26;
                        i26 >>= i26;
                        lArrFld[i27 + 1] >>= -5281853435421407204L;
                    } while (++i27 < 1);
                    switch (((i23 % 1) * 5) + 68) {
                        case 73:
                    }
                    switch (((i27 >>> 1) % 1) + 121) {
                        case 121:
                            for (i28 = 1; 1 > i28; i28++) {
                                i29 -= (int) 23.982F;
                            }
                            Test0867.instanceCount -= i24;
                        default:
                            Test0867.instanceCount += l2;
                    }
                } else if (Test0867.bFld) {
                    iArr2[i23] = i29;
                }
            }
        }

        FuzzerUtils.out.println("f by i23 = " + Float.floatToIntBits(f) + "," + by + "," + i23);
        FuzzerUtils.out.println("i24 l2 i25 = " + i24 + "," + l2 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 fArr2 iArr2 = " + i29 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2))
                + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0867.instanceCount Test0867.iFld Test0867.dFld = " + Test0867.instanceCount + "," + Test0867.iFld +
                "," + Double.doubleToLongBits(Test0867.dFld));
        FuzzerUtils.out.println("Test0867.bFld sFld Test0867.dArrFld = " + (Test0867.bFld ? 1 : 0) + "," + sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0867.dArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
