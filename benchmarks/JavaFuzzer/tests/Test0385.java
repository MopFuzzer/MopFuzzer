// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0385 {

    public static final int N = 400;

    public static long instanceCount = -42759153L;
    public static double dFld = 107.11386;
    public static byte byFld = 67;
    public static volatile int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0385.iArrFld, 154);
        FuzzerUtils.init(Test0385.dArrFld, 125.33174);
    }

    public volatile short sFld = 10502;
    public boolean bFld = true;

    public static long lMeth(int i8, byte by, byte by1) {

        int i9 = 2, i10 = -6, i11 = 18788, i12 = 245, i13 = -6, i14 = 0;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -1860);

        i9 = 1;
        while (++i9 < 397) {
            Test0385.instanceCount -= i9;
            for (i10 = 1; i10 < 4; i10++) {
                i8 *= i9;
                i11 += (((i10 * Test0385.instanceCount) + i8) - i10);
                for (i12 = 1; i12 < 2; ++i12) {
                    switch (((i12 >>> 1) % 1) + 58) {
                        case 58:
                            i13 = (int) Test0385.instanceCount;
                            i11 -= (int) Test0385.instanceCount;
                            i13 = -4;
                            i13 += (((i12 * i14) + by) - by);
                            break;
                        default:
                            if (i10 != 0) {
                            }
                            sArr[i12] *= (short) i11;
                            i11 |= i11;
                            i13 *= (int) Test0385.instanceCount;
                    }
                }
            }
        }
        long meth_res = i8 + by + by1 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(sArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i2, int i3) {

        int i4 = -5, i5 = -10302, i6 = -13, i7 = -40124;
        float f = 0.567F;
        byte by2 = -3;
        short s1 = -14021;
        boolean b = false;

        for (i4 = 1; i4 < 149; ++i4) {
            for (i6 = i4; i6 < 11; ++i6) {
                i2 = (int) Math.abs(++f);
                i7 <<= (int) ((i6 - Math.abs(i4)) - Math.max((long) (Test0385.instanceCount - Test0385.dFld), lMeth(14, by2,
                        by2)));
                Test0385.iArrFld[i4] = (int) Test0385.instanceCount;
                i5 += (i6 * i6);
                switch (((i6 % 1) * 5) + 35) {
                    case 37:
                        Test0385.dFld -= Test0385.instanceCount;
                }
                switch (((i2 >>> 1) % 2) + 75) {
                    case 75:
                        i5 = s1;
                    case 76:
                        Test0385.iArrFld[i4 + 1] = i3;
                        Test0385.instanceCount += i2;
                        Test0385.iArrFld[i6 - 1] *= i6;
                        break;
                }
            }
            Test0385.instanceCount = -8;
            b = b;
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + by2 + s1 + (b ? 1 : 0);
    }

    public static int iMeth() {

        int i = 54537, i1 = -148, i15 = 13, i16 = -57619, i17 = 61, i18 = 6;
        short s = 22407;
        byte by3 = 8;
        boolean b1 = false;
        float f1 = 78.649F;

        i = 1;
        while (++i < 216) {
            i1 += i;
            Test0385.iArrFld[i - 1] >>= i1;
            Test0385.instanceCount >>= (Test0385.instanceCount + s);
            vMeth(i, i1);
            if (true) {
                Test0385.dArrFld[i + 1] *= by3;
                for (i15 = 1; i15 < 7; i15++) {
                    if (b1) break;
                    i1 -= (int) Test0385.instanceCount;
                    for (i17 = 1; 2 > i17; i17 += 3) {
                        Test0385.iArrFld[i17] += (int) Test0385.instanceCount;
                    }
                    i18 <<= (int) Test0385.instanceCount;
                    f1 += i15;
                    i1 *= i1;
                }
            } else {
                i1 -= -4;
            }
        }
        long meth_res = i + i1 + s + by3 + i15 + i16 + (b1 ? 1 : 0) + i17 + i18 + Float.floatToIntBits(f1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0385 _instance = new Test0385();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i19 = 157, i20 = 210, i21 = 50, i22 = 22612, i23 = -61958, i24 = -7, i25 = 18313, i26 = 186, i27 = 228, i28 = -126;
        float f2 = 37.840F, f3 = -70.115F;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, 230L);

        iMeth();
        i19 = (int) Test0385.instanceCount;
        i19 *= sFld;
        for (i20 = 202; i20 > 3; --i20) {
            for (i22 = 5; i22 < 126; ++i22) {
                sFld += (short) (((i22 * Test0385.byFld) + i23) - i21);
                f2 = Test0385.instanceCount;
                i23 |= i22;
                i19 += (((i22 * i19) + i20) - Test0385.instanceCount);
                Test0385.instanceCount = sFld;
            }
            Test0385.instanceCount >>= i23;
            f2 = i20;
            i19 = (int) Test0385.instanceCount;
            bFld = bFld;
            for (i24 = 2; 126 > i24; ++i24) {
                f2 -= i23;
                switch ((i24 % 2) + 103) {
                    case 103:
                        Test0385.iArrFld[i24 + 1] = 37123;
                        break;
                    case 104:
                        Test0385.instanceCount = Test0385.instanceCount;
                        break;
                    default:
                        i21 += (i24 * i24);
                        Test0385.instanceCount <<= i21;
                }
            }
            lArr[i20][i20 + 1] = i22;
            for (i26 = 126; i26 > i20; i26--) {
                Test0385.dFld -= i24;
                i27 = -232;
                for (f3 = 1; f3 < 1; ++f3) {
                    Test0385.iArrFld[i26 - 1] *= i21;
                    f2 += i20;
                    if (bFld) break;
                    i27 >>= (int) Test0385.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 f2 = " + i22 + "," + i23 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 f3 i28 = " + i27 + "," + Float.floatToIntBits(f3) + "," + i28);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0385.instanceCount Test0385.dFld sFld = " + Test0385.instanceCount + "," +
                Double.doubleToLongBits(Test0385.dFld) + "," + sFld);
        FuzzerUtils.out.println("Test0385.byFld bFld Test0385.iArrFld = " + Test0385.byFld + "," + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0385.iArrFld));
        FuzzerUtils.out.println("Test0385.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0385.dArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
