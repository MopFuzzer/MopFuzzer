// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0933 {

    public static final int N = 400;

    public static long instanceCount = -2L;
    public static int iFld = 60;
    public static short sFld = -9986;
    public static float fFld = 13.888F;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public double dFld = 2.120146;
    public long[] lArrFld = new long[N];

    public static int iMeth1() {

        byte by = 104;
        byte[] byArr = new byte[N];
        int i13 = -12;
        int i14 = 14427;
        int i15 = 205;
        int i16 = 51211;
        int i17 = 39;
        int i18 = -8;
        int[] iArr1 = new int[N];
        boolean b2 = true;
        double d1 = 1.12888;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -4608506395665963606L);
        FuzzerUtils.init(iArr1, -5);
        FuzzerUtils.init(byArr, (byte) -71);

        Test0933.iFld += by;
        for (i13 = 8; i13 < 342; ++i13) {
            for (i15 = i13; 5 > i15; i15++) {
                lArr[i15] = i15;
            }
            i16 += (((i13 * i14) + i14) - Test0933.instanceCount);
            Test0933.iFld += i15;
            switch ((i13 % 7) + 57) {
                case 57:
                    for (i17 = 1; i17 < 5; i17++) {
                        iArr1[i17] += (int) Test0933.fFld;
                        Test0933.fFld -= 9;
                        Test0933.instanceCount *= 41907L;
                        i16 -= Test0933.iFld;
                    }
                    iArr1[i13 - 1] += i17;
                case 58:
                    lArr[i13] *= Test0933.iFld;
                    break;
                case 59:
                    Test0933.iFld -= i18;
                    break;
                case 60:
                    if (b2) break;
                    break;
                case 61:
                    i16 -= (int) Test0933.instanceCount;
                    break;
                case 62:
                    d1 *= i13;
                    break;
                case 63:
                    byArr[i13 + 1] += (byte) Test0933.instanceCount;
                    break;
            }
        }
        long meth_res = by + i13 + i14 + i15 + i16 + i17 + i18 + (b2 ? 1 : 0) + Double.doubleToLongBits(d1) +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(long l1, double d, int i8) {

        int i9 = -1;
        int i10 = -4;
        int i11 = -3;
        int i12 = -14402;
        int i19 = -47222;
        int i20 = 131;
        int[] iArr = new int[N];
        boolean b1 = false;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr, 37);
        FuzzerUtils.init(lArr1, -77L);

        for (i9 = 21; i9 < 371; i9++) {
            for (i11 = i9; i11 < 5; ++i11) {
                b1 = ((i12--) < -7);
                iArr[i11 - 1] += i10;
                Test0933.sFld += (short) ((i8 - i12) + (iMeth1() + Test0933.instanceCount));
            }
            for (i19 = 1; i19 < 5; ++i19) {
                switch (((i19 % 1) * 5) + 40) {
                    case 41:
                        i12 *= i20;
                        break;
                }
                Test0933.fFld += -51153;
                Test0933.fFld -= i8;
                i10 = Test0933.iFld;
                Test0933.iFld = i11;
            }
            lArr1 = lArr1;
            iArr[i9] = i9;
            i20 += (i9 | (long) Test0933.fFld);
        }
        vMeth_check_sum += l1 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + (b1 ? 1 : 0) + i19 + i20 +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0933 _instance = new Test0933();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(long l, int i6, int i7) {

        int i21 = -50;
        int i22 = -25160;
        int i23 = 141;
        int i24 = 3;
        int[] iArr2 = new int[N];
        boolean b3 = true;
        byte[] byArr1 = new byte[N];
        double[][] dArr = new double[N][N];

        FuzzerUtils.init(iArr2, 11);
        FuzzerUtils.init(byArr1, (byte) -2);
        FuzzerUtils.init(dArr, 0.44119);

        vMeth(Test0933.instanceCount, dFld, Test0933.iFld);
        i6 = i7;
        i21 = 1;
        do {
            Test0933.fFld += (147 + (i21 * i21));
            for (i22 = i21; i22 < 6; ++i22) {
                byte by1 = 96;
                iArr2[i21 + 1] = i21;
                b3 = b3;
                i6 >>>= Test0933.iFld;
                by1 = (byte) i23;
                switch (((i22 >>> 1) % 3) + 113) {
                    case 113:
                        Test0933.iFld += i22;
                        i24 = 1;
                        do {
                            byArr1[i24 + 1] |= (byte) 29388;
                            lArrFld[(-59116 >>> 1) % N] += -5728;
                            dArr[i24][i24 + 1] %= (i21 | 1);
                        } while (++i24 < 1);
                        break;
                    case 114:
                        iArr2[i21] >>= i23;
                        break;
                    case 115:
                        i7 *= i21;
                        break;
                }
            }
        } while (++i21 < 267);
        long meth_res = l + i6 + i7 + i21 + i22 + i23 + (b3 ? 1 : 0) + i24 + FuzzerUtils.checkSum(iArr2) +
                FuzzerUtils.checkSum(byArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b = false;
        boolean[] bArr = new boolean[N];
        int i = -1;
        int i1 = -13;
        int i2 = -156;
        int i3 = 14;
        int i4 = 8;
        int i5 = 13;
        int i25 = -8;
        int[] iArr3 = new int[N];
        byte by2 = -41;

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr3, 240);

        try {
            b = (b = bArr[(Test0933.iFld >>> 1) % N]);
            Test0933.iFld -= (int) (Test0933.instanceCount = (-(--Test0933.iFld)));
            for (i = 4; i < (240 + 400); ++i) {
                Test0933.instanceCount = (((Test0933.iFld - -65203L) - (i1 - -1)) + ((5 * (i1 - Test0933.instanceCount)) + (-45 -
                        (Test0933.iFld++))));
                for (i2 = 2; i2 < (63 + 400); i2++) {
                    for (i4 = 1; i4 < (1 + 400); i4 += 2) {
                        dFld = (iMeth(Test0933.instanceCount, 167, i3) + -166);
                        iArr3[i2 - 1] += i2;
                        i1 %= (int) (i | 1);
                        i1 |= i1;
                        Test0933.instanceCount *= i1;
                        by2 += (byte) Test0933.instanceCount;
                        by2 -= (byte) Test0933.fFld;
                        if (b) continue;
                    }
                    Test0933.iFld = i5;
                    i1 = Test0933.sFld;
                    try {
                        Test0933.iFld = (Test0933.iFld / -24011);
                        Test0933.iFld = (165 / iArr3[i]);
                        iArr3[i] = (36686 % Test0933.iFld);
                    } catch (ArithmeticException a_e) {
                    }
                    i5 -= i;
                    Test0933.iFld = i5;
                    iArr3[i2 - 1] *= -5774;
                    Test0933.instanceCount -= (long) dFld;
                }
                iArr3 = iArr3;
                i25 = 1;
                while (++i25 < 63) {
                    switch (((i25 % 1) * 5) + 125) {
                        case 126:
                            Test0933.instanceCount = i;
                            iArr3 = FuzzerUtils.int1array(N, (int) -165);
                            break;
                        default:
                            i5 >>= (int) Test0933.instanceCount;
                    }
                    i5 += i25;
                    Test0933.instanceCount *= Test0933.iFld;
                }
            }
        } catch (ArrayIndexOutOfBoundsException exc1) {
            iArr3[(i1 >>> 1) % N] = (int) -54.106F;
        }

        FuzzerUtils.out.println("b i i1 = " + (b ? 1 : 0) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 by2 i25 = " + i5 + "," + by2 + "," + i25);
        FuzzerUtils.out.println("bArr iArr3 = " + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0933.instanceCount Test0933.iFld dFld = " + Test0933.instanceCount + "," + Test0933.iFld + "," +
                Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0933.sFld Test0933.fFld lArrFld = " + Test0933.sFld + "," + Float.floatToIntBits(Test0933.fFld) +
                "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
