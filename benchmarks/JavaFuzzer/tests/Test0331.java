// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0331 {

    public static final int N = 400;

    public static long instanceCount = 87L;
    public static short sFld = -8581;
    public static byte byFld = 70;
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0331.iArrFld, 249);
    }

    public float fFld = -1.487F;

    public static int iMeth1(int i12, float f) {

        int i13 = -6, i14 = -964, i15 = 10, i16 = 10, i17 = 27;
        boolean b = false;
        float f1 = -2.439F;

        for (i13 = 299; i13 > 18; i13 -= 3) {
            for (i15 = 1; i15 < 17; i15++) {
                Test0331.iArrFld[i15 + 1] = (int) Test0331.instanceCount;
                switch (((i16 >>> 1) % 2) + 48) {
                    case 48:
                        Test0331.iArrFld[i13 + 1] = i13;
                        if (b) {
                            i16 += i15;
                            f = 121;
                        } else if (b) {
                            i16 += (i15 * i15);
                        } else {
                            for (f1 = 1; f1 < 2; f1++) {
                                Test0331.iArrFld[i15] = i17;
                                i12 = Test0331.byFld;
                                Test0331.instanceCount += i14;
                                i16 >>>= i13;
                                f -= f1;
                            }
                        }
                        break;
                    case 49:
                        i12 = (int) Test0331.instanceCount;
                        break;
                }
            }
        }
        long meth_res = i12 + Float.floatToIntBits(f) + i13 + i14 + i15 + i16 + (b ? 1 : 0) + Float.floatToIntBits(f1)
                + i17;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {

        int i7 = -230;
        int i8 = 88;
        int i9 = -12;
        int i10 = -218;
        int i11 = -29;
        int i18 = -26107;
        int[] iArr = new int[N];
        double d1 = -2.56965;
        float f2 = 2.597F;
        long l = -2100890582L;

        FuzzerUtils.init(iArr, -1);

        for (i7 = 310; i7 > 13; i7--) {
            switch ((i7 % 1) + 65) {
                case 65:
                    i9 = 1;
                    do {
                        i8 = (int) (-5 + (d1++));
                        iArr[i7] += i9;
                        i8 += (i9 - (--Test0331.byFld));
                    } while (++i9 < 6);
                    i8 += (i7 - i8);
                default:
                    for (i10 = 1; i10 < 6; ++i10) {
                        i11 = ((++i8) + iMeth1(i11, f2));
                    }
            }
            l = 1;
            while (++l < 6) {
                i18 = 1;
                while (--i18 > 0) {
                    i11 = Test0331.sFld;
                    f2 *= i10;
                    Test0331.byFld += (byte) 64;
                    i8 -= 3;
                }
            }
        }
        vMeth_check_sum += i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + Float.floatToIntBits(f2) + l + i18
                + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i6, double d) {

        int i19 = -10186, i20 = 134, i21 = 5, i22 = -34058, i23 = 8481, i24 = 46102;
        boolean b1 = true;
        float f3 = 0.137F;

        vMeth();
        i6 = i6;
        i6 += (int) 20730L;
        for (i19 = 4; i19 < 319; ++i19) {
            i20 >>= (int) Test0331.instanceCount;
            for (i21 = 1; i21 < 5; ++i21) {
                Test0331.instanceCount += (i21 * i21);
                b1 = b1;
                i6 >>= (int) -6746103032354954361L;
                if (b1) {
                    for (i23 = 1; i23 < 2; ++i23) {
                        i20 -= -12;
                        i6 = 14;
                        Test0331.instanceCount += (-43357L + (i23 * i23));
                        i6 = i21;
                    }
                } else if (b1) {
                    f3 = f3;
                } else {
                    i24 = (int) Test0331.instanceCount;
                }
            }
        }
        long meth_res = i6 + Double.doubleToLongBits(d) + i19 + i20 + i21 + i22 + (b1 ? 1 : 0) + i23 + i24 +
                Float.floatToIntBits(f3);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0331 _instance = new Test0331();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 26, i1 = -5, i2 = 121, i3 = -65056, i4 = -2, i5 = 87;
        boolean b2 = true;
        double d2 = 124.119803;
        byte[] byArr = new byte[N];
        short[][] sArr = new short[N][N];

        FuzzerUtils.init(byArr, (byte) 87);
        FuzzerUtils.init(sArr, (short) 25832);

        i = 1;
        do {
            i1 += i1;
            fFld *= (((30L + (i + Test0331.sFld)) + (--i1)) * (i * (fFld + Test0331.instanceCount)));
            i1 += ((i1 - i) * Test0331.sFld);
            for (i2 = 4; i2 < 70; ++i2) {
                for (i4 = i2; i4 < 2; ++i4) {
                    i5 = (int) Test0331.instanceCount;
                    switch ((((-56932 + (i5++)) >>> 1) % 9) + 31) {
                        case 31:
                            fFld *= (-((6 * iMeth(i1, -45.91270)) - 94.289F));
                            switch (((i4 % 7) * 5) + 78) {
                                case 104:
                                    i3 = (int) Test0331.instanceCount;
                                    break;
                                case 99:
                                case 110:
                                    try {
                                        i5 = (-28 / i3);
                                        i5 = (Test0331.iArrFld[i] / i5);
                                        i3 = (i / i4);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    fFld += i5;
                                    try {
                                        i3 = (i4 / -14986);
                                        Test0331.iArrFld[i4] = (i2 / -765835009);
                                        i5 = (i3 / Test0331.iArrFld[i4]);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    Test0331.instanceCount <<= i;
                                    break;
                                case 90:
                                    i1 = i3;
                                    Test0331.iArrFld[i] += (int) fFld;
                                    break;
                                case 93:
                                    i1 += (i4 * i4);
                                    byArr[i] *= (byte) -8;
                                    if (false) {
                                        fFld += (i4 + fFld);
                                        try {
                                            i3 = (179 / i);
                                            i1 = (Test0331.iArrFld[i + 1] / i5);
                                            i1 = (i1 % i4);
                                        } catch (ArithmeticException a_e) {
                                        }
                                        i3 += (int) (-1953084389L + (i4 * i4));
                                    } else {
                                        sArr = sArr;
                                        i5 >>= i;
                                    }
                                    break;
                                case 89:
                                    i3 <<= i;
                                    Test0331.iArrFld[i4] += (int) fFld;
                                    i5 = i;
                                    if (b2) break;
                                    break;
                                case 92:
                                    Test0331.instanceCount += i2;
                                    break;
                                default:
                                    i3 = i3;
                            }
                            break;
                        case 32:
                            d2 += i;
                            break;
                        case 33:
                            i3 = i2;
                        case 34:
                            i5 += (int) 62.991F;
                            break;
                        case 35:
                            i1 = i5;
                            break;
                        case 36:
                            i1 *= i;
                        case 37:
                            i1 -= 8;
                            break;
                        case 38:
                            i5 *= (int) Test0331.instanceCount;
                            break;
                        case 39:
                            i1 += (i4 * i4);
                            break;
                        default:
                            Test0331.instanceCount *= 177;
                    }
                }
            }
        } while (++i < 360);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("b2 d2 byArr = " + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d2) + "," +
                FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0331.instanceCount fFld Test0331.sFld = " + Test0331.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0331.sFld);
        FuzzerUtils.out.println("Test0331.byFld Test0331.iArrFld = " + Test0331.byFld + "," + FuzzerUtils.checkSum(Test0331.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
