// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0221 {

    public static final int N = 400;

    public static long instanceCount = 13L;
    public static float fFld = 0.554F;
    public static short sFld = -20991;
    public static float[][] fArrFld = new float[N][N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0221.fArrFld, 44.364F);
    }

    public int iFld = -52922;

    public static long lMeth1() {

        int i9 = 37719;
        int i10 = 9;
        int i11 = 12;
        int i12 = -102;
        int i13 = -56111;
        int i14 = -1;
        int i15 = 13;
        int i16 = -33102;
        int[] iArr = new int[N];
        boolean b1 = true;
        double d = 0.120591;
        float f1 = -5.806F;
        short s1 = -16965;
        byte by = -103;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, -96);
        FuzzerUtils.init(lArr, -240616447L);

        i9 >>>= i9;
        i10 = 1;
        do {
            for (i11 = 13; i11 > 1; i11 -= 2) {
                i12 = i9;
                if (b1) break;
                d = Test0221.instanceCount;
                f1 += 2;
                i12 = i12;
                iArr[i10] = (int) Test0221.instanceCount;
            }
        } while (++i10 < 125);
        for (i13 = 24; 387 > i13; ++i13) {
            s1 = by;
            if (true) continue;
            for (i15 = 1; i15 < 5; ++i15) {
                lArr[i13] |= Test0221.instanceCount;
                i9 += (i15 + i15);
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) +
                i13 + i14 + s1 + by + i15 + i16 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long) meth_res;
    }

    public static long lMeth(boolean b, long l) {

        int i5 = 125, i6 = 8, i7 = -2, i8 = -25964, i17 = -12, i18 = 162;
        short s = -17012;
        float f = -66.273F;
        double d1 = 38.25031;

        for (i5 = 3; i5 < 271; ++i5) {
            s -= (short) ((-(i6 - f)) + ((i5 + i5) * l));
            i6 = (int) (l--);
            if (b) {
                i6 += i6;
                switch ((i5 % 2) + 34) {
                    case 34:
                    case 35:
                        for (i7 = 1; i7 < 6; ++i7) {
                            i8 = (int) (lMeth1() - i7);
                            d1 *= d1;
                            for (i17 = 1; 2 > i17; i17++) {
                                i18 += i17;
                                Test0221.fArrFld[i7 - 1][i17] += 157L;
                                i18 -= (int) f;
                                b = b;
                                l = i7;
                            }
                        }
                        break;
                    default:
                        l *= i5;
                }
            } else if (b) {
                i18 += i18;
            } else {
                i8 += i18;
            }
        }
        long meth_res = (b ? 1 : 0) + l + i5 + i6 + s + Float.floatToIntBits(f) + i7 + i8 + Double.doubleToLongBits(d1)
                + i17 + i18;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i2) {

        int i3 = -254;
        int i4 = 16224;
        int i19 = -48;
        int i20 = -4;
        int i21 = -1;
        int i22 = -7;
        int[] iArr1 = new int[N];
        boolean b2 = false;
        double d2 = 119.81991;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -1.72974);
        FuzzerUtils.init(iArr1, 63093);

        for (i3 = 3; i3 < 140; i3++) {
            lMeth(b2, Test0221.instanceCount);
            Test0221.fArrFld[i3][i3 - 1] = Test0221.fFld;
            i19 = 1;
            while (++i19 < 11) {
                dArr[i3 + 1] %= (i3 | 1);
                Test0221.fFld *= i20;
                Test0221.instanceCount ^= Test0221.instanceCount;
                for (i21 = i3; i21 < 1; ++i21) {
                    Test0221.instanceCount += (-1946 + (i21 * i21));
                    i2 = (int) Test0221.instanceCount;
                    i20 *= (int) Test0221.instanceCount;
                    try {
                        i22 = (i4 % i19);
                        i22 = (iArr1[i3 + 1] / -43189);
                        i2 = (i4 % -39492);
                    } catch (ArithmeticException a_e) {
                    }
                }
                d2 = i4;
                i2 += i22;
                i4 -= i4;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + (b2 ? 1 : 0) + i19 + i20 + i21 + i22 + Double.doubleToLongBits(d2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0221 _instance = new Test0221();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 42163, i1 = -61275, i23 = -80, i24 = 0, i25 = 113, i26 = 195, i27 = 239;
        long l1 = 6066791133550936726L;
        long[][] lArr1 = new long[N][N];

        FuzzerUtils.init(lArr1, -7965375687630901509L);

        iFld = (int) Double.longBitsToDouble(Test0221.instanceCount);
        for (i = 4; 254 > i; i++) {
            vMeth(i1);
            iFld += (i + Test0221.instanceCount);
        }
        Test0221.fArrFld[(i1 >>> 1) % N] = FuzzerUtils.float1array(N, (float) -5.534F);
        i23 = 1;
        while (++i23 < 226) {
            for (i24 = i23; 111 > i24; ++i24) {
                lArr1[i24][i23] = i24;
                i25 += (int) Test0221.fFld;
            }
            iFld >>= i25;
        }
        for (i26 = 9; 321 > i26; i26++) {
            i27 = Test0221.sFld;
            l1 = iFld;
            l1 <<= l1;
            Test0221.instanceCount = -51;
            lArr1[i26 + 1][i26] <<= i27;
            iFld *= i27;
        }

        FuzzerUtils.out.println("i i1 i23 = " + i + "," + i1 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 l1 lArr1 = " + i27 + "," + l1 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0221.instanceCount iFld Test0221.fFld = " + Test0221.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0221.fFld));
        FuzzerUtils.out.println("Test0221.sFld Test0221.fArrFld = " + Test0221.sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0221.fArrFld)));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
