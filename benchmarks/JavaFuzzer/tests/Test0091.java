// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0091 {

    public static final int N = 400;

    public static long instanceCount = 3L;
    public static double dFld = -2.80370;
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0091.iArrFld, -39557);
    }

    public short sFld = -10166;
    public float[] fArrFld = new float[N];

    public static int iMeth() {

        int i1 = -208;

        i1 -= (int) (Math.min(--i1, Math.min(i1, i1)) + Long.reverseBytes((long) (i1 + Test0091.dFld)));
        long meth_res = i1;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i8, int i9, int i10) {

        float f1 = -104.459F;

        Test0091.dFld -= f1;
        i10 = i8;
        i9 = i10;
        vMeth_check_sum += i8 + i9 + i10 + Float.floatToIntBits(f1);
    }

    public static int iMeth1(byte by, int i6) {

        int i7 = -10571;
        int i11 = 19290;
        int i12 = 2;
        int[] iArr = new int[N];
        float f2 = 100.597F;
        double d2 = 0.93855;
        boolean b = true;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 5);
        FuzzerUtils.init(lArr, -2427154134L);

        iArr[(i6 >>> 1) % N] = (int) (((i7 - 239) * iArr[(i7 >>> 1) % N]) - Test0091.dFld);
        lArr = (lArr = FuzzerUtils.long1array(N, (long) -22590L));
        vMeth(i6, i7, 26327);
        i6 ^= by;
        i11 = 1;
        do {
            for (f2 = i11; f2 < 5; ++f2) {
                d2 = 1;
                while ((d2 -= 3) > 0) {
                    Test0091.instanceCount = i12;
                    i7 <<= 64;
                    iArr[(int) (f2 - 1)] = i6;
                    i7 *= i7;
                    i7 <<= (int) -134L;
                    i12 += (int) d2;
                    i12 += by;
                }
                b = b;
            }
        } while (++i11 < 371);
        long meth_res = by + i6 + i7 + i11 + Float.floatToIntBits(f2) + i12 + Double.doubleToLongBits(d2) + (b ? 1 : 0)
                + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth() {

        double d1 = 39.57374;
        int i2 = -7, i3 = 238, i4 = 9472, i5 = 3054;
        byte by1 = 99;
        boolean b1 = false;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, 37.904F);

        d1 = 1;
        do {
            for (i2 = 1; i2 < 9; i2++) {
                fArr[(int) (d1 - 1)][(int) (d1 + 1)] *= -229;
                for (i4 = (int) (d1); 2 > i4; i4++) {
                    i3 -= (int) ((0.1721 - (i5--)) + ((Test0091.instanceCount / -29770) + (Test0091.instanceCount + i3)));
                    i5 -= (int) (--Test0091.dFld);
                    i3 += (Math.max(i3--, iMeth1(by1, i4)) % (i4 | 1));
                    try {
                        i3 = (i5 % i3);
                        i3 = (-9251 % i5);
                        i3 = (-3434 % i2);
                    } catch (ArithmeticException a_e) {
                    }
                    i5 <<= i5;
                    i5 = i3;
                }
                Test0091.iArrFld = Test0091.iArrFld;
                i5 += (i2 ^ i4);
                i5 = i3;
                b1 = true;
                if (i3 != 0) {
                }
            }
        } while (++d1 < 170);
        long meth_res = Double.doubleToLongBits(d1) + i2 + i3 + i4 + i5 + by1 + (b1 ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0091 _instance = new Test0091();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f = 108.332F;
        int i = -4, i13 = -60960, i14 = 16802, i15 = -64139;
        double d = -23.61474;
        byte by2 = -79;
        long l = 38547L;
        boolean b2 = true;

        f = i;
        d = 1;
        while (++d < 235) {
            i = (iMeth() * i);
            i -= (int) Math.abs(f);
            f -= lMeth();
            i13 = 1;
            do {
                i = i13;
                by2 <<= (byte) -40L;
                i /= (int) (i13 | 1);
                switch ((int) ((d % 3) + 84)) {
                    case 84:
                        i -= (int) Test0091.instanceCount;
                        i = i13;
                        Test0091.iArrFld[(int) (d - 1)] >>>= (int) l;
                        break;
                    case 85:
                        by2 >>= (byte) i13;
                        i += (i13 - sFld);
                        if (b2) continue;
                    case 86:
                        i *= i13;
                        i += (((i13 * i13) + i13) - l);
                        break;
                    default:
                        i *= i13;
                        i *= (int) l;
                        sFld = (short) -1;
                }
                i -= 10;
                sFld += (short) i13;
                Test0091.dFld += i;
                Test0091.dFld = Test0091.dFld;
                Test0091.iArrFld[(int) (d + 1)] %= (int) ((long) (f) | 1);
            } while (++i13 < 107);
            for (i14 = 2; 107 > i14; ++i14) {
                fArrFld[(int) (d - 1)] -= f;
                b2 = b2;
                sFld = (short) i13;
            }
        }

        FuzzerUtils.out.println("f i d = " + Float.floatToIntBits(f) + "," + i + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i13 by2 l = " + i13 + "," + by2 + "," + l);
        FuzzerUtils.out.println("b2 i14 i15 = " + (b2 ? 1 : 0) + "," + i14 + "," + i15);

        FuzzerUtils.out.println("Test0091.instanceCount Test0091.dFld sFld = " + Test0091.instanceCount + "," +
                Double.doubleToLongBits(Test0091.dFld) + "," + sFld);
        FuzzerUtils.out.println("Test0091.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test0091.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
