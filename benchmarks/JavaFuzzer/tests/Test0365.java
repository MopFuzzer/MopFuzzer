// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0365 {

    public static final int N = 400;

    public static long instanceCount = -28557L;
    public static float fFld = 2.996F;
    public static volatile double dFld = 106.125703;
    public static boolean bFld = true;
    public static volatile int iFld = -7;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0365.iArrFld, -45765);
    }

    public int iFld1 = 18401;
    public int iFld2 = -11184;

    public static long lMeth() {

        int i5 = 12, i6 = 0, i7 = -65028, i8 = -5104;
        double d = -1.89860;
        byte by = 16;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 1.27F);

        for (i5 = 6; i5 < 129; ++i5) {
            try {
                i6 = (i6 / -56);
                i6 = (Test0365.iArrFld[i5] / i6);
                i6 = (Test0365.iArrFld[i5 + 1] / -62814);
            } catch (ArithmeticException a_e) {
            }
            for (i7 = 1; i7 < 13; ++i7) {
                fArr[i7] += 0.418F;
                Test0365.fFld += -10;
                switch (((i5 % 2) * 5) + 35) {
                    case 39:
                        d -= Test0365.instanceCount;
                        break;
                    case 38:
                        by += (byte) (((i7 * Test0365.instanceCount) + i6) - i8);
                        break;
                    default:
                        Test0365.dFld = 156;
                        Test0365.instanceCount += i5;
                        by *= (byte) Test0365.instanceCount;
                }
                Test0365.bFld = Test0365.bFld;
                i8 += (10 + (i7 * i7));
                i6 += i7;
                Test0365.instanceCount %= ((long) (Test0365.dFld) | 1);
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + by +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth() {

        int i4 = -130, i9 = 10, i10 = -52331;
        float f = -50.189F;
        double d1 = -1.49953;
        byte by1 = 122;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, -2771797728L);

        i4 -= i4;
        f += i4;
        i4 = (int) lMeth();
        for (i9 = 268; i9 > 6; i9 -= 3) {
            Test0365.iFld ^= Test0365.iFld;
            d1 -= by1;
            lArr[i9 - 1][i9 - 1] += i9;
            i10 /= (int) (i9 | 1);
            if (Test0365.bFld) {
                i4 = i10;
                f += -100L;
                Test0365.instanceCount >>= Test0365.iFld;
                Test0365.iArrFld[i9 - 1] = (int) Test0365.fFld;
            }
            Test0365.iArrFld[i9 + 1] -= i4;
            by1 += (byte) f;
        }
        long meth_res = i4 + Float.floatToIntBits(f) + i9 + i10 + Double.doubleToLongBits(d1) + by1 +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(long l) {

        int i11 = 181;
        int i12 = 193;
        int i14 = 40920;
        int i15 = -9;
        int i16 = 4;
        int i17 = -244;
        int i18 = 12;
        int i19 = 4944;
        int[] iArr = new int[N];
        float f1 = -55.26F;
        short s = 29415;

        FuzzerUtils.init(iArr, -107);

        for (int i3 : iArr) {
            i3 *= (iArr[(i3 >>> 1) % N] - ((i3 * i3) + iMeth()));
        }
        Test0365.iFld -= 8837;
        for (i11 = 2; i11 < 176; i11++) {
            l -= Test0365.iFld;
            i12 = (int) Test0365.instanceCount;
            Test0365.iFld += (int) 1193409604L;
            Test0365.bFld = Test0365.bFld;
        }
        for (f1 = 22; 392 > f1; f1++) {
            for (i15 = 1; i15 < 5; ++i15) {
                for (i17 = (int) (f1); i17 < 2; i17++) {
                    l = i17;
                    iArr[i15] = s;
                    i19 = i14;
                }
                Test0365.fFld = 44914;
            }
        }
        vMeth_check_sum += l + i11 + i12 + Float.floatToIntBits(f1) + i14 + i15 + i16 + i17 + i18 + s + i19 +
                FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0365 _instance = new Test0365();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 3, i1 = -133, i2 = -94, i20 = 189, i21 = 43421, i22 = -102, i23 = 9, i24 = -56, i25 = 8, i26 = -59006;
        short s1 = 26085;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) -115);

        switch ((((((int) (Test0365.instanceCount - i)) >>> 1) % 2) * 5) + 28) {
            case 29:
                for (i1 = 12; i1 < 231; i1++) {
                    switch ((i1 % 1) + 103) {
                        case 103:
                            vMeth(Test0365.instanceCount);
                            Test0365.dFld *= i;
                            i2 -= (int) Test0365.instanceCount;
                            i20 = 1;
                            do {
                                Test0365.iFld += i20;
                                Test0365.iFld += i20;
                                try {
                                    Test0365.iArrFld[i1] = (i % Test0365.iArrFld[i20]);
                                    Test0365.iArrFld[i1 - 1] = (i1 / -35677);
                                    Test0365.iFld = (-61 % i20);
                                } catch (ArithmeticException a_e) {
                                }
                                i2 = i20;
                                i = (int) Test0365.instanceCount;
                                i += iFld1;
                            } while (++i20 < 115);
                            break;
                    }
                    for (i21 = 2; i21 < 115; i21++) {
                        for (i23 = 1; i23 < 2; ++i23) {
                            Test0365.iFld = (int) Test0365.instanceCount;
                            i24 -= i23;
                            Test0365.fFld += (((i23 * Test0365.iFld) + Test0365.instanceCount) - Test0365.fFld);
                            Test0365.iFld += (int) 1232839530L;
                            byArr = byArr;
                        }
                        for (i25 = 1; i25 < 2; i25++) {
                            i22 += (((i25 * i21) + Test0365.instanceCount) - i23);
                            i26 += (i25 | i);
                            Test0365.iFld = i26;
                            Test0365.fFld += s1;
                            Test0365.instanceCount += i25;
                            i2 <<= -87;
                        }
                        i26 -= (int) -89.579F;
                        Test0365.bFld = Test0365.bFld;
                        i24 += i1;
                    }
                }
                break;
            case 31:
                i24 -= iFld2;
            default:
                Test0365.iArrFld[(iFld2 >>> 1) % N] <<= i25;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 s1 byArr = " + i26 + "," + s1 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0365.instanceCount Test0365.fFld Test0365.dFld = " + Test0365.instanceCount + "," +
                Float.floatToIntBits(Test0365.fFld) + "," + Double.doubleToLongBits(Test0365.dFld));
        FuzzerUtils.out.println("Test0365.bFld Test0365.iFld iFld1 = " + (Test0365.bFld ? 1 : 0) + "," + Test0365.iFld + "," + iFld1);
        FuzzerUtils.out.println("iFld2 Test0365.iArrFld = " + iFld2 + "," + FuzzerUtils.checkSum(Test0365.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
