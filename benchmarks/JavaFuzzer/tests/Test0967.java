// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0967 {

    public static final int N = 400;

    public static long instanceCount = -73L;
    public static short sFld = 21358;
    public static int iFld = -50;
    public static volatile boolean bFld = false;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public int[][] iArrFld = new int[N][N];

    public static void vMeth2() {

        int i7 = -15293, i8 = -60204, i9 = -5, i10 = 82, i11 = -20, i12 = -250, i13 = -1;
        boolean b = true;
        long[][] lArr1 = new long[N][N];
        short[] sArr = new short[N];

        FuzzerUtils.init(lArr1, -157L);
        FuzzerUtils.init(sArr, (short) -27213);

        lArr1[(-11 >>> 1) % N] = lArr1[(-23917 >>> 1) % N];
        if (b) {
            i7 ^= i7;
        } else {
        }
        for (i8 = 4; i8 < 218; i8++) {
            Test0967.instanceCount += (59103 + (i8 * i8));
            for (i10 = 1; i10 < 8; i10 += 3) {
                Test0967.instanceCount += Test0967.sFld;
                Test0967.instanceCount += (19749 + (i10 * i10));
                if (b) break;
                for (i12 = 1; i12 < 4; ++i12) {
                    i7 >>= i13;
                    i13 = (int) Test0967.instanceCount;
                    i9 -= i11;
                    sArr[i10] = (short) i7;
                    b = true;
                }
            }
        }
        vMeth2_check_sum += i7 + (b ? 1 : 0) + i8 + i9 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(lArr1) +
                FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(int i4) {

        double d = -61.98932;
        int i5 = 0;
        int i14 = 147;
        int i15 = 11;
        int i16 = -233;
        int[] iArr = new int[N];
        float[] fArr = new float[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(fArr, 0.348F);
        FuzzerUtils.init(byArr, (byte) 123);

        for (d = 8; d < 355; d += 2) {
            vMeth2();
            Test0967.instanceCount = i4;
            i4 += -8148;
            i5 ^= i5;
            for (i14 = 1; 9 > i14; i14++) {
                i5 *= 1;
                i16 = 1;
                do {
                    i15 = 45206;
                    i4 += i16;
                    i5 += (((i16 * Test0967.instanceCount) + Test0967.instanceCount) - i14);
                    fArr = fArr;
                    byArr[(int) (d)] += (byte) -9;
                    Test0967.instanceCount = i5;
                    Test0967.iFld = (int) Test0967.instanceCount;
                } while (++i16 < 2);
            }
        }
        vMeth1_check_sum += i4 + Double.doubleToLongBits(d) + i5 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(byte by, float f1, float f2) {

        int i17 = -4013;
        int i18 = 10;
        int i19 = -18021;
        int i20 = -2;
        int i21 = 31673;
        int i22 = -10818;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, -233);

        vMeth1(Test0967.iFld);
        for (i17 = 215; i17 > 8; i17 -= 2) {
            boolean b1 = false;
            b1 = false;
            iArr1[i17 - 1] &= i17;
            for (i19 = 15; i19 > 1; --i19) {
                i20 = Test0967.iFld;
                Test0967.iFld *= (int) -1665103266L;
                Test0967.instanceCount -= i17;
                for (i21 = 1; i21 < 2; i21++) {
                    i20 <<= i21;
                    Test0967.iFld = i17;
                    i20 = i20;
                    i20 = i22;
                    iArr1[i21] *= (int) f1;
                }
                if (false) break;
            }
        }
        vMeth_check_sum += by + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i17 + i18 + i19 + i20 + i21 + i22
                + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0967 _instance = new Test0967();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 10, i1 = 8776, i2 = 5170, i3 = 167, i23 = -19784;
        float f = 2.618F;
        short s = 14854;
        short[] sArr1 = new short[N];
        byte by1 = 100;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 144L);
        FuzzerUtils.init(sArr1, (short) 16936);

        i -= (++iArrFld[(i >>> 1) % N][(i >>> 1) % N]);
        i = (int) (f + (i + (i * Test0967.instanceCount)));
        for (long l : lArr) {
            i1 = 1;
            do {
                i = Math.abs(-9937);
                s %= (short) ((-60 + ((l + s) - i1)) | 1);
                for (i2 = 1; i2 < 1; i2++) {
                    vMeth(by1, f, f);
                    switch ((i2 % 1) + 57) {
                        case 57:
                            try {
                                Test0967.iFld = (iArrFld[i1][i1 - 1] % i);
                                Test0967.iFld = (Test0967.iFld % 15886);
                                i3 = (i / -3084);
                            } catch (ArithmeticException a_e) {
                            }
                            if (Test0967.bFld) {
                                Test0967.iFld = (int) Test0967.instanceCount;
                            } else if (Test0967.bFld) {
                                l -= -22692;
                                Test0967.bFld = Test0967.bFld;
                                sArr1[i2] = (short) i;
                                iArrFld[i1][i1 + 1] -= (int) Test0967.instanceCount;
                            } else if (Test0967.bFld) {
                                iArrFld[i1 - 1][i1 - 1] += i;
                                Test0967.iFld += i2;
                                i -= (int) 1623152642L;
                            }
                            i3 = i1;
                            Test0967.iFld = i3;
                            break;
                    }
                    i3 += (i2 - i3);
                    Test0967.iFld %= (int) (i | 1);
                    lArr[i1 - 1] %= (i3 | 1);
                }
                i += (int) -166L;
                Test0967.iFld = -8;
                i3 *= by1;
                by1 += (byte) (i1 * i1);
                try {
                    i = (i23 / i1);
                    i = (i2 / i1);
                    i23 = (i2 / -960689448);
                } catch (ArithmeticException a_e) {
                }
            } while (++i1 < 63);
            i23 -= i2;
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("s i2 i3 = " + s + "," + i2 + "," + i3);
        FuzzerUtils.out.println("by1 i23 lArr = " + by1 + "," + i23 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("sArr1 = " + FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test0967.instanceCount Test0967.sFld Test0967.iFld = " + Test0967.instanceCount + "," + Test0967.sFld +
                "," + Test0967.iFld);
        FuzzerUtils.out.println("Test0967.bFld iArrFld = " + (Test0967.bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
