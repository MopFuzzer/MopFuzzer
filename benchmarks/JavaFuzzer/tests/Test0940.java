// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0940 {

    public static final int N = 400;

    public static volatile long instanceCount = -51524L;
    public static byte byFld = -10;
    public static short sFld = -6471;
    public static double dFld = 31.94821;
    public static long lFld = 3215185174L;
    public static float fFld = -93.899F;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0940.iArrFld, 33607);
        FuzzerUtils.init(Test0940.lArrFld, 0L);
    }

    public int iFld = -13;
    public boolean bFld = true;

    public static int iMeth1(int i8, boolean b, int i9) {

        long l = 3328436906288373945L;
        int i10 = 59714, i11 = 0, i12 = -5, i13 = 12, i14 = -195, i15 = 14932;
        float f2 = 0.709F;

        i9 ^= -62164;
        i9 -= (int) Test0940.instanceCount;
        l |= Test0940.byFld;
        for (long l1 : Test0940.lArrFld) {
            Test0940.sFld = (short) -13;
            i8 = i10;
        }
        for (i11 = 1; i11 < 225; ++i11) {
            i9 -= (int) f2;
            i13 = 1;
            while ((i13 += 3) < 7) {
                f2 *= (float) Test0940.dFld;
                if (i12 != 0) {
                }
                Test0940.iArrFld[i13 - 1] = -182;
                for (i14 = 1; i14 < 4; ++i14) {
                    i8 += i8;
                    i8 *= (int) Test0940.dFld;
                }
            }
        }
        long meth_res = i8 + (b ? 1 : 0) + i9 + l + i10 + i11 + i12 + Float.floatToIntBits(f2) + i13 + i14 + i15;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth(int i1, int i2) {

        int i3 = -14, i4 = 59617, i5 = -3, i6 = 9392, i7 = 0, i16 = -5, i17 = 55979;
        float f = 2.724F, f1 = 91.78F;

        i1 = i2;
        for (i3 = 7; i3 < 206; ++i3) {
            try {
                i4 = (528572082 % i1);
                i2 = (i1 % 204);
                i2 = (i3 % 25871);
            } catch (ArithmeticException a_e) {
            }
            for (i5 = 1; i5 < 8; ++i5) {
                i1 += (int) (2699815544825641350L + (i5 * i5));
            }
            for (f = 1; 8 > f; ++f) {
                try {
                    i2 = (-34700 / i1);
                    Test0940.iArrFld[i3] = (-1774305822 / i1);
                    Test0940.iArrFld[i3 - 1] = (Test0940.iArrFld[(int) (f)] % i7);
                } catch (ArithmeticException a_e) {
                }
                i4 += (int) (((f * i1) + f) - i6);
                f1 += (((i2 + 239L) * (f1 * 21640L)) + (i7 = (int) -3437117401L));
                i7 >>= -34;
                if ((i6--) > iMeth1(i6, true, i5)) break;
                i4 += (int) (f * f);
                for (i16 = 1; i16 < 2; i16++) {
                    i17 *= i1;
                }
                f1 += 13L;
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + Float.floatToIntBits(f1) + i16 +
                i17;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth() {

        int i = -13, i18 = 3, i19 = 147, i20 = 30643, i21 = -76, i22 = -11, i23 = 13, i24 = -56727, i25 = 2, i26 = -228;
        boolean b1 = false;

        i = (int) (lMeth(i, i) >> i);
        for (i18 = 18; 380 > i18; i18++) {
            for (i20 = i18; 5 > i20; i20++) {
                for (i22 = 1; i22 > 1; i22--) {
                    Test0940.dFld = 5;
                }
                Test0940.lArrFld[i18] = i19;
                switch (((i18 % 10) * 5) + 30) {
                    case 49:
                        Test0940.iArrFld[i20] += i19;
                        break;
                    case 34:
                        i19 >>= 16467;
                        break;
                    case 73:
                        for (i24 = 1; i24 < 1; i24++) {
                            Test0940.sFld -= (short) Test0940.instanceCount;
                            Test0940.iArrFld[i18 + 1] += i19;
                            b1 = false;
                            i += (i24 + i26);
                            Test0940.instanceCount -= 40157L;
                        }
                    case 46:
                        i21 |= i;
                        break;
                    case 56:
                    case 67:
                        i25 += (i20 * i19);
                    case 31:
                        i -= i24;
                        break;
                    case 39:
                        i23 += (i20 | i23);
                        break;
                    case 72:
                        Test0940.instanceCount -= i20;
                    case 33:
                        if (true) continue;
                        break;
                    default:
                        i26 -= (int) Test0940.lFld;
                }
            }
        }
        long meth_res = i + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + (b1 ? 1 : 0) + i26;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0940 _instance = new Test0940();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i27 = 174, i28 = 19535, i29 = 5, i30 = -8, i31 = 1, i32 = 111, i33 = -166, i34 = 4;
        long l2 = 180L;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, false);

        Test0940.iArrFld[(-5643 >>> 1) % N] *= (-(iMeth() - iFld));
        Test0940.lFld = iFld;
        iFld -= (int) Test0940.instanceCount;
        for (i27 = 14; i27 < 335; ++i27) {
            i29 = 1;
            do {
                Test0940.iArrFld[i27 + 1] += (int) Test0940.dFld;
                i30 = 1;
                do {
                    Test0940.lFld = i30;
                } while (++i30 < 1);
                i28 = 1;
                for (i31 = i29; i31 < 1; ++i31) {
                    i32 = i31;
                    Test0940.instanceCount >>= i28;
                    Test0940.instanceCount += (i31 * i31);
                    i28 = i31;
                    Test0940.instanceCount -= i27;
                    i28 += i28;
                }
            } while (++i29 < 78);
            bArr[i27 - 1] = bFld;
            i28 += (int) Test0940.lFld;
            switch (((iFld >>> 1) % 8) + 59) {
                case 59:
                    Test0940.instanceCount += 6;
                    i33 = 78;
                    while (--i33 > 0) {
                        iFld += (28658 + (i33 * i33));
                        for (l2 = 1; l2 < 1; l2++) {
                            i32 += (int) (((l2 * i27) + i29) - i29);
                            Test0940.sFld += (short) l2;
                            i32 += (int) l2;
                        }
                        Test0940.lFld += (long) Test0940.fFld;
                        i34 = (int) 0L;
                    }
                    Test0940.dFld *= i30;
                    i28 <<= 6;
                    break;
                case 60:
                    bArr = bArr;
                    break;
                case 61:
                    i28 -= i27;
                    break;
                case 62:
                    iFld *= i27;
                    break;
                case 63:
                    Test0940.iArrFld[i27 + 1] &= (int) l2;
                    break;
                case 64:
                    i34 += (int) 2.417F;
                    break;
                case 65:
                    Test0940.dFld = -37;
                    break;
                case 66:
                    Test0940.iArrFld[i27] &= 13;
                    break;
            }
        }

        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 l2 i34 = " + i33 + "," + l2 + "," + i34);
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0940.instanceCount Test0940.byFld Test0940.sFld = " + Test0940.instanceCount + "," + Test0940.byFld +
                "," + Test0940.sFld);
        FuzzerUtils.out.println("Test0940.dFld Test0940.lFld iFld = " + Double.doubleToLongBits(Test0940.dFld) + "," + Test0940.lFld +
                "," + iFld);
        FuzzerUtils.out.println("bFld Test0940.fFld Test0940.iArrFld = " + (bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0940.fFld) + "," + FuzzerUtils.checkSum(Test0940.iArrFld));
        FuzzerUtils.out.println("Test0940.lArrFld = " + FuzzerUtils.checkSum(Test0940.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
