// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0339 {

    public static final int N = 400;

    public static long instanceCount = -3020329109L;
    public static int iFld = -2;
    public static int iFld1 = -2752;
    public static double dFld = -38.82841;
    public static int[] iArrFld = new int[N];
    public static float[] fArrFld = new float[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0339.iArrFld, 80);
        FuzzerUtils.init(Test0339.fArrFld, -77.885F);
    }

    public boolean bFld = false;

    public static void vMeth2(short s1, int i6, int i7) {

        int i8 = 30402, i9 = 5, i10 = -199, i11 = 189, i12 = -1;
        double d = 0.24523;
        boolean b = false;

        i7 = (int) Test0339.instanceCount;
        for (i8 = 13; i8 < 292; ++i8) {
            for (i10 = 1; i10 < 6; ++i10) {
                s1 = s1;
                i6 += (i10 * i10);
                Test0339.iFld = (int) Test0339.instanceCount;
                d -= 81.100F;
                i9 = i7;
                Test0339.iFld += Test0339.iFld;
                Test0339.iArrFld[i8 + 1] = (int) Test0339.instanceCount;
            }
        }
        i12 = 211;
        do {
            if (b) {
                i9 *= i12;
                i6 = i9;
            } else if (b) {
                Test0339.iFld1 *= Test0339.iFld;
                vMeth2_check_sum += s1 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + (b ? 1 : 0);
                return;
            } else {
                i11 = -196;
            }
        } while (--i12 > 0);
        vMeth2_check_sum += s1 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + (b ? 1 : 0);
    }

    public static void vMeth1(int i5, long l) {

        short s2 = -1683;
        int i13 = -5, i14 = 1, i15 = 182, i16 = 34, i17 = -154, i18 = 5196, i19 = 58491;
        byte by = 115;

        vMeth2(s2, Test0339.iFld1, 41);
        Test0339.iFld = Test0339.iFld;
        for (i13 = 14; i13 < 390; i13++) {
            try {
                i5 = (48082 / Test0339.iFld1);
                Test0339.iArrFld[i13 - 1] = (i14 % Test0339.iFld1);
                Test0339.iFld1 = (Test0339.iFld % 1958221089);
            } catch (ArithmeticException a_e) {
            }
        }
        for (i15 = 15; 259 > i15; i15++) {
            i5 = (int) l;
            Test0339.iArrFld[i15] = Test0339.iFld;
            i5 >>= by;
            try {
                i16 = (i5 / -477589401);
                Test0339.iFld1 = (Test0339.iArrFld[i15 + 1] / i13);
                i14 = (-18210 % Test0339.iArrFld[i15 + 1]);
            } catch (ArithmeticException a_e) {
            }
            try {
                Test0339.iFld1 = (i14 / Test0339.iArrFld[i15 - 1]);
                i17 = (8233 / i17);
                i17 = (i5 / Test0339.iFld1);
            } catch (ArithmeticException a_e) {
            }
        }
        Test0339.iFld1 -= s2;
        for (i18 = 13; i18 < 320; i18++) {
            i19 += 97;
            s2 *= (short) i5;
            Test0339.fArrFld[i18 + 1] = -208;
        }
        vMeth1_check_sum += i5 + l + s2 + i13 + i14 + i15 + i16 + by + i17 + i18 + i19;
    }

    public static void vMeth(int i, short s) {

        int i1 = -5, i2 = 54027, i3 = -61091, i4 = 49450, i20 = -63, i21 = -14739, i22 = 46311;
        byte by1 = -101;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, 3L);

        for (i1 = 9; 312 > i1; i1++) {
            for (i3 = 1; 5 > i3; i3++) {
                i = (--i2);
                Test0339.iArrFld[(i4 >>> 1) % N] >>>= 101;
                vMeth1(Test0339.iFld1, 5726141217637326055L);
                switch (((i2 >>> 1) % 5) + 4) {
                    case 4:
                        i20 = 1;
                        do {
                            i4 += i20;
                            lArr[i3][i3] = i2;
                            Test0339.dFld = Test0339.instanceCount;
                            i4 <<= by1;
                            Test0339.instanceCount <<= -14522;
                        } while (++i20 < 2);
                        for (i21 = 1; i21 < 2; i21++) {
                            i = (int) Test0339.instanceCount;
                            Test0339.instanceCount <<= Test0339.instanceCount;
                        }
                        break;
                    case 5:
                        i2 = 156;
                    case 6:
                        i |= (int) 2950930047026253085L;
                    case 7:
                        Test0339.iArrFld[i3 - 1] += i22;
                        break;
                    case 8:
                        Test0339.iFld1 += (((i3 * by1) + by1) - Test0339.instanceCount);
                        break;
                    default:
                        lArr[i1 + 1] = lArr[i3];
                }
            }
        }
        vMeth_check_sum += i + s + i1 + i2 + i3 + i4 + i20 + by1 + i21 + i22 + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0339 _instance = new Test0339();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        short s3 = -23313;
        double d1 = -24.84290;
        int i23 = -32973, i24 = 139, i25 = 41261, i26 = -173, i27 = -3, i28 = 50886, i29 = -13;
        float f = -2.859F;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 2920578371L);

        Test0339.iFld >>= (--Test0339.iFld);
        Test0339.iFld *= (--Test0339.iFld);
        vMeth(Test0339.iFld, s3);
        Test0339.iFld1 &= Test0339.iFld1;
        for (d1 = 10; d1 < 209; d1++) {
            Test0339.instanceCount = -192;
            lArr1[(int) (d1 - 1)] += Test0339.instanceCount;
            f /= (Test0339.instanceCount | 1);
            try {
                i23 = (-141 / Test0339.iFld);
                Test0339.iFld = (Test0339.iArrFld[(int) (d1)] / 57401);
                Test0339.iArrFld[(int) (d1)] = (588366591 % i23);
            } catch (ArithmeticException a_e) {
            }
            Test0339.iFld = Test0339.iFld1;
            Test0339.dFld += Test0339.iFld1;
            Test0339.instanceCount = -176;
            Test0339.iFld1 += Test0339.iFld;
        }
        Test0339.iFld -= -194;
        Test0339.instanceCount >>= -12;
        i23 -= s3;
        for (i24 = 4; 229 > i24; i24++) {
            f = i24;
            for (i26 = 4; i26 < 112; i26++) {
                Test0339.iFld = i25;
                for (i28 = 1; i28 < 2; i28++) {
                    i23 += (((i28 * Test0339.instanceCount) + Test0339.instanceCount) - i23);
                    i23 = i23;
                    bFld = bFld;
                    Test0339.iFld1 += 15;
                    i23 = Test0339.iFld1;
                }
                Test0339.instanceCount -= i28;
                if (false) break;
                i29 *= (int) f;
                Test0339.iArrFld[i24] >>= 4;
            }
        }

        FuzzerUtils.out.println("s3 d1 i23 = " + s3 + "," + Double.doubleToLongBits(d1) + "," + i23);
        FuzzerUtils.out.println("f i24 i25 = " + Float.floatToIntBits(f) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 lArr1 = " + i29 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0339.instanceCount Test0339.iFld Test0339.iFld1 = " + Test0339.instanceCount + "," + Test0339.iFld +
                "," + Test0339.iFld1);
        FuzzerUtils.out.println("Test0339.dFld bFld Test0339.iArrFld = " + Double.doubleToLongBits(Test0339.dFld) + "," + (bFld ? 1
                : 0) + "," + FuzzerUtils.checkSum(Test0339.iArrFld));
        FuzzerUtils.out.println("Test0339.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0339.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
