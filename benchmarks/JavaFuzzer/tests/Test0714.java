// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0714 {

    public static final int N = 400;

    public static long instanceCount = 10L;
    public static double dFld = -4.60894;
    public static int iFld = 41993;
    public static int iFld1 = -34552;
    public static boolean bFld = false;
    public static byte[] byArrFld = new byte[N];
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0714.byArrFld, (byte) -102);
    }

    public long lFld = 14L;
    public volatile byte byFld = 116;
    public double[] dArrFld = new double[N];

    public static void vMeth1(int i1) {

        int i2 = -35969;
        int i4 = -22325;
        int[] iArr3 = new int[N];
        float f3 = -100.719F, f4 = 0.153F;

        FuzzerUtils.init(iArr3, 14);

        Test0714.iFld = Test0714.iFld;
        i2 = 1;
        do {
            f3 = Test0714.iFld;
            Test0714.byArrFld = Test0714.byArrFld;
            Test0714.instanceCount += i2;
            i1 += 11;
            for (f4 = 1; f4 < 4; ++f4) {
                i4 += (int) f4;
                Test0714.iFld = 204;
                f3 += f4;
                Test0714.iFld += (int) (((f4 * Test0714.iFld1) + Test0714.instanceCount) - i4);
                iArr3[(int) (f4 - 1)] = i4;
                Test0714.iFld1 -= Test0714.iFld1;
            }
            f3 %= -7685;
            if (Test0714.bFld) break;
        } while (++i2 < 396);
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) + i4 +
                FuzzerUtils.checkSum(iArr3);
    }

    public static void vMeth() {

        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, -56098);

        Test0714.iFld -= Test0714.iFld;
        Test0714.iFld += (--iArr2[(Test0714.iFld >>> 1) % N]);
        vMeth1(Test0714.iFld);
        vMeth_check_sum += FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0714 _instance = new Test0714();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public byte byMeth(float f1) {

        float f2 = -2.1F;
        float[] fArr = new float[N];
        int i = 131;
        int i5 = -35366;
        int i6 = -10;
        int[][] iArr1 = new int[N][N];
        byte by = -117;
        long l = -161L;
        short s = 9908;

        FuzzerUtils.init(fArr, -2.498F);
        FuzzerUtils.init(iArr1, 12);

        Test0714.iFld = (int) (++fArr[(Test0714.iFld >>> 1) % N]);
        for (f2 = 7; f2 < 186; ++f2) {
            Test0714.iFld = (int) (f1++);
            lFld -= (long) (iArr1[(int) (f2)][(int) (f2 - 1)] + ((f2 - f1) + (i - Test0714.instanceCount)));
            Test0714.iFld += by;
            vMeth();
            l = 1;
            do {
                fArr[(int) (f2 - 1)] *= i;
                try {
                    i5 = (Test0714.iFld / Test0714.iFld);
                    i5 = (iArr1[(int) (f2 + 1)][(int) (f2 + 1)] % 3103);
                    Test0714.iFld = (iArr1[(9 >>> 1) % N][(int) (l)] % 16695);
                } catch (ArithmeticException a_e) {
                }
                i6 = 1;
                do {
                    Test0714.iFld += (i6 * i6);
                    Test0714.dFld = s;
                    Test0714.instanceCount += (-43779 + (i6 * i6));
                    Test0714.dFld -= Test0714.iFld1;
                    Test0714.iFld1 += (int) l;
                } while (++i6 < 1);
            } while (++l < 9);
        }
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i + by + l + i5 + i6 + s +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b = true;
        float f = -2.157F;
        int i7 = 35245;
        int i8 = 4;
        int i9 = 38849;
        int i10 = 126;
        int i11 = 13;
        int[] iArr = new int[N];
        double d = 0.78167;
        short s1 = 13276;

        FuzzerUtils.init(iArr, -1);

        Test0714.dFld *= iArr[(Test0714.iFld >>> 1) % N];
        b = (((183 / (((long) (f * f)) | 1)) >= (Test0714.instanceCount - Test0714.iFld)) | b);
        Test0714.iFld -= ((--iArr[(12 >>> 1) % N]) - byMeth(-1.953F));
        Test0714.iFld = Test0714.iFld1;
        for (i7 = 349; i7 > 3; --i7) {
            dArrFld[i7 - 1] += Test0714.iFld1;
            for (i9 = 4; i9 < 73; ++i9) {
                i8 += (i9 * i7);
                Test0714.iFld1 = i10;
            }
            Test0714.iFld1 <<= i10;
            i10 -= i7;
            dArrFld[i7 - 1] = byFld;
            Test0714.iFld -= i8;
            switch ((((52 >>> 1) % 5) * 5) + 127) {
                case 152:
                    Test0714.dFld += Test0714.iFld1;
                    i11 = 1;
                    do {
                        Test0714.iFld1 -= Test0714.iFld1;
                        iArr[i11] -= (int) Test0714.dFld;
                        iArr[i11] = Test0714.iFld;
                        switch (((i11 % 1) * 5) + 57) {
                            case 61:
                                d = 1;
                                do {
                                    i8 = (int) Test0714.instanceCount;
                                    if (true) {
                                        f *= 44547;
                                    }
                                    Test0714.iFld1 += (int) (((d * Test0714.iFld) + i7) - lFld);
                                    iArr[i7 + 1] -= i7;
                                    Test0714.iFld *= i11;
                                    b = b;
                                    i8 -= i8;
                                    b = false;
                                } while (--d > 0);
                                break;
                        }
                    } while (++i11 < 73);
                case 136:
                    Test0714.iFld1 += (i7 * lFld);
                case 144:
                    i10 += (i7 + s1);
                    break;
                case 131:
                    lFld *= Test0714.instanceCount;
                    break;
                case 139:
                    i8 += i11;
                    break;
            }
        }

        FuzzerUtils.out.println("b f i7 = " + (b ? 1 : 0) + "," + Float.floatToIntBits(f) + "," + i7);
        FuzzerUtils.out.println("i8 i9 i10 = " + i8 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 d s1 = " + i11 + "," + Double.doubleToLongBits(d) + "," + s1);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0714.instanceCount Test0714.dFld Test0714.iFld = " + Test0714.instanceCount + "," +
                Double.doubleToLongBits(Test0714.dFld) + "," + Test0714.iFld);
        FuzzerUtils.out.println("lFld Test0714.iFld1 Test0714.bFld = " + lFld + "," + Test0714.iFld1 + "," + (Test0714.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test0714.byArrFld dArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0714.byArrFld) +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
