// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0210 {

    public static final int N = 400;

    public static long instanceCount = -1922608284795130744L;
    public static int iFld = -234;
    public static short sFld = 25538;
    public static volatile float fFld = 28.988F;
    public static int iFld2 = 0;
    public static long[] lArrFld = new long[N];
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0210.lArrFld, -15228L);
    }

    public int iFld1 = 253;

    public static void vMeth1(int i3, long l) {

        int i4 = -1;
        int i5 = -149;
        int i6 = -12;
        int[][] iArr = new int[N][N];
        float f2 = -2.199F;
        double d1 = -1.96962;
        short s = -26546;
        boolean b = false;

        FuzzerUtils.init(iArr, 19092);

        Test0210.lArrFld[(i3 >>> 1) % N] = i3;
        i3 -= i3;
        i4 = 1;
        do {
            Test0210.instanceCount = i4;
            for (i5 = 1; i5 < 10; i5++) {
                l -= (long) f2;
                i3 *= (int) d1;
                i6 -= (int) 56551L;
                iArr = iArr;
                l += (((i5 * i6) + s) - i4);
                i6 = i6;
                l += (((i5 * i5) + i6) - l);
                i6 <<= i5;
                if (b) continue;
            }
            i6 += (int) f2;
        } while (++i4 < 152);
        vMeth1_check_sum += i3 + l + i4 + i5 + i6 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + s + (b ? 1
                : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i7 = -175, i8 = -63745, i9 = -7, i10 = 0, i11 = -88, i12 = 11, i13 = -14;
        byte by1 = 125;
        double d2 = 60.42172;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 119.710F);

        vMeth1(Test0210.iFld, Test0210.instanceCount);
        for (i7 = 4; i7 < 160; ++i7) {
            i8 = i8;
            i9 = 1;
            do {
                for (i10 = 1; i10 < 1; ++i10) {
                    by1 = (byte) i9;
                    i8 >>= i10;
                    if (Test0210.iFld != 0) {
                        vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + by1 + Double.doubleToLongBits(d2) + i12 + i13 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                }
                Test0210.sFld = (short) i10;
            } while (++i9 < 10);
            if (i7 != 0) {
                vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + by1 + Double.doubleToLongBits(d2) + i12 + i13 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            Test0210.iFld -= (int) d2;
            for (i12 = 1; i12 < 10; ++i12) {
                d2 += i12;
                Test0210.fFld -= i12;
                Test0210.fFld += Test0210.instanceCount;
            }
        }
        vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + by1 + Double.doubleToLongBits(d2) + i12 + i13 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static double dMeth() {

        int i2 = -11;
        int i14 = 13;
        int i15 = -228;
        int i16 = -9959;
        int i17 = -72;
        int i18 = -8;
        int i19 = 14;
        int i20 = -252;
        int i21 = 1876;
        int[] iArr1 = new int[N];
        float f1 = 2.18F;
        double d = 42.105371;
        double d3 = -28.2790;
        double[] dArr = new double[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(dArr, 1.119833);
        FuzzerUtils.init(lArr, 223778321123694561L);
        FuzzerUtils.init(iArr1, 185);

        Test0210.instanceCount = (long) ((i2--) - f1);
        dArr[(-52 >>> 1) % N] = (((d - -50643) * lArr[(i2 >>> 1) % N]) * ((i2 * i2) + i2));
        vMeth();
        Test0210.iFld += Test0210.iFld;
        for (i14 = 5; i14 < 371; i14++) {
            i16 *= (int) Test0210.instanceCount;
            for (d3 = 5; d3 > 1; d3 -= 2) {
                iArr1 = iArr1;
                iArr1[(int) (d3 - 1)] = (int) -10L;
            }
            i17 += (-13472 + (i14 * i14));
            Test0210.iFld -= (int) f1;
            for (i18 = 1; i18 < 5; i18++) {
                for (i20 = 1; 2 > i20; i20++) {
                    iArr1[i20] = (int) Test0210.instanceCount;
                }
                Test0210.fFld = i15;
            }
        }
        long meth_res = i2 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i14 + i15 + i16 +
                Double.doubleToLongBits(d3) + i17 + i18 + i19 + i20 + i21 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0210 _instance = new Test0210();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 14849;
        int i1 = 4;
        int i22 = 72;
        int i23 = 11120;
        int i24 = -31044;
        int i25 = -51434;
        int i26 = -57460;
        int i27 = -4169;
        int i28 = 7;
        int i29 = 4;
        int[] iArr2 = new
                int[N];
        byte by = -103;
        float f = 2.227F;
        boolean b1 = true;
        double d4 = 59.101744;
        double[] dArr1 = new double[N];

        FuzzerUtils.init(iArr2, -10);
        FuzzerUtils.init(dArr1, -1.14736);

        for (i = 23; i < 378; i++) {
            by = (byte) (-((i1 - f) - (i1 + i1)));
            Test0210.instanceCount += (long) dMeth();
            Test0210.iFld = (int) -226L;
            Test0210.sFld = (short) i;
        }
        Test0210.iFld <<= Test0210.iFld;
        iArr2[(Test0210.iFld >>> 1) % N] <<= Test0210.iFld;
        Test0210.iFld -= (int) Test0210.instanceCount;
        for (i22 = 8; i22 < 159; ++i22) {
            if (b1) break;
            by |= (byte) i1;
            Test0210.iFld >>= (int) Test0210.instanceCount;
            d4 += Test0210.instanceCount;
            iFld1 += (i22 - Test0210.instanceCount);
        }
        i24 = (int) Test0210.instanceCount;
        i25 = 136;
        while (--i25 > 0) {
            i26 = 184;
            while (--i26 > 0) {
                Test0210.instanceCount += (i26 | Test0210.iFld2);
                i23 += 26181;
                d4 += Test0210.iFld;
            }
        }
        i1 -= (int) Test0210.fFld;
        Test0210.lArrFld[(iFld1 >>> 1) % N] -= (long) Test0210.fFld;
        for (i27 = 20; i27 < 336; i27++) {
            i24 >>>= 249;
            if (false) break;
        }
        i29 = 1;
        do {
            Test0210.instanceCount = i27;
            Test0210.instanceCount *= Test0210.iFld;
            Test0210.instanceCount = Test0210.iFld2;
            dArr1[i29] /= (i28 | 1);
        } while (++i29 < 259);

        FuzzerUtils.out.println("i i1 by = " + i + "," + i1 + "," + by);
        FuzzerUtils.out.println("f i22 i23 = " + Float.floatToIntBits(f) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("b1 d4 i24 = " + (b1 ? 1 : 0) + "," + Double.doubleToLongBits(d4) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 iArr2 = " + i28 + "," + i29 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0210.instanceCount Test0210.iFld Test0210.sFld = " + Test0210.instanceCount + "," + Test0210.iFld +
                "," + Test0210.sFld);
        FuzzerUtils.out.println("Test0210.fFld iFld1 Test0210.iFld2 = " + Float.floatToIntBits(Test0210.fFld) + "," + iFld1 + "," +
                Test0210.iFld2);
        FuzzerUtils.out.println("Test0210.lArrFld = " + FuzzerUtils.checkSum(Test0210.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
