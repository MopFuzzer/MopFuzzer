// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test0861 {

    public static final int N = 400;

    public static long instanceCount = -1L;
    public static byte byFld = 107;
    public static volatile short sFld = -21505;
    public static long lFld = -25795L;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public int iFld = -59631;
    public boolean bFld = false;
    public volatile float fFld = 125.470F;

    public static byte byMeth(short s, int i6, int i7) {

        double d = -1.63437;
        int[][] iArr = new int[N][N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr, -13);
        FuzzerUtils.init(lArr1, 22534L);

        d *= 30924;
        d -= i7;
        iArr[(i6 >>> 1) % N][(i6 >>> 1) % N] += Test0861.byFld;
        lArr1[(i7 >>> 1) % N] >>= i7;
        s = (short) i7;
        long meth_res = s + i6 + i7 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(lArr1);
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static void vMeth1() {

        int i4 = 50702;
        int i5 = -29108;
        int i8 = -15741;
        int i9 = 179;
        int[] iArr1 = new int[N];
        float f = 36.642F;
        long[] lArr = new long[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(lArr, -59585L);
        FuzzerUtils.init(iArr1, -11);
        FuzzerUtils.init(byArr, (byte) -91);

        for (i4 = 13; i4 < 394; i4++) {
            lArr[i4 + 1] += (long) 101.21017;
            if (((long) (Float.intBitsToFloat(12) + (i5 + i5)) >> ((i5 << 144) - i4)) <= ((i5 * byMeth(Test0861.sFld, 49029,
                    i4)) + i4)) continue;
            Test0861.instanceCount = -19;
            i5 >>= Test0861.sFld;
            iArr1[i4 + 1] = i5;
            f %= (i4 | 1);
            lArr[i4] += -41556;
        }
        lArr[(i5 >>> 1) % N] >>= i4;
        Test0861.instanceCount = Test0861.instanceCount;
        Test0861.sFld += (short) i4;
        i5 += i5;
        for (i8 = 13; i8 < 345; i8 += 3) {
            iArr1[(i4 >>> 1) % N] -= i5;
        }
        vMeth1_check_sum += i4 + i5 + Float.floatToIntBits(f) + i8 + i9 + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth() {

        int i2 = -35017;
        int i3 = -159;
        int i10 = 35097;
        int i11 = -12;
        int i12 = 14;
        int i13 = 3;
        int i14 = 41;
        int[] iArr2 = new int[N];
        double d1 = -18.122931;

        FuzzerUtils.init(iArr2, 46160);

        for (i2 = 4; i2 < 258; ++i2) {
            vMeth1();
        }
        for (i10 = 6; i10 < 179; i10++) {
            for (i12 = 9; i12 > 1; i12--) {
                i3 = i13;
                iArr2[i12] = i2;
            }
            i11 *= -145;
            i14 = 9;
            do {
                if (i14 != 0) {
                    vMeth_check_sum += i2 + i3 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) +
                            FuzzerUtils.checkSum(iArr2);
                    return;
                }
                i3 = (int) Test0861.instanceCount;
                i13 = i11;
                d1 = 1;
                do {
                    i11 = (int) Test0861.instanceCount;
                    i3 *= (int) Test0861.instanceCount;
                    Test0861.instanceCount = i13;
                } while (++d1 < 1);
            } while (--i14 > 0);
        }
        vMeth_check_sum += i2 + i3 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) +
                FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0861 _instance = new Test0861();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -27827, i1 = 58263, i15 = 15756, i16 = -3, i17 = 40245, i18 = 177;
        double d2 = -5.129117, d3 = 122.14896, d4 = -123.2089;
        float f1 = 85.44F, f2 = -2.479F;
        long l = 2L;
        long[] lArr2 = new long[N];

        FuzzerUtils.init(lArr2, -136L);

        i = 1;
        do {
            iFld *= (-iFld);
            i1 = 1;
            while (++i1 < 91) {
                vMeth();
                lArr2[i1] = i1;
                d2 %= (Test0861.instanceCount | 1);
                if (bFld) continue;
                for (d3 = 1; d3 < 1; d3++) {
                    lArr2[i - 1] = (long) fFld;
                    iFld = i;
                }
                f1 = 1;
                while (++f1 < 1) {
                    iFld = i1;
                }
                Test0861.instanceCount -= iFld;
                fFld *= Test0861.instanceCount;
                Test0861.sFld = (short) i1;
            }
            for (d4 = 1; d4 < 91; ++d4) {
                i15 = (int) Test0861.instanceCount;
                iFld = i1;
                Test0861.instanceCount += (long) (((d4 * Test0861.sFld) + i1) - i);
                for (l = 1; l < 2; ++l) {
                    fFld += (((l * Test0861.byFld) + iFld) - i1);
                    lArr2[i + 1] = 0;
                }
                Test0861.instanceCount += (long) (((d4 * iFld) + Test0861.byFld) - i16);
            }
            if (bFld) {
                for (f2 = 3; f2 < 91; ++f2) {
                    i16 = i15;
                }
                Test0861.instanceCount += (((i * i18) + i18) - i16);
                Test0861.lFld += (i - Test0861.byFld);
                i15 = i;
            } else {
                i17 = i17;
            }
        } while (++i < 277);

        FuzzerUtils.out.println("i i1 d2 = " + i + "," + i1 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("d3 i15 f1 = " + Double.doubleToLongBits(d3) + "," + i15 + "," +
                Float.floatToIntBits(f1));
        FuzzerUtils.out.println("d4 i16 l = " + Double.doubleToLongBits(d4) + "," + i16 + "," + l);
        FuzzerUtils.out.println("i17 f2 i18 = " + i17 + "," + Float.floatToIntBits(f2) + "," + i18);
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0861.instanceCount iFld Test0861.byFld = " + Test0861.instanceCount + "," + iFld + "," +
                Test0861.byFld);
        FuzzerUtils.out.println("Test0861.sFld bFld fFld = " + Test0861.sFld + "," + (bFld ? 1 : 0) + "," +
                Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0861.lFld = " + Test0861.lFld);

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
