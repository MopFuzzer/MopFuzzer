// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test0174 {

    public static final int N = 400;

    public static long instanceCount = -30880L;
    public static double dFld = -2.62759;
    public static int iFld = -14;
    public static boolean bFld = false;
    public static volatile byte[] byArrFld = new byte[N];
    public static int[] iArrFld = new int[N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0174.byArrFld, (byte) 71);
        FuzzerUtils.init(Test0174.iArrFld, 77);
    }

    public float fFld = -113.16F;
    public long[] lArrFld = new long[N];
    public float[] fArrFld = new float[N];
    public short[] sArrFld = new short[N];

    public static void vMeth1(int i8) {

        short s = 22410;
        int i9 = 17818;
        int i10 = 0;
        int[] iArr = new int[N];
        boolean b1 = false;
        boolean[] bArr = new boolean[N];
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, 1254271291423672423L);
        FuzzerUtils.init(iArr, 6);
        FuzzerUtils.init(bArr, false);

        lArr[(i8 >>> 1) % N][(i8 >>> 1) % N] = i8;
        i8 *= 218;
        iArr[(-16184 >>> 1) % N] += s;
        for (i9 = 369; i9 > 6; i9--) {
            bArr[i9] = b1;
            i10 = i10;
            i8 = s;
            i8 ^= 40028;
            i8 = i10;
        }
        vMeth1_check_sum += i8 + s + i9 + i10 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr)
                + FuzzerUtils.checkSum(bArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0174 _instance = new Test0174();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(float f, int i6, int i7) {

        int i11 = 25456, i12 = 64525, i13 = -98, i14 = -18133, i15 = 63019;

        i6 += (int) ((Test0174.instanceCount + Test0174.dFld) - ((++lArrFld[(i7 >>> 1) % N]) - (i6 + Test0174.instanceCount)));
        vMeth1(-7731);
        Test0174.dFld *= -7;
        for (i11 = 13; i11 < 359; i11++) {
            if (true) break;
            if (false) break;
            i12 += (i11 * i11);
            for (i13 = 1; i13 < 5; i13++) {
                Test0174.iArrFld[i13 + 1] = (int) Test0174.instanceCount;
                i12 += (148 + (i13 * i13));
                i14 *= -30100;
            }
        }
        fArrFld[(i6 >>> 1) % N] -= Test0174.instanceCount;
        i15 = 1;
        while (++i15 < 277) {
            Test0174.iArrFld[i15] -= (int) 8284L;
            Test0174.byArrFld[i15] = (byte) i11;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i6 + i7 + i11 + i12 + i13 + i14 + i15;
    }

    public long lMeth() {

        boolean b = true;
        int i5 = -172;
        int i16 = -9;
        int i17 = -7;
        int i18 = 99;
        int i19 = -14;
        int i20 = -12047;
        int i21 = 16802;
        int[] iArr1 = new int[N];
        float f1 = -1.579F;
        short s1 = 23963;

        FuzzerUtils.init(iArr1, 180);

        b = ((i5++) <= (i5 + (Test0174.dFld - i5)));
        vMeth(f1, i5, i5);
        for (i16 = 3; i16 < 368; i16++) {
            switch (((-241 >>> 1) % 2) + 29) {
                case 29:
                    i5 -= i17;
                    for (i18 = 1; i18 < 5; ++i18) {
                        i17 += i18;
                        lArrFld[i18] += (long) f1;
                        s1 += (short) Test0174.instanceCount;
                        i17 &= i5;
                        try {
                            i17 = (Test0174.iArrFld[i18 - 1] % 1529898117);
                            i19 = (i16 % -114);
                            i5 = (131 % i18);
                        } catch (ArithmeticException a_e) {
                        }
                        switch (((i16 >>> 1) % 2) + 11) {
                            case 11:
                                for (i20 = 1; i20 < 2; i20++) {
                                    i21 |= (int) -7232386968372572203L;
                                    try {
                                        Test0174.iArrFld[i20 - 1] = (i20 % 211);
                                        i19 = (-56039 % i21);
                                        iArr1[i16 - 1] = (-3741 % i21);
                                    } catch (ArithmeticException a_e) {
                                    }
                                }
                            case 12:
                                Test0174.dFld += i5;
                                break;
                            default:
                                i19 -= i20;
                        }
                    }
                    break;
                case 30:
                    if (b) break;
                    break;
            }
        }
        long meth_res = (b ? 1 : 0) + i5 + Float.floatToIntBits(f1) + i16 + i17 + i18 + i19 + s1 + i20 + i21 +
                FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d = 105.115567;
        int i = -39624, i1 = 7, i2 = -83, i3 = -17470, i4 = -49360, i22 = -2;
        short s2 = 23404;
        byte by = -95;

        Test0174.byArrFld = (Test0174.byArrFld = (Test0174.byArrFld = (Test0174.byArrFld = Test0174.byArrFld)));
        d = (55 - Test0174.instanceCount);
        for (i = 381; 1 < i; --i) {
            switch ((i % 2) + 25) {
                case 25:
                    i1 *= (int) ((Test0174.instanceCount >>= (i1 + -114)) + (--i1));
                    for (i2 = i; i2 < 66; ++i2) {
                        i3 *= (int) Test0174.instanceCount;
                        i4 = 1;
                        while (++i4 < 1) {
                            i3 *= i4;
                            i1 += (int) lArrFld[i4];
                            d += lArrFld[i4];
                        }
                        i3 = (int) (((207 * lMeth()) + i) / (i2 | 1));
                        i22 = 1;
                        while (++i22 < 1) {
                            Test0174.instanceCount += (long) fFld;
                            if (Test0174.bFld) {
                                i3 &= (int) Test0174.instanceCount;
                                i3 <<= s2;
                                i1 += (int) fFld;
                                Test0174.iFld = -9;
                            } else {
                                Test0174.iFld += Test0174.iFld;
                                i3 = Test0174.iFld;
                                Test0174.iArrFld = Test0174.iArrFld;
                                i3 = by;
                            }
                            d = d;
                            Test0174.instanceCount *= -3125546083L;
                        }
                        Test0174.instanceCount += (i2 + Test0174.instanceCount);
                        sArrFld[i2 + 1] += (short) 122;
                        if (Test0174.bFld) break;
                        by += (byte) (i2 * i2);
                        Test0174.iArrFld = Test0174.iArrFld;
                    }
                case 26:
                    Test0174.iFld -= -26744;
                    break;
                default:
                    i1 -= -209;
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i22 s2 by = " + i22 + "," + s2 + "," + by);

        FuzzerUtils.out.println("Test0174.instanceCount Test0174.dFld fFld = " + Test0174.instanceCount + "," +
                Double.doubleToLongBits(Test0174.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0174.iFld Test0174.bFld Test0174.byArrFld = " + Test0174.iFld + "," + (Test0174.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0174.byArrFld));
        FuzzerUtils.out.println("lArrFld Test0174.iArrFld fArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(Test0174.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("sArrFld = " + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
