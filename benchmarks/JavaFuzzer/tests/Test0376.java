// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0376 {

    public static final int N = 400;

    public static long instanceCount = -168L;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0376.fArrFld, 0.700F);
        FuzzerUtils.init(Test0376.iArrFld, -5);
    }

    public double dFld = -1.9215;
    public volatile short sFld = 16132;

    public static void vMeth1(double d) {

        long l = -6L;
        long[] lArr = new long[N];
        int i2 = -215;
        int i3 = 9;
        int i4 = 14;
        int i5 = -17243;
        int i6 = -26438;
        int[] iArr1 = new int[N];
        boolean b = true;
        byte by = -72;
        double[] dArr = new double[N];

        FuzzerUtils.init(lArr, 14169L);
        FuzzerUtils.init(dArr, 1.102600);
        FuzzerUtils.init(iArr1, 3612);

        for (l = 231; l > 3; l -= 3) {
            if (false) break;
            dArr[(int) (l + 1)] *= i2;
            for (i3 = 20; i3 > 1; i3 -= 2) {
                if (b) continue;
                Test0376.instanceCount += i2;
                for (i5 = 1; 3 > i5; i5++) {
                    i2 += (i5 * i5);
                    i2 = i5;
                    if (i6 != 0) {
                        vMeth1_check_sum += Double.doubleToLongBits(d) + l + i2 + i3 + i4 + (b ? 1 : 0) + i5 + i6 + by
                                + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                                FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    iArr1 = iArr1;
                    by += (byte) (i5 + i4);
                    iArr1[i3] >>= i3;
                    b = b;
                    i2 = i5;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + l + i2 + i3 + i4 + (b ? 1 : 0) + i5 + i6 + by +
                FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i1, float f) {

        int i7 = 46, i8 = 32590, i9 = 11, i10 = 127, i11 = -147, i12 = -5;
        short s = 30686;
        boolean b1 = true;
        double d1 = 111.109541;
        byte by1 = 46;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 6L);

        vMeth1(90.15914);
        for (i7 = 9; i7 < 289; ++i7) {
            i8 += i7;
            for (i9 = 1; i9 < 6; ++i9) {
                i8 -= i9;
                s += (short) Test0376.instanceCount;
                switch (((i10 >>> 1) % 1) + 13) {
                    case 13:
                        switch ((i7 % 1) + 14) {
                            case 14:
                                i10 = i10;
                                switch ((i9 % 3) + 1) {
                                    case 1:
                                    case 2:
                                        f *= 249;
                                        for (i11 = 1; i11 < 2; i11++) {
                                            if (b1) continue;
                                            f *= i1;
                                            lArr1[i9] = (long) d1;
                                        }
                                        break;
                                    case 3:
                                        Test0376.instanceCount += (i9 * i9);
                                        break;
                                }
                                break;
                            default:
                                by1 += (byte) (i9 | i7);
                        }
                        break;
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + s + i11 + i12 + (b1 ? 1 : 0) +
                Double.doubleToLongBits(d1) + by1 + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0376 _instance = new Test0376();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        int i = 29206;
        int i13 = 211;
        int i14 = -6;
        int i15 = -12;
        int[] iArr = new int[N];
        float f1 = 48.950F;
        long l2 = 2584899283L;
        double d2 = 0.18573;
        short s1 = -3863;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr, 15712);
        FuzzerUtils.init(byArr, (byte) 62);

        iArr[(i >>> 1) % N] = (int) lMeth(17626, f1);
        for (i13 = 4; i13 < 145; i13++) {
            l2 = 1;
            do {
                for (d2 = i13; d2 < 1; d2++) {
                    i14 = (int) Test0376.instanceCount;
                    i14 = (int) d2;
                    i15 -= i;
                    byArr[(int) (d2 + 1)] >>= (byte) i14;
                    dFld += dFld;
                    Test0376.fArrFld[i13] = i;
                    if (false) continue;
                }
                Test0376.instanceCount += (((l2 * i) + s1) - i15);
                if (i15 != 0) {
                    vMeth_check_sum += i + Float.floatToIntBits(f1) + i13 + i14 + l2 + Double.doubleToLongBits(d2) +
                            i15 + s1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
                    return;
                }
                iArr[i13 + 1] >>= i15;
                if (false) continue;
            } while (++l2 < 11);
        }
        vMeth_check_sum += i + Float.floatToIntBits(f1) + i13 + i14 + l2 + Double.doubleToLongBits(d2) + i15 + s1 +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i16 = -214, i17 = -178, i18 = -70, i19 = -12954, i20 = -17434, i21 = 56342, i22 = 1, i23 = 48187, i24 = -56334, i25 = -48478;
        byte by2 = 96;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 14146);

        vMeth();
        dFld += Test0376.instanceCount;
        sFld *= (short) i16;
        by2 = (byte) 0;
        for (i17 = 1; 241 > i17; i17++) {
            dFld *= i18;
            Test0376.instanceCount >>= i18;
            i16 >>= (int) Test0376.instanceCount;
            i16 = sFld;
            sArr = sArr;
            for (i19 = 1; 105 > i19; ++i19) {
                i18 = (int) Test0376.instanceCount;
                for (i21 = i17; i21 < 2; i21++) {
                    i22 = (int) -11L;
                    Test0376.instanceCount = i16;
                    try {
                        i16 = (i17 % i20);
                        i22 = (215 % i19);
                        i18 = (i20 % i20);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0376.instanceCount = i16;
                }
                i23 = 1;
                while (++i23 < 2) {
                    Test0376.fArrFld = Test0376.fArrFld;
                    Test0376.instanceCount = i17;
                }
            }
            i24 = 1;
            do {
                i16 -= i19;
                switch (((i24 % 2) * 5) + 16) {
                    case 24:
                        i20 = i22;
                        i25 = 1;
                        while (++i25 < 1) {
                            i18 -= (int) Test0376.instanceCount;
                            i16 += (((i25 * Test0376.instanceCount) + i24) - i18);
                            Test0376.instanceCount = i19;
                            i22 = i25;
                            Test0376.iArrFld[i24 - 1] -= 0;
                        }
                        break;
                    case 19:
                        try {
                            i16 = (Test0376.iArrFld[i24 - 1] / i25);
                            Test0376.iArrFld[i17 + 1] = (760463344 % Test0376.iArrFld[i24 - 1]);
                            i16 = (i19 / i21);
                        } catch (ArithmeticException a_e) {
                        }
                }
            } while (++i24 < 105);
        }

        FuzzerUtils.out.println("i16 by2 i17 = " + i16 + "," + by2 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 sArr = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0376.instanceCount dFld sFld = " + Test0376.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + sFld);
        FuzzerUtils.out.println("Test0376.fArrFld Test0376.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0376.fArrFld)) + "," + FuzzerUtils.checkSum(Test0376.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
