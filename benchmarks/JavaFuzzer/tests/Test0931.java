// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0931 {

    public static final int N = 400;

    public static long instanceCount = 2896402137L;
    public static float fFld = 90.246F;
    public static short sFld = -1096;
    public static double dFld = -45.119158;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0931.iArrFld, -28022);
    }

    public boolean bFld = false;
    public long lFld = -1L;

    public static void vMeth1(long l1, long l2) {

        int i7 = -132;
        int i8 = 226;
        int i9 = -4;
        int i10 = 178;
        int i11 = -231;
        int[] iArr = new int[N];
        double d = -89.5402;
        boolean b1 = false;

        FuzzerUtils.init(iArr, 59803);

        for (i7 = 13; i7 < 398; ++i7) {
            i8 *= (int) d;
            if (i7 != 0) {
                vMeth1_check_sum += l1 + l2 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + (b1 ? 1 : 0) +
                        FuzzerUtils.checkSum(iArr);
                return;
            }
            l1 = Test0931.instanceCount;
            for (i9 = 1; i9 < 4; ++i9) {
                try {
                    i10 = (-948543479 % i8);
                    iArr[i9] = (iArr[i7] / 251);
                    i8 = (154 % i9);
                } catch (ArithmeticException a_e) {
                }
                i11 = 2;
                do {
                    float f = -87.331F;
                    i10 |= i11;
                    switch (((i7 % 1) * 5) + 58) {
                        case 59:
                            f *= Test0931.instanceCount;
                            i10 += (i11 ^ l2);
                            i8 ^= (int) l1;
                            if (b1) break;
                            break;
                    }
                    i8 = 103;
                } while ((i11 -= 3) > 0);
                l1 = i9;
            }
        }
        vMeth1_check_sum += l1 + l2 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + (b1 ? 1 : 0) +
                FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        boolean b = true;
        int i5 = 11, i6 = 35751, i12 = 231, i13 = 36;
        byte by = -42;
        double d1 = 75.45219;

        b = (i5 != -46565);
        i6 = 1;
        while (++i6 < 267) {
            if (i5 != 0) {
            }
            vMeth1(Test0931.instanceCount, Test0931.instanceCount);
            by >>= (byte) i6;
            Test0931.fFld = (float) d1;
            i5 -= -205;
            for (i12 = i6; i12 < 6; i12++) {
                Test0931.instanceCount &= i12;
                Test0931.instanceCount = Test0931.instanceCount;
                i13 += (i12 - Test0931.instanceCount);
                i13 -= i13;
                Test0931.instanceCount = i6;
                i5 = i13;
                Test0931.instanceCount |= Test0931.sFld;
            }
        }
        long meth_res = (b ? 1 : 0) + i5 + i6 + by + Double.doubleToLongBits(d1) + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i4, long l) {

        int i14 = -24977, i15 = 5, i16 = 12071, i17 = 6, i18 = -110, i19 = -52234, i20 = 9;
        boolean b2 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -7619657033474852829L);

        iMeth();
        for (i14 = 19; i14 < 370; ++i14) {
            i16 = 1;
            while (++i16 < 5) {
                Test0931.instanceCount ^= l;
            }
            try {
                i15 = (i4 % Test0931.iArrFld[i14 - 1]);
                i4 = (i15 % -237);
                i15 = (Test0931.iArrFld[i14] / Test0931.iArrFld[i14]);
            } catch (ArithmeticException a_e) {
            }
            if (b2) {
                Test0931.iArrFld[i14 - 1] -= -244;
                if (i4 != 0) {
                    vMeth_check_sum += i4 + l + i14 + i15 + i16 + i17 + i18 + i19 + i20 + (b2 ? 1 : 0) +
                            FuzzerUtils.checkSum(lArr);
                    return;
                }
                Test0931.dFld += 6;
                vMeth_check_sum += i4 + l + i14 + i15 + i16 + i17 + i18 + i19 + i20 + (b2 ? 1 : 0) +
                        FuzzerUtils.checkSum(lArr);
                return;
            } else if (true) {
                for (i17 = 1; i17 < 5; ++i17) {
                    Test0931.iArrFld[i17] = i14;
                    for (i19 = 1; i19 < 2; i19++) {
                        Test0931.iArrFld[i19 - 1] = 58306;
                        i15 -= 194;
                        lArr[i19] += i18;
                    }
                }
            } else {
                i4 &= i16;
            }
        }
        vMeth_check_sum += i4 + l + i14 + i15 + i16 + i17 + i18 + i19 + i20 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0931 _instance = new Test0931();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -90, i1 = 254, i2 = 15114, i3 = -9894, i21 = 12, i22 = 7793, i23 = -79;
        long l3 = -4L;
        long[] lArr1 = new long[N];
        boolean[][] bArr = new boolean[N][N];

        FuzzerUtils.init(lArr1, -2535793423110173292L);
        FuzzerUtils.init(bArr, false);

        for (i = 12; 242 > i; ++i) {
            for (i2 = i; i2 < 109; i2++) {
                vMeth(i, Test0931.instanceCount);
                lArr1 = FuzzerUtils.long1array(N, (long) 12L);
                if (bFld) continue;
            }
            lArr1[i + 1] -= i;
            i1 >>= i3;
            l3 = 1;
            do {
                i3 += (34998 + (l3 * l3));
                i3 += (int) Test0931.dFld;
                i3 <<= (int) Test0931.instanceCount;
                switch ((int) ((l3 % 4) + 83)) {
                    case 83:
                        Test0931.instanceCount += (l3 + i3);
                    case 84:
                        i3 = (int) Test0931.instanceCount;
                        i21 = 1;
                        while (--i21 > 0) {
                            bArr = FuzzerUtils.boolean2array(N, (boolean) true);
                            lArr1[(int) (l3)] = Test0931.instanceCount;
                        }
                        i1 <<= i21;
                    case 85:
                        Test0931.instanceCount += (l3 * l3);
                        i22 = 1;
                        while ((i22 += 2) < 1) {
                            Test0931.instanceCount = Test0931.instanceCount;
                        }
                        try {
                            i3 = (i3 % 351707947);
                            Test0931.iArrFld[(int) (l3)] = (i % -13332);
                            i3 = (-201 % i2);
                        } catch (ArithmeticException a_e) {
                        }
                        i3 += (int) (l3 * l3);
                        break;
                    case 86:
                        lArr1[i] *= i3;
                        i23 = 1;
                        while (++i23 < 1) {
                            Test0931.iArrFld[i23] *= i21;
                            i3 += (((i23 * i1) + i1) - Test0931.instanceCount);
                            Test0931.instanceCount = i23;
                            i1 = -3;
                            i3 = (int) lFld;
                        }
                        break;
                    default:
                        i3 -= (int) Test0931.instanceCount;
                }
            } while (++l3 < 109);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 l3 i21 = " + i3 + "," + l3 + "," + i21);
        FuzzerUtils.out.println("i22 i23 lArr1 = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0931.instanceCount Test0931.fFld Test0931.sFld = " + Test0931.instanceCount + "," +
                Float.floatToIntBits(Test0931.fFld) + "," + Test0931.sFld);
        FuzzerUtils.out.println("Test0931.dFld bFld lFld = " + Double.doubleToLongBits(Test0931.dFld) + "," + (bFld ? 1 : 0) +
                "," + lFld);
        FuzzerUtils.out.println("Test0931.iArrFld = " + FuzzerUtils.checkSum(Test0931.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
