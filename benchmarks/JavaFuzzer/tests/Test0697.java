// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0697 {

    public static final int N = 400;

    public static volatile long instanceCount = 150L;
    public static short sFld = 27196;
    public static long lFld = -2058463856572265098L;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0697.iArrFld, -27);
        FuzzerUtils.init(Test0697.lArrFld, 8450L);
    }

    public boolean bFld = true;
    public byte byFld = 9;

    public static int iMeth(int i4, int i5, int i6) {

        int i7 = -6, i8 = 4690, i9 = 0, i10 = -8, i11 = 248, i12 = 9, i13 = 13433;
        double d = -1.45850;
        float f = 43.170F;

        i4 ^= Test0697.sFld;
        for (i7 = 13; i7 < 266; ++i7) {
            i9 = 6;
            while (--i9 > 0) {
                for (i10 = 1; i10 < 1; ++i10) {
                    Test0697.instanceCount += -120L;
                    d += Test0697.instanceCount;
                    i5 = i4;
                    Test0697.instanceCount += (long) f;
                }
                for (i12 = 1; i12 < 1; ++i12) {
                    Test0697.iArrFld = Test0697.iArrFld;
                    Test0697.instanceCount = i12;
                    i5 += 22570;
                    i13 >>>= i6;
                    i8 = Test0697.sFld;
                    i13 = i4;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + Float.floatToIntBits(f)
                + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static short sMeth(int i2, int i3) {

        int i15 = -9;
        int i16 = -16321;
        int[][] iArr = new int[N][N];
        float f1 = 98.756F;
        long[] lArr = new long[N];
        short[] sArr = new short[N];

        FuzzerUtils.init(iArr, 150);
        FuzzerUtils.init(lArr, -22665L);
        FuzzerUtils.init(sArr, (short) -14102);

        Test0697.sFld <<= (short) Math.min(Integer.reverseBytes(Math.min(i3, i2)), iArr[(i3 >>> 1) % N][(i3 >>> 1) % N]++);
        lArr[(i3 >>> 1) % N] = iMeth(i3, i2, i2);
        for (int i14 : Test0697.iArrFld) {
            Test0697.instanceCount &= 26622;
            i3 += i3;
            switch (((-9 >>> 1) % 9) + 28) {
                case 28:
                    Test0697.instanceCount <<= i3;
                    sArr[(i2 >>> 1) % N] <<= (short) i2;
                    iArr[(11 >>> 1) % N][(i14 >>> 1) % N] <<= i2;
                    break;
                case 29:
                    for (i15 = 1; i15 < 4; ++i15) {
                        Test0697.instanceCount -= i15;
                        f1 -= f1;
                        iArr[i15 + 1][i15] = (int) 33L;
                        i3 += (1 + (i15 * i15));
                        i16 += (int) Test0697.instanceCount;
                    }
                    break;
                case 30:
                    i16 = i2;
                    break;
                case 31:
                    i3 = i2;
                    break;
                case 32:
                    Test0697.instanceCount -= i2;
                    break;
                case 33:
                    lArr[(10 >>> 1) % N] += 13L;
                    break;
                case 34:
                    Test0697.iArrFld[(i16 >>> 1) % N] = (int) Test0697.instanceCount;
                    break;
                case 35:
                    iArr[(i2 >>> 1) % N][(i14 >>> 1) % N] |= i14;
                    break;
                case 36:
                    f1 = i3;
                    break;
            }
        }
        long meth_res = i2 + i3 + i15 + i16 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void vMeth() {

        int i = -12, i1 = 51663, i17 = -6, i18 = -38412, i19 = 5740;
        byte by = 10;
        float[] fArr = new float[N];
        short[] sArr1 = new short[N];

        FuzzerUtils.init(fArr, 1.605F);
        FuzzerUtils.init(sArr1, (short) 5256);

        for (i = 2; 384 > i; i += 3) {
            fArr[i + 1] -= ((i1 *= (int) (i1 - Test0697.instanceCount)) * ((i1++) + sMeth(i, i1)));
            for (i17 = 12; i17 > i; i17 -= 3) {
                Test0697.instanceCount += i17;
                sArr1[i] += (short) -12515L;
                i1 += (i17 * i1);
            }
            Test0697.lFld += i18;
            i19 = 1;
            do {
                i1 += i;
                i1 += i19;
                Test0697.iArrFld[i - 1] = (int) 113.727F;
                by = (byte) i19;
                i1 = (int) Test0697.lFld;
                i18 |= i17;
                Test0697.lArrFld[(i >>> 1) % N] = 8L;
            } while (++i19 < 12);
        }
        vMeth_check_sum += i + i1 + i17 + i18 + i19 + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                FuzzerUtils.checkSum(sArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0697 _instance = new Test0697();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = 248, i21 = 8, i22 = -59322, i23 = 12, i24 = -68, i25 = -173, i26 = 64, i27 = -196, i28 = 54;
        long l1 = -7L;
        double d1 = 2.63891;
        float f2 = -81.626F;
        float[] fArr1 = new float[N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr1, 1.660F);

        vMeth();
        i20 = 1;
        do {
            bArr[i20] = bFld;
            for (i21 = i20; i21 < 101; i21++) {
                for (i23 = 1; i23 > i20; i23 -= 2) {
                    Test0697.instanceCount += i24;
                }
                for (i25 = 1; i25 < 1; i25++) {
                    bFld = bFld;
                    byFld -= (byte) i21;
                    Test0697.instanceCount += l1;
                    l1 -= i26;
                }
                i26 += (int) d1;
                i24 = 25398;
                for (i27 = i21; i27 < 1; i27++) {
                    if (bFld) continue;
                    i22 = i22;
                    l1 = i26;
                    switch ((i20 % 10) + 82) {
                        case 82:
                            Test0697.lFld = l1;
                            i26 += i20;
                            i24 += (int) Test0697.instanceCount;
                        case 83:
                            i24 += (i27 - i22);
                            i28 -= (int) f2;
                            break;
                        case 84:
                            bFld = bFld;
                            i26 = byFld;
                            break;
                        case 85:
                            i22 <<= 34102;
                            Test0697.iArrFld[i20 + 1] = (int) 4632803917319362135L;
                            i26 -= -10;
                            i28 = i27;
                        case 86:
                            fArr1[i27 + 1] -= 72.738F;
                        case 87:
                            i26 = i25;
                            break;
                        case 88:
                            Test0697.instanceCount = (long) f2;
                            break;
                        case 89:
                            f2 += (i27 * i27);
                            break;
                        case 90:
                            Test0697.instanceCount = i25;
                            break;
                        case 91:
                            i24 += (int) Test0697.lFld;
                            break;
                        default:
                            i24 ^= (int) -139L;
                    }
                }
            }
        } while (++i20 < 248);

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 l1 d1 = " + i26 + "," + l1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i27 i28 f2 = " + i27 + "," + i28 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("bArr fArr1 = " + FuzzerUtils.checkSum(bArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0697.instanceCount Test0697.sFld Test0697.lFld = " + Test0697.instanceCount + "," + Test0697.sFld +
                "," + Test0697.lFld);
        FuzzerUtils.out.println("bFld byFld Test0697.iArrFld = " + (bFld ? 1 : 0) + "," + byFld + "," +
                FuzzerUtils.checkSum(Test0697.iArrFld));
        FuzzerUtils.out.println("Test0697.lArrFld = " + FuzzerUtils.checkSum(Test0697.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
