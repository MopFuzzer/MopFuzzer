// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test0114 {

    public static final int N = 400;

    public static long instanceCount = -12L;
    public static byte byFld = 18;
    public static short sFld = 30532;
    public static double[] dArrFld = new double[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0114.dArrFld, 1.121348);
        FuzzerUtils.init(Test0114.iArrFld, -8);
    }

    public boolean bFld = true;

    public static void vMeth1() {

        int i3 = -6;
        int i4 = 55001;
        int i5 = 189;
        int i6 = 139;
        int i7 = 2;
        int[] iArr = new int[N];
        double d = -18.87704;
        boolean b = true;

        FuzzerUtils.init(iArr, -12);

        Test0114.instanceCount = 243;
        for (i3 = 11; i3 < 376; ++i3) {
            iArr[i3 - 1] += i4;
            i4 += -10;
            i5 = 1;
            while (++i5 < 5) {
                Test0114.instanceCount -= i5;
                Test0114.dArrFld = Test0114.dArrFld;
                if (i4 != 0) {
                    vMeth1_check_sum += i3 + i4 + i5 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i6 + i7 +
                            FuzzerUtils.checkSum(iArr);
                    return;
                }
                d -= i5;
                if (b) continue;
                i4 -= i5;
            }
            for (i6 = 1; i6 < 5; i6++) {
                i4 += (((i6 * i3) + i7) - i3);
                Test0114.byFld += (byte) i6;
                i4 += (i6 * i6);
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i6 + i7 +
                FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i2) {

        byte by = -25;
        float f = -1.372F;
        long l2 = -8L;
        int i8 = 8, i9 = 8, i10 = -9, i11 = 92, i12 = -208;
        double d1 = -72.2521;

        Test0114.instanceCount = (long) ((by = (byte) (i2 * -32188L)) + ((1.976F - (i2++)) - (i2 * i2)));
        f = ((i2++) * (Test0114.instanceCount - i2));
        vMeth1();
        i2 += i2;
        i2 = i2;
        for (l2 = 1; l2 < 267; l2++) {
            i2 = i9;
            for (i10 = (int) (l2); i10 < 6; ++i10) {
                Test0114.instanceCount <<= i12;
                Test0114.instanceCount -= (long) d1;
                i8 <<= i12;
                i11 -= i2;
                Test0114.instanceCount = 14;
                f += i11;
                d1 -= i8;
            }
        }
        long meth_res = i2 + by + Float.floatToIntBits(f) + l2 + i8 + i9 + i10 + i11 + i12 +
                Double.doubleToLongBits(d1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i1, long l, long l1) {

        double d2 = 52.7332;
        int i13 = 44929, i14 = -1, i15 = 7, i16 = 0;
        float f1 = 119.655F;
        boolean b1 = true;

        i1 -= (int) (Test0114.instanceCount++);
        i1 += Math.abs((int) (lMeth(i1) - i1));
        i1 += (int) d2;
        for (i13 = 7; 125 > i13; ++i13) {
            f1 -= i1;
            i14 += i13;
            i1 <<= (int) Test0114.instanceCount;
            i15 = 1;
            while (++i15 < 13) {
                l = (long) f1;
                Test0114.sFld += (short) i13;
                i14 += i15;
                i16 = 1;
                do {
                    b1 = b1;
                    d2 = 0;
                    d2 = l;
                } while (++i16 < 1);
            }
        }
        vMeth_check_sum += i1 + l + l1 + Double.doubleToLongBits(d2) + i13 + i14 + Float.floatToIntBits(f1) + i15 + i16
                + (b1 ? 1 : 0);
    }

    public static void main(String[] strArr) {

        try {
            Test0114 _instance = new Test0114();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -106, i17 = 229, i19 = -161, i20 = 5, i21 = 131, i22 = -13803, i23 = -63, i24 = -7, i25 = -210;
        float f2 = 30.760F;
        float f3 = 2.379F;
        float[] fArr = new float[N];
        double d3 = 14.127735;

        FuzzerUtils.init(fArr, 49.334F);

        i *= (int) (++fArr[(i >>> 1) % N]);
        vMeth(i, Test0114.instanceCount, Test0114.instanceCount);
        i += i;
        i += (int) 67L;
        Test0114.instanceCount = i;
        i = i;
        for (f2 = 14; 332 > f2; ++f2) {
            if (bFld) {
                i17 = (int) f2;
                i17 = (int) f2;
                switch ((int) ((f2 % 4) + 101)) {
                    case 101:
                        for (i19 = 2; i19 < 79; i19 += 2) {
                            try {
                                i20 = (i % 74);
                                Test0114.iArrFld[(int) (f2)] = (i20 % 538049681);
                                i20 = (i20 % i20);
                            } catch (ArithmeticException a_e) {
                            }
                            i17 += 54190;
                            for (i21 = 3; i21 > 1; i21 -= 2) {
                                if (bFld) continue;
                            }
                            f3 += (i19 * i21);
                            i22 = Test0114.sFld;
                            i = i22;
                            i += i19;
                        }
                        i23 = 1;
                        do {
                            for (i24 = 1; i24 < 1; i24++) {
                                f3 *= 87.43F;
                                if (false) continue;
                                i22 -= (int) Test0114.instanceCount;
                                Test0114.byFld >>= (byte) 1207747946L;
                                Test0114.iArrFld[(int) (f2 + 1)] = (int) 34476L;
                                if (bFld) continue;
                                bFld = bFld;
                                Test0114.instanceCount -= Test0114.sFld;
                            }
                        } while (++i23 < 79);
                        break;
                    case 102:
                        f3 += f2;
                        break;
                    case 103:
                        Test0114.instanceCount <<= i20;
                        break;
                    case 104:
                        Test0114.instanceCount += (long) d3;
                        break;
                    default:
                        Test0114.instanceCount *= 6167;
                }
            }
        }

        FuzzerUtils.out.println("i f2 i17 = " + i + "," + Float.floatToIntBits(f2) + "," + i17);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 f3 i23 = " + i22 + "," + Float.floatToIntBits(f3) + "," + i23);
        FuzzerUtils.out.println("i24 i25 d3 = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0114.instanceCount Test0114.byFld Test0114.sFld = " + Test0114.instanceCount + "," + Test0114.byFld +
                "," + Test0114.sFld);
        FuzzerUtils.out.println("bFld Test0114.dArrFld Test0114.iArrFld = " + (bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0114.dArrFld)) + "," + FuzzerUtils.checkSum(Test0114.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
