// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0393 {

    public static final int N = 400;

    public static long instanceCount = -28L;
    public static int iFld = 10;
    public static double dFld = -64.33456;
    public static volatile double dFld1 = 92.97822;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0393.iArrFld, 148);
    }

    public volatile boolean bFld = false;
    public short sFld = -26487;

    public static void vMeth() {

        byte by = -41;
        int i = -13;

        by &= (byte) (++i);
        vMeth_check_sum += by + i;
    }

    public static void vMeth1(long l, long l1, int i5) {

        short s1 = 30958;

        i5 ^= i5;
        s1 = (short) (--i5);
        vMeth1_check_sum += l + l1 + i5 + s1;
    }

    public static int iMeth1(long l2, int i7) {

        int i8 = 0;

        i8 = 1;
        do {
            Test0393.instanceCount += (((i8 * i8) + i8) - i7);
        } while ((i8 += 2) < 350);
        long meth_res = l2 + i7 + i8;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(float f, double d) {

        int i6 = -1, i9 = -62267, i10 = -53011, i11 = -241;
        double d1 = 0.99747;
        double[] dArr = new double[N];
        byte by1 = 23;
        long[] lArr = new long[N];

        FuzzerUtils.init(dArr, -1.7625);
        FuzzerUtils.init(lArr, 204L);

        switch ((((i6++) >>> 1) % 3) + 104) {
            case 104:
                i6 = iMeth1(Test0393.instanceCount, i6);
                break;
            case 105:
                for (i9 = 8; 297 > i9; ++i9) {
                    dArr[i9 + 1] -= i6;
                    for (d1 = 1; d1 < 6; d1++) {
                        short s2 = 26714;
                        i11 += i9;
                        i10 += (int) d1;
                        switch (((i6 >>> 1) % 10) + 124) {
                            case 124:
                                lArr[(int) (d1)] <<= i10;
                                i10 -= (int) -37.390F;
                                i6 = 1;
                                d += i10;
                            case 125:
                                i11 = i10;
                                Test0393.iArrFld[(int) (d1 + 1)] = i6;
                                lArr[(int) (d1 + 1)] += Test0393.iFld;
                                break;
                            case 126:
                                i10 &= i10;
                                break;
                            case 127:
                                i10 += (int) d1;
                                break;
                            case 128:
                                d += s2;
                                break;
                            case 129:
                                i11 += by1;
                                break;
                            case 130:
                                Test0393.instanceCount = -15010;
                                break;
                            case 131:
                                Test0393.iArrFld[(int) (d1 - 1)] -= (int) -91L;
                                break;
                            case 132:
                                f += i10;
                                break;
                            case 133:
                                if (i6 != 0) {
                                }
                                break;
                            default:
                                Test0393.iArrFld[i9] <<= 7;
                        }
                    }
                }
                break;
            case 106:
                Test0393.iArrFld[(i10 >>> 1) % N] = i9;
                break;
            default:
                i6 -= i11;
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + i9 + i10 +
                Double.doubleToLongBits(d1) + i11 + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0393 _instance = new Test0393();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public long lMeth(int i3, short s, boolean b) {

        int i4 = -1;
        int i13 = 0;
        int i14 = -14;
        int[][] iArr = new int[N][N];
        float f1 = 15.668F;
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr, 36);
        FuzzerUtils.init(fArr, -98.372F);

        iArr[(i3 >>> 1) % N][(i3 >>> 1) % N] *= (int) (((fArr[(i3 >>> 1) % N]++) - -181) - (++i3));
        b = b;
        i4 = 1;
        while (++i4 < 301) {
            vMeth1((Math.min(i3, i4) + iMeth(f1, Test0393.dFld)) - Test0393.instanceCount, Test0393.instanceCount, i3);
            i13 = 5;
            while ((i13 -= 2) > 0) {
                long l4 = 107L;
                Test0393.instanceCount >>= l4;
                i3 += (i13 - i13);
                Test0393.iFld = (int) Test0393.instanceCount;
                Test0393.dFld1 += -5529787657974256173L;
                i14 = 1;
                do {
                    byte by2 = -54;
                    by2 = (byte) i4;
                    i3 += (i14 | i3);
                    Test0393.iFld += (i14 - Test0393.instanceCount);
                } while (++i14 < 2);
                Test0393.iArrFld[i4] = 11;
            }
            Test0393.instanceCount += (i4 * i3);
        }
        long meth_res = i3 + s + (b ? 1 : 0) + i4 + Float.floatToIntBits(f1) + i13 + i14 + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i1 = 22370, i2 = 40851, i15 = 223, i16 = -29367;
        float f2 = 0.867F;
        float f3 = 90.895F;
        float[][] fArr1 = new float[N][N];
        long[] lArr1 = new long[N];
        double[] dArr1 = new double[N];

        FuzzerUtils.init(lArr1, -377968998L);
        FuzzerUtils.init(fArr1, -80.915F);
        FuzzerUtils.init(dArr1, 0.7284);

        vMeth();
        for (i1 = 10; i1 < 331; ++i1) {
            lMeth(-47, (short) (26358), bFld);
            i15 = 1;
            while (++i15 < 78) {
                Test0393.iFld += 36592;
                i16 = 1;
                while (--i16 > 0) {
                    if (bFld) break;
                    Test0393.iFld = i2;
                    switch ((i15 % 6) * 5) {
                        case 10:
                            Test0393.iFld += (int) Test0393.instanceCount;
                            Test0393.iFld += (i16 - i1);
                            i2 -= (int) 468764788988936393L;
                            if (bFld) continue;
                            break;
                        case 16:
                            i2 = Test0393.iFld;
                            i2 += (((i16 * Test0393.iFld) + i2) - i1);
                            Test0393.instanceCount += (((i16 * f2) + i15) - i15);
                            Test0393.iArrFld[i1] = -137;
                            break;
                        case 30:
                            Test0393.iFld = (int) 4117723034L;
                            f2 -= sFld;
                            if (bFld) break;
                            break;
                        case 3:
                            i2 -= i2;
                            i2 += (((i16 * f2) + Test0393.iFld) - i16);
                            i2 += (int) Test0393.instanceCount;
                            lArr1[i15] -= Test0393.iFld;
                            break;
                        case 26:
                            switch ((((i2 >>> 1) % 1) * 5) + 99) {
                                case 102:
                                    i2 = i1;
                                    i2 += (i16 ^ (long) f2);
                                    fArr1[i15][i16 - 1] += 0.57F;
                                    break;
                                default:
                                    f3 = -151;
                                    Test0393.instanceCount += i1;
                            }
                        case 14:
                            dArr1[i1 + 1] *= Test0393.iFld;
                            break;
                        default:
                            Test0393.iArrFld[i1] *= (int) -69L;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i1 i2 i15 = " + i1 + "," + i2 + "," + i15);
        FuzzerUtils.out.println("i16 f2 f3 = " + i16 + "," + Float.floatToIntBits(f2) + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("lArr1 fArr1 dArr1 = " + FuzzerUtils.checkSum(lArr1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0393.instanceCount Test0393.iFld Test0393.dFld = " + Test0393.instanceCount + "," + Test0393.iFld +
                "," + Double.doubleToLongBits(Test0393.dFld));
        FuzzerUtils.out.println("Test0393.dFld1 bFld sFld = " + Double.doubleToLongBits(Test0393.dFld1) + "," + (bFld ? 1 : 0)
                + "," + sFld);
        FuzzerUtils.out.println("Test0393.iArrFld = " + FuzzerUtils.checkSum(Test0393.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
