// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0299 {

    public static final int N = 400;

    public static long instanceCount = -7744079198324992824L;
    public static double dFld = -2.126217;
    public static boolean bFld = true;
    public static float fFld = -125.919F;
    public static volatile int iFld = 2;
    public static volatile byte byFld = 116;
    public static volatile int[] iArrFld = new int[N];
    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0299.iArrFld, -40939);
    }

    public static void vMeth1() {

        int i3 = 8;
        int i4 = 47030;
        int i5 = -39;
        int i6 = -6;
        int i7 = -163;
        int i8 = -9;
        int[] iArr = new int[N];
        float f1 = 2.683F;
        short s = 16075;
        boolean b1 = true;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 8240);
        FuzzerUtils.init(lArr, 3987367914095071486L);

        i3 = 1;
        do {
            f1 *= s;
            if (b1) {
                f1 *= Test0299.instanceCount;
                for (i4 = 1; i4 < 7; ++i4) {
                    i5 -= (int) Test0299.instanceCount;
                    s += (short) (((i4 * i4) + Test0299.instanceCount) - i6);
                    i6 -= (int) 881779436L;
                    for (i7 = 1; i7 < 2; ++i7) {
                        if (true) {
                            Test0299.dFld = Test0299.instanceCount;
                            f1 = Test0299.instanceCount;
                            iArr[i3 - 1] *= (int) Test0299.dFld;
                        }
                        lArr[i7] -= i5;
                        Test0299.instanceCount >>>= 203;
                    }
                }
            }
        } while (++i3 < 216);
        vMeth1_check_sum += i3 + Float.floatToIntBits(f1) + s + i4 + i5 + i6 + i7 + i8 + (b1 ? 1 : 0) +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i2, byte by) {

        int i9 = -21454, i10 = -53881, i11 = -55034;
        long[][] lArr1 = new long[N][N];

        FuzzerUtils.init(lArr1, 1200629933L);

        vMeth1();
        i9 = 248;
        do {
            switch ((((8 >>> 1) % 2) * 5) + 27) {
                case 28:
                    if (Test0299.bFld) break;
                    for (i10 = 1; i10 < 7; ++i10) {
                        i2 += (14 + (i10 * i10));
                        i11 += (((i10 * Test0299.fFld) + i10) - Test0299.instanceCount);
                        i11 = i9;
                        Test0299.instanceCount -= i9;
                        lArr1[i9 - 1] = lArr1[i10 - 1];
                        if (i2 != 0) {
                            vMeth_check_sum += i2 + by + i9 + i10 + i11 + FuzzerUtils.checkSum(lArr1);
                            return;
                        }
                    }
                    break;
                case 37:
                    try {
                        i2 = (-28 % i11);
                        i11 = (i10 % i10);
                        Test0299.iArrFld[i9] = (i11 % 249);
                    } catch (ArithmeticException a_e) {
                    }
                    if (false) continue;
                    break;
                default:
                    Test0299.instanceCount -= Test0299.instanceCount;
            }
            Test0299.iFld -= -59599;
        } while (--i9 > 0);
        vMeth_check_sum += i2 + by + i9 + i10 + i11 + FuzzerUtils.checkSum(lArr1);
    }

    public static boolean bMeth(int i1) {

        int i12 = -32, i13 = -2, i14 = -15853, i15 = 44307, i16 = -18255, i17 = 208, i18 = 9, i19 = 2;

        vMeth(i1, Test0299.byFld);
        for (i12 = 8; i12 < 160; i12++) {
            Test0299.fFld = i13;
            Test0299.instanceCount = -2760949743989181626L;
        }
        for (i14 = 369; i14 > 15; --i14) {
            for (i16 = i14; i16 < 5; i16 += 2) {
                for (i18 = 1; i18 < 1; i18++) {
                    if (i16 != 0) {
                        return ((int) (i1 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19)) % 2 > 0;
                    }
                    i15 *= (int) 3595370892246517134L;
                    i13 += Test0299.iFld;
                    i1 += (((i18 * Test0299.instanceCount) + i12) - i16);
                    Test0299.fFld -= i15;
                    i15 = (int) 142L;
                    Test0299.iArrFld[i18 - 1] -= i17;
                    Test0299.iArrFld = Test0299.iArrFld;
                }
            }
        }
        long meth_res = i1 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void main(String[] strArr) {

        try {
            Test0299 _instance = new Test0299();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 85, i20 = 13, i21 = -11, i22 = -40784, i23 = -31002, i24 = 10519, i25 = 8, i26 = -193, i27 = 6, i28 = -55, i29 = -13;
        float f = 55.387F;
        boolean b = false;
        long[] lArr2 = new long[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(lArr2, -6L);
        FuzzerUtils.init(dArr, -110.74994);

        i = (int) (--f);
        b = bMeth(Test0299.iFld);
        lArr2[(0 >>> 1) % N] += Test0299.iFld;
        for (i20 = 7; i20 < 389; i20++) {
            Test0299.instanceCount = 31;
            for (i22 = 2; i22 < 66; i22 += 3) {
                i21 -= -7;
                Test0299.iArrFld[i20 - 1] -= -37277;
                i23 <<= Test0299.iFld;
                i24 = 1;
                while (++i24 < 4) {
                    Test0299.dFld = i20;
                    i = i20;
                }
                dArr[i22 + 1] *= i;
                for (i25 = i22; i25 < 4; ++i25) {
                    Test0299.instanceCount = 103;
                    Test0299.byFld = (byte) Test0299.fFld;
                    Test0299.iArrFld[i22] >>= i22;
                }
                switch ((i20 % 2) + 28) {
                    case 28:
                        for (i27 = 1; i27 < 4; ++i27) {
                            Test0299.iFld *= 4;
                            i28 += (int) (-13L + (i27 * i27));
                            if (Test0299.bFld) continue;
                            Test0299.iArrFld[i20 - 1] -= i22;
                            Test0299.iFld += (((i27 * Test0299.instanceCount) + i20) - i24);
                        }
                    case 29:
                        Test0299.dFld = Test0299.fFld;
                        break;
                    default:
                        i29 = 1;
                        while (++i29 < 4) {
                            i26 += (int) Test0299.instanceCount;
                            Test0299.instanceCount += Test0299.byFld;
                            Test0299.iArrFld[i22 - 1] -= i25;
                            if (b) continue;
                        }
                }
            }
        }

        FuzzerUtils.out.println("i f b = " + i + "," + Float.floatToIntBits(f) + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 lArr2 dArr = " + i29 + "," + FuzzerUtils.checkSum(lArr2) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0299.instanceCount Test0299.dFld Test0299.bFld = " + Test0299.instanceCount + "," +
                Double.doubleToLongBits(Test0299.dFld) + "," + (Test0299.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0299.fFld Test0299.iFld Test0299.byFld = " + Float.floatToIntBits(Test0299.fFld) + "," + Test0299.iFld
                + "," + Test0299.byFld);
        FuzzerUtils.out.println("Test0299.iArrFld = " + FuzzerUtils.checkSum(Test0299.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
