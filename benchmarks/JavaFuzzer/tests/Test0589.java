// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0589 {

    public static final int N = 400;

    public static volatile long instanceCount = -192359048669501442L;
    public static int iFld = -124;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public volatile boolean bFld = false;
    public float fFld = 1.136F;
    public double dFld = 0.63253;
    public byte byFld = 91;
    public short sFld = 6886;
    public int[] iArrFld = new int[N];
    public short[][] sArrFld = new short[N][N];

    public static void vMeth1() {

        int i5 = -10;

        i5 = 1;
        while (++i5 < 197) {
            Test0589.iFld += (i5 | Test0589.instanceCount);
        }
        vMeth1_check_sum += i5;
    }

    public static void main(String[] strArr) {

        try {
            Test0589 _instance = new Test0589();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        int i4 = -103, i6 = -11, i7 = -47172, i8 = -11, i9 = 8, i10 = 50096;
        double d = 0.48929;
        byte by = 23;

        i4 = (--iArrFld[(i4 >>> 1) % N]);
        vMeth1();
        Test0589.iFld = 54;
        for (i6 = 13; 239 > i6; i6++) {
            i8 = 1;
            while (++i8 < 7) {
                if (false) {
                    iArrFld[i6 + 1] /= (int) ((long) (d) | 1);
                    for (i9 = 1; i9 > 1; i9 -= 2) {
                        i7 = (int) Test0589.instanceCount;
                        i4 += i9;
                        iArrFld[i9 - 1] -= -93;
                        d *= i8;
                    }
                    sArrFld[i6][i8 - 1] = (short) 4;
                    if (bFld) break;
                }
                fFld += by;
            }
        }
        vMeth_check_sum += i4 + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + by;
    }

    public int iMeth(long l1, int i2, int i3) {

        long l2 = 995533455L;
        long[] lArr = new long[N];
        int i11 = 11945, i12 = -9;
        double d1 = -121.86919;

        FuzzerUtils.init(lArr, 0L);

        vMeth();
        if (bFld) {
            dFld = 6;
            l2 = 1;
            while (++l2 < 303) {
                Test0589.instanceCount *= l1;
                lArr[(int) (l2 - 1)] += 2922;
                Test0589.instanceCount = 13L;
            }
            for (i11 = 6; i11 < 350; ++i11) {
                iArrFld = iArrFld;
                iArrFld[i11] = (int) l1;
                if (true) continue;
                i12 >>= 211;
                d1 = 1;
                do {
                    i12 += (int) ((long) d1 ^ (long) fFld);
                    Test0589.iFld = (int) d1;
                } while (++d1 < 5);
            }
        }
        long meth_res = l1 + i2 + i3 + l2 + i11 + i12 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 2, i1 = 11, i13 = 36, i14 = -160, i15 = -6;
        long l = 50699L, l3 = -6L;

        for (i = 5; 190 > i; ++i) {
            i1 += (int) ((i1 - (i1 - l)) * ((i1 - Test0589.instanceCount) + (i1 * i1)));
            l = (i1--);
            i1 *= iMeth(l, i1, i);
            Test0589.iFld = 64972;
            for (i13 = 5; i13 < 136; i13 += 3) {
                Test0589.iFld -= (int) fFld;
                switch ((i % 1) + 68) {
                    case 68:
                        i14 += (i13 + fFld);
                        fFld = 50255;
                        break;
                }
                switch ((i13 % 9) + 71) {
                    case 71:
                        iArrFld[i13 - 1] >>= i1;
                        Test0589.iFld += (((i13 * Test0589.iFld) + Test0589.iFld) - Test0589.instanceCount);
                        iArrFld[i13 - 1] *= (int) fFld;
                    case 72:
                        for (l3 = 1; l3 < 4; ++l3) {
                            iArrFld[i + 1] -= 0;
                            i15 = i1;
                            i1 <<= i;
                            Test0589.iFld += (int) (l3 | i13);
                            switch ((i13 % 6) + 117) {
                                case 117:
                                    Test0589.iFld += i14;
                                case 118:
                                    i1 += (int) l3;
                                case 119:
                                    l >>>= i14;
                                    bFld = bFld;
                                    if (bFld) continue;
                                    break;
                                case 120:
                                    switch ((i % 8) + 23) {
                                        case 23:
                                            byFld = (byte) dFld;
                                            Test0589.instanceCount += (((l3 * i15) + byFld) - i);
                                            i15 += i;
                                            break;
                                        case 24:
                                            i14 >>= i15;
                                        case 25:
                                            i15 = (int) 7L;
                                            break;
                                        case 26:
                                            i15 += (int) (((l3 * Test0589.iFld) + i1) - Test0589.iFld);
                                        case 27:
                                            i15 += i13;
                                        case 28:
                                            Test0589.iFld = 54;
                                            break;
                                        case 29:
                                            i1 = -42689;
                                            break;
                                        case 30:
                                            i1 -= sFld;
                                            break;
                                        default:
                                            fFld -= byFld;
                                    }
                                    break;
                                case 121:
                                    fFld *= i14;
                                case 122:
                                    Test0589.iFld += (int) dFld;
                            }
                        }
                        break;
                    case 73:
                        fFld *= fFld;
                        break;
                    case 74:
                        i15 += i13;
                        break;
                    case 75:
                        Test0589.iFld %= (int) (Test0589.instanceCount | 1);
                        break;
                    case 76:
                    case 77:
                        i14 -= i14;
                        break;
                    case 78:
                        if (bFld) break;
                    case 79:
                        l += (i13 + i15);
                        break;
                    default:
                        i15 >>= 2;
                }
            }
        }

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i13 i14 l3 = " + i13 + "," + i14 + "," + l3);
        FuzzerUtils.out.println("i15 = " + i15);

        FuzzerUtils.out.println("Test0589.instanceCount Test0589.iFld bFld = " + Test0589.instanceCount + "," + Test0589.iFld + "," +
                (bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld dFld byFld = " + Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(dFld)
                + "," + byFld);
        FuzzerUtils.out.println("sFld iArrFld sArrFld = " + sFld + "," + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
