// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test0003 {

    public static final int N = 400;

    public static long instanceCount = 16297L;
    public static float fFld = -1.293F;
    public static double dFld = 0.77372;
    public static byte[] byArrFld = new byte[N];
    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0003.byArrFld, (byte) -72);
    }

    public static void vMeth1(int i4, long l) {

        long l1 = -3286110601L;
        long[] lArr = new long[N];
        int i5 = 3933;
        int i6 = -33680;
        int[] iArr = new int[N];
        float f1 = -1.271F;
        short s1 = 29834;

        FuzzerUtils.init(iArr, 27116);
        FuzzerUtils.init(lArr, -131L);

        Test0003.instanceCount &= -14319;
        i4 += -11573;
        i4 >>= 24210;
        iArr = iArr;
        for (l1 = 7; l1 < 128; l1++) {
            byte by = -23;
            for (f1 = l1; f1 < 13; f1++) {
                Test0003.fFld += i6;
            }
            by = (byte) Test0003.instanceCount;
            Test0003.byArrFld[(int) (l1)] *= (byte) 5;
            lArr[(int) (l1)] >>= s1;
            Test0003.instanceCount += 2;
            i5 *= -63859;
            by *= (byte) f1;
            i5 *= i6;
            i5 += -17531;
        }
        vMeth1_check_sum += i4 + l + l1 + i5 + Float.floatToIntBits(f1) + i6 + s1 + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i2, short s, int i3) {

        int i7 = -2546, i8 = -241, i9 = 8, i10 = -71, i11 = -93;
        boolean b = true;
        float f2 = 0.972F;

        vMeth1(-62150, -29437L);
        for (i7 = 10; 304 > i7; ++i7) {
            i8 *= (int) Test0003.instanceCount;
            Test0003.instanceCount += i8;
            i2 = (int) -9161820085082340707L;
            if (b) continue;
            i8 += (i7 * i7);
        }
        for (i9 = 14; i9 < 363; i9++) {
            Test0003.dFld = 247;
            i2 += (int) 126.283F;
            Test0003.instanceCount = (long) Test0003.fFld;
            i11 = 1;
            do {
                if (b) break;
                f2 -= i9;
                if (b) break;
            } while (++i11 < 5);
        }
        vMeth_check_sum += i2 + s + i3 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + i11 + Float.floatToIntBits(f2);
    }

    public static void vSmallMeth(int i, int i1, float f) {

        short s2 = 15502;

        vMeth(-200, s2, i1);
        vSmallMeth_check_sum += i + i1 + Float.floatToIntBits(f) + s2;
    }

    public static void main(String[] strArr) {

        try {
            Test0003 _instance = new Test0003();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i12 = -79;

        for (int smallinvoc = 0; smallinvoc < 144; smallinvoc++) vSmallMeth(i12, i12, Test0003.fFld);

        FuzzerUtils.out.println("i12 = " + i12);

        FuzzerUtils.out.println("Test0003.instanceCount Test0003.fFld Test0003.dFld = " + Test0003.instanceCount + "," +
                Float.floatToIntBits(Test0003.fFld) + "," + Double.doubleToLongBits(Test0003.dFld));
        FuzzerUtils.out.println("Test0003.byArrFld = " + FuzzerUtils.checkSum(Test0003.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
