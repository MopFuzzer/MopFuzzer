// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0136 {

    public static final int N = 400;

    public static volatile long instanceCount = -60506L;
    public static volatile boolean bFld = false;
    public static short sFld = -3398;
    public static long[][] lArrFld = new long[N][N];
    public static int[][] iArrFld = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0136.lArrFld, -5L);
        FuzzerUtils.init(Test0136.iArrFld, -23886);
    }

    public byte byFld = 5;

    public static void vMeth2(double d2) {

        int i11 = 26069;
        int i12 = -52968;
        int i13 = -7;
        int i14 = 0;
        int[] iArr = new int[N];
        float f = -1.447F;
        byte by = 96;

        FuzzerUtils.init(iArr, 41310);

        i11 = 1;
        while (++i11 < 151) {
            Test0136.instanceCount = i11;
            Test0136.instanceCount >>>= -138;
            i12 = 10;
            do {
                i13 = 1;
                while ((i13 += 2) < 1) {
                    if (Test0136.bFld) break;
                    f += i13;
                    i14 += (i13 | i13);
                    Test0136.bFld = Test0136.bFld;
                }
                by += (byte) i14;
                if (true) {
                    Test0136.bFld = Test0136.bFld;
                    iArr[i12 - 1] /= (int) (i11 | 1);
                }
                Test0136.instanceCount += (i12 ^ i11);
                f = (float) d2;
            } while (--i12 > 0);
        }
        vMeth2_check_sum += Double.doubleToLongBits(d2) + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 + by +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        double d3 = 125.2804;
        int i15 = -56882, i16 = -46573, i17 = 1, i18 = -6, i19 = -62911;
        float f1 = 57.805F;

        vMeth2(d3);
        i15 = 1;
        do {
            Test0136.instanceCount += (i15 * i15);
            i16 = 1;
            do {
                i17 = i16;
                for (i18 = 3; 1 < i18; i18--) {
                    short s = 31005;
                    Test0136.bFld = Test0136.bFld;
                    Test0136.instanceCount += (i18 * i18);
                    Test0136.instanceCount = s;
                    i17 += (205 + (i18 * i18));
                }
                i19 += (int) f1;
                i19 += (i16 * f1);
                i17 += i16;
                i19 += i19;
                i19 += i16;
            } while ((i16 += 3) < 12);
        } while (++i15 < 128);
        vMeth1_check_sum += Double.doubleToLongBits(d3) + i15 + i16 + i17 + i18 + i19 + Float.floatToIntBits(f1);
    }

    public static void vMeth(long l, int i7, int i8) {

        int i9 = -244, i10 = -5, i20 = -60601, i21 = -62650;
        double d1 = 1.122166, d4 = -1.84730;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 0.618F);

        for (i9 = 7; i9 < 193; i9++) {
            d1 -= (i8 - (i10--));
        }
        vMeth1();
        for (i20 = 10; i20 < 361; ++i20) {
            i7 *= i7;
            i8 = (int) 1.127601;
            l += i21;
            if (Test0136.bFld) break;
            fArr[i20] = (float) -91.34390;
            d4 = 1;
            while (++d4 < 5) {
                i7 >>= i21;
                Test0136.sFld <<= (short) i20;
                l *= (long) 29.123F;
                i10 *= 108;
                i10 = (int) d4;
            }
        }
        vMeth_check_sum += l + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + i20 + i21 +
                Double.doubleToLongBits(d4) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0136 _instance = new Test0136();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d = -112.69622;
        int i = -29073, i1 = -11, i2 = -4, i3 = -8926, i4 = -47790, i5 = 18, i6 = -16053, i22 = 6, i23 = -59, i24 = -6, i25 = -4;
        float f2 = 0.724F;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, -98.103F);

        d = i;
        for (i1 = 8; i1 < 191; i1 += 2) {
            for (i3 = i1; i3 < 275; i3++) {
                for (i5 = 1; i5 < 1; i5++) {
                    vMeth(Test0136.instanceCount, 13214, i5);
                }
                i4 = -657;
                if (Test0136.bFld) continue;
                for (i22 = 1; i22 < 1; i22 += 3) {
                    fArr1 = fArr1;
                    Test0136.lArrFld[i22 + 1][i1 + 1] = 14;
                    byFld -= (byte) Test0136.instanceCount;
                    Test0136.bFld = Test0136.bFld;
                    f2 += (-30386L + (i22 * i22));
                    i2 = (int) -7811060788048354834L;
                    i4 = byFld;
                    Test0136.instanceCount += i22;
                    i6 += (7153 + (i22 * i22));
                    i6 = (int) d;
                }
                i4 = i4;
                i6 = i1;
                i23 = Test0136.sFld;
                i6 += (i3 * i3);
                i23 *= -137;
                for (i24 = 1; i24 < 1; ++i24) {
                    Test0136.iArrFld[i1 - 1][i24 + 1] += (int) Test0136.instanceCount;
                    i6 = i4;
                }
            }
            i4 <<= (int) 7L;
            if (Test0136.bFld) {
                i6 -= (int) f2;
            } else {
                try {
                    i23 = (i25 / Test0136.iArrFld[i1][i1]);
                    i6 = (i6 % i3);
                    Test0136.iArrFld[i1 - 1][i1 + 1] = (10087 / i3);
                } catch (ArithmeticException a_e) {
                }
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 i6 i22 = " + i5 + "," + i6 + "," + i22);
        FuzzerUtils.out.println("i23 f2 i24 = " + i23 + "," + Float.floatToIntBits(f2) + "," + i24);
        FuzzerUtils.out.println("i25 fArr1 = " + i25 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0136.instanceCount Test0136.bFld Test0136.sFld = " + Test0136.instanceCount + "," + (Test0136.bFld ? 1
                : 0) + "," + Test0136.sFld);
        FuzzerUtils.out.println("byFld Test0136.lArrFld Test0136.iArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0136.lArrFld)
                + "," + FuzzerUtils.checkSum(Test0136.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
