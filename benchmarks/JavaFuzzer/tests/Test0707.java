// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0707 {

    public static final int N = 400;

    public static volatile long instanceCount = 868520542L;
    public static volatile float fFld = -110.23F;
    public static volatile boolean bFld = true;
    public static boolean bFld1 = false;
    public static short sFld = -7640;
    public static double dFld = 0.60002;
    public static volatile int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0707.iArrFld, 230);
        FuzzerUtils.init(Test0707.lArrFld, 209L);
    }

    public int iFld = -9;
    public float fFld1 = 1.956F;
    public int iFld1 = -133;
    public byte byFld = -49;
    public boolean bFld2 = true;

    public static float fMeth(int i1, int i2) {

        int i3 = -7, i4 = -254, i5 = 10276, i6 = 1, i7 = 27195, i8 = -60068;
        short s = 19616;
        double d = 2.120831;
        byte by1 = -73;

        for (i3 = 8; i3 < 281; i3++) {
            i2 += i1;
            i1 = -50;
            i2 = s;
            i4 = -32304;
            i1 += (11 + (i3 * i3));
            for (i5 = 1; i5 < 6; ++i5) {
                i1 = i2;
            }
            for (i7 = 1; i7 < 6; ++i7) {
                Test0707.instanceCount = i5;
                i8 = i3;
                i4 += i8;
                d %= ((long) (Test0707.fFld) | 1);
                if (i8 != 0) {
                }
            }
            by1 += (byte) (((i3 * Test0707.instanceCount) + i1) - i4);
        }
        long meth_res = i1 + i2 + i3 + i4 + s + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + by1;
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0707 _instance = new Test0707();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth1(byte by) {

        int i9 = -26, i10 = -188, i11 = 88, i12 = -57, i13 = 12, i14 = -7695;
        double d1 = 47.13411;

        switch ((((((int) (Test0707.instanceCount - -76L)) >>> 1) % 8) * 5) + 73) {
            case 91:
                fMeth(iFld, iFld);
                Test0707.iArrFld[(iFld >>> 1) % N] += -55;
                Test0707.bFld = Test0707.bFld;
                for (i9 = 13; i9 < 319; ++i9) {
                    iFld *= i9;
                }
                break;
            case 103:
                i11 = 137;
                do {
                    for (i12 = 1; 11 > i12; i12++) {
                        i10 = i10;
                        if (Test0707.bFld1) {
                            Test0707.instanceCount <<= Test0707.instanceCount;
                            Test0707.instanceCount += (((i12 * fFld1) + i9) - i10);
                        } else if (Test0707.bFld1) {
                            iFld |= i12;
                            i14 += i12;
                            fFld1 = i13;
                        } else if (Test0707.bFld1) {
                            iFld1 = -14311;
                        } else {
                            iFld += (((i12 * iFld) + i13) - i14);
                        }
                    }
                } while (--i11 > 0);
            case 104:
                d1 *= Test0707.sFld;
                break;
            case 90:
                i13 |= iFld;
                break;
            case 113:
                iFld = i9;
                break;
            case 92:
                i13 = i13;
            case 95:
                iFld *= (int) fFld1;
            case 77:
                iFld1 <<= iFld1;
                break;
        }
        vMeth1_check_sum += by + i9 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1);
    }

    public void vMeth(long l, long l1, long l2) {

        int i = 246, i15 = -71, i16 = -5;
        float f = -63.504F;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, true);

        l1 = i;
        f -= Test0707.iArrFld[(i >>> 1) % N];
        vMeth1(byFld);
        Test0707.dFld *= l1;
        l -= 5;
        i -= iFld;
        bArr = bArr;
        Test0707.instanceCount = l1;
        Test0707.iArrFld[(-30218 >>> 1) % N] += Test0707.sFld;
        for (i15 = 22; 378 > i15; i15++) {
            Test0707.lArrFld[i15 + 1] = Test0707.instanceCount;
            switch ((((iFld >>> 1) % 3) * 5) + 86) {
                case 93:
                case 101:
                    f -= -2.529F;
                    iFld >>>= i;
                    if (iFld != 0) {
                        vMeth_check_sum += l + l1 + l2 + i + Float.floatToIntBits(f) + i15 + i16 +
                                FuzzerUtils.checkSum(bArr);
                        return;
                    }
                    break;
                case 94:
                    Test0707.fFld -= iFld;
                    break;
            }
        }
        vMeth_check_sum += l + l1 + l2 + i + Float.floatToIntBits(f) + i15 + i16 + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        float f1 = 0.179F;
        int i17 = 53, i18 = 55234, i19 = 4, i20 = -54341, i21 = 5462;
        boolean[] bArr1 = new boolean[N];

        FuzzerUtils.init(bArr1, true);

        vMeth(Test0707.instanceCount, -145L, Test0707.instanceCount);
        iFld1 >>= 8;
        Test0707.instanceCount -= 221;
        for (f1 = 7; f1 < 177; ++f1) {
            Test0707.iArrFld[(int) (f1)] = iFld;
            switch ((int) ((f1 % 6) + 63)) {
                case 63:
                    for (i18 = 9; i18 < 148; ++i18) {
                        for (i20 = 2; i20 > 1; i20 -= 2) {
                            Test0707.bFld = false;
                            switch ((int) (((f1 % 6) * 5) + 5)) {
                                case 25:
                                    if (Test0707.bFld1) break;
                                    i19 += (int) Test0707.dFld;
                                    if (bFld2) break;
                                    switch ((i18 % 2) + 65) {
                                        case 65:
                                            Test0707.iArrFld[i18 - 1] = i19;
                                            Test0707.iArrFld[(int) (f1)] = 82;
                                            iFld1 = i20;
                                            fFld1 += Test0707.sFld;
                                            break;
                                        case 66:
                                            i17 += (int) Test0707.fFld;
                                            iFld += (i20 ^ (long) f1);
                                            break;
                                    }
                                case 27:
                                    switch (((i20 % 2) * 5) + 109) {
                                        case 116:
                                            fFld1 -= i19;
                                            Test0707.iArrFld[(int) (f1 - 1)] -= i20;
                                            i19 += (int) Test0707.instanceCount;
                                            break;
                                        case 113:
                                            Test0707.sFld = (short) iFld1;
                                            Test0707.lArrFld[i20 + 1] = (long) fFld1;
                                    }
                                case 24:
                                    i17 = (int) Test0707.instanceCount;
                                    Test0707.fFld /= (i20 | 1);
                                    fFld1 += Test0707.instanceCount;
                                    Test0707.instanceCount &= i18;
                                    break;
                                case 7:
                                    Test0707.instanceCount = i21;
                                    break;
                                case 14:
                                    i17 += (i20 + Test0707.instanceCount);
                                    break;
                                case 22:
                                    iFld1 = i20;
                                default:
                                    iFld1 += i20;
                            }
                        }
                    }
                    break;
                case 64:
                    i17 += (int) (((f1 * i20) + i19) - iFld1);
                    break;
                case 65:
                    Test0707.dFld += 57213;
                    break;
                case 66:
                    iFld1 += (int) f1;
                    break;
                case 67:
                case 68:
                    iFld1 -= (int) Test0707.instanceCount;
                default:
                    bArr1[(int) (f1 - 1)] = Test0707.bFld1;
            }
        }

        FuzzerUtils.out.println("f1 i17 i18 = " + Float.floatToIntBits(f1) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("bArr1 = " + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test0707.instanceCount Test0707.fFld iFld = " + Test0707.instanceCount + "," +
                Float.floatToIntBits(Test0707.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test0707.bFld fFld1 iFld1 = " + (Test0707.bFld ? 1 : 0) + "," + Float.floatToIntBits(fFld1) +
                "," + iFld1);
        FuzzerUtils.out.println("Test0707.bFld1 Test0707.sFld byFld = " + (Test0707.bFld1 ? 1 : 0) + "," + Test0707.sFld + "," + byFld);
        FuzzerUtils.out.println("Test0707.dFld bFld2 Test0707.iArrFld = " + Double.doubleToLongBits(Test0707.dFld) + "," + (bFld2 ?
                1 : 0) + "," + FuzzerUtils.checkSum(Test0707.iArrFld));
        FuzzerUtils.out.println("Test0707.lArrFld = " + FuzzerUtils.checkSum(Test0707.lArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
