// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test0542 {

    public static final int N = 400;

    public static long instanceCount = -14L;
    public static volatile int iFld = 1;
    public static float fFld = 0.95F;
    public static byte byFld = 110;
    public static short sFld = 31582;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0542.iArrFld, 2243);
        FuzzerUtils.init(Test0542.lArrFld, 1288203676550870546L);
    }

    public double dFld = 13.107434;

    public static void vMeth1(int i3) {

        double d = 0.119616;
        short s1 = -9533;
        int i4 = -3147;
        int i5 = 12;
        int[] iArr = new int[N];
        long l = -8834709768836568571L;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, -1188788198L);
        FuzzerUtils.init(iArr, 63210);

        Test0542.fFld = Test0542.iFld;
        Test0542.fFld = i3;
        Test0542.iFld *= (int) d;
        lArr[(Test0542.iFld >>> 1) % N][(Test0542.iFld >>> 1) % N] -= Test0542.instanceCount;
        i3 -= i3;
        s1 <<= (short) Test0542.instanceCount;
        i4 = 1;
        do {
            for (l = i4; l < 6; l++) {
                Test0542.iFld -= (int) 86.758F;
                i3 += (12 + (l * l));
                Test0542.instanceCount &= 2L;
                Test0542.fFld *= i5;
                d = i4;
                Test0542.fFld -= i3;
                iArr[i4] = (int) Test0542.fFld;
            }
        } while (++i4 < 292);
        vMeth1_check_sum += i3 + Double.doubleToLongBits(d) + s1 + i4 + l + i5 + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(int i2) {

        int i6 = 6;
        int i7 = 33;
        int i8 = 40;
        int i9 = -2;
        int i10 = 24249;
        int i11 = 30187;
        int i12 = 59048;
        int i13 = -46651;
        int[] iArr1 = new int[N];
        short s2 = 7147;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 8143661211787086705L);
        FuzzerUtils.init(iArr1, -151);

        vMeth1(-63617);
        Test0542.iFld = (int) Test0542.instanceCount;
        for (i6 = 9; i6 < 155; ++i6) {
            i7 &= i2;
        }
        for (i8 = 7; i8 < 318; ++i8) {
            lArr1[i8 + 1] = i6;
            for (i10 = 1; 5 > i10; ++i10) {
                for (i12 = 1; i12 < 2; i12++) {
                    Test0542.fFld = s2;
                    Test0542.instanceCount <<= i13;
                    iArr1[i8 + 1] = i8;
                    i9 |= i6;
                    Test0542.instanceCount -= (long) Test0542.fFld;
                    Test0542.fFld += i9;
                    Test0542.instanceCount += (i12 * i12);
                }
            }
        }
        long meth_res = i2 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + s2 + FuzzerUtils.checkSum(lArr1) +
                FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth(short s, float f) {

        int i14 = -116, i15 = 208, i16 = 56451, i17 = 42, i18 = -230, i19 = 9, i20 = 79;
        double d1 = -1.76022;
        boolean b = true;

        Test0542.iFld = (int) fMeth(223);
        i14 = i14;
        i14 += i14;
        d1 = Test0542.instanceCount;
        for (i15 = 230; i15 > 3; i15 -= 3) {
            for (i17 = 1; i17 < 21; ++i17) {
                for (i19 = i15; 2 > i19; i19++) {
                    Test0542.iArrFld[i15] = i17;
                    i20 <<= Test0542.byFld;
                    if (b) continue;
                    Test0542.lArrFld[i17 - 1] = i19;
                    Test0542.iFld += (i19 * i19);
                    if (i15 != 0) {
                        vMeth_check_sum += s + Float.floatToIntBits(f) + i14 + Double.doubleToLongBits(d1) + i15 + i16
                                + i17 + i18 + i19 + i20 + (b ? 1 : 0);
                        return;
                    }
                }
                i20 = (int) f;
            }
            i20 *= (int) Test0542.fFld;
        }
        vMeth_check_sum += s + Float.floatToIntBits(f) + i14 + Double.doubleToLongBits(d1) + i15 + i16 + i17 + i18 +
                i19 + i20 + (b ? 1 : 0);
    }

    public static void main(String[] strArr) {

        try {
            Test0542 _instance = new Test0542();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -53358, i1 = 5687, i21 = 91, i22 = -14566, i23 = 11, i24 = -10610, i25 = 30;
        boolean b1 = true;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 0.752F);

        for (i = 16; i < 324; ++i) {
            vMeth(Test0542.sFld, -123.264F);
            b1 = b1;
            Test0542.byFld -= (byte) Test0542.instanceCount;
            Test0542.iFld = i1;
        }
        Test0542.iFld = Test0542.iFld;
        i21 = 1;
        while (++i21 < 132) {
            Test0542.instanceCount += i21;
            for (i22 = 10; 190 > i22; i22 += 2) {
                Test0542.iArrFld[i21] += Test0542.sFld;
                Test0542.iFld >>>= (int) Test0542.instanceCount;
                i23 += (51685 + (i22 * i22));
                for (i24 = 1; 3 > i24; i24++) {
                    i1 = (int) Test0542.instanceCount;
                    i23 += (((i24 * i21) + i21) - Test0542.fFld);
                    i25 += (((i24 * i23) + Test0542.instanceCount) - i1);
                    Test0542.iFld -= (int) Test0542.fFld;
                }
                Test0542.iFld -= i1;
                Test0542.iArrFld[i21 + 1] >>= i24;
            }
        }
        fArr = FuzzerUtils.float1array(N, (float) 2.749F);
        Test0542.fFld += (float) dFld;
        i25 += i25;
        dFld = Test0542.instanceCount;
        dFld -= i25;

        FuzzerUtils.out.println("i i1 b1 = " + i + "," + i1 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 fArr = " + i24 + "," + i25 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0542.instanceCount Test0542.iFld Test0542.fFld = " + Test0542.instanceCount + "," + Test0542.iFld +
                "," + Float.floatToIntBits(Test0542.fFld));
        FuzzerUtils.out.println("Test0542.byFld Test0542.sFld dFld = " + Test0542.byFld + "," + Test0542.sFld + "," +
                Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0542.iArrFld Test0542.lArrFld = " + FuzzerUtils.checkSum(Test0542.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0542.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
