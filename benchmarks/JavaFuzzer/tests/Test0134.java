// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0134 {

    public static final int N = 400;

    public static long instanceCount = 132L;
    public static long lFld = 5990721471349438394L;
    public static byte byFld = 56;
    public static float fFld = -46.802F;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0134.fArrFld, -43.1012F);
        FuzzerUtils.init(Test0134.iArrFld, -4);
        FuzzerUtils.init(Test0134.dArrFld, -1.60015);
    }

    public short sFld = -25128;
    public int iFld = -19121;
    public volatile long[] lArrFld = new long[N];

    public static void vMeth2(short s, float f3) {

        int i14 = 247, i15 = -40218, i16 = 30, i17 = -76, i18 = 216, i19 = 10296, i20 = 239;
        double d1 = -1.125302;

        for (i14 = 11; i14 < 224; i14++) {
            for (i16 = 8; i16 > i14; --i16) {
                i17 += i16;
            }
            Test0134.lFld = 201;
            for (i18 = 1; i18 < 8; ++i18) {
                d1 += -210;
                Test0134.fArrFld[i18 - 1] -= i16;
            }
            Test0134.byFld = (byte) Test0134.instanceCount;
            i15 -= i14;
            i20 = 1;
            do {
                switch ((i20 % 8) + 56) {
                    case 56:
                        Test0134.lFld += (i20 - f3);
                        i19 = -156;
                    case 57:
                        f3 = i20;
                        if (i17 != 0) {
                            vMeth2_check_sum += s + Float.floatToIntBits(f3) + i14 + i15 + i16 + i17 + i18 + i19 +
                                    Double.doubleToLongBits(d1) + i20;
                            return;
                        }
                        break;
                    case 58:
                        Test0134.lFld <<= -13;
                        break;
                    case 59:
                        Test0134.lFld = i15;
                        break;
                    case 60:
                        f3 += i14;
                        break;
                    case 61:
                        i15 += (-33092 + (i20 * i20));
                    case 62:
                        i17 += i20;
                    case 63:
                        Test0134.lFld -= i14;
                        break;
                    default:
                        i19 *= s;
                }
            } while (++i20 < 8);
        }
        vMeth2_check_sum += s + Float.floatToIntBits(f3) + i14 + i15 + i16 + i17 + i18 + i19 +
                Double.doubleToLongBits(d1) + i20;
    }

    public static void vMeth1(int i8, int i9, int i10) {

        int i11 = -4551;
        int i12 = 52159;
        int i13 = 27420;
        int i22 = 150;
        int[][] iArr2 = new int[N][N];
        float f2 = 0.172F, f4 = -2.628F;
        double d2 = -2.65294;
        double[] dArr = new double[N];
        boolean b = false;

        FuzzerUtils.init(dArr, -102.54542);
        FuzzerUtils.init(iArr2, -6);

        for (i11 = 15; i11 < 286; ++i11) {
            for (f2 = 1; f2 < 6; ++f2) {
                dArr[(int) (f2 + 1)] = ((iArr2[i11 + 1][i11 - 1]--) << -3804883600356790785L);
                vMeth2((short) (20333), f2);
                Test0134.fFld += (float) d2;
                Test0134.fFld = 13;
                iArr2[i11][(int) (f2 + 1)] -= (int) Test0134.lFld;
            }
            Test0134.fFld -= f2;
        }
        for (int i21 : Test0134.iArrFld) {
            if (b) {
                for (f4 = 1; f4 < 4; ++f4) {
                    short s1 = -20424;
                    i22 *= i13;
                    d2 += 0;
                    s1 = (short) d2;
                    i10 = (int) d2;
                }
            } else {
                d2 += Test0134.lFld;
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f2) + i13 + Double.doubleToLongBits(d2) +
                Float.floatToIntBits(f4) + i22 + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(long l) {

        double d = 33.65093, d3 = 0.61265;
        int i4 = 0;
        int i5 = 5;
        int i6 = 189;
        int i7 = -63892;
        int i23 = -35120;
        int[] iArr1 = new int[N];
        float f1 = 125.306F;
        short s2 = 6746;

        FuzzerUtils.init(iArr1, -40);

        d = (i4--);
        for (i5 = 5; i5 < 186; ++i5) {
            try {
                i6 = (iArr1[i5] % i6);
                i4 = (iArr1[i5 + 1] / i6);
                i4 = (57 % iArr1[(i5 >>> 1) % N]);
            } catch (ArithmeticException a_e) {
            }
            i7 = 1;
            do {
                l = 0;
                if ((--f1) != (-(27 - i6))) continue;
                vMeth1(i7, i4, -63172);
                try {
                    iArr1[i7 - 1] = (164 % i4);
                    i6 = (-134 / i7);
                    i23 = (iArr1[i7] % i6);
                } catch (ArithmeticException a_e) {
                }
            } while (++i7 < 9);
            i6 += (i5 * i5);
            Test0134.iArrFld = FuzzerUtils.int1array(N, (int) -14);
            s2 &= (short) Test0134.lFld;
            d3 = 1;
            do {
                Test0134.dArrFld[(int) (d3)] *= i23;
                d = Test0134.instanceCount;
                i23 += (int) 3163653203723998247L;
            } while (++d3 < 9);
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + Float.floatToIntBits(f1) + i23 + s2 +
                Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0134 _instance = new Test0134();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -5874;
        int i1 = 3395;
        int i2 = -108;
        int i3 = -12;
        int i24 = -48973;
        int[] iArr = new int[N];
        float f = -57.57F;
        double d4 = -1.66816;

        FuzzerUtils.init(iArr, -10);

        for (i = 314; 10 < i; i -= 3) {
            switch ((((i1 >>> 1) % 6) * 5) + 38) {
                case 52:
                    i1 >>= (i1++);
                    for (i2 = 1; i2 < 248; i2++) {
                        i3 = (int) (lArrFld[i2]++);
                        i3 &= i;
                        sFld >>>= (short) (iArr[i2 + 1] *= (int) (-(f * Test0134.instanceCount)));
                        switch ((i % 9) + 11) {
                            case 11:
                                i1 += i2;
                            case 12:
                                vMeth(Test0134.lFld);
                                break;
                            case 13:
                                i1 = i1;
                                i1 = (int) 64346L;
                                i1 <<= i1;
                                break;
                            case 14:
                                iArr[i2 - 1] |= 60946;
                                Test0134.dArrFld[i] -= Test0134.lFld;
                                i1 -= 0;
                                break;
                            case 15:
                                Test0134.dArrFld[i - 1] += -5;
                                i24 = 1;
                                do {
                                    d4 = 3681;
                                    iFld = i1;
                                    i3 += (int) Test0134.fFld;
                                    i1 -= i2;
                                    i3 += (12 + (i24 * i24));
                                    iFld += (int) (-2678827416438813179L + (i24 * i24));
                                } while (++i24 < 2);
                                Test0134.iArrFld = iArr;
                                break;
                            case 16:
                                try {
                                    iFld = (i1 % i3);
                                    Test0134.iArrFld[i - 1] = (i24 % -199);
                                    i1 = (i3 / Test0134.iArrFld[i]);
                                } catch (ArithmeticException a_e) {
                                }
                                i1 += (int) f;
                                i3 ^= i;
                                break;
                            case 17:
                                lArrFld[i2] = i1;
                                iFld = iFld;
                                break;
                            case 18:
                                i3 = (int) f;
                                break;
                            case 19:
                                iFld = i2;
                                break;
                        }
                    }
                    break;
                case 53:
                    i1 += i;
                case 47:
                    Test0134.iArrFld[i] -= iFld;
                case 54:
                    Test0134.dArrFld[i] -= i;
                    break;
                case 55:
                    Test0134.instanceCount = iFld;
                case 44:
                    Test0134.lFld += 3170L;
                default:
                    Test0134.instanceCount += (long) Test0134.fFld;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f i24 = " + i3 + "," + Float.floatToIntBits(f) + "," + i24);
        FuzzerUtils.out.println("d4 iArr = " + Double.doubleToLongBits(d4) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0134.instanceCount sFld Test0134.lFld = " + Test0134.instanceCount + "," + sFld + "," +
                Test0134.lFld);
        FuzzerUtils.out.println("Test0134.byFld Test0134.fFld iFld = " + Test0134.byFld + "," + Float.floatToIntBits(Test0134.fFld) +
                "," + iFld);
        FuzzerUtils.out.println("lArrFld Test0134.fArrFld Test0134.iArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0134.fArrFld)) + "," + FuzzerUtils.checkSum(Test0134.iArrFld));
        FuzzerUtils.out.println("Test0134.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0134.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
