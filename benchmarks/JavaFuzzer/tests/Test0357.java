// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0357 {

    public static final int N = 400;

    public static long instanceCount = 3479248587L;
    public static int iFld = 4;
    public static float fFld = 2.589F;
    public static double dFld = 0.72791;
    public static byte byFld = 71;
    public static boolean bFld = true;
    public static double[] dArrFld = new double[N];
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0357.dArrFld, 1.81858);
    }

    public int[] iArrFld = new int[N];

    public static long lMeth() {

        short s = -19370;

        Test0357.iFld += (int) (((Test0357.iFld - -892475716L) - (s + s)) * (-Test0357.fFld));
        long meth_res = s;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static long lMeth1() {

        int i6 = 37375;
        int i7 = 9;
        int i8 = -11;
        int i9 = -7;
        int[] iArr = new int[N];
        short s1 = -30110;
        boolean[] bArr = new boolean[N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(lArr1, 60677L);

        if (Test0357.bFld) {
            Test0357.instanceCount = Test0357.iFld;
            i6 = 1;
            do {
                Test0357.iFld = i6;
                i7 = 1;
                do {
                    Test0357.iFld += (int) -1.768F;
                    i8 = 1;
                    while (++i8 < 1) {
                        s1 >>>= (short) Test0357.instanceCount;
                        switch ((i7 % 2) + 49) {
                            case 49:
                                Test0357.dFld = Test0357.dFld;
                                Test0357.instanceCount = (long) Test0357.fFld;
                                if (Test0357.bFld) {
                                    bArr[i6 - 1] = true;
                                    iArr[i8 + 1] += i6;
                                    lArr1[i7 + 1] = (long) Test0357.dFld;
                                } else if (Test0357.bFld) {
                                    Test0357.byFld <<= (byte) 3359446936L;
                                } else if (Test0357.bFld) {
                                    try {
                                        Test0357.iFld = (i6 / i6);
                                        Test0357.iFld = (i8 / 194);
                                        Test0357.iFld = (iArr[i7 + 1] % i9);
                                    } catch (ArithmeticException a_e) {
                                    }
                                } else {
                                    Test0357.byFld = (byte) 41;
                                }
                                break;
                            case 50:
                                Test0357.iFld |= i7;
                                break;
                        }
                    }
                } while (++i7 < 10);
            } while ((i6 += 2) < 302);
        } else if (false) {
            Test0357.iFld = (int) Test0357.fFld;
        }
        long meth_res = i6 + i7 + i8 + s1 + i9 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(lArr1);
        lMeth1_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(double d) {

        int i11 = -21;
        int i12 = 27526;
        int i13 = -28985;
        int i14 = 27;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, 5);

        Test0357.iFld += (int) lMeth1();
        for (int i10 : iArr1) {
            Test0357.byFld = (byte) Test0357.iFld;
            Test0357.instanceCount -= Test0357.iFld;
            for (i11 = 1; i11 < 4; i11++) {
                Test0357.fFld -= Test0357.iFld;
                i10 -= i10;
                Test0357.fFld *= Test0357.iFld;
                i10 *= -11;
            }
            i12 = (int) 13332L;
            Test0357.instanceCount += i11;
            for (i13 = 1; i13 < 4; ++i13) {
                Test0357.instanceCount = 7L;
                Test0357.dArrFld[i13 + 1] *= -1112;
                Test0357.instanceCount += (((i13 * Test0357.fFld) + Test0357.iFld) - i14);
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0357 _instance = new Test0357();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(int i2, int i3, float f) {

        int i4 = -14, i5 = 56353, i16 = 46945, i17 = -8, i18 = -42467, i19 = -125;
        long[] lArr2 = new long[N];

        FuzzerUtils.init(lArr2, -1113744208779163808L);

        for (i4 = 255; i4 > 11; i4--) {
            vMeth(Test0357.dFld);
            i5 = 12;
            for (i16 = 1; i16 < 7; ++i16) {
                i5 += (i16 * i16);
                Test0357.iFld = -13344;
                lArr2[i4] >>= i5;
            }
            for (i18 = i4; i18 < 7; ++i18) {
                i2 += (i18 * Test0357.instanceCount);
                Test0357.instanceCount += (i18 | i4);
                Test0357.instanceCount &= Test0357.instanceCount;
                i5 += i18;
            }
            Test0357.instanceCount = i16;
            Test0357.instanceCount += (i4 * i4);
            Test0357.instanceCount += i4;
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i16 + i17 + i18 + i19 +
                FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 9;
        byte by = 116;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 7195953174471578866L);

        i = (int) (++Test0357.instanceCount);
        lArr[(i >>> 1) % N] = (i++);
        Test0357.instanceCount >>= ((by--) - (i++));
        for (int i1 : iArrFld) {
            lArr[(i1 >>> 1) % N] = (((7368 + iArrFld[(i1 >>> 1) % N]) - (i - -130)) - (i1 + lMeth()));
            Test0357.iFld = iMeth(i, i, Test0357.fFld);
        }
        Test0357.iFld = -85;

        FuzzerUtils.out.println("i by lArr = " + i + "," + by + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0357.instanceCount Test0357.iFld Test0357.fFld = " + Test0357.instanceCount + "," + Test0357.iFld +
                "," + Float.floatToIntBits(Test0357.fFld));
        FuzzerUtils.out.println("Test0357.dFld Test0357.byFld Test0357.bFld = " + Double.doubleToLongBits(Test0357.dFld) + "," +
                Test0357.byFld + "," + (Test0357.bFld ? 1 : 0));
        FuzzerUtils.out.println("iArrFld Test0357.dArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0357.dArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
