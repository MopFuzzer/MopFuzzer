// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0128 {

    public static final int N = 400;

    public static volatile long instanceCount = -4L;
    public static float fFld = -1.813F;
    public static double dFld = 0.97029;
    public static volatile long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0128.lArrFld, 2021521863L);
    }

    public byte byFld = 99;

    public static void vMeth1(int i6, int i7, long l2) {

        int i9 = -54;
        int i10 = 10;
        int i11 = 169;
        int[] iArr2 = new int[N];
        short s1 = -23453;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -27428);
        FuzzerUtils.init(iArr2, 2);

        sArr[(i7 >>> 1) % N] = (short) i7;
        for (int i8 : iArr2) {
            switch (((i7 >>> 1) % 7) * 5) {
                case 21:
                case 19:
                    for (i9 = 1; i9 < 4; i9++) {
                        i8 = (int) Test0128.dFld;
                        i8 += (int) -784866339L;
                        i11 = 1;
                        while (++i11 < 2) {
                            Test0128.instanceCount += (((i11 * i6) + Test0128.fFld) - Test0128.fFld);
                            i10 |= i7;
                        }
                        Test0128.lArrFld[i9] -= i9;
                        i7 += (i9 * i6);
                        iArr2[i9 + 1] -= i7;
                    }
                    s1 = (short) 12143;
                case 18:
                    Test0128.dFld += Test0128.dFld;
                    i7 <<= i8;
                    break;
                case 20:
                    sArr[(i11 >>> 1) % N] = (short) i8;
                case 11:
                    i6 = (int) 1.55959;
                    break;
                case 13:
                    i6 = (int) Test0128.fFld;
                case 12:
                default:
                    i10 = (int) Test0128.instanceCount;
            }
        }
        vMeth1_check_sum += i6 + i7 + l2 + i9 + i10 + i11 + s1 + FuzzerUtils.checkSum(sArr) +
                FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(long l, long l1, int i1) {

        int i2 = 212;
        int i3 = -53370;
        int i4 = -3197;
        int i5 = 52208;
        int[] iArr1 = new int[N];
        short s = 4749;
        byte by = -45;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, 113);
        FuzzerUtils.init(lArr, 131497635L);

        iArr1[(i1 >>> 1) % N] = (int) lArr[(i1 >>> 1) % N];
        i2 = 1;
        while (++i2 < 291) {
            i3 = 1;
            do {
                i1 <<= (int) (l1++);
                l += (((++i1) % ((lArr[i3] -= i2) | 1)) - 14);
                for (i4 = 1; i4 < 1; i4++) {
                    i5 += (((i4 * s) + i4) - i1);
                    l1 += (i4 - i3);
                    vMeth1(i2, i5, 7033980681821428374L);
                    i1 += i4;
                    Test0128.dFld = i1;
                    i1 -= i3;
                    Test0128.instanceCount = i2;
                }
                by -= (byte) i1;
                Test0128.dFld += 10;
            } while (++i3 < 6);
        }
        long meth_res = l + l1 + i1 + i2 + i3 + i4 + i5 + s + by + FuzzerUtils.checkSum(iArr1) +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i) {

        int i12 = -7;
        int i13 = 26;
        int i14 = 225;
        int i15 = -27456;
        int i16 = 1;
        int i17 = -9;
        int i18 = -35645;
        int i19 = 53324;
        int[] iArr = new int[N];
        boolean b = false;
        long l3 = 8119L;

        FuzzerUtils.init(iArr, 8);

        iArr[(8 >>> 1) % N] = (int) (-((long) (Test0128.fFld + -105L) << (long) (Test0128.fFld + Test0128.dFld)));
        iArr[(i >>> 1) % N] = iMeth(658511525L, Test0128.instanceCount, -4);
        for (i12 = 12; i12 < 215; i12 += 2) {
            i = (int) Test0128.instanceCount;
            if (i12 != 0) {
                vMeth_check_sum += i + i12 + i13 + i14 + i15 + i16 + i17 + (b ? 1 : 0) + i18 + i19 + l3 +
                        FuzzerUtils.checkSum(iArr);
                return;
            }
        }
        Test0128.dFld += -2452;
        i13 >>>= i;
        for (i14 = 373; i14 > 20; --i14) {
            Test0128.lArrFld[i14 + 1] = -4;
            Test0128.fFld *= i15;
            for (i16 = 1; i16 < 5; i16++) {
                b = b;
            }
            for (i18 = 1; i18 < 5; i18++) {
                l3 = i13;
                iArr[i14] -= i13;
            }
        }
        vMeth_check_sum += i + i12 + i13 + i14 + i15 + i16 + i17 + (b ? 1 : 0) + i18 + i19 + l3 +
                FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0128 _instance = new Test0128();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = 62657;
        int i21 = 0;
        int i22 = -100;
        int i23 = 80;
        int i24 = 8;
        int i25 = 39788;
        int i26 = -133;
        int i27 = 139;
        int i28 = -171;
        int i29 = -102;
        int i30 = -13;
        int[][] iArr3 = new int[N][N];
        short s2 = -20894;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -1.110F);
        FuzzerUtils.init(iArr3, 2);

        vMeth(i20);
        i21 <<= i21;
        byFld = (byte) i20;
        Test0128.instanceCount -= i21;
        Test0128.dFld = i21;
        for (i22 = 3; i22 < 218; i22++) {
            for (i24 = 1; i24 < 117; ++i24) {
                byFld = (byte) 3322849150578683832L;
                i21 -= (int) 69.74359;
                Test0128.lArrFld[i22 + 1] = i23;
                s2 += (short) (i24 * i24);
                fArr[i24] *= Test0128.fFld;
                Test0128.fFld -= 286334573993837445L;
            }
            i26 = 1;
            do {
                i23 -= (int) 77.447F;
                Test0128.instanceCount = (long) Test0128.dFld;
                Test0128.instanceCount = Test0128.instanceCount;
                switch (((i22 % 6) * 5) + 114) {
                    case 129:
                        i25 += (((i26 * i26) + s2) - Test0128.fFld);
                        i20 += (((i26 * Test0128.instanceCount) + i20) - byFld);
                        iArr3[i26][i22] += -97;
                        i21 = byFld;
                        break;
                    case 134:
                        i20 += (i26 + i23);
                        for (i27 = 1; i27 < 1; i27++) {
                            i21 -= i22;
                            i21 -= i23;
                        }
                        for (i29 = 1; i29 > 1; i29 -= 2) {
                            iArr3[i29 + 1][i29 - 1] |= i29;
                            Test0128.dFld *= i22;
                            Test0128.lArrFld[i26 - 1] += i26;
                        }
                        break;
                    case 132:
                        Test0128.dFld = i27;
                        break;
                    case 142:
                        byFld = (byte) i24;
                    case 130:
                        i21 = (int) Test0128.fFld;
                        break;
                    case 115:
                        iArr3[i22 - 1][i26 - 1] = i26;
                        break;
                    default:
                        i21 += (((i26 * i26) + i28) - Test0128.instanceCount);
                }
            } while (++i26 < 117);
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("s2 i26 i27 = " + s2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("fArr iArr3 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
                FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0128.instanceCount Test0128.fFld Test0128.dFld = " + Test0128.instanceCount + "," +
                Float.floatToIntBits(Test0128.fFld) + "," + Double.doubleToLongBits(Test0128.dFld));
        FuzzerUtils.out.println("byFld Test0128.lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0128.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
