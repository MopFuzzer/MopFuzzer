// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0784 {

    public static final int N = 400;

    public static long instanceCount = -27116L;
    public static float fFld = 23.76F;
    public static volatile double dFld = 0.35445;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public int iFld = -123;
    public short sFld = 26217;

    public static int iMeth1(int i6, long l, int i7) {

        int i8 = 19245;
        int i9 = 14;
        int i10 = 13;
        int i11 = 119;
        int i13 = -15922;
        int i14 = 56386;
        int[] iArr2 = new int[N];
        int[] iArr3 = new int[N];
        byte by = 13;
        short s1 = -13541;
        short[] sArr = new short[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr2, 37540);
        FuzzerUtils.init(iArr3, -10);
        FuzzerUtils.init(sArr, (short) 28188);
        FuzzerUtils.init(fArr, -50.178F);

        i7 <<= i6;
        l >>= i6;
        iArr2[(2 >>> 1) % N] = -3181;
        for (i8 = 13; i8 < 243; ++i8) {
            for (i10 = 1; i10 < 7; ++i10) {
                int i12 = 28194;
                i6 += (((i10 * Test0784.instanceCount) + i12) - Test0784.fFld);
                i6 += i6;
                Test0784.instanceCount ^= l;
                try {
                    i9 = (-41105 / i7);
                    i9 = (iArr3[i8 + 1] / i12);
                    i7 = (-14921 / i8);
                } catch (ArithmeticException a_e) {
                }
                iArr2 = iArr2;
                sArr = FuzzerUtils.short1array(N, (short) -10511);
                by = (byte) i6;
                for (i13 = 1; i13 < 2; ++i13) {
                    fArr = fArr;
                    i11 = s1;
                }
            }
        }
        long meth_res = i6 + l + i7 + i8 + i9 + i10 + i11 + by + i13 + i14 + s1 + FuzzerUtils.checkSum(iArr2) +
                FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(sArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(short s, int i3, int i4) {

        double d = -41.13139;
        int i5 = -6;
        int i15 = -26144;
        int i16 = 26;
        int i17 = 14298;
        int i18 = -146;
        int i19 = -1;
        int i20 = 46434;
        int i21 = -82;
        int[][] iArr1 = new int[N][N];
        boolean b = false;
        byte by1 = -79;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr1, 65088);
        FuzzerUtils.init(byArr, (byte) -45);

        for (d = 13; d < 256; d++) {
            Test0784.instanceCount = ((i3--) * (i3 &= (int) (Test0784.instanceCount >> i3)));
            iArr1[(int) (d)][(int) (d + 1)] *= (int) (--Test0784.instanceCount);
            i5 += iMeth1(i3, Test0784.instanceCount, i3);
            for (i15 = 1; i15 < 7; ++i15) {
                iArr1[(int) (d + 1)][i15] -= i3;
                i3 >>= i3;
                i16 <<= i3;
                i5 += (int) Test0784.instanceCount;
                i4 += i15;
            }
            switch ((int) ((d % 10) + 75)) {
                case 75:
                    for (i17 = 1; i17 < 7; ++i17) {
                        for (i19 = 1; i19 < 2; ++i19) {
                            i18 -= (int) Test0784.instanceCount;
                            if (b) break;
                        }
                    }
                case 76:
                    i20 += -2504;
                    break;
                case 77:
                    if (false) break;
                case 78:
                    i18 = by1;
                    break;
                case 79:
                    i20 = 220;
                    break;
                case 80:
                    i16 += (int) d;
                    break;
                case 81:
                    try {
                        i5 = (i17 % i18);
                        i18 = (i3 % i19);
                        i18 = (iArr1[(int) (d + 1)][(int) (d + 1)] / 19951);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 82:
                    try {
                        i21 = (i15 % i21);
                        i20 = (i5 % 485358284);
                        i20 = (i20 / -29465);
                    } catch (ArithmeticException a_e) {
                    }
                case 83:
                    Test0784.fFld += (float) d;
                    break;
                case 84:
                    Test0784.dFld += i5;
                    break;
                default:
                    i18 += (147 + (d * d));
            }
        }
        vMeth_check_sum += s + i3 + i4 + Double.doubleToLongBits(d) + i5 + i15 + i16 + i17 + i18 + i19 + i20 + (b ? 1 :
                0) + by1 + i21 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i, int i1) {

        float f = 31.776F, f1 = 2.371F;
        int i2 = -12;
        int i22 = 13;
        int i23 = 46;
        int[][] iArr = new int[N][N];
        short s2 = 29731;
        double d1 = 9.5656;
        boolean b1 = true;

        FuzzerUtils.init(iArr, -6609);

        for (f = 14; f < 231; f++) {
            long l1 = 4928L;
            iArr = (iArr = (iArr = (iArr = FuzzerUtils.int2array(N, (int) -1))));
            f1 += (f + i2);
            vMeth(s2, i1, i1);
            s2 += (short) (((f * i) + s2) - l1);
        }
        if (true) {
            d1 = 1;
            while (++d1 < 299) {
                iArr[(int) (d1 - 1)][(int) (d1)] -= i1;
                i += (int) (1.680F + (d1 * d1));
                for (i22 = 1; i22 < 6; i22++) {
                    i -= (int) Test0784.dFld;
                    i2 = i1;
                    i1 = (int) Test0784.instanceCount;
                    Test0784.instanceCount += i22;
                    if (b1) break;
                }
            }
        } else {
            Test0784.dFld += Test0784.instanceCount;
        }
        long meth_res = i + i1 + Float.floatToIntBits(f) + i2 + Float.floatToIntBits(f1) + s2 +
                Double.doubleToLongBits(d1) + i22 + i23 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0784 _instance = new Test0784();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i24 = -1;
        int i25 = 231;
        int i26 = 101;
        int i27 = 194;
        int i28 = 0;
        int[][] iArr4 = new int[N][N];
        boolean b2 = true;
        byte by3 = 31;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr4, 31);
        FuzzerUtils.init(lArr, 230L);

        Test0784.instanceCount *= iMeth(iFld, iFld);
        Test0784.fFld -= (float) Test0784.dFld;
        iFld = iFld;
        i24 = 1;
        do {
            iFld = (int) Test0784.instanceCount;
            try {
                iArr4[i24 + 1][i24 + 1] = (181 % iArr4[i24][i24 + 1]);
                iFld = (iFld % 44815);
                iFld = (i24 / -24);
            } catch (ArithmeticException a_e) {
            }
            for (i25 = 2; i25 < 103; i25++) {
                sFld = (short) i26;
                if (b2) {
                    Test0784.instanceCount += (((i25 * iFld) + i26) - i25);
                } else if (b2) {
                    i27 = 1;
                    do {
                        if (b2) break;
                    } while (++i27 < 2);
                } else {
                    if (b2) break;
                    iArr4[i25][i25 + 1] -= iFld;
                }
                sFld = (short) Test0784.instanceCount;
                i28 = 1;
                while ((i28 += 2) < 2) {
                    i26 += (int) Test0784.dFld;
                    Test0784.fFld -= i24;
                    iFld >>= (int) Test0784.instanceCount;
                    lArr[i24 - 1] = -1321369396L;
                    Test0784.fFld += i28;
                }
                b2 = b2;
                i26 /= (int) (by3 | 1);
                switch (((i24 % 2) * 5) + 126) {
                    case 128:
                        Test0784.instanceCount *= Test0784.instanceCount;
                        break;
                    case 135:
                        Test0784.instanceCount *= 17537L;
                        i26 += (((i25 * iFld) + i25) - sFld);
                        by3 = (byte) 12;
                        iFld += (i25 | i28);
                        break;
                }
                iFld = (int) Test0784.instanceCount;
            }
        } while (++i24 < 243);

        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 b2 i28 = " + i27 + "," + (b2 ? 1 : 0) + "," + i28);
        FuzzerUtils.out.println("by3 iArr4 lArr = " + by3 + "," + FuzzerUtils.checkSum(iArr4) + "," +
                FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0784.instanceCount Test0784.fFld Test0784.dFld = " + Test0784.instanceCount + "," +
                Float.floatToIntBits(Test0784.fFld) + "," + Double.doubleToLongBits(Test0784.dFld));
        FuzzerUtils.out.println("iFld sFld = " + iFld + "," + sFld);

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
