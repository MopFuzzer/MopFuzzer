// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0585 {

    public static final int N = 400;

    public static long instanceCount = 7277088289365737888L;
    public static volatile float fFld = 52.443F;
    public static byte byFld = 88;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public short sFld = 20283;
    public int[] iArrFld = new int[N];
    public float[] fArrFld = new float[N];

    public static void vMeth1(int i9, int i10, int i11) {

        int i12 = -14;
        int i13 = 2;
        int i14 = 91;
        int i16 = -191;
        int i17 = 8;
        int i18 = -45355;
        int i19 = 16951;
        int[] iArr1 = new int[N];
        short s = 14362;
        long l = -114L, l1 = 62L;

        FuzzerUtils.init(iArr1, 25);

        for (i12 = 22; 355 > i12; i12 += 3) {
            s += (short) (i12 + i9);
            for (l = 1; l < 14; l++) {
                int i15 = 142;
                if (false) continue;
                iArr1[(int) (l + 1)] -= i12;
                i13 *= i15;
            }
        }
        Test0585.instanceCount += l;
        i16 = 1;
        do {
            i17 = 1;
            do {
                for (i18 = i16; i18 < 1; ++i18) {
                    i14 += (((i18 * l1) + Test0585.fFld) - i14);
                    iArr1[i18 - 1] = 167;
                    l1 <<= Test0585.byFld;
                    i10 += i19;
                    s += (short) (i18 ^ l);
                }
            } while (++i17 < 7);
        } while (++i16 < 242);
        vMeth1_check_sum += i9 + i10 + i11 + i12 + i13 + s + l + i14 + i16 + i17 + i18 + i19 + l1 +
                FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i4, int i5, int i6) {

        int i7 = 235;
        int i8 = -4;
        int i20 = -23167;
        int i21 = -7;
        int i22 = 220;
        int i23 = -21415;
        int[] iArr2 = new int[N];
        double d = 83.17302;
        short s1 = 30222;

        FuzzerUtils.init(iArr2, 0);

        for (i7 = 6; 127 > i7; i7++) {
            vMeth1(i7, i7, -41);
            i4 += 53;
            i8 /= (int) (i5 | 1);
            i8 += (i7 | Test0585.instanceCount);
            i4 = i20;
            i5 += (int) Test0585.instanceCount;
            Test0585.instanceCount = i20;
            i4 = (int) Test0585.instanceCount;
            i21 = 1;
            while (++i21 < 13) {
                i4 *= (int) d;
                for (i22 = 1; i22 < 1; ++i22) {
                    Test0585.fFld -= i21;
                }
                iArr2[i21] *= s1;
                s1 += (short) Test0585.fFld;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i20 + i21 + Double.doubleToLongBits(d) + i22 + i23 + s1 +
                FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i1) {

        int i2 = 13;
        int i3 = -7;
        int i24 = -11;
        int i25 = 8;
        int i26 = 65045;
        int i27 = -4;
        int[][] iArr = new int[N][N];
        boolean b = false;
        long[] lArr = new long[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, 27402);
        FuzzerUtils.init(lArr, -4909L);
        FuzzerUtils.init(dArr, 30.85326);

        for (i2 = 2; 129 > i2; ++i2) {
            iArr[i2][i2] *= iMeth(i2, i3, i2);
            lArr[i2 - 1] = i1;
            i3 = i1;
            for (i24 = 12; i24 > 1; i24 -= 3) {
                i3 = 185;
                i1 -= Test0585.byFld;
                b = b;
                for (i26 = 1; 4 > i26; ++i26) {
                    i27 *= 6;
                    i27 = (int) Test0585.instanceCount;
                    i25 = (int) Test0585.instanceCount;
                    i25 -= Test0585.byFld;
                    dArr[i2 - 1] -= Test0585.instanceCount;
                }
                Test0585.fFld %= 10L;
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i24 + i25 + (b ? 1 : 0) + i26 + i27 + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0585 _instance = new Test0585();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 135, i28 = 61260, i29 = -45937, i30 = 76, i31 = 22357, i32 = 44333, i33 = -10, i34 = -32291, i35 = 9;
        byte by = 127;
        double d1 = 93.34441;
        boolean b1 = false;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, -14463L);

        i += (-(i *= (++i)));
        Test0585.fFld = (iArrFld[(i >>> 1) % N] / (((-i) - (--iArrFld[(i >>> 1) % N])) | 1));
        vMeth(17262);
        i <<= (int) Test0585.instanceCount;
        sFld += (short) i;
        iArrFld[(i >>> 1) % N] = (int) Test0585.instanceCount;
        i -= (int) Test0585.fFld;
        iArrFld[(i >>> 1) % N] &= i;
        for (i28 = 7; i28 < 289; i28++) {
            int i36 = 14;
            fArrFld[i28 + 1] += i;
            switch (i28 + 53) {
                case 53:
                    for (i30 = 4; 89 > i30; ++i30) {
                        Test0585.fFld = 126.142F;
                        iArrFld[i28 + 1] = -47500;
                        Test0585.byFld = (byte) Test0585.instanceCount;
                        i = i31;
                        i29 <<= -14075;
                        for (i32 = 1; 2 > i32; i32++) {
                            i29 += i32;
                            i29 = 54;
                        }
                        for (i34 = i28; i34 < 2; i34++) {
                            iArrFld[i30 + 1] += (int) Test0585.fFld;
                            i33 = i31;
                            i29 >>= by;
                            i33 = 7558;
                            i += (3572 + (i34 * i34));
                            i33 *= i32;
                            i += i32;
                            Test0585.instanceCount += (i34 | i34);
                            d1 *= i30;
                        }
                    }
                    break;
                case 54:
                    Test0585.fFld += Test0585.instanceCount;
                    break;
                case 55:
                    Test0585.fFld -= Test0585.instanceCount;
                    break;
                case 56:
                    Test0585.instanceCount -= i35;
                    break;
                case 57:
                    lArr1[i28 + 1] = i31;
                    break;
                case 58:
                    Test0585.fFld += (i28 * i28);
                case 59:
                    i35 += i28;
                    break;
                case 60:
                    i29 = i35;
                    break;
                case 61:
                    sFld = (short) i;
                case 62:
                    i31 += (int) 6L;
                case 63:
                    i35 = i32;
                case 64:
                    i31 = -192;
                case 65:
                    Test0585.fFld = -225;
                    break;
                case 66:
                    iArrFld[i28 - 1] += i36;
                case 67:
                    i = i32;
                    break;
                case 68:
                    if (b1) continue;
                    break;
                case 69:
                case 70:
                    i31 = i29;
                case 71:
                    i33 -= (int) 99371264857282682L;
                    break;
                case 72:
                    Test0585.instanceCount = Test0585.instanceCount;
                    break;
                case 73:
                    i33 += (int) Test0585.instanceCount;
                    break;
                case 74:
                    i33 += i32;
                    break;
                case 75:
                    iArrFld[i28 - 1] = (int) Test0585.instanceCount;
                    break;
                case 76:
                    by = (byte) i33;
                    break;
                case 77:
                    i36 -= Test0585.byFld;
                case 78:
                    i36 <<= (int) Test0585.instanceCount;
                    break;
                case 79:
                    i36 = 132;
                    break;
                case 80:
                    if (b1) continue;
                    break;
                case 81:
                    i33 += (i28 * i28);
                    break;
                case 82:
                    iArrFld = FuzzerUtils.int1array(N, (int) 62);
                    break;
                case 83:
                    i36 += i28;
                case 84:
                    Test0585.instanceCount = Test0585.instanceCount;
                    break;
                case 85:
                    Test0585.instanceCount += (i28 * i28);
                    break;
                case 86:
                    i33 = i30;
                    break;
                case 87:
                    i35 += (i28 - i36);
                case 88:
                    iArrFld[i28 + 1] <<= i36;
                    break;
                case 89:
                    i -= (int) Test0585.fFld;
                case 90:
                    i35 = (int) Test0585.instanceCount;
                    break;
                case 91:
                    i += i32;
                case 92:
                    i33 = (int) Test0585.instanceCount;
                    break;
                case 93:
                    iArrFld[i28] = (int) Test0585.fFld;
                    break;
                case 94:
                    iArrFld[i28 + 1] += i29;
                    break;
                case 95:
                    i36 <<= i28;
                    break;
                case 96:
                    Test0585.fFld += 10L;
                    break;
                case 97:
                    i35 /= (int) ((long) (d1) | 1);
                    break;
                case 98:
                    if (false) break;
                    break;
                case 99:
                    Test0585.instanceCount *= i32;
                case 100:
                    try {
                        i35 = (i33 % i33);
                        i29 = (-25309 % i31);
                        i31 = (33706 % i31);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 101:
                    i31 += (int) Test0585.fFld;
                    break;
                case 102:
                    i = i32;
                    break;
                case 103:
                    i33 = i28;
                case 104:
                    Test0585.fFld = Test0585.fFld;
                    break;
                case 105:
                    i31 = i31;
                    break;
                case 106:
                    Test0585.instanceCount = (long) d1;
                case 107:
                    i36 += (i28 * i28);
                    break;
                case 108:
                    iArrFld[i28 + 1] = (int) Test0585.instanceCount;
                case 109:
                    i -= i33;
                case 110:
                    fArrFld[i28 - 1] -= i34;
                case 111:
                    Test0585.instanceCount += (i28 * i28);
                    break;
                case 112:
                    i33 += (int) Test0585.instanceCount;
                    break;
                case 113:
                    i29 += -61586;
                    break;
                case 114:
                    i36 += (i28 - i32);
                    break;
                case 115:
                    i += i36;
                case 116:
                    i = -7;
                    break;
                case 117:
                    try {
                        iArrFld[i28 - 1] = (95 / i35);
                        iArrFld[i28 - 1] = (i33 % i30);
                        iArrFld[i28] = (i34 / i36);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 118:
                    iArrFld[i28 + 1] = i;
                case 119:
                    if (b1) continue;
                    break;
                case 120:
                    Test0585.instanceCount += i28;
                    break;
                case 121:
                    i31 += (int) Test0585.fFld;
                    break;
                case 122:
                    try {
                        i = (418402465 / i29);
                        i29 = (i30 % i35);
                        i35 = (-32 % i28);
                    } catch (ArithmeticException a_e) {
                    }
            }
        }

        FuzzerUtils.out.println("i i28 i29 = " + i + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 i34 i35 = " + i33 + "," + i34 + "," + i35);
        FuzzerUtils.out.println("by d1 b1 = " + by + "," + Double.doubleToLongBits(d1) + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0585.instanceCount Test0585.fFld Test0585.byFld = " + Test0585.instanceCount + "," +
                Float.floatToIntBits(Test0585.fFld) + "," + Test0585.byFld);
        FuzzerUtils.out.println("sFld iArrFld fArrFld = " + sFld + "," + FuzzerUtils.checkSum(iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
