// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0306 {

    public static final int N = 400;

    public static long instanceCount = -185L;
    public static int iFld1 = -12;
    public static boolean bFld = false;
    public static int iFld2 = 5796;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0306.iArrFld, -5265);
    }

    public int iFld = -237;
    public double[] dArrFld = new double[N];
    public float[] fArrFld = new float[N];

    public static void vMeth1(int i1) {


        i1 = (i1++);
        vMeth1_check_sum += i1;
    }

    public static long lMeth(long l, long l1, long l2) {

        int i6 = -173, i7 = -199, i8 = 190, i9 = 52770, i10 = 76, i11 = 135;
        short s = 17403;

        for (i6 = 18; i6 < 381; i6++) {
            for (i8 = 1; i8 < 5; i8++) {
                for (i10 = i8; i10 < 2; i10++) {
                    s = (short) l1;
                    switch ((((i11 >>> 1) % 6) * 5) + 78) {
                        case 87:
                        case 80:
                            i9 = Test0306.iFld1;
                            break;
                        case 105:
                            Test0306.iArrFld[i8 - 1] >>= i10;
                            i7 = (int) l2;
                        case 106:
                            Test0306.iFld1 -= i11;
                            i7 += i10;
                            i7 += i10;
                            l1 *= Test0306.iFld1;
                            break;
                        case 91:
                            s += (short) (((i10 * Test0306.iFld1) + i11) - i9);
                            l2 -= i6;
                            Test0306.iFld1 = i10;
                            break;
                        case 96:
                            Test0306.iFld1 += i10;
                        default:
                            Test0306.iFld1 -= i7;
                    }
                }
            }
        }
        long meth_res = l + l1 + l2 + i6 + i7 + i8 + i9 + i10 + i11 + s;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth(int i4, int i5) {


        i5 *= (int) lMeth(Test0306.instanceCount, Test0306.instanceCount, Test0306.instanceCount);
        long meth_res = i4 + i5;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(double d1, float f1) {

        int i2 = -8, i3 = -209, i12 = 119, i13 = 49769, i14 = 11, i15 = -49383;
        float f2 = -2.160F;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, 15.199F);

        vMeth1(++i2);
        Test0306.instanceCount -= i2;
        for (f2 = 10; f2 < 294; f2++) {
            Test0306.instanceCount += (iMeth(i3, Test0306.iFld1) + i2);
            Test0306.iFld1 += (int) (f2 * f2);
            fArr[(int) (f2 - 1)][(int) (f2 + 1)] *= Test0306.instanceCount;
            for (i12 = 1; i12 < 6; i12++) {
                for (i14 = 1; 2 > i14; i14++) {
                    i13 = i14;
                    i2 += (i14 * i14);
                    i15 += (i14 - i15);
                    i3 += (i14 - i14);
                    Test0306.iFld1 = i3;
                    f1 *= -56003;
                    Test0306.iFld1 += (int) -111.793F;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i2 + Float.floatToIntBits(f2) + i3
                + i12 + i13 + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0306 _instance = new Test0306();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 30411;
        int i16 = 128;
        int i17 = 8588;
        int i18 = 35513;
        int i19 = -76;
        int i20 = 169;
        int i21 = -7;
        int i22 = 9863;
        int i23 = 36232;
        int[][] iArr = new
                int[N][N];
        float f = 0.413F, f3 = 2.9F;
        double d = 0.103389;

        FuzzerUtils.init(iArr, 8);

        switch ((((((int) (Test0306.instanceCount * -1143874108L)) >>> 1) % 10) * 5) + 31) {
            case 69:
                i = 1;
                do {
                    iFld = (int) ((++Test0306.instanceCount) * iFld);
                    iFld >>= i;
                } while (++i < 317);
                f = ((iFld = (int) (d - iFld)) + iFld);
                vMeth(d, f);
                break;
            case 33:
                Test0306.instanceCount = 172;
                f -= i16;
                Test0306.instanceCount *= Test0306.iFld1;
                break;
            case 72:
                for (f3 = 2; f3 < 366; f3 += 2) {
                    for (i18 = 5; i18 < 138; i18++) {
                        i19 <<= i19;
                        i17 = Test0306.iFld1;
                        dArrFld[(int) (f3 - 1)] -= i17;
                        f *= i19;
                    }
                    i20 = 1;
                    while (++i20 < 138) {
                        for (i21 = 1; 1 > i21; i21 += 2) {
                            fArrFld[i20 - 1] += i;
                            i22 += (i21 ^ i22);
                            Test0306.instanceCount += Test0306.instanceCount;
                            Test0306.instanceCount += (i21 * i21);
                        }
                        f += Test0306.instanceCount;
                        f = -17980;
                        Test0306.iFld1 += (((i20 * i20) + Test0306.instanceCount) - f);
                        i22 += i20;
                        iFld += (((i20 * i16) + Test0306.instanceCount) - i22);
                        if (Test0306.bFld) break;
                    }
                    i23 = 1;
                    while (++i23 < 138) {
                        i16 += Test0306.iFld1;
                        Test0306.instanceCount += (long) (0.200F + (i23 * i23));
                    }
                }
                break;
            case 47:
                Test0306.iArrFld[(Test0306.iFld1 >>> 1) % N] >>= i18;
                break;
            case 51:
                Test0306.instanceCount >>= Test0306.iFld1;
            case 73:
                i17 <<= i16;
                break;
            case 81:
                Test0306.iFld2 += (int) d;
                break;
            case 64:
                iArr = iArr;
                break;
            case 52:
                i17 = i23;
                break;
            case 79:
                f /= (i20 | 1);
                break;
        }

        FuzzerUtils.out.println("i f d = " + i + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i16 f3 i17 = " + i16 + "," + Float.floatToIntBits(f3) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0306.instanceCount iFld Test0306.iFld1 = " + Test0306.instanceCount + "," + iFld + "," +
                Test0306.iFld1);
        FuzzerUtils.out.println("Test0306.bFld Test0306.iFld2 Test0306.iArrFld = " + (Test0306.bFld ? 1 : 0) + "," + Test0306.iFld2 + "," +
                FuzzerUtils.checkSum(Test0306.iArrFld));
        FuzzerUtils.out.println("dArrFld fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
