// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0821 {

    public static final int N = 400;

    public static long instanceCount = -26818L;
    public static short sFld = 24888;
    public static boolean bFld = false;
    public static byte byFld = 51;
    public static float fFld = -48.942F;
    public static int[] iArrFld1 = new int[N];
    public static boolean[] bArrFld = new boolean[N];
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0821.iArrFld1, 10);
        FuzzerUtils.init(Test0821.bArrFld, false);
    }

    public int iFld = 11;
    public double[] dArrFld = new double[N];
    public int[] iArrFld = new int[N];

    public static void vMeth() {

        byte by = -44;
        int i3 = -3, i4 = -14, i5 = 200, i6 = 12007, i7 = 2, i8 = -223, i9 = 4002;
        float f = 27.878F;

        Test0821.instanceCount |= Test0821.instanceCount;
        by = (byte) -28;
        Test0821.instanceCount += i3;
        i4 = 1;
        while (++i4 < 306) {
            for (i5 = 1; i5 < 5; ++i5) {
                i6 = (int) -24660L;
                i6 = Test0821.sFld;
                for (i7 = 1; i7 < 2; i7++) {
                    i8 *= i6;
                    i3 >>= 4;
                }
                i8 >>= -14;
                Test0821.instanceCount += (long) 39.125338;
                i9 = 1;
                do {
                    Test0821.iArrFld1[i4] = (int) -56761L;
                    f *= i4;
                } while (++i9 < 2);
            }
        }
        vMeth_check_sum += by + i3 + i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f);
    }

    public static int iMeth(long l) {

        int i2 = 242, i10 = -225, i11 = -105, i12 = 6;
        long l1 = 0L;
        float f1 = 2.91F;
        float[] fArr = new float[N];
        boolean b = true;

        FuzzerUtils.init(fArr, 1.261F);

        i2 = 1;
        do {
            vMeth();
            for (l1 = 1; 8 > l1; ++l1) {
                for (i11 = i2; 2 > i11; i11++) {
                    Test0821.iArrFld1[i2 - 1] >>>= i2;
                    Test0821.instanceCount += 4227102273L;
                    Test0821.instanceCount = l1;
                    f1 = i2;
                    Test0821.iArrFld1[i2 - 1] >>= (int) l1;
                }
                f1 -= i11;
                f1 -= f1;
                fArr[(int) (l1)] = (float) -87.16429;
                Test0821.bArrFld[(int) (l1)] = b;
                i10 += (int) (((l1 * f1) + i11) - i10);
                i10 += (-109 + (l1 * l1));
            }
        } while (++i2 < 196);
        long meth_res = l + i2 + l1 + i10 + i11 + i12 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth(short s, int i1) {

        int i13 = 253, i14 = -24145;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, 2.344F);

        i1 = (int) (iMeth(Test0821.instanceCount) + Test0821.instanceCount);
        for (float f2 : fArr1) {
            Test0821.instanceCount = s;
            i1 >>= i1;
            Test0821.instanceCount = i1;
            Test0821.instanceCount <<= i1;
            switch ((((i1 >>> 1) % 2) * 5) + 40) {
                case 47:
                case 46:
                    switch (((i1 >>> 1) % 3) + 122) {
                        case 122:
                        case 123:
                            try {
                                i1 = (i1 / -84);
                                i1 = (i1 / i1);
                                i1 = (Test0821.iArrFld1[(i1 >>> 1) % N] / i1);
                            } catch (ArithmeticException a_e) {
                            }
                            i1 >>= Test0821.sFld;
                            break;
                        case 124:
                            for (i13 = 1; i13 < 4; i13++) {
                                i14 *= -59;
                                i1 += (int) f2;
                                f2 += f2;
                                i1 -= (int) Test0821.instanceCount;
                            }
                            break;
                        default:
                            Test0821.bFld = Test0821.bFld;
                    }
                default:
                    if (Test0821.bFld) continue;
            }
        }
        long meth_res = s + i1 + i13 + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0821 _instance = new Test0821();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 20985;
        int i15 = -244;
        int i16 = -8;
        int i17 = 64383;
        int i18 = -53857;
        int i19 = -7049;
        int i20 = -35799;
        int i21 = 101;
        int i22 = 46;
        int i23 = -4835;
        int[][] iArr = new int[N][N];
        double d = -1.15189, d1 = 2.61605;
        byte[] byArr = new byte[N];
        float[] fArr2 = new float[N];

        FuzzerUtils.init(iArr, -190);
        FuzzerUtils.init(byArr, (byte) -38);
        FuzzerUtils.init(fArr2, 0.736F);

        i = i;
        dArrFld[(i >>> 1) % N] = (--iArrFld[(53227 >>> 1) % N]);
        i = (int) lMeth(Test0821.sFld, i);
        i += (int) Test0821.instanceCount;
        i15 = 1;
        do {
            iArr[i15][i15 + 1] *= i15;
            iArr[i15][i15] *= -25103;
            for (i16 = 1; 129 > i16; ++i16) {
                Test0821.byFld += (byte) i15;
                iFld = 146;
                byArr[(iFld >>> 1) % N] |= (byte) Test0821.instanceCount;
            }
            i17 += i16;
            for (i18 = 4; i18 < 129; i18++) {
                for (i20 = 2; i18 < i20; --i20) {
                    i21 -= 192;
                    Test0821.fFld += i17;
                    if (Test0821.bFld) continue;
                }
                Test0821.iArrFld1 = Test0821.iArrFld1;
                switch (((i21 >>> 1) % 1) + 90) {
                    case 90:
                        Test0821.bArrFld[i15] = Test0821.bFld;
                        i += (int) 12L;
                        switch (((77 >>> 1) % 10) + 72) {
                            case 72:
                                for (d = 1; d < 2; d++) {
                                    if (Test0821.bFld) break;
                                    i22 -= (int) Test0821.instanceCount;
                                    fArr2[(int) (d)] = (float) d;
                                    iArrFld[i15] = i22;
                                    i22 += (int) (d - i18);
                                }
                                d1 += i16;
                                iArr[i18 - 1][i18] += -154;
                                break;
                            case 73:
                                if (Test0821.bFld) break;
                            case 74:
                                i17 >>= iFld;
                                break;
                            case 75:
                                Test0821.instanceCount += (long) 36.752F;
                                break;
                            case 76:
                                Test0821.iArrFld1[(iFld >>> 1) % N] += (int) 1.51034;
                                break;
                            case 77:
                                Test0821.iArrFld1[i18] -= i23;
                                break;
                            case 78:
                            case 79:
                                i22 = i17;
                                break;
                            case 80:
                            case 81:
                                Test0821.fFld = i17;
                                break;
                        }
                    default:
                        i = i20;
                }
            }
        } while (++i15 < 195);

        FuzzerUtils.out.println("i i15 i16 = " + i + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 d = " + i20 + "," + i21 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i22 d1 i23 = " + i22 + "," + Double.doubleToLongBits(d1) + "," + i23);
        FuzzerUtils.out.println("iArr byArr fArr2 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(byArr)
                + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test0821.instanceCount Test0821.sFld Test0821.bFld = " + Test0821.instanceCount + "," + Test0821.sFld +
                "," + (Test0821.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0821.byFld iFld Test0821.fFld = " + Test0821.byFld + "," + iFld + "," +
                Float.floatToIntBits(Test0821.fFld));
        FuzzerUtils.out.println("dArrFld iArrFld Test0821.iArrFld1 = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0821.iArrFld1));
        FuzzerUtils.out.println("Test0821.bArrFld = " + FuzzerUtils.checkSum(Test0821.bArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
