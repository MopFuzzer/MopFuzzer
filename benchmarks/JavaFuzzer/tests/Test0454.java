// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test0454 {

    public static final int N = 400;

    public static long instanceCount = 4L;
    public static double dFld = 2.130072;
    public static short sFld = 21315;
    public static int iFld = 2;
    public static int iFld1 = -7;
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0454.iArrFld, 159);
    }

    public static void vMeth(int i8, int i9, int i10) {

        int i11 = 1, i12 = 181, i13 = 35786, i14 = 7410, i15 = -4, i16 = 59, i17 = 9, i18 = -186;
        float f1 = -16.524F;
        double d = 62.62491;

        for (i11 = 13; i11 < 342; ++i11) {
            f1 -= i10;
            for (i13 = 1; i13 < 5; i13++) {
                float f2 = 122.128F;
                for (i15 = 2; i15 > 1; i15--) {
                    Test0454.instanceCount = (long) f1;
                    if (i13 != 0) {
                        vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16
                                + i17 + i18 + Double.doubleToLongBits(d);
                        return;
                    }
                }
                for (i17 = i11; 2 > i17; ++i17) {
                    Test0454.instanceCount ^= 5;
                }
                i16 = i11;
                Test0454.iArrFld[i13 + 1] *= i12;
                i16 *= (int) f1;
                i14 = i14;
                i16 += (((i13 * i11) + i14) - i18);
                f2 += (((i13 * i11) + Test0454.instanceCount) - i17);
            }
            d = i16;
        }
        vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 + i17 + i18 +
                Double.doubleToLongBits(d);
    }

    public static int iMeth1(int i7) {

        int i19 = 18, i20 = -34335, i21 = -41362, i22 = 112;
        boolean b = true;
        double d1 = 0.77896;
        byte by1 = -28;
        float f3 = -39.270F;
        short s = 31988;

        vMeth(i7, i7, i7);
        i7 |= i7;
        for (i19 = 5; i19 < 274; ++i19) {
            i20 += (i19 + i7);
            b = false;
            for (d1 = 1; 6 > d1; d1++) {
                Test0454.iArrFld[(int) (d1)] >>= by1;
                Test0454.instanceCount = i19;
                Test0454.instanceCount = (long) f3;
                i22 = 1;
                while (++i22 < 2) {
                    i20 = i19;
                    i21 += i7;
                    s = (short) i21;
                }
            }
            i21 = i20;
            i7 <<= 7;
        }
        long meth_res = i7 + i19 + i20 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i21 + by1 +
                Float.floatToIntBits(f3) + i22 + s;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i5, int i6) {

        float f = 2.48F;
        float[] fArr = new float[N];
        int i23 = -46127, i24 = 114;
        boolean b1 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(fArr, -125.218F);
        FuzzerUtils.init(lArr, -130L);

        f = i6;
        Test0454.instanceCount = (((i6 - i6) - Test0454.iArrFld[(i5 >>> 1) % N]) - iMeth1(i5));
        for (i23 = 8; 371 > i23; i23 += 3) {
            switch (((i23 % 9) * 5) + 64) {
                case 100:
                    fArr[i23 - 1] -= (float) Test0454.dFld;
                    i6 = (int) Test0454.instanceCount;
                    Test0454.instanceCount += (long) 22.876F;
                    break;
                case 109:
                    f += (((i23 * i5) + f) - i5);
                    break;
                case 106:
                    f = i6;
                    switch ((i23 % 10) + 119) {
                        case 119:
                            switch ((i23 % 4) + 2) {
                                case 2:
                                    i6 *= -3;
                                    Test0454.dFld += i24;
                                    f -= Test0454.sFld;
                                    f += (((i23 * Test0454.instanceCount) + Test0454.instanceCount) - i6);
                                case 3:
                                    lArr[i23 - 1] = i23;
                                    break;
                                case 4:
                                    i6 <<= 47711;
                                case 5:
                                default:
                                    Test0454.instanceCount <<= i23;
                            }
                        case 120:
                            f = i5;
                            break;
                        case 121:
                        case 122:
                            i24 <<= 9159;
                            break;
                        case 123:
                            i24 |= i24;
                            break;
                        case 124:
                            Test0454.iArrFld[i23 - 1] >>= i5;
                            break;
                        case 125:
                            i6 -= Test0454.sFld;
                            break;
                        case 126:
                            i24 += (i23 * i23);
                            break;
                        case 127:
                            if (b1) continue;
                        case 128:
                            Test0454.instanceCount >>>= 0;
                    }
                    break;
                case 79:
                    i24 /= (int) (i5 | 1);
                    break;
                case 68:
                    i5 += (int) Test0454.instanceCount;
                    break;
                case 92:
                    Test0454.instanceCount -= (long) Test0454.dFld;
                    break;
                case 73:
                    Test0454.dFld -= Test0454.dFld;
                case 108:
                    i6 *= (int) 120.841F;
                case 89:
            }
        }
        long meth_res = i5 + i6 + Float.floatToIntBits(f) + i23 + i24 + (b1 ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0454 _instance = new Test0454();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i1 = -94, i2 = -10221, i3 = -9, i4 = 220, i26 = 10, i27 = -2, i28 = 231, i29 = 42;
        byte by = -24;
        boolean b2 = false;
        float f4 = 2.622F;
        long[] lArr1 = new long[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(lArr1, 762962347L);
        FuzzerUtils.init(dArr, -1.12421);

        for (int i : Test0454.iArrFld) {
            for (i1 = 63; i1 > 1; --i1) {
                i2 <<= (by++);
                for (i3 = 1; i3 < 2; ++i3) {
                    Test0454.instanceCount = iMeth(i4, i4);
                    i2 = i3;
                    lArr1[(-194 >>> 1) % N] += 1;
                }
                Test0454.iArrFld[i1] -= i;
                if (false) continue;
                Test0454.iArrFld[i1 - 1] -= (int) Test0454.instanceCount;
                i4 = i;
                i2 += i1;
                lArr1 = lArr1;
                i2 = (int) Test0454.instanceCount;
                Test0454.iArrFld[i1 - 1] &= by;
            }
            for (i26 = 1; i26 < 63; i26++) {
                for (i28 = i26; 2 > i28; i28++) {
                    if (b2) {
                        i4 += (i28 | i26);
                        i2 *= i4;
                    }
                    Test0454.dFld = Test0454.instanceCount;
                    Test0454.instanceCount *= Test0454.instanceCount;
                    Test0454.instanceCount -= (long) f4;
                    Test0454.iFld = i3;
                    if (b2) {
                        i2 = i1;
                        i4 += i28;
                        dArr[i28 + 1] *= Test0454.instanceCount;
                        i4 += (((i28 * i) + i) - Test0454.iFld1);
                    }
                    i2 += i28;
                }
            }
        }

        FuzzerUtils.out.println("i1 i2 by = " + i1 + "," + i2 + "," + by);
        FuzzerUtils.out.println("i3 i4 i26 = " + i3 + "," + i4 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("b2 f4 lArr1 = " + (b2 ? 1 : 0) + "," + Float.floatToIntBits(f4) + "," +
                FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0454.instanceCount Test0454.dFld Test0454.sFld = " + Test0454.instanceCount + "," +
                Double.doubleToLongBits(Test0454.dFld) + "," + Test0454.sFld);
        FuzzerUtils.out.println("Test0454.iFld Test0454.iFld1 Test0454.iArrFld = " + Test0454.iFld + "," + Test0454.iFld1 + "," +
                FuzzerUtils.checkSum(Test0454.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
