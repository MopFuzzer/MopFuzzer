// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test0167 {

    public static final int N = 400;

    public static long instanceCount = 10L;
    public static int iFld = 5;
    public static boolean bFld = true;
    public static float fFld = -49.64F;
    public static int iFld1 = 2;
    public static byte byFld = -103;
    public static double dFld = -68.34823;
    public static long[] lArrFld = new long[N];
    public static int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0167.lArrFld, -2005190906927398604L);
        FuzzerUtils.init(Test0167.iArrFld, -141);
        FuzzerUtils.init(Test0167.dArrFld, -125.12507);
        FuzzerUtils.init(Test0167.fArrFld, 1.533F);
    }

    public static void vMeth() {

        int i5 = -13, i6 = -8, i7 = -191, i8 = -18, i9 = 45405, i10 = 12, i11 = 14311, i12 = 14, i13 = 10, i14 = 7;
        byte by = -3;
        float f = 7.622F;
        double d = 2.48985;

        Test0167.iFld = -228;
        for (i5 = 10; i5 < 187; i5++) {
            for (i7 = 1; i7 < 9; i7 += 2) {
                i6 <<= -14532;
                by &= (byte) i7;
                for (i9 = 1; i9 < 3; i9++) {
                    i8 = (int) f;
                }
            }
            i8 >>= i6;
            for (i11 = 1; i11 < 9; i11++) {
                for (i13 = 1; i13 < 2; i13++) {
                    switch (((4 >>> 1) % 6) + 75) {
                        case 75:
                            i6 = (int) Test0167.instanceCount;
                        case 76:
                            if (Test0167.bFld) break;
                            Test0167.iArrFld[i13] += 27445;
                            break;
                        case 77:
                            i14 = 129;
                            break;
                        case 78:
                            d = Test0167.iFld;
                            break;
                        case 79:
                            f += (-8 + (i13 * i13));
                            break;
                        case 80:
                            Test0167.iArrFld[i5 + 1] <<= i5;
                            break;
                    }
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + by + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 +
                Double.doubleToLongBits(d);
    }

    public static int iMeth1() {

        int i15 = -56063, i16 = 107, i17 = -35476, i18 = -59160;
        double d1 = 1.89195;
        byte by1 = 91;

        Test0167.instanceCount = (Test0167.lArrFld[(Test0167.iFld >>> 1) % N] = Test0167.instanceCount);
        vMeth();
        for (i15 = 14; 231 > i15; ++i15) {
            float f1 = 113.817F;
            Test0167.iFld -= Test0167.iFld;
            f1 += (1897523785942096198L + (i15 * i15));
            Test0167.iFld = -157;
        }
        d1 += 118022178L;
        by1 *= (byte) d1;
        Test0167.instanceCount -= i15;
        Test0167.iArrFld[(i16 >>> 1) % N] -= (int) -58.1014F;
        i16 = by1;
        for (i17 = 319; i17 > 7; i17--) {
            Test0167.instanceCount -= Test0167.iFld;
            Test0167.bFld = true;
            i16 += (i17 * i17);
        }
        long meth_res = i15 + i16 + Double.doubleToLongBits(d1) + by1 + i17 + i18;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i) {

        int i1 = 1, i2 = 15010, i3 = 70, i4 = -64607, i19 = -142, i20 = 76, i21 = -182;
        short s = -6746;
        double d2 = 118.82353;
        byte by2 = -106;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -1.299F);

        for (i1 = 16; i1 < 350; i1++) {
            i2 = (i2 + i);
            for (i3 = 1; i3 < 5; ++i3) {
                switch (((i3 % 7) * 5) + 112) {
                    case 133:
                        s = (short) (-(++i));
                        i4 += i3;
                        break;
                    case 115:
                        iMeth1();
                        i += (((i3 * Test0167.instanceCount) + Test0167.fFld) - i19);
                        Test0167.iFld += (((i3 * s) + i4) - Test0167.instanceCount);
                        break;
                    case 146:
                        Test0167.fFld /= 29;
                        fArr[i1 + 1] = i19;
                        for (i20 = 1; i20 < 2; ++i20) {
                            d2 *= 180;
                            by2 = (byte) d2;
                            i21 *= -71;
                        }
                    case 130:
                        try {
                            i4 = (i1 % -87);
                            Test0167.iFld1 = (38 % i);
                            i21 = (i2 / 23564);
                        } catch (ArithmeticException a_e) {
                        }
                        break;
                    case 147:
                    case 129:
                        if (Test0167.bFld) break;
                        break;
                    case 123:
                        Test0167.fFld -= 2.496F;
                        break;
                    default:
                        Test0167.iFld += i3;
                }
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + s + i19 + i20 + i21 + Double.doubleToLongBits(d2) + by2 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0167 _instance = new Test0167();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i22 = 4, i23 = -30960, i24 = 1, i25 = 55848, i26 = 56778, i27 = 233, i28 = 207, i29 = -205, i30 = -7443, i32 = -33296, i33 = -13;

        iMeth(Test0167.iFld);
        Test0167.dArrFld = Test0167.dArrFld;
        for (i22 = 4; 138 > i22; i22++) {
            i23 = Test0167.iFld1;
            Test0167.iFld += (((i22 * Test0167.iFld1) + Test0167.instanceCount) - Test0167.iFld);
            i23 -= (int) -43.66210;
            i24 += (i22 + Test0167.instanceCount);
        }
        for (i25 = 5; 190 > i25; i25++) {
            i24 = (int) Test0167.instanceCount;
            i23 += (i25 | Test0167.instanceCount);
            Test0167.instanceCount = i23;
            for (i27 = 8; i27 < 136; ++i27) {
                i23 = i25;
                Test0167.iArrFld[i27] = Test0167.byFld;
                for (i29 = 1; i29 < 2; i29++) {
                    Test0167.dArrFld[i25 - 1] += Test0167.dFld;
                    Test0167.dFld += Test0167.dFld;
                }
                i28 &= Test0167.iFld1;
                i28 |= i22;
                Test0167.fFld += i26;
                if (Test0167.bFld) continue;
                i28 = (int) -1.918F;
            }
            Test0167.iFld >>= i27;
            Test0167.instanceCount = i24;
        }
        try {
            Test0167.dFld += Test0167.fFld;
            for (int i31 : Test0167.iArrFld) {
                for (i32 = 63; i32 > 1; i32--) {
                    Test0167.fArrFld[i32] *= i25;
                    Test0167.dFld -= i25;
                }
            }
        } catch (UserDefinedExceptionTest0167 exc2) {
            Test0167.iFld <<= i23;
        } catch (NegativeArraySizeException exc3) {
            i33 -= (int) Test0167.instanceCount;
        }

        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i32 i33 = " + i32 + "," + i33);

        FuzzerUtils.out.println("Test0167.instanceCount Test0167.iFld Test0167.bFld = " + Test0167.instanceCount + "," + Test0167.iFld +
                "," + (Test0167.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0167.fFld Test0167.iFld1 Test0167.byFld = " + Float.floatToIntBits(Test0167.fFld) + "," +
                Test0167.iFld1 + "," + Test0167.byFld);
        FuzzerUtils.out.println("Test0167.dFld Test0167.lArrFld Test0167.iArrFld = " + Double.doubleToLongBits(Test0167.dFld) + "," +
                FuzzerUtils.checkSum(Test0167.lArrFld) + "," + FuzzerUtils.checkSum(Test0167.iArrFld));
        FuzzerUtils.out.println("Test0167.dArrFld Test0167.fArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0167.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0167.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}

///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest0167 extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
