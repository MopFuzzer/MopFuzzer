// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test0109 {

    public static final int N = 400;

    public static volatile long instanceCount = 2563376150L;
    public static int iFld = -235;
    public static float fFld = -104.13F;
    public static long[] lArrFld = new long[N];
    public static int[] iArrFld = new int[N];
    public static float[][] fArrFld = new float[N][N];
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0109.lArrFld, -205L);
        FuzzerUtils.init(Test0109.iArrFld, 1);
        FuzzerUtils.init(Test0109.fArrFld, -8.8F);
    }

    public static int iMeth(long l, double d2, float f1) {

        int i6 = 57;
        int i7 = -31010;
        int i8 = 41042;
        int i9 = 25448;
        int[][] iArr1 = new int[N][N];
        double d3 = -43.54283;
        byte by = -111;
        boolean b = false;
        short[] sArr = new short[N];

        FuzzerUtils.init(iArr1, -19);
        FuzzerUtils.init(sArr, (short) -10477);

        for (i6 = 4; i6 < 244; ++i6) {
            Test0109.iFld += (i6 | Test0109.iFld);
            d2 *= d2;
            iArr1[i6 + 1][i6 + 1] = (int) f1;
            Test0109.iFld <<= i6;
            for (i8 = 1; 7 > i8; i8++) {
                d3 = 1;
                while (++d3 < 2) {
                    by += (byte) d3;
                    l += 62928L;
                    switch ((int) ((d3 % 9) * 5)) {
                        case 2:
                            switch ((i6 % 4) + 31) {
                                case 31:
                                    i7 = i6;
                                    Test0109.iFld = -50184;
                                    sArr[i8 - 1] = by;
                                    break;
                                case 32:
                                    iArr1[i8][i6 + 1] *= i9;
                                    break;
                                case 33:
                                    l += (long) d3;
                                    break;
                                case 34:
                                    if (i8 != 0) {
                                    }
                                    break;
                            }
                        case 15:
                            Test0109.iFld >>= i6;
                            break;
                        case 1:
                            if (b) break;
                            break;
                        case 41:
                            l += i7;
                            break;
                        case 36:
                            l = 231;
                            break;
                        case 35:
                            iArr1[i8][(int) (d3 + 1)] = i6;
                            break;
                        case 16:
                            if (true) continue;
                            break;
                        case 7:
                            d2 += i9;
                        case 12:
                            Test0109.iFld -= (int) Test0109.instanceCount;
                        default:
                            i9 *= i7;
                    }
                }
            }
        }
        long meth_res = l + Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 +
                Double.doubleToLongBits(d3) + by + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static float fMeth(float f) {

        int i5 = -29, i10 = 1, i11 = -20363, i12 = 1, i13 = -65, i14 = 59, i15 = -9;
        double d4 = -1.19258;
        double[] dArr = new double[N];
        short s = 15284;
        boolean b1 = true;

        FuzzerUtils.init(dArr, 0.124024);

        i5 += iMeth(Test0109.instanceCount, d4, f);
        dArr[(i5 >>> 1) % N] = Test0109.iFld;
        Test0109.iFld += Test0109.iFld;
        for (i10 = 5; 214 > i10; i10++) {
            Test0109.instanceCount = Test0109.iFld;
            for (i12 = 1; i12 < 8; ++i12) {
                byte by1 = -113;
                i5 += 128;
                Test0109.lArrFld[i12] = Test0109.instanceCount;
                if (b1) {
                    i5 |= (int) -7L;
                    try {
                        Test0109.iArrFld[i12 - 1] = (i5 / -20244);
                        Test0109.iArrFld[i12] = (i10 / -30366);
                        i13 = (i12 / -56824);
                    } catch (ArithmeticException a_e) {
                    }
                    by1 = (byte) i11;
                    for (i14 = 1; i14 < 2; ++i14) {
                        s += (short) f;
                        i5 = i11;
                    }
                } else {
                    f = i12;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i5 + Double.doubleToLongBits(d4) + i10 + i11 + i12 + i13 + i14 + i15
                + s + (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth(int i3, double d1, int i4) {

        float f2 = -1.577F;
        int i16 = 11316, i17 = 5, i18 = 28697, i19 = 1730;
        double d5 = 2.11065;
        short s1 = -18190;
        byte by2 = -53;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) -81);

        fMeth(f2);
        Test0109.instanceCount &= Test0109.iFld;
        for (i16 = 2; 213 > i16; i16++) {
            d5 = 1;
            do {
                d1 += d5;
                byArr[i16] += (byte) f2;
                Test0109.iFld -= (int) Test0109.instanceCount;
                i3 >>= 230;
                Test0109.instanceCount = i4;
                Test0109.iArrFld[i16 - 1] = (int) Test0109.instanceCount;
            } while (++d5 < 8);
        }
        i4 += i17;
        s1 *= by2;
        for (i18 = 9; i18 < 378; ++i18) {
            i17 += (i18 | Test0109.instanceCount);
            Test0109.iArrFld[i18] <<= i3;
        }
        vMeth_check_sum += i3 + Double.doubleToLongBits(d1) + i4 + Float.floatToIntBits(f2) + i16 + i17 +
                Double.doubleToLongBits(d5) + s1 + by2 + i18 + i19 + FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0109 _instance = new Test0109();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -11;
        int i1 = -1;
        int i2 = -11;
        int i20 = -5716;
        int i21 = -54609;
        int i22 = 24;
        int i23 = -23;
        int i24 = 27928;
        int[] iArr = new int[N];
        double d = 63.110746;
        float f3 = 0.114F;
        float[] fArr = new float[N];
        boolean b2 = true;

        FuzzerUtils.init(iArr, -1);
        FuzzerUtils.init(fArr, 0.689F);

        Test0109.lArrFld[(-160 >>> 1) % N] = (i--);
        iArr[(i >>> 1) % N] = (int) (((++d) + (i * i)) - i);
        for (i1 = 5; i1 < 377; i1++) {
            vMeth(i1, d, 1);
            Test0109.fArrFld[i1 + 1][i1] += Test0109.iFld;
            i *= (int) d;
        }
        for (i20 = 165; i20 > 5; i20--) {
            for (i22 = 8; i22 < 157; ++i22) {
                byte by3 = 90;
                Test0109.instanceCount += (i22 * i22);
                switch ((i20 % 4) + 44) {
                    case 44:
                        switch ((i22 % 2) + 72) {
                            case 72:
                                fArr[i20] *= 170;
                                i21 *= i21;
                                i23 += i23;
                            case 73:
                                Test0109.iArrFld[i20 + 1] *= (int) 121.992F;
                                i = by3;
                                i21 *= (int) Test0109.instanceCount;
                                break;
                            default:
                                i21 = (int) f3;
                        }
                        i23 += (int) Test0109.fFld;
                        Test0109.instanceCount = Test0109.instanceCount;
                        if (b2) break;
                        break;
                    case 45:
                        i21 -= (int) Test0109.instanceCount;
                        break;
                    case 46:
                        if (b2) continue;
                        break;
                    case 47:
                        switch (((i20 % 2) * 5) + 67) {
                            case 70:
                                b2 = b2;
                                break;
                            case 68:
                                try {
                                    iArr[i22 - 1] = (-123 % i22);
                                    iArr[i22] = (Test0109.iFld % -39112);
                                    i21 = (i20 % i20);
                                } catch (ArithmeticException a_e) {
                                }
                                i = (int) -228L;
                                break;
                        }
                        break;
                }
                i24 = 1;
                do {
                    Test0109.instanceCount = i23;
                    Test0109.iFld -= i21;
                } while (++i24 < 2);
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i2 i20 i21 = " + i2 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 f3 = " + i22 + "," + i23 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("b2 i24 iArr = " + (b2 ? 1 : 0) + "," + i24 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0109.instanceCount Test0109.iFld Test0109.fFld = " + Test0109.instanceCount + "," + Test0109.iFld +
                "," + Float.floatToIntBits(Test0109.fFld));
        FuzzerUtils.out.println("Test0109.lArrFld Test0109.iArrFld Test0109.fArrFld = " + FuzzerUtils.checkSum(Test0109.lArrFld) + ","
                + FuzzerUtils.checkSum(Test0109.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0109.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
