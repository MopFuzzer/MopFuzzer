// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0673 {

    public static final int N = 400;

    public static long instanceCount = 14351L;
    public static int iFld = 2;
    public static volatile double dFld = 0.49530;
    public static volatile short sFld = -8587;
    public static long lFld = -6519371546352262765L;
    public static int iFld1 = -15350;
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0673.fArrFld, -14.184F);
    }

    public int[] iArrFld = new int[N];

    public static void vMeth1(int i7) {

        int i8 = 110;
        int i9 = 8;
        int i10 = -126;
        int i11 = -3973;
        int i12 = 20389;
        int i13 = 231;
        int[] iArr = new int[N];
        float f2 = -97.928F;
        byte by = -49;

        FuzzerUtils.init(iArr, 231);

        i7 /= (int) ((long) (Test0673.dFld) | 1);
        for (i8 = 4; 398 > i8; ++i8) {
            i9 *= (int) 53L;
            f2 = i8;
        }
        iArr[(i9 >>> 1) % N] = i9;
        Test0673.iFld = Test0673.iFld;
        i9 = (int) f2;
        for (i10 = 12; i10 < 281; ++i10) {
            for (i12 = 1; i12 < 6; ++i12) {
                by += (byte) i12;
                Test0673.sFld <<= (short) i7;
                f2 -= i13;
                i11 += i12;
            }
            i11 = i9;
            Test0673.iFld = i11;
        }
        vMeth1_check_sum += i7 + i8 + i9 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + by +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l1, int i6) {

        int i14 = 37344;
        int i15 = -21373;
        int i16 = 3;
        int i17 = 32132;
        int i18 = -10;
        int[] iArr1 = new int[N];
        long l2 = -6387462466488990414L;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) -94);
        FuzzerUtils.init(iArr1, -4);

        vMeth1(i6);
        i6 *= (int) -29.349F;
        i14 = 245;
        do {
            Test0673.iFld &= Test0673.iFld;
            i6 = (int) Test0673.dFld;
            for (i15 = i14; i15 < 7; i15++) {
                Test0673.iFld += (i15 | i14);
                for (i17 = i15; i17 < 1; ++i17) {
                    i16 += (((i17 * l2) + i6) - l1);
                    Test0673.instanceCount += Test0673.sFld;
                    switch (((-14303 >>> 1) % 2) + 60) {
                        case 60:
                            byArr[i15] /= (byte) (i14 | 1);
                            i18 = (int) l2;
                            iArr1[i15 - 1] = Test0673.iFld;
                            break;
                        case 61:
                            l2 = 128;
                            break;
                    }
                }
            }
        } while (--i14 > 0);
        vMeth_check_sum += l1 + i6 + i14 + i15 + i16 + i17 + i18 + l2 + FuzzerUtils.checkSum(byArr) +
                FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(float f1) {

        long l = -48130L;
        long l3 = 164L;
        long[] lArr = new long[N];
        int i3 = -24440, i4 = -3986, i5 = 0, i19 = -53625, i20 = -44, i21 = 9;
        boolean b = true;

        FuzzerUtils.init(lArr, 448585233L);

        Test0673.iFld -= (int) (-f1);
        for (l = 15; l < 337; l++) {
            for (i4 = 1; i4 < 5; i4 += 3) {
                vMeth(Test0673.instanceCount, i3);
                switch ((int) (((l % 1) * 5) + 69)) {
                    case 73:
                        for (i19 = i4; i19 < 5; i19++) {
                            i5 *= (int) -51961L;
                            b = b;
                            i20 += (i19 - Test0673.iFld);
                            Test0673.instanceCount += i4;
                            lArr[i4 + 1] ^= Test0673.instanceCount;
                            Test0673.sFld += (short) l3;
                            i3 += (int) l;
                            f1 += (i19 * i19);
                            i5 += (i19 * Test0673.iFld);
                        }
                    default:
                        f1 += (((i4 * i19) + i21) - i3);
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i3 + i4 + i5 + i19 + i20 + (b ? 1 : 0) + l3 + i21 +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0673 _instance = new Test0673();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f = -82.949F, f3 = 0.381F;
        int i = -5990, i1 = 54752, i2 = -245, i22 = 2, i23 = 43535, i24 = 18835;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 917960106850903344L);

        for (f = 1; 130 > f; ++f) {
            Test0673.instanceCount += (long) (((f * i) + i) - i);
            for (i1 = 5; i1 < 194; ++i1) {
                short s = -23499;
                Test0673.instanceCount = (++i);
                Test0673.iFld += (((i1 * s) + s) - Test0673.instanceCount);
                i -= (int) (((++i2) - i2) + ((Test0673.instanceCount + -77) * (Test0673.fArrFld[(int) (f - 1)]--)));
                i = (int) ((Math.abs(-56844) * (Test0673.instanceCount - f)) * iMeth(f3));
                switch (((i22 >>> 1) % 9) + 94) {
                    case 94:
                        switch (((i1 >>> 1) % 1) + 2) {
                            case 2:
                                Test0673.instanceCount = Test0673.lFld;
                                break;
                            default:
                                for (i23 = i1; i23 < 2; i23++) {
                                    boolean b1 = true;
                                    i22 *= (int) Test0673.lFld;
                                    i2 += (((i23 * f3) + i22) - Test0673.instanceCount);
                                    switch (((i1 >>> 1) % 2) + 71) {
                                        case 71:
                                            Test0673.lFld >>= Test0673.lFld;
                                            lArr1 = lArr1;
                                            f3 = -158;
                                            break;
                                        case 72:
                                            iArrFld = iArrFld;
                                            if (b1) break;
                                            break;
                                        default:
                                            Test0673.instanceCount += (((i23 * i23) + Test0673.iFld1) - Test0673.instanceCount);
                                    }
                                    Test0673.dFld *= Test0673.iFld1;
                                    iArrFld[i23] = Test0673.sFld;
                                    Test0673.sFld >>= (short) Test0673.iFld;
                                    Test0673.iFld1 >>= Test0673.iFld;
                                    Test0673.instanceCount = i;
                                    Test0673.lFld &= i;
                                }
                                i += i1;
                        }
                        Test0673.instanceCount = i1;
                        break;
                    case 95:
                        Test0673.instanceCount *= Test0673.instanceCount;
                        try {
                            Test0673.iFld1 = (-24972 / i22);
                            i = (59666 / i2);
                            iArrFld[i1 - 1] = (i2 % 1986292542);
                        } catch (ArithmeticException a_e) {
                        }
                        break;
                    case 96:
                        i2 -= i;
                        break;
                    case 97:
                        i22 &= Test0673.iFld1;
                        break;
                    case 98:
                        i2 -= -9203;
                        break;
                    case 99:
                        Test0673.iFld = (int) f;
                    case 100:
                        i2 += (((i1 * i) + Test0673.iFld) - i24);
                        break;
                    case 101:
                        Test0673.dFld += i;
                        break;
                    case 102:
                        i2 = 147;
                        break;
                }
            }
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 f3 i22 = " + i2 + "," + Float.floatToIntBits(f3) + "," + i22);
        FuzzerUtils.out.println("i23 i24 lArr1 = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0673.instanceCount Test0673.iFld Test0673.dFld = " + Test0673.instanceCount + "," + Test0673.iFld +
                "," + Double.doubleToLongBits(Test0673.dFld));
        FuzzerUtils.out.println("Test0673.sFld Test0673.lFld Test0673.iFld1 = " + Test0673.sFld + "," + Test0673.lFld + "," + Test0673.iFld1);
        FuzzerUtils.out.println("Test0673.fArrFld iArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0673.fArrFld))
                + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
