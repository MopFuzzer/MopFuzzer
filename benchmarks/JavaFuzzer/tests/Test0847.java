// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0847 {

    public static final int N = 400;

    public static long instanceCount = 45694L;
    public static float fFld = 66.886F;
    public static boolean bFld = false;
    public static int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0847.iArrFld, -8);
        FuzzerUtils.init(Test0847.dArrFld, 1.53196);
    }

    public byte byFld = -9;

    public static void vMeth1(long l, int i5) {

        int i7 = -174, i8 = 8;
        float f = 61.288F, f1 = 1.13F;

        Test0847.instanceCount -= -5606495443288404158L;
        for (int i6 : Test0847.iArrFld) {
            switch ((((i6 >>> 1) % 6) * 5) + 103) {
                case 124:
                    i7 = 1;
                    while ((i7 += 3) < 4) {
                        i8 = 4;
                        while (--i8 > 0) {
                            i6 -= (int) f;
                            i5 += i8;
                            f *= l;
                            Test0847.instanceCount -= i7;
                            l += (i8 * i8);
                            i6 += (-61406 + (i8 * i8));
                            f *= i8;
                            Test0847.instanceCount >>= 5594105322978972480L;
                        }
                        i5 += i6;
                        i5 >>= i5;
                    }
                    break;
                case 130:
                    i6 *= (int) l;
                    break;
                case 109:
                    i6 *= i6;
                    break;
                case 113:
                    i6 = i5;
                    break;
                case 121:
                    Test0847.iArrFld[(i5 >>> 1) % N] += (int) f1;
                    break;
                case 122:
                    Test0847.instanceCount &= i7;
                    break;
            }
        }
        vMeth1_check_sum += l + i5 + i7 + i8 + Float.floatToIntBits(f) + Float.floatToIntBits(f1);
    }

    public static void vMeth(int i3, int i4) {

        float f2 = -2.336F, f3 = -106.431F;
        int i9 = -7;
        int i10 = 3;
        int i11 = 0;
        int i12 = -11;
        int i13 = 63406;
        int[] iArr = new int[N];
        boolean b = false;
        short s = -15182;
        byte by = 38;

        FuzzerUtils.init(iArr, 12);

        iArr[(i3 >>> 1) % N] = (++iArr[(i4 >>> 1) % N]);
        vMeth1(Test0847.instanceCount, i3);
        for (f2 = 20; f2 < 371; ++f2) {
            i9 >>= i3;
        }
        i3 += (int) Test0847.instanceCount;
        for (i10 = 9; 299 > i10; ++i10) {
            i3 = i3;
            for (i12 = 1; i12 < 6; i12 += 2) {
                if (b) break;
                iArr[i10] = -14;
                i3 *= i4;
                s = by;
                f3 -= i3;
                i4 += (151 + (i12 * i12));
                Test0847.instanceCount -= 1;
            }
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f2) + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + s + by +
                Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1) {

        int i2 = 6856, i14 = 10, i15 = 8, i16 = 7, i17 = -47, i18 = -3, i19 = -61;
        short s1 = 22668;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) -85);

        i2 = 1;
        do {
            vMeth(i1, -70);
            i1 = i1;
            Test0847.iArrFld[i2 + 1] = (int) Test0847.instanceCount;
        } while (++i2 < 283);
        for (i14 = 18; i14 < 383; i14++) {
            switch (((-1173 >>> 1) % 1) + 111) {
                case 111:
                    i15 = i1;
                    for (i16 = 5; i16 > 1; --i16) {
                        for (i18 = 1; i18 < 2; i18++) {
                            Test0847.fFld += (i18 - i17);
                            i15 += (((i18 * i15) + Test0847.instanceCount) - i18);
                            s1 += (short) (i18 + i19);
                            i17 += (i18 * i18);
                            Test0847.iArrFld[(i18 >>> 1) % N] -= i17;
                            byArr[i14] >>= (byte) i2;
                        }
                    }
                    break;
            }
        }
        long meth_res = i1 + i2 + i14 + i15 + i16 + i17 + i18 + i19 + s1 + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0847 _instance = new Test0847();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 60893, i20 = -65455, i21 = -13, i22 = 62, i23 = 55059, i24 = -7, i26 = 56;
        short s2 = -22037;
        float f4 = -80.516F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -26029L);

        i = 1;
        while (++i < 277) {
            byFld -= (byte) iMeth(i);
            i20 >>= i20;
            for (i21 = 5; 91 > i21; i21++) {
                if (Test0847.bFld) continue;
                i20 = i21;
                if (Test0847.bFld) {
                    i22 += i21;
                    i22 = i22;
                    for (i23 = 2; i23 > 1; i23--) {
                        int i25 = 560;
                        lArr[i] -= i25;
                        Test0847.instanceCount >>= 121L;
                        i22 = 163;
                    }
                } else {
                    s2 += (short) -7;
                    i20 += i21;
                    Test0847.fFld -= Test0847.instanceCount;
                    i20 &= i;
                }
                if (Test0847.bFld) continue;
                Test0847.iArrFld[i + 1] = -33;
                for (f4 = i21; f4 < 2; f4++) {
                    i24 -= -64282;
                    i24 = (int) Test0847.instanceCount;
                    Test0847.dArrFld[i - 1] -= -10;
                    Test0847.iArrFld[i + 1] -= 12;
                    switch (((59 >>> 1) % 2) + 51) {
                        case 51:
                            Test0847.instanceCount *= -5;
                            i26 += (int) ((long) f4 ^ i26);
                            i24 -= (int) Test0847.instanceCount;
                            if (Test0847.bFld) continue;
                            break;
                        case 52:
                            Test0847.instanceCount += i;
                            break;
                        default:
                            Test0847.fFld += i24;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("s2 f4 i26 = " + s2 + "," + Float.floatToIntBits(f4) + "," + i26);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0847.instanceCount byFld Test0847.fFld = " + Test0847.instanceCount + "," + byFld + "," +
                Float.floatToIntBits(Test0847.fFld));
        FuzzerUtils.out.println("Test0847.bFld Test0847.iArrFld Test0847.dArrFld = " + (Test0847.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0847.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0847.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
