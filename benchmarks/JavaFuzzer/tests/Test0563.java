// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test0563 {

    public static final int N = 400;

    public static volatile long instanceCount = -9L;
    public static volatile float fFld = 2.43F;
    public static boolean bFld = true;
    public static int iFld = 10;
    public static long[] lArrFld = new long[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0563.lArrFld, -63L);
        FuzzerUtils.init(Test0563.iArrFld, 216);
    }

    public static void vMeth1() {

        int i5 = 134;
        int i6 = -8;
        int i7 = 88;
        int i8 = 20;
        int i9 = 13;
        int[][] iArr = new int[N][N];
        double d = -88.77405;
        double[][] dArr1 = new double[N][N];
        float f = 2.801F;
        boolean b = true;
        byte by = -100;

        FuzzerUtils.init(dArr1, 60.14871);
        FuzzerUtils.init(iArr, -25697);

        dArr1[(-7 >>> 1) % N] = dArr1[(i5 >>> 1) % N];
        i5 -= (int) Test0563.instanceCount;
        for (d = 12; d < 263; d++) {
            i6 += (int) f;
            i5 = (int) f;
            i7 >>= i7;
            if (b) {
                i7 += (int) ((long) d ^ i5);
                b = b;
                iArr[(int) (d - 1)][(int) (d - 1)] <<= 68;
                by = (byte) Test0563.instanceCount;
            } else {
                for (i8 = 1; 6 > i8; ++i8) {
                    Test0563.instanceCount -= (long) -1.123444;
                    i9 *= i9;
                    i5 -= (int) f;
                }
            }
        }
        vMeth1_check_sum += i5 + Double.doubleToLongBits(d) + i6 + Float.floatToIntBits(f) + i7 + (b ? 1 : 0) + by + i8
                + i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i4, long l, long l1) {

        float f1 = -1.244F;
        double d1 = 107.34433, d2 = 107.119503;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, 152);

        i4 = (int) l;
        vMeth1();
        f1 -= i4;
        i4 = i4;
        d1 += l;
        d1 -= i4;
        d2 = 1;
        while (++d2 < 287) {
            iArr1[(int) (d2 + 1)] = (int) Test0563.instanceCount;
        }
        long meth_res = i4 + l + l1 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) +
                Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i2 = -159, i3 = 8878, i10 = 177, i11 = -1, i12 = 6, i13 = 212;
        double d3 = 53.6104;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -117.432F);

        for (i2 = 6; 156 > i2; ++i2) {
            lMeth(i3, 3571L, 64880L);
            for (i10 = 1; i10 < 11; ++i10) {
                if (false) continue;
                i11 = (int) Test0563.instanceCount;
                fArr[i2 + 1] *= -87.93F;
                for (i12 = i10; i12 < 2; i12++) {
                    d3 = Test0563.fFld;
                    Test0563.instanceCount = Test0563.instanceCount;
                }
                if (i11 != 0) {
                    vMeth_check_sum += i + i1 + i2 + i3 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d3) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                if (Test0563.bFld) break;
                Test0563.fFld /= 238;
            }
            if (Test0563.bFld) break;
        }
        i11 *= (int) Test0563.instanceCount;
        Test0563.instanceCount = 14;
        vMeth_check_sum += i + i1 + i2 + i3 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d3) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0563 _instance = new Test0563();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i14 = -11011, i15 = 12, i16 = -61726, i17 = -191, i18 = 31036, i19 = -16428, i20 = 155, i21 = -141, i22 = 5402, i23 = -2833,
                i24 = 212, i25 = 37164, i26 = 63456;
        double d4 = 0.70190;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -1.28632);

        dArr = (dArr = dArr);
        vMeth(i14, i14);
        i14 += (int) Test0563.instanceCount;
        i15 = 1;
        do {
            Test0563.lArrFld[i15] = i15;
        } while (++i15 < 233);
        for (i16 = 135; i16 > 1; --i16) {
            Test0563.fFld *= i17;
            i17 += i17;
            switch (((i16 % 8) * 5) + 6) {
                case 42:
                    for (i18 = 187; i18 > 2; --i18) {
                        for (i20 = 1; i20 < 2; i20++) {
                            i17 = i21;
                            try {
                                i14 = (Test0563.iArrFld[i20 + 1] / -809869968);
                                i19 = (i21 % i14);
                                i21 = (-86 / i17);
                            } catch (ArithmeticException a_e) {
                            }
                        }
                        i17 = i14;
                        if (Test0563.bFld) break;
                    }
                    i17 -= -14;
                    for (i22 = 187; i22 > 11; --i22) {
                        Test0563.instanceCount *= (long) Test0563.fFld;
                        i14 >>= 26366;
                        Test0563.fFld = 68;
                        for (d4 = 1; d4 < 2; ++d4) {
                            i14 >>= i15;
                            i25 = (int) Test0563.instanceCount;
                            Test0563.iArrFld[i22] = 8;
                        }
                        Test0563.instanceCount = Test0563.instanceCount;
                    }
                    i24 *= i20;
                    break;
                case 13:
                    i19 = i16;
                    Test0563.fFld = i23;
                    Test0563.iArrFld[i16] *= i26;
                    dArr[i16] -= -206;
                    break;
                case 36:
                    Test0563.instanceCount += i22;
                    break;
                case 20:
                    i26 = i16;
                    break;
                case 15:
                    i26 = 59041;
                    break;
                case 10:
                    Test0563.iFld += (((i16 * i21) + i17) - Test0563.fFld);
                    break;
                case 27:
                    i23 *= i24;
                case 9:
                    Test0563.bFld = Test0563.bFld;
                    break;
                default:
                    Test0563.iArrFld[i16] -= (int) 47.42F;
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 d4 i24 = " + i23 + "," + Double.doubleToLongBits(d4) + "," + i24);
        FuzzerUtils.out.println("i25 i26 dArr = " + i25 + "," + i26 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0563.instanceCount Test0563.fFld Test0563.bFld = " + Test0563.instanceCount + "," +
                Float.floatToIntBits(Test0563.fFld) + "," + (Test0563.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0563.iFld Test0563.lArrFld Test0563.iArrFld = " + Test0563.iFld + "," +
                FuzzerUtils.checkSum(Test0563.lArrFld) + "," + FuzzerUtils.checkSum(Test0563.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
