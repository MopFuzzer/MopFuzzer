// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0379 {

    public static final int N = 400;

    public static long instanceCount = -149L;
    public static short sFld = -3668;
    public static byte byFld = 47;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0379.iArrFld, 103);
        FuzzerUtils.init(Test0379.lArrFld, -42722L);
    }

    public double dFld = 95.53965;
    public int iFld = -28;
    public float fFld = -1.194F;
    public int iFld1 = 0;

    public static void vMeth1(short s, long l, long l1) {

        int i7 = 2657, i8 = -11, i9 = -1, i10 = 42689, i11 = 57947;
        double d = -2.97770;
        byte by = -103;
        float f = -13.175F;
        long l2 = 32426L;
        boolean b = false;

        for (i7 = 6; 279 > i7; i7++) {
            i8 -= (int) l1;
            switch (((i7 % 2) * 5) + 61) {
                case 71:
                    for (i9 = 6; i9 > i7; i9--) {
                        i8 = (int) d;
                        by += (byte) l1;
                        i10 += (int) f;
                        try {
                            i8 = (i9 % 12512);
                            Test0379.iArrFld[i9 + 1] = (-62894 % Test0379.iArrFld[i7]);
                            i8 = (49368 / Test0379.iArrFld[i9]);
                        } catch (ArithmeticException a_e) {
                        }
                    }
                    for (l2 = 1; l2 < 6; l2++) {
                        d *= l2;
                        if (b) break;
                        i11 >>= (int) l2;
                        f += l2;
                        l = (long) f;
                    }
                    i8 >>>= -23305;
                    break;
                case 63:
                    Test0379.iArrFld[i7] = -27065;
                    break;
            }
        }
        vMeth1_check_sum += s + l + l1 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) + by + Float.floatToIntBits(f)
                + l2 + i11 + (b ? 1 : 0);
    }

    public static void vMeth(int i6) {

        int i12 = -146, i13 = 61174, i14 = -108, i15 = 4, i16 = 41986, i17 = 31564;
        double d1 = 2.25380;

        vMeth1((short) (-29401), -172L, Test0379.instanceCount);
        for (i12 = 7; i12 < 235; i12++) {
            for (i14 = i12; i14 < 7; i14++) {
                for (i16 = 1; i16 < 1; ++i16) {
                    i13 = 2;
                    i6 *= (int) Test0379.instanceCount;
                    Test0379.instanceCount += (i16 - i12);
                    i6 += (int) (0.680F + (i16 * i16));
                    Test0379.lArrFld[i16] -= i13;
                    d1 += i12;
                    if (true) break;
                    Test0379.instanceCount -= 28438L;
                    Test0379.lArrFld[i12] += Test0379.byFld;
                    Test0379.instanceCount += (((i16 * i6) + Test0379.instanceCount) - i15);
                }
                i13 = i16;
            }
        }
        vMeth_check_sum += i6 + i12 + i13 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d1);
    }

    public static void main(String[] strArr) {

        try {
            Test0379 _instance = new Test0379();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public float fMeth(int i3, int i4) {

        int i5 = 6;

        i5 = 1;
        do {
            vMeth(i5);
            iFld = (int) Test0379.instanceCount;
        } while (++i5 < 225);
        long meth_res = i3 + i4 + i5;
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 146, i1 = 1, i2 = -243, i18 = 44534, i19 = -7, i20 = 17702, i21 = -4072, i22 = -83;
        boolean b1 = false;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, false);

        if (bArr[(-231 >>> 1) % N] ^ (((Test0379.sFld + dFld) - (iFld = iFld)) <= (fFld++))) {
            i >>= (int) (((--Test0379.instanceCount) * (-38280 * (-11856 - (Test0379.instanceCount--)))) - (++Test0379.iArrFld[(-3
                    >>> 1) % N]));
            i &= (int) ((-9310 - Test0379.instanceCount) + Test0379.iArrFld[(i >>> 1) % N]);
        } else {
            Test0379.instanceCount *= ((i + Test0379.instanceCount) - ((-(iFld + i)) * (Test0379.instanceCount + i)));
            for (i1 = 12; i1 < 193; ++i1) {
                fMeth(i2, -3);
                i2 += i2;
                i2 %= (int) (iFld | 1);
                fFld += i1;
                for (i18 = 139; i18 > 8; i18 -= 3) {
                    fFld -= -8;
                    fFld = i2;
                    for (i20 = 1; i20 < 4; ++i20) {
                        Test0379.iArrFld[i18 + 1] -= iFld;
                        Test0379.instanceCount = i;
                        i += (((i20 * iFld) + i) - i18);
                        dFld = Test0379.byFld;
                        i19 += i20;
                        i /= (int) -16L;
                        fFld += (i20 + i20);
                        Test0379.iArrFld[i1 - 1] >>= iFld;
                    }
                    i = (int) fFld;
                }
                iFld1 += (i1 * i1);
                i2 += (((i1 * i21) + Test0379.instanceCount) - iFld);
                Test0379.iArrFld = Test0379.iArrFld;
                fFld -= i2;
                Test0379.instanceCount *= -8;
            }
            i22 = 1;
            while (++i22 < 301) {
                bArr[i22] = b1;
                Test0379.instanceCount = -5140;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 b1 = " + i21 + "," + i22 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0379.instanceCount Test0379.sFld dFld = " + Test0379.instanceCount + "," + Test0379.sFld + "," +
                Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("iFld fFld Test0379.byFld = " + iFld + "," + Float.floatToIntBits(fFld) + "," + Test0379.byFld);
        FuzzerUtils.out.println("iFld1 Test0379.iArrFld Test0379.lArrFld = " + iFld1 + "," + FuzzerUtils.checkSum(Test0379.iArrFld)
                + "," + FuzzerUtils.checkSum(Test0379.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
