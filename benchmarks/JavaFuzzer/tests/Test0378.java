// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0378 {

    public static final int N = 400;

    public static long instanceCount = 3592183196L;
    public static byte byFld = -38;
    public static volatile int iFld = 12191;
    public static volatile short sFld = -25881;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0378.iArrFld, 3);
        FuzzerUtils.init(Test0378.lArrFld, 3533246830913377699L);
    }

    public double[][] dArrFld = new double[N][N];

    public static int iMeth1(double d1, float f) {

        int i6 = -58, i7 = 33452, i8 = 10, i9 = 13707;
        float f1 = 2.914F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -3447021288L);

        i6 = 1;
        do {
            i7 *= i7;
        } while (++i6 < 166);
        lArr[(i6 >>> 1) % N] = i6;
        f += i7;
        i7 -= (int) f;
        for (f1 = 15; 285 > f1; f1++) {
            i7 += (int) (f1 + i6);
            try {
                i8 = (768791194 % i8);
                Test0378.iArrFld[(int) (f1 - 1)] = (i8 / i7);
                i8 = (57013 / i6);
            } catch (ArithmeticException a_e) {
            }
            i9 = 1;
            while (++i9 < 6) {
                i7 = (int) 4646089690090357413L;
                Test0378.iArrFld[i9 - 1] = (int) Test0378.instanceCount;
                i8 = i8;
                Test0378.iArrFld[i9] >>= (int) Test0378.instanceCount;
                i7 += (i9 * i9);
            }
            Test0378.iArrFld[(int) (f1 + 1)] -= Test0378.byFld;
        }
        long meth_res = Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i6 + i7 + Float.floatToIntBits(f1) + i8
                + i9 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i3, double d) {

        int i4 = -13031, i5 = -4, i11 = -5, i12 = -47892;
        float f2 = 1.460F;
        short s = -27314;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 91.61009);

        for (i4 = 6; i4 < 347; i4++) {
            iMeth1(d, f2);
            i3 = 5;
            try {
                Test0378.iArrFld[i4 - 1] = (i4 % 784445752);
                i3 = (i4 / i3);
                Test0378.iFld = (Test0378.iFld % -26913);
            } catch (ArithmeticException a_e) {
            }
            for (i11 = i4; i11 < 5; i11++) {
                Test0378.instanceCount >>= i3;
                switch ((i11 % 2) + 100) {
                    case 100:
                        f2 += (i11 * i11);
                        Test0378.instanceCount = (long) 1.668F;
                        break;
                    case 101:
                        Test0378.iFld &= i4;
                        Test0378.instanceCount = Test0378.byFld;
                        s -= (short) 14L;
                    default:
                        i12 *= Test0378.iFld;
                        Test0378.iArrFld = Test0378.iArrFld;
                        dArr[i4 - 1] *= -46050L;
                }
            }
        }
        long meth_res = i3 + Double.doubleToLongBits(d) + i4 + i5 + Float.floatToIntBits(f2) + i11 + i12 + s +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i) {

        int i1 = 41710;
        int i2 = -236;
        int i13 = 11247;
        int i14 = 13;
        int i15 = 0;
        int i16 = 162;
        int[] iArr = new int[N];
        byte by = -15;
        float f3 = 49.546F;
        double d2 = -1.21537;
        boolean b = false;

        FuzzerUtils.init(iArr, 197);

        for (i1 = 3; 376 > i1; ++i1) {
            i2 += i1;
            switch ((((i2++) >>> 1) % 9) + 97) {
                case 97:
                    i2 = iArr[i1 + 1];
                    if (b) {
                        by >>= (byte) (iMeth(i1, 1.104574) * Test0378.instanceCount);
                        for (i13 = 1; i13 < 5; i13++) {
                            if (b) {
                                for (i15 = 1; 2 > i15; i15++) {
                                    Test0378.sFld = (short) Test0378.iFld;
                                    Test0378.instanceCount += (long) f3;
                                    iArr[i13 + 1] *= 33404;
                                    i += (i15 ^ i);
                                }
                                Test0378.lArrFld[i13 + 1] = i13;
                                f3 -= (float) d2;
                            } else if (b) {
                                Test0378.lArrFld[i1 + 1] -= (long) f3;
                            } else {
                                i14 += (((i13 * i2) + i14) - i2);
                            }
                        }
                        vMeth_check_sum += i + i1 + i2 + by + i13 + i14 + i15 + i16 + Float.floatToIntBits(f3) +
                                Double.doubleToLongBits(d2) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    } else if (false) {
                    } else if (b) {
                        b = b;
                    } else {
                        Test0378.byFld = (byte) f3;
                    }
                    break;
                case 98:
                    if (b) continue;
                    break;
                case 99:
                case 100:
                    i14 += (int) d2;
                    break;
                case 101:
                    i2 *= (int) 2.686F;
                case 102:
                    i = -6;
                    break;
                case 103:
                    i2 += (((i1 * i1) + i13) - i15);
                case 104:
                    if (i1 != 0) {
                        vMeth_check_sum += i + i1 + i2 + by + i13 + i14 + i15 + i16 + Float.floatToIntBits(f3) +
                                Double.doubleToLongBits(d2) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                case 105:
                    i14 <<= i13;
                    break;
                default:
                    Test0378.byFld = (byte) i14;
            }
        }
        vMeth_check_sum += i + i1 + i2 + by + i13 + i14 + i15 + i16 + Float.floatToIntBits(f3) +
                Double.doubleToLongBits(d2) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0378 _instance = new Test0378();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f4 = 2.288F;
        int i17 = 69, i18 = -5, i19 = 14, i20 = -163, i21 = -250, i22 = -50296, i23 = 15852, i24 = 13;
        double d3 = -46.129801;

        vMeth(Test0378.iFld);
        f4 = Test0378.iFld;
        Test0378.iFld -= Test0378.iFld;
        Test0378.instanceCount += -223;
        i17 = 1;
        do {
            for (i18 = 123; i18 > 4; --i18) {
                f4 += (((i18 * f4) + i20) - i17);
                i19 += (i18 * Test0378.iFld);
                for (i21 = 1; 2 > i21; i21++) {
                    boolean b1 = true;
                    if (true) {
                        d3 += i21;
                        f4 += i18;
                        i22 -= i21;
                        d3 = f4;
                    } else if (b1) {
                        Test0378.byFld *= (byte) i22;
                    } else {
                        Test0378.instanceCount = i22;
                        i20 = i20;
                        dArrFld[i18][i18 + 1] = i22;
                    }
                    if (false) break;
                    f4 = i20;
                    Test0378.iFld = i21;
                }
            }
            Test0378.instanceCount = i19;
            Test0378.instanceCount -= Test0378.byFld;
            i20 += (int) d3;
            i19 += (int) f4;
            for (i23 = 123; i23 > 5; --i23) {
                i24 = i23;
                Test0378.instanceCount *= i21;
                i24 = Test0378.iFld;
                i24 = i21;
            }
        } while (++i17 < 204);

        FuzzerUtils.out.println("f4 i17 i18 = " + Float.floatToIntBits(f4) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 d3 i23 = " + i22 + "," + Double.doubleToLongBits(d3) + "," + i23);
        FuzzerUtils.out.println("i24 = " + i24);

        FuzzerUtils.out.println("Test0378.instanceCount Test0378.byFld Test0378.iFld = " + Test0378.instanceCount + "," + Test0378.byFld +
                "," + Test0378.iFld);
        FuzzerUtils.out.println("Test0378.sFld Test0378.iArrFld Test0378.lArrFld = " + Test0378.sFld + "," +
                FuzzerUtils.checkSum(Test0378.iArrFld) + "," + FuzzerUtils.checkSum(Test0378.lArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
