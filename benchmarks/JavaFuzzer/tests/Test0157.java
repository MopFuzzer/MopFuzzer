// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0157 {

    public static final int N = 400;

    public static long instanceCount = -224L;
    public static short sFld = 1989;
    public static double dFld = 0.41618;
    public static byte byFld = 64;
    public static volatile float fFld = -15.629F;
    public static int iFld = -20;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0157.fArrFld, 37.382F);
        FuzzerUtils.init(Test0157.iArrFld, -2);
    }

    public boolean[] bArrFld = new boolean[N];

    public static void vMeth2(long l1, int i11) {

        float f1 = 2.181F;
        int i12 = -4530;
        int i13 = -64745;
        int i14 = -44640;
        int[] iArr1 = new int[N];
        double[][] dArr = new double[N][N];

        FuzzerUtils.init(iArr1, -11766);
        FuzzerUtils.init(dArr, -1.66288);

        f1 = 0.244F;
        l1 <<= i11;
        iArr1[(i11 >>> 1) % N] -= i11;
        i11 -= -99;
        dArr[(i11 >>> 1) % N][(i11 >>> 1) % N] -= i11;
        i11 <<= i11;
        l1 = i11;
        for (i12 = 273; i12 > 11; i12 -= 2) {
            f1 += Test0157.instanceCount;
            i11 >>= 4;
            i11 += -11;
            i11 += (int) f1;
            i14 = 1;
            do {
                i11 = Test0157.sFld;
                iArr1[i14 + 1] = i13;
            } while (++i14 < 12);
        }
        vMeth2_check_sum += l1 + i11 + Float.floatToIntBits(f1) + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(long l) {

        int i5 = -11;
        int i6 = 60368;
        int i7 = -60991;
        int i8 = -3;
        int i9 = 27248;
        int i10 = 42570;
        int[] iArr = new int[N];
        float f = 126.334F;
        byte by = -43;
        double d = -29.88929;
        boolean b = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 77);
        FuzzerUtils.init(lArr, -49L);

        try {
            if (b) {
                for (i5 = 15; i5 < 277; i5++) {
                    l += (long) ((++iArr[i5]) + 1.904F);
                    f = (Float.intBitsToFloat(by + 165) - ((-i6) + (i5 - Test0157.instanceCount)));
                    Test0157.instanceCount = (long) ((iArr[i5 - 1] >>= (Test0157.sFld * Test0157.sFld)) - Test0157.fArrFld[i5 - 1]);
                    for (i7 = 1; i7 < 6; ++i7) {
                        for (i9 = 1; 2 > i9; ++i9) {
                            lArr[i9 - 1] >>= i7;
                            i8 &= (int) ((++d) + (d++));
                            vMeth2(Test0157.instanceCount, i5);
                            i10 += (((i9 * i5) + i7) - i10);
                        }
                        Test0157.sFld += (short) (i7 - i6);
                        i6 += i8;
                        f = f;
                    }
                }
            }
        } catch (UserDefinedExceptionTest0157 exc1) {
            i6 += i8;
        }
        vMeth1_check_sum += l + i5 + i6 + Float.floatToIntBits(f) + by + i7 + i8 + i9 + i10 +
                Double.doubleToLongBits(d) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1, int i2) {

        int i3 = -90, i4 = -29974, i15 = 29680, i16 = 765, i17 = 179, i18 = -97;

        for (i3 = 8; i3 < 293; ++i3) {
            vMeth1(-219L);
            Test0157.dFld += i4;
            Test0157.byFld -= (byte) i1;
            i15 = 6;
            do {
                if (false) continue;
                Test0157.fFld -= i4;
            } while ((i15 -= 2) > 0);
            i4 -= i16;
            Test0157.iArrFld[i3] -= i1;
            i17 <<= i15;
        }
        i17 %= (int) (Test0157.instanceCount | 1);
        i18 = 1;
        while (++i18 < 202) {
            Test0157.instanceCount *= i3;
            i1 -= (int) Test0157.fFld;
            try {
                i16 = (i2 % -195);
                i16 = (Test0157.iArrFld[i18] % i15);
                i17 = (i18 / 64450);
            } catch (ArithmeticException a_e) {
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i15 + i16 + i17 + i18;
    }

    public static void main(String[] strArr) {

        try {
            Test0157 _instance = new Test0157();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 233, i19 = -57922, i20 = 1, i21 = -54325, i22 = -39940, i23 = -62954, i24 = -10, i25 = -14, i26 = 67, i27 = -244,
                i28 = -36982;
        boolean b1 = true;
        float f2 = -8.28F;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, -11L);

        i = 1;
        while (++i < 303) {
            vMeth(i, i);
            b1 = b1;
            i19 = 1;
            while (++i19 < 83) {
                Test0157.dFld += Test0157.instanceCount;
            }
            for (i20 = i; i20 < 83; ++i20) {
                Test0157.iArrFld[i20] = i20;
                Test0157.iArrFld[i] -= i20;
                b1 = b1;
                i21 += (int) (-2453302726L + (i20 * i20));
            }
            for (i22 = i; i22 < 83; ++i22) {
                i23 -= i24;
                for (i25 = 1; i25 < 1; ++i25) {
                    lArr1[i22] = 223L;
                    i24 >>= i26;
                    Test0157.iArrFld = Test0157.iArrFld;
                    i26 -= (int) Test0157.instanceCount;
                    i27 -= i24;
                }
                switch (((215 >>> 1) % 2) + 114) {
                    case 114:
                        Test0157.instanceCount <<= Test0157.instanceCount;
                    case 115:
                        if (b1) continue;
                        i26 = i;
                        i23 += (i22 * i22);
                        i21 += 13;
                    default:
                        i23 += (i22 + i22);
                        i24 >>>= i27;
                        switch ((((Test0157.iFld >>> 1) % 5) * 5) + 78) {
                            case 101:
                                for (f2 = 1; f2 < 1; f2++) {
                                    Test0157.fFld += (f2 * Test0157.byFld);
                                    Test0157.instanceCount -= i20;
                                }
                                break;
                            case 81:
                                i28 <<= i26;
                                break;
                            case 80:
                                Test0157.sFld *= (short) Test0157.iFld;
                                break;
                            case 86:
                                Test0157.iArrFld[i - 1] <<= (int) -62805L;
                                break;
                            case 83:
                                bArrFld[i22 - 1] = b1;
                                break;
                            default:
                                Test0157.fFld -= (float) -105.110189;
                        }
                }
            }
        }

        FuzzerUtils.out.println("i b1 i19 = " + i + "," + (b1 ? 1 : 0) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 f2 = " + i26 + "," + i27 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i28 lArr1 = " + i28 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0157.instanceCount Test0157.sFld Test0157.dFld = " + Test0157.instanceCount + "," + Test0157.sFld +
                "," + Double.doubleToLongBits(Test0157.dFld));
        FuzzerUtils.out.println("Test0157.byFld Test0157.fFld Test0157.iFld = " + Test0157.byFld + "," +
                Float.floatToIntBits(Test0157.fFld) + "," + Test0157.iFld);
        FuzzerUtils.out.println("Test0157.fArrFld Test0157.iArrFld bArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0157.fArrFld)) + "," + FuzzerUtils.checkSum(Test0157.iArrFld) +
                "," + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}

///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest0157 extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
