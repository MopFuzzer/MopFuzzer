// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test0995 {

    public static final int N = 400;

    public static volatile long instanceCount = 10L;
    public static double dFld = 0.106769;
    public static byte byFld = 86;
    public static volatile short sFld = -24995;
    public static volatile float[][] fArrFld1 = new float[N][N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0995.fArrFld1, 0.793F);
    }

    public int iFld = 6;
    public float fFld = 2.617F;
    public int[][] iArrFld = new int[N][N];
    public float[] fArrFld = new float[N];

    public static void main(String[] strArr) {

        try {
            Test0995 _instance = new Test0995();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth1() {

        int i8 = -30275, i9 = 8, i10 = 8, i11 = -40198, i12 = 43516, i13 = 40296;
        double d1 = 0.97604;

        Test0995.byFld = (byte) iFld;
        iFld = (int) Test0995.instanceCount;
        for (i8 = 10; 167 > i8; ++i8) {
            iFld *= (int) Test0995.instanceCount;
            for (d1 = 10; 1 < d1; d1--) {
                Test0995.dFld = Test0995.instanceCount;
                fFld += iFld;
                i9 += (int) (d1 * fFld);
                try {
                    i9 = (-842891066 % i11);
                    i11 = (i11 / 25);
                    i9 = (i10 / i9);
                } catch (ArithmeticException a_e) {
                }
                for (i12 = 1; i12 < 2; i12++) {
                    Test0995.instanceCount = i11;
                    i11 -= (int) 1.731F;
                    fFld = i11;
                    i13 = (int) fFld;
                    iFld -= (int) Test0995.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13;
    }

    public void vMeth(double d, int i7, float f) {

        int i14 = -2677, i15 = 127;
        long[][] lArr = new long[N][N];
        short[] sArr = new short[N];

        FuzzerUtils.init(lArr, -1266584351L);
        FuzzerUtils.init(sArr, (short) 4077);

        iArrFld[(i7 >>> 1) % N][(i7 >>> 1) % N] *= (int) (-((i7 + -57) + 2777500940602365128L));
        Test0995.instanceCount <<= (++i7);
        vMeth1();
        i7 += 66;
        for (float f1 : fArrFld) {
            iFld = iFld;
            for (i14 = 1; i14 < 4; ++i14) {
                Test0995.instanceCount += (((i14 * Test0995.instanceCount) + Test0995.instanceCount) - i15);
                i7 = (int) Test0995.instanceCount;
                Test0995.instanceCount -= iFld;
                i15 += (((i14 * i15) + fFld) - i14);
                switch ((((i7 >>> 1) % 2) * 5) + 50) {
                    case 60:
                        Test0995.instanceCount >>= -2;
                        i7 = i15;
                    case 51:
                        lArr[i14 + 1][i14] = iFld;
                        break;
                    default:
                        sArr[i14 + 1] = Test0995.byFld;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i7 + Float.floatToIntBits(f) + i14 + i15 +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr);
    }

    public int iMeth(long l) {

        int i4 = 0, i5 = -4, i6 = -136, i16 = 1, i17 = 0, i18 = -7, i19 = 16496;

        i4 = 1;
        do {
            for (i5 = 1; 7 > i5; ++i5) {
                vMeth(-1.42057, i6, fFld);
                iArrFld[i5 + 1][i5] <<= iFld;
                Test0995.instanceCount = i6;
                iArrFld[i4 + 1][i5 + 1] = (int) 918266457032525061L;
                i6 = i6;
                iFld = i6;
                iArrFld[i4 + 1][i5 + 1] -= (int) Test0995.instanceCount;
            }
            for (i16 = 1; i16 < 7; ++i16) {
                for (i18 = 1; i18 < 2; ++i18) {
                    i6 += i4;
                    i19 += iFld;
                    Test0995.instanceCount -= l;
                    if (true) break;
                }
            }
        } while (++i4 < 238);
        long meth_res = l + i4 + i5 + i6 + i16 + i17 + i18 + i19;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 48, i1 = 4, i2 = 40124, i3 = 238, i20 = -5, i21 = -38035;
        boolean b = true;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -1.126363);

        for (i = 5; i < 171; i++) {
            for (i2 = 1; 151 > i2; i2++) {
                if ((Test0995.dFld + (12 - iMeth(Test0995.instanceCount))) > i2) break;
                Test0995.dFld *= i3;
                iArrFld = iArrFld;
                switch ((((i >>> 1) % 3) * 5) + 61) {
                    case 64:
                        i1 = (int) Test0995.instanceCount;
                        iArrFld[i][i - 1] *= i1;
                        break;
                    case 62:
                        b = b;
                        Test0995.fArrFld1 = Test0995.fArrFld1;
                        dArr[i + 1] += i;
                        iFld >>= (int) Test0995.instanceCount;
                        break;
                    case 74:
                        fFld += (i2 - i3);
                        fFld += (1.1000F + (i2 * i2));
                        for (i20 = 1; i20 < 2; ++i20) {
                            fFld = i2;
                            iFld <<= i;
                            Test0995.instanceCount -= Test0995.instanceCount;
                            iArrFld[i2][i2 - 1] = (int) Test0995.instanceCount;
                            i1 <<= i3;
                            switch ((i % 8) + 38) {
                                case 38:
                                    switch ((i20 % 2) + 23) {
                                        case 23:
                                            i3 += (i20 * Test0995.instanceCount);
                                            if (b) break;
                                            Test0995.instanceCount <<= 158;
                                            break;
                                        case 24:
                                            b = b;
                                            iArrFld[i20 - 1][i2] = iFld;
                                            if (b) continue;
                                        default:
                                            fFld += i1;
                                            if (b) break;
                                    }
                                    break;
                                case 39:
                                    i3 += i;
                                    break;
                                case 40:
                                    fFld = i;
                                    break;
                                case 41:
                                    if (b) break;
                                    break;
                                case 42:
                                case 43:
                                    i21 -= Test0995.sFld;
                                    break;
                                case 44:
                                case 45:
                                default:
                                    iFld += i20;
                            }
                        }
                        break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 b i20 = " + i3 + "," + (b ? 1 : 0) + "," + i20);
        FuzzerUtils.out.println("i21 dArr = " + i21 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0995.instanceCount Test0995.dFld Test0995.byFld = " + Test0995.instanceCount + "," +
                Double.doubleToLongBits(Test0995.dFld) + "," + Test0995.byFld);
        FuzzerUtils.out.println("iFld fFld Test0995.sFld = " + iFld + "," + Float.floatToIntBits(fFld) + "," + Test0995.sFld);
        FuzzerUtils.out.println("iArrFld fArrFld Test0995.fArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0995.fArrFld1)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
