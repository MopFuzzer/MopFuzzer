// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test0500 {

    public static final int N = 400;

    public static volatile long instanceCount = 3069000560L;
    public static float fFld = 0.618F;
    public static double dFld = 56.1653;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public byte byFld = -59;
    public long[] lArrFld = new long[N];

    public static int iMeth1(float f1) {

        int i4 = -213;
        int i5 = 6;
        int i6 = -37245;
        int i7 = -140;
        int i8 = 45400;
        int[] iArr1 = new int[N];
        short s1 = 19864;
        double d2 = 0.89469;

        FuzzerUtils.init(iArr1, 48);

        for (i4 = 17; i4 < 312; ++i4) {
            Test0500.instanceCount -= s1;
            i6 = 1;
            do {
                for (i7 = 1; i7 > 1; i7--) {
                    i8 -= (int) Test0500.instanceCount;
                    if (i4 != 0) {
                    }
                    Test0500.fFld += (((i7 * i5) + i8) - i7);
                    if (i4 != 0) {
                    }
                    iArr1[i7 + 1] *= i6;
                }
            } while (++i6 < 6);
            i5 = i7;
        }
        i8 += 80;
        i5 -= i4;
        i5 -= i5;
        d2 -= -2833;
        i8 <<= i7;
        long meth_res = Float.floatToIntBits(f1) + i4 + i5 + s1 + i6 + i7 + i8 + Double.doubleToLongBits(d2) +
                FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(long l1, int i2, long l2) {

        double d1 = 77.86406;
        int i3 = 13;
        int i10 = 10;
        int i11 = 35;
        int i12 = -24737;
        int[] iArr = new int[N];
        short s = 15178;
        byte by = 114;
        long[] lArr = new long[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(lArr, -4804048749466451189L);
        FuzzerUtils.init(iArr, -132);
        FuzzerUtils.init(fArr, 1.76F);

        for (d1 = 6; d1 < 221; d1++) {
            i3 += (int) (7076167013991696832L + (d1 * d1));
            s += (short) (((i2 - Test0500.fFld) - (Test0500.instanceCount += i3)) - ((--lArr[(int) (d1 + 1)]) + (i3 - l1)));
            iArr[(int) (d1 + 1)] |= iMeth1(Test0500.fFld);
            switch ((int) ((d1 % 1) + 80)) {
                case 80:
                    try {
                        i2 = (-33 / i2);
                        i2 = (i2 / 43066);
                        i2 = (44897 / i2);
                    } catch (ArithmeticException a_e) {
                    }
                    fArr = fArr;
                    i10 = 1;
                    while (++i10 < 7) {
                        for (i11 = 1; i11 < 1; i11++) {
                            i12 = by;
                            switch ((i11 % 5) + 42) {
                                case 42:
                                    Test0500.fFld = i11;
                                    iArr[(int) (d1 - 1)] += (int) Test0500.fFld;
                                    iArr = iArr;
                                    break;
                                case 43:
                                    lArr[(int) (d1 + 1)] = i11;
                                    break;
                                case 44:
                                    i3 += i12;
                                    break;
                                case 45:
                                    i2 <<= (int) -254L;
                                    break;
                                case 46:
                                    lArr[i11 - 1] ^= i12;
                                    break;
                            }
                        }
                    }
                    break;
                default:
                    i3 += (int) d1;
            }
        }
        vMeth_check_sum += l1 + i2 + l2 + Double.doubleToLongBits(d1) + i3 + s + i10 + i11 + i12 + by +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(float f, int i1, long l) {

        int i13 = 70;
        int i14 = -8692;
        int i15 = 14;
        int i16 = -6795;
        int i17 = -8016;
        int i18 = -9;
        int[] iArr2 = new int[N];
        boolean b = true;

        FuzzerUtils.init(iArr2, -14);

        vMeth(Test0500.instanceCount, i1, 4157298658L);
        i1 = i1;
        l -= i1;
        for (i13 = 1; i13 < 343; i13++) {
            for (i15 = 1; i15 < 5; i15++) {
                Test0500.instanceCount -= (long) Test0500.dFld;
                if (b) continue;
                l -= i13;
                for (i17 = 1; i17 < 2; ++i17) {
                    i16 = 6686;
                    switch (((i17 % 8) * 5) + 82) {
                        case 122:
                            i1 += (i17 | Test0500.instanceCount);
                            f += (i17 * i17);
                            i16 = i1;
                            l -= i14;
                            break;
                        case 105:
                            f += i16;
                            break;
                        case 101:
                        case 120:
                            iArr2[i17 - 1] *= (int) -2.102764;
                        case 111:
                            i1 += i15;
                            break;
                        case 96:
                        case 92:
                        case 107:
                            i18 -= (int) -9L;
                            break;
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i1 + l + i13 + i14 + i15 + i16 + (b ? 1 : 0) + i17 + i18 +
                FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0500 _instance = new Test0500();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d = 11.41736;
        int i = -52116;
        int i19 = 0;
        int i20 = 240;
        int i21 = 254;
        int i22 = 245;
        int i23 = -1;
        int i24 = 209;
        int[] iArr3 = new int[N];
        short s2 = -27622;
        boolean b1 = true;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr3, -29357);
        FuzzerUtils.init(bArr, true);

        for (d = 3; d < 161; ++d) {
            i += iMeth(Test0500.fFld, i, Test0500.instanceCount);
            byFld -= (byte) i;
            for (i19 = 8; 159 > i19; i19++) {
                Test0500.instanceCount += i19;
                if (true) continue;
                i20 += (int) Test0500.instanceCount;
                i -= i20;
                iArr3 = iArr3;
                i21 = 1;
                while (++i21 < 2) {
                    iArr3[i21 + 1] = (int) Test0500.fFld;
                    iArr3[i19 + 1] -= (int) Test0500.fFld;
                    i = s2;
                    i20 += (i21 + Test0500.instanceCount);
                }
                i -= byFld;
                Test0500.fFld -= i21;
                Test0500.fFld += -9;
                Test0500.instanceCount = s2;
            }
            i += (int) (d * d);
            lArrFld[(int) (d - 1)] = Test0500.instanceCount;
            i22 = 1;
            while (++i22 < 159) {
                bArr[(int) (d + 1)] = b1;
                switch (((i22 % 4) * 5) + 14) {
                    case 20:
                        i += (((i22 * Test0500.instanceCount) + i21) - Test0500.instanceCount);
                    case 19:
                        i = i21;
                        break;
                    case 26:
                        for (i23 = 1; i23 < 1; ++i23) {
                            i24 >>>= i19;
                            if (b1) {
                                iArr3[i23 - 1] = i21;
                                i20 &= s2;
                            }
                        }
                        break;
                    case 21:
                        i20 = 23133;
                        break;
                    default:
                        lArrFld[(int) (d + 1)] *= Test0500.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("d i i19 = " + Double.doubleToLongBits(d) + "," + i + "," + i19);
        FuzzerUtils.out.println("i20 i21 s2 = " + i20 + "," + i21 + "," + s2);
        FuzzerUtils.out.println("i22 b1 i23 = " + i22 + "," + (b1 ? 1 : 0) + "," + i23);
        FuzzerUtils.out.println("i24 iArr3 bArr = " + i24 + "," + FuzzerUtils.checkSum(iArr3) + "," +
                FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0500.instanceCount Test0500.fFld Test0500.dFld = " + Test0500.instanceCount + "," +
                Float.floatToIntBits(Test0500.fFld) + "," + Double.doubleToLongBits(Test0500.dFld));
        FuzzerUtils.out.println("byFld lArrFld = " + byFld + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
