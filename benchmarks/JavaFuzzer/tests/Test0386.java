// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test0386 {

    public static final int N = 400;

    public static long instanceCount = 42637L;
    public static double[] dArrFld = new double[N];
    public static byte[][] byArrFld = new byte[N][N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0386.dArrFld, -103.66325);
        FuzzerUtils.init(Test0386.byArrFld, (byte) 16);
    }

    public volatile long lFld = -196L;
    public float[] fArrFld = new float[N];

    public static double dMeth(int i5, int i6, int i7) {

        int i8 = 144;
        int i9 = -63236;
        int i10 = -140;
        int i11 = -53001;
        int i12 = -154;
        int[] iArr = new int[N];
        short s1 = -1659;
        long l = -60711L;

        FuzzerUtils.init(iArr, -11);

        Test0386.instanceCount = i7;
        i6 = i5;
        Test0386.dArrFld[(i6 >>> 1) % N] = 1;
        switch (((i7 >>> 1) % 2) + 65) {
            case 65:
                for (i8 = 11; i8 < 359; ++i8) {
                    for (i10 = 1; i10 < 5; i10++) {
                        iArr[i8 - 1] >>= i8;
                        i6 += i5;
                        i11 = i11;
                        s1 -= (short) Test0386.instanceCount;
                        for (l = 1; l < 2; l++) {
                            double d = -121.102296;
                            float f = -13.906F;
                            i9 *= (int) d;
                            f -= i5;
                            d = 1996401320509076332L;
                            i11 = 52;
                        }
                    }
                }
                break;
            case 66:
                Test0386.instanceCount = i10;
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + i11 + s1 + l + i12 + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static int iMeth1(int i3, short s, int i4) {

        int i14 = 12;
        int i15 = -63235;
        int[] iArr1 = new int[N];
        float[] fArr = new float[N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr1, -4);
        FuzzerUtils.init(fArr, 2.101F);
        FuzzerUtils.init(lArr1, -3945L);

        i4 *= (-(i4 *= (i4 - i4)));
        dMeth(i3, i3, -13);
        for (int i13 : iArr1) {
            for (i14 = 1; i14 < 4; i14++) {
                i13 += s;
                Test0386.instanceCount &= i4;
                i13 *= (int) 1.417F;
                i13 = -6;
            }
            Test0386.byArrFld[(i15 >>> 1) % N][(i15 >>> 1) % N] >>= (byte) Test0386.instanceCount;
            i3 = i13;
            fArr[(i13 >>> 1) % N] += i14;
            lArr1[(i3 >>> 1) % N] <<= i4;
            Test0386.instanceCount >>>= 179;
            Test0386.instanceCount = Test0386.instanceCount;
            i15 = (int) Test0386.instanceCount;
        }
        long meth_res = i3 + s + i4 + i14 + i15 + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth() {

        int i2 = -11;
        int i16 = 24167;
        int i17 = 84;
        int i18 = -2;
        int[] iArr2 = new int[N];
        short s2 = -3286;
        byte by = -62;
        float f1 = -1.812F;
        float[] fArr1 = new float[N];
        double d1 = 2.5056;

        FuzzerUtils.init(iArr2, 41);
        FuzzerUtils.init(fArr1, -126.538F);

        i2 += Math.min(i2, iMeth1(i2, s2, 89));
        iArr2 = iArr2;
        for (i16 = 6; 228 > i16; ++i16) {
            i2 += (i16 * i16);
            fArr1[i16 + 1] -= i17;
            switch ((i16 % 2) + 71) {
                case 71:
                    i2 -= i17;
                    try {
                        i2 = (54059 % i2);
                        i2 = (i16 / i2);
                        iArr2[i16] = (iArr2[i16] % 9);
                    } catch (ArithmeticException a_e) {
                    }
                    i18 = 1;
                    while (++i18 < 7) {
                        i17 += (i18 * i18);
                        i2 -= by;
                        i17 += (i18 + f1);
                        f1 += (i18 * i18);
                        d1 = i16;
                        Test0386.instanceCount = Test0386.instanceCount;
                    }
                    break;
                case 72:
                    iArr2[i16 + 1] -= (int) f1;
            }
        }
        long meth_res = i2 + s2 + i16 + i17 + i18 + by + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) +
                FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0386 _instance = new Test0386();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -203;
        int i1 = 3;
        int i19 = 0;
        int i20 = 2;
        int i21 = -214;
        int i22 = -138;
        int i23 = 35997;
        int[] iArr3 = new int[N];
        short s3 = 29391;
        boolean b = false;
        float f2 = -2.621F;
        byte by1 = 44;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 265918528L);
        FuzzerUtils.init(iArr3, -7);

        for (i = 15; 250 > i; i++) {
            lArr[i - 1] = (iMeth() - lFld);
            i1 %= (int) (i1 | 1);
            i19 = 1;
            do {
                lArr[i] >>= lFld;
            } while (++i19 < 107);
            for (i20 = i; i20 < 107; ++i20) {
                i22 = 1;
                while (--i22 > 0) {
                    i1 = i20;
                    i1 >>>= i21;
                    i1 >>>= s3;
                    i23 -= i1;
                    switch (((i % 9) * 5) + 24) {
                        case 60:
                            if (b) break;
                            f2 += (i22 * i22);
                            i23 -= (int) lFld;
                            Test0386.instanceCount = i1;
                            break;
                        case 55:
                            i1 += (i22 ^ i23);
                            lFld -= 23394;
                            i23 = i19;
                        case 64:
                        case 50:
                            try {
                                i23 = (i19 % i);
                                i21 = (i21 % 193);
                                i23 = (i1 % 190);
                            } catch (ArithmeticException a_e) {
                            }
                            i23 *= i23;
                            i23 += (i22 - f2);
                            if (b) continue;
                            break;
                        case 65:
                            fArrFld[i22] *= i21;
                        case 33:
                            i21 = i19;
                            i23 -= i1;
                            i23 *= i;
                            by1 = (byte) -203368724L;
                        case 30:
                        case 63:
                            i1 = i22;
                            iArr3[i20 - 1] = (int) Test0386.instanceCount;
                            break;
                        case 58:
                            by1 *= (byte) f2;
                            break;
                        default:
                            f2 += i23;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i19 = " + i + "," + i1 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("s3 i23 b = " + s3 + "," + i23 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("f2 by1 lArr = " + Float.floatToIntBits(f2) + "," + by1 + "," +
                FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0386.instanceCount lFld Test0386.dArrFld = " + Test0386.instanceCount + "," + lFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0386.dArrFld)));
        FuzzerUtils.out.println("Test0386.byArrFld fArrFld = " + FuzzerUtils.checkSum(Test0386.byArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
