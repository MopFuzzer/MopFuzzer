// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0603 {

    public static final int N = 400;

    public static long instanceCount = -14L;
    public static byte byFld = 12;
    public static boolean bFld = false;
    public static short sFld = -23204;
    public static double[] dArrFld = new double[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0603.dArrFld, -58.40409);
    }

    public float fFld = 0.430F;
    public int iFld = 171;
    public long[] lArrFld = new long[N];
    public int[] iArrFld = new int[N];

    public static void vMeth1(int i1) {

        int i3 = -62362;
        int i4 = 2828;
        int i5 = -3;
        int i6 = -12;
        int[] iArr = new int[N];
        float f1 = 0.306F;
        double d = -2.41708;
        byte by = 4;

        FuzzerUtils.init(iArr, 42173);

        for (int i2 : iArr) {
            iArr = iArr;
            for (i3 = 1; i3 < 4; ++i3) {
                i1 += (198 + (i3 * i3));
                for (i5 = i3; i5 < 2; ++i5) {
                    boolean b1 = false;
                    i2 += (5188 + (i5 * i5));
                    Test0603.instanceCount += (((i5 * i4) + i4) - i2);
                    i4 = (int) Test0603.instanceCount;
                    if (b1) break;
                    if (b1) {
                        switch ((((i6 >>> 1) % 10) * 5) + 2) {
                            case 6:
                                i2 += (int) f1;
                            case 7:
                                f1 += (5 + (i5 * i5));
                                Test0603.instanceCount += (i5 | (long) f1);
                                break;
                            case 48:
                                f1 += (float) d;
                            case 49:
                                f1 -= (float) d;
                                break;
                            case 44:
                            case 42:
                                Test0603.dArrFld[i3 - 1] *= by;
                                break;
                            case 46:
                            case 38:
                                i1 = (int) 7231460375393776132L;
                            case 23:
                                i2 += 14;
                                break;
                            case 24:
                                i2 += (i5 ^ Test0603.instanceCount);
                                break;
                        }
                    } else {
                        i6 *= (int) f1;
                    }
                }
            }
        }
        vMeth1_check_sum += i1 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + by +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(boolean b, float f, int i) {

        double d1 = 56.102458, d2 = 22.90398;
        int i8 = -10;
        int i9 = 134;
        int i10 = 13463;
        int i11 = 131;
        int[] iArr1 = new int[N];
        float f2 = 1.464F;
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr1, -40227);
        FuzzerUtils.init(fArr, -8.876F);

        vMeth1(i);
        iArr1[(i >>> 1) % N] = Test0603.byFld;
        d1 = 1;
        do {
            d2 *= i;
            for (i8 = (int) (d1); i8 < 9; ++i8) {
                switch (((i8 >>> 1) % 9) + 56) {
                    case 56:
                        fArr = fArr;
                        Test0603.byFld += (byte) (-27794 + (i8 * i8));
                        break;
                    case 57:
                        Test0603.instanceCount *= i8;
                        i9 %= -54021;
                        break;
                    case 58:
                        i9 += (int) Test0603.instanceCount;
                    case 59:
                        for (i10 = (int) (d1); i10 < 1; ++i10) {
                            f += (i10 * Test0603.instanceCount);
                            i >>>= Test0603.byFld;
                            i = (int) Test0603.instanceCount;
                        }
                        break;
                    case 60:
                        Test0603.instanceCount *= (long) f;
                        break;
                    case 61:
                        if (b) continue;
                        break;
                    case 62:
                        i += (int) f2;
                        break;
                    case 63:
                        if (b) continue;
                    case 64:
                        iArr1[(int) (d1)] = (int) Test0603.instanceCount;
                        break;
                }
            }
        } while (++d1 < 177);
        vMeth_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f) + i + Double.doubleToLongBits(d1) +
                Double.doubleToLongBits(d2) + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1)
                + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0603 _instance = new Test0603();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(long l, short s, long l1) {

        float f3 = 2.133F;
        int i12 = -169, i13 = -6, i14 = -7, i15 = 23, i16 = 2, i17 = 49765, i18 = -1564;

        try {
            vMeth(Test0603.bFld, f3, i12);
            for (i13 = 5; (266 + 400) > i13; i13++) {
                for (i15 = 1; i15 < (4 + 400); ++i15) {
                    l1 += (((i15 * i15) + f3) - Test0603.byFld);
                    for (i17 = 1; i17 < 1; i17++) {
                        Test0603.instanceCount -= i13;
                        Test0603.instanceCount <<= s;
                        f3 -= -3;
                        s -= (short) i18;
                        Test0603.byFld >>>= (byte) i14;
                        i12 -= (int) l;
                        if (Test0603.bFld) break;
                        i16 *= (int) 44079L;
                        lArrFld[i17] = (long) f3;
                    }
                }
            }
        } catch (ArrayIndexOutOfBoundsException exc1) {
            i18 += (int) -253L;
        }
        long meth_res = l + s + l1 + Float.floatToIntBits(f3) + i12 + i13 + i14 + i15 + i16 + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i19 = 18239, i20 = -1, i21 = 14618, i22 = -7, i23 = -120;
        float[] fArr1 = new float[N];
        short[] sArr = new short[N];

        FuzzerUtils.init(fArr1, -44.140F);
        FuzzerUtils.init(sArr, (short) 7292);

        Test0603.instanceCount <<= Math.abs(iMeth(Test0603.instanceCount, (short) (22672), Test0603.instanceCount));
        fFld += iFld;
        i19 = 1;
        do {
            for (i20 = 4; i20 < 76; ++i20) {
                for (i22 = 1; 2 > i22; i22++) {
                    fArr1[i22 + 1] *= i20;
                    Test0603.instanceCount += (i22 + i20);
                }
                Test0603.instanceCount = -14;
                iFld += (((i20 * i21) + i23) - iFld);
                iArrFld[i19] |= i23;
                switch ((i20 % 2) + 13) {
                    case 13:
                        sArr[i19 - 1] -= (short) i22;
                    case 14:
                        i21 += 13;
                        iArrFld[i19] += i22;
                        switch (((i23 >>> 1) % 9) + 85) {
                            case 85:
                                i23 *= Test0603.sFld;
                                if (Test0603.bFld) continue;
                            case 86:
                                i23 = i23;
                            case 87:
                            case 88:
                                Test0603.instanceCount >>>= i21;
                                i21 >>= i22;
                                i23 = i23;
                                break;
                            case 89:
                                i21 -= i20;
                            case 90:
                                i23 *= (int) Test0603.instanceCount;
                                Test0603.instanceCount += (long) -1.92160;
                                Test0603.instanceCount += i20;
                                fFld += fFld;
                                break;
                            case 91:
                                fFld += ((long) i20 | (long) iFld);
                                fFld *= i23;
                                iArrFld[i20 + 1] = (int) Test0603.instanceCount;
                                Test0603.instanceCount <<= iFld;
                                break;
                            case 92:
                                Test0603.bFld = Test0603.bFld;
                            case 93:
                                i21 *= i22;
                                break;
                        }
                        break;
                }
            }
        } while (++i19 < 329);

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 fArr1 = " + i22 + "," + i23 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0603.instanceCount Test0603.byFld Test0603.bFld = " + Test0603.instanceCount + "," + Test0603.byFld +
                "," + (Test0603.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld iFld Test0603.sFld = " + Float.floatToIntBits(fFld) + "," + iFld + "," + Test0603.sFld);
        FuzzerUtils.out.println("Test0603.dArrFld lArrFld iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0603.dArrFld)) + "," + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
