// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test0417 {

    public static final int N = 400;

    public static long instanceCount = -10L;
    public static double dFld = 0.128253;
    public static boolean[] bArrFld = new boolean[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0417.bArrFld, false);
    }

    public static void vMeth1(int i6, short s) {

        float f3 = 34.438F;
        float[] fArr1 = new float[N];
        int i7 = -1956;
        int i8 = 16;
        int i9 = -11;
        int i10 = -12;
        int i11 = -196;
        int[] iArr1 = new int[N];
        byte by1 = 23;

        FuzzerUtils.init(iArr1, 141);
        FuzzerUtils.init(fArr1, -1.932F);

        i6 -= (int) f3;
        i6 += -232;
        i7 = 369;
        while (--i7 > 0) {
            for (i8 = 5; 1 < i8; i8--) {
                Test0417.instanceCount = by1;
                i6 -= 36205;
                Test0417.instanceCount += (-15958 + (i8 * i8));
                i9 *= s;
                Test0417.dFld = f3;
                for (i10 = 1; i10 < 2; ++i10) {
                    iArr1[i8] *= (int) Test0417.dFld;
                    s -= (short) Test0417.instanceCount;
                    fArr1[i7 - 1] %= (i10 | 1);
                    s -= (short) -12498;
                    i11 -= (int) f3;
                }
            }
        }
        vMeth1_check_sum += i6 + s + Float.floatToIntBits(f3) + i7 + i8 + i9 + by1 + i10 + i11 +
                FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static int iMeth(double d) {

        float f2 = -89.888F;
        int i3 = 25563;
        int i4 = -6216;
        int i5 = -10;
        int i12 = 16664;
        int i13 = -108;
        int i14 = 5;
        int[] iArr2 = new int[N];
        byte by = -110;
        short s1 = 30221;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 13301);
        FuzzerUtils.init(iArr2, 212);

        for (f2 = 3; 274 > f2; ++f2) {
            i3 += (int) Math.abs(Test0417.instanceCount--);
            d += 158;
            Test0417.instanceCount += (long) (((i3 - -60.60757) + 232) / (((long) ((Test0417.instanceCount + f2) *
                    (--sArr[(int) (f2 + 1)]))) | 1));
        }
        i3 *= (int) (((i3 - f2) + (i3 - i3)) * by);
        for (i4 = 12; 205 > i4; i4++) {
            vMeth1(i4, s1);
            i12 = 8;
            do {
                for (i13 = 1; i13 < 3; i13++) {
                    Test0417.instanceCount &= i14;
                    iArr2[i4] -= i12;
                    Test0417.instanceCount = (long) f2;
                    i3 += (i13 * i5);
                    Test0417.instanceCount += i13;
                    i5 += i4;
                }
            } while ((i12 -= 3) > 0);
        }
        long meth_res = Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i3 + by + i4 + i5 + s1 + i12 + i13 +
                i14 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(float f, long l, int i2) {

        int i15 = -45699, i16 = -9, i17 = -79, i18 = 9, i19 = 139, i20 = 13;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -81.470F);

        for (float f1 : fArr) {
            l = iMeth(Test0417.dFld);
        }
        for (i15 = 21; i15 < 340; i15++) {
            boolean b = true;
            if (b) {
                Test0417.instanceCount += (i15 * i15);
            }
            i16 >>>= -13;
            for (i17 = 1; i17 < 5; i17++) {
                for (i19 = 1; i19 < 2; ++i19) {
                    switch (((-39958 >>> 1) % 9) + 122) {
                        case 122:
                            i18 <<= -250;
                        case 123:
                            i20 >>= (int) Test0417.instanceCount;
                            l = i18;
                            i16 = 19;
                            l += (i19 ^ i16);
                            break;
                        case 124:
                            i2 = i20;
                            break;
                        case 125:
                            i18 *= -4;
                            break;
                        case 126:
                            Test0417.bArrFld[i19 + 1] = b;
                            break;
                        case 127:
                            i20 |= i19;
                        case 128:
                            i20 = -10;
                            break;
                        case 129:
                            l += i19;
                            break;
                        case 130:
                            i16 += (i19 | i19);
                            break;
                        default:
                            i16 *= i17;
                    }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + l + i2 + i15 + i16 + i17 + i18 + i19 + i20 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0417 _instance = new Test0417();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 14;
        int i1 = -202;
        int i21 = -62904;
        int i22 = 14;
        int i23 = 5653;
        int i24 = -8;
        int i25 = -251;
        int i26 = -4;
        int i27 = 14574;
        int i28 = -151;
        int i29 = -40580;
        int i30 = -12823;
        int i31 = 31936;
        int i32 = 148;
        int i33 = 154;
        int[] iArr = new int[N];
        float f4 = 106.697F;
        boolean b1 = true;
        short s2 = -31331;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 73);
        FuzzerUtils.init(lArr, -49482L);

        i = 303;
        do {
            i1 += (-141 + (i * i));
            iArr[i] ^= i;
        } while ((i -= 3) > 0);
        vMeth(f4, Test0417.instanceCount, -3);
        switch (((-77 >>> 1) % 1) + 45) {
            case 45:
                for (i21 = 4; i21 < 242; i21++) {
                    Test0417.instanceCount -= (long) f4;
                    i1 -= i21;
                    for (i23 = 106; i23 > 3; i23--) {
                        Test0417.instanceCount >>= -18001;
                        iArr[i23 + 1] = i23;
                    }
                    for (i25 = 4; i25 < 106; i25++) {
                        i26 = -8;
                        i24 *= (int) Test0417.instanceCount;
                    }
                    try {
                        i26 = (-38043 / iArr[i21]);
                        i1 = (i23 % i1);
                        i1 = (-32 / iArr[i21 + 1]);
                    } catch (ArithmeticException a_e) {
                    }
                    for (i27 = 106; i27 > 3; --i27) {
                        for (i29 = 1; i29 < 2; i29++) {
                            switch (((i28 >>> 1) % 2) + 50) {
                                case 50:
                                    Test0417.instanceCount += (i29 * i29);
                                    iArr[i29] *= (int) Test0417.instanceCount;
                                    try {
                                        i31 = (i21 / i1);
                                        iArr[i29 + 1] = (i26 / i31);
                                        i26 = (62548 % iArr[i21 + 1]);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    i28 >>= i28;
                                    break;
                                case 51:
                                    i26 -= (int) Test0417.instanceCount;
                                    break;
                            }
                            i30 += i28;
                        }
                        for (i32 = i21; 2 > i32; i32++) {
                            if (b1) {
                                f4 += i28;
                            } else {
                                i30 = (int) Test0417.dFld;
                            }
                            lArr = lArr;
                            s2 += (short) i1;
                        }
                    }
                }
                break;
        }

        FuzzerUtils.out.println("i i1 f4 = " + i + "," + i1 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 b1 s2 = " + i33 + "," + (b1 ? 1 : 0) + "," + s2);
        FuzzerUtils.out.println("iArr lArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0417.instanceCount Test0417.dFld Test0417.bArrFld = " + Test0417.instanceCount + "," +
                Double.doubleToLongBits(Test0417.dFld) + "," + FuzzerUtils.checkSum(Test0417.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
