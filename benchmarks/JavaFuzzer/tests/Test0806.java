// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0806 {

    public static final int N = 400;

    public static volatile long instanceCount = -5728766524069685097L;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0806.iArrFld, -173);
    }

    public int iFld = 12;
    public long[] lArrFld = new long[N];

    public static void vMeth1() {

        int i4 = -13;
        double d1 = 0.109787;
        boolean[] bArr = new boolean[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(byArr, (byte) 96);

        Test0806.instanceCount = (long) (((i4++) + (i4 - d1)) - Test0806.iArrFld[(i4 >>> 1) % N]);
        bArr[(i4 >>> 1) % N] = ((Integer.reverseBytes(i4) * (--byArr[(i4 >>> 1) % N])) == ((i4++) >> (16232L + i4)));
        vMeth1_check_sum += i4 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth2(float f, long l1, int i6) {

        short s1 = -22466;
        int i7 = -50854, i8 = 247, i9 = 5745, i10 = 52, i11 = -9, i12 = 53355, i13 = 13, i14 = -2, i15 = -1, i16 = 40254;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -99.722F);

        s1 = (short) f;
        for (i7 = 184; i7 > 6; i7 -= 2) {
            for (i9 = 1; i9 < 17; ++i9) {
                i8 += (((i9 * s1) + i7) - i9);
                i6 = i8;
                i8 &= i6;
                i10 = i9;
                for (i11 = 1; i11 < 2; i11++) {
                    i6 += i6;
                    i8 += (((i11 * i10) + i9) - i9);
                }
                fArr[i9] = i6;
            }
        }
        for (i13 = 3; i13 < 127; i13++) {
            for (i15 = 1; i15 < 13; i15++) {
                i6 >>>= s1;
                i10 -= i15;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + l1 + i6 + s1 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 +
                i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth(int i5) {

        float f1 = -32.984F;
        int i17 = 3, i18 = 25803, i19 = 6, i20 = -44994, i21 = -32589, i22 = -42816;

        vMeth2(f1, Test0806.instanceCount, i5);
        for (i17 = 8; i17 < 258; ++i17) {
            for (i19 = 1; i19 < 7; i19++) {
                i18 -= (int) f1;
                i18 = i5;
                Test0806.instanceCount <<= 2311538589766362090L;
                Test0806.instanceCount = Test0806.instanceCount;
                i5 += (int) Test0806.instanceCount;
                i18 += (i19 ^ Test0806.instanceCount);
                i20 = (int) f1;
                try {
                    i18 = (i18 / Test0806.iArrFld[i17 + 1]);
                    i5 = (i19 % -1562108408);
                    i20 = (i20 % i5);
                } catch (ArithmeticException a_e) {
                }
                for (i21 = 1; i21 < 2; i21++) {
                    byte by = 64;
                    i22 >>= by;
                }
                i22 -= -43;
            }
            i22 += (int) Test0806.instanceCount;
        }
        long meth_res = i5 + Float.floatToIntBits(f1) + i17 + i18 + i19 + i20 + i21 + i22;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0806 _instance = new Test0806();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(long l) {

        int i2 = 5;
        int i3 = 132;
        int i23 = -386;
        int i24 = -1;
        int[] iArr = new int[N];
        short s = 8981;
        byte by1 = -27;

        FuzzerUtils.init(iArr, -215);

        iFld &= (int) (iArr[(368 >>> 1) % N] = (int) Math.min(Long.reverseBytes(l), -1780542513L));
        for (i2 = 2; i2 < 144; ++i2) {
            double d = -114.32860;
            iFld >>= (int) (-((iArr[i2 + 1]--) << (long) (d * s)));
            vMeth1();
            i3 -= (int) lMeth(i3);
            Test0806.instanceCount += i2;
            for (i23 = 1; i23 < 11; i23++) {
                lArrFld[i23 + 1] &= s;
                i24 = iFld;
            }
            by1 = (byte) i2;
        }
        vMeth_check_sum += l + i2 + i3 + s + i23 + i24 + by1 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i = 59, i1 = 2, i25 = 16002, i26 = -3, i27 = -42868;
        float f2 = 70.122F;
        float[] fArr1 = new float[N];
        boolean b = false;
        boolean[] bArr1 = new boolean[N];
        short s2 = 21157;
        double d2 = 2.18538;

        FuzzerUtils.init(bArr1, false);
        FuzzerUtils.init(fArr1, 59.895F);

        for (i = 15; i < 286; ++i) {
            vMeth(Test0806.instanceCount);
            i25 = 1;
            do {
                Test0806.iArrFld[i - 1] *= (int) Test0806.instanceCount;
                f2 -= -46;
            } while (++i25 < 93);
            for (i26 = 93; i26 > 2; --i26) {
                int i28 = -189;
                b = b;
                switch ((i % 2) + 84) {
                    case 84:
                        f2 *= i28;
                        i27 += (((i26 * i28) + i1) - Test0806.instanceCount);
                        i27 += -28506;
                        bArr1[i26 + 1] = true;
                        break;
                    case 85:
                        i28 += i26;
                        Test0806.instanceCount += (long) -2.477F;
                        i1 <<= (int) Test0806.instanceCount;
                        i1 = (int) f2;
                        break;
                }
                fArr1[i26 + 1] *= Test0806.instanceCount;
                s2 += (short) d2;
                iFld += i27;
                Test0806.instanceCount <<= iFld;
            }
            iFld -= (int) Test0806.instanceCount;
            lArrFld[i + 1] *= s2;
            if (b) {
                Test0806.iArrFld[i - 1] -= i25;
                i27 = (int) Test0806.instanceCount;
                s2 <<= (short) Test0806.instanceCount;
            }
            Test0806.iArrFld[i + 1] = (int) -66L;
            Test0806.iArrFld[i] += (int) f2;
            i1 = (int) Test0806.instanceCount;
        }
        i1 -= (int) f2;

        FuzzerUtils.out.println("i i1 i25 = " + i + "," + i1 + "," + i25);
        FuzzerUtils.out.println("f2 i26 i27 = " + Float.floatToIntBits(f2) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b s2 d2 = " + (b ? 1 : 0) + "," + s2 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("bArr1 fArr1 = " + FuzzerUtils.checkSum(bArr1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0806.instanceCount iFld Test0806.iArrFld = " + Test0806.instanceCount + "," + iFld + "," +
                FuzzerUtils.checkSum(Test0806.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
