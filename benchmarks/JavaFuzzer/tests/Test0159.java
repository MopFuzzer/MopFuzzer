// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0159 {

    public static final int N = 400;

    public static long instanceCount = 3832095249L;
    public static short sFld = -17410;
    public static float fFld = 36.898F;
    public static byte byFld = 36;
    public static int iFld = -102;
    public static volatile float[] fArrFld = new float[N];
    public static long[] lArrFld = new long[N];
    public static int[][] iArrFld = new int[N][N];
    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0159.fArrFld, -48.921F);
        FuzzerUtils.init(Test0159.lArrFld, 215L);
        FuzzerUtils.init(Test0159.iArrFld, 10);
    }

    public static void vMeth() {

        int i4 = -6;
        int i5 = 28986;
        int i6 = -13;
        int i7 = -45224;
        int i8 = -12;
        int i9 = 144;
        int[] iArr = new int[N];
        float f = -1.962F;

        FuzzerUtils.init(iArr, 13772);

        for (i4 = 15; i4 < 287; ++i4) {
            Test0159.fArrFld[i4] -= -43952;
            for (i6 = i4; i6 < 6; i6++) {
                f = i5;
                Test0159.instanceCount = Test0159.instanceCount;
                for (i8 = 1; i8 < 1; i8++) {
                    i9 += (i8 ^ i4);
                    iArr[i8 + 1] ^= i4;
                    Test0159.instanceCount = i5;
                    i5 += (i8 * i8);
                    Test0159.instanceCount = -16867;
                }
                Test0159.lArrFld[i6] = (long) -34.52737;
            }
            try {
                i7 = (i7 % -9804);
                i7 = (i6 / -28961);
                i5 = (i6 / iArr[i4 - 1]);
            } catch (ArithmeticException a_e) {
            }
            Test0159.instanceCount >>= i4;
            Test0159.instanceCount = -24818L;
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i3, long l) {

        int i10 = -13661, i11 = -238, i12 = -125, i13 = -4, i14 = -63521, i15 = -98, i16 = 217, i17 = -13;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 18150);

        vMeth();
        for (i10 = 10; i10 < 339; i10 += 3) {
            i3 = i11;
        }
        for (i12 = 2; i12 < 127; i12++) {
            i3 = (int) l;
            for (i14 = 1; i14 < 13; ++i14) {
                i11 = i15;
                i13 = (int) l;
                sArr[i12] += (short) i11;
                switch ((((i13 >>> 1) % 2) * 5) + 81) {
                    case 89:
                        for (i16 = 1; i16 < 2; i16++) {
                            i3 ^= i15;
                            Test0159.fFld += (((i16 * i10) + i11) - Test0159.byFld);
                            Test0159.iArrFld[i14 - 1][i12 - 1] %= (int) (l | 1);
                            i11 %= (int) (i12 | 1);
                        }
                        break;
                    case 82:
                        i3 = (int) l;
                }
            }
        }
        long meth_res = i3 + l + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static byte byMeth() {

        int i = 114, i1 = 11, i2 = 2, i18 = 14, i19 = -13;
        boolean b = false;

        i = 1;
        do {
            i1 = (int) (Test0159.instanceCount++);
            Test0159.sFld *= (short) (i1 += (-i));
            i2 = (int) ((-(i - i)) - (Test0159.instanceCount--));
            i1 += (i1 + iMeth(i, Test0159.instanceCount));
            for (i18 = 1; i18 < 5; ++i18) {
                int i20 = -9;
                Test0159.byFld -= (byte) Test0159.iFld;
                i20 -= Test0159.iFld;
                i19 -= (int) Test0159.instanceCount;
                i19 = i2;
                if (b) {
                    switch (((i % 2) * 5) + 33) {
                        case 42:
                            i20 += 11;
                            break;
                        case 39:
                            Test0159.fArrFld[i] += i2;
                            break;
                        default:
                            i1 -= (int) Test0159.instanceCount;
                    }
                } else if (b) {
                    i20 += i;
                }
            }
        } while (++i < 362);
        long meth_res = i + i1 + i2 + i18 + i19 + (b ? 1 : 0);
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0159 _instance = new Test0159();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f1 = 2.363F;
        int i21 = 50065, i22 = -229, i23 = 756, i24 = 0, i25 = 9660, i26 = -7;
        double d = 69.4762;
        long l1 = -7574301838922336025L;
        boolean b1 = false;
        boolean[][] bArr = new boolean[N][N];
        short[] sArr1 = new short[N];

        FuzzerUtils.init(sArr1, (short) 13051);
        FuzzerUtils.init(bArr, true);

        Test0159.instanceCount >>= byMeth();
        for (f1 = 5; f1 < 317; f1++) {
            switch ((int) (((f1 % 8) * 5) + 62)) {
                case 71:
                    Test0159.iArrFld[(int) (f1 + 1)][(int) (f1 - 1)] <<= i21;
                    break;
                case 64:
                    i21 = (int) Test0159.instanceCount;
                    break;
                case 89:
                    for (i22 = 81; 5 < i22; i22 -= 3) {
                        try {
                            Test0159.iArrFld[i22 + 1][(int) (f1)] = (-27401 / i21);
                            Test0159.iFld = (Test0159.iArrFld[i22][i22] % -160);
                            i23 = (Test0159.iArrFld[i22 + 1][(int) (f1)] % 3585);
                        } catch (ArithmeticException a_e) {
                        }
                        i21 += (i22 * Test0159.iFld);
                        d = Test0159.fFld;
                        i21 <<= i21;
                        i24 = 1;
                        do {
                            i23 *= 141;
                            i23 ^= Test0159.sFld;
                            i23 &= Test0159.iFld;
                            i21 >>>= (int) Test0159.instanceCount;
                            Test0159.instanceCount += (5054286169876625542L + (i24 * i24));
                            i23 += (int) Test0159.fFld;
                            sArr1[i22 - 1] += (short) i23;
                            Test0159.lArrFld[i24 + 1] += -4865272853984337908L;
                            Test0159.lArrFld[i22 - 1] = i22;
                            Test0159.instanceCount += (long) d;
                        } while (++i24 < 4);
                    }
                    for (l1 = 5; l1 < 81; l1++) {
                        d = Test0159.sFld;
                        Test0159.iFld = (int) f1;
                        Test0159.instanceCount -= -4376;
                        Test0159.iArrFld[(int) (l1)][(int) (f1 + 1)] <<= (int) l1;
                        i26 = 1;
                        while (++i26 < 2) {
                            if (b1) {
                                Test0159.instanceCount += i26;
                                i21 += (i26 | (long) f1);
                            } else {
                                Test0159.instanceCount += (long) d;
                            }
                        }
                    }
                    break;
                case 74:
                    Test0159.instanceCount += -9194;
                case 70:
                    Test0159.instanceCount += i25;
                    break;
                case 63:
                    bArr[(int) (f1 - 1)][(int) (f1)] = b1;
                case 72:
                    i25 /= (int) (l1 | 1);
                    break;
                case 81:
                    Test0159.iFld += (int) f1;
                    break;
                default:
                    i21 += (int) (f1 + i24);
            }
        }

        FuzzerUtils.out.println("f1 i21 i22 = " + Float.floatToIntBits(f1) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 d i24 = " + i23 + "," + Double.doubleToLongBits(d) + "," + i24);
        FuzzerUtils.out.println("l1 i25 i26 = " + l1 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("b1 sArr1 bArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(sArr1) + "," +
                FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0159.instanceCount Test0159.sFld Test0159.fFld = " + Test0159.instanceCount + "," + Test0159.sFld +
                "," + Float.floatToIntBits(Test0159.fFld));
        FuzzerUtils.out.println("Test0159.byFld Test0159.iFld Test0159.fArrFld = " + Test0159.byFld + "," + Test0159.iFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0159.fArrFld)));
        FuzzerUtils.out.println("Test0159.lArrFld Test0159.iArrFld = " + FuzzerUtils.checkSum(Test0159.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0159.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
