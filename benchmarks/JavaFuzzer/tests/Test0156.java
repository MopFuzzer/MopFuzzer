// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0156 {

    public static final int N = 400;

    public static long instanceCount = -3740823519L;
    public static volatile int iFld = 60;
    public static int iFld1 = 59885;
    public static float fFld = -2.207F;
    public static int[] iArrFld = new int[N];
    public static int[] iArrFld1 = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0156.iArrFld, -104);
        FuzzerUtils.init(Test0156.iArrFld1, -34710);
    }

    public static void vMeth2(long l1) {

        boolean b1 = true;
        boolean[] bArr = new boolean[N];
        int i6 = -2;
        int i7 = 13;
        int[] iArr = new int[N];
        int[][] iArr1 = new int[N][N];
        float f = 2.67F;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, -134);
        FuzzerUtils.init(byArr, (byte) 28);
        FuzzerUtils.init(iArr1, -41824);

        bArr[(Test0156.iFld >>> 1) % N] = b1;
        Test0156.iFld += 5;
        for (int i5 : iArr) {
            if (b1) continue;
            switch (((Test0156.iFld >>> 1) % 7) + 106) {
                case 106:
                    try {
                        i5 = (-1972756948 % Test0156.iFld);
                        Test0156.iFld = (202 % i5);
                        i5 = (i5 / i5);
                    } catch (ArithmeticException a_e) {
                    }
                    if (b1) continue;
                    break;
                case 107:
                    for (i6 = 1; 4 > i6; i6 += 2) {
                        if (b1) break;
                        f -= -1;
                        i7 += (-12680 + (i6 * i6));
                        Test0156.iFld += (int) (0.947F + (i6 * i6));
                        i7 -= i7;
                        byArr[i6 - 1] -= (byte) f;
                    }
                    try {
                        Test0156.iFld1 = (i5 / i6);
                        i7 = (Test0156.iFld / Test0156.iFld);
                        iArr[(i5 >>> 1) % N] = (Test0156.iFld1 % i7);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 108:
                    iArr1 = iArr1;
                    break;
                case 109:
                    if (Test0156.iFld1 != 0) {
                        vMeth2_check_sum += l1 + (b1 ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f) +
                                FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr) +
                                FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    break;
                case 110:
                    i7 *= (int) 106L;
                case 111:
                    try {
                        i5 = (-79 % Test0156.iArrFld[(Test0156.iFld1 >>> 1) % N]);
                        iArr1[(Test0156.iFld >>> 1) % N][(Test0156.iFld1 >>> 1) % N] = (15 % i7);
                        Test0156.iFld = (iArr1[(Test0156.iFld1 >>> 1) % N][(14 >>> 1) % N] % Test0156.iFld1);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 112:
                    Test0156.iArrFld1[(i5 >>> 1) % N] = (int) 1.43359;
                    break;
                default:
                    i7 = 24499;
            }
        }
        vMeth2_check_sum += l1 + (b1 ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(bArr) +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i1, long l, int i2) {

        int i3 = -32449, i4 = 3, i8 = 12, i9 = -7, i10 = 141;
        byte by = -34;
        long l2 = 1992099955L, l3 = -239L;

        i2 += (int) Test0156.instanceCount;
        for (i3 = 3; i3 < 140; i3++) {
            if (true) {
                vMeth2(l);
            }
            i2 += by;
            Test0156.iFld += (int) (-1600457932L + (i3 * i3));
            for (l2 = 1; l2 < 11; l2++) {
                i2 += (int) (((l2 * Test0156.instanceCount) + i4) - Test0156.iFld1);
                i4 |= i8;
                i2 = Test0156.iFld1;
                for (i9 = 2; i9 > 1; i9 -= 3) {
                    Test0156.instanceCount = l2;
                    l3 = (long) Test0156.fFld;
                    Test0156.iFld1 |= -38;
                    i1 += (i9 * i9);
                }
            }
        }
        vMeth1_check_sum += i1 + l + i2 + i3 + i4 + by + l2 + i8 + i9 + i10 + l3;
    }

    public static void vMeth(boolean b, int i) {

        int i11 = -46689, i12 = 13108, i13 = 39642, i14 = 238, i15 = -14;
        double d = -11.112428;
        byte[] byArr1 = new byte[N];

        FuzzerUtils.init(byArr1, (byte) 121);

        vMeth1(Test0156.iFld, Test0156.instanceCount, Test0156.iFld1);
        Test0156.iFld <<= Test0156.iFld1;
        i11 = 195;
        while ((i11 -= 3) > 0) {
            for (i12 = 1; i12 < 24; ++i12) {
                Test0156.iFld = i13;
            }
            i14 = 1;
            while (++i14 < 24) {
                Test0156.iArrFld1[i14 - 1] -= (int) Test0156.fFld;
                i13 = Test0156.iFld1;
                Test0156.iFld = i13;
                Test0156.iFld = (int) d;
            }
            Test0156.fFld -= i14;
            byArr1[i11 + 1] = (byte) Test0156.fFld;
            i15 = 1;
            while (++i15 < 24) {
                try {
                    Test0156.iFld = (i12 % 217);
                    Test0156.iFld = (-274994064 % i11);
                    Test0156.iArrFld[i11 + 1] = (Test0156.iFld1 % -2546);
                } catch (ArithmeticException a_e) {
                }
                Test0156.iFld <<= i15;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d) + i15 +
                FuzzerUtils.checkSum(byArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0156 _instance = new Test0156();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {


        vMeth(true, Test0156.iFld1);
        Test0156.iFld1 -= Test0156.iFld;


        FuzzerUtils.out.println("Test0156.instanceCount Test0156.iFld Test0156.iFld1 = " + Test0156.instanceCount + "," + Test0156.iFld +
                "," + Test0156.iFld1);
        FuzzerUtils.out.println("Test0156.fFld Test0156.iArrFld Test0156.iArrFld1 = " + Float.floatToIntBits(Test0156.fFld) + "," +
                FuzzerUtils.checkSum(Test0156.iArrFld) + "," + FuzzerUtils.checkSum(Test0156.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
