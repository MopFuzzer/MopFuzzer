// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0061 {

    public static final int N = 400;

    public static long instanceCount = 151L;
    public static int iFld = -9;
    public static float fFld = -96.663F;
    public static byte byFld = -65;
    public static short sFld = -27802;
    public static double dFld = 1.8611;
    public static boolean bFld = false;
    public static double[] dArrFld = new double[N];
    public static volatile long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0061.dArrFld, 0.75776);
        FuzzerUtils.init(Test0061.lArrFld, 72L);
    }

    public static int iMeth() {

        int i2 = -4;
        int i3 = -8;
        int i4 = -3;
        int i5 = 0;
        int i6 = 5;
        int i7 = 58664;
        int i8 = 53537;
        int i9 = -22531;
        int i10 = -2232;
        int[] iArr2 = new int[N];
        boolean b = false;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -68.44F);
        FuzzerUtils.init(iArr2, -92);

        for (i2 = 259; i2 > 11; i2 -= 3) {
            fArr[i2] = Test0061.iFld;
            for (i4 = 1; i4 < 19; i4 += 3) {
                i5 += (i4 - Test0061.fFld);
                iArr2[i4] -= (int) Test0061.instanceCount;
                for (i6 = 1; i6 < 4; ++i6) {
                    try {
                        i5 = (-38740 % i7);
                        i5 = (i4 / i2);
                        iArr2[i2 - 1] = (1349823529 / i8);
                    } catch (ArithmeticException a_e) {
                    }
                    if (b) continue;
                    fArr[i2 + 1] -= i3;
                    Test0061.dArrFld = Test0061.dArrFld;
                }
            }
            for (i9 = 1; i9 < 19; i9++) {
                iArr2[i2] %= (int) (i9 | 1);
                iArr2[i9 - 1] -= 7579;
                Test0061.iFld &= i10;
                Test0061.byFld = (byte) Test0061.instanceCount;
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1() {

        int i = 18708;
        int i1 = -2;
        int i11 = 187;
        int i12 = -28250;
        int i13 = -6;
        int i14 = -35;
        int[] iArr1 = new int[N];
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(iArr1, 96);
        FuzzerUtils.init(lArr, -7912948818510285368L);

        iArr1[(Test0061.iFld >>> 1) % N] = (int) (lArr[(Test0061.iFld >>> 1) % N][(Test0061.iFld >>> 1) % N] * (Math.abs(Test0061.iFld)
                * -123.212F));
        for (i = 15; i < 261; i++) {
            Test0061.dArrFld[i - 1] = (((Test0061.instanceCount * i1) * Math.max(0, i1)) - iMeth());
            for (i11 = 1; i11 < 7; i11++) {
                Test0061.instanceCount >>= Test0061.instanceCount;
                i1 += i11;
                iArr1[i11 + 1] = Test0061.sFld;
                for (i13 = i11; i13 < 2; ++i13) {
                    Test0061.dArrFld[i11 + 1] = Test0061.fFld;
                    Test0061.instanceCount = Test0061.instanceCount;
                    Test0061.instanceCount += (long) Test0061.fFld;
                    iArr1[i13 - 1] -= i13;
                    Test0061.instanceCount += (i13 * i13);
                }
                Test0061.dFld = 9437;
                Test0061.instanceCount += i11;
            }
        }
        vMeth1_check_sum += i + i1 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        long l = -1513160523L;
        int i15 = -10531;
        int i16 = 3;
        int i17 = 0;
        int i18 = 52579;
        int i19 = -19922;
        int[] iArr = new int[N];
        boolean b1 = false;

        FuzzerUtils.init(iArr, 5);

        iArr[(Test0061.iFld >>> 1) % N] *= Test0061.iFld;
        vMeth1();
        l = 1;
        while (++l < 372) {
            switch (((56 >>> 1) % 8) + 89) {
                case 89:
                    Test0061.iFld = (int) Test0061.instanceCount;
                    for (i15 = 1; i15 < 5; i15++) {
                        iArr[i15] <<= (int) l;
                        Test0061.iFld = i17;
                        if (b1) {
                            Test0061.iFld += i15;
                            for (i18 = 2; i18 > 1; i18--) {
                                Test0061.instanceCount += (i18 * i18);
                                i17 = 100;
                                i17 += (i18 - Test0061.instanceCount);
                                i16 = (int) Test0061.instanceCount;
                            }
                        } else if (false) {
                            i16 = i19;
                        }
                    }
                    break;
                case 90:
                    i16 &= i16;
                case 91:
                    i17 = Test0061.iFld;
                    break;
                case 92:
                    Test0061.instanceCount -= i19;
                case 93:
                    Test0061.lArrFld[(int) (l + 1)] = i17;
                    break;
                case 94:
                    i16 += (int) (l ^ i16);
                    break;
                case 95:
                    if (b1) break;
                case 96:
                    iArr[(int) (l)] += (int) Test0061.instanceCount;
                    break;
            }
        }
        vMeth_check_sum += l + i15 + i16 + i17 + i18 + i19 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0061 _instance = new Test0061();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = -18683;
        int i21 = -9917;
        int i22 = -7;
        int i23 = 46625;
        int i24 = 69;
        int i25 = 9;
        int[] iArr3 = new int[N];
        long l1 = -12L;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, 9.517F);
        FuzzerUtils.init(iArr3, -29644);

        vMeth();
        for (i20 = 14; i20 < 393; ++i20) {
            fArr1[i20] = i21;
            for (i22 = 1; 66 > i22; i22++) {
                i23 += i23;
                switch ((i22 % 10) + 37) {
                    case 37:
                        Test0061.iFld |= i23;
                    case 38:
                        i21 += Test0061.sFld;
                        break;
                    case 39:
                    case 40:
                        Test0061.iFld += (int) -2.570F;
                        break;
                    case 41:
                        try {
                            i23 = (iArr3[i20 - 1] / iArr3[i22 - 1]);
                            i23 = (iArr3[i20 - 1] % 49135);
                            Test0061.iFld = (i21 % Test0061.iFld);
                        } catch (ArithmeticException a_e) {
                        }
                        break;
                    case 42:
                        Test0061.instanceCount >>= l1;
                        for (i24 = 1; i24 < 2; ++i24) {
                            if (Test0061.bFld) {
                                iArr3[i24 - 1] >>= i25;
                                i25 <<= (int) Test0061.instanceCount;
                                Test0061.lArrFld = Test0061.lArrFld;
                            } else {
                                i23 += (int) l1;
                                Test0061.instanceCount ^= 6;
                                Test0061.fFld = l1;
                                Test0061.iFld += Test0061.sFld;
                            }
                            if (Test0061.bFld) break;
                            Test0061.fFld *= -125.741F;
                            i23 = i22;
                            switch (((i25 >>> 1) % 1) + 27) {
                                case 27:
                                    Test0061.bFld = Test0061.bFld;
                                    i25 -= 0;
                                    break;
                                default:
                                    Test0061.fFld = -139;
                            }
                        }
                        i21 *= (int) Test0061.instanceCount;
                        Test0061.dArrFld[i20 - 1] += i25;
                    case 43:
                        i21 -= i21;
                        break;
                    case 44:
                        Test0061.instanceCount = i24;
                        break;
                    case 45:
                        if (Test0061.bFld) continue;
                        break;
                    case 46:
                        Test0061.byFld = (byte) i24;
                        break;
                    default:
                        i21 = (int) Test0061.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 l1 i24 = " + i23 + "," + l1 + "," + i24);
        FuzzerUtils.out.println("i25 fArr1 iArr3 = " + i25 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))
                + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0061.instanceCount Test0061.iFld Test0061.fFld = " + Test0061.instanceCount + "," + Test0061.iFld +
                "," + Float.floatToIntBits(Test0061.fFld));
        FuzzerUtils.out.println("Test0061.byFld Test0061.sFld Test0061.dFld = " + Test0061.byFld + "," + Test0061.sFld + "," +
                Double.doubleToLongBits(Test0061.dFld));
        FuzzerUtils.out.println("Test0061.bFld Test0061.dArrFld Test0061.lArrFld = " + (Test0061.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0061.dArrFld)) + "," + FuzzerUtils.checkSum(Test0061.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
