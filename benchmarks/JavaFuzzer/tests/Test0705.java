// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0705 {

    public static final int N = 400;

    public static long instanceCount = 8L;
    public static float[] fArrFld = new float[N];
    public static double[] dArrFld = new double[N];
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0705.fArrFld, 56.249F);
        FuzzerUtils.init(Test0705.dArrFld, 2.85060);
        FuzzerUtils.init(Test0705.iArrFld, 3);
    }

    public static long lMeth() {

        int i11 = -6;
        int i12 = 53;
        int i13 = -92;
        int i14 = 39539;
        int i15 = -23286;
        int i16 = -14;
        int i17 = -2140;
        int i18 = 145;
        int i19 = 28190;
        int i20 = 10;
        int i21 = 29032;
        int[] iArr = new int[N];
        byte by = -2;
        float f1 = -1.57F;
        short s = 30412;
        boolean b = true;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr, -64363);
        FuzzerUtils.init(bArr, true);

        Test0705.instanceCount = i11;
        for (i12 = 10; 254 > i12; i12++) {
            Test0705.instanceCount *= 126;
            by += (byte) (((i12 * i12) + i11) - i13);
        }
        for (i14 = 16; i14 < 358; ++i14) {
            iArr[i14 + 1] *= i13;
            for (i16 = 5; i16 > 1; i16 -= 2) {
                for (i18 = i14; i18 < 3; i18 += 2) {
                    Test0705.fArrFld = Test0705.fArrFld;
                    Test0705.instanceCount |= i16;
                    Test0705.fArrFld[i16 - 1] *= -248;
                    Test0705.instanceCount -= i12;
                }
                for (i20 = i14; i20 < 3; ++i20) {
                    f1 += s;
                    bArr[i14 - 1] = b;
                }
            }
        }
        long meth_res = i11 + i12 + i13 + by + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + Float.floatToIntBits(f1)
                + s + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i4) {

        int i5 = 0, i6 = 29873, i7 = -58122, i8 = -61102, i9 = -179, i10 = -26;
        short s1 = 29522;
        double d = 2.122213;
        boolean b1 = true;

        for (i5 = 1; i5 < 242; i5++) {
            switch (((((i4 + i5) >>> 1) % 8) * 5) + 41) {
                case 63:
                    for (i7 = i5; i7 < 7; ++i7) {
                        float f = 48.788F;
                        f *= (Test0705.fArrFld[i5 - 1] - ((Test0705.instanceCount + i7) % ((i5 + -110) | 1)));
                        if (b1) {
                            for (i9 = i7; i9 < 1; ++i9) {
                                i6 += (i9 * i9);
                                Test0705.instanceCount += (i9 + i7);
                                f -= (-(lMeth() - Test0705.instanceCount));
                                Test0705.instanceCount = 112;
                                Test0705.dArrFld[i9 - 1] = -2;
                                f -= s1;
                                i10 += 44401;
                                i6 = i8;
                                d -= Test0705.instanceCount;
                            }
                        } else {
                            i8 += i7;
                        }
                    }
                    break;
                case 70:
                case 76:
                    Test0705.iArrFld[i5] *= -26679;
                    break;
                case 53:
                    Test0705.instanceCount += i5;
                    break;
                case 50:
                    Test0705.iArrFld[i5 + 1] >>= i8;
                    break;
                case 49:
                    Test0705.instanceCount -= i4;
                    break;
                case 54:
                    Test0705.fArrFld[i5 - 1] *= -5701350263154944914L;
                    break;
                case 56:
                    Test0705.instanceCount <<= 5L;
                    break;
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + s1 + Double.doubleToLongBits(d) + (b1 ? 1 : 0);
    }

    public static void main(String[] strArr) {

        try {
            Test0705 _instance = new Test0705();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth() {

        int i1 = 7327, i2 = 7, i3 = 14701;
        float f2 = 2.97F;

        i1 += (int) ((36 * (Test0705.instanceCount * i1)) * (i1--));
        for (i2 = 6; 156 > i2; i2++) {
            vMeth(-7);
            i3 += (i2 * f2);
        }
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 51366;
        boolean b2 = true;

        i = iMeth();
        b2 = b2;

        FuzzerUtils.out.println("i b2 = " + i + "," + (b2 ? 1 : 0));

        FuzzerUtils.out.println("Test0705.instanceCount Test0705.fArrFld Test0705.dArrFld = " + Test0705.instanceCount + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0705.fArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0705.dArrFld)));
        FuzzerUtils.out.println("Test0705.iArrFld = " + FuzzerUtils.checkSum(Test0705.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
