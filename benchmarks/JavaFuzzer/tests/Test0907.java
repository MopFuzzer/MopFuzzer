// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0907 {

    public static final int N = 400;

    public static long instanceCount = 642569960L;
    public static float fFld = 1.613F;
    public static double dFld = -71.106038;
    public static byte byFld = -17;
    public static volatile short sFld = -20854;
    public static int iFld = 1;
    public static long[][] lArrFld = new long[N][N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0907.lArrFld, -2703179636L);
    }

    public boolean bFld = true;
    public int[] iArrFld = new int[N];
    public volatile int[] iArrFld1 = new int[N];
    public int[] iArrFld2 = new int[N];

    public static void vMeth(int i1, long l) {

        int i2 = -18149, i3 = 5, i4 = -10, i5 = -51449, i6 = -114, i7 = -116;
        boolean b = false;
        byte by = -20;
        short s = -19865;
        double[] dArr1 = new double[N];

        FuzzerUtils.init(dArr1, 1.70072);

        for (i2 = 10; i2 < 317; ++i2) {
            for (i4 = 1; i4 < 5; i4++) {
                boolean b1 = true;
                i3 = i3;
                if (b) {
                    b = b1;
                } else if (b) {
                    switch (((i5 >>> 1) % 9) + 47) {
                        case 47:
                            Test0907.fFld += (i4 * i4);
                            switch (((i4 % 1) * 5) + 48) {
                                case 53:
                                    if (false) continue;
                                    break;
                            }
                            Test0907.instanceCount = 14;
                            for (i6 = i4; i6 < 2; i6++) {
                                i7 %= (int) ((long) (Test0907.fFld) | 1);
                                if (false) break;
                                b = b1;
                            }
                            break;
                        case 48:
                            i1 += (-38708 + (i4 * i4));
                            break;
                        case 49:
                            Test0907.lArrFld[i2 + 1][i4 + 1] += l;
                            break;
                        case 50:
                            i5 = i5;
                            break;
                        case 51:
                            by -= (byte) s;
                            break;
                        case 52:
                            Test0907.instanceCount += (i4 * i4);
                            break;
                        case 53:
                            Test0907.fFld *= l;
                            break;
                        case 54:
                            dArr1 = FuzzerUtils.double1array(N, (double) -2.117358);
                        case 55:
                            Test0907.fFld += by;
                            break;
                    }
                } else {
                    i5 += i4;
                }
            }
        }
        vMeth_check_sum += i1 + l + i2 + i3 + i4 + i5 + (b ? 1 : 0) + i6 + i7 + by + s +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static int iMeth1() {

        int i8 = -5;
        int i9 = -155;
        int i10 = 5;
        int i11 = 41347;
        int i12 = 18409;
        int i13 = 48804;
        int i14 = -2;
        int[] iArr = new int[N];
        short s1 = 5380;

        FuzzerUtils.init(iArr, 4);

        vMeth(58267, 2352327283L);
        for (i8 = 8; i8 < 375; i8++) {
            if (false) break;
            for (i10 = 1; 5 > i10; ++i10) {
                i9 += 62460;
                for (i12 = 1; i12 < 2; i12++) {
                    Test0907.instanceCount *= (long) Test0907.dFld;
                }
                Test0907.instanceCount += (long) -113.694F;
                Test0907.instanceCount = -31560L;
                try {
                    i11 = (42621 / i13);
                    iArr[i8 - 1] = (i13 % iArr[i10 - 1]);
                    iArr[i10 + 1] = (51 / iArr[i10]);
                } catch (ArithmeticException a_e) {
                }
            }
            switch ((i8 % 4) + 24) {
                case 24:
                    if (i12 != 0) {
                    }
                    i14 = 1;
                    while ((i14 += 2) < 5) {
                        Test0907.byFld &= (byte) s1;
                        i11 <<= 11;
                    }
                    break;
                case 25:
                case 26:
                    iArr[i8 + 1] -= i14;
                    break;
                case 27:
                    Test0907.fFld -= i9;
                    break;
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + i14 + s1 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i) {

        int i15 = 99, i16 = -35050, i17 = -205, i18 = 7838, i19 = 12;
        double[][] dArr = new double[N][N];
        short[] sArr = new short[N];

        FuzzerUtils.init(dArr, -1.26634);
        FuzzerUtils.init(sArr, (short) -26699);

        i = (int) (Test0907.fFld * (--i));
        dArr[(i >>> 1) % N][(i >>> 1) % N] *= ((iMeth1() + 8) - i);
        i15 = 1;
        while ((i15 += 3) < 129) {
            Test0907.instanceCount -= i15;
            Test0907.byFld -= (byte) 2.12F;
            i *= i;
            for (i16 = 1; 35 > i16; i16++) {
                Test0907.instanceCount = i16;
                Test0907.instanceCount = Test0907.instanceCount;
                Test0907.sFld += (short) (((i16 * Test0907.instanceCount) + Test0907.instanceCount) - i16);
                sArr[i16 + 1] = (short) i;
                for (i18 = 1; i18 < 2; i18++) {
                    i17 = i;
                    i17 -= -1;
                    Test0907.dFld *= i17;
                }
            }
        }
        long meth_res = i + i15 + i16 + i17 + i18 + i19 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0907 _instance = new Test0907();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = 6, i21 = 0, i22 = 9353, i23 = 10, i24 = 7;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) 82);

        iArrFld = (iArrFld = iArrFld);
        Test0907.instanceCount = (iMeth(-241) + Test0907.iFld);
        for (i20 = 10; i20 < 379; ++i20) {
            if (bFld) break;
            Test0907.iFld = 0;
            for (i22 = 2; i22 < 68; i22++) {
                i21 = i22;
                Test0907.byFld += (byte) (189 + (i22 * i22));
                Test0907.fFld = i20;
                i21 -= (int) Test0907.instanceCount;
                i23 = (int) Test0907.fFld;
                switch (((i21 >>> 1) % 4) + 127) {
                    case 127:
                        i23 += i22;
                        switch (((i22 % 2) * 5) + 37) {
                            case 41:
                                Test0907.lArrFld[i20 + 1] = FuzzerUtils.long1array(N, (long) 11218L);
                                i24 = 1;
                                do {
                                    iArrFld[i20] = (int) Test0907.fFld;
                                    Test0907.fFld = -13;
                                    iArrFld1[i22 - 1] <<= (int) -41912L;
                                    i21 -= Test0907.byFld;
                                    byArr[i20 + 1] = (byte) Test0907.dFld;
                                    Test0907.instanceCount += (i24 | (long) Test0907.fFld);
                                    iArrFld[i20 + 1] += Test0907.sFld;
                                    switch (((-196 >>> 1) % 7) + 4) {
                                        case 4:
                                            Test0907.instanceCount <<= Test0907.iFld;
                                            break;
                                        case 5:
                                            Test0907.fFld *= (float) Test0907.dFld;
                                            Test0907.iFld += Test0907.iFld;
                                            break;
                                        case 6:
                                        case 7:
                                            iArrFld2[i24 - 1] |= i22;
                                            break;
                                        case 8:
                                            Test0907.iFld &= i22;
                                            i23 = i24;
                                            break;
                                        case 9:
                                        case 10:
                                            if (false) continue;
                                            break;
                                    }
                                } while (++i24 < 2);
                            case 46:
                                Test0907.instanceCount *= -99;
                                break;
                            default:
                                iArrFld1 = FuzzerUtils.int1array(N, (int) 186);
                        }
                    case 128:
                    case 129:
                        i21 += -53413;
                        break;
                    case 130:
                    default:
                        if (bFld) continue;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 byArr = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0907.instanceCount Test0907.fFld Test0907.dFld = " + Test0907.instanceCount + "," +
                Float.floatToIntBits(Test0907.fFld) + "," + Double.doubleToLongBits(Test0907.dFld));
        FuzzerUtils.out.println("Test0907.byFld Test0907.sFld Test0907.iFld = " + Test0907.byFld + "," + Test0907.sFld + "," + Test0907.iFld);
        FuzzerUtils.out.println("bFld iArrFld Test0907.lArrFld = " + (bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(iArrFld) +
                "," + FuzzerUtils.checkSum(Test0907.lArrFld));
        FuzzerUtils.out.println("iArrFld1 iArrFld2 = " + FuzzerUtils.checkSum(iArrFld1) + "," +
                FuzzerUtils.checkSum(iArrFld2));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
