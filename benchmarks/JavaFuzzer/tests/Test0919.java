// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0919 {

    public static final int N = 400;

    public static long instanceCount = 8039512295353700257L;
    public static int iFld = 19;
    public static byte byFld = 25;
    public static double dFld = 0.100168;
    public static int iFld1 = 64037;
    public static int[] iArrFld = new int[N];
    public static volatile long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0919.iArrFld, -11);
        FuzzerUtils.init(Test0919.lArrFld, -7440486338789783545L);
    }

    public static int iMeth1(int i3) {

        float f1 = 0.781F, f2 = 2.391F;
        int i4 = 1;
        int i5 = -223;
        int i6 = -241;
        int i7 = 102;
        int i8 = -55910;
        int i9 = 228;
        int i10 = -111;
        int[][] iArr = new int[N][N];
        boolean b = false;
        short s1 = 26639;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr, -56237);
        FuzzerUtils.init(lArr1, -19161L);

        for (f1 = 251; 7 < f1; f1--) {
            i4 += (int) (f1 - i4);
            for (i5 = 1; i5 < 7; i5++) {
                iArr[(int) (f1 + 1)][(int) (f1)] += i6;
                Test0919.byFld += (byte) (((i5 * Test0919.instanceCount) + i4) - i6);
                f2 += i5;
                i7 = Test0919.iFld;
                Test0919.iFld += (int) f2;
                Test0919.instanceCount -= i3;
                for (i8 = 1; 2 > i8; i8++) {
                    i3 -= (int) Test0919.dFld;
                    b = b;
                    s1 += (short) i8;
                    lArr1[(int) (f1 + 1)] = i10;
                    i7 = i10;
                }
            }
        }
        long meth_res = i3 + Float.floatToIntBits(f1) + i4 + i5 + i6 + Float.floatToIntBits(f2) + i7 + i8 + i9 + (b ? 1
                : 0) + s1 + i10 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i1, int i2, float f) {

        int i11 = -136, i12 = -52680;

        Test0919.iFld = (int) ((i1 / ((--Test0919.instanceCount) | 1)) - (iMeth1(i2) - Test0919.instanceCount));
        for (i11 = 5; 335 > i11; i11++) {
            Test0919.iArrFld[i11 - 1] *= i11;
            f += i11;
            Test0919.iArrFld[i11 + 1] -= (int) Test0919.instanceCount;
            i1 *= (int) f;
            i12 = i2;
            i12 *= i11;
            i12 >>>= i11;
            try {
                Test0919.iArrFld[i11 - 1] = (i2 % -12258);
                Test0919.iFld = (i12 % -244);
                i12 = (Test0919.iFld / i12);
            } catch (ArithmeticException a_e) {
            }
            i12 += (i11 * i11);
        }
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f) + i11 + i12;
    }

    public static int iMeth() {

        float f3 = 43.888F;
        float[] fArr = new float[N];
        int i13 = 1, i14 = -14398, i15 = -25526, i16 = -37497, i17 = 28, i18 = 36689, i19 = -23;
        short s2 = -23945;

        FuzzerUtils.init(fArr, 111.44F);

        vMeth1(42877, Test0919.iFld, f3);
        Test0919.iFld = Test0919.iFld;
        for (i13 = 5; i13 < 221; ++i13) {
            Test0919.instanceCount *= Test0919.instanceCount;
        }
        i15 = 1;
        while (++i15 < 296) {
            Test0919.dFld *= i13;
        }
        for (i16 = 332; i16 > 14; i16 -= 3) {
            switch (((Test0919.iFld1 >>> 1) % 8) + 99) {
                case 99:
                    for (i18 = i16; i18 < 15; ++i18) {
                        Test0919.instanceCount >>= Test0919.iFld1;
                        Test0919.iArrFld[(i19 >>> 1) % N] <<= -17571;
                        Test0919.iFld += (i18 | i19);
                        i14 -= (int) 1145834311687333086L;
                        f3 += f3;
                        if (false) continue;
                    }
                    break;
                case 100:
                    i19 = (int) Test0919.instanceCount;
                    break;
                case 101:
                case 102:
                    Test0919.lArrFld[i16 - 1] *= Test0919.instanceCount;
                    break;
                case 103:
                    s2 += (short) -179;
                    break;
                case 104:
                    Test0919.byFld = (byte) Test0919.instanceCount;
                    break;
                case 105:
                    if (i16 != 0) {
                    }
                    break;
                case 106:
                    if (true) break;
                    break;
                default:
                    fArr[i16 + 1] = -113;
            }
        }
        long meth_res = Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 + i17 + i18 + i19 + s2 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0919 _instance = new Test0919();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(long l, long l1) {

        int i = -117;
        short s = 2139;

        i = (int) (l + ((i++) + i));
        s *= (short) i;
        vMeth_check_sum += l + l1 + i + s;
    }

    public void mainTest(String[] strArr1) {

        int i20 = 26899;
        int i21 = -14;
        int i22 = 11;
        int i23 = 38908;
        int i24 = 16;
        int i25 = -1;
        int i26 = 234;
        int[][] iArr1 = new int[N][N];
        float f4 = -1.347F, f5 = 0.40F;
        double d = 44.9684;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -3453104055L);
        FuzzerUtils.init(iArr1, 0);

        vMeth(Test0919.instanceCount, ((Test0919.iFld - Test0919.iFld) - (--Test0919.iFld)) - ((Test0919.iFld++) + (Test0919.iFld <<=
                Test0919.iFld)));
        lArr[(Test0919.iFld >>> 1) % N] >>= (((Test0919.instanceCount - 19376) - (Test0919.instanceCount + Test0919.instanceCount)) -
                ((-9545L - iMeth()) - Test0919.iFld));
        for (i20 = 123; i20 > 6; i20 -= 3) {
            Test0919.instanceCount >>= 14850;
            for (i22 = 3; i22 < 165; ++i22) {
                Test0919.iArrFld[i20] ^= Test0919.iFld;
                Test0919.iFld1 <<= Test0919.iFld1;
                for (i24 = 1; i24 < 4; ++i24) {
                    i25 ^= Test0919.iFld;
                    i21 += (((i24 * Test0919.iFld1) + i22) - Test0919.iFld1);
                    Test0919.iFld1 += (i24 * i24);
                    Test0919.instanceCount = (long) f4;
                    Test0919.iFld1 = i24;
                    Test0919.iArrFld[i24 - 1] >>= Test0919.iFld;
                    Test0919.iArrFld[i24] -= Test0919.iFld1;
                }
                f4 += Test0919.instanceCount;
                Test0919.iFld1 <<= Test0919.byFld;
                Test0919.iFld -= (int) f4;
                Test0919.byFld &= (byte) i22;
            }
            i25 = 1251;
            d = i20;
            Test0919.instanceCount *= i21;
            Test0919.iArrFld = Test0919.iArrFld;
            Test0919.dFld = 1609475829993698292L;
            for (long l3 : Test0919.lArrFld) {
                i23 = i24;
                i21 = i25;
                for (f5 = 2; f5 > 1; --f5) {
                    iArr1 = iArr1;
                }
                Test0919.instanceCount -= Test0919.iFld1;
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f4 d f5 = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d) + "," +
                Float.floatToIntBits(f5));
        FuzzerUtils.out.println("i26 lArr iArr1 = " + i26 + "," + FuzzerUtils.checkSum(lArr) + "," +
                FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0919.instanceCount Test0919.iFld Test0919.byFld = " + Test0919.instanceCount + "," + Test0919.iFld +
                "," + Test0919.byFld);
        FuzzerUtils.out.println("Test0919.dFld Test0919.iFld1 Test0919.iArrFld = " + Double.doubleToLongBits(Test0919.dFld) + "," +
                Test0919.iFld1 + "," + FuzzerUtils.checkSum(Test0919.iArrFld));
        FuzzerUtils.out.println("Test0919.lArrFld = " + FuzzerUtils.checkSum(Test0919.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
