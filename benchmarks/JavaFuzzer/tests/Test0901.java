// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0901 {

    public static final int N = 400;

    public static long instanceCount = -142L;
    public static volatile byte byFld = -52;
    public static boolean bFld = true;
    public static float fFld = 1.757F;
    public static double dFld = 116.101024;
    public static long lFld = 13883L;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0901.fArrFld, 0.312F);
        FuzzerUtils.init(Test0901.iArrFld, -1);
    }

    public int iFld = 20796;

    public static long lMeth(float f1, int i5) {

        int i6 = -110;
        int i7 = -8;
        int i8 = 14;
        int i9 = 101;
        int i10 = 253;
        int[] iArr2 = new int[N];
        long l1 = 10L;
        short s = -12676;

        FuzzerUtils.init(iArr2, 4243);

        Test0901.fArrFld[(i5 >>> 1) % N] = Test0901.instanceCount;
        for (i6 = 188; i6 > 7; i6--) {
            Test0901.fFld /= 63;
            Test0901.instanceCount = (long) f1;
            Test0901.fFld += i7;
            for (i8 = 1; i8 < 9; i8++) {
                for (l1 = 2; 1 < l1; l1 -= 3) {
                    double d1 = -30.51537;
                    if (Test0901.bFld) break;
                    iArr2[(int) (l1)] /= (int) (i10 | 1);
                    i9 *= s;
                    if (Test0901.bFld) {
                        f1 = i8;
                        i9 = (int) l1;
                        Test0901.fFld = i10;
                    }
                    d1 += Test0901.fFld;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + l1 + i10 + s + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth(long l) {

        int i = 168;
        int i1 = -3;
        int i2 = -176;
        int i3 = 41033;
        int i4 = -53468;
        int[] iArr = new int[N];
        int[] iArr1 = new int[N];
        double d = 1.77040;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(iArr1, -4);
        FuzzerUtils.init(bArr, false);

        Test0901.byFld ^= (byte) i;
        i1 = 1;
        while (++i1 < 318) {
            for (i2 = 1; i2 < 5; i2++) {
                i += (i2 ^ i2);
                l += (i2 * i2);
                i3 %= (int) ((i++) | 1);
                iArr = (iArr = iArr1);
                l -= (++i3);
                for (d = i1; d < 2; ++d) {
                    i3 -= i2;
                    Test0901.bFld = Test0901.bFld;
                    Test0901.fFld -= i1;
                    i4 = (int) l;
                    Test0901.bFld = (bArr[i1] = (Test0901.bFld = (-61559 == (i * i))));
                    Test0901.fFld = ((Test0901.fArrFld[i1 - 1]++) + lMeth(Test0901.fFld, i2));
                }
            }
        }
        long meth_res = l + i + i1 + i2 + i3 + Double.doubleToLongBits(d) + i4 + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {

        float f = -2.601F;
        int i11 = -232, i12 = 5595;

        f -= ((-iMeth(Test0901.instanceCount)) % (Test0901.instanceCount | 1));
        for (i11 = 1; i11 < 136; ++i11) {
            i12 -= (int) f;
            i12 >>= i12;
            Test0901.iArrFld = Test0901.iArrFld;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i11 + i12;
    }

    public static void main(String[] strArr) {

        try {
            Test0901 _instance = new Test0901();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i13 = -58939, i14 = -2793, i15 = -4, i16 = 11, i17 = -109, i18 = -221;
        short s1 = -2784;
        boolean[] bArr1 = new boolean[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(bArr1, true);
        FuzzerUtils.init(dArr, 89.4588);

        vMeth();
        i13 = 1;
        while (++i13 < 251) {
            for (i14 = i13; 100 > i14; i14++) {
                i16 = 1;
                do {
                    i15 *= i14;
                    i15 *= 4;
                    i15 *= (int) Test0901.instanceCount;
                    switch (((i13 % 2) * 5) + 90) {
                        case 91:
                            Test0901.dFld -= -96;
                            i15 += (i16 * i13);
                            i15 -= (int) Test0901.lFld;
                            Test0901.instanceCount += (long) Test0901.dFld;
                            break;
                        case 94:
                            i15 += (i16 * i15);
                            break;
                    }
                    Test0901.iArrFld = FuzzerUtils.int1array(N, (int) -5);
                    Test0901.iArrFld[i16 - 1] += (int) Test0901.lFld;
                    Test0901.lFld += -1383L;
                } while ((i16 -= 3) > 0);
                Test0901.instanceCount = i16;
                Test0901.bFld = Test0901.bFld;
                for (i17 = 1; i17 < 1; ++i17) {
                    i15 += (int) Test0901.instanceCount;
                    i15 -= i15;
                    switch (i13 + 78) {
                        case 78:
                            i15 *= (int) Test0901.instanceCount;
                            break;
                        case 79:
                            i18 = i18;
                            Test0901.fFld %= (i15 | 1);
                            if (Test0901.bFld) break;
                        case 80:
                            Test0901.iArrFld[i14] = i13;
                            try {
                                i18 = (32110 % i13);
                                i18 = (i18 / i16);
                                i15 = (-63332 / i15);
                            } catch (ArithmeticException a_e) {
                            }
                            i15 = i18;
                            break;
                        case 81:
                            Test0901.lFld += Test0901.byFld;
                            break;
                        case 82:
                            i18 = (int) 103.102801;
                            break;
                        case 83:
                        case 84:
                            Test0901.dFld -= -64;
                            break;
                        case 85:
                            i15 = (int) -46559L;
                        case 86:
                            i15 += -56;
                            break;
                        case 87:
                            bArr1[i13 + 1] = Test0901.bFld;
                            break;
                        case 88:
                            i18 += i15;
                            break;
                        case 89:
                            i18 += Test0901.byFld;
                            break;
                        case 90:
                            Test0901.iArrFld[i17 + 1] = 31988;
                            break;
                        case 91:
                            Test0901.iArrFld[i14] = (int) Test0901.instanceCount;
                            break;
                        case 92:
                            i18 += (((i17 * i13) + i17) - Test0901.instanceCount);
                        case 93:
                            i18 >>= Test0901.byFld;
                            break;
                        case 94:
                            i15 += (((i17 * i16) + i15) - Test0901.byFld);
                            break;
                        case 95:
                            i15 += i15;
                        case 96:
                            i15 -= i15;
                        case 97:
                            Test0901.instanceCount += i17;
                        case 98:
                            i18 += (i17 | s1);
                            break;
                        case 99:
                            i15 += (i17 | Test0901.byFld);
                        case 100:
                            i15 = -114;
                        case 101:
                            Test0901.fFld = Test0901.lFld;
                            break;
                        case 102:
                            i18 *= 2;
                            break;
                        case 103:
                            i18 *= i18;
                        case 104:
                            try {
                                i15 = (1894412480 % i16);
                                i15 = (i18 / i14);
                                Test0901.iArrFld[i13] = (iFld % Test0901.iArrFld[i13]);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 105:
                            i18 += (((i17 * i14) + i17) - iFld);
                            break;
                        case 106:
                            Test0901.iArrFld[i17] = i18;
                            break;
                        case 107:
                            Test0901.iArrFld[i17 - 1] = -40721;
                            break;
                        case 108:
                            Test0901.lFld *= -8409L;
                            break;
                        case 109:
                            i15 = i13;
                        case 110:
                            i18 = i17;
                        case 111:
                            i18 += i17;
                            break;
                        case 112:
                            i15 *= i16;
                            break;
                        case 113:
                            iFld += (i17 + Test0901.fFld);
                            break;
                        case 114:
                        case 115:
                            Test0901.lFld = i18;
                            break;
                        case 116:
                            Test0901.instanceCount *= (long) Test0901.fFld;
                        case 117:
                            iFld = (int) Test0901.dFld;
                        case 118:
                            i15 = (int) Test0901.instanceCount;
                            break;
                        case 119:
                            Test0901.iArrFld = FuzzerUtils.int1array(N, (int) -213);
                            break;
                        case 120:
                            if (Test0901.bFld) break;
                            break;
                        case 121:
                            iFld = i15;
                            break;
                        case 122:
                            Test0901.dFld *= i18;
                            break;
                        case 123:
                            Test0901.instanceCount = Test0901.lFld;
                            break;
                        case 124:
                            iFld = Test0901.byFld;
                            break;
                        case 125:
                            if (Test0901.bFld) break;
                        case 126:
                            s1 *= (short) Test0901.fFld;
                        case 127:
                            i18 -= -21380;
                            break;
                        case 128:
                            Test0901.dFld -= Test0901.instanceCount;
                        case 129:
                            i15 += i17;
                            break;
                        case 130:
                            i18 = i17;
                            break;
                        case 131:
                            iFld = i16;
                            break;
                        case 132:
                            iFld += i17;
                            break;
                        case 133:
                            Test0901.fFld += 122;
                            break;
                        case 134:
                            Test0901.fFld += (float) Test0901.dFld;
                        case 135:
                            dArr[i17] += i15;
                            break;
                        case 136:
                            if (Test0901.bFld) continue;
                        case 137:
                            if (false) break;
                            break;
                        case 138:
                            i18 += (i17 ^ s1);
                            break;
                        case 139:
                            iFld += (((i17 * Test0901.fFld) + i18) - Test0901.lFld);
                            break;
                        case 140:
                            i18 >>= s1;
                            break;
                        case 141:
                            dArr[i14] *= -1362070048313571150L;
                        case 142:
                            Test0901.iArrFld[i14 + 1] -= (int) Test0901.lFld;
                            break;
                        case 143:
                            Test0901.byFld = (byte) i16;
                            break;
                        case 144:
                            Test0901.bFld = Test0901.bFld;
                            break;
                        case 145:
                            if (Test0901.bFld) continue;
                            break;
                        case 146:
                            Test0901.iArrFld[i14] += i14;
                            break;
                        case 147:
                            Test0901.lFld = s1;
                            break;
                        default:
                            Test0901.dFld -= Test0901.fFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("s1 bArr1 dArr = " + s1 + "," + FuzzerUtils.checkSum(bArr1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0901.instanceCount Test0901.byFld Test0901.bFld = " + Test0901.instanceCount + "," + Test0901.byFld +
                "," + (Test0901.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0901.fFld Test0901.dFld Test0901.lFld = " + Float.floatToIntBits(Test0901.fFld) + "," +
                Double.doubleToLongBits(Test0901.dFld) + "," + Test0901.lFld);
        FuzzerUtils.out.println("iFld Test0901.fArrFld Test0901.iArrFld = " + iFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0901.fArrFld)) + "," + FuzzerUtils.checkSum(Test0901.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
