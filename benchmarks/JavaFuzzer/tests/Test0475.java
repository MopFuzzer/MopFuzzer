// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test0475 {

    public static final int N = 400;

    public static long instanceCount = 163363369642233440L;
    public static volatile short sFld = 29334;
    public static volatile long lFld = -10L;
    public static byte byFld = 36;
    public static int[] iArrFld = new int[N];
    public static int[][] iArrFld1 = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0475.iArrFld, -38956);
        FuzzerUtils.init(Test0475.iArrFld1, 27942);
    }

    public volatile int iFld = 13;
    public boolean bFld = true;

    public static int iMeth(long l) {

        int i5 = -21549;

        i5 += i5;
        Test0475.iArrFld[(i5 >>> 1) % N] = (int) Test0475.instanceCount;
        long meth_res = l + i5;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1() {

        int i1 = 0, i2 = -15854, i3 = 132, i4 = -7494, i6 = 740, i7 = 55;
        boolean b = true;
        float f = -93.696F;

        for (int i : Test0475.iArrFld) {
            for (i1 = 1; 4 > i1; i1++) {
                if (i3 != 0) {
                    vMeth1_check_sum += i1 + i2 + i3 + i4 + i6 + i7 + (b ? 1 : 0) + Float.floatToIntBits(f);
                    return;
                }
                i3 += i1;
                i4 <<= iMeth(0L);
                for (i6 = 2; i6 > 1; --i6) {
                    i4 += (int) 1L;
                    i *= Test0475.sFld;
                    switch ((((-3 >>> 1) % 2) * 5) + 127) {
                        case 137:
                            if (b) continue;
                            i = (int) f;
                            break;
                        case 131:
                            Test0475.iArrFld1 = Test0475.iArrFld1;
                            if (b) break;
                            i7 = (int) Test0475.instanceCount;
                            if (i2 != 0) {
                                vMeth1_check_sum += i1 + i2 + i3 + i4 + i6 + i7 + (b ? 1 : 0) + Float.floatToIntBits(f);
                                return;
                            }
                        default:
                            i += i3;
                    }
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + i6 + i7 + (b ? 1 : 0) + Float.floatToIntBits(f);
    }

    public static void vMeth() {

        int i8 = 2, i9 = 164, i10 = -61710, i11 = -62925, i12 = 14;
        float f1 = -2.244F, f2 = -122.694F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 30L);

        vMeth1();
        i8 *= i8;
        f1 += Test0475.sFld;
        i8 &= i8;
        i8 = (int) -3602251970L;
        for (i9 = 12; i9 < 354; ++i9) {
            f2 = 1;
            while (++f2 < 5) {
                lArr[(int) (f2 - 1)] -= i8;
                i8 -= i8;
                for (i11 = 1; i11 < 1; ++i11) {
                    i8 += (((i11 * i9) + Test0475.sFld) - i11);
                    i12 = i8;
                    i12 = i11;
                }
                i8 += (int) (((f2 * i10) + i12) - Test0475.instanceCount);
                Test0475.iArrFld[i9 - 1] = i11;
            }
        }
        vMeth_check_sum += i8 + Float.floatToIntBits(f1) + i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 +
                FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0475 _instance = new Test0475();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f3 = 23.15F;
        float f4 = 2.238F;
        float[] fArr = new float[N];
        int i13 = 24233, i14 = -10, i15 = -1, i16 = -26338, i17 = -27356, i18 = 12;
        double d = 2.74706;
        long[][] lArr1 = new long[N][N];

        FuzzerUtils.init(fArr, -4.615F);
        FuzzerUtils.init(lArr1, -28450L);

        vMeth();
        f3 -= iFld;
        for (i13 = 6; i13 < 317; ++i13) {
            iFld |= iFld;
            for (f4 = 4; 81 > f4; ++f4) {
                Test0475.lFld += (long) (((f4 * i15) + i15) - i15);
                i15 -= iFld;
                i15 -= iFld;
                i14 = (int) d;
                if (bFld) {
                    iFld += (int) (f4 * f4);
                } else if (true) {
                    iFld /= (int) (Test0475.lFld | 1);
                } else {
                    i15 -= i14;
                    i15 += (int) Test0475.lFld;
                    Test0475.lFld += (long) f4;
                }
                Test0475.iArrFld1[i13][i13 + 1] += 169;
                f3 += ((long) f4 | (long) i13);
                i14 &= (int) -14L;
                if (bFld) continue;
            }
            Test0475.byFld += (byte) (((i13 * Test0475.sFld) + Test0475.lFld) - i14);
            Test0475.instanceCount -= i14;
            fArr[i13] *= -4918;
            for (i16 = 81; i16 > 1; --i16) {
                i17 = (int) d;
                Test0475.sFld -= (short) i14;
            }
            bFld = false;
            i18 = 1;
            do {
                Test0475.lFld += (i18 ^ Test0475.instanceCount);
            } while (++i18 < 81);
            i17 -= (int) f4;
        }
        lArr1[(i15 >>> 1) % N] = lArr1[(i13 >>> 1) % N];

        FuzzerUtils.out.println("f3 i13 i14 = " + Float.floatToIntBits(f3) + "," + i13 + "," + i14);
        FuzzerUtils.out.println("f4 i15 d = " + Float.floatToIntBits(f4) + "," + i15 + "," +
                Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("fArr lArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
                FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0475.instanceCount Test0475.sFld iFld = " + Test0475.instanceCount + "," + Test0475.sFld + "," +
                iFld);
        FuzzerUtils.out.println("Test0475.lFld bFld Test0475.byFld = " + Test0475.lFld + "," + (bFld ? 1 : 0) + "," + Test0475.byFld);
        FuzzerUtils.out.println("Test0475.iArrFld Test0475.iArrFld1 = " + FuzzerUtils.checkSum(Test0475.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0475.iArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
