// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test0029 {

    public static final int N = 400;

    public static long instanceCount = -4528845036138842172L;
    public static int iFld = -8;
    public static volatile short sFld = 20020;
    public static volatile int iFld1 = -173;
    public static double dFld = 1.111912;
    public static long[] lArrFld = new long[N];
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0029.lArrFld, 12L);
    }

    public float fFld = 105.862F;
    public int[] iArrFld = new int[N];

    public static void vMeth(int i15, int i16) {

        long l = 1753679629867062103L;
        int i17 = -157;
        int i18 = 43;
        int i19 = 49032;
        int i20 = 23351;
        int i21 = 61282;
        int i22 = 0;
        int[] iArr1 = new int[N];
        double d2 = -1.32617;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 0.86F);
        FuzzerUtils.init(iArr1, 5);

        Test0029.iFld = Test0029.iFld;
        for (l = 2; l < 271; l++) {
            for (i18 = (int) (l); i18 < 6; i18++) {
                Test0029.instanceCount = i18;
                for (i20 = 1; i20 > 1; i20--) {
                    float f = 2.726F;
                    switch ((((i15 >>> 1) % 9) * 5) + 66) {
                        case 111:
                            i21 <<= i20;
                            switch ((i18 % 2) + 19) {
                                case 19:
                                    fArr[(i15 >>> 1) % N] %= (l | 1);
                                    break;
                                case 20:
                                    i21 -= (int) d2;
                                    try {
                                        i17 = (39733 % iArr1[i20]);
                                        i15 = (i18 / iArr1[i20]);
                                        i22 = (i20 / 190);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    Test0029.instanceCount = i19;
                                    Test0029.sFld -= (short) d2;
                                    break;
                            }
                            break;
                        case 106:
                            f = l;
                            break;
                        case 101:
                            i21 = 49609;
                            break;
                        case 77:
                        case 107:
                            i16 += i20;
                            break;
                        case 100:
                            i19 -= (int) -142L;
                        case 70:
                            Test0029.instanceCount ^= i17;
                        case 99:
                            d2 = i15;
                        case 103:
                            Test0029.iFld1 += (i20 | Test0029.iFld);
                            break;
                    }
                }
            }
        }
        vMeth_check_sum += i15 + i16 + l + i17 + i18 + i19 + i20 + i21 + Double.doubleToLongBits(d2) + i22 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static double dMeth(int i11, int i12, double d1) {

        int i13 = 48459;
        int i14 = 36591;
        int i23 = 12;
        int i24 = -22347;
        int i25 = -71;
        int i26 = 46962;
        int[] iArr = new int[N];
        byte by = 56;

        FuzzerUtils.init(iArr, -1323);

        for (i13 = 3; i13 < 180; i13++) {
            i14 = ((--iArr[i13 + 1]) + iArr[i13]);
            d1 = (i11 * d1);
            switch (((((++i12) >>> 1) % 2) * 5) + 85) {
                case 89:
                    Test0029.iFld += (iArr[i13 + 1]--);
                    if (i13 != 0) {
                    }
                    vMeth(i11, i11);
                    for (i23 = 1; i23 < 9; i23 += 3) {
                        Test0029.iFld -= by;
                        for (i25 = 5; i25 > 1; i25 -= 2) {
                            i14 = i14;
                        }
                        switch (((i13 % 2) * 5) + 41) {
                            case 45:
                                iArr[i13 - 1] &= i12;
                                break;
                            case 47:
                                Test0029.instanceCount += (i23 ^ Test0029.instanceCount);
                                by = (byte) Test0029.iFld;
                                break;
                        }
                    }
                    break;
                case 87:
                    iArr = FuzzerUtils.int1array(N, (int) -8);
                default:
                    Test0029.lArrFld[i13] = (long) d1;
            }
        }
        long meth_res = i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 + i23 + i24 + by + i25 + i26 +
                FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static int iMeth(boolean b) {

        int i9 = 61569, i10 = -12, i27 = -81, i28 = 25000, i29 = 18279, i30 = -3;
        long[][] lArr = new long[N][N];
        short[] sArr = new short[N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(lArr, -983029532L);
        FuzzerUtils.init(sArr, (short) 32200);
        FuzzerUtils.init(bArr, false);

        for (i9 = 3; i9 < 144; i9++) {
            Test0029.iFld &= (int) (lArr[i9][i9 + 1]++);
            Test0029.iFld -= 204;
            Test0029.instanceCount *= (long) ((Test0029.iFld++) * ((++Test0029.iFld) % ((long) (dMeth(Test0029.iFld, Test0029.iFld, 0.67373))
                    | 1)));
            sArr[i9 + 1] += (short) i10;
            Test0029.iFld *= (int) Test0029.instanceCount;
            for (i27 = 1; i27 < 11; i27++) {
                switch (((i27 >>> 1) % 5) + 44) {
                    case 44:
                        for (i29 = 1; 2 > i29; i29 += 2) {
                            double d3 = -1.8872;
                            i28 += (int) d3;
                            if (b) {
                                Test0029.iFld1 = (int) Test0029.instanceCount;
                            } else if (b) {
                                i30 += (-43725 + (i29 * i29));
                                i28 += (i29 * i29);
                                i10 -= i9;
                            } else if (true) {
                                i28 += Test0029.iFld1;
                            } else {
                                Test0029.sFld <<= (short) i27;
                            }
                        }
                    case 45:
                    case 46:
                        bArr[i9 - 1] = b;
                        break;
                    case 47:
                        Test0029.iFld1 += (i27 ^ i29);
                        break;
                    case 48:
                        Test0029.instanceCount += (long) Test0029.dFld;
                    default:
                        Test0029.iFld1 += (((i27 * Test0029.instanceCount) + Test0029.iFld1) - i30);
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i9 + i10 + i27 + i28 + i29 + i30 + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0029 _instance = new Test0029();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -25371, i1 = 10, i2 = -13, i3 = 18764, i4 = -201, i5 = -196, i6 = 7, i7 = 6, i8 = 0;
        double d = -61.82232;
        double[][] dArr = new double[N][N];
        boolean b1 = true;
        short[][] sArr1 = new short[N][N];

        FuzzerUtils.init(sArr1, (short) -11896);
        FuzzerUtils.init(dArr, 1.66142);

        switch ((((Test0029.iFld >>> 1) % 7) * 5) + 97) {
            case 127:
                switch ((((Test0029.iFld >>> 1) % 8) * 5) + 33) {
                    case 59:
                    case 68:
                        for (i = 3; i < 268; i++) {
                            for (i2 = 95; i2 > 5; i2--) {
                                i3 = (int) (d++);
                            }
                            Test0029.iFld = (int) (-((-(i2 + 30.879F)) + (-119 + (i3 * i4))));
                            switch ((i % 4) + 88) {
                                case 88:
                                    for (i5 = 95; i5 > 2; i5--) {
                                        i1 += (((i5 * fFld) + Test0029.instanceCount) - Test0029.instanceCount);
                                        for (i7 = 2; i7 > 1; --i7) {
                                            long l1 = -5662695932484320493L;
                                            byte by1 = 116;
                                            i6 -= (int) (((Test0029.instanceCount * i8) * Test0029.iFld) - ((iArrFld[i7 - 1] *= i4) - i4));
                                            if (b1) {
                                                d *= Math.max(iMeth(b1), i1);
                                                if (b1) break;
                                                Test0029.iFld1 -= Test0029.iFld1;
                                            } else if (b1) {
                                                i4 <<= (int) Test0029.instanceCount;
                                                switch ((i7 % 5) + 31) {
                                                    case 31:
                                                        switch (((-71 >>> 1) % 1) + 99) {
                                                            case 99:
                                                                i8 *= (int) Test0029.instanceCount;
                                                                Test0029.instanceCount += (i7 | l1);
                                                                Test0029.sFld -= (short) i6;
                                                                i3 /= (int) (Test0029.iFld | 1);
                                                                break;
                                                            default:
                                                                i4 = i2;
                                                        }
                                                        i4 *= (int) fFld;
                                                        break;
                                                    case 32:
                                                        i8 += i8;
                                                        Test0029.dFld *= i1;
                                                        i8 = (int) Test0029.instanceCount;
                                                        l1 = Test0029.instanceCount;
                                                    case 33:
                                                        Test0029.iFld1 += (i7 * i8);
                                                        iArrFld[i5 - 1] <<= i7;
                                                    case 34:
                                                        i3 += i7;
                                                        break;
                                                    case 35:
                                                        l1 >>>= by1;
                                                }
                                            } else {
                                                Test0029.instanceCount = i1;
                                            }
                                        }
                                    }
                                case 89:
                                    Test0029.instanceCount += (long) d;
                                case 90:
                                    fFld += i4;
                                    break;
                                case 91:
                                    fFld = Test0029.iFld1;
                                    break;
                                default:
                                    if (b1) continue;
                            }
                        }
                    case 73:
                        i6 = (int) Test0029.dFld;
                        break;
                    case 41:
                        Test0029.instanceCount -= i2;
                    case 70:
                        sArr1 = sArr1;
                        break;
                    case 50:
                        Test0029.instanceCount >>= Test0029.instanceCount;
                        break;
                    case 58:
                        Test0029.instanceCount += 15;
                        break;
                    case 48:
                        iArrFld[(i2 >>> 1) % N] = (int) Test0029.instanceCount;
                        break;
                }
                break;
            case 112:
                Test0029.lArrFld[(i4 >>> 1) % N] = i8;
            case 132:
                dArr[(i8 >>> 1) % N][(i5 >>> 1) % N] += i2;
            case 113:
                Test0029.instanceCount *= Test0029.instanceCount;
            case 109:
                Test0029.iFld ^= i2;
            case 107:
                b1 = b1;
                break;
            case 102:
                iArrFld[(i8 >>> 1) % N] = i1;
                break;
            default:
                Test0029.iFld1 *= Test0029.iFld1;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d i4 = " + i3 + "," + Double.doubleToLongBits(d) + "," + i4);
        FuzzerUtils.out.println("i5 i6 i7 = " + i5 + "," + i6 + "," + i7);
        FuzzerUtils.out.println("i8 b1 sArr1 = " + i8 + "," + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(sArr1));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0029.instanceCount Test0029.iFld fFld = " + Test0029.instanceCount + "," + Test0029.iFld + "," +
                Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0029.sFld Test0029.iFld1 Test0029.dFld = " + Test0029.sFld + "," + Test0029.iFld1 + "," +
                Double.doubleToLongBits(Test0029.dFld));
        FuzzerUtils.out.println("iArrFld Test0029.lArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0029.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
