// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0774 {

    public static final int N = 400;

    public static long instanceCount = -6168L;
    public static float fFld = 25.643F;
    public static short sFld = 18252;
    public static long[] lArrFld = new long[N];
    public static long vSmallMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0774.lArrFld, -38574L);
    }

    public boolean bFld = true;
    public int iFld = -159;

    public static int iMeth(int i4, int i5, int i6) {

        int i7 = 4, i8 = 224, i9 = -150, i10 = -228, i11 = 0, i12 = 4;
        short s = 7393;

        for (i7 = 176; 9 < i7; i7 -= 2) {
            Test0774.fFld += i6;
            i8 += (((i7 * Test0774.instanceCount) + i5) - i8);
        }
        i5 = i7;
        i5 -= i5;
        i4 = i6;
        for (i9 = 1; 134 > i9; i9++) {
            Test0774.fFld += i9;
            Test0774.instanceCount <<= i5;
            for (i11 = 1; i11 < 12; i11++) {
                i6 += (int) Test0774.instanceCount;
                Test0774.lArrFld[i9 - 1] <<= i8;
                i10 -= (int) -2.14898;
                s += (short) i7;
            }
            Test0774.instanceCount = s;
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + s;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static float fMeth(int i2, int i3) {

        double d = 1.61661;
        int i13 = 43935;
        int i14 = 14;
        int i15 = 0;
        int i16 = -5;
        int i17 = 79;
        int i18 = -130;
        int i19 = 1;
        int[] iArr = new int[N];
        boolean b = false;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -9994);
        FuzzerUtils.init(iArr, -222);

        sArr[(-86 >>> 1) % N] -= (short) d;
        iArr[(i3 >>> 1) % N] <<= Math.max(++i2, i3);
        i3 = (iMeth(i2, i2, i2) * i2);
        for (i13 = 1; i13 < 304; i13++) {
            Test0774.instanceCount -= 151;
            Test0774.fFld += (-9140 + (i13 * i13));
        }
        i2 = 11;
        if (b) {
            for (i15 = 16; i15 < 277; ++i15) {
                i17 = 1;
                while (++i17 < 6) {
                    i2 = i14;
                    for (i18 = 1; i18 < 1; ++i18) {
                        Test0774.sFld += (short) (((i18 * Test0774.fFld) + i19) - Test0774.instanceCount);
                        d += 2.106442;
                        iArr[i15 - 1] -= i14;
                    }
                }
            }
        } else {
            Test0774.instanceCount = i14;
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + i17 + i18 + i19 + (b ? 1 : 0) +
                FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vSmallMeth(long l, long l1) {

        int i = 62444, i1 = 52846;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -4717465680476052330L);

        i -= (int) (--lArr[(i1 >>> 1) % N]);
        Test0774.instanceCount *= (long) (((-2.43661 - (l1 * Test0774.fFld)) * (i++)) / (((long) (fMeth(i1, -14) - l1)) | 1));
        vSmallMeth_check_sum += l + l1 + i + i1 + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0774 _instance = new Test0774();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        byte by = -41;
        float f = 0.279F;
        int i20 = 62076;
        int i21 = 18708;
        int i22 = -10276;
        int i23 = 7;
        int i24 = 14;
        int i25 = 65325;
        int[] iArr1 = new int[N];
        double d1 = -1.89326;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 0.61669);
        FuzzerUtils.init(iArr1, 246);

        for (int smallinvoc = 0; smallinvoc < 839; smallinvoc++)
            vSmallMeth(Test0774.instanceCount, Test0774.instanceCount);
        by = (byte) 1.75130;
        f = 289;
        while ((f -= 3) > 0) {
            dArr[(int) (f - 1)] = f;
            for (i20 = 258; i20 > 2; i20--) {
                by = (byte) -39759;
                Test0774.instanceCount <<= i21;
                for (i22 = i20; 2 > i22; ++i22) {
                    i21 += (i22 * i22);
                    d1 += i20;
                    by >>= (byte) -4;
                }
                i23 = i21;
                iArr1[(int) (f)] = (int) Test0774.instanceCount;
                bFld = false;
                i21 += i20;
                Test0774.instanceCount ^= i23;
                for (i24 = 1; 2 > i24; i24++) {
                    i23 += i22;
                    i21 -= (int) d1;
                    switch (((i22 >>> 1) % 6) + 9) {
                        case 9:
                            switch (((i24 >>> 1) % 2) + 6) {
                                case 6:
                                    iArr1[i20] *= i22;
                                case 7:
                                    iArr1[i24 + 1] += Test0774.sFld;
                                    i25 -= i21;
                                    i23 <<= i21;
                                    Test0774.instanceCount <<= Test0774.sFld;
                                    break;
                                default:
                                    d1 -= Test0774.instanceCount;
                            }
                            i23 >>= i20;
                            break;
                        case 10:
                            Test0774.instanceCount -= i22;
                            break;
                        case 11:
                            if (bFld) break;
                            break;
                        case 12:
                            iFld -= i21;
                            break;
                        case 13:
                            Test0774.instanceCount += (-77 + (i24 * i24));
                            break;
                        case 14:
                            i23 += (i24 - Test0774.sFld);
                            break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("by f i20 = " + by + "," + Float.floatToIntBits(f) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("d1 i24 i25 = " + Double.doubleToLongBits(d1) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("dArr iArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
                FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0774.instanceCount Test0774.fFld Test0774.sFld = " + Test0774.instanceCount + "," +
                Float.floatToIntBits(Test0774.fFld) + "," + Test0774.sFld);
        FuzzerUtils.out.println("bFld iFld Test0774.lArrFld = " + (bFld ? 1 : 0) + "," + iFld + "," +
                FuzzerUtils.checkSum(Test0774.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  fMeth ->  fMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth fMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
