// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0735 {

    public static final int N = 400;

    public static volatile long instanceCount = 13231L;
    public static double dFld = 62.74599;
    public static byte byFld = 31;
    public static int iFld1 = -10;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public volatile int iFld = 6361;
    public volatile float fFld = -2.110F;
    public long[] lArrFld = new long[N];

    public static void vMeth2(int i6) {

        int i7 = -83;
        int i8 = -21;
        int i9 = 6;
        int i10 = -56682;
        int i11 = -148;
        int i12 = -27;
        int[] iArr2 = new int[N];
        float f1 = 122.737F;
        float[] fArr = new float[N];
        boolean b = false;
        byte by = -111;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr2, -14);
        FuzzerUtils.init(fArr, -32.629F);
        FuzzerUtils.init(byArr, (byte) -92);

        for (i7 = 4; i7 < 317; i7++) {
            if (i6 != 0) {
                vMeth2_check_sum += i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + (b ? 1 : 0) + by +
                        FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                        FuzzerUtils.checkSum(byArr);
                return;
            }
            Test0735.dFld = Test0735.instanceCount;
        }
        for (f1 = 7; f1 < 220; ++f1) {
            for (i10 = 1; i10 < 8; i10++) {
                i12 = 1;
                do {
                    if (b) break;
                    iArr2[i10 - 1] = i11;
                    fArr = fArr;
                    by += (byte) Test0735.instanceCount;
                    i9 -= i12;
                    i6 <<= i9;
                    i9 -= -13;
                } while (++i12 < 2);
                i8 += i10;
                byArr[i10 - 1] = (byte) i7;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + (b ? 1 : 0) + by +
                FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0735 _instance = new Test0735();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth1() {

        int i13 = 34032;
        int i14 = -52132;
        int i15 = 35912;
        int i16 = 5;
        int[] iArr3 = new int[N];
        boolean b1 = true;

        FuzzerUtils.init(iArr3, -16565);

        vMeth2(iFld);
        iFld |= iFld;
        Test0735.instanceCount = -14L;
        iFld <<= iFld;
        iFld = iFld;
        iFld &= -9336;
        for (i13 = 2; i13 < 295; i13++) {
            for (i15 = 6; i15 > 1; --i15) {
                i16 = i14;
            }
            i14 += (((i13 * Test0735.instanceCount) + i13) - Test0735.instanceCount);
            if (true) {
                try {
                    iFld = (i15 / -207);
                    i16 = (i14 / iFld);
                    iArr3[i13 - 1] = (iArr3[i13 - 1] / 52);
                } catch (ArithmeticException a_e) {
                }
            }
            if (b1) continue;
            iArr3[i13 - 1] += (int) 774740071L;
            iFld <<= i13;
        }
        vMeth1_check_sum += i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
    }

    public void vMeth(int i1, int i2, int i3) {

        int i4 = 0;
        int i5 = 86;
        int i17 = 2999;
        int i18 = 9;
        int[] iArr1 = new int[N];
        short s = 10250;
        float f = 2.263F;
        double d = -75.1137;

        FuzzerUtils.init(iArr1, -63);

        for (i4 = 4; i4 < 376; ++i4) {
            Test0735.instanceCount = (long) (((i5--) % (((long) (s + f)) | 1)) + ((i5++) + iArr1[i4 + 1]));
            try {
                i5 = (iFld % 11204);
                iArr1[i4] = (-80747943 % iArr1[i4]);
                i2 = (45705 % i4);
            } catch (ArithmeticException a_e) {
            }
            i5 >>= (iFld--);
            i2 = (int) Math.abs(lArrFld[i4 - 1]);
            vMeth1();
        }
        for (d = 7; d < 174; ++d) {
            Test0735.byFld -= (byte) i5;
            Test0735.instanceCount += i1;
            f -= i2;
            iArr1[(int) (d - 1)] <<= (int) -51764L;
        }
        iArr1[(i1 >>> 1) % N] = (int) d;
        i18 = 1;
        while (++i18 < 248) {
            Test0735.iFld1 += i18;
            fFld *= Test0735.instanceCount;
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + s + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i17 +
                i18 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i19 = 172;
        int i20 = 27719;
        int i21 = -14;
        int i22 = -52037;
        int i23 = 134;
        int i24 = 52493;
        int i25 = 6;
        int i26 = 197;
        int i27 = -234;
        int i28 = 61;
        int[] iArr = new
                int[N];
        short s1 = 4734;
        short[] sArr = new short[N];
        long l = -110L;
        boolean b2 = true;

        FuzzerUtils.init(iArr, 129);
        FuzzerUtils.init(sArr, (short) 7950);

        Test0735.dFld = (iFld++);
        for (int i : iArr) {
            vMeth(i, i, Test0735.iFld1);
            i19 = 1;
            while (++i19 < 63) {
                i += (i19 * i19);
                iFld += (((i19 * Test0735.iFld1) + Test0735.iFld1) - Test0735.byFld);
                Test0735.byFld -= (byte) Test0735.iFld1;
                iFld += (int) (-2323623391L + (i19 * i19));
                Test0735.instanceCount -= (long) fFld;
                for (i20 = 1; i20 < 1; ++i20) {
                    i21 += (i20 + fFld);
                    Test0735.instanceCount += (i20 ^ Test0735.iFld1);
                }
            }
            i22 ^= 114;
            i >>= -28101;
            sArr[(i20 >>> 1) % N] += (short) fFld;
            for (i23 = 2; i23 < 63; ++i23) {
                for (i25 = 1; i25 < 2; ++i25) {
                    i21 += (((i25 * Test0735.instanceCount) + Test0735.instanceCount) - i24);
                    iFld = Test0735.byFld;
                    Test0735.instanceCount >>= 88;
                    s1 = (short) -7;
                    Test0735.instanceCount += (i25 | i21);
                    try {
                        i26 = (iArr[i25] % 12016);
                        Test0735.iFld1 = (i24 / -15119411);
                        i24 = (i23 % i);
                    } catch (ArithmeticException a_e) {
                    }
                    l = i25;
                    iArr[i23 - 1] = Test0735.iFld1;
                }
                i26 = 24;
                for (i27 = 1; i27 < 2; i27++) {
                    Test0735.instanceCount = (long) Test0735.dFld;
                    i22 = (int) -9821L;
                    if (b2) continue;
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 s1 = " + i25 + "," + i26 + "," + s1);
        FuzzerUtils.out.println("l i27 i28 = " + l + "," + i27 + "," + i28);
        FuzzerUtils.out.println("b2 iArr sArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
                FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0735.instanceCount Test0735.dFld iFld = " + Test0735.instanceCount + "," +
                Double.doubleToLongBits(Test0735.dFld) + "," + iFld);
        FuzzerUtils.out.println("Test0735.byFld Test0735.iFld1 fFld = " + Test0735.byFld + "," + Test0735.iFld1 + "," +
                Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
