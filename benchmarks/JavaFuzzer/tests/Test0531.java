// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test0531 {

    public static final int N = 400;

    public static volatile long instanceCount = -5323688440014650112L;
    public static double dFld = 109.97571;
    public static boolean bFld = false;
    public static byte byFld = -5;
    public static int iFld = 38;
    public static int[] iArrFld = new int[N];
    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0531.iArrFld, 197);
    }

    public double[] dArrFld = new double[N];

    public static int iMeth() {

        int i4 = 53218, i5 = 4, i6 = 142, i7 = 92, i8 = -36768, i9 = -52636, i10 = 9;
        float f = 0.472F;
        short s1 = 24196;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 80L);

        lArr[(i4 >>> 1) % N] = i4;
        for (i5 = 22; i5 < 379; i5++) {
            f += (i5 * i5);
            i4 = (int) Test0531.instanceCount;
            f -= Test0531.instanceCount;
            for (i7 = i5; 5 > i7; ++i7) {
                for (i9 = 1; 1 > i9; ++i9) {
                    switch (((i8 >>> 1) % 2) + 38) {
                        case 38:
                            i6 >>= i8;
                            break;
                        case 39:
                            Test0531.dFld -= 50;
                            i10 /= (int) 2.241F;
                            i4 = (int) Test0531.dFld;
                            i8 &= 0;
                            break;
                    }
                    i8 = 10;
                    s1 *= (short) i5;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + s1 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i3, short s) {

        float f1 = 103.109F;
        float[] fArr = new float[N];
        int i11 = -24710, i12 = -40631, i13 = 15070, i14 = 6, i15 = 34879;
        long l = 3271573159906630085L;

        FuzzerUtils.init(fArr, 15.312F);

        i3 = (int) (((i3 - Test0531.dFld) + iMeth()) + f1);
        i3 -= i3;
        for (i11 = 14; i11 < 396; i11++) {
            if (Test0531.bFld) break;
            for (i13 = 1; 4 > i13; ++i13) {
                fArr[i11 - 1] = -221;
                i12 *= (int) Test0531.instanceCount;
            }
            i3 ^= (int) 7319834332392669168L;
            l = 4;
            while (--l > 0) {
                i15 = 1;
                do {
                    Test0531.byFld -= (byte) i3;
                    i3 >>= (int) l;
                    Test0531.instanceCount += i15;
                    i14 = i14;
                    Test0531.instanceCount *= -16880;
                } while (++i15 < 1);
            }
        }
        vMeth_check_sum += i3 + s + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + l + i15 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static short sMeth(int i, int i1, int i2) {

        short s2 = 27734;
        int i16 = 50853;
        int i17 = 30179;
        int i18 = -5933;
        int i19 = -11;
        int i20 = -4777;
        int[] iArr = new int[N];
        float f2 = -62.793F;

        FuzzerUtils.init(iArr, -119);

        vMeth(i1, s2);
        for (i16 = 5; i16 < 130; ++i16) {
            i18 = 1;
            do {
                for (i19 = 1; i19 < 1; ++i19) {
                    i20 = 62198;
                    Test0531.instanceCount = Test0531.instanceCount;
                    switch ((((i19 >>> 1) % 9) * 5) + 19) {
                        case 25:
                            if (Test0531.bFld) continue;
                            Test0531.dFld += -4;
                            f2 *= i18;
                            i17 += (64271 + (i19 * i19));
                            break;
                        case 59:
                            i1 >>= i18;
                            Test0531.instanceCount += i2;
                            iArr[i18 + 1] = Test0531.byFld;
                            i2 <<= i20;
                            break;
                        case 61:
                            Test0531.iFld -= (int) 1.99250;
                            break;
                        case 60:
                            i17 += i16;
                            break;
                        case 53:
                            iArr[i19 - 1] >>>= -55977;
                        case 29:
                            Test0531.iFld = (int) Test0531.dFld;
                        case 50:
                            if (i1 != 0) {
                            }
                            break;
                        case 64:
                            f2 += ((long) i19 ^ (long) i20);
                        case 22:
                            i2 = i18;
                            break;
                    }
                }
            } while (++i18 < 13);
        }
        long meth_res = i + i1 + i2 + s2 + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) +
                FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0531 _instance = new Test0531();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i21 = 0, i22 = -7, i23 = 5, i24 = -223, i25 = -64211, i26 = -192, i27 = 58504, i28 = 8, i29 = -25188;
        short s3 = 27334;
        float f3 = 0.361F;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, -91.1000F);

        sMeth(Test0531.iFld, 6, Test0531.iFld);
        dArrFld[(Test0531.iFld >>> 1) % N] *= Test0531.iFld;
        Test0531.iFld >>= (int) Test0531.instanceCount;
        for (i21 = 7; i21 < 142; i21++) {
            if (Test0531.bFld) break;
            Test0531.dFld -= Test0531.iFld;
            s3 += (short) i22;
            switch (((4 >>> 1) % 6) + 79) {
                case 79:
                    Test0531.iFld <<= (int) 1397653601L;
                    Test0531.iFld = (int) Test0531.instanceCount;
                    i23 = 1;
                    do {
                        for (i24 = 1; i24 < 1; i24++) {
                            Test0531.iFld += (int) Test0531.instanceCount;
                            Test0531.instanceCount -= i22;
                            i25 = i25;
                            dArrFld[i24 - 1] = Test0531.instanceCount;
                            Test0531.instanceCount += (long) f3;
                            i25 *= i21;
                            Test0531.iFld ^= i21;
                            Test0531.instanceCount = Test0531.instanceCount;
                        }
                        Test0531.iArrFld[i23 + 1] *= i24;
                        i25 *= i21;
                    } while (++i23 < 186);
                    Test0531.iFld = (int) Test0531.instanceCount;
                case 80:
                    for (i26 = 8; 186 > i26; ++i26) {
                        i25 = -10;
                        Test0531.iArrFld[i21] = (int) -2.79711;
                    }
                    i25 = s3;
                    break;
                case 81:
                    for (i28 = 8; 186 > i28; ++i28) {
                        i27 -= (int) Test0531.instanceCount;
                        Test0531.iArrFld[i21 - 1] += 3;
                    }
                    break;
                case 82:
                    i25 = i25;
                    break;
                case 83:
                    i22 |= i24;
                    break;
                case 84:
                    fArr1[i21] -= Test0531.instanceCount;
                    break;
            }
        }

        FuzzerUtils.out.println("i21 i22 s3 = " + i21 + "," + i22 + "," + s3);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f3 i26 i27 = " + Float.floatToIntBits(f3) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 fArr1 = " + i28 + "," + i29 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0531.instanceCount Test0531.dFld Test0531.bFld = " + Test0531.instanceCount + "," +
                Double.doubleToLongBits(Test0531.dFld) + "," + (Test0531.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0531.byFld Test0531.iFld dArrFld = " + Test0531.byFld + "," + Test0531.iFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("Test0531.iArrFld = " + FuzzerUtils.checkSum(Test0531.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
