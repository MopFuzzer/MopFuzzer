// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test0859 {

    public static final int N = 400;

    public static volatile long instanceCount = 4L;
    public static double dFld = -65.129894;
    public static boolean bFld = false;
    public static float[][] fArrFld = new float[N][N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0859.fArrFld, 1.729F);
    }

    public static int iMeth1(int i5) {

        double d = -12.73870;
        int i7 = -192;
        int i8 = -62;
        int i9 = 1771;
        int i10 = 51;
        int i11 = 12;
        int[] iArr = new int[N];
        float f1 = 32.224F;

        FuzzerUtils.init(iArr, -1);

        for (int i6 : iArr) {
            i6 *= (int) d;
            iArr[(i6 >>> 1) % N] = i6;
            Test0859.instanceCount += i5;
            iArr[(i6 >>> 1) % N] -= 7755;
        }
        i5 <<= i5;
        iArr[(i7 >>> 1) % N] = (int) 91.209F;
        for (i8 = 16; i8 < 372; ++i8) {
            f1 *= i7;
            Test0859.instanceCount += -8;
            d -= 11;
            i7 *= i5;
            for (i10 = 1; i10 < 5; i10++) {
                iArr[i8] *= i10;
                Test0859.fArrFld[i8 + 1][i10] += (float) -50.76393;
            }
        }
        long meth_res = i5 + Double.doubleToLongBits(d) + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 +
                FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i4) {

        int i12 = 2;
        int i13 = -1;
        int i14 = 14752;
        int i15 = -9;
        int i16 = 13;
        int i17 = -65;
        int i18 = -100;
        int[] iArr1 = new int[N];
        byte by = 37;
        double d1 = -120.77299;

        FuzzerUtils.init(iArr1, 197);

        Test0859.instanceCount -= iMeth1(i4);
        for (i12 = 1; i12 < 258; i12++) {
            Test0859.dFld = i14;
            by = (byte) Test0859.dFld;
            iArr1[i12 - 1] >>= -12;
        }
        i13 -= i13;
        i15 = 1;
        while (++i15 < 320) {
            for (i16 = 1; i16 < 5; i16++) {
                if (Test0859.bFld) break;
                i17 -= i13;
                i17 -= i14;
                for (d1 = 1; d1 < 2; d1++) {
                    i14 -= i14;
                    Test0859.fArrFld[i16 - 1][i15 + 1] -= -16;
                    i13 >>= i13;
                }
            }
        }
        long meth_res = i4 + i12 + i13 + i14 + by + i15 + i16 + i17 + Double.doubleToLongBits(d1) + i18 +
                FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(long l, int i3, float f) {

        int i19 = 96;
        int i20 = -3;
        int i21 = -52849;
        int i22 = 3;
        int i23 = -47250;
        int[] iArr2 = new int[N];
        byte by1 = 122;

        FuzzerUtils.init(iArr2, -35620);

        i3 = iMeth(i3);
        Test0859.fArrFld[(i3 >>> 1) % N] = Test0859.fArrFld[(i3 >>> 1) % N];
        for (i19 = 336; i19 > 11; --i19) {
            Test0859.instanceCount *= (long) f;
            l += l;
            i3 += (((i19 * i20) + i3) - i3);
        }
        i21 = 1;
        while (++i21 < 328) {
            i20 >>= -51885;
            for (i22 = 1; 5 > i22; ++i22) {
                i23 -= i19;
                Test0859.instanceCount += i19;
                by1 = (byte) i19;
                i20 *= i22;
                i3 <<= i3;
                iArr2[i21 - 1] += (int) l;
            }
        }
        vMeth_check_sum += l + i3 + Float.floatToIntBits(f) + i19 + i20 + i21 + i22 + i23 + by1 +
                FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0859 _instance = new Test0859();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -226;
        int i1 = -4;
        int i2 = -4;
        int i24 = 13;
        int i25 = 48259;
        int i26 = -4;
        int i27 = -179;
        int[][] iArr3 = new int[N][N];
        float f2 = 1.237F;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr3, 6721);
        FuzzerUtils.init(dArr, 0.58300);

        switch (((Math.abs(i) >>> 1) % 1) + 72) {
            case 72:
                for (i1 = 9; i1 < 214; i1++) {
                    vMeth(Test0859.instanceCount, i, f2);
                    i *= i;
                    f2 += (((i1 * i) + i1) - i2);
                    for (i24 = i1; i24 < 122; i24++) {
                        for (i26 = 1; 1 > i26; ++i26) {
                            Test0859.instanceCount = Test0859.instanceCount;
                            switch ((((i27 >>> 1) % 1) * 5) + 75) {
                                case 76:
                                    Test0859.dFld += i26;
                                    Test0859.instanceCount += (-20 + (i26 * i26));
                                    Test0859.instanceCount += (-222 + (i26 * i26));
                                    Test0859.instanceCount += i1;
                            }
                            switch ((((i25 >>> 1) % 9) * 5) + 125) {
                                case 153:
                                    iArr3[i24 - 1][i1] = i24;
                                    i += i;
                                    Test0859.dFld += -2;
                                case 167:
                                    iArr3[i24 + 1][i1 - 1] *= i;
                                    i2 *= (int) Test0859.instanceCount;
                                    i2 += i1;
                                    Test0859.dFld = i1;
                                    break;
                                case 166:
                                    if (true) {
                                        iArr3[i24 + 1][i24 + 1] = i2;
                                    } else {
                                        i2 -= (int) Test0859.instanceCount;
                                        dArr[i26] *= i;
                                    }
                                    break;
                                case 140:
                                    Test0859.instanceCount -= i2;
                                    iArr3[i24 + 1][i24] = i2;
                                    if (Test0859.bFld) break;
                                    break;
                                case 164:
                                    i2 += (int) -1.46991;
                                    i -= i25;
                                    break;
                                case 130:
                                    iArr3[i1] = iArr3[i24 + 1];
                                    break;
                                case 169:
                                case 137:
                                    Test0859.bFld = Test0859.bFld;
                                    break;
                                case 162:
                                    i -= i1;
                                    break;
                            }
                        }
                    }
                }
                break;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f2 i24 i25 = " + Float.floatToIntBits(f2) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 iArr3 = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0859.instanceCount Test0859.dFld Test0859.bFld = " + Test0859.instanceCount + "," +
                Double.doubleToLongBits(Test0859.dFld) + "," + (Test0859.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0859.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0859.fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
