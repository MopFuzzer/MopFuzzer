// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0740 {

    public static final int N = 400;

    public static long instanceCount = 20889L;
    public static int iFld = 11;
    public static float fFld = 2.872F;
    public static short sFld = -8376;
    public static byte byFld = 58;
    public static volatile int[] iArrFld = new int[N];
    public static volatile float[] fArrFld = new float[N];
    public static long[] lArrFld = new long[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0740.iArrFld, -854);
        FuzzerUtils.init(Test0740.fArrFld, 0.58F);
        FuzzerUtils.init(Test0740.lArrFld, 2896078081699288152L);
    }

    public static void vMeth(int i4) {

        int i5 = -10, i6 = 58976, i7 = 46707, i8 = 11, i9 = -114, i10 = -112;
        short s = -26934;
        double d = 123.123790;
        boolean b = true;

        for (i5 = 4; i5 < 174; i5++) {
            for (i7 = 1; i7 < 9; i7++) {
                i6 += i7;
                Test0740.instanceCount = i4;
                Test0740.instanceCount += (i7 * i7);
                i6 = (int) Test0740.instanceCount;
                i6 = s;
                for (i9 = 1; 2 > i9; i9++) {
                    Test0740.iArrFld[i9] += i9;
                    i6 = i9;
                    Test0740.instanceCount -= i9;
                    d = i7;
                    i8 <<= i5;
                    Test0740.iArrFld[i5 - 1] += i9;
                    if (b) break;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + s + i9 + i10 + Double.doubleToLongBits(d) + (b ? 1 : 0);
    }

    public static int iMeth1() {

        int i11 = -52218, i12 = -58788, i13 = -14, i14 = -7, i15 = 61515;
        byte by = -7;
        long[] lArr = new long[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(lArr, 8512457737575056319L);
        FuzzerUtils.init(fArr, 0.362F);

        vMeth(i11);
        for (long l : lArr) {
            for (i12 = 1; 4 > i12; ++i12) {
                if (i11 != 0) {
                }
            }
            fArr[(Test0740.iFld >>> 1) % N] *= i11;
            switch (((i12 >>> 1) % 10) + 20) {
                case 20:
                    l = 29L;
                    Test0740.fArrFld[(-11 >>> 1) % N] = i11;
                    break;
                case 21:
                    by ^= (byte) 18127;
                    Test0740.fFld *= l;
                    break;
                case 22:
                    for (i14 = 4; i14 > 1; i14--) {
                        Test0740.iArrFld = Test0740.iArrFld;
                    }
                case 23:
                    i15 -= i12;
                    l -= (long) Test0740.fFld;
                    i11 = i14;
                    break;
                case 24:
                    Test0740.fFld = Test0740.iFld;
                    break;
                case 25:
                    i15 = i11;
                    break;
                case 26:
                    try {
                        i13 = (i11 / i12);
                        i11 = (-61694 % Test0740.iArrFld[(i12 >>> 1) % N]);
                        i13 = (i11 % Test0740.iArrFld[(i11 >>> 1) % N]);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 27:
                    l = i12;
                case 28:
                    i13 = (int) l;
                case 29:
                    Test0740.instanceCount = Test0740.instanceCount;
                    break;
            }
        }
        long meth_res = i11 + i12 + i13 + by + i14 + i15 + FuzzerUtils.checkSum(lArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i1) {

        int i2 = -66, i3 = 4, i16 = 12, i17 = 51494, i18 = -13, i19 = -11, i20 = 10;

        for (i2 = 8; i2 < 248; i2++) {
            try {
                i3 = (i2 % i2);
                i1 = (125 % i1);
                i1 = (Test0740.iArrFld[i2] % Test0740.iArrFld[i2]);
            } catch (ArithmeticException a_e) {
            }
            i3 = iMeth1();
        }
        for (i16 = 9; 294 > i16; ++i16) {
            Test0740.instanceCount = Test0740.instanceCount;
            Test0740.sFld <<= (short) Test0740.instanceCount;
            Test0740.iFld += (((i16 * Test0740.instanceCount) + i2) - i1);
            Test0740.iFld = 52;
            for (i18 = i16; i18 < 6; ++i18) {
                Test0740.instanceCount >>= Test0740.instanceCount;
                switch ((i16 % 6) + 12) {
                    case 12:
                    case 13:
                        Test0740.instanceCount += (-44664 + (i18 * i18));
                        break;
                    case 14:
                        i20 = 1;
                        do {
                            Test0740.instanceCount = i20;
                            Test0740.iArrFld[i16] += i20;
                        } while (++i20 < 1);
                        break;
                    case 15:
                        i19 = -49872;
                        break;
                    case 16:
                        i3 += (i18 + Test0740.byFld);
                        break;
                    case 17:
                        Test0740.instanceCount += i3;
                        break;
                    default:
                        Test0740.instanceCount >>>= Test0740.instanceCount;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i16 + i17 + i18 + i19 + i20;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0740 _instance = new Test0740();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 24788;
        int i21 = 2;
        int i22 = 141;
        int i23 = -110;
        int i24 = 3814;
        int i25 = -7;
        int i26 = -36;
        int i27 = 13418;
        int i28 = 4;
        int i29 = -22;
        int[][] iArr = new
                int[N][N];
        double d1 = 0.33332, d2 = -121.9075;
        boolean b1 = false;

        FuzzerUtils.init(iArr, -173);

        i -= (int) (Test0740.instanceCount <<= iMeth(-80));
        Test0740.iArrFld[(659 >>> 1) % N] = (int) -4192032394239611365L;
        Test0740.instanceCount = Test0740.iFld;
        Test0740.instanceCount -= Test0740.iFld;
        for (d1 = 14; d1 < 343; ++d1) {
            switch (((13 >>> 1) % 2) + 97) {
                case 97:
                    Test0740.fFld += (float) d1;
                    i *= (int) Test0740.instanceCount;
                    break;
                case 98:
                    for (i22 = 1; i22 < 76; ++i22) {
                        for (i24 = 1; i24 < 2; i24++) {
                            Test0740.lArrFld[(i25 >>> 1) % N] = (long) Test0740.fFld;
                            Test0740.instanceCount %= (Test0740.instanceCount | 1);
                            i += (i24 - Test0740.fFld);
                            i21 += (((i24 * Test0740.instanceCount) + Test0740.instanceCount) - i21);
                            d2 *= -55588L;
                            i += (((i24 * i23) + i22) - i23);
                            Test0740.iArrFld[(int) (d1 + 1)] -= i;
                        }
                    }
                    if (b1) {
                        Test0740.iArrFld = Test0740.iArrFld;
                        switch ((int) (((d1 % 6) * 5) + 70)) {
                            case 97:
                            case 76:
                                for (i26 = 1; i26 < 76; i26 += 2) {
                                    d2 *= Test0740.fFld;
                                    i25 += (-149 + (i26 * i26));
                                    i28 = 3;
                                    do {
                                        iArr = iArr;
                                        Test0740.fFld = Test0740.sFld;
                                        i += (((i28 * i21) + i21) - i22);
                                        i21 <<= 104;
                                        Test0740.iArrFld[i26] -= Test0740.byFld;
                                        Test0740.iFld += i28;
                                    } while (--i28 > 0);
                                }
                            case 82:
                                i23 *= i23;
                                break;
                            case 92:
                                try {
                                    iArr[(int) (d1)][(int) (d1 + 1)] = (58114 / Test0740.iArrFld[(int) (d1 + 1)]);
                                    Test0740.iFld = (-1503990342 / i21);
                                    i = (i29 % 9970);
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            case 99:
                                try {
                                    i23 = (i26 % i27);
                                    i23 = (i22 % Test0740.iArrFld[(int) (d1)]);
                                    i = (i25 % Test0740.iFld);
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            case 84:
                                d2 = Test0740.instanceCount;
                                break;
                        }
                    } else if (b1) {
                        Test0740.iArrFld[(int) (d1)] = Test0740.sFld;
                    } else if (b1) {
                        i27 = 3;
                    } else {
                        d2 += Test0740.instanceCount;
                    }
                    break;
            }
        }

        FuzzerUtils.out.println("i d1 i21 = " + i + "," + Double.doubleToLongBits(d1) + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 d2 i26 = " + i25 + "," + Double.doubleToLongBits(d2) + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("b1 iArr = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0740.instanceCount Test0740.iFld Test0740.fFld = " + Test0740.instanceCount + "," + Test0740.iFld +
                "," + Float.floatToIntBits(Test0740.fFld));
        FuzzerUtils.out.println("Test0740.sFld Test0740.byFld Test0740.iArrFld = " + Test0740.sFld + "," + Test0740.byFld + "," +
                FuzzerUtils.checkSum(Test0740.iArrFld));
        FuzzerUtils.out.println("Test0740.fArrFld Test0740.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0740.fArrFld)) + "," + FuzzerUtils.checkSum(Test0740.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
