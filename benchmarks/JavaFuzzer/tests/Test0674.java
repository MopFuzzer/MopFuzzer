// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0674 {

    public static final int N = 400;

    public static volatile long instanceCount = -26L;
    public static int iFld = 11;
    public static byte byFld = -31;
    public static boolean bFld = true;
    public static float fFld = 1.751F;
    public static long[] lArrFld = new long[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0674.lArrFld, -892042638L);
    }

    public static void vMeth1() {

        double d = 0.120155;
        int i1 = 44729;
        int i2 = -54289;
        int i3 = -45953;
        int i4 = 2;
        int i5 = 40694;
        int i6 = -242;
        int i7 = -1;
        int[] iArr1 = new int[N];
        long l = 26357L;
        float f = 1.261F;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -23750);
        FuzzerUtils.init(iArr1, -1798);

        for (short s : sArr) {
            d *= Test0674.iFld;
            s <<= (short) Test0674.iFld;
            Test0674.iFld %= -45;
        }
        for (i1 = 14; 386 > i1; ++i1) {
            for (i3 = 1; i3 < 5; ++i3) {
                iArr1[i3] *= (int) d;
            }
            for (i5 = i1; 5 > i5; i5++) {
                iArr1[i5 + 1] -= -58;
            }
            Test0674.lArrFld[i1 - 1] = Test0674.byFld;
            i6 += (-1218 + (i1 * i1));
            iArr1[i1 + 1] = i4;
            for (l = i1; 5 > l; l++) {
                boolean b = true;
                d *= f;
                if (b) break;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + i6 + l + i7 + Float.floatToIntBits(f)
                + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i) {

        int i8 = -12;
        int i9 = -3;
        int i10 = 34857;
        int i11 = -213;
        int i12 = 12;
        int i13 = -36;
        int i14 = -23839;
        int i15 = 245;
        int[] iArr = new int[N];
        double[] dArr = new double[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr, -24445);
        FuzzerUtils.init(dArr, 46.70897);
        FuzzerUtils.init(fArr, -2.137F);

        i = (int) (((-i) + iArr[(Test0674.iFld >>> 1) % N]) / (((long) ((dArr[(38928 >>> 1) % N]--) - (2585812506512817948L -
                (--iArr[(-4 >>> 1) % N])))) | 1));
        vMeth1();
        for (i8 = 7; i8 < 295; i8++) {
            iArr[i8 + 1] *= i;
            Test0674.bFld = Test0674.bFld;
            for (i10 = 1; i10 < 6; i10++) {
                for (i12 = 2; 1 < i12; i12 -= 3) {
                    Test0674.fFld *= i8;
                    Test0674.iFld = (int) Test0674.instanceCount;
                    Test0674.fFld *= Test0674.instanceCount;
                }
                fArr[i8 + 1] *= Test0674.instanceCount;
                Test0674.instanceCount >>= -31683L;
            }
            for (i14 = 6; 1 < i14; i14--) {
                i13 += (int) Test0674.fFld;
                i9 >>= (int) Test0674.instanceCount;
            }
        }
        vMeth_check_sum += i + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i17 = -105;
        int i18 = 193;
        int i19 = -246;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, -194);

        vMeth(7);
        for (int i16 : iArr2) {
            iArr2[(Test0674.iFld >>> 1) % N] -= Test0674.iFld;
        }
        Test0674.iFld = Test0674.iFld;
        Test0674.iFld *= Test0674.iFld;
        Test0674.lArrFld[(Test0674.iFld >>> 1) % N] |= 1;
        i17 = 1;
        do {
            Test0674.instanceCount -= Test0674.iFld;
            Test0674.byFld -= (byte) -7;
            Test0674.instanceCount *= i17;
        } while (++i17 < 374);
        Test0674.fFld = Test0674.iFld;
        for (i18 = 11; i18 < 255; i18++) {
            iArr2[i18 - 1] += i19;
            i19 = (int) Test0674.instanceCount;
        }
        Test0674.instanceCount = Test0674.instanceCount;
        long meth_res = i17 + i18 + i19 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0674 _instance = new Test0674();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f1 = -76.260F;
        int i20 = -226;
        int i21 = -42;
        int i22 = -216;
        int i23 = 10;
        int i24 = -188;
        int i25 = -41031;
        int[] iArr3 = new int[N];

        FuzzerUtils.init(iArr3, 2);

        Test0674.iFld >>= iMeth();
        f1 = 1;
        do {
            if (Test0674.bFld) break;
            Test0674.instanceCount = 185;
            if (Test0674.bFld) {
                if (Test0674.bFld) break;
                Test0674.instanceCount = Test0674.iFld;
            } else if (Test0674.bFld) {
                try {
                    Test0674.iFld = (Test0674.iFld % -235);
                    iArr3[(int) (f1 - 1)] = (-48789 / Test0674.iFld);
                    Test0674.iFld = (Test0674.iFld / -971831738);
                } catch (ArithmeticException a_e) {
                }
                Test0674.lArrFld[(int) (f1 + 1)] += Test0674.iFld;
                iArr3[(int) (f1 - 1)] += (int) f1;
                i20 = 1;
                do {
                    Test0674.iFld += (int) (-123.29F + (i20 * i20));
                    Test0674.iFld -= (int) 6L;
                    iArr3[i20 + 1] >>= i20;
                    i21 = 1;
                    while (++i21 < 1) {
                        Test0674.iFld += Test0674.iFld;
                        Test0674.iFld += (int) 39335L;
                        Test0674.iFld += (i21 * i21);
                    }
                    Test0674.iFld = i20;
                    Test0674.iFld ^= i20;
                    iArr3[i20 + 1] += (int) Test0674.instanceCount;
                    Test0674.iFld += (69 + (i20 * i20));
                } while (++i20 < 106);
            } else {
                Test0674.fFld += i21;
                for (i22 = 4; i22 < 106; i22++) {
                    Test0674.iFld *= i23;
                    for (i24 = 2; i24 > 1; i24 -= 2) {
                        Test0674.instanceCount -= 64297;
                        Test0674.iFld += (i24 - Test0674.byFld);
                        i25 <<= -56;
                        Test0674.byFld += (byte) i21;
                    }
                }
            }
        } while (++f1 < 237);

        FuzzerUtils.out.println("f1 i20 i21 = " + Float.floatToIntBits(f1) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 iArr3 = " + i25 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0674.instanceCount Test0674.iFld Test0674.byFld = " + Test0674.instanceCount + "," + Test0674.iFld +
                "," + Test0674.byFld);
        FuzzerUtils.out.println("Test0674.bFld Test0674.fFld Test0674.lArrFld = " + (Test0674.bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0674.fFld) + "," + FuzzerUtils.checkSum(Test0674.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
