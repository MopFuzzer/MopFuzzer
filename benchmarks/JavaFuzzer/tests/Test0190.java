// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test0190 {

    public static final int N = 400;

    public static long instanceCount = -50760L;
    public static boolean bFld = false;
    public static int iFld = 63;
    public static byte byFld = -39;
    public static double dFld = -52.70192;
    public static short sFld = 10782;
    public static float fFld = 46.119F;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0190.iArrFld, -3);
    }

    public long[] lArrFld = new long[N];

    public static void vMeth1(byte by, int i13, double d1) {

        long l2 = 3L;
        int i14 = -64, i15 = 39267, i16 = -5, i17 = -11, i18 = -12, i19 = 10961;
        float f1 = 89.185F;
        double[][] dArr = new double[N][N];

        FuzzerUtils.init(dArr, 1.127811);

        Test0190.instanceCount += (long) 1.52595;
        i13 += 14;
        for (l2 = 260; l2 > 11; l2--) {
            Test0190.instanceCount -= i14;
        }
        for (i15 = 365; 9 < i15; --i15) {
            i16 = (int) l2;
            dArr[i15 + 1][i15] -= -51229;
            Test0190.instanceCount += (((i15 * f1) + f1) - f1);
            i13 += (i15 * i15);
            i17 = 1;
            do {
                switch (((178 >>> 1) % 2) + 89) {
                    case 89:
                        f1 *= Test0190.iFld;
                        for (i18 = 1; i18 < 1; i18++) {
                            Test0190.iFld >>>= i15;
                            i13 >>= i15;
                        }
                        break;
                    case 90:
                        Test0190.iFld = i13;
                        break;
                    default:
                        i14 = 18546;
                }
            } while (++i17 < 5);
        }
        vMeth1_check_sum += by + i13 + Double.doubleToLongBits(d1) + l2 + i14 + i15 + i16 + Float.floatToIntBits(f1) +
                i17 + i18 + i19 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(int i7, int i8, int i9) {

        int i10 = 23, i11 = 63394, i12 = 13, i20 = 44509, i21 = -15576, i22 = -3482, i23 = 30;
        double d = 25.5569, d2 = -117.111350;
        float f2 = 87.66F;
        float[] fArr = new float[N];
        short s = 13193;

        FuzzerUtils.init(fArr, 2.842F);

        for (i10 = 2; i10 < 121; i10++) {
            Test0190.instanceCount += (i10 | Test0190.instanceCount);
            i12 = 13;
            do {
                d += (-((i10 - i8) + (d - 0.490F)));
                vMeth1(Test0190.byFld, i11, d);
                f2 += (1919 + (i12 * i12));
                f2 = Test0190.instanceCount;
            } while (--i12 > 0);
            for (i20 = 1; 13 > i20; ++i20) {
                for (d2 = 2; i10 < d2; --d2) {
                    i11 = i23;
                    i8 += (int) Test0190.instanceCount;
                    fArr[i20 - 1] *= i23;
                    s = (short) 18;
                }
                i23 *= 8;
                i8 *= i23;
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i20 +
                i21 + Double.doubleToLongBits(d2) + i22 + i23 + s + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i1) {

        long l1 = -2804787892361386459L;
        int i2 = 9, i3 = -56381, i4 = -2, i5 = -3889, i6 = -124;
        float f = 1.648F;

        l1 = 1;
        while (++l1 < 397) {
            for (i2 = 1; i2 < 4; ++i2) {
                for (i4 = 1; i4 < 2; ++i4) {
                    Test0190.iArrFld[i4 + 1] <<= (int) (Test0190.instanceCount--);
                }
                Test0190.bFld = (Test0190.bFld = Test0190.bFld);
                i3 <<= (--i3);
                i6 = 1;
                while (++i6 < 2) {
                    switch ((((i3++) >>> 1) % 10) + 88) {
                        case 88:
                            f += i6;
                            i5 <<= (int) Test0190.instanceCount;
                            Test0190.iArrFld[i6] = (int) (iMeth(-50, 8, i5) * Test0190.instanceCount);
                        case 89:
                            i5 += i6;
                            break;
                        case 90:
                            f -= 0.300F;
                            break;
                        case 91:
                            i3 -= (int) Test0190.dFld;
                            Test0190.instanceCount += (((i6 * i3) + l1) - l1);
                            break;
                        case 92:
                            Test0190.instanceCount <<= Test0190.iFld;
                            break;
                        case 93:
                            i3 ^= i2;
                            break;
                        case 94:
                            i3 = i5;
                            break;
                        case 95:
                            i1 += (i6 + i1);
                            break;
                        case 96:
                            Test0190.iFld -= i4;
                            break;
                        case 97:
                            i1 -= i4;
                        default:
                            i3 *= (int) l1;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + l1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f);
    }

    public static void main(String[] strArr) {

        try {
            Test0190 _instance = new Test0190();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        long l = 10L, l3 = -5L;
        int i = -40037, i24 = 11054, i25 = -129, i26 = -2, i27 = -30790, i28 = 245, i29 = -9624, i30 = 20630;
        float f3 = -102.1015F;
        float[] fArr1 = new float[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(fArr1, 0.524F);
        FuzzerUtils.init(byArr, (byte) 35);

        for (l = 16; 378 > l; ++l) {
            vMeth(Test0190.iFld);
            i += i;
            Test0190.instanceCount = Test0190.instanceCount;
            for (i24 = (int) (l); i24 < 70; ++i24) {
                Test0190.iArrFld[i24 + 1] *= (int) l;
                Test0190.instanceCount += (((i24 * l) + f3) - i25);
                for (i26 = 1; i26 > 1; --i26) {
                    i27 >>= i25;
                    Test0190.iFld += i26;
                    fArr1[i26] *= -190;
                    i25 >>= Test0190.sFld;
                    l3 >>>= i;
                    f3 = -148;
                }
                Test0190.iArrFld[i24 + 1] -= (int) l3;
                Test0190.instanceCount = Test0190.instanceCount;
                i25 += (int) Test0190.fFld;
            }
            Test0190.iFld = i;
            Test0190.instanceCount *= -160;
            i25 += (int) (((l * Test0190.iFld) + f3) - Test0190.fFld);
        }
        Test0190.dFld = Test0190.instanceCount;
        for (long l4 : lArrFld) {
            i28 = 1;
            while (++i28 < 63) {
                for (i29 = i28; i29 < 1; i29++) {
                    i = (int) l3;
                    i27 += (((i29 * l4) + i25) - Test0190.iFld);
                    switch (((i29 % 10) * 5) + 5) {
                        case 20:
                            Test0190.instanceCount += (i29 ^ i29);
                            i25 -= (int) 1.637F;
                            break;
                        case 49:
                            l4 += (long) Test0190.dFld;
                        case 10:
                            i25 -= -10736;
                            break;
                        case 35:
                        case 39:
                            l4 += i29;
                            break;
                        case 36:
                            if (true) break;
                            break;
                        case 42:
                            byArr[i28 + 1] <<= (byte) l3;
                            break;
                        case 44:
                            i27 += (i29 - i29);
                        case 40:
                            Test0190.iFld = 53168;
                            break;
                        case 55:
                            l4 = i30;
                        default:
                            Test0190.iArrFld[i29 - 1] = (int) l3;
                    }
                }
            }
        }

        FuzzerUtils.out.println("l i i24 = " + l + "," + i + "," + i24);
        FuzzerUtils.out.println("i25 f3 i26 = " + i25 + "," + Float.floatToIntBits(f3) + "," + i26);
        FuzzerUtils.out.println("i27 l3 i28 = " + i27 + "," + l3 + "," + i28);
        FuzzerUtils.out.println("i29 i30 fArr1 = " + i29 + "," + i30 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0190.instanceCount Test0190.bFld Test0190.iFld = " + Test0190.instanceCount + "," + (Test0190.bFld ? 1
                : 0) + "," + Test0190.iFld);
        FuzzerUtils.out.println("Test0190.byFld Test0190.dFld Test0190.sFld = " + Test0190.byFld + "," +
                Double.doubleToLongBits(Test0190.dFld) + "," + Test0190.sFld);
        FuzzerUtils.out.println("Test0190.fFld Test0190.iArrFld lArrFld = " + Float.floatToIntBits(Test0190.fFld) + "," +
                FuzzerUtils.checkSum(Test0190.iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
