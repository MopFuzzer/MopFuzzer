// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0903 {

    public static final int N = 400;

    public static long instanceCount = -48529L;
    public static float fFld = -79.373F;
    public static boolean bFld = true;
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0903.lArrFld, 242L);
    }

    public byte byFld = 78;
    public int iFld = 3;

    public static void vMeth2() {

        int i1 = -41, i2 = 9626, i3 = 63693, i4 = -22592, i5 = -81, i6 = 70, i7 = 136, i8 = -94, i9 = 50;
        byte by = 125;

        for (i1 = 9; 282 > i1; ++i1) {
            for (i3 = 1; i3 < 6; i3++) {
                i4 += i3;
                for (i5 = 1; i5 < 2; i5++) {
                    Test0903.instanceCount -= (long) Test0903.fFld;
                    i6 = i4;
                }
            }
            i6 = (int) Test0903.instanceCount;
            i7 = 1;
            do {
                for (i8 = i7; i8 < 1; i8++) {
                    Test0903.instanceCount = i1;
                    Test0903.fFld += i5;
                    Test0903.instanceCount *= i5;
                    by += (byte) (-13 + (i8 * i8));
                    i6 -= i9;
                    Test0903.instanceCount = -150;
                }
            } while (++i7 < 6);
        }
        vMeth2_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + by;
    }

    public static void vMeth1() {

        int i10 = -87;
        int i11 = 10596;
        int i12 = -32714;
        int i13 = -26762;
        int i14 = -15220;
        int[][] iArr = new int[N][N];
        byte by1 = -31;
        long l2 = 12L;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, 5);
        FuzzerUtils.init(lArr, 2703096252L);

        vMeth2();
        iArr[(i10 >>> 1) % N][(i10 >>> 1) % N] += i10;
        by1 *= (byte) i10;
        for (i11 = 5; i11 < 272; ++i11) {
            i13 -= i13;
            Test0903.bFld = Test0903.bFld;
            Test0903.instanceCount = Test0903.instanceCount;
            if (true) {
                i13 >>= i10;
                i13 = i10;
                lArr = Test0903.lArrFld;
            }
            for (l2 = 1; l2 < 6; l2++) {
                Test0903.instanceCount = l2;
                Test0903.instanceCount += (l2 ^ i11);
                Test0903.fFld *= i10;
            }
        }
        vMeth1_check_sum += i10 + by1 + i11 + i12 + i13 + l2 + i14 + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l1) {

        int i15 = 75;
        int i16 = -166;
        int i17 = 34212;
        int i18 = -242;
        int i19 = -187;
        int i20 = -12;
        int i21 = -126;
        int[] iArr1 = new int[N];
        byte by2 = -126;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr1, -4);
        FuzzerUtils.init(byArr, (byte) 97);

        vMeth1();
        for (i15 = 20; i15 < 336; i15 += 2) {
            if (Test0903.bFld) continue;
            i16 += (((i15 * i16) + i15) - i15);
            for (i17 = 1; i17 < 10; ++i17) {
                for (i19 = 1; i19 < 2; ++i19) {
                    i18 <<= i17;
                    Test0903.instanceCount = by2;
                    iArr1[i19 - 1] >>= (int) Test0903.instanceCount;
                }
                i18 *= (int) Test0903.instanceCount;
                Test0903.instanceCount -= i19;
            }
            byArr[i15 + 1] = (byte) l1;
            i21 = 1;
            do {
                i18 = i16;
                Test0903.fFld += (((i21 * Test0903.instanceCount) + Test0903.fFld) - i17);
            } while (++i21 < 10);
        }
        vMeth_check_sum += l1 + i15 + i16 + i17 + i18 + i19 + i20 + by2 + i21 + FuzzerUtils.checkSum(iArr1) +
                FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0903 _instance = new Test0903();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 1435;
        int i22 = -28611;
        int i23 = 6;
        int i24 = -13730;
        int i25 = 74;
        int i26 = 98;
        int i27 = -36142;
        int i28 = 119;
        int i29 = -15646;
        int i30 = 58661;
        int[] iArr2 = new int[N];
        double d = 2.129903;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 0.103F);
        FuzzerUtils.init(iArr2, -249);

        for (long l : Test0903.lArrFld) {
            l -= (-((i - byFld) - Math.min(l, Test0903.instanceCount)));
        }
        vMeth(-6626L);
        for (i22 = 12; i22 < 341; ++i22) {
            fArr[i22 + 1] = Test0903.instanceCount;
            i23 += (i22 | i23);
            switch ((((i >>> 1) % 4) * 5) + 36) {
                case 52:
                    for (i24 = 2; i24 < 76; i24++) {
                        i23 = 99;
                    }
                    d += i;
                    break;
                case 54:
                    Test0903.instanceCount *= i25;
                    break;
                case 39:
                    i25 += i23;
                    i25 += byFld;
                    switch ((i22 % 2) + 102) {
                        case 102:
                            for (i26 = 3; i26 < 76; i26++) {
                                for (i28 = 2; i28 > 1; i28 -= 2) {
                                    byFld += (byte) (54790 + (i28 * i28));
                                    iArr2 = iArr2;
                                    i25 ^= i;
                                    i27 = i27;
                                }
                                d = Test0903.fFld;
                                Test0903.instanceCount -= (long) d;
                                Test0903.fFld += i23;
                                Test0903.instanceCount = i25;
                                i29 = -34860;
                                iArr2[i22 + 1] += i26;
                                i27 = i25;
                                iFld += (i26 * iFld);
                                i30 /= (int) (iFld | 1);
                            }
                            i += i22;
                            break;
                        case 103:
                            if (Test0903.bFld) continue;
                            break;
                        default:
                            i -= i;
                    }
                case 47:
                    Test0903.instanceCount = iFld;
                default:
                    Test0903.instanceCount = i26;
            }
        }

        FuzzerUtils.out.println("i i22 i23 = " + i + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 d = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 fArr = " + i29 + "," + i30 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0903.instanceCount byFld Test0903.fFld = " + Test0903.instanceCount + "," + byFld + "," +
                Float.floatToIntBits(Test0903.fFld));
        FuzzerUtils.out.println("Test0903.bFld iFld Test0903.lArrFld = " + (Test0903.bFld ? 1 : 0) + "," + iFld + "," +
                FuzzerUtils.checkSum(Test0903.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
