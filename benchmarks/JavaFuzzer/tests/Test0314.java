// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0314 {

    public static final int N = 400;

    public static long instanceCount = -14L;
    public static byte byFld = -36;
    public static int iFld1 = -10;
    public static long[] lArrFld = new long[N];
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0314.lArrFld, -249L);
    }

    public int iFld = -30044;
    public double dFld = 0.28242;

    public static void vMeth1(int i1) {

        double d = 14.10197;
        double[][] dArr = new double[N][N];
        int i2 = 0;
        int i3 = -2;
        int i4 = -20;
        int[] iArr = new int[N];
        float f = 13.50F;

        FuzzerUtils.init(iArr, -117);
        FuzzerUtils.init(dArr, -91.54546);

        for (d = 6; d < 171; ++d) {
            f += (float) (((d * Test0314.byFld) + i1) - i1);
            iArr[(int) (d + 1)] = i2;
            iArr[(int) (d)] = (int) Test0314.instanceCount;
            Test0314.instanceCount -= Test0314.instanceCount;
            for (i3 = 10; i3 > 1; --i3) {
                Test0314.instanceCount += i3;
                switch ((i3 % 2) + 121) {
                    case 121:
                        dArr[(int) (d)][i3 - 1] -= i2;
                        i4 += i3;
                        Test0314.instanceCount = i1;
                        break;
                    case 122:
                        i1 = 54468;
                        iArr[i3 + 1] += -28148;
                }
                Test0314.instanceCount += (((i3 * i3) + Test0314.instanceCount) - i3);
                i2 = i4;
            }
        }
        vMeth1_check_sum += i1 + Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f) + i3 + i4 +
                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0314 _instance = new Test0314();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        int i5 = 1;
        int i6 = -32;
        int i7 = -13;
        int i8 = 6;
        int i9 = -11;
        int i10 = -2;
        int i11 = -80;
        int i12 = -11;
        int[] iArr1 = new int[N];
        boolean b = true;
        long l = 6429293757748685619L;
        float f1 = -113.0F;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, -1.271F);
        FuzzerUtils.init(iArr1, 4);

        vMeth1(181);
        i5 = 1;
        do {
            switch ((i5 % 7) + 61) {
                case 61:
                case 62:
                    if (b) break;
                    for (l = 6; l > 1; --l) {
                        Test0314.byFld = (byte) i5;
                    }
                    break;
                case 63:
                    for (i7 = 1; i7 < 6; i7++) {
                        for (i9 = 1; i9 < 2; ++i9) {
                            Test0314.lArrFld[i5] *= i7;
                        }
                        try {
                            iFld = (i10 % 1592340846);
                            iFld = (i9 / i10);
                            i10 = (i9 % -82);
                        } catch (ArithmeticException a_e) {
                        }
                        for (i11 = 1; 2 > i11; i11 += 3) {
                            iFld *= (int) f1;
                            i10 = (int) Test0314.instanceCount;
                            f1 *= f1;
                            Test0314.instanceCount += (long) f1;
                        }
                    }
                    break;
                case 64:
                    i12 += (int) (-2L + (i5 * i5));
                    break;
                case 65:
                    Test0314.instanceCount += i5;
                    break;
                case 66:
                    fArr[i5][i5 + 1] = i6;
                case 67:
                    iArr1[i5 + 1] >>= (int) l;
            }
        } while (++i5 < 254);
        vMeth_check_sum += i5 + (b ? 1 : 0) + l + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public double dMeth(int i) {


        vMeth();
        long meth_res = i;
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i13 = -13;
        int i14 = 27898;
        int i15 = -3;
        int i16 = 32382;
        int i17 = -31774;
        int[] iArr2 = new int[N];
        short s = -14105;
        short[] sArr = new short[N];
        boolean b1 = false;

        FuzzerUtils.init(sArr, (short) -22277);
        FuzzerUtils.init(iArr2, 13);

        Test0314.lArrFld[(iFld >>> 1) % N] -= (long) dMeth(iFld);
        iFld = iFld;
        i13 = 1;
        while (++i13 < 123) {
            Test0314.instanceCount += 29;
            Test0314.instanceCount = iFld;
            for (i14 = i13; i14 < 204; i14++) {
                i15 += (i14 + iFld);
                switch ((i14 % 3) + 30) {
                    case 30:
                        i15 = s;
                        break;
                    case 31:
                        i15 &= (int) Test0314.instanceCount;
                        for (i16 = 1; 1 > i16; ++i16) {
                            switch ((i13 % 2) + 71) {
                                case 71:
                                    Test0314.iFld1 = (int) Test0314.instanceCount;
                                    Test0314.lArrFld[i13] -= i15;
                                    i17 -= s;
                                case 72:
                                    Test0314.instanceCount = 1;
                                    Test0314.byFld &= (byte) Test0314.instanceCount;
                                    Test0314.iFld1 += (((i16 * Test0314.iFld1) + i14) - Test0314.instanceCount);
                                    break;
                            }
                            dFld -= iFld;
                            if (b1) break;
                            Test0314.iFld1 = 6;
                            iFld -= i17;
                            i15 = (int) Test0314.instanceCount;
                            Test0314.instanceCount = -11L;
                            i15 *= 35;
                            iFld = Test0314.iFld1;
                        }
                        i17 >>= 50;
                        sArr[i13 - 1] += (short) iFld;
                        break;
                    case 32:
                        Test0314.iFld1 += iFld;
                        iFld += i17;
                        break;
                    default:
                        iArr2[(i16 >>> 1) % N] |= i13;
                }
            }
        }

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("s i16 i17 = " + s + "," + i16 + "," + i17);
        FuzzerUtils.out.println("b1 sArr iArr2 = " + (b1 ? 1 : 0) + "," + FuzzerUtils.checkSum(sArr) + "," +
                FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0314.instanceCount iFld Test0314.byFld = " + Test0314.instanceCount + "," + iFld + "," +
                Test0314.byFld);
        FuzzerUtils.out.println("Test0314.iFld1 dFld Test0314.lArrFld = " + Test0314.iFld1 + "," + Double.doubleToLongBits(dFld) +
                "," + FuzzerUtils.checkSum(Test0314.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
