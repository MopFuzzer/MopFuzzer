// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0346 {

    public static final int N = 400;

    public static long instanceCount = 9L;
    public static float fFld = 42.129F;
    public static double dFld = -54.43616;
    public static byte byFld = -41;
    public static int iFld1 = 29356;
    public static int iFld2 = 9;
    public static boolean bFld = true;
    public static boolean[] bArrFld = new boolean[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0346.bArrFld, false);
    }

    public int iFld = -6;

    public static void vMeth2(long l, int i6) {

        int i7 = -36060;
        int i8 = -48;
        int i9 = 27606;
        int i10 = -52885;
        int i11 = 200;
        int i12 = -75;
        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, 2);

        for (i7 = 4; i7 < 367; i7 += 2) {
            iArr[i7] = (int) -236L;
            i6 -= i6;
            for (i9 = 1; i9 < 9; ++i9) {
                iArr[i7] <<= -5;
                try {
                    i6 = (33202 / iArr[i7]);
                    iArr[i7 - 1] = (-217 % i6);
                    iArr[i9 - 1] = (i8 % i7);
                } catch (ArithmeticException a_e) {
                }
                i6 -= 167;
                iArr = iArr;
                iArr[i9 - 1] *= -8;
                for (i11 = 1; i11 < 2; ++i11) {
                    Test0346.fFld += i10;
                    iArr = iArr;
                    Test0346.fFld = (float) Test0346.dFld;
                    Test0346.dFld -= 10391;
                    iArr[i11] -= (int) Test0346.dFld;
                }
            }
        }
        vMeth2_check_sum += l + i6 + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i, double d, int i1) {

        int i2 = 22;
        int i3 = 33562;
        int i4 = 7;
        int i5 = 14;
        int i13 = 10;
        int i14 = -61;
        int i15 = 26;
        int[] iArr1 = new int[N];
        boolean b = true;

        FuzzerUtils.init(iArr1, -15);

        for (i2 = 18; i2 < 379; ++i2) {
            for (i4 = 1; i4 < 5; ++i4) {
                b = Test0346.bArrFld[(i >>> 1) % N];
                i1 += (i4 + i1);
            }
            i3 *= (-(++i1));
            switch (((i2 % 9) * 5) + 52) {
                case 90:
                    vMeth2(Test0346.instanceCount, i);
                    i1 += (((i2 * i4) + i1) - i2);
                    break;
                case 85:
                    if (b) {
                        Test0346.byFld -= (byte) i2;
                        i3 += (i2 + Test0346.instanceCount);
                        iArr1[i2] >>= (int) Test0346.instanceCount;
                        vMeth1_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) + i13 +
                                i14 + i15 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    for (i13 = 1; i13 < 5; i13++) {
                        i3 = -96;
                        Test0346.instanceCount -= 240;
                    }
                    break;
                case 93:
                    i3 = (int) -1864903985375187605L;
                    break;
                case 82:
                    i1 *= -8;
                    break;
                case 97:
                    i5 *= i15;
                    break;
                case 94:
                case 55:
                    Test0346.byFld += (byte) Test0346.fFld;
                    break;
                case 78:
                    i15 += 1;
                    break;
                case 60:
                    i3 += i2;
                    break;
            }
        }
        vMeth1_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) + i13 + i14 + i15 +
                FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        byte by = 47;
        byte[] byArr = new byte[N];
        int i16 = 0;
        int i17 = -33608;
        int i18 = 43;
        int i19 = -18202;
        int[] iArr2 = new int[N];
        boolean b1 = true;
        short s = -17753;

        FuzzerUtils.init(byArr, (byte) -26);
        FuzzerUtils.init(iArr2, -12390);

        by -= (byte) -1.43572;
        vMeth1(i16, Test0346.dFld, i16);
        for (byte by1 : byArr) {
            if (b1) {
                switch (((i16 >>> 1) % 6) + 51) {
                    case 51:
                    case 52:
                        for (i17 = 1; 4 > i17; i17++) {
                            Test0346.dFld += Test0346.instanceCount;
                            i19 = 1;
                            do {
                                iArr2[i19] += 14;
                                b1 = b1;
                                Test0346.instanceCount = -40858;
                                Test0346.instanceCount |= i19;
                                Test0346.instanceCount += i19;
                                Test0346.instanceCount *= 0;
                                i16 += (((i19 * i16) + Test0346.instanceCount) - i17);
                            } while (++i19 < 2);
                        }
                        break;
                    case 53:
                        i18 = i18;
                    case 54:
                        by1 >>>= (byte) i16;
                        break;
                    case 55:
                        i18 *= s;
                        break;
                    case 56:
                        Test0346.fFld = i17;
                        break;
                }
            } else {
                i18 = i18;
            }
        }
        vMeth_check_sum += by + i16 + i17 + i18 + i19 + (b1 ? 1 : 0) + s + FuzzerUtils.checkSum(byArr) +
                FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0346 _instance = new Test0346();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = 16;
        int i21 = -13;
        int i22 = -14;
        int i23 = -51;
        int i24 = 13;
        int i25 = -32674;
        int i26 = -157;
        int i27 = -3;
        int[] iArr3 = new int[N];
        float f = 0.423F;

        FuzzerUtils.init(iArr3, 12);

        iFld >>>= iFld;
        vMeth();
        for (i20 = 4; i20 < 187; i20++) {
            iFld -= (int) Test0346.dFld;
            Test0346.instanceCount = Test0346.byFld;
            try {
                iFld = (227 / i22);
                Test0346.iFld1 = (i21 % i22);
                iArr3[i20 + 1] = (i20 % 1605750353);
            } catch (ArithmeticException a_e) {
            }
            for (i23 = 5; 137 > i23; ++i23) {
                Test0346.fFld += (i23 + Test0346.instanceCount);
                for (i25 = 1; i25 < 2; ++i25) {
                    i22 = i22;
                    Test0346.instanceCount += i25;
                    switch ((i25 % 7) + 115) {
                        case 115:
                            iFld >>= i22;
                            i22 *= iFld;
                            Test0346.instanceCount += (((i25 * Test0346.instanceCount) + Test0346.instanceCount) - Test0346.iFld1);
                        case 116:
                            if (true) {
                                iFld = Test0346.iFld2;
                                Test0346.instanceCount = Test0346.instanceCount;
                                iArr3[i25 - 1] = i27;
                            } else if (Test0346.bFld) {
                                Test0346.instanceCount = -81;
                            } else {
                                i27 = -50;
                            }
                            break;
                        case 117:
                            i26 -= Test0346.iFld2;
                            if (Test0346.bFld) continue;
                            i26 += i25;
                            break;
                        case 118:
                            Test0346.fFld = (float) Test0346.dFld;
                            Test0346.fFld *= i25;
                            Test0346.instanceCount += (i25 | (long) Test0346.fFld);
                            Test0346.instanceCount -= (long) Test0346.fFld;
                            break;
                        case 119:
                            Test0346.iFld1 = i23;
                            break;
                        case 120:
                            Test0346.fFld /= (i22 | 1);
                            break;
                        case 121:
                            Test0346.instanceCount += (((i25 * Test0346.iFld1) + i22) - f);
                            break;
                        default:
                            i26 -= i24;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 f = " + i26 + "," + i27 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0346.instanceCount iFld Test0346.fFld = " + Test0346.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0346.fFld));
        FuzzerUtils.out.println("Test0346.dFld Test0346.byFld Test0346.iFld1 = " + Double.doubleToLongBits(Test0346.dFld) + "," +
                Test0346.byFld + "," + Test0346.iFld1);
        FuzzerUtils.out.println("Test0346.iFld2 Test0346.bFld Test0346.bArrFld = " + Test0346.iFld2 + "," + (Test0346.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0346.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
