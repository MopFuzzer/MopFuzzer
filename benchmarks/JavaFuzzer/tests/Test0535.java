// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test0535 {

    public static final int N = 400;

    public static long instanceCount = 12L;
    public static int iFld = 7;
    public static volatile byte byFld = 20;
    public static volatile float fFld = 2.713F;
    public static int iFld1 = 54712;
    public static volatile float fFld1 = 1.712F;
    public static double dFld = -20.63791;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0535.fArrFld, 0.70F);
        FuzzerUtils.init(Test0535.iArrFld, 37816);
    }

    public short sFld = -20682;

    public static short sMeth(int i2, boolean b, boolean b1) {

        int i3 = 21162, i4 = -56;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 90.172F);

        Test0535.iFld &= Test0535.iFld;
        for (i3 = 7; i3 < 256; ++i3) {
            Test0535.instanceCount = Test0535.instanceCount;
            fArr[i3] *= i3;
        }
        i2 -= -3;
        long meth_res = i2 + (b ? 1 : 0) + (b1 ? 1 : 0) + i3 + i4 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void vMeth1(byte by, int i1) {

        boolean b2 = false;
        int i5 = 24;
        int i6 = 8;
        int i7 = 0;
        int i8 = 135;
        int[] iArr = new int[N];
        float f = 12.732F;
        short s1 = -6257;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 26904);
        FuzzerUtils.init(iArr, 1);

        Test0535.iFld += Test0535.iFld;
        sArr[(-143 >>> 1) % N] >>= sMeth(-7, true, b2);
        i5 = 1;
        while (++i5 < 366) {
            by <<= (byte) 81;
            for (i6 = i5; i6 < 5; i6++) {
                i8 = 1;
                do {
                    iArr[i8 + 1] <<= 45452;
                    f = i5;
                    i7 = (int) Test0535.instanceCount;
                    i1 <<= i1;
                    Test0535.instanceCount += (((i8 * Test0535.instanceCount) + i5) - i6);
                } while ((i8 += 3) < 1);
                Test0535.instanceCount += i6;
                i1 += (((i6 * i1) + Test0535.iFld) - i5);
                s1 += (short) i6;
                try {
                    Test0535.iFld = (i6 / -194747422);
                    i1 = (i5 % iArr[i6 - 1]);
                    i1 = (i8 % 210);
                } catch (ArithmeticException a_e) {
                }
            }
        }
        vMeth1_check_sum += by + i1 + (b2 ? 1 : 0) + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + s1 +
                FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, short s) {

        int i9 = -187, i10 = -1739, i11 = 7;

        l += Test0535.iFld;
        vMeth1(Test0535.byFld, Test0535.iFld);
        Test0535.fArrFld = Test0535.fArrFld;
        Test0535.iFld >>>= (int) l;
        i9 = 1;
        while (++i9 < 365) {
            for (i10 = 5; i10 > i9; i10--) {
                Test0535.iFld += i11;
            }
            l += Test0535.byFld;
            Test0535.iFld >>= (int) l;
            Test0535.fFld -= i9;
            s += (short) i9;
        }
        s = (short) i9;
        Test0535.iFld1 -= (int) Test0535.instanceCount;
        Test0535.iFld += i11;
        Test0535.iFld -= (int) l;
        vMeth_check_sum += l + s + i9 + i10 + i11;
    }

    public static void main(String[] strArr) {

        try {
            Test0535 _instance = new Test0535();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -6288, i12 = -225, i13 = -24191, i14 = -51464, i15 = 3, i16 = 9, i17 = 9;
        double d = 100.7060;
        double[] dArr = new double[N];
        boolean b3 = true;

        FuzzerUtils.init(dArr, 108.61486);

        i += ((i++) + (i++));
        vMeth(Test0535.instanceCount, sFld);
        Test0535.iArrFld[(Test0535.iFld1 >>> 1) % N] += Test0535.iFld;
        for (i12 = 1; i12 < 189; i12++) {
            for (d = 6; d < 133; ++d) {
                if (b3) {
                    for (i15 = 2; 1 < i15; i15--) {
                        dArr[(int) (d)] = 6;
                    }
                    i17 = 1;
                    while (++i17 < 2) {
                        Test0535.instanceCount *= Test0535.byFld;
                        Test0535.iFld1 = i12;
                        Test0535.instanceCount *= i17;
                        switch ((int) ((d % 6) + 16)) {
                            case 16:
                                Test0535.iArrFld[i12 - 1] ^= i13;
                                Test0535.fFld1 += i;
                                Test0535.iArrFld[i12 - 1] >>>= (int) Test0535.instanceCount;
                                i += (i17 ^ (long) Test0535.fFld1);
                                break;
                            case 17:
                                switch ((int) ((d % 6) + 15)) {
                                    case 15:
                                        Test0535.fArrFld = Test0535.fArrFld;
                                        Test0535.iFld1 += (i17 * Test0535.fFld);
                                        break;
                                    case 16:
                                        if (b3) {
                                            Test0535.instanceCount *= (long) d;
                                            Test0535.iFld <<= i13;
                                            b3 = b3;
                                            i14 += (int) Test0535.fFld1;
                                        } else {
                                            i -= (int) Test0535.instanceCount;
                                            Test0535.fFld1 -= Test0535.iFld;
                                        }
                                        i += (int) d;
                                        Test0535.iFld1 |= Test0535.iFld1;
                                    case 17:
                                        Test0535.instanceCount >>= Test0535.byFld;
                                        break;
                                    case 18:
                                        i13 &= (int) Test0535.instanceCount;
                                        break;
                                    case 19:
                                        Test0535.fArrFld = Test0535.fArrFld;
                                        break;
                                    case 20:
                                        Test0535.dFld = i16;
                                        break;
                                    default:
                                        Test0535.dFld -= i14;
                                }
                                break;
                            case 18:
                                Test0535.iFld |= Test0535.iFld1;
                                break;
                            case 19:
                                if (b3) break;
                            case 20:
                                Test0535.iArrFld[i12 - 1] = -107;
                            case 21:
                                Test0535.fFld = (float) -104.87624;
                                break;
                            default:
                                if (b3) break;
                        }
                    }
                } else if (b3) {
                    Test0535.iArrFld[i12] = i15;
                } else if (b3) {
                    Test0535.instanceCount *= sFld;
                }
            }
        }

        FuzzerUtils.out.println("i i12 i13 = " + i + "," + i12 + "," + i13);
        FuzzerUtils.out.println("d i14 i15 = " + Double.doubleToLongBits(d) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 b3 = " + i16 + "," + i17 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0535.instanceCount Test0535.iFld Test0535.byFld = " + Test0535.instanceCount + "," + Test0535.iFld +
                "," + Test0535.byFld);
        FuzzerUtils.out.println("Test0535.fFld Test0535.iFld1 sFld = " + Float.floatToIntBits(Test0535.fFld) + "," + Test0535.iFld1 +
                "," + sFld);
        FuzzerUtils.out.println("Test0535.fFld1 Test0535.dFld Test0535.fArrFld = " + Float.floatToIntBits(Test0535.fFld1) + "," +
                Double.doubleToLongBits(Test0535.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0535.fArrFld)));
        FuzzerUtils.out.println("Test0535.iArrFld = " + FuzzerUtils.checkSum(Test0535.iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
