// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0799 {

    public static final int N = 400;

    public static long instanceCount = 2010181880L;
    public static float fFld = -17.952F;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i7) {

        int i9 = 2;
        int i10 = 9;
        int i11 = 126;
        int[] iArr3 = new int[N];

        FuzzerUtils.init(iArr3, -63515);

        for (int i8 : iArr3) {
            i7 += -23232;
            for (i9 = 1; i9 < 4; ++i9) {
                switch ((i9 % 3) + 10) {
                    case 10:
                        i7 *= -14;
                        i10 = 6;
                        break;
                    case 11:
                        iArr3[i9 - 1] >>>= i8;
                        Test0799.instanceCount += (i9 * i9);
                        i10 = -208;
                        Test0799.instanceCount += i10;
                    case 12:
                        Test0799.fFld -= i8;
                        i11 = 1;
                        while (++i11 < 2) {
                            try {
                                i7 = (i11 % 13628);
                                i10 = (i9 / -10252);
                                iArr3[i11] = (i11 / i10);
                            } catch (ArithmeticException a_e) {
                            }
                            iArr3[i9 + 1] = i9;
                            Test0799.instanceCount += (7 + (i11 * i11));
                        }
                    default:
                        Test0799.instanceCount += Test0799.instanceCount;
                }
            }
        }
        long meth_res = i7 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr3);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth1() {

        int i5 = 2;
        int i6 = 183;
        int i12 = 42340;
        int i13 = 17398;
        int i14 = -245;
        int[] iArr2 = new int[N];
        short s = -10303;
        double d1 = -80.25872;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr2, -53410);
        FuzzerUtils.init(lArr, 4758206851115412973L);

        for (i5 = 7; i5 < 297; i5++) {
            iArr2[i5] <<= Math.min((int) (3425076640L * lMeth(i6)), i5);
            s *= (short) Test0799.instanceCount;
            for (i12 = 6; i12 > i5; i12 -= 2) {
                for (d1 = 1; 1 > d1; d1++) {
                    lArr[i5] = (long) d1;
                    i13 += 91;
                    i13 += (int) (d1 + Test0799.instanceCount);
                    i6 /= (int) (Test0799.instanceCount | 1);
                    i13 = (int) Test0799.instanceCount;
                }
                Test0799.instanceCount += s;
                i14 -= (int) Test0799.fFld;
            }
            if (i12 != 0) {
            }
            i14 += (int) Test0799.instanceCount;
            i14 += (i5 * i5);
        }
        long meth_res = i5 + i6 + s + i12 + i13 + Double.doubleToLongBits(d1) + i14 + FuzzerUtils.checkSum(iArr2) +
                FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth() {

        int i1 = 59237;
        int i2 = 231;
        int i3 = -34204;
        int i4 = -64019;
        int[][] iArr1 = new int[N][N];
        int[] iArr4 = new int[N];
        double d = -115.78815;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -96.89432);
        FuzzerUtils.init(iArr1, 101);
        FuzzerUtils.init(iArr4, 43941);

        dArr[(i1 >>> 1) % N] -= (i1 >> Math.min(iArr1[(i1 >>> 1) % N][(i1 >>> 1) % N], Math.min(i1, -23)));
        Test0799.instanceCount >>= iArr1[(i1 >>> 1) % N][(i1 >>> 1) % N];
        for (d = 7; d < 171; d += 2) {
            for (i3 = 1; i3 < 19; i3++) {
                i4 = (int) (((i3 - Test0799.instanceCount) - iMeth1()) * i4);
                Test0799.instanceCount += (long) Test0799.fFld;
                i4 += i3;
                Test0799.instanceCount += (((i3 * i1) + Test0799.instanceCount) - Test0799.fFld);
                i1 >>= i1;
                switch ((i3 % 1) + 117) {
                    case 117:
                        Test0799.instanceCount -= i2;
                        i4 = i2;
                        break;
                    default:
                        i4 += (i3 * i3);
                        i4 <<= (int) Test0799.instanceCount;
                }
                iArr4 = iArr4;
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1) +
                FuzzerUtils.checkSum(iArr4);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr2) {

        try {
            Test0799 _instance = new Test0799();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr2);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr3) {

        float f = 1.677F;
        int i = 33387;

        f = (((Test0799.instanceCount + Test0799.instanceCount) - (f + i)) + iMeth());
        i = i;

        FuzzerUtils.out.println("f i = " + Float.floatToIntBits(f) + "," + i);

        FuzzerUtils.out.println("Test0799.instanceCount Test0799.fFld = " + Test0799.instanceCount + "," +
                Float.floatToIntBits(Test0799.fFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
