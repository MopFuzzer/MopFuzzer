// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0684 {

    public static final int N = 400;

    public static long instanceCount = -5398732112644042389L;
    public static int iFld = 31956;
    public static int iFld1 = -14;
    public static boolean bFld = true;
    public static float fFld = -111.1022F;
    public static volatile int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0684.iArrFld, -30853);
    }

    public static float fMeth(double d, long l) {

        int i8 = 5, i9 = 7, i10 = -29374, i11 = 7, i12 = 23, i13 = 5;
        double d1 = -86.64862;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, 3777140823L);

        Test0684.iFld -= (int) 7692270047713764438L;
        for (i8 = 6; 194 > i8; i8++) {
            boolean b = false;
            if (b) continue;
            i10 = 1;
            while (++i10 < 8) {
                i9 = i10;
            }
            try {
                Test0684.iFld1 = (Test0684.iFld % -1446);
                Test0684.iFld1 = (Test0684.iArrFld[i8 - 1] % -42);
                Test0684.iFld1 = (-1534516073 / Test0684.iArrFld[i8]);
            } catch (ArithmeticException a_e) {
            }
            if (i10 != 0) {
            }
            Test0684.iFld = (int) Test0684.instanceCount;
            for (i11 = 8; i11 > 1; i11--) {
                for (d1 = 1; d1 < 2; d1++) {
                    l <<= l;
                    i9 = (int) l;
                    if (b) break;
                }
                i13 += i9;
                lArr[i11 - 1][i11 - 1] = 102;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + l + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + i13
                + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth(short s, float f) {

        byte by1 = 92;
        int i14 = 30, i15 = -69, i16 = 1, i17 = 118;
        double d2 = 1.80587;

        Test0684.iArrFld[(Test0684.iFld >>> 1) % N] += (int) (((Test0684.iFld * f) * (f++)) * ((Test0684.iFld * Test0684.iFld) - -9));
        Test0684.iFld = (int) (by1 * (-fMeth(2.115576, 3035759443L)));
        for (i14 = 3; i14 < 225; ++i14) {
            Test0684.iFld = (int) f;
            if (Test0684.bFld) break;
            Test0684.iFld -= Test0684.iFld;
            Test0684.iFld += Test0684.iFld;
            s -= (short) Test0684.iFld1;
            i15 *= 38899;
            if (Test0684.iFld != 0) {
                vMeth_check_sum += s + Float.floatToIntBits(f) + by1 + i14 + i15 + i16 + Double.doubleToLongBits(d2) +
                        i17;
                return;
            }
        }
        i16 = 1;
        while (++i16 < 255) {
            for (d2 = 1; d2 < 6; ++d2) {
                i15 *= i14;
                Test0684.iArrFld[i16] += i17;
            }
            Test0684.iFld -= Test0684.iFld1;
        }
        vMeth_check_sum += s + Float.floatToIntBits(f) + by1 + i14 + i15 + i16 + Double.doubleToLongBits(d2) + i17;
    }

    public static int iMeth() {

        int i5 = -192;
        int i6 = -234;
        int i7 = -142;
        int i18 = 0;
        int i19 = 449;
        int[] iArr1 = new int[N];
        byte by = -118;

        FuzzerUtils.init(iArr1, -61379);

        i5 = 223;
        while (--i5 > 0) {
            try {
                Test0684.iFld = (i5 / iArr1[i5]);
                Test0684.iFld = (Test0684.iFld / -171);
                iArr1[i5 + 1] = (Test0684.iFld % 1985943503);
            } catch (ArithmeticException a_e) {
            }
            for (i6 = i5; i6 < 7; ++i6) {
                short s1 = 21413;
                i7 &= (by + ((--iArr1[i5 + 1]) - (i7 - by)));
                vMeth(s1, Test0684.fFld);
                Test0684.fFld += ((long) i6 | (long) Test0684.fFld);
                for (i18 = i6; i18 < 1; ++i18) {
                    if (i6 != 0) {
                    }
                    Test0684.instanceCount >>= Test0684.iFld1;
                    Test0684.instanceCount = i6;
                    switch ((i18 % 7) + 88) {
                        case 88:
                            try {
                                Test0684.iFld = (55682 / Test0684.iArrFld[i5]);
                                Test0684.iArrFld[i5 + 1] = (i7 % Test0684.iFld);
                                Test0684.iFld = (Test0684.iFld1 / i18);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 89:
                            Test0684.iFld += i18;
                            Test0684.iFld >>= i19;
                            Test0684.fFld += Test0684.instanceCount;
                            break;
                        case 90:
                            Test0684.iFld1 += (int) (-6796592979358667567L + (i18 * i18));
                        case 91:
                            Test0684.instanceCount += -188;
                        case 92:
                            i19 *= i18;
                            break;
                        case 93:
                        case 94:
                            Test0684.iArrFld[i18] = i5;
                            break;
                    }
                }
            }
        }
        long meth_res = i5 + i6 + i7 + by + i18 + i19 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0684 _instance = new Test0684();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -3508;
        int i1 = -43;
        int i3 = -103;
        int i4 = 26;
        int i20 = -180;
        int i21 = 160;
        int i22 = -56131;
        int i23 = -7;
        int i24 = 164;
        int i25 = -38;
        int i26 = 0;
        int[] iArr = new
                int[N];
        double d3 = -2.46180;
        short s2 = 20239, s3 = 3701;
        long[] lArr1 = new long[N];
        byte[][] byArr = new byte[N][N];
        boolean[][] bArr = new boolean[N][N];

        FuzzerUtils.init(iArr, -9);
        FuzzerUtils.init(lArr1, 188L);
        FuzzerUtils.init(byArr, (byte) -8);
        FuzzerUtils.init(bArr, false);

        i ^= (int) Math.abs(Test0684.instanceCount--);
        i1 = 1;
        do {
            i <<= i1;
        } while (++i1 < 366);
        i >>>= (int) Test0684.instanceCount;
        for (i3 = 11; i3 < 334; ++i3) {
            i4 = (int) (((Test0684.instanceCount - Test0684.instanceCount) >> iMeth()) + -18.59985);
            Test0684.instanceCount += i;
            Test0684.iFld1 += (i3 * i3);
            d3 -= Test0684.iFld;
            for (i20 = 4; i20 < 78; i20 += 3) {
                Test0684.iArrFld[i20] *= -10;
                Test0684.fFld = s2;
                Test0684.fFld += 3;
                Test0684.bFld = Test0684.bFld;
                Test0684.iFld = 72;
                Test0684.iFld = (int) Test0684.instanceCount;
                Test0684.instanceCount += s3;
            }
            Test0684.instanceCount >>>= -13L;
        }
        Test0684.instanceCount |= Test0684.iFld;
        i21 += (int) Test0684.instanceCount;
        i22 = 1;
        while (++i22 < 270) {
            lArr1[i22] = Test0684.iFld1;
            for (i23 = 93; i23 > 3; i23 -= 3) {
                Test0684.iFld -= i20;
                byArr[i23][i22 - 1] = (byte) -841644099L;
                for (i25 = 1; i25 < 4; i25++) {
                    bArr[i22 + 1][i23] = Test0684.bFld;
                    i24 %= (int) ((long) (Test0684.fFld) | 1);
                }
                Test0684.iFld >>= (int) Test0684.instanceCount;
                i21 = i26;
            }
        }

        FuzzerUtils.out.println("i i1 i3 = " + i + "," + i1 + "," + i3);
        FuzzerUtils.out.println("i4 d3 i20 = " + i4 + "," + Double.doubleToLongBits(d3) + "," + i20);
        FuzzerUtils.out.println("i21 s2 s3 = " + i21 + "," + s2 + "," + s3);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 iArr = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr1 byArr bArr = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(byArr)
                + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0684.instanceCount Test0684.iFld Test0684.iFld1 = " + Test0684.instanceCount + "," + Test0684.iFld +
                "," + Test0684.iFld1);
        FuzzerUtils.out.println("Test0684.bFld Test0684.fFld Test0684.iArrFld = " + (Test0684.bFld ? 1 : 0) + "," +
                Float.floatToIntBits(Test0684.fFld) + "," + FuzzerUtils.checkSum(Test0684.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
