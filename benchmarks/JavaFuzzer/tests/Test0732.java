// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0732 {

    public static final int N = 400;

    public static long instanceCount = -4465915950028842746L;
    public static double[] dArrFld = new double[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0732.dArrFld, 5.38550);
    }

    public int[] iArrFld = new int[N];
    public volatile boolean[] bArrFld = new boolean[N];

    public static void vMeth1(int i8) {

        double d = -107.18524, d1 = -86.75466;
        int i9 = -10733, i10 = 3, i11 = -33754, i12 = 7, i13 = 0, i14 = -197;
        float f1 = 0.380F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 4086808568L);

        for (d = 280; d > 13; d--) {
            f1 += 140;
            for (i10 = (int) (d); 6 > i10; ++i10) {
                for (i12 = 1; 1 > i12; i12 += 3) {
                    d1 = i9;
                    f1 = Test0732.instanceCount;
                    i9 += i12;
                }
            }
            i14 = 6;
            do {
                byte by1 = 8;
                switch (((i13 >>> 1) % 5) + 63) {
                    case 63:
                        f1 += ((long) i14 | (long) i12);
                        break;
                    case 64:
                        lArr[i14] = (long) d1;
                        i11 += (i14 | i12);
                        by1 |= (byte) Test0732.instanceCount;
                        i9 = by1;
                        break;
                    case 65:
                        i8 = -65342;
                    case 66:
                        i11 = i11;
                    case 67:
                        Test0732.instanceCount = i14;
                }
            } while (--i14 > 0);
        }
        vMeth1_check_sum += i8 + Double.doubleToLongBits(d) + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 +
                Double.doubleToLongBits(d1) + i14 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(byte by, float f, int i7) {

        int i15 = 7;
        int i16 = 86;
        int i17 = 5;
        int i18 = 1;
        int i19 = 8;
        int i20 = 8;
        int i21 = 217;
        int[][] iArr = new int[N][N];
        double d2 = 0.11553;
        long[] lArr1 = new long[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(lArr1, -1548086106L);
        FuzzerUtils.init(fArr, 106.752F);
        FuzzerUtils.init(iArr, -16570);

        vMeth1(i15);
        i7 = -190;
        i15 += (int) f;
        switch (((i7 >>> 1) % 9) + 67) {
            case 67:
                for (i16 = 7; i16 < 194; i16++) {
                    i17 += i7;
                    i15 = -254;
                    lArr1[i16] += i15;
                    i15 += i7;
                }
            case 68:
                i15 += (int) -8355815363801188847L;
                break;
            case 69:
                fArr[(i17 >>> 1) % N] += i15;
                for (i18 = 1; i18 < 125; ++i18) {
                    for (i20 = 1; i20 < 13; i20++) {
                        Test0732.instanceCount = i20;
                        i19 |= -15;
                    }
                }
                break;
            case 70:
                d2 -= i21;
                break;
            case 71:
                i21 <<= i15;
                break;
            case 72:
                f = i16;
                break;
            case 73:
                Test0732.instanceCount += i19;
            case 74:
                iArr[(i15 >>> 1) % N][(i20 >>> 1) % N] = i7;
                break;
            case 75:
                i17 <<= i15;
        }
        long meth_res = by + Float.floatToIntBits(f) + i7 + i15 + i16 + i17 + i18 + i19 + i20 + i21 +
                Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(long l, long l1) {

        int i4 = 59;
        int i5 = -13;
        int i6 = 1;
        int i22 = 7;
        int i23 = 59801;
        int[] iArr1 = new int[N];
        byte by2 = -98;
        float f2 = 112.454F;
        double d3 = 43.73836;
        long[] lArr2 = new long[N];

        FuzzerUtils.init(lArr2, -30954L);
        FuzzerUtils.init(iArr1, 11);

        for (i4 = 8; i4 < 140; i4++) {
            i5 += (int) (16.305F + (i4 * i4));
            i6 = 1;
            do {
                l1 = Integer.reverseBytes(i5);
                i5 |= iMeth(by2, 101.69F, 3);
                i5 -= i4;
                Test0732.dArrFld[i6] += -132;
            } while (++i6 < 12);
            i5 = (int) f2;
            for (i22 = 1; i22 < 12; ++i22) {
                i5 += i22;
                switch ((i22 % 5) + 50) {
                    case 50:
                        l1 += i4;
                        i5 -= i6;
                        break;
                    case 51:
                        i23 = 50833;
                        lArr2[i4 - 1] |= l1;
                        break;
                    case 52:
                        i23 += i22;
                        break;
                    case 53:
                        d3 = by2;
                    case 54:
                        iArr1[i22] >>= 105;
                        break;
                }
            }
        }
        vMeth_check_sum += l + l1 + i4 + i5 + i6 + by2 + Float.floatToIntBits(f2) + i22 + i23 +
                Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(lArr2) + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0732 _instance = new Test0732();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -2, i1 = -4, i2 = -229, i3 = 34048, i24 = 39818, i25 = 29834, i26 = 10, i27 = 7614, i28 = 7;
        byte by3 = -23;
        float f3 = -1.63F;
        short s = 10245;
        boolean b = false;

        for (i = 4; i < 331; i++) {
            for (i2 = 77; i2 > 3; --i2) {
                vMeth(Test0732.instanceCount, Test0732.instanceCount);
                by3 = (byte) i3;
                f3 = i2;
                i3 += i3;
                i1 = i1;
                iArrFld[i] = -9;
                switch (((i % 1) * 5) + 5) {
                    case 7:
                        i1 += (i2 | (long) f3);
                        for (i24 = 1; 2 > i24; i24++) {
                            i3 += i24;
                            i25 = (int) Test0732.instanceCount;
                            s &= (short) i25;
                        }
                        break;
                }
            }
            switch (((i24 >>> 1) % 2) + 2) {
                case 2:
                    bArrFld[i] = b;
                    i25 += i3;
                    for (i26 = 77; i26 > i; i26 -= 3) {
                        i28 = 1;
                        while (++i28 < 1) {
                            i27 -= (int) 51862L;
                            i25 -= (int) f3;
                            i27 -= i25;
                            i27 += (i28 + i28);
                            Test0732.instanceCount += (i28 * i28);
                            s *= s;
                            try {
                                i25 = (i3 / 189);
                                i27 = (i27 % i28);
                                i1 = (i % 181);
                            } catch (ArithmeticException a_e) {
                            }
                            f3 += i28;
                            if (b) break;
                            i3 += (0 + (i28 * i28));
                        }
                        iArrFld[i] *= -231;
                    }
                case 3:
                    i25 *= i26;
                    break;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 by3 f3 = " + i3 + "," + by3 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i24 i25 s = " + i24 + "," + i25 + "," + s);
        FuzzerUtils.out.println("b i26 i27 = " + (b ? 1 : 0) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 = " + i28);

        FuzzerUtils.out.println("Test0732.instanceCount Test0732.dArrFld iArrFld = " + Test0732.instanceCount + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0732.dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("bArrFld = " + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
