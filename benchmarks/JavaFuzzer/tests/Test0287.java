// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0287 {

    public static final int N = 400;

    public static long instanceCount = -26478L;
    public static float fFld = -2.896F;
    public static boolean bFld = true;
    public static long lFld = 0L;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public int iFld = 36936;
    public volatile short sFld = -31170;

    public static int iMeth1() {

        int i3 = -71;
        int i4 = 43125;
        int i5 = 10;
        int i6 = 1752;
        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, -14982);

        i3 = 1;
        do {
            iArr[i3] += (int) Test0287.instanceCount;
            for (i4 = i3; 6 > i4; i4 += 3) {
                iArr[i4 + 1] = i5;
                i5 += 9;
                i6 = 1;
                do {
                    i5 = (int) Test0287.instanceCount;
                    i5 += i6;
                    Test0287.fFld += i6;
                    if (Test0287.bFld) continue;
                    i5 += i6;
                    i5 += i4;
                } while (++i6 < 1);
                iArr[i4 - 1] *= (int) 34.86F;
                i5 -= i4;
                iArr[i4 - 1] = i5;
            }
        } while (++i3 < 279);
        long meth_res = i3 + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i1, short s, int i2) {

        int i7 = -10;
        int i8 = 8;
        int i9 = 46;
        int i10 = -179;
        int i11 = -39100;
        int[] iArr1 = new int[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -33.913F);
        FuzzerUtils.init(iArr1, -6);

        fArr[(i2 >>> 1) % N] -= (Test0287.fFld += iMeth1());
        Test0287.instanceCount = i1;
        i2 += (int) Test0287.fFld;
        for (i7 = 6; 243 > i7; ++i7) {
            i8 += (i7 | i8);
            if (i7 != 0) {
                vMeth_check_sum += i1 + s + i2 + i7 + i8 + i9 + i10 + i11 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
                return;
            }
            i8 += (((i7 * i1) + i7) - i9);
            Test0287.fFld *= i9;
            fArr[i7 + 1] = i8;
            iArr1[i7] = i7;
        }
        for (i10 = 15; i10 < 303; i10++) {
            switch (((i10 % 3) * 5) + 12) {
                case 26:
                    Test0287.instanceCount -= i8;
                    i11 = i9;
                    i8 = i10;
                    break;
                case 21:
                    if (Test0287.bFld) break;
                    break;
                case 24:
                    iArr1[i10 + 1] >>= i9;
                default:
                    iArr1[i10 + 1] += i9;
            }
        }
        vMeth_check_sum += i1 + s + i2 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))
                + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i) {

        short s1 = -7691;
        int i13 = 9, i14 = -36862, i15 = 157, i16 = 131;

        vMeth(i, s1, i);
        i = i;
        for (i13 = 18; i13 < 373; i13 += 3) {
            s1 += (short) Test0287.lFld;
            i14 *= -33;
            for (i15 = i13; i15 < 13; ++i15) {
                Test0287.instanceCount += (i15 - Test0287.fFld);
                i16 ^= (int) Test0287.lFld;
                if (i16 != 0) {
                }
                i = i14;
            }
            Test0287.lFld += (((i13 * i13) + i) - i13);
        }
        long meth_res = i + s1 + i13 + i14 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0287 _instance = new Test0287();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d = -2.113329;
        byte by = -17;
        int i17 = 7;
        int i18 = 11;
        int i20 = 15361;
        int i21 = 7;
        int i22 = 3031;
        int i23 = -5970;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, 54642);

        d *= (((iFld * Test0287.instanceCount) - (by + Test0287.fFld)) - d);
        iMeth(iFld);
        for (i17 = 3; i17 < 193; i17++) {
            i18 -= iFld;
            i18 = (int) d;
            switch ((i17 % 4) + 54) {
                case 54:
                    i18 += i17;
                    break;
                case 55:
                    try {
                        i18 = (-89 / i18);
                        iArr2[i17 - 1] = (-499852871 / i18);
                        iFld = (i17 / iArr2[i17]);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 56:
                    if (Test0287.bFld) {
                        Test0287.fFld -= i17;
                        i20 = 132;
                        do {
                            i18 += i20;
                            iFld = (int) Test0287.lFld;
                            sFld += (short) (((i20 * i18) + Test0287.lFld) - i17);
                            d = Test0287.fFld;
                            sFld = (short) i17;
                            if (Test0287.bFld) break;
                            Test0287.lFld += (180 + (i20 * i20));
                            iArr2[i17] = (int) Test0287.instanceCount;
                        } while (--i20 > 0);
                    } else {
                        i18 += (i17 ^ i17);
                        i21 = 1;
                        do {
                            iArr2[i21 - 1] += sFld;
                            Test0287.bFld = Test0287.bFld;
                            for (i22 = 1; 1 > i22; i22++) {
                                iFld = i18;
                                i23 += (32305 + (i22 * i22));
                                i23 += (i22 * i23);
                                iFld = (int) Test0287.fFld;
                            }
                            sFld += (short) (i21 * i21);
                            i23 -= (int) Test0287.instanceCount;
                        } while (++i21 < 132);
                    }
                    break;
                case 57:
                    Test0287.instanceCount += (((i17 * i22) + i20) - Test0287.lFld);
                    break;
                default:
                    i23 = i17;
            }
        }

        FuzzerUtils.out.println("d by i17 = " + Double.doubleToLongBits(d) + "," + by + "," + i17);
        FuzzerUtils.out.println("i18 i20 i21 = " + i18 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 iArr2 = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0287.instanceCount iFld Test0287.fFld = " + Test0287.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0287.fFld));
        FuzzerUtils.out.println("Test0287.bFld Test0287.lFld sFld = " + (Test0287.bFld ? 1 : 0) + "," + Test0287.lFld + "," + sFld);

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
