// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0827 {

    public static final int N = 400;

    public static long instanceCount = 2064L;
    public static short sFld = -30413;
    public static float fFld = 0.542F;
    public static volatile short[][] sArrFld = new short[N][N];
    public static volatile float[] fArrFld = new float[N];
    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0827.sArrFld, (short) -4056);
        FuzzerUtils.init(Test0827.fArrFld, -1.93F);
    }

    public double dFld = 110.15388;
    public int iFld = -104;

    public static void vMeth1() {

        int i3 = 16;
        int i4 = -5026;
        int i5 = 64079;
        int i6 = 5373;
        int i7 = 13;
        int i8 = 17663;
        int[] iArr = new int[N];
        float f = 0.935F;
        double d = 0.51303;

        FuzzerUtils.init(iArr, -14);

        switch ((((248 >>> 1) % 9) * 5) + 108) {
            case 142:
                for (i3 = 1; i3 < 205; ++i3) {
                    for (i5 = i3; 8 > i5; ++i5) {
                        i4 -= (int) 2.97608;
                        Test0827.sArrFld[i5][i5] *= (short) i6;
                        i4 -= 2645;
                        Test0827.fArrFld[i3 + 1] *= i6;
                        i4 = i6;
                    }
                    for (i7 = 1; i7 < 8; ++i7) {
                        int i9 = -86;
                        iArr[i7 + 1] *= i8;
                        i6 = i3;
                        if (i9 != 0) {
                            vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) +
                                    Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        i8 += (((i7 * i9) + i4) - Test0827.instanceCount);
                        Test0827.instanceCount <<= i3;
                        f = i7;
                    }
                }
                break;
            case 121:
                i4 <<= i8;
                break;
            case 143:
                iArr[(i4 >>> 1) % N] <<= (int) Test0827.instanceCount;
                break;
            case 150:
                i4 += i3;
            case 110:
                i8 = (int) Test0827.instanceCount;
                break;
            case 146:
                i8 &= 65454;
                break;
            case 137:
            case 114:
                i4 += -9;
            case 148:
                d *= Test0827.instanceCount;
                break;
            default:
                i8 += i7;
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i1, int i2) {


        vMeth1();
        vMeth_check_sum += i1 + i2;
    }

    public static void vSmallMeth(short s, int i) {


        vMeth(i, i);
        vSmallMeth_check_sum += s + i;
    }

    public static void main(String[] strArr) {

        try {
            Test0827 _instance = new Test0827();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i10 = 2;
        int i11 = 42;
        int i12 = 16925;
        int i13 = 12;
        int i14 = -6020;
        int[] iArr1 = new int[N];
        byte by = -68;
        boolean b = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, -140);
        FuzzerUtils.init(lArr, -5498307046958750086L);

        for (int smallinvoc = 0; smallinvoc < 437; smallinvoc++) vSmallMeth(Test0827.sFld, i10);
        for (i11 = 8; i11 < 168; i11++) {
            for (i13 = 157; i13 > 1; --i13) {
                i10 += i13;
                Test0827.fFld = -6041;
                i14 += i14;
                switch (((i11 % 5) * 5) + 43) {
                    case 48:
                        Test0827.instanceCount = i13;
                        if (b) {
                            switch ((((i12 >>> 1) % 2) * 5) + 106) {
                                case 115:
                                    Test0827.fArrFld = Test0827.fArrFld;
                                    break;
                                case 113:
                                    i10 = (int) Test0827.instanceCount;
                                    i12 *= i13;
                                default:
                                    Test0827.instanceCount += (((i13 * Test0827.instanceCount) + i13) - i14);
                                    iArr1[i13] += (int) Test0827.instanceCount;
                            }
                            i12 &= (int) Test0827.instanceCount;
                            by = (byte) -201;
                            i12 += (((i13 * i14) + i10) - Test0827.instanceCount);
                        } else if (b) {
                            Test0827.instanceCount += (i13 * i13);
                        }
                        by += (byte) -115;
                        i14 = (int) Test0827.instanceCount;
                        break;
                    case 51:
                        lArr[i13 - 1] >>= -85;
                        i12 = (int) Test0827.instanceCount;
                        i14 |= i14;
                        break;
                    case 45:
                        Test0827.fFld = Test0827.fFld;
                        dFld = i10;
                        if (b) {
                            i10 += i14;
                            dFld = by;
                            Test0827.instanceCount -= i11;
                        } else if (true) {
                            i14 += iFld;
                        } else {
                            i12 = i11;
                        }
                        break;
                    case 67:
                        i10 -= (int) 101L;
                    case 59:
                        Test0827.instanceCount <<= i12;
                        break;
                    default:
                        Test0827.sFld >>= (short) i12;
                }
            }
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 by = " + i13 + "," + i14 + "," + by);
        FuzzerUtils.out.println("b iArr1 lArr = " + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr1) + "," +
                FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0827.instanceCount Test0827.sFld Test0827.fFld = " + Test0827.instanceCount + "," + Test0827.sFld +
                "," + Float.floatToIntBits(Test0827.fFld));
        FuzzerUtils.out.println("dFld iFld Test0827.sArrFld = " + Double.doubleToLongBits(dFld) + "," + iFld + "," +
                FuzzerUtils.checkSum(Test0827.sArrFld));
        FuzzerUtils.out.println("Test0827.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0827.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
