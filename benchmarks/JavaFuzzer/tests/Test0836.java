// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0836 {

    public static final int N = 400;

    public static long instanceCount = 2L;
    public static volatile byte byFld = 117;
    public static volatile short sFld = -19588;
    public static float fFld = -1.863F;
    public static int[] iArrFld = new int[N];
    public static byte[] byArrFld = new byte[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0836.iArrFld, 59020);
        FuzzerUtils.init(Test0836.byArrFld, (byte) 85);
    }

    public volatile int iFld = -8106;
    public boolean bFld = false;
    public short[] sArrFld = new short[N];

    public static void vMeth() {

        int i4 = 19741, i5 = 6, i6 = -88, i7 = -7, i8 = 4;
        float f = -43.43F;

        for (i4 = 9; i4 < 158; i4++) {
            Test0836.byArrFld = FuzzerUtils.byte1array(N, (byte) -78);
            i5 += (int) Test0836.instanceCount;
            i6 = 1;
            while (++i6 < 11) {
                Test0836.instanceCount <<= 61420;
                i5 += i4;
                for (i7 = 1; 1 < i7; --i7) {
                    Test0836.instanceCount = 2;
                    i5 += (int) f;
                    Test0836.sFld += (short) (((i7 * i7) + f) - i4);
                    i5 = (int) -9054472118783161936L;
                    Test0836.byFld += (byte) i7;
                    i8 += (i7 ^ i7);
                    i8 += (int) Test0836.instanceCount;
                    Test0836.instanceCount += i6;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f);
    }

    public static void main(String[] strArr) {

        try {
            Test0836 _instance = new Test0836();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth1() {

        boolean b = false;
        int i9 = -27014, i10 = 146, i11 = 8;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 40L);

        for (int i3 : Test0836.iArrFld) {
            vMeth();
            switch (((iFld >>> 1) % 1) + 23) {
                case 23:
                    if (b) break;
                    break;
            }
            iFld <<= (int) Test0836.instanceCount;
            lArr[(i3 >>> 1) % N] = i3;
            for (i9 = 4; i9 > 1; i9 -= 2) {
                sArrFld[i9] = (short) iFld;
                switch ((i9 % 2) + 67) {
                    case 67:
                        lArr[i9] -= i3;
                        Test0836.instanceCount = Test0836.instanceCount;
                        i11 = 1;
                        do {
                            i10 = iFld;
                            Test0836.instanceCount -= (long) Test0836.fFld;
                            lArr[i9] <<= i3;
                        } while (++i11 < 4);
                        break;
                    case 68:
                        iFld |= (int) Test0836.instanceCount;
                        break;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i9 + i10 + i11 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public int iMeth(long l, int i) {

        long l1 = -4092768171L;
        int i1 = 5;
        int i2 = 53166;
        int i12 = 12004;
        int i13 = 36637;
        int[] iArr = new int[N];
        double d = -1.35451;

        FuzzerUtils.init(iArr, 171);

        for (l1 = 6; l1 < 187; ++l1) {
            for (d = l1; d < 9; d++) {
                i = (--iArr[(int) (d - 1)]);
                i1 |= Math.min(i1, Integer.reverseBytes(Test0836.byFld + i1));
            }
            Test0836.instanceCount &= (-iMeth1());
            switch ((int) ((l1 % 3) + 5)) {
                case 5:
                    Test0836.sFld >>= (short) -3;
                    for (i12 = 9; i12 > l1; i12 -= 2) {
                        l = Test0836.byFld;
                        Test0836.fFld *= Test0836.byFld;
                    }
                    break;
                case 6:
                    Test0836.sFld += (short) l1;
                    if (bFld) {
                        iFld = (int) d;
                        i13 &= i2;
                    }
                    i1 += (int) l1;
                    break;
                case 7:
                    l += (l1 ^ i12);
            }
        }
        long meth_res = l + i + l1 + i1 + Double.doubleToLongBits(d) + i2 + i12 + i13 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14 = -50215, i15 = -58609, i16 = -11, i17 = -16243, i18 = -248, i19 = -75;
        double d1 = 1.68091, d2 = -2.49308;

        iFld -= (int) (((iFld - Test0836.instanceCount) - (-5 * (++iFld))) * (iFld * (iFld - 22474L)));
        iFld -= Integer.reverseBytes(Integer.reverseBytes(Test0836.byFld + iFld));
        Test0836.instanceCount >>= iMeth(Test0836.instanceCount, iFld);
        iFld >>= iFld;
        i14 = 235;
        do {
            Test0836.instanceCount = i14;
            for (i15 = i14; i15 < 107; i15++) {
                Test0836.iArrFld[i15 - 1] += i16;
                iFld += i15;
                Test0836.iArrFld[i14 + 1] += i14;
                switch ((i15 % 1) + 89) {
                    case 89:
                        i16 = (int) Test0836.instanceCount;
                }
                iFld += (i15 + Test0836.instanceCount);
            }
        } while (--i14 > 0);
        i16 -= i15;
        iFld <<= (int) 911715427L;
        d1 = 242;
        while ((d1 -= 3) > 0) {
            Test0836.instanceCount -= iFld;
            i16 *= iFld;
            iFld -= i14;
        }
        Test0836.iArrFld[(-22879 >>> 1) % N] -= i16;
        for (d2 = 12; d2 < 309; d2++) {
            Test0836.instanceCount += (long) d2;
            i16 += i17;
            if (false) break;
            Test0836.instanceCount *= -95;
            Test0836.instanceCount <<= i16;
            for (i18 = 85; i18 > 3; i18 -= 2) {
                Test0836.instanceCount *= -29;
                iFld += (i18 ^ Test0836.instanceCount);
                i19 += (int) (2.372F + (i18 * i18));
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("d1 d2 i17 = " + Double.doubleToLongBits(d1) + "," + Double.doubleToLongBits(d2) + ","
                + i17);
        FuzzerUtils.out.println("i18 i19 = " + i18 + "," + i19);

        FuzzerUtils.out.println("Test0836.instanceCount iFld Test0836.byFld = " + Test0836.instanceCount + "," + iFld + "," +
                Test0836.byFld);
        FuzzerUtils.out.println("Test0836.sFld Test0836.fFld bFld = " + Test0836.sFld + "," + Float.floatToIntBits(Test0836.fFld) + ","
                + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0836.iArrFld Test0836.byArrFld sArrFld = " + FuzzerUtils.checkSum(Test0836.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0836.byArrFld) + "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
