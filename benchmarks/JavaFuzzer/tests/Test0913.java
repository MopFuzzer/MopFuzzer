// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0913 {

    public static final int N = 400;

    public static long instanceCount = 1L;
    public static byte byFld = 87;
    public static boolean bFld = false;
    public static double dFld = 0.94881;
    public static int iFld = -19639;
    public static short sFld = -721;
    public static double[] dArrFld = new double[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0913.dArrFld, 1.3406);
    }

    public static long lMeth(int i5) {

        int i6 = -10, i7 = -49204;
        float f = 110.975F;
        double d = 104.100962;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, -1L);

        for (i6 = 9; i6 < 287; ++i6) {
            lArr[i6 - 1] = lArr[i6];
            i5 -= (int) f;
            d += i6;
            f -= i7;
            if (Test0913.bFld) {
                i7 = (int) Test0913.instanceCount;
            }
            switch (((i6 % 1) * 5) + 123) {
                case 124:
                    i7 += (((i6 * i7) + f) - i5);
                    i7 += i5;
                    break;
                default:
                    Test0913.instanceCount *= i7;
                    switch (((i6 % 2) * 5) + 92) {
                        case 102:
                            f = i6;
                        case 96:
                            i7 &= i6;
                            i7 -= (int) -12.50558;
                            break;
                        default:
                            f += i5;
                    }
            }
        }
        long meth_res = i5 + i6 + i7 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) +
                FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth() {

        int i4 = 51960;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, -175);

        Test0913.instanceCount -= i4;
        i4 = Math.abs(i4 + (i4 - -50202));
        Test0913.byFld += (byte) (((i4 + -2.653F) + Math.min(13, i4)) * ((iArr1[(i4 >>> 1) % N]++) * lMeth(i4)));
        Test0913.dFld -= Test0913.dFld;
        Test0913.iFld = Test0913.iFld;
        Test0913.iFld = -12;
        Test0913.iFld <<= i4;
        long meth_res = i4 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(long l, int i1) {

        long l1 = -2511524045411463150L;
        int i2 = 15, i3 = 181, i8 = -61539, i9 = 38, i10 = 151;
        float f1 = 2.797F;
        float[][] fArr = new float[N][N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(fArr, -2.181F);
        FuzzerUtils.init(bArr, false);

        Test0913.byFld <<= (byte) l1;
        for (i2 = 8; i2 < 145; ++i2) {
            i3 -= iMeth();
            f1 *= Test0913.iFld;
            for (i8 = 1; i8 < 11; ++i8) {
                if (Test0913.bFld) break;
                i1 = (int) -88.234F;
                i10 = 2;
                while (--i10 > 0) {
                    l <<= l1;
                    if (Test0913.bFld) continue;
                    Test0913.bFld = Test0913.bFld;
                    fArr[i10][i2 - 1] = i9;
                    i9 = (int) f1;
                    bArr = bArr;
                }
                i9 = (int) l1;
            }
        }
        vMeth_check_sum += l + i1 + l1 + i2 + i3 + Float.floatToIntBits(f1) + i8 + i9 + i10 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0913 _instance = new Test0913();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -55003;
        int i11 = -13;
        int i12 = 7;
        int i13 = -1;
        int i14 = 244;
        int i15 = 15121;
        int i16 = 1570;
        int i17 = -9;
        int i18 = 48875;
        int i19 = 13;
        int[] iArr = new
                int[N];
        long l2 = -2356434158L;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(lArr1, -4217529658869356266L);

        iArr[(i >>> 1) % N] = Math.max(iArr[(i >>> 1) % N], Math.min(--i, 228));
        vMeth(Test0913.instanceCount, i);
        i &= i;
        i11 = 1;
        while (++i11 < 147) {
            for (i12 = 7; i12 < 171; ++i12) {
                i += i14;
                i15 = 1;
                while (++i15 < 2) {
                    Test0913.dArrFld[i11] *= 2158261679L;
                }
                Test0913.dArrFld[i12 - 1] = Test0913.instanceCount;
                Test0913.sFld += (short) (((i12 * i12) + i13) - i);
                iArr[i12 + 1] += Test0913.iFld;
                Test0913.sFld += (short) (i12 ^ i12);
                i >>= i13;
                i16 = 1;
                while (++i16 < 2) {
                    i += 0;
                    Test0913.dArrFld[i16] -= 0.140F;
                    iArr[i12] -= 12;
                    Test0913.instanceCount += 54;
                    Test0913.instanceCount -= (long) 1.934F;
                }
            }
            Test0913.byFld <<= (byte) i;
            l2 = 1;
            do {
                i13 += (int) -9.290F;
                for (i17 = (int) (l2); 1 > i17; i17++) {
                    Test0913.instanceCount = i;
                    Test0913.byFld = (byte) l2;
                    i13 = (int) Test0913.instanceCount;
                    lArr1[i11 + 1] += i13;
                    Test0913.dFld += -11L;
                    i18 -= i19;
                    Test0913.instanceCount -= (long) Test0913.dFld;
                }
            } while (++l2 < 171);
        }

        FuzzerUtils.out.println("i i11 i12 = " + i + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 l2 i17 = " + i16 + "," + l2 + "," + i17);
        FuzzerUtils.out.println("i18 i19 iArr = " + i18 + "," + i19 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0913.instanceCount Test0913.byFld Test0913.bFld = " + Test0913.instanceCount + "," + Test0913.byFld +
                "," + (Test0913.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0913.dFld Test0913.iFld Test0913.sFld = " + Double.doubleToLongBits(Test0913.dFld) + "," +
                Test0913.iFld + "," + Test0913.sFld);
        FuzzerUtils.out.println("Test0913.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0913.dArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
