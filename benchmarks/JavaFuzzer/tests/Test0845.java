// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0845 {

    public static final int N = 400;

    public static long instanceCount = -36885L;
    public static int iFld = 14;
    public static short sFld = 31253;
    public static boolean bFld = false;
    public static double dFld = 72.7347;
    public static volatile int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0845.iArrFld, 208);
        FuzzerUtils.init(Test0845.lArrFld, 2497747247L);
    }

    public static void vMeth1() {

        int i = 10;
        int i1 = -189;
        int i2 = -166;
        int i3 = -14;
        int[] iArr1 = new int[N];
        boolean b = false;
        float f = -1.389F;
        float[] fArr1 = new float[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, 25923);
        FuzzerUtils.init(lArr, -457584591L);
        FuzzerUtils.init(fArr1, 5.278F);

        Test0845.iFld -= Test0845.iFld;
        i = 221;
        do {
            for (i1 = 7; i1 > i; i1--) {
                i2 *= i2;
                iArr1[i1] = -38867;
            }
            Test0845.iFld *= (int) Test0845.instanceCount;
            Test0845.iFld >>= -139;
            i2 >>= i;
            if (Test0845.iFld != 0) {
                vMeth1_check_sum += i + i1 + i2 + i3 + (b ? 1 : 0) + Float.floatToIntBits(f) +
                        FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                return;
            }
        } while (--i > 0);
        lArr[(i >>> 1) % N] -= i3;
        for (long l : lArr) {
            int i4 = -13861;
            if (b) continue;
            f += i3;
            fArr1[(-143 >>> 1) % N] *= i4;
            Test0845.iArrFld[(i3 >>> 1) % N] = i4;
        }
        vMeth1_check_sum += i + i1 + i2 + i3 + (b ? 1 : 0) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1) +
                FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static long lMeth() {

        int i5 = -157, i6 = -1517, i7 = -142, i8 = 19901, i9 = -18348;
        long l1 = 1L;
        float f1 = 0.433F;
        byte by = -18;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth1();
        for (i5 = 277; i5 > 7; i5--) {
            boolean b1 = false;
            Test0845.instanceCount += Test0845.iFld;
            for (l1 = i5; l1 < 6; l1++) {
                Test0845.iFld -= i7;
                Test0845.iFld += (-14 + (l1 * l1));
                Test0845.instanceCount -= (long) f1;
            }
            for (i8 = 1; i8 < 6; ++i8) {
                Test0845.instanceCount = Test0845.iFld;
                Test0845.iFld -= (int) f1;
                i7 += 58;
                by -= (byte) Test0845.sFld;
                by = (byte) i9;
            }
            bArr[i5] = b1;
            i7 ^= i6;
        }
        long meth_res = i5 + i6 + l1 + i7 + Float.floatToIntBits(f1) + i8 + i9 + by + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth() {

        int i10 = 43498, i11 = -22508, i12 = -165, i13 = 898, i14 = 7, i15 = -40913;
        float f2 = 53.1019F;
        float[] fArr = new float[N];
        boolean b2 = true;
        double d = -2.75886;

        FuzzerUtils.init(fArr, -68.726F);

        fArr[(Test0845.iFld >>> 1) % N] *= Test0845.iArrFld[(Test0845.iFld >>> 1) % N];
        Test0845.iFld -= (int) (Test0845.instanceCount >>= (Test0845.iFld * lMeth()));
        for (i10 = 309; i10 > 10; i10 -= 2) {
            for (i12 = i10; i12 < 11; ++i12) {
                for (i14 = 1; i14 < 1; i14++) {
                    f2 = Test0845.instanceCount;
                    Test0845.iFld = i15;
                    Test0845.instanceCount *= i13;
                    i11 = (int) Test0845.instanceCount;
                    if (b2) break;
                    Test0845.instanceCount -= i15;
                    d = Test0845.iFld;
                    if (b2) {
                        Test0845.iArrFld[i12 - 1] += i11;
                    } else {
                        Test0845.iArrFld[i12] = (int) Test0845.instanceCount;
                        vMeth_check_sum += i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) + (b2 ? 1 : 0)
                                + Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                }
            }
        }
        vMeth_check_sum += i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) + (b2 ? 1 : 0) +
                Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0845 _instance = new Test0845();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i16 = 34769;
        int i17 = -11;
        int i18 = 13;
        int i19 = 7;
        int i20 = 13776;
        int i21 = -117;
        int i22 = 232;
        int i23 = -186;
        int i24 = 62473;
        int i25 = 41621;
        int[] iArr = new
                int[N];
        byte by1 = 17;

        FuzzerUtils.init(iArr, 2225);

        Test0845.instanceCount >>>= ((++iArr[(Test0845.iFld >>> 1) % N]) + ((Test0845.iFld--) - (Test0845.iFld + Test0845.iFld)));
        vMeth();
        Test0845.bFld = Test0845.bFld;
        i16 = 1;
        do {
            Test0845.iFld = Test0845.iFld;
        } while (++i16 < 187);
        Test0845.iFld /= (int) (Test0845.instanceCount | 1);
        i17 = 1;
        do {
            iArr[i17] = (int) -216L;
            Test0845.iFld += (i17 * Test0845.iFld);
            Test0845.instanceCount -= 2424649133L;
            for (i18 = 4; 77 > i18; ++i18) {
                Test0845.instanceCount = i18;
                for (i20 = 1; 2 > i20; ++i20) {
                    Test0845.iFld = i17;
                    Test0845.sFld += (short) (((i20 * i17) + i17) - Test0845.instanceCount);
                    Test0845.instanceCount *= i16;
                    Test0845.iFld = i20;
                }
                Test0845.instanceCount -= Test0845.instanceCount;
                Test0845.sFld &= (short) 216;
                i21 &= -40;
            }
            for (i22 = 3; i22 < 77; ++i22) {
                i19 = i21;
                i21 += (int) Test0845.instanceCount;
                i21 = i22;
                if (Test0845.bFld) {
                    switch (((-58622 >>> 1) % 3) + 125) {
                        case 125:
                            Test0845.instanceCount -= i16;
                            for (i24 = 1; i24 < 2; ++i24) {
                                Test0845.instanceCount += (i24 ^ Test0845.instanceCount);
                                Test0845.lArrFld = Test0845.lArrFld;
                            }
                            break;
                        case 126:
                            Test0845.instanceCount %= ((long) (Test0845.dFld) | 1);
                            break;
                        case 127:
                            Test0845.lArrFld[i17 - 1] = i21;
                            break;
                    }
                } else if (Test0845.bFld) {
                    iArr[i22] = (int) 1830L;
                } else if (Test0845.bFld) {
                    i25 += (int) Test0845.instanceCount;
                } else {
                    Test0845.iFld = by1;
                }
            }
        } while (++i17 < 327);

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 by1 iArr = " + i25 + "," + by1 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0845.instanceCount Test0845.iFld Test0845.sFld = " + Test0845.instanceCount + "," + Test0845.iFld +
                "," + Test0845.sFld);
        FuzzerUtils.out.println("Test0845.bFld Test0845.dFld Test0845.iArrFld = " + (Test0845.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0845.dFld) + "," + FuzzerUtils.checkSum(Test0845.iArrFld));
        FuzzerUtils.out.println("Test0845.lArrFld = " + FuzzerUtils.checkSum(Test0845.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
