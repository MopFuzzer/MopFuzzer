// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0294 {

    public static final int N = 400;

    public static long instanceCount = 11L;
    public static volatile short sFld = 12138;
    public static double dFld = 0.115835;
    public static float fFld = 10.489F;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long[] lArrFld1 = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0294.iArrFld, 10);
        FuzzerUtils.init(Test0294.lArrFld, 7984965349167297688L);
        FuzzerUtils.init(Test0294.lArrFld1, 253533750791147517L);
    }

    public static void vMeth1() {

        boolean b = true;

        b = b;
        vMeth1_check_sum += (b ? 1 : 0);
    }

    public static void vMeth(int i1, long l, long l1) {


        vMeth1();
        vMeth_check_sum += i1 + l + l1;
    }

    public static long lMeth() {

        int i5 = 120, i6 = 11012, i7 = 44204, i8 = -245, i9 = -26970, i10 = -10754;
        float f1 = 1.557F;
        float[][] fArr = new float[N][N];
        byte by = -105;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -17375);
        FuzzerUtils.init(fArr, -43.223F);

        i5 = 1;
        while (++i5 < 221) {
            Test0294.sFld += (short) i5;
            for (i6 = 1; i6 < 7; i6++) {
                for (i8 = i6; i8 < 2; i8++) {
                    Test0294.iArrFld[i5 - 1] <<= i7;
                    i7 *= (int) Test0294.dFld;
                    sArr = sArr;
                    i9 += i5;
                    i7 -= i5;
                    switch ((i8 % 10) + 41) {
                        case 41:
                            f1 += i8;
                            Test0294.dFld -= Test0294.dFld;
                        case 42:
                            Test0294.iArrFld[i5] = (int) Test0294.instanceCount;
                            i9 += i8;
                            by = (byte) i10;
                        case 43:
                            by += (byte) (i8 * i8);
                            break;
                        case 44:
                            f1 -= -56712;
                            break;
                        case 45:
                            i7 -= (int) Test0294.dFld;
                            break;
                        case 46:
                            i7 = i10;
                            break;
                        case 47:
                            i7 += i8;
                            break;
                        case 48:
                            i9 = (int) -1.238F;
                            break;
                        case 49:
                            fArr[i6 - 1][i5 - 1] = -62582;
                            break;
                        case 50:
                            i9 = -43;
                            break;
                        default:
                            i10 = (int) Test0294.instanceCount;
                    }
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + by + i10 + FuzzerUtils.checkSum(sArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth2(int i4) {

        int i11 = -162, i12 = 21, i13 = 11, i14 = -102, i15 = 25470, i16 = 10, i17 = -3;
        boolean b1 = false;
        boolean[] bArr = new boolean[N];
        byte by1 = -1;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, -120.179F);
        FuzzerUtils.init(bArr, true);

        i4 >>>= (int) (Test0294.iArrFld[(i4 >>> 1) % N] + lMeth());
        for (i11 = 13; 303 > i11; i11++) {
            i12 = (int) Test0294.dFld;
        }
        i12 = (int) -9L;
        i13 = 1;
        do {
            i4 <<= (int) Test0294.instanceCount;
            Test0294.lArrFld[i13] = i12;
            i12 += i11;
            for (i14 = 1; i14 < 6; i14++) {
                fArr1[i13 + 1] -= i13;
                i15 -= (int) Test0294.instanceCount;
                i12 += (int) Test0294.instanceCount;
                for (i16 = 1; i16 < 2; ++i16) {
                    bArr[i13 - 1] = b1;
                    i17 += (((i16 * by1) + i14) - i15);
                }
            }
        } while (++i13 < 278);
        vMeth2_check_sum += i4 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + (b1 ? 1 : 0) + by1 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(bArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0294 _instance = new Test0294();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(long l2, long l3, float f) {

        int i2 = -17500, i3 = -120;
        boolean b2 = false;
        double[] dArr = new double[N];
        float[] fArr2 = new float[N];

        FuzzerUtils.init(dArr, 93.61832);
        FuzzerUtils.init(fArr2, 2.0F);

        for (i2 = 227; i2 > 12; --i2) {
            i3 -= (int) (++f);
            if (b2) {
                vMeth2(38808);
                i3 += (i2 - i3);
                dArr[i2] *= i3;
            } else {
                Test0294.lArrFld1[i2 + 1] = 10;
                i3 += i2;
                i3 = i2;
            }
            i3 += (i2 - i3);
            Test0294.sFld = (short) l2;
            dArr[i2] -= Test0294.dFld;
            Test0294.iArrFld[i2] = Test0294.sFld;
            Test0294.lArrFld = Test0294.lArrFld;
        }
        fArr2[(0 >>> 1) % N] -= i3;
        long meth_res = l2 + l3 + Float.floatToIntBits(f) + i2 + i3 + (b2 ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 9, i20 = 9, i21 = 60, i22 = -9, i23 = -34904, i24 = 13, i25 = -5;
        double d = -1.117881;
        boolean b3 = false;
        byte by2 = -13;
        float f2 = 2.653F;

        Test0294.iArrFld[(i >>> 1) % N] += i;
        vMeth((int) (((d * i) * (i = i)) + iMeth(0L, Test0294.instanceCount, Test0294.fFld)), Test0294.instanceCount, 2667978291L);
        Test0294.iArrFld[(-13 >>> 1) % N] >>= (int) Test0294.instanceCount;
        for (int i19 : Test0294.iArrFld) {
            Test0294.sFld >>>= (short) 10;
            i19 -= Test0294.sFld;
            for (i20 = 63; i20 > 3; i20--) {
                i21 = (int) Test0294.fFld;
                Test0294.dFld *= i21;
                Test0294.lArrFld1[i20] = Test0294.instanceCount;
            }
        }
        Test0294.iArrFld[(i21 >>> 1) % N] -= (int) Test0294.fFld;
        i21 = (int) -13L;
        b3 = b3;
        Test0294.instanceCount = i21;
        i21 = -26;
        for (i22 = 2; i22 < 143; i22++) {
            i24 = 1;
            while (++i24 < 178) {
                Test0294.instanceCount >>= by2;
                i23 += (i24 + i20);
                i21 = i24;
                i += i23;
                for (f2 = 1; f2 < 1; ++f2) {
                    i25 += (int) (f2 * f2);
                    Test0294.instanceCount = i24;
                    i21 = (int) Test0294.instanceCount;
                    i25 += (int) (((f2 * i) + Test0294.fFld) - f2);
                    Test0294.dFld = 40825;
                }
            }
            Test0294.instanceCount -= Test0294.instanceCount;
            Test0294.sFld = (short) i25;
            i25 = (int) -56L;
        }

        FuzzerUtils.out.println("i d i20 = " + i + "," + Double.doubleToLongBits(d) + "," + i20);
        FuzzerUtils.out.println("i21 b3 i22 = " + i21 + "," + (b3 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 i24 by2 = " + i23 + "," + i24 + "," + by2);
        FuzzerUtils.out.println("f2 i25 = " + Float.floatToIntBits(f2) + "," + i25);

        FuzzerUtils.out.println("Test0294.instanceCount Test0294.sFld Test0294.dFld = " + Test0294.instanceCount + "," + Test0294.sFld +
                "," + Double.doubleToLongBits(Test0294.dFld));
        FuzzerUtils.out.println("Test0294.fFld Test0294.iArrFld Test0294.lArrFld = " + Float.floatToIntBits(Test0294.fFld) + "," +
                FuzzerUtils.checkSum(Test0294.iArrFld) + "," + FuzzerUtils.checkSum(Test0294.lArrFld));
        FuzzerUtils.out.println("Test0294.lArrFld1 = " + FuzzerUtils.checkSum(Test0294.lArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth2 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
