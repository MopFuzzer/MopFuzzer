// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0737 {

    public static final int N = 400;

    public static long instanceCount = 71L;
    public static byte byFld = -10;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public float fFld = 49.461F;
    public volatile double dFld = 61.50314;

    public static float fMeth(int i5, boolean b) {

        long l = -4002142540L;
        int i6 = -189;
        int i7 = -56665;
        int i8 = -130;
        int i9 = 30775;
        int[] iArr1 = new int[N];
        short s = -28619;
        float f = 80.548F;
        double[] dArr1 = new double[N];

        FuzzerUtils.init(iArr1, -55299);
        FuzzerUtils.init(dArr1, 1.51829);

        for (l = 8; l < 261; l++) {
            for (i7 = 1; i7 < 6; i7++) {
                Test0737.instanceCount = i5;
                try {
                    iArr1[i7 - 1] = (i7 / -18816);
                    i6 = (i7 % -11218);
                    i6 = (32280 % iArr1[(int) (l + 1)]);
                } catch (ArithmeticException a_e) {
                }
                i9 = 1;
                do {
                    if (b) {
                        Test0737.instanceCount += -12352;
                        s += (short) i9;
                    } else if (b) {
                        i8 = -162;
                        dArr1[i9 + 1] += Test0737.instanceCount;
                        if (b) break;
                    } else if (b) {
                        b = b;
                        i5 = (int) -217L;
                        Test0737.instanceCount |= Test0737.byFld;
                        iArr1 = FuzzerUtils.int1array(N, (int) -192);
                    } else {
                        i5 *= (int) f;
                    }
                } while (++i9 < 2);
            }
        }
        long meth_res = i5 + (b ? 1 : 0) + l + i6 + i7 + i8 + i9 + s + Float.floatToIntBits(f) +
                FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth() {

        int i3 = 214, i4 = 163, i10 = -9, i11 = 8, i12 = 63856, i13 = -205;
        boolean b1 = false;
        float f1 = -14.206F;
        double d = 0.125730;

        for (i3 = 14; 397 > i3; ++i3) {
            fMeth(i4, b1);
            i4 = i4;
            Test0737.instanceCount += (2 + (i3 * i3));
            i4 *= 236;
            if (true) break;
            f1 += i3;
            for (i10 = i3; i10 < 4; i10++) {
                f1 -= 12;
                f1 = (float) d;
                if (b1) continue;
                for (i12 = 1; i12 < 1; ++i12) {
                    Test0737.instanceCount += (((i12 * f1) + i4) - i13);
                    b1 = b1;
                    f1 = (float) 0.35905;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i10 + i11 + Double.doubleToLongBits(d) +
                i12 + i13;
    }

    public static void main(String[] strArr) {

        try {
            Test0737 _instance = new Test0737();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public long lMeth() {

        int i1 = 6;
        int i2 = 56086;
        int i14 = 19406;
        int i15 = -25746;
        int[] iArr2 = new int[N];
        short s1 = -13756;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 0.119270);
        FuzzerUtils.init(iArr2, -2);

        for (i1 = 3; 225 > i1; ++i1) {
            i2 += (int) fFld;
            i2 -= i1;
            dArr = dArr;
            vMeth();
            i2 *= i2;
            i2 += i1;
            for (i14 = 1; i14 < 7; i14++) {
                i2 -= (int) Test0737.instanceCount;
                i15 <<= s1;
                i2 += (i14 + i2);
                iArr2[i14 - 1] = i1;
                iArr2[i14 - 1] = (int) Test0737.instanceCount;
            }
        }
        Test0737.instanceCount += (long) dFld;
        iArr2 = iArr2;
        long meth_res = i1 + i2 + i14 + i15 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 94;
        int i17 = -12;
        int i18 = -13;
        int i19 = -29778;
        int i20 = 109;
        int i21 = -2;
        int i22 = 173;
        int i23 = -59433;
        int[] iArr = new int[N];
        long l1 = -35L;
        long[] lArr = new long[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr, -163);
        FuzzerUtils.init(lArr, -135L);
        FuzzerUtils.init(byArr, (byte) -117);

        iArr[(i >>> 1) % N] = (int) (lMeth() * dFld);
        i17 = 137;
        while (--i17 > 0) {
            i += i17;
            for (i18 = 6; i18 < 183; ++i18) {
                i20 = 1;
                while (++i20 < 2) {
                    i19 = i20;
                    i19 += (i20 * i20);
                    i19 += i20;
                    lArr[(i17 >>> 1) % N] = Test0737.instanceCount;
                    i19 &= i18;
                    iArr[i20 + 1] = i19;
                    dFld = 12;
                    i >>= i;
                    Test0737.instanceCount += (((i20 * i19) + i18) - Test0737.instanceCount);
                    try {
                        iArr[i20] = (i19 / -622436597);
                        i = (iArr[i20] / 170);
                        i = (i18 / i);
                    } catch (ArithmeticException a_e) {
                    }
                }
                iArr[i17 + 1] = i;
                i += i18;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test0737.instanceCount = Test0737.instanceCount;
                    Test0737.instanceCount ^= i22;
                    i22 = i21;
                }
            }
            i22 = i18;
            i19 -= i22;
            i22 += (((i17 * i) + Test0737.byFld) - i17);
            iArr[i17] = i19;
        }
        i23 = 1;
        while (++i23 < 378) {
            i22 += i23;
        }
        l1 = 1;
        while (++l1 < 358) {
            Test0737.instanceCount *= Test0737.instanceCount;
        }
        byArr[(i17 >>> 1) % N] = (byte) 4;

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 l1 = " + i22 + "," + i23 + "," + l1);
        FuzzerUtils.out.println("iArr lArr byArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr) +
                "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0737.instanceCount fFld Test0737.byFld = " + Test0737.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0737.byFld);
        FuzzerUtils.out.println("dFld = " + Double.doubleToLongBits(dFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
