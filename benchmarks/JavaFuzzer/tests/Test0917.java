// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test0917 {

    public static final int N = 400;

    public static long instanceCount = 150L;
    public static volatile float fFld = 75.741F;
    public static double dFld = -59.13194;
    public static byte byFld = -122;
    public static volatile int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0917.iArrFld, 172);
    }

    public short sFld = -28812;

    public static void vMeth2(int i4, byte by, float f1) {

        int i5 = -79;
        short s = -20927;

        i5 = 1;
        while (++i5 < 167) {
            i4 += (((i5 * s) + Test0917.instanceCount) - i4);
        }
        i4 = i5;
        vMeth2_check_sum += i4 + by + Float.floatToIntBits(f1) + i5 + s;
    }

    public static void vMeth1() {

        int i6 = 225;
        int i7 = -23761;
        int i8 = 7;
        int i9 = 12;
        int i10 = -37;
        int i11 = -6;
        int i12 = -5;
        int i13 = 14;
        int[] iArr = new int[N];
        byte by1 = -33;
        long l1 = -135L;
        boolean b = false;
        double d1 = 2.11591;

        FuzzerUtils.init(iArr, -12);

        vMeth2(i6, by1, 87.986F);
        for (l1 = 11; l1 < 219; ++l1) {
            iArr = FuzzerUtils.int1array(N, (int) 246);
            iArr[(int) (l1)] += (int) -8L;
            for (i8 = (int) (l1); i8 < 8; i8++) {
                for (i10 = (int) (l1); i10 < 1; ++i10) {
                    i9 -= (int) -22001L;
                    i7 += (i10 * l1);
                    i7 += (((i10 * i6) + i7) - l1);
                }
                Test0917.instanceCount <<= i10;
                for (i12 = 1; 1 < i12; i12 -= 3) {
                    i13 += i12;
                    if (b) break;
                }
                i9 = (int) Test0917.instanceCount;
                i6 -= (int) d1;
            }
        }
        vMeth1_check_sum += i6 + by1 + l1 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) +
                Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, double d) {

        int i = -23, i1 = -14, i2 = -37424, i3 = 114;
        float f = 0.528F;
        byte by2 = 106;

        for (i = 4; i < 196; i++) {
            i1 = (int) ((--i1) / -1.68138);
            i2 = 1;
            do {
                for (f = i; f < 1; f++) {
                    vMeth1();
                    i3 -= i;
                    i1 *= 14;
                    i3 += (int) ((long) f ^ i2);
                    Test0917.iArrFld[(i2 >>> 1) % N] >>>= (int) Test0917.instanceCount;
                    i1 += (int) l;
                    i3 = i;
                    i1 &= i3;
                }
                Test0917.fFld += -234;
                d -= i3;
                i1 *= by2;
            } while (++i2 < 8);
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d) + i + i1 + i2 + Float.floatToIntBits(f) + i3 + by2;
    }

    public static void main(String[] strArr) {

        try {
            Test0917 _instance = new Test0917();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i14 = -121, i15 = -123, i16 = -58, i17 = 11, i18 = -41573, i19 = -6, i20 = 13, i21 = 90, i22 = 7, i23 = -197;
        boolean b1 = true;

        vMeth(Test0917.instanceCount, Test0917.dFld);
        for (i14 = 3; i14 < 122; i14++) {
            for (i16 = 12; 211 > i16; ++i16) {
                i15 *= (int) Test0917.instanceCount;
                for (i18 = 1; i18 < 2; i18++) {
                    i19 *= (int) 1.281F;
                    i19 = 99;
                    Test0917.dFld *= Test0917.instanceCount;
                    Test0917.instanceCount = sFld;
                    Test0917.iArrFld = Test0917.iArrFld;
                    i15 = i16;
                    i19 -= sFld;
                    Test0917.dFld -= i19;
                    Test0917.fFld += Test0917.byFld;
                    i17 = i19;
                }
                try {
                    i15 = (31517 % i15);
                    i15 = (i15 % i14);
                    i19 = (i19 % Test0917.iArrFld[i14 - 1]);
                } catch (ArithmeticException a_e) {
                }
                for (i20 = 1; 2 > i20; ++i20) {
                    sFld -= (short) i15;
                    Test0917.instanceCount += i20;
                    if (b1) break;
                    if (true) continue;
                }
                Test0917.fFld += (i16 + Test0917.instanceCount);
                for (i22 = 1; 2 > i22; i22++) {
                    Test0917.iArrFld[i14 + 1] = sFld;
                    Test0917.fFld += i22;
                    i17 -= i23;
                    i19 = i17;
                }
                i15 = 58562;
            }
            i23 += (int) Test0917.instanceCount;
            i19 += i23;
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 b1 = " + i20 + "," + i21 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i22 i23 = " + i22 + "," + i23);

        FuzzerUtils.out.println("Test0917.instanceCount Test0917.fFld Test0917.dFld = " + Test0917.instanceCount + "," +
                Float.floatToIntBits(Test0917.fFld) + "," + Double.doubleToLongBits(Test0917.dFld));
        FuzzerUtils.out.println("sFld Test0917.byFld Test0917.iArrFld = " + sFld + "," + Test0917.byFld + "," +
                FuzzerUtils.checkSum(Test0917.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
