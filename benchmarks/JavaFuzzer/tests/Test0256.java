// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0256 {

    public static final int N = 400;

    public static long instanceCount = 6417384872345591097L;
    public static long[] lArrFld = new long[N];
    public static int[][] iArrFld = new int[N][N];
    public static boolean[][] bArrFld = new boolean[N][N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0256.lArrFld, -24664L);
        FuzzerUtils.init(Test0256.iArrFld, 16492);
        FuzzerUtils.init(Test0256.bArrFld, false);
    }

    public volatile byte byFld = 74;

    public static long lMeth(int i7, float f, int i8) {

        int i9 = -199, i10 = 0, i11 = 185, i12 = -9, i13 = 1, i14 = -167;
        byte by = 45;

        for (i9 = 7; 156 > i9; ++i9) {
            for (i11 = i9; 11 > i11; i11++) {
                by >>= (byte) i7;
                i10 = i9;
                switch (((i10 >>> 1) % 1) + 11) {
                    case 11:
                        Test0256.iArrFld[i11][i9 - 1] *= (int) Test0256.instanceCount;
                        i12 &= i7;
                        break;
                    default:
                        i7 *= (int) Test0256.instanceCount;
                        for (i13 = i9; i13 < 1; i13++) {
                            Test0256.instanceCount += i13;
                            i14 -= i11;
                            Test0256.instanceCount += (i13 ^ Test0256.instanceCount);
                            Test0256.lArrFld = Test0256.lArrFld;
                        }
                        i7 += i9;
                }
                i14 += (i11 * i12);
            }
        }
        long meth_res = i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + i12 + by + i13 + i14;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth1() {

        int i2 = -3;
        int i4 = -58583;
        int i5 = -45293;
        int i6 = 50130;
        int[] iArr = new int[N];
        float f1 = -71.1013F;
        boolean b = false;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr, -18);
        FuzzerUtils.init(bArr, true);

        i2 = 1;
        do {
            int i3 = -6;
            i3 = i2;
            switch (((i2 % 2) * 5) + 36) {
                case 41:
                    i4 = 1;
                    do {
                        switch ((i2 % 2) + 111) {
                            case 111:
                                for (i5 = 1; 1 > i5; ++i5) {
                                    i6 *= iArr[i5];
                                    i3 = (int) Math.max(Test0256.instanceCount, Test0256.instanceCount);
                                    i3 >>>= (int) lMeth(i6, f1, i3);
                                    i3 += i4;
                                    f1 -= i5;
                                    Test0256.instanceCount <<= Test0256.instanceCount;
                                }
                                if (i5 != 0) {
                                    vMeth1_check_sum += i2 + i4 + i5 + i6 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
                                            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
                                    return;
                                }
                                Test0256.iArrFld[i2][i2] += i2;
                                Test0256.lArrFld[i4 + 1] /= (i5 | 1);
                            case 112:
                                bArr[i2 - 1] = b;
                            default:
                                iArr[i2] = i2;
                        }
                    } while (++i4 < 13);
                    break;
                case 46:
                    try {
                        i3 = (i4 / i5);
                        i3 = (2 % i3);
                        i3 = (i5 / 787148054);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                default:
                    i6 <<= i5;
            }
        } while (++i2 < 122);
        vMeth1_check_sum += i2 + i4 + i5 + i6 + Float.floatToIntBits(f1) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i, int i1) {

        float f2 = 1.358F;

        vMeth1();
        f2 *= 5;
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f2);
    }

    public static void main(String[] strArr) {

        try {
            Test0256 _instance = new Test0256();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i15 = 13439, i16 = 14, i17 = -2, i18 = -45, i19 = -9, i20 = -33371, i21 = 61302, i22 = 8, i23 = 1, i24 = 61972;
        float f3 = 1.611F;
        double d = 86.38123;
        boolean b1 = true;
        short s = 7535;

        vMeth(i15, i15);
        if (b1) {
            for (i16 = 2; i16 < 304; ++i16) {
                for (i18 = i16; i18 < 83; i18++) {
                    Test0256.instanceCount = i16;
                    for (i20 = 1; 1 > i20; i20++) {
                        i21 += (int) Test0256.instanceCount;
                        f3 += i20;
                    }
                    for (d = i18; d < 1; ++d) {
                        byFld += (byte) (-781215591393423295L + (d * d));
                        i22 -= (int) Test0256.instanceCount;
                        b1 = b1;
                        i17 -= i19;
                        Test0256.iArrFld[(int) (d)][(int) (d - 1)] >>= i15;
                        i17 += (int) Test0256.instanceCount;
                        Test0256.instanceCount = 26221;
                        i17 += (int) d;
                        i21 *= (int) Test0256.instanceCount;
                    }
                    byFld += (byte) i16;
                    for (i23 = 1; 1 > i23; ++i23) {
                        i24 += (int) 929060202L;
                        i17 -= s;
                        byFld ^= (byte) -5;
                        Test0256.instanceCount <<= i22;
                        i22 = -14745;
                        i22 = s;
                        switch ((i16 % 8) + 63) {
                            case 63:
                                i19 *= (int) Test0256.instanceCount;
                                Test0256.instanceCount = (long) f3;
                                break;
                            case 64:
                                Test0256.instanceCount = Test0256.instanceCount;
                                break;
                            case 65:
                            case 66:
                                Test0256.iArrFld[i16 + 1][i23 + 1] = s;
                                break;
                            case 67:
                                i22 += (int) f3;
                                break;
                            case 68:
                                i17 += (((i23 * byFld) + f3) - i17);
                                break;
                            case 69:
                                f3 = -1476;
                                break;
                            case 70:
                                Test0256.iArrFld[i16 + 1][i16] *= (int) f3;
                                break;
                        }
                    }
                }
            }
        } else if (b1) {
            i15 <<= 134;
        } else if (b1) {
            i19 -= i23;
        } else {
            Test0256.bArrFld[(i22 >>> 1) % N] = Test0256.bArrFld[(10 >>> 1) % N];
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 f3 d = " + i21 + "," + Float.floatToIntBits(f3) + "," +
                Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i22 b1 i23 = " + i22 + "," + (b1 ? 1 : 0) + "," + i23);
        FuzzerUtils.out.println("i24 s = " + i24 + "," + s);

        FuzzerUtils.out.println("Test0256.instanceCount byFld Test0256.lArrFld = " + Test0256.instanceCount + "," + byFld + "," +
                FuzzerUtils.checkSum(Test0256.lArrFld));
        FuzzerUtils.out.println("Test0256.iArrFld Test0256.bArrFld = " + FuzzerUtils.checkSum(Test0256.iArrFld) + "," +
                FuzzerUtils.checkSum(Test0256.bArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
