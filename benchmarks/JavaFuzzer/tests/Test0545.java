// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test0545 {

    public static final int N = 400;

    public static volatile long instanceCount = 115L;
    public static boolean bFld = true;
    public static short sFld = 19576;
    public static volatile byte byFld = 94;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public int iFld = 9;

    public static short sMeth(long l) {

        int i7 = 78;
        int i8 = -8;
        int i9 = -13;
        int i10 = -27;
        int i11 = 244;
        int i13 = 156;
        int[] iArr = new int[N];
        float f1 = 0.345F;
        float[] fArr = new float[N];
        short s = -19568;
        boolean[] bArr = new boolean[N];
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, 40718);
        FuzzerUtils.init(fArr, 1.907F);
        FuzzerUtils.init(lArr, 6L);

        bArr[(i7 >>> 1) % N] = Test0545.bFld;
        for (i8 = 13; 282 > i8; i8++) {
            for (i10 = i8; i10 < 6; ++i10) {
                i11 = i10;
                i11 += (((i10 * i10) + i7) - i10);
            }
            switch ((((58762 >>> 1) % 9) * 5) + 4) {
                case 33:
                    i7 -= i11;
                    break;
                case 8:
                    f1 *= i7;
                    bArr[i8] = false;
                    i11 += i8;
                    i11 >>= i9;
                    break;
                case 19:
                    i9 += (i8 - s);
                    Test0545.instanceCount *= l;
                    break;
                case 46:
                    if (Test0545.bFld) continue;
                    iArr[i8 - 1] += i10;
                    break;
                case 25:
                    i7 *= (int) Test0545.instanceCount;
                case 38:
                    Test0545.instanceCount *= Test0545.instanceCount;
                    break;
                case 6:
                    i11 *= i10;
                    break;
                case 21:
                    if (Test0545.bFld) continue;
                    break;
                case 43:
                    i13 += i11;
                    break;
                default:
                    lArr = lArr;
            }
        }
        long meth_res = l + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + s + i13 + FuzzerUtils.checkSum(bArr)
                + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                FuzzerUtils.checkSum(lArr);
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void vMeth1() {

        int i5 = -22743;
        int i6 = -3307;
        int i14 = -7661;
        int i15 = 0;
        int i16 = -36;
        int i17 = -14;
        int[] iArr1 = new int[N];
        byte by1 = -14;
        float f3 = -73.999F;
        double d = 0.5048;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 5409699147118740696L);
        FuzzerUtils.init(iArr1, -223);

        for (i5 = 7; i5 < 327; ++i5) {
            Test0545.instanceCount |= ((by1 * Math.abs(Test0545.instanceCount)) + Test0545.instanceCount);
            Test0545.instanceCount += (i5 + i6);
            if (true) {
                i6 = sMeth(Test0545.instanceCount);
            } else {
                f3 = by1;
                if (true) {
                    d -= by1;
                    for (i14 = 1; i14 < 5; ++i14) {
                        lArr1[i5] ^= Test0545.instanceCount;
                        for (i16 = 2; 1 < i16; i16 -= 3) {
                            d = i5;
                        }
                        Test0545.sFld = (short) 2598;
                        iArr1 = iArr1;
                        i6 = (int) Test0545.instanceCount;
                    }
                } else {
                    Test0545.instanceCount *= Test0545.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + by1 + Float.floatToIntBits(f3) + Double.doubleToLongBits(d) + i14 + i15 + i16 +
                i17 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i = -1;
        int i1 = -196;
        int i2 = -4;
        int i3 = -6;
        int i4 = -5;
        int[] iArr2 = new int[N];
        float f = 101.410F;
        byte by2 = -82;

        FuzzerUtils.init(iArr2, 10);

        if (Test0545.bFld) {
            i = 1;
            do {
                i1 = 1;
                while (++i1 < 7) {
                    byte by = 59;
                    i2 = 1;
                    do {
                        i3 &= 4;
                        i4 -= (int) ((1 + (i4 + i4)) - -1.103503);
                        f += (i2 + Test0545.instanceCount);
                        try {
                            i3 = (i3 / i4);
                            i4 = (i3 / 226);
                            i3 = (i3 / i1);
                        } catch (ArithmeticException a_e) {
                        }
                    } while (++i2 < 1);
                    i3 ^= (++by);
                    vMeth1();
                }
                by2 = (byte) Test0545.instanceCount;
                i4 = (int) -58L;
                iArr2[i] += i3;
                Test0545.bFld = Test0545.bFld;
                i3 -= (int) -11L;
            } while (++i < 239);
        } else {
            i3 *= i2;
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + by2 + FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0545 _instance = new Test0545();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i18 = -11, i19 = 2, i20 = -44288, i21 = -227, i22 = -98, i23 = -46028, i24 = -55382, i25 = 65, i26 = -165, i27 = 38080,
                i28 = -235;
        float f4 = 82.612F, f5 = 98.872F, f6 = 96.383F;
        double d1 = 48.12194;
        long[] lArr2 = new long[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(lArr2, -60813L);
        FuzzerUtils.init(byArr, (byte) 82);

        vMeth();
        iFld -= iFld;
        for (i18 = 13; i18 < 278; ++i18) {
            iFld = (int) Test0545.instanceCount;
        }
        for (i20 = 5; i20 < 202; ++i20) {
            i21 = i21;
            for (f4 = 5; f4 < 127; ++f4) {
                lArr2[i20 - 1] = i22;
                Test0545.instanceCount += (long) (((f4 * Test0545.byFld) + Test0545.instanceCount) - f4);
                i19 += (int) (f4 * f4);
                for (i23 = 1; i23 < 2; i23 += 3) {
                    byArr[(int) (f4)] += (byte) i21;
                    i25 = i18;
                    i22 += i22;
                }
                for (f5 = 1; f5 < 2; ++f5) {
                    d1 *= 0;
                }
                i19 >>= (int) Test0545.instanceCount;
                if (Test0545.bFld) {
                    i21 = Test0545.sFld;
                    i26 += (int) (((f4 * Test0545.instanceCount) + i18) - i25);
                    for (i27 = 1; i27 < 2; ++i27) {
                        i26 += (i27 * i27);
                    }
                    Test0545.instanceCount += i26;
                } else {
                    f6 += (f4 - i19);
                    i25 += -5960;
                    Test0545.bFld = Test0545.bFld;
                    iFld = (int) -3L;
                }
                iFld += (int) (33438L + (f4 * f4));
            }
            Test0545.byFld = (byte) 43;
            Test0545.byFld += (byte) i27;
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 f4 i22 = " + i21 + "," + Float.floatToIntBits(f4) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f5 i26 d1 = " + Float.floatToIntBits(f5) + "," + i26 + "," +
                Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i27 i28 f6 = " + i27 + "," + i28 + "," + Float.floatToIntBits(f6));
        FuzzerUtils.out.println("lArr2 byArr = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0545.instanceCount Test0545.bFld Test0545.sFld = " + Test0545.instanceCount + "," + (Test0545.bFld ? 1
                : 0) + "," + Test0545.sFld);
        FuzzerUtils.out.println("iFld Test0545.byFld = " + iFld + "," + Test0545.byFld);

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
