// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0818 {

    public static final int N = 400;

    public static long instanceCount = 106L;
    public static short sFld = 11421;
    public static byte byFld = -41;
    public static boolean bFld = true;
    public static double dFld = -38.46592;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public volatile float fFld = 95.207F;

    public static int iMeth(int i4) {

        int i5 = -14;
        int i6 = 48517;
        int i7 = -194;
        int i8 = 16;
        int i9 = 5;
        int i10 = -153;
        int i11 = -42567;
        int[][] iArr1 = new int[N][N];
        float f = -23.132F;
        boolean b2 = true;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr1, -65241);
        FuzzerUtils.init(bArr, false);

        if (b2) {
            i5 = 1;
            do {
                i4 += (int) -6961697713143364008L;
                iArr1[i5][i5] <<= i4;
                i4 = (int) Test0818.instanceCount;
                Test0818.instanceCount = 18810;
            } while (++i5 < 279);
            for (i6 = 5; i6 < 213; ++i6) {
                if (b2) {
                    Test0818.instanceCount = i4;
                    for (i8 = 1; i8 < 8; ++i8) {
                        for (i10 = 1; i10 < 2; ++i10) {
                            double d = 79.96732;
                            boolean b1 = false;
                            i7 += (i10 * f);
                            Test0818.instanceCount = (long) d;
                            bArr[(i6 >>> 1) % N] = b1;
                            Test0818.byFld += (byte) 1.15709;
                        }
                    }
                } else {
                    Test0818.instanceCount -= i11;
                }
            }
        } else {
            i7 *= (int) f;
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + (b2 ? 1 : 0) +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1() {

        int i2 = 15891, i3 = 4, i12 = -65;
        float f1 = -1.95F;
        float[] fArr = new float[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(fArr, -126.306F);
        FuzzerUtils.init(dArr, 83.82165);

        fArr = (fArr = (fArr = (fArr = fArr)));
        for (i2 = 10; i2 < 288; ++i2) {
            Test0818.byFld += (byte) (i2 * i3);
            i3 >>= (int) Test0818.instanceCount;
            i3 *= iMeth(i3);
            Test0818.bFld = Test0818.bFld;
            i3 = Test0818.byFld;
            dArr[i2 + 1] *= 54.817F;
            f1 -= i3;
            i3 *= (int) Test0818.instanceCount;
            Test0818.bFld = Test0818.bFld;
        }
        i12 *= i2;
        for (float f2 : fArr) {
            i3 = i2;
            i3 -= (int) Test0818.instanceCount;
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f1) + i12 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(boolean b) {

        int i1 = -7;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 41129L);

        i1 = (int) (lArr[(i1 >>> 1) % N] + Test0818.sFld);
        vMeth1();
        i1 = (int) Test0818.dFld;
        i1 *= Test0818.sFld;
        vMeth_check_sum += (b ? 1 : 0) + i1 + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0818 _instance = new Test0818();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -13;
        int i13 = -108;
        int i14 = -7;
        int i15 = 140;
        int i16 = 60776;
        int i17 = -1;
        int i18 = 21883;
        int[] iArr = new int[N];
        long l = -704793647L;
        double d1 = -1.112308;

        FuzzerUtils.init(iArr, 0);

        i = (iArr[(8051 >>> 1) % N]--);
        vMeth(Test0818.bFld);
        for (i13 = 7; i13 < 153; i13++) {
            Test0818.bFld = Test0818.bFld;
        }
        iArr[(i >>> 1) % N] = -64;
        i14 = i13;
        Test0818.dFld = i13;
        Test0818.sFld += (short) i14;
        for (l = 12; l < 232; l++) {
            for (d1 = 114; d1 > 5; d1 -= 3) {
                float f3 = 1.684F;
                try {
                    i = (i16 % i14);
                    i14 = (i / -252);
                    i15 = (6470 / iArr[(int) (l + 1)]);
                } catch (ArithmeticException a_e) {
                }
                i14 -= i14;
                i14 += (int) d1;
                i16 += i14;
                i15 -= i16;
                switch ((int) ((d1 % 4) + 9)) {
                    case 9:
                        i16 *= i16;
                        i15 = (int) Test0818.dFld;
                        Test0818.instanceCount += i14;
                        try {
                            iArr[(int) (d1 - 1)] = (-225 % i15);
                            i15 = (-1567092099 % iArr[(int) (l)]);
                            i16 = (i13 % i15);
                        } catch (ArithmeticException a_e) {
                        }
                        break;
                    case 10:
                        try {
                            i15 = (109 % i15);
                            i = (i16 % -35726);
                            i14 = (i15 / -39);
                        } catch (ArithmeticException a_e) {
                        }
                        i15 >>= (int) l;
                    case 11:
                        i17 = 1;
                        do {
                            i16 += (i17 | i14);
                            Test0818.byFld += (byte) i17;
                            Test0818.instanceCount += i17;
                            i14 += (int) Test0818.instanceCount;
                            if (Test0818.bFld) break;
                            Test0818.dFld = i14;
                            Test0818.instanceCount = l;
                        } while (++i17 < 4);
                        break;
                    case 12:
                        i18 += (int) (((d1 * i17) + i) - fFld);
                        break;
                    default:
                        f3 = fFld;
                }
            }
        }

        FuzzerUtils.out.println("i i13 i14 = " + i + "," + i13 + "," + i14);
        FuzzerUtils.out.println("l i15 d1 = " + l + "," + i15 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0818.instanceCount Test0818.sFld Test0818.byFld = " + Test0818.instanceCount + "," + Test0818.sFld +
                "," + Test0818.byFld);
        FuzzerUtils.out.println("Test0818.bFld Test0818.dFld fFld = " + (Test0818.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(Test0818.dFld) + "," + Float.floatToIntBits(fFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
