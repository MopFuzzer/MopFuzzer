// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test0656 {

    public static final int N = 400;

    public static long instanceCount = -1275563435L;
    public static int[] iArrFld = new int[N];
    public static long sMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0656.iArrFld, -11);
    }

    public volatile float fFld = -113.818F;
    public byte byFld = 63;

    public static void vMeth(float f1) {

        int i4 = 11;
        int i5 = 44335;
        int i6 = 6;
        int i7 = 9291;
        int i8 = -212;
        int[] iArr = new int[N];
        double d = -83.63575;
        boolean b = true;
        byte by = -15;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 2084667595L);
        FuzzerUtils.init(iArr, -13);

        i4 = (int) d;
        for (i5 = 11; i5 < 227; i5++) {
            Test0656.instanceCount = i5;
            b = b;
            by >>>= (byte) i6;
            for (i7 = i5; i7 < 7; i7++) {
                i4 <<= i4;
                Test0656.instanceCount += (long) f1;
                Test0656.instanceCount &= Test0656.instanceCount;
                i4 = i7;
                switch ((((i4 >>> 1) % 5) * 5) + 64) {
                    case 68:
                        i6 += i7;
                        d -= f1;
                        Test0656.instanceCount = Test0656.instanceCount;
                        lArr = lArr;
                        break;
                    case 76:
                        i4 = 0;
                        break;
                    case 73:
                        iArr[i7] -= -12;
                        break;
                    case 80:
                        i4 = (int) f1;
                        break;
                    case 75:
                        f1 += i4;
                        break;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i4 + Double.doubleToLongBits(d) + i5 + i6 + (b ? 1 : 0) + by + i7
                + i8 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i3) {

        float f2 = 0.159F;
        boolean b1 = true;
        long l2 = -15155L;
        int i9 = -9, i10 = 40, i11 = 87, i12 = 0, i13 = 58;
        byte by1 = 108;

        vMeth(f2);
        b1 = b1;
        for (l2 = 2; l2 < 268; ++l2) {
            by1 += (byte) (l2 ^ l2);
            switch (((i9 >>> 1) % 2) + 12) {
                case 12:
                    if (true) {
                        i3 += (int) (l2 * l2);
                    } else if (b1) {
                        Test0656.iArrFld[(int) (l2)] = i9;
                        for (i10 = 1; i10 < 6; i10++) {
                            for (i12 = 2; i12 > l2; i12 -= 2) {
                                i3 += (i12 | (long) f2);
                                f2 -= -29239;
                                Test0656.iArrFld[i12] -= (int) Test0656.instanceCount;
                                by1 += (byte) (((i12 * i9) + i9) - f2);
                                if (i10 != 0) {
                                }
                            }
                        }
                    }
                    break;
                case 13:
                    if (i10 != 0) {
                    }
                default:
                    f2 += (((l2 * f2) + l2) - i10);
            }
        }
        long meth_res = i3 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) + l2 + i9 + by1 + i10 + i11 + i12 + i13;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static short sMeth(long l, long l1) {

        int i = 14, i1 = 9376, i2 = 32454;
        short s = 30291;
        float f3 = -2.499F;
        float[] fArr = new float[N];
        boolean b2 = true;

        FuzzerUtils.init(fArr, 1.184F);

        for (float f : fArr) {
            for (i = 1; i < 4; i++) {
                i2 = 1;
                do {
                    s <<= (short) (i1++);
                    Test0656.instanceCount >>= l;
                    i1 += (int) (lMeth(i) - s);
                    i1 = (int) Test0656.instanceCount;
                    l += (i2 * i2);
                    f3 = f3;
                    i1 += (int) f;
                    i1 -= i;
                    if (b2) break;
                } while (++i2 < 2);
                i1 >>= (int) 170L;
                i1 *= i2;
                i1 += i2;
            }
        }
        long meth_res = l + l1 + i + i1 + i2 + s + Float.floatToIntBits(f3) + (b2 ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0656 _instance = new Test0656();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i14 = -28930, i15 = 36310, i16 = -58206, i17 = 1457, i18 = -13650, i19 = 7;
        long l3 = 337833965907664067L, l4 = -68L;
        double d1 = 49.1164;
        boolean b3 = false;

        fFld = (sMeth(Test0656.instanceCount, Test0656.instanceCount) << -51544);
        for (i14 = 1; i14 < 122; i14++) {
            l3 -= (long) fFld;
            i16 = 1;
            while (++i16 < 207) {
                i15 += (int) l4;
                fFld *= byFld;
                Test0656.iArrFld[i16] -= -102;
                Test0656.instanceCount += i16;
                fFld = 10;
                l3 -= i16;
                for (i17 = 1; i17 < 1; i17++) {
                    i18 >>= i18;
                    i15 >>>= i14;
                    i18 >>>= 203;
                    Test0656.iArrFld[i16 - 1] -= i14;
                    i15 >>>= 44676;
                    Test0656.iArrFld[i16] += i15;
                    Test0656.instanceCount *= i18;
                    i18 = i17;
                    Test0656.iArrFld[i14 + 1] = i14;
                    i18 += i17;
                }
                i18 += i14;
                i18 = 139;
            }
            switch ((((i15 >>> 1) % 7) * 5) + 10) {
                case 39:
                    i19 = 1;
                    while (++i19 < 207) {
                        d1 -= i17;
                        Test0656.iArrFld[(i17 >>> 1) % N] -= -32024;
                        d1 -= d1;
                        i18 = (int) fFld;
                        Test0656.iArrFld = Test0656.iArrFld;
                    }
                    break;
                case 33:
                    fFld += fFld;
                    break;
                case 13:
                    if (b3) break;
                    break;
                case 25:
                case 36:
                    i18 += (((i14 * i19) + i15) - fFld);
                case 29:
                    i15 -= (int) l4;
                    break;
                case 28:
            }
        }

        FuzzerUtils.out.println("i14 i15 l3 = " + i14 + "," + i15 + "," + l3);
        FuzzerUtils.out.println("i16 l4 i17 = " + i16 + "," + l4 + "," + i17);
        FuzzerUtils.out.println("i18 i19 d1 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("b3 = " + (b3 ? 1 : 0));

        FuzzerUtils.out.println("Test0656.instanceCount fFld byFld = " + Test0656.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + byFld);
        FuzzerUtils.out.println("Test0656.iArrFld = " + FuzzerUtils.checkSum(Test0656.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  lMeth ->  lMeth sMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
