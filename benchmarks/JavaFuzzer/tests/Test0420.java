// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test0420 {

    public static final int N = 400;

    public static long instanceCount = 9144493387693940041L;
    public static byte byFld = 20;
    public static int[] iArrFld = new int[N];
    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0420.iArrFld, -164);
    }

    public static void vMeth(int i1, int i2, int i3) {

        int i4 = 201, i5 = -10070, i6 = -37, i7 = -12, i8 = -245;
        boolean b = false;
        float f = -2.282F, f1 = -37.83F;
        double d1 = -1.123461;

        for (i4 = 7; 134 > i4; i4 += 3) {
            b = true;
            f = 1;
            while (++f < 36) {
                if (i2 != 0) {
                    vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) + Float.floatToIntBits(f) +
                            Float.floatToIntBits(f1) + i6 + Double.doubleToLongBits(d1) + i7 + i8;
                    return;
                }
                for (f1 = 1; f1 < 1; f1++) {
                    float f2 = 11.643F;
                    Test0420.instanceCount = Test0420.instanceCount;
                    d1 -= 80;
                    f2 = f1;
                    i5 += (int) (f1 - Test0420.instanceCount);
                }
                Test0420.iArrFld[(int) (f - 1)] |= i1;
                i5 *= Test0420.byFld;
                i5 += (int) (f - Test0420.instanceCount);
                for (i7 = 1; i7 < 1; i7++) {
                    if (b) break;
                    i8 = (int) Test0420.instanceCount;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) + Float.floatToIntBits(f) + Float.floatToIntBits(f1) +
                i6 + Double.doubleToLongBits(d1) + i7 + i8;
    }

    public static long lMeth(int i, double d) {

        int i9 = 2, i10 = 60858, i11 = 2, i12 = 0, i13 = -102, i14 = -62578;
        float f3 = 2.532F;
        short s = 29155;
        boolean b1 = false;

        vMeth(i, i, i);
        for (i9 = 7; i9 < 147; i9++) {
            i10 = 6;
            i = (int) d;
            i11 = 1;
            do {
                i += (((i11 * f3) + i) - i);
            } while (++i11 < 11);
            for (i12 = 1; i12 < 11; ++i12) {
                i13 -= i;
                i13 += (i12 | i12);
                i13 -= i9;
                i13 /= (int) (s | 1);
                i10 = i10;
                Test0420.instanceCount >>= -1333713056L;
                i14 += (i12 * i12);
                if (b1) continue;
            }
        }
        long meth_res = i + Double.doubleToLongBits(d) + i9 + i10 + i11 + Float.floatToIntBits(f3) + i12 + i13 + s +
                i14 + (b1 ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vSmallMeth() {

        long l = 61147L;
        double d2 = 107.107906;

        l = ((++l) + lMeth(13, d2));
        d2 = Test0420.instanceCount;
        vSmallMeth_check_sum += l + Double.doubleToLongBits(d2);
    }

    public static void main(String[] strArr) {

        try {
            Test0420 _instance = new Test0420();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i15 = 59432, i16 = 111, i17 = 26, i18 = 169, i19 = -13, i20 = -12, i21 = 150;
        float f4 = 0.163F, f5 = 0.389F;
        boolean b2 = false;
        double d3 = -66.67475;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -2393995512864594845L);

        for (int smallinvoc = 0; smallinvoc < 415; smallinvoc++) vSmallMeth();
        Test0420.iArrFld[(i15 >>> 1) % N] = 3143;
        for (i16 = 4; i16 < 125; ++i16) {
            switch ((i16 % 1) + 61) {
                case 61:
                    i17 += i17;
                    lArr[i16] *= (long) f4;
                    for (i18 = 11; 207 > i18; i18 += 2) {
                        b2 = b2;
                        switch ((i16 >>> 1) % 1) {
                            case 0:
                                i20 = 3;
                                do {
                                    i19 = -14;
                                    i15 *= -2;
                                    d3 += i17;
                                    i17 = i18;
                                    i15 = 11013;
                                } while (--i20 > 0);
                                for (f5 = 1; f5 < 3; f5++) {
                                    try {
                                        Test0420.iArrFld[i18] = (i20 / i17);
                                        i15 = (85 % i15);
                                        i15 = (i19 % -94);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    i17 += (int) f5;
                                    switch ((int) (((f5 % 7) * 5) + 101)) {
                                        case 105:
                                            i15 *= (int) 1.505F;
                                        case 129:
                                            i19 *= (int) 2.49967;
                                            Test0420.instanceCount <<= i21;
                                            Test0420.iArrFld[(int) (f5 + 1)] += i16;
                                            Test0420.instanceCount *= Test0420.instanceCount;
                                        case 127:
                                            Test0420.iArrFld[(int) (f5 + 1)] = (int) d3;
                                            Test0420.iArrFld[(int) (f5 + 1)] %= (int) ((long) (d3) | 1);
                                            i15 <<= i17;
                                            break;
                                        case 119:
                                            i15 = (int) Test0420.instanceCount;
                                            break;
                                        case 118:
                                            Test0420.instanceCount += (long) f5;
                                            Test0420.iArrFld[(int) (f5)] = i17;
                                        case 110:
                                            i19 *= i21;
                                        case 107:
                                            i15 <<= i16;
                                            break;
                                        default:
                                            i19 = (int) Test0420.instanceCount;
                                    }
                                }
                                break;
                        }
                    }
            }
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("f4 i18 i19 = " + Float.floatToIntBits(f4) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("b2 i20 d3 = " + (b2 ? 1 : 0) + "," + i20 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("f5 i21 lArr = " + Float.floatToIntBits(f5) + "," + i21 + "," +
                FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0420.instanceCount Test0420.byFld Test0420.iArrFld = " + Test0420.instanceCount + "," + Test0420.byFld
                + "," + FuzzerUtils.checkSum(Test0420.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth lMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
