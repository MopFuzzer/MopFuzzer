// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test0514 {

    public static final int N = 400;

    public static long instanceCount = 42L;
    public static boolean bFld = true;
    public static int iFld = 22874;
    public static volatile int[][] iArrFld = new int[N][N];
    public static float[] fArrFld = new float[N];
    public static byte[] byArrFld = new byte[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0514.iArrFld, -119);
        FuzzerUtils.init(Test0514.fArrFld, -56.806F);
        FuzzerUtils.init(Test0514.byArrFld, (byte) 63);
    }

    public short sFld = 216;
    public double dFld = -69.82095;
    public float fFld = -37.206F;

    public static void main(String[] strArr) {

        try {
            Test0514 _instance = new Test0514();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth2(float f) {

        int i10 = 186, i11 = 7, i12 = 51716, i13 = 2, i14 = 31, i15 = 9, i16 = -82;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -147L);

        i10 = -46027;
        Test0514.fArrFld[(i10 >>> 1) % N] *= -54324L;
        lArr[(-63109 >>> 1) % N] -= -7;
        i10 = i11;
        i12 = 1;
        do {
            i10 = i12;
            for (i13 = 1; i13 < 4; ++i13) {
                Test0514.iArrFld[i13 - 1][i12 + 1] -= (int) f;
                Test0514.instanceCount &= Test0514.instanceCount;
                i11 = -8;
                for (i15 = 1; i15 < 2; ++i15) {
                    i16 <<= 116;
                    lArr[i13 - 1] <<= i11;
                    i10 += (int) f;
                }
                if (i10 != 0) {
                    vMeth2_check_sum += Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + i14 + i15 + i16 +
                            FuzzerUtils.checkSum(lArr);
                    return;
                }
            }
        } while (++i12 < 392);
        vMeth2_check_sum += Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + i14 + i15 + i16 +
                FuzzerUtils.checkSum(lArr);
    }

    public void vMeth1(int i8, int i9, short s) {

        float f1 = -2.662F;
        int i17 = 14, i18 = 47586, i19 = 61641, i20 = 31322, i21 = -207;
        double d = 69.82228;

        vMeth2(-31.512F);
        Test0514.instanceCount = i9;
        f1 *= i8;
        Test0514.instanceCount = -8397;
        for (i17 = 6; 166 > i17; ++i17) {
            for (i19 = 1; i19 < 10; i19++) {
                i9 += (i19 * i19);
                i18 *= (int) Test0514.instanceCount;
                i18 *= (int) 81.93921;
                d = 1;
                do {
                    byte by1 = -66;
                    switch ((int) ((d % 2) + 2)) {
                        case 2:
                            dFld = i8;
                            i18 = i20;
                            break;
                        case 3:
                            i21 -= by1;
                            break;
                        default:
                            i9 = i20;
                    }
                } while ((d += 2) < 2);
            }
        }
        vMeth1_check_sum += i8 + i9 + s + Float.floatToIntBits(f1) + i17 + i18 + i19 + i20 + Double.doubleToLongBits(d)
                + i21;
    }

    public void vMeth(int i, int i1) {

        int i2 = -28293, i3 = 189, i4 = -8, i5 = -6, i6 = 3, i7 = -235;
        byte by = -55;

        for (i2 = 8; i2 < 383; i2++) {
            i4 = 1;
            do {
                i3 += 12;
                by = (byte) i;
                i3 -= i4;
                i3 -= Short.reverseBytes((short) ((i1 - i2) * (Test0514.instanceCount--)));
            } while (++i4 < 5);
            sFld = (short) i;
            switch (((((i1 + 181) >>> 1) % 2) * 5) + 88) {
                case 93:
                    for (i5 = 1; i5 < 5; ++i5) {
                        Test0514.bFld = Test0514.bFld;
                        Test0514.iArrFld[i2 - 1][i5] = i4;
                    }
                    i6 += (i2 * i2);
                    try {
                        Test0514.iArrFld[i2 + 1][i2 - 1] = (i1 / -1434168268);
                        i6 = (i2 % -4501);
                        Test0514.iArrFld[i2][i2 - 1] = (i5 / Test0514.iArrFld[i2][i2 + 1]);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 96:
                    Test0514.instanceCount += (i2 * i7);
                    try {
                        i = (Test0514.iArrFld[i2 + 1][i2 + 1] % 1462487715);
                        Test0514.iArrFld[i2][i2] = (i4 / -180);
                        i = (-637803781 % i6);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                default:
                    vMeth1(i3, i1, sFld);
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + by + i5 + i6 + i7;
    }

    public void mainTest(String[] strArr1) {

        int i22 = 62326, i23 = -4468, i24 = 146, i25 = 13, i26 = 59211, i27 = 11284;
        long l = 36818L;
        double d1 = -44.57469;

        vMeth(Test0514.iFld, Test0514.iFld);
        i22 = 1;
        do {
            for (i23 = i22; i23 < 68; ++i23) {
                try {
                    i24 = (-15258 / Test0514.iArrFld[i23 - 1][i22]);
                    i24 = (-420627086 % i22);
                    i24 = (-202 % i24);
                } catch (ArithmeticException a_e) {
                }
                i24 = i22;
                for (i25 = 1; i25 < 1; i25++) {
                    Test0514.fArrFld[i25 - 1] = 18135;
                    i24 |= -28292;
                }
                l = 1;
                while (++l < 1) {
                    Test0514.instanceCount = -1686022684L;
                    Test0514.iFld += (int) -43075L;
                    Test0514.iArrFld[i23 - 1][i23] >>= Test0514.iFld;
                    if (Test0514.bFld) {
                        try {
                            i24 = (i22 / i22);
                            Test0514.iFld = (-8732 % i25);
                            i24 = (33874 / i23);
                        } catch (ArithmeticException a_e) {
                        }
                        Test0514.byArrFld[i22] += (byte) 1713979708189432609L;
                        i24 += (int) (l * l);
                    }
                    i24 = (int) l;
                }
                i27 = 1;
                while (++i27 < 1) {
                    i24 *= (int) 5449296998035105747L;
                    if (true) break;
                }
                Test0514.instanceCount = i22;
                fFld = i26;
            }
            i26 += (int) -1.652F;
            Test0514.iArrFld[i22 - 1][i22] >>>= (int) l;
            if (Test0514.bFld) {
                fFld = i23;
            } else if (Test0514.bFld) {
                d1 = 1;
                do {
                    i24 &= i22;
                    Test0514.instanceCount = -81;
                    Test0514.iFld += (int) d1;
                } while (++d1 < 68);
            } else {
                if (Test0514.bFld) break;
            }
        } while (++i22 < 370);

        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 l = " + i25 + "," + i26 + "," + l);
        FuzzerUtils.out.println("i27 d1 = " + i27 + "," + Double.doubleToLongBits(d1));

        FuzzerUtils.out.println("Test0514.instanceCount sFld Test0514.bFld = " + Test0514.instanceCount + "," + sFld + "," +
                (Test0514.bFld ? 1 : 0));
        FuzzerUtils.out.println("dFld Test0514.iFld fFld = " + Double.doubleToLongBits(dFld) + "," + Test0514.iFld + "," +
                Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0514.iArrFld Test0514.fArrFld Test0514.byArrFld = " + FuzzerUtils.checkSum(Test0514.iArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0514.fArrFld)) + "," + FuzzerUtils.checkSum(Test0514.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
