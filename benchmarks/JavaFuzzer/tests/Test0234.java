// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0234 {

    public static final int N = 400;

    public static long instanceCount = -2942865775L;
    public static double dFld = -94.41090;
    public static short sFld = -7793;
    public static float fFld = 49.380F;
    public static byte byFld = 4;
    public static float[] fArrFld = new float[N];
    public static double[] dArrFld = new double[N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0234.fArrFld, -43.714F);
        FuzzerUtils.init(Test0234.dArrFld, 0.10689);
    }

    public static void vMeth1(int i8) {

        float f1 = 90.859F, f2 = -13.498F;
        int i9 = 3;
        int i10 = 11514;
        int i11 = -1;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, -207);

        i8 += (int) f1;
        for (f2 = 10; f2 < 350; f2 += 2) {
            iArr2[(int) (f2)] >>= i8;
            iArr2[(int) (f2)] = i8;
            i9 = (int) 31629L;
            Test0234.instanceCount = Test0234.instanceCount;
            i10 = 1;
            while (++i10 < 9) {
                Test0234.fArrFld[i10 - 1] = i10;
                i11 = 1;
                do {
                    if (i9 != 0) {
                        vMeth1_check_sum += i8 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i9 + i10 + i11 +
                                FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    try {
                        i8 = (iArr2[i11 + 1] % 6456);
                        iArr2[i11] = (i10 / 5101);
                        i8 = (i8 / i9);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0234.dFld *= -23368;
                    i9 += i11;
                    i9 += (-4188 + (i11 * i11));
                    i8 -= (int) Test0234.dFld;
                } while (++i11 < 1);
            }
        }
        vMeth1_check_sum += i8 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i9 + i10 + i11 +
                FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(boolean b) {

        int i7 = -6;
        int i12 = -3;
        int i13 = 85;
        int i14 = 10;
        int[][] iArr1 = new int[N][N];
        float f = 1.67F, f3 = 82.142F;
        short s = -21164;

        FuzzerUtils.init(iArr1, -18963);

        i7 -= (i7--);
        i7 += iArr1[(i7 >>> 1) % N][(161 >>> 1) % N];
        switch (((((int) (f - i7)) >>> 1) % 2) + 90) {
            case 90:
                vMeth1(i7);
                for (i12 = 288; 12 < i12; i12 -= 2) {
                    Test0234.instanceCount >>= Test0234.instanceCount;
                    Test0234.dArrFld[i12 - 1] -= f;
                    switch (((i12 >>> 1) % 2) + 40) {
                        case 40:
                            Test0234.instanceCount += (long) Test0234.dFld;
                            Test0234.fArrFld[i12] = i7;
                            s = (short) i12;
                            break;
                        case 41:
                            iArr1[i12][i12 - 1] = i13;
                            break;
                        default:
                            for (f3 = 11; f3 > 1; --f3) {
                                Test0234.instanceCount >>= Test0234.instanceCount;
                                iArr1[i12 - 1][(int) (f3)] = i12;
                            }
                    }
                }
                break;
            case 91:
                i7 += -199;
                break;
        }
        vMeth_check_sum += (b ? 1 : 0) + i7 + Float.floatToIntBits(f) + i12 + i13 + s + Float.floatToIntBits(f3) + i14
                + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0234 _instance = new Test0234();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public long lMeth(int i3, long l, int i4) {

        int i5 = 61;
        int i6 = -1641;
        int i15 = -5;
        int i16 = 53794;
        int i17 = -222;
        int i18 = -49903;
        int[] iArr3 = new int[N];
        float f4 = 116.730F;
        double d = 0.9109;
        boolean b1 = false;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -32373);
        FuzzerUtils.init(iArr3, -692);

        for (i5 = 5; i5 < 303; i5++) {
            vMeth(true);
            sArr[(i5 >>> 1) % N] = Test0234.sFld;
            if (b1) {
                i6 += i4;
                for (i15 = i5; i15 < 6; ++i15) {
                    i3 += (i15 * i15);
                    i6 = -9881;
                    Test0234.dFld = f4;
                    d = 1;
                    do {
                        i16 <<= i4;
                        iArr3[i5] = (int) Test0234.dFld;
                    } while (++d < 1);
                    for (i17 = 1; i17 < 1; i17++) {
                        if (false) continue;
                    }
                    i3 += (((i15 * i15) + f4) - i3);
                }
            } else if (b1) {
                i18 |= i16;
            } else if (true) {
                if (b1) break;
            } else {
                i18 &= 28412;
            }
        }
        long meth_res = i3 + l + i4 + i5 + i6 + i15 + i16 + Float.floatToIntBits(f4) + Double.doubleToLongBits(d) + i17
                + i18 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr3);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 9;
        int i1 = 6;
        int i2 = -40014;
        int i19 = 64405;
        int i20 = 74;
        int[] iArr = new int[N];
        boolean b2 = true;

        FuzzerUtils.init(iArr, 17);

        for (i = 14; i < 336; ++i) {
            i2 = 1;
            while (++i2 < 78) {
                iArr[i - 1] -= (int) lMeth(i, 14L, 40400);
                for (i19 = 1; i19 < 1; i19++) {
                    switch (((i2 % 4) * 5) + 126) {
                        case 144:
                            switch ((i % 10) + 117) {
                                case 117:
                                    i20 -= (int) 6L;
                                    i1 ^= i1;
                                    break;
                                case 118:
                                    Test0234.dFld -= i19;
                                    i20 += i19;
                                    b2 = b2;
                                    break;
                                case 119:
                                    i20 = i;
                                    Test0234.instanceCount = i19;
                                    i20 = (int) Test0234.instanceCount;
                                    Test0234.sFld *= (short) Test0234.instanceCount;
                                case 120:
                                    iArr[i] += i20;
                                    i1 *= (int) 115.674F;
                                    i1 += i19;
                                    try {
                                        i1 = (i20 % -2);
                                        i20 = (i2 % i1);
                                        i1 = (i2 / i);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    break;
                                case 121:
                                    Test0234.sFld += (short) (i19 | i20);
                                    Test0234.dFld *= i19;
                                    Test0234.fFld -= Test0234.sFld;
                                    break;
                                case 122:
                                    Test0234.byFld -= (byte) Test0234.instanceCount;
                                    switch ((i % 1) + 76) {
                                        case 76:
                                            if (true) {
                                                Test0234.fFld += i1;
                                                i1 += (((i19 * i1) + Test0234.instanceCount) - i20);
                                                i20 = Test0234.sFld;
                                            } else {
                                                i1 += i2;
                                                if (false) continue;
                                            }
                                            break;
                                        default:
                                            i20 -= -9610;
                                    }
                                    break;
                                case 123:
                                    Test0234.byFld -= (byte) i20;
                                    break;
                                case 124:
                                    Test0234.fFld += 62;
                                    break;
                                case 125:
                                    Test0234.instanceCount = i19;
                                case 126:
                                    Test0234.instanceCount = -34852;
                                default:
                                    try {
                                        i1 = (i19 / i2);
                                        iArr[i19 - 1] = (i2 % i2);
                                        i20 = (61471 % i2);
                                    } catch (ArithmeticException a_e) {
                                    }
                            }
                            break;
                        case 139:
                            i20 += i19;
                            break;
                        case 140:
                            i20 += i19;
                            break;
                        case 146:
                            i1 |= -3;
                            break;
                        default:
                            iArr[i2] -= (int) 128L;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i19 i20 b2 = " + i19 + "," + i20 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0234.instanceCount Test0234.dFld Test0234.sFld = " + Test0234.instanceCount + "," +
                Double.doubleToLongBits(Test0234.dFld) + "," + Test0234.sFld);
        FuzzerUtils.out.println("Test0234.fFld Test0234.byFld Test0234.fArrFld = " + Float.floatToIntBits(Test0234.fFld) + "," +
                Test0234.byFld + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0234.fArrFld)));
        FuzzerUtils.out.println("Test0234.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0234.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
