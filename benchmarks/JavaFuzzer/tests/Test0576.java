// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test0576 {

    public static final int N = 400;

    public static long instanceCount = -31228L;
    public static boolean bFld = false;
    public static short sFld = -14650;
    public static int iFld1 = 50058;
    public static long[] lArrFld = new long[N];
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0576.lArrFld, 2L);
    }

    public int iFld = 2;

    public static void vMeth1(byte by1, float f) {

        int i1 = -28157, i2 = 5, i3 = -20635, i4 = -261, i5 = 31114;
        double d = -2.12509;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -113.46129);

        i1 -= Test0576.sFld;
        d += by1;
        Test0576.lArrFld[(i1 >>> 1) % N] >>= i1;
        for (i2 = 1; i2 < 171; i2++) {
            i1 += (((i2 * i1) + i2) - i1);
            if (Test0576.bFld) break;
            switch (((i2 % 2) * 5) + 47) {
                case 52:
                    switch (((i2 >>> 1) % 1) + 30) {
                        case 30:
                            Test0576.instanceCount = i1;
                            for (i4 = 1; i4 < 9; ++i4) {
                                switch (((i4 % 1) * 5) + 8) {
                                    case 12:
                                        Test0576.instanceCount *= Test0576.instanceCount;
                                        i3 += (((i4 * Test0576.instanceCount) + i3) - Test0576.instanceCount);
                                        Test0576.instanceCount = i3;
                                        break;
                                }
                            }
                            i1 = i3;
                            break;
                    }
                    break;
                case 51:
                    dArr[i2] *= d;
                    break;
                default:
                    Test0576.instanceCount %= (Test0576.instanceCount | 1);
            }
        }
        vMeth1_check_sum += by1 + Float.floatToIntBits(f) + i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        byte by2 = 54;
        float f1 = 18.582F;
        int i6 = -3;
        int i7 = -3;
        int i8 = -71;
        int[] iArr2 = new int[N];
        double d1 = 0.111986;
        long l = -4112L;

        FuzzerUtils.init(iArr2, -12);

        vMeth1(by2, f1);
        Test0576.bFld = Test0576.bFld;
        Test0576.iFld1 += (int) Test0576.instanceCount;
        for (i6 = 5; i6 < 230; i6++) {
            d1 *= Test0576.instanceCount;
            for (l = 7; 1 < l; l--) {
                i8 = i8;
                try {
                    i7 = (i6 / iArr2[i6]);
                    i7 = (Test0576.iFld1 / i6);
                    i7 = (-37553 % iArr2[(int) (l)]);
                } catch (ArithmeticException a_e) {
                }
                Test0576.iFld1 = i8;
                f1 *= f1;
                i7 += i7;
                i8 >>>= (int) l;
                iArr2[(int) (l)] = i8;
                try {
                    i8 = (-158 / iArr2[(int) (l - 1)]);
                    i7 = (iArr2[i6] % 180);
                    i7 = (i7 % iArr2[(int) (l + 1)]);
                } catch (ArithmeticException a_e) {
                }
                Test0576.instanceCount = l;
            }
        }
        vMeth_check_sum += by2 + Float.floatToIntBits(f1) + i6 + i7 + Double.doubleToLongBits(d1) + l + i8 +
                FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i) {

        int i9 = 10;
        int i10 = 5;
        int[] iArr1 = new int[N];
        double d2 = 0.93726;

        FuzzerUtils.init(iArr1, 1);

        iArr1[(i >>> 1) % N] += i;
        vMeth();
        for (i9 = 7; i9 < 263; i9++) {
            d2 *= i9;
            i10 = i10;
        }
        Test0576.sFld *= (short) -2;
        long meth_res = i + i9 + i10 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0576 _instance = new Test0576();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public long lMeth(byte by) {

        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, 196);

        Test0576.bFld = (Test0576.bFld = Test0576.bFld);
        iArr[(iFld >>> 1) % N] = (int) ((iArr[(-51 >>> 1) % N] * iFld) + Math.abs(Test0576.instanceCount));
        long meth_res = by + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {


        iFld -= (int) lMeth((byte) (iMeth(Test0576.iFld1) * Test0576.instanceCount));


        FuzzerUtils.out.println("Test0576.instanceCount iFld Test0576.bFld = " + Test0576.instanceCount + "," + iFld + "," +
                (Test0576.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0576.sFld Test0576.iFld1 Test0576.lArrFld = " + Test0576.sFld + "," + Test0576.iFld1 + "," +
                FuzzerUtils.checkSum(Test0576.lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
