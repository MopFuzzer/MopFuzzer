// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0746 {

    public static final int N = 400;

    public static long instanceCount = -1536621788220743619L;
    public static short sFld1 = 21244;
    public static volatile boolean bFld = false;
    public static byte byFld = -113;
    public static int[] iArrFld = new int[N];
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0746.iArrFld, 58);
    }

    public short sFld = 30041;

    public static int iMeth(int i4, int i5) {

        double d = 0.115921;
        int i6 = 14, i7 = -5, i8 = 201;
        float f2 = 3.616F;
        float[] fArr = new float[N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(fArr, -2.830F);
        FuzzerUtils.init(bArr, false);

        Test0746.iArrFld[(i4 >>> 1) % N] = (int) Test0746.instanceCount;
        i4 += i5;
        d = i5;
        for (i6 = 9; i6 < 205; ++i6) {
            i8 = 8;
            do {
                Test0746.bFld = Test0746.bFld;
                i7 = i4;
                f2 = 1;
                while (++f2 < 3) {
                    Test0746.instanceCount ^= i4;
                }
                fArr[i6] = i5;
                Test0746.bFld = Test0746.bFld;
                i4 = i4;
                bArr[i6] = Test0746.bFld;
                i5 += (i8 * i8);
                i4 += (((i8 * i4) + i8) - i4);
            } while ((i8 -= 3) > 0);
        }
        long meth_res = i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + Float.floatToIntBits(f2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {

        int i = 52, i1 = -57801, i2 = -206, i3 = -9, i9 = 108;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(fArr1, 86.411F);

        i = 353;
        do {
            Test0746.sFld1 = (short) 0;
            if (Test0746.bFld) {
                switch ((i % 2) + 74) {
                    case 74:
                        i1 = 1;
                        do {
                            for (i2 = 1; i2 > 1; i2 -= 3) {
                                Test0746.instanceCount += i2;
                                Test0746.sFld1 = (short) Test0746.instanceCount;
                                Test0746.instanceCount += (i2 * i2);
                                Test0746.iArrFld[i2 - 1] = i2;
                                i3 &= (((Test0746.sFld1 + 8) + (156 - (--i3))) * iMeth(-6431, i3));
                                fArr1[i1 - 1] = i3;
                                Test0746.instanceCount += (i2 * i2);
                                i3 = (int) -34279L;
                                i3 <<= (int) -3260081375L;
                            }
                        } while (++i1 < 5);
                        break;
                    case 75:
                        Test0746.instanceCount = i2;
                        break;
                }
                vMeth_check_sum += i + i1 + i2 + i3 + i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                return;
            } else if (Test0746.bFld) {
                i3 = (int) Test0746.instanceCount;
            } else if (Test0746.bFld) {
                if (Test0746.bFld) break;
            } else {
                i3 += (i - i9);
            }
        } while (--i > 0);
        vMeth_check_sum += i + i1 + i2 + i3 + i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static float fMeth(long l, float f1) {

        int i10 = -23, i11 = 41964, i12 = -114;
        byte by = -120;
        float[][] fArr2 = new float[N][N];

        FuzzerUtils.init(fArr2, 123.166F);

        vMeth();
        f1 = i10;
        i11 = 1;
        while (++i11 < 186) {
            double d1 = -123.23566;
            try {
                Test0746.iArrFld[i11] = (41612 / i11);
                i10 = (i11 / Test0746.iArrFld[i11 + 1]);
                i10 = (i11 / i11);
            } catch (ArithmeticException a_e) {
            }
            Test0746.iArrFld[i11 + 1] |= i11;
            Test0746.sFld1 = (short) i10;
            i10 += i11;
            d1 += by;
            i12 = 1;
            while (++i12 < 9) {
                fArr2[i12 - 1][i11] *= i10;
                i10 -= (int) l;
                i10 += (i12 - Test0746.sFld1);
                l += (long) d1;
                if (i12 != 0) {
                }
                Test0746.iArrFld[i12 + 1] += -59688;
            }
        }
        long meth_res = l + Float.floatToIntBits(f1) + i10 + i11 + by + i12 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2));
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0746 _instance = new Test0746();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f = 95.960F;
        int i13 = 51400, i14 = -64, i15 = -37, i16 = -11, i17 = 114, i18 = -5, i19 = 0, i20 = 45565, i21 = 60;
        double d2 = 111.53644, d3 = 12.83118;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 6193790142873830578L);

        Test0746.instanceCount ^= (long) (((sFld++) + (f - f)) - fMeth(Test0746.instanceCount, 109.360F));
        i13 = i13;
        i14 = 1;
        do {
            Test0746.byFld += (byte) (i14 | Test0746.byFld);
            Test0746.iArrFld[i14 - 1] *= i13;
            i13 += (int) Test0746.instanceCount;
        } while (++i14 < 256);
        i13 = -3;
        Test0746.iArrFld[(i14 >>> 1) % N] = 9;
        Test0746.bFld = Test0746.bFld;
        i13 |= -43583;
        i15 = 330;
        do {
            for (i16 = 228; i16 > 1; i16 -= 2) {
                try {
                    i13 = (i14 % 6);
                    i17 = (-3 % i16);
                    i13 = (Test0746.iArrFld[i16] / i18);
                } catch (ArithmeticException a_e) {
                }
                Test0746.instanceCount += (((i16 * i18) + i14) - i13);
                Test0746.instanceCount <<= i15;
                Test0746.iArrFld[i15 + 1] = (int) Test0746.instanceCount;
            }
            i19 = 1;
            do {
                i13 += (int) 81L;
                Test0746.instanceCount = Test0746.instanceCount;
                i13 = i15;
                Test0746.instanceCount += (((i19 * Test0746.instanceCount) + i16) - i13);
            } while (++i19 < 228);
            for (i20 = 13; i20 < 228; ++i20) {
                d2 = 1;
                while (++d2 < 2) {
                    Test0746.byFld = (byte) -125;
                    Test0746.instanceCount = i19;
                }
                if (Test0746.bFld) {
                    lArr[i15] = i17;
                    Test0746.instanceCount >>= i18;
                } else {
                    d3 = Test0746.instanceCount;
                    if (Test0746.bFld) continue;
                }
            }
        } while ((i15 -= 3) > 0);

        FuzzerUtils.out.println("f i13 i14 = " + Float.floatToIntBits(f) + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d2 d3 = " + i21 + "," + Double.doubleToLongBits(d2) + "," +
                Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0746.instanceCount sFld Test0746.sFld1 = " + Test0746.instanceCount + "," + sFld + "," +
                Test0746.sFld1);
        FuzzerUtils.out.println("Test0746.bFld Test0746.byFld Test0746.iArrFld = " + (Test0746.bFld ? 1 : 0) + "," + Test0746.byFld + "," +
                FuzzerUtils.checkSum(Test0746.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
