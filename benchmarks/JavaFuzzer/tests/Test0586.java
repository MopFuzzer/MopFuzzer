// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0586 {

    public static final int N = 400;

    public static long instanceCount = -1867966035805771229L;
    public static float fFld = -104.1011F;
    public static short sFld = -10252;
    public static volatile long[] lArrFld = new long[N];
    public static long[] lArrFld1 = new long[N];
    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0586.lArrFld, -3L);
        FuzzerUtils.init(Test0586.lArrFld1, 7L);
    }

    public long lFld = 59857L;

    public static int iMeth(int i4, float f1) {

        short s = -2835;
        int i5 = -214;
        int i6 = -34688;
        int i7 = 43275;
        int i8 = 103;
        int i9 = 226;
        int[] iArr = new int[N];
        int[][] iArr1 = new int[N][N];
        float f2 = -9.558F;

        FuzzerUtils.init(iArr, 2);
        FuzzerUtils.init(iArr1, -6);

        f1 *= s;
        for (i5 = 6; i5 < 202; i5++) {
            iArr[i5] = i4;
            i4 += (i5 * i5);
            i4 = i6;
        }
        i6 += (int) Test0586.instanceCount;
        Test0586.lArrFld[(i6 >>> 1) % N] = (long) f1;
        for (i7 = 15; i7 < 311; ++i7) {
            Test0586.lArrFld[i7 - 1] = -108L;
            iArr[i7 + 1] = -11269;
            f1 = i6;
            for (f2 = i7; f2 < 6; ++f2) {
                s = (short) i4;
                iArr1 = iArr1;
                i6 += 11979;
            }
        }
        long meth_res = i4 + Float.floatToIntBits(f1) + s + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + i9 +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i3) {

        int i10 = 227;
        int i11 = -33631;
        int i12 = 200;
        int i13 = 18874;
        int i14 = 102;
        int i15 = -160;
        int i16 = -32929;
        int[] iArr2 = new int[N];
        byte by = 68;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 62.684F);
        FuzzerUtils.init(iArr2, -148);

        fArr[(-32 >>> 1) % N] = (Test0586.instanceCount -= iMeth(i3, Test0586.fFld));
        for (i10 = 24; 392 > i10; i10++) {
            for (i12 = 5; i10 < i12; i12--) {
                i11 = 39;
                Test0586.lArrFld1[i12 + 1] = 3;
                Test0586.fFld += Test0586.instanceCount;
                for (i14 = 1; 1 > i14; i14++) {
                    boolean b = false;
                    i11 += i14;
                    i16 ^= -1;
                    fArr[i10 - 1] -= 246;
                    if (b) {
                        fArr[i14 - 1] = i11;
                        by = (byte) -8996013138654187142L;
                        iArr2[i10] = -25484;
                        by >>= (byte) i13;
                    } else if (b) {
                        if (true) break;
                    } else if (b) {
                        Test0586.sFld += (short) Test0586.instanceCount;
                    } else {
                        Test0586.instanceCount <<= by;
                    }
                }
            }
        }
        vMeth_check_sum += i3 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + by +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vSmallMeth() {

        int i2 = 84;
        float f = 0.985F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 4L);

        lArr[(i2 >>> 1) % N] = (long) ((i2--) * (-(--f)));
        vMeth(i2);
        vSmallMeth_check_sum += i2 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0586 _instance = new Test0586();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 22792;
        int i1 = 13;
        int i18 = 14;
        int i19 = 26532;
        int i20 = 6164;
        int i21 = -13360;
        int[] iArr3 = new int[N];
        double d = 0.46830, d1 = -1.18001;
        byte by1 = 85;

        FuzzerUtils.init(iArr3, -58630);

        Test0586.instanceCount = (long) ((Math.abs(i) - (Test0586.instanceCount + d)) * ((i + Test0586.instanceCount) - d));
        for (d1 = 10; d1 < 207; d1++) {
            for (int smallinvoc = 0; smallinvoc < 62; smallinvoc++) vSmallMeth();
        }
        Test0586.lArrFld[(i >>> 1) % N] *= i;
        for (int i17 : iArr3) {
            boolean b1 = true;
            switch (((i1 >>> 1) % 1) + 33) {
                case 33:
                    by1 += (byte) -5;
                    if (b1) {
                        iArr3[(i >>> 1) % N] = (int) Test0586.instanceCount;
                        iArr3[(i17 >>> 1) % N] *= 104;
                    } else if (false) {
                        i ^= i17;
                    } else if (b1) {
                        iArr3 = FuzzerUtils.int1array(N, (int) 33256);
                    } else {
                        i = i;
                        Test0586.instanceCount <<= Test0586.sFld;
                        for (i18 = 3; i18 < 63; ++i18) {
                            for (i20 = 1; i20 < 2; i20++) {
                                i1 += (((i20 * Test0586.instanceCount) + i17) - i);
                                switch (((i20 % 10) * 5) + 41) {
                                    case 76:
                                        Test0586.fFld = i1;
                                        break;
                                    case 47:
                                        b1 = b1;
                                        Test0586.instanceCount += (i20 ^ i);
                                        Test0586.fFld *= lFld;
                                        i17 = -220;
                                    case 51:
                                        d *= i20;
                                        break;
                                    case 78:
                                        i1 = (int) Test0586.instanceCount;
                                        i >>= (int) -1229887623492155259L;
                                        Test0586.fFld += i1;
                                        Test0586.sFld = (short) lFld;
                                        break;
                                    case 87:
                                        Test0586.sFld += (short) i20;
                                        Test0586.lArrFld = Test0586.lArrFld1;
                                        break;
                                    case 75:
                                        Test0586.fFld *= i17;
                                    case 43:
                                        i19 = (int) lFld;
                                        break;
                                    case 65:
                                        iArr3[i18] *= i19;
                                        break;
                                    case 80:
                                        i >>>= i21;
                                    case 67:
                                        i21 = -7463;
                                        break;
                                    default:
                                        i19 = i17;
                                }
                            }
                        }
                    }
                    break;
                default:
                    i21 = i20;
            }
        }

        FuzzerUtils.out.println("i d d1 = " + i + "," + Double.doubleToLongBits(d) + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i1 by1 i18 = " + i1 + "," + by1 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0586.instanceCount Test0586.fFld Test0586.sFld = " + Test0586.instanceCount + "," +
                Float.floatToIntBits(Test0586.fFld) + "," + Test0586.sFld);
        FuzzerUtils.out.println("lFld Test0586.lArrFld Test0586.lArrFld1 = " + lFld + "," + FuzzerUtils.checkSum(Test0586.lArrFld)
                + "," + FuzzerUtils.checkSum(Test0586.lArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
