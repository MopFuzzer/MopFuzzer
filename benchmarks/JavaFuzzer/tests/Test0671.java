// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0671 {

    public static final int N = 400;

    public static long instanceCount = -14L;
    public static float fFld = 88.842F;
    public static int[][] iArrFld = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0671.iArrFld, 40867);
    }

    public int iFld = -52366;

    public static int iMeth1(int i7, int i8, double d1) {


        d1 += i7;
        long meth_res = i7 + i8 + Double.doubleToLongBits(d1);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i2, int i3, float f1) {

        long l = -25336L, l1 = -8422195644214971129L;
        int i4 = -5;
        int i5 = 2;
        int i6 = 14;
        int i9 = 8;
        int i10 = -84;
        int i11 = -4;
        int[] iArr = new int[N];
        double d = -44.75496;
        byte by = 84;
        short s = 9738;

        FuzzerUtils.init(iArr, -25081);

        Test0671.instanceCount = (i3++);
        for (l = 4; l < 314; l++) {
            d += (-23535L - i3);
            for (i5 = 1; i5 < 5; ++i5) {
                i6 -= (int) Long.reverseBytes(i5 + (i2++));
            }
        }
        iMeth1(i3, i5, d);
        l1 += i4;
        i9 = 1;
        while ((i9 += 2) < 182) {
            for (i10 = 1; i10 < 17; i10++) {
                f1 -= -22274;
                iArr[i9] += -4244;
                by *= (byte) -55.364F;
                try {
                    i6 = (i9 / -2103605597);
                    i6 = (i3 % 63696);
                    i6 = (i5 % -26608);
                } catch (ArithmeticException a_e) {
                }
                if (i2 != 0) {
                }
                s += (short) i10;
            }
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f1) + l + i4 + Double.doubleToLongBits(d) + i5 + i6 + l1 + i9 +
                i10 + i11 + by + s + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i, boolean b) {

        int i1 = 4016, i12 = 4, i13 = 13, i14 = -12, i15 = -115, i16 = 64999, i17 = -9100;
        double d2 = 1.128433;
        double[] dArr = new double[N];
        byte by1 = -39;
        byte[] byArr = new byte[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(byArr, (byte) 47);
        FuzzerUtils.init(dArr, -55.58447);
        FuzzerUtils.init(lArr, -46830L);

        i1 = 1;
        do {
            float f = -101.901F;
            i += (int) f;
            byArr[i1 + 1] += (byte) iMeth(i12, 11, f);
        } while (++i1 < 159);
        i += (int) Test0671.instanceCount;
        Test0671.iArrFld[(-170 >>> 1) % N][(i >>> 1) % N] = i1;
        switch (((i1 >>> 1) % 6) + 11) {
            case 11:
                Test0671.iArrFld[(i >>> 1) % N][(i1 >>> 1) % N] *= 19116;
                for (i13 = 2; i13 < 146; i13 += 3) {
                    Test0671.instanceCount = i14;
                    d2 += 187;
                    for (i15 = 1; i15 < 32; ++i15) {
                        i17 = 1;
                        do {
                            dArr[i15] = Test0671.fFld;
                            i = (int) d2;
                            i16 += (i17 | i);
                        } while ((i17 += 2) < 2);
                    }
                }
            case 12:
                lArr[(i12 >>> 1) % N] = i1;
                break;
            case 13:
                i16 -= (int) Test0671.fFld;
                break;
            case 14:
                i += i13;
                break;
            case 15:
                d2 -= by1;
            case 16:
                Test0671.instanceCount = i13;
            default:
                i12 += (int) -57.87952;
        }
        vMeth_check_sum += i + (b ? 1 : 0) + i1 + i12 + i13 + i14 + Double.doubleToLongBits(d2) + i15 + i16 + i17 + by1
                + FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0671 _instance = new Test0671();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        boolean b1 = true;
        int i18 = 6, i19 = 7, i20 = -213, i21 = -14056, i22 = -222, i23 = -13, i24 = -5, i25 = 34796;
        long l2 = -1433027526594564777L;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 55144L);

        vMeth(iFld, b1);
        iFld /= 211;
        for (i18 = 5; i18 < 332; ++i18) {
            Test0671.instanceCount = i18;
            Test0671.fFld += (i18 * i18);
        }
        iFld = iFld;
        l2 = 1;
        while (++l2 < 281) {
            for (i20 = 4; i20 < 89; i20++) {
                i21 = (int) Test0671.fFld;
                for (i22 = 1; i22 < 2; i22 += 2) {
                    short s1 = -21900;
                    Test0671.fFld -= i23;
                    s1 += (short) Test0671.fFld;
                    Test0671.fFld += (i22 * i22);
                }
            }
            Test0671.iArrFld[(int) (l2 - 1)][(int) (l2)] -= i20;
            if (b1) continue;
            i23 = i21;
            Test0671.iArrFld[(int) (l2 - 1)][(int) (l2 + 1)] = i22;
        }
        iFld = (int) l2;
        lArr1[(i20 >>> 1) % N] = l2;
        i24 = 1;
        do {
            Test0671.instanceCount = iFld;
            i25 = 158;
            do {
                double d3 = -2.80;
                iFld = i20;
                Test0671.instanceCount -= l2;
                try {
                    i23 = (58329 / Test0671.iArrFld[i25][i24]);
                    i21 = (-82 % iFld);
                    i19 = (i18 / 110);
                } catch (ArithmeticException a_e) {
                }
                Test0671.instanceCount >>>= -31;
                i21 = i21;
                Test0671.fFld += iFld;
                d3 -= l2;
                Test0671.fFld = Test0671.instanceCount;
            } while (--i25 > 0);
        } while (++i24 < 159);

        FuzzerUtils.out.println("b1 i18 i19 = " + (b1 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("l2 i20 i21 = " + l2 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 lArr1 = " + i25 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0671.instanceCount Test0671.fFld iFld = " + Test0671.instanceCount + "," +
                Float.floatToIntBits(Test0671.fFld) + "," + iFld);
        FuzzerUtils.out.println("Test0671.iArrFld = " + FuzzerUtils.checkSum(Test0671.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
