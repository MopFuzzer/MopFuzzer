// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0936 {

    public static final int N = 400;

    public static long instanceCount = -8L;
    public static int iFld = 168;
    public static double dFld = -99.12029;
    public static byte byFld = -4;
    public static short sFld = -28219;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0936.iArrFld, 14);
    }

    public float fFld = -2.319F;

    public static void vMeth1() {

        int i2 = -213;
        int i3 = 213;
        int i4 = 10;
        int i5 = 147;
        int i6 = 29552;
        int i7 = 0;
        int[] iArr1 = new int[N];
        float f = -76.939F;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr1, 24);
        FuzzerUtils.init(bArr, false);

        iArr1[(Test0936.iFld >>> 1) % N] += Test0936.iFld;
        for (i2 = 6; i2 < 162; i2++) {
            i3 = (int) Test0936.dFld;
        }
        Test0936.iFld = i3;
        for (f = 2; f < 175; f++) {
            i5 = 9;
            do {
                bArr[(int) (f - 1)] = true;
                Test0936.instanceCount = -7;
                Test0936.dFld = i2;
                for (i6 = (int) (f); i6 < 1; i6 += 3) {
                    iArr1[i5] >>= i6;
                    Test0936.iFld = i2;
                    if (Test0936.iFld != 0) {
                        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 +
                                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
                        return;
                    }
                }
            } while (--i5 > 0);
            i7 += (int) (f - i7);
            i7 -= i2;
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + FuzzerUtils.checkSum(iArr1) +
                FuzzerUtils.checkSum(bArr);
    }

    public static long lMeth() {

        int i = 76, i1 = -84, i8 = 10, i9 = 79, i10 = 50373, i11 = -14733, i12 = 11;
        short s = 20677;
        float f1 = -1.424F;

        for (i = 10; i < 397; ++i) {
            vMeth1();
            s += (short) -6;
            Test0936.iFld = 69;
            i1 += (i * i1);
            i8 = 1;
            while (++i8 < 4) {
                Test0936.iArrFld[i8 + 1] >>= i9;
                i1 *= i8;
                f1 *= i10;
                i10 += i8;
                Test0936.iArrFld[i8 - 1] |= i9;
                for (i11 = 1; 1 < i11; --i11) {
                    Test0936.instanceCount += i1;
                    i1 += i9;
                    i10 >>= (int) Test0936.instanceCount;
                }
            }
        }
        long meth_res = i + i1 + s + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(double d) {

        int i13 = 151;
        int i14 = -13919;
        int i15 = -69;
        int i16 = 59249;
        int i17 = -4;
        int i18 = 112;
        int[] iArr = new int[N];
        float f2 = 101.889F;
        byte by = -108;
        short s1 = -1989;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, -126);
        FuzzerUtils.init(lArr, -1109216309274379570L);

        iArr[(Test0936.iFld >>> 1) % N] += (int) (((-lMeth()) * Test0936.iFld) + Test0936.instanceCount);
        for (i13 = 292; 4 < i13; i13 -= 2) {
            Test0936.iFld >>= i13;
            Test0936.instanceCount *= i14;
            for (i15 = i13; i15 < 11; ++i15) {
                d = f2;
                Test0936.instanceCount *= i13;
                lArr[i13 - 1] += by;
                Test0936.instanceCount >>= 41468;
                s1 <<= (short) i14;
                for (i17 = 1; i17 < 1; i17++) {
                    i18 -= (int) d;
                    i14 >>= -8;
                    Test0936.iFld = i17;
                    Test0936.iFld >>= -4;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) + by + s1 +
                i17 + i18 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0936 _instance = new Test0936();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i19 = -113, i20 = 3, i21 = 10, i22 = -212;
        boolean b = false;
        float f3 = -101.766F;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 2.609F);

        vMeth(Test0936.dFld);
        Test0936.instanceCount += (long) fFld;
        for (i19 = 7; i19 < 217; i19++) {
            Test0936.dFld += i19;
            b = b;
            for (f3 = i19; f3 < 120; f3++) {
                fArr[i19] -= 0.12F;
                i22 = 1;
                do {
                    Test0936.byFld += (byte) i22;
                    i20 -= i22;
                    Test0936.sFld += (short) (i22 ^ i21);
                    Test0936.iFld += i22;
                    Test0936.iFld += (int) Test0936.dFld;
                    i20 = i20;
                    try {
                        i20 = (i21 % -1958891753);
                        Test0936.iFld = (i19 / Test0936.iFld);
                        Test0936.iFld = (-36828 % Test0936.iArrFld[i19 - 1]);
                    } catch (ArithmeticException a_e) {
                    }
                    switch ((int) ((f3 % 7) + 62)) {
                        case 62:
                            i21 = (int) Test0936.dFld;
                            fArr[i22] = 1115923611519178057L;
                            fFld = Test0936.instanceCount;
                            break;
                        case 63:
                            Test0936.iArrFld[i19] = i19;
                            break;
                        case 64:
                            i21 -= (int) f3;
                            Test0936.instanceCount ^= Test0936.iFld;
                            break;
                        case 65:
                            i20 += (((i22 * f3) + Test0936.instanceCount) - Test0936.instanceCount);
                            i20 *= (int) Test0936.instanceCount;
                            Test0936.instanceCount += (i22 * i22);
                            fArr[i19 + 1] -= i21;
                            break;
                        case 66:
                            i20 = i22;
                            i21 = i21;
                        case 67:
                            i21 -= (int) Test0936.instanceCount;
                            b = b;
                        case 68:
                            i20 = (int) Test0936.instanceCount;
                            break;
                        default:
                            i21 = i19;
                    }
                } while (++i22 < 1);
            }
        }

        FuzzerUtils.out.println("i19 i20 b = " + i19 + "," + i20 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("f3 i21 i22 = " + Float.floatToIntBits(f3) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0936.instanceCount Test0936.iFld Test0936.dFld = " + Test0936.instanceCount + "," + Test0936.iFld +
                "," + Double.doubleToLongBits(Test0936.dFld));
        FuzzerUtils.out.println("fFld Test0936.byFld Test0936.sFld = " + Float.floatToIntBits(fFld) + "," + Test0936.byFld + "," +
                Test0936.sFld);
        FuzzerUtils.out.println("Test0936.iArrFld = " + FuzzerUtils.checkSum(Test0936.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
