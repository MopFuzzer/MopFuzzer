// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0800 {

    public static final int N = 400;

    public static long instanceCount = 1867617121L;
    public static double dFld = 78.14810;
    public static volatile byte byFld = 75;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public int iFld = -57707;

    public static int iMeth1(int i1, int i2, int i3) {

        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, 8);

        iArr1[(-26492 >>> 1) % N] |= (int) (i2 + (--Test0800.instanceCount));
        i2 += (int) (Test0800.instanceCount++);
        long meth_res = i1 + i2 + i3 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i5) {

        int i6 = -6;
        int i7 = -35457;
        int i8 = 122;
        int i9 = 2;
        int i10 = 16380;
        int[][] iArr2 = new int[N][N];

        FuzzerUtils.init(iArr2, -9637);

        i5 += (int) -46.488F;
        for (i6 = 17; i6 < 304; ++i6) {
            byte by = -84;
            by *= (byte) 4;
            i5 = 184;
            i7 = (int) Test0800.instanceCount;
            i5 *= (int) -64L;
            i8 = 1;
            while (++i8 < 6) {
                i5 += (int) (-15027L + (i8 * i8));
                iArr2[i8 + 1][i8] = (int) Test0800.instanceCount;
                Test0800.instanceCount += i8;
                iArr2[i6 - 1][i6 + 1] = (int) Test0800.instanceCount;
            }
        }
        for (i9 = 18; i9 < 358; ++i9) {
            Test0800.instanceCount -= i5;
            Test0800.instanceCount += 94;
            Test0800.byFld += (byte) (199 + (i9 * i9));
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i4) {


        vMeth1(i4);
        vMeth_check_sum += i4;
    }

    public static int iMeth(float f) {

        int i = 23363;
        int i11 = 12;
        int i12 = 13;
        int i13 = 249;
        int i14 = -61369;
        int i15 = 10069;
        int i16 = 47593;
        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, 41);

        i *= (i--);
        iArr[(i >>> 1) % N] = (int) (((-27990 + i) * Math.sqrt(0.66326)) - (-(i * i)));
        i = (int) ((++Test0800.instanceCount) + ((++Test0800.instanceCount) + (i - Test0800.instanceCount)));
        Test0800.instanceCount &= ((--i) - i);
        i /= -11;
        i >>= (int) (Test0800.instanceCount++);
        i = iMeth1(12, (int) ((-63763 - Math.min(i, i)) % (((long) (--Test0800.dFld)) | 1)), (int) (Float.intBitsToFloat(153)
                - (i * i)));
        vMeth(i);
        Test0800.instanceCount = i;
        for (i11 = 15; i11 < 389; i11++) {
            i13 = 1;
            do {
                for (i14 = 1; 1 > i14; ++i14) {
                    Test0800.dFld = f;
                }
                i15 += i13;
                i16 -= (int) f;
            } while (++i13 < 5);
        }
        long meth_res = Float.floatToIntBits(f) + i + i11 + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0800 _instance = new Test0800();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f1 = -2.702F;
        int i17 = 12;
        int i18 = -26;
        int i19 = 12;
        int i20 = 2;
        int i21 = 14;
        int i22 = -2;
        int i23 = -58225;
        int i24 = -3;
        int[] iArr3 = new int[N];
        short s = -18535;
        boolean b = true;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 0.52019);
        FuzzerUtils.init(iArr3, -1);

        iFld += (int) ((long) (iMeth(-19.586F) + f1) & iFld);
        iFld = iFld;
        for (i17 = 14; i17 < 307; i17++) {
            Test0800.instanceCount += (i17 * i17);
            for (i19 = 1; 86 > i19; ++i19) {
                for (i21 = i19; i21 < 2; i21++) {
                    iFld = i19;
                }
                for (i23 = 1; i23 < 2; i23++) {
                    iFld += i24;
                    i18 += (i23 * i23);
                    iFld += (int) (79.753F + (i23 * i23));
                    switch (((i19 % 4) * 5) + 8) {
                        case 21:
                        case 20:
                            i24 += (i23 * i23);
                            switch ((i17 % 1) + 55) {
                                case 55:
                                default:
                                    Test0800.byFld += (byte) -96L;
                                    s += (short) Test0800.instanceCount;
                                    dArr[i23 + 1] += s;
                                    iArr3[i17] <<= (int) Test0800.instanceCount;
                            }
                            break;
                        case 26:
                            switch (((i23 >>> 1) % 7) + 68) {
                                case 68:
                                    Test0800.byFld += (byte) (((i23 * Test0800.instanceCount) + f1) - iFld);
                                    i22 >>= i19;
                                    i18 -= (int) 1190684879675296151L;
                                    i20 -= i21;
                                case 69:
                                    switch ((i23 % 1) + 47) {
                                        case 47:
                                            Test0800.instanceCount *= i17;
                                            iArr3[i23] -= -18013;
                                            switch (((i23 % 2) * 5) + 74) {
                                                case 75:
                                                    i22 = (int) Test0800.instanceCount;
                                                case 76:
                                                    i18 -= i21;
                                                    b = b;
                                                    break;
                                            }
                                            break;
                                    }
                                    break;
                                case 70:
                                    Test0800.instanceCount = s;
                                    break;
                                case 71:
                                    i18 += (int) Test0800.instanceCount;
                                    break;
                                case 72:
                                    iFld = i19;
                                    break;
                                case 73:
                                    i18 *= iFld;
                                    break;
                                case 74:
                                    i20 >>= (int) Test0800.instanceCount;
                                    break;
                            }
                            break;
                        case 17:
                            if (b) break;
                            break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f1 i17 i18 = " + Float.floatToIntBits(f1) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("s b dArr = " + s + "," + (b ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0800.instanceCount iFld Test0800.dFld = " + Test0800.instanceCount + "," + iFld + "," +
                Double.doubleToLongBits(Test0800.dFld));
        FuzzerUtils.out.println("Test0800.byFld = " + Test0800.byFld);

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
