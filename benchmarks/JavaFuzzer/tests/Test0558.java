// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test0558 {

    public static final int N = 400;

    public static volatile long instanceCount = -246L;
    public static int iFld = -14705;
    public static float fFld = 0.828F;
    public static double dFld = 0.104767;
    public static short sFld = 9316;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public int iFld1 = -2;

    public static long lMeth(int i6, short s) {

        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, -75);

        iArr1[(Test0558.iFld >>> 1) % N] += (int) Test0558.instanceCount;
        long meth_res = i6 + s + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i1, long l) {

        int i2 = -12153, i3 = 0, i4 = 10840, i5 = -203, i7 = 109, i8 = 200;
        short s1 = 2075;

        for (i2 = 4; i2 < 351; ++i2) {
            for (i4 = 5; i4 > 1; i4 -= 2) {
                i5 += i2;
                l += lMeth(Test0558.iFld, s1);
                l >>= l;
                l = 58629;
                Test0558.fFld *= i4;
                i1 += (int) Test0558.fFld;
            }
            Test0558.dFld -= Test0558.dFld;
            i1 -= -208;
            i3 = (int) l;
            for (i7 = 1; i7 < 5; i7++) {
                i1 += (((i7 * Test0558.fFld) + i4) - l);
                l = i5;
                i3 = i2;
            }
        }
        vMeth_check_sum += i1 + l + i2 + i3 + i4 + i5 + s1 + i7 + i8;
    }

    public static int iMeth() {

        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, -28);

        Test0558.instanceCount = (Math.max(Math.min(Test0558.iFld, Test0558.iFld), iArr[(Test0558.iFld >>> 1) % N]) - 1L);
        vMeth(Test0558.iFld, Test0558.instanceCount);
        long meth_res = FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0558 _instance = new Test0558();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 134;
        int i9 = 20;
        int i10 = -9;
        int i11 = 227;
        int i12 = 21160;
        int i13 = -9;
        int i14 = 56863;
        int[] iArr2 = new int[N];
        int[][] iArr3 = new int[N][N];
        byte by = -127;
        byte[] byArr = new byte[N];
        double d = 127.119460;

        FuzzerUtils.init(byArr, (byte) -69);
        FuzzerUtils.init(iArr2, -64282);
        FuzzerUtils.init(iArr3, -119);

        i = 1;
        while (++i < 361) {
            byArr[i] <<= (byte) iMeth();
            Test0558.iFld += (i ^ Test0558.instanceCount);
        }
        Test0558.iFld %= (int) ((long) (Test0558.fFld) | 1);
        Test0558.fFld += i;
        Test0558.iFld = by;
        Test0558.iFld -= -137;
        Test0558.iFld = (int) Test0558.instanceCount;
        i9 = 1;
        while (++i9 < 179) {
            switch ((i9 % 5) + 49) {
                case 49:
                    i10 = 1;
                    do {
                        switch (((i10 % 10) * 5) + 106) {
                            case 111:
                                for (i11 = 1; i11 < 1; i11++) {
                                    Test0558.iFld = i11;
                                    Test0558.instanceCount = i12;
                                    iArr2[i10] = (int) -18.1012F;
                                    iArr2[i9 - 1] = i12;
                                    Test0558.instanceCount = i11;
                                    Test0558.iFld += (i11 ^ Test0558.instanceCount);
                                    Test0558.instanceCount += (i11 * by);
                                }
                                i12 += (((i10 * i12) + i) - Test0558.sFld);
                            case 148:
                                i12 += (int) (0.813F + (i10 * i10));
                                Test0558.iFld >>= Test0558.iFld;
                                break;
                            case 140:
                                Test0558.fFld += i10;
                                i12 += i10;
                                for (i13 = i9; 1 > i13; i13++) {
                                    Test0558.iFld *= i14;
                                    i12 = (int) d;
                                    Test0558.fFld += (i13 + Test0558.instanceCount);
                                    iFld1 += (((i13 * Test0558.instanceCount) + Test0558.fFld) - i9);
                                }
                                break;
                            case 107:
                                iArr2[i10 - 1] += by;
                                break;
                            case 138:
                                Test0558.iFld -= 6171;
                                break;
                            case 131:
                                iArr2[i10] = i;
                                break;
                            case 141:
                                Test0558.instanceCount += i10;
                                break;
                            case 123:
                                i12 *= (int) Test0558.fFld;
                                break;
                            case 137:
                                Test0558.instanceCount += i11;
                                break;
                            case 155:
                            default:
                                iArr2[i9 - 1] += (int) Test0558.fFld;
                        }
                    } while (++i10 < 140);
                case 50:
                    iArr3 = FuzzerUtils.int2array(N, (int) -58);
                    break;
                case 51:
                    Test0558.instanceCount += (i9 | Test0558.instanceCount);
                    break;
                case 52:
                case 53:
                    iArr3[i9][i9 - 1] = -7095;
                    break;
            }
        }

        FuzzerUtils.out.println("i by i9 = " + i + "," + by + "," + i9);
        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 d = " + i13 + "," + i14 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("byArr iArr2 iArr3 = " + FuzzerUtils.checkSum(byArr) + "," +
                FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0558.instanceCount Test0558.iFld Test0558.fFld = " + Test0558.instanceCount + "," + Test0558.iFld +
                "," + Float.floatToIntBits(Test0558.fFld));
        FuzzerUtils.out.println("Test0558.dFld Test0558.sFld iFld1 = " + Double.doubleToLongBits(Test0558.dFld) + "," + Test0558.sFld +
                "," + iFld1);

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
