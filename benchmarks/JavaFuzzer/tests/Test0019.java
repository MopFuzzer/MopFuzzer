// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test0019 {

    public static final int N = 400;

    public static volatile long instanceCount = -7L;
    public static float fFld = 0.649F;
    public static double dFld = -3.467;
    public static long lFld = -150L;
    public static volatile boolean bFld = false;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public int iFld = -14;
    public float[] fArrFld = new float[N];
    public volatile long[] lArrFld = new long[N];

    public static void main(String[] strArr) {

        try {
            Test0019 _instance = new Test0019();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth1(short s, long l3) {

        int i5 = -56843;
        int i6 = 48;
        int i7 = 67;
        int[] iArr2 = new int[N];
        float f2 = 85.636F;
        boolean b = true;

        FuzzerUtils.init(iArr2, -49);

        iArr2[(iFld >>> 1) % N] = (int) Test0019.fFld;
        for (i5 = 2; i5 < 194; i5++) {
            Test0019.instanceCount *= iFld;
            switch (((i5 % 8) * 5) + 60) {
                case 94:
                    l3 = 5;
                    for (f2 = 8; f2 > 1; --f2) {
                        l3 >>>= Test0019.instanceCount;
                        iFld ^= -53773;
                        iFld = i5;
                        iArr2[(int) (f2)] += i7;
                        iArr2 = iArr2;
                        i6 *= i6;
                        i6 -= i5;
                        if (b) continue;
                        i6 = i5;
                    }
                    break;
                case 84:
                    iFld += i5;
                    break;
                case 88:
                    iFld = iFld;
                    break;
                case 100:
                    i7 *= (int) -1.116483;
                    break;
                case 66:
                    l3 ^= i5;
                    break;
                case 64:
                    if (b) continue;
                    break;
                case 61:
                    try {
                        iArr2[i5 - 1] = (i7 % i7);
                        i7 = (49759 % iFld);
                        iArr2[i5] = (i5 % i6);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 99:
                    iArr2[i5 - 1] += (int) 10.943F;
                    break;
            }
        }
        vMeth1_check_sum += s + l3 + i5 + i6 + Float.floatToIntBits(f2) + i7 + (b ? 1 : 0) +
                FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth(long l1, long l2) {

        int i8 = 128;
        int i9 = -7;
        int i10 = -11;
        int i11 = -28670;
        int i12 = 131;
        int i13 = -59364;
        int i14 = -1;
        int i15 = -10;
        int i16 = -11;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, 63);

        iFld -= (int) ((iArr1[(iFld >>> 1) % N] + (iFld / (iFld | 1))) * (Test0019.fFld--));
        vMeth1((short) (8142), Test0019.instanceCount);
        l1 <<= iFld;
        for (i8 = 20; i8 < 393; i8++) {
            Test0019.dFld *= l1;
            iFld = i9;
            lArrFld[i8] += i9;
            i10 = 1;
            do {
                i9 >>>= i10;
            } while (++i10 < 5);
        }
        for (i11 = 3; 335 > i11; ++i11) {
            for (i13 = i11; 5 > i13; i13++) {
                Test0019.fFld = (float) Test0019.dFld;
                for (i15 = 1; 1 > i15; i15++) {
                    i9 = -166;
                    lArrFld = lArrFld;
                }
            }
        }
        long meth_res = l1 + l2 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void vMeth(int i2, float f1) {

        int i4 = 0;
        int i17 = 241;
        int i18 = 35224;
        int[] iArr = new int[N];
        byte by = 21;
        double d1 = 2.88652;

        FuzzerUtils.init(iArr, 2);

        for (int i3 : iArr) {
            i4 = 1;
            do {
                by += (byte) (i4 * i4);
                d1 = 1;
                do {
                    iArr[i4 - 1] = i3;
                    Test0019.instanceCount += (long) (((d1 * i4) + i3) - f1);
                    iFld |= (int) (((1 * (i2 % (Test0019.instanceCount | 1))) * i4) + Math.max(i4, (int) (d1 - i2)));
                    Test0019.instanceCount = (--lArrFld[(int) (d1)]);
                    f1 += ((long) (by *= (byte) (-89.526F - Math.abs(Test0019.fFld))) >>> ((i3--) - (lArrFld[i4] = 20873)));
                    if (iArr[(int) (d1 + 1)] >= (((51859 << iFld) - by) * iMeth(Test0019.instanceCount, 12L))) continue;
                    iFld += (int) (d1 + i2);
                } while (++d1 < 1);
                Test0019.dFld *= -9;
                for (i17 = 1; i17 < 1; i17++) {
                    Test0019.instanceCount *= i4;
                    Test0019.lFld <<= -11;
                }
            } while (++i4 < 4);
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f1) + i4 + by + Double.doubleToLongBits(d1) + i17 + i18 +
                FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i = 211;
        int i1 = 8;
        int i19 = 109;
        int i20 = -243;
        int i21 = -8;
        int i22 = 8533;
        int i23 = -1;
        int i24 = 253;
        int i25 = -1;
        int i26 = -20003;
        int i27 = 107;
        int[] iArr3 = new
                int[N];
        float f = -1.726F;
        double d = 0.80765;

        FuzzerUtils.init(iArr3, -65);

        fArrFld[(iFld >>> 1) % N] += (iFld--);
        for (i = 6; i < 381; ++i) {
            short s1 = 25341;
            f -= (float) d;
            vMeth(i1, Test0019.fFld);
            Test0019.instanceCount <<= i;
            s1 += (short) i1;
            i19 = 1;
            do {
                for (i20 = 1; i20 < 1; i20++) {
                    fArrFld[i + 1] -= i;
                    iFld += i20;
                    i1 += i19;
                    Test0019.fFld = iFld;
                }
                for (i22 = 1; i22 < 1; i22++) {
                    fArrFld[i19] += Test0019.instanceCount;
                    Test0019.bFld = false;
                    if (Test0019.bFld) break;
                    d = Test0019.lFld;
                }
                for (i24 = i; 1 > i24; i24++) {
                    i23 -= -82;
                    iFld = i25;
                    i23 += (i24 * i24);
                    s1 += (short) i24;
                    Test0019.instanceCount -= i23;
                    iArr3 = iArr3;
                    Test0019.lFld += i24;
                }
                if (Test0019.bFld) continue;
                for (i26 = 1; i26 < 1; ++i26) {
                    i1 = i1;
                    i1 += -54100;
                    f -= f;
                }
            } while (++i19 < 67);
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d i19 i20 = " + Double.doubleToLongBits(d) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 iArr3 = " + i27 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0019.instanceCount iFld Test0019.fFld = " + Test0019.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0019.fFld));
        FuzzerUtils.out.println("Test0019.dFld Test0019.lFld Test0019.bFld = " + Double.doubleToLongBits(Test0019.dFld) + "," +
                Test0019.lFld + "," + (Test0019.bFld ? 1 : 0));
        FuzzerUtils.out.println("fArrFld lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," +
                FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
