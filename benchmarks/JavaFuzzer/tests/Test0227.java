// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0227 {

    public static final int N = 400;

    public static long instanceCount = -27194L;
    public static double dFld = -2.85044;
    public static volatile boolean bFld = true;
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0227.lArrFld, -129L);
    }

    public static void vMeth2(int i9, int i10) {

        float f1 = -2.837F;
        int i11 = -3, i12 = -20, i13 = 9, i14 = 83, i15 = 178, i16 = -78, i17 = 14, i18 = -151, i19 = 29127;
        boolean b = true;

        i10 = (int) f1;
        for (i11 = 3; i11 < 235; ++i11) {
            if (i11 != 0) {
                vMeth2_check_sum += i9 + i10 + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + i15 + i16 + (b ? 1 :
                        0) + i17 + i18 + i19;
                return;
            }
            i12 = (int) Test0227.instanceCount;
        }
        for (i13 = 7; i13 < 132; ++i13) {
            i9 = i14;
            for (i15 = 1; i15 < 13; ++i15) {
                if (b) break;
                Test0227.instanceCount += (i15 * i15);
                if (b) continue;
            }
        }
        for (i17 = 2; i17 < 143; ++i17) {
            Test0227.instanceCount = i19;
            if (b) continue;
            i9 += (i17 ^ i19);
            i12 >>>= (int) Test0227.instanceCount;
        }
        vMeth2_check_sum += i9 + i10 + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + i15 + i16 + (b ? 1 : 0) + i17
                + i18 + i19;
    }

    public static void vMeth1(int i4, long l, int i5) {

        int i6 = 158;
        int i7 = 8282;
        int i8 = 32832;
        int i20 = -53496;
        int i21 = -4;
        int[] iArr = new int[N];
        float f2 = -58.537F;
        float[] fArr = new float[N];
        byte by = -7;
        boolean b1 = true, b2 = true;

        FuzzerUtils.init(iArr, -51693);
        FuzzerUtils.init(fArr, -29.478F);

        for (i6 = 2; 209 > i6; i6++) {
            i7 = (int) Math.abs(l);
            i7 -= (int) 1.156F;
            i5 &= ((iArr[i6] + (-i7)) * iArr[i6 - 1]);
        }
        i7 = (i8--);
        Test0227.dFld += (i4--);
        vMeth2(250, 244);
        i20 <<= i5;
        Test0227.dFld = -31.113F;
        f2 *= i7;
        switch (((11487 >>> 1) % 2) + 43) {
            case 43:
                i21 += by;
                for (float f3 : fArr) {
                    i21 <<= -8323;
                    f3 *= i7;
                }
                break;
            case 44:
                i20 >>= i21;
                break;
            default:
                b1 = b2;
        }
        vMeth1_check_sum += i4 + l + i5 + i6 + i7 + i8 + i20 + Float.floatToIntBits(f2) + i21 + by + (b1 ? 1 : 0) + (b2
                ? 1 : 0) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i2, int i3, float f) {

        int i22 = 38;
        int i23 = 207;
        int i24 = -171;
        int i25 = 59359;
        int[] iArr1 = new int[N];
        float f4 = -26.553F;

        FuzzerUtils.init(iArr1, 65521);

        vMeth1(i2, -9L, 29948);
        i2 += (int) Test0227.instanceCount;
        i22 = 1;
        while (++i22 < 257) {
            Test0227.lArrFld[i22] = i3;
            Test0227.instanceCount = i2;
        }
        Test0227.dFld -= 98;
        if (Test0227.bFld) {
            Test0227.instanceCount >>= -179;
            i2 -= i3;
            iArr1[(i3 >>> 1) % N] = (int) Test0227.instanceCount;
        } else if (Test0227.bFld) {
            for (i23 = 4; i23 < 211; ++i23) {
                Test0227.instanceCount = i3;
                for (f4 = 8; f4 > 1; --f4) {
                    Test0227.instanceCount += i3;
                    Test0227.instanceCount = i23;
                }
            }
        } else if (Test0227.bFld) {
            Test0227.instanceCount = Test0227.instanceCount;
        }
        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f) + i22 + i23 + i24 + Float.floatToIntBits(f4) + i25 +
                FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0227 _instance = new Test0227();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -3;
        int i1 = 43;
        int i26 = -5;
        int i27 = -41;
        int i28 = 47358;
        int i29 = -14522;
        int i30 = 226;
        int i31 = 42170;
        int i32 = 72;
        int i33 = 1;
        int i34 = 205;
        int i35 = -5;
        int i36 = -248;
        int i37 = 12;
        int i38 = -12;
        int i39 = 29944;
        int[] iArr2 = new int[N];
        float f5 = 59.242F;
        byte by1 = 21;
        short s = 29909;

        FuzzerUtils.init(iArr2, -10);

        for (i = 12; 388 > i; ++i) {
            i1 += i;
            i1 += i;
            vMeth(i, i, f5);
            iArr2 = iArr2;
            if (Test0227.bFld) break;
        }
        for (i26 = 9; 287 > i26; ++i26) {
            for (i28 = 90; i28 > 3; i28 -= 2) {
                i27 = i1;
                i30 -= by1;
                i27 = -8;
            }
            f5 = i1;
            i30 *= (int) Test0227.dFld;
            i29 = i;
        }
        for (i31 = 4; i31 < 363; ++i31) {
            iArr2[i31 - 1] = (int) 27996L;
            Test0227.lArrFld = FuzzerUtils.long1array(N, (long) 205L);
            i33 = 70;
            do {
                iArr2[i33] &= i26;
                try {
                    i32 = (-1122598961 / i29);
                    i1 = (i31 % 137);
                    i30 = (i33 % 994829193);
                } catch (ArithmeticException a_e) {
                }
                i1 -= (int) f5;
                i29 ^= i33;
            } while ((i33 -= 3) > 0);
        }
        for (i34 = 1; i34 < 222; i34++) {
            for (i36 = i34; i36 < 114; ++i36) {
                i29 = i27;
                i32 = s;
                for (i38 = 1; i38 < 1; ++i38) {
                    i35 ^= (int) Test0227.instanceCount;
                }
                f5 -= Test0227.instanceCount;
                Test0227.instanceCount += (((i36 * f5) + i26) - Test0227.instanceCount);
            }
        }

        FuzzerUtils.out.println("i i1 f5 = " + i + "," + i1 + "," + Float.floatToIntBits(f5));
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 by1 = " + i29 + "," + i30 + "," + by1);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 i35 i36 = " + i34 + "," + i35 + "," + i36);
        FuzzerUtils.out.println("i37 s i38 = " + i37 + "," + s + "," + i38);
        FuzzerUtils.out.println("i39 iArr2 = " + i39 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0227.instanceCount Test0227.dFld Test0227.bFld = " + Test0227.instanceCount + "," +
                Double.doubleToLongBits(Test0227.dFld) + "," + (Test0227.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0227.lArrFld = " + FuzzerUtils.checkSum(Test0227.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
