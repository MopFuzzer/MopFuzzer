// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0608 {

    public static final int N = 400;

    public static long instanceCount = -6465469459975881872L;
    public static short sFld = -2312;
    public static volatile float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0608.fArrFld, 0.998F);
    }

    public static void vMeth(int i2, int i3, long l1) {

        int i4 = -7268, i5 = 4, i6 = 67, i7 = -143;
        float f1 = -71.887F, f2 = -38.729F;

        for (i4 = 1; i4 < 309; i4++) {
            i2 &= (int) l1;
            f1 = i5;
            for (f2 = 1; f2 < 5; f2++) {
                i5 += (int) f2;
            }
            i7 = 1;
            do {
                i5 = i6;
                i6 *= i6;
                Test0608.instanceCount >>= i7;
                switch ((i7 % 6) + 45) {
                    case 45:
                        i2 -= i4;
                        break;
                    case 46:
                        Test0608.sFld *= (short) i7;
                        break;
                    case 47:
                        i2 += i6;
                        break;
                    case 48:
                        i3 -= i7;
                        break;
                    case 49:
                        i3 = i6;
                        break;
                    case 50:
                        if (i6 != 0) {
                            vMeth_check_sum += i2 + i3 + l1 + i4 + i5 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2)
                                    + i6 + i7;
                            return;
                        }
                }
            } while (++i7 < 5);
        }
        vMeth_check_sum += i2 + i3 + l1 + i4 + i5 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i6 + i7;
    }

    public static long lMeth(int i1, long l) {

        int i8 = -177;
        int i9 = -7;
        int i10 = -4;
        int i11 = 11;
        int[][] iArr = new int[N][N];
        float f3 = 9.877F;
        boolean b = false;
        boolean[] bArr = new boolean[N];
        long[][] lArr = new long[N][N], lArr1 = new long[N][N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, 10);
        FuzzerUtils.init(lArr, 2029213804L);
        FuzzerUtils.init(lArr1, -9168678704099639140L);

        vMeth(i1, -18155, 1189252873L);
        Test0608.instanceCount *= i1;
        i1 -= i8;
        switch (((i1 >>> 1) % 2) + 26) {
            case 26:
                i9 = 1;
                while ((i9 += 3) < 250) {
                    bArr = bArr;
                    iArr[i9 + 1][i9] >>= i1;
                    f3 += Test0608.instanceCount;
                    for (i10 = 19; i10 > i9; i10--) {
                        b = b;
                        b = b;
                        lArr = lArr1;
                        iArr[i10][i10] >>>= i1;
                        Test0608.fArrFld[i9 - 1] += i1;
                    }
                }
                break;
            case 27:
                f3 -= Test0608.instanceCount;
                break;
        }
        long meth_res = i1 + l + i8 + i9 + Float.floatToIntBits(f3) + i10 + i11 + (b ? 1 : 0) +
                FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth(int i) {

        byte by = -31;
        float f = -54.56F;
        double d = 115.95850;
        double[] dArr = new double[N];
        int[] iArr1 = new int[N];
        long[] lArr2 = new long[N];

        FuzzerUtils.init(iArr1, -156);
        FuzzerUtils.init(dArr, 24.113311);
        FuzzerUtils.init(lArr2, -12L);

        by += (byte) (--i);
        f += Float.intBitsToFloat((int) (-lMeth(i, Test0608.instanceCount)));
        d = i;
        i *= by;
        for (int i12 : iArr1) {
            i12 += by;
            d += i12;
            by -= (byte) 248L;
            i += i12;
            Test0608.instanceCount -= (long) f;
            Test0608.sFld -= (short) Test0608.instanceCount;
            i12 = (int) -63191L;
            i += (int) Test0608.instanceCount;
        }
        i += i;
        lArr2[(i >>> 1) % N] -= i;
        long meth_res = i + by + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0608 _instance = new Test0608();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i13 = -97;

        iMeth(i13);

        FuzzerUtils.out.println("i13 = " + i13);

        FuzzerUtils.out.println("Test0608.instanceCount Test0608.sFld Test0608.fArrFld = " + Test0608.instanceCount + "," + Test0608.sFld +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0608.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
