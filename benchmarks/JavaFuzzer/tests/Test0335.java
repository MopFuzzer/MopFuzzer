// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0335 {

    public static final int N = 400;

    public static long instanceCount = -5645624506356173928L;
    public static int iFld = 13;
    public static boolean bFld = true;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1) {

        boolean b = true;
        int i5 = 119, i6 = 22404, i7 = -85, i8 = -56277, i9 = 7, i10 = 9;
        double d = 65.5238;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 8L);

        Test0335.iFld ^= 59412;
        for (long l : lArr) {
            Test0335.iFld += Test0335.iFld;
        }
        Test0335.instanceCount -= Test0335.iFld;
        Test0335.iFld *= Test0335.iFld;
        Test0335.iFld >>= 208;
        Test0335.bFld = b;
        lArr[(Test0335.iFld >>> 1) % N] *= Test0335.instanceCount;
        for (i5 = 2; i5 < 298; i5++) {
            for (i7 = 1; i7 < 6; i7++) {
                f1 -= Test0335.iFld;
            }
            for (i9 = 1; i9 < 6; i9++) {
                i8 += i9;
            }
            if (Test0335.bFld) break;
            d -= i10;
        }
        long meth_res = Float.floatToIntBits(f1) + (b ? 1 : 0) + i5 + i6 + i7 + i8 + i9 + i10 +
                Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1() {

        int i4 = 119, i11 = -236;

        i4 += (int) (i4 - (iMeth(-29.62F) + -233L));
        Test0335.iFld = Test0335.iFld;
        i11 = 1;
        while (++i11 < 320) {
            i4 += i11;
            Test0335.bFld = Test0335.bFld;
        }
        i4 += 84;
        vMeth1_check_sum += i4 + i11;
    }

    public static void vMeth() {

        int i2 = 4, i3 = -77, i12 = -49333, i13 = -47216, i14 = 72, i15 = 93;
        short s1 = 21152;
        short[] sArr = new short[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -89.114477);
        FuzzerUtils.init(sArr, (short) 13746);

        for (i2 = 16; i2 < 285; ++i2) {
            vMeth1();
            Test0335.iFld <<= Test0335.iFld;
            for (i12 = 1; i12 < 6; i12++) {
                switch ((i12 % 1) + 109) {
                    case 109:
                        i3 -= i3;
                        break;
                    default:
                        for (i14 = 1; i14 < 2; ++i14) {
                            switch ((i14 % 2) + 107) {
                                case 107:
                                    i15 /= (int) (i14 | 1);
                                    i15 += i14;
                                    dArr[i14] += Test0335.instanceCount;
                                    break;
                                case 108:
                                    Test0335.instanceCount = s1;
                                    i3 = (int) 18795L;
                                    sArr[i2 + 1] *= (short) Test0335.instanceCount;
                                    break;
                            }
                            i13 = i12;
                        }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i12 + i13 + i14 + i15 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                FuzzerUtils.checkSum(sArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0335 _instance = new Test0335();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -11;
        int i1 = -20747;
        int i16 = -10;
        int i17 = -33550;
        int i18 = 58337;
        int i19 = 10;
        int i20 = 149;
        int i21 = 39737;
        int i22 = -54987;
        int i23 = 4;
        int[] iArr = new
                int[N];
        byte by = 73;
        short s = -9500;
        double d1 = -9.118200;
        float f2 = 1.780F;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(iArr, 19411);
        FuzzerUtils.init(fArr, -2.336F);

        for (i = 7; i < 136; i++) {
            float f = 2.855F;
            i1 = (int) (((by >> s) % (((long) (Test0335.instanceCount + f)) | 1)) * ((i + -30812) + (i1++)));
            iArr[i + 1] = (int) (((-(Test0335.instanceCount - Test0335.instanceCount)) + Math.abs(14313L)) - (-i));
            vMeth();
            for (i16 = 12; i16 < 194; i16++) {
                for (i18 = 1; i18 < 2; ++i18) {
                    f = s;
                    iArr[i18 + 1] -= (int) -7L;
                    i17 += (i18 * i18);
                    i19 += (int) (-62925L + (i18 * i18));
                    i19 += (-211 + (i18 * i18));
                    Test0335.instanceCount = (long) d1;
                }
                f += i18;
                for (f2 = 1; f2 < 2; ++f2) {
                    if (Test0335.bFld) continue;
                    f *= f2;
                    i20 += (int) Test0335.instanceCount;
                    Test0335.instanceCount -= 5424174443472051581L;
                    i17 = i17;
                    i1 = i20;
                    i21 = (int) 63466L;
                    iArr[(int) (f2)] = -205;
                }
                d1 -= s;
            }
            i22 = 194;
            do {
                i23 = 1;
                do {
                    if (Test0335.bFld) {
                        switch (((i % 2) * 5) + 23) {
                            case 31:
                                f += (((i23 * Test0335.instanceCount) + f) - Test0335.iFld);
                                Test0335.instanceCount = i19;
                                f *= s;
                            case 30:
                                fArr[i22][i22 + 1] += Test0335.iFld;
                                break;
                            default:
                                i19 = i22;
                        }
                    } else if (true) {
                        s *= by;
                    }
                } while (++i23 < 1);
            } while (--i22 > 0);
        }

        FuzzerUtils.out.println("i i1 by = " + i + "," + i1 + "," + by);
        FuzzerUtils.out.println("s i16 i17 = " + s + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 d1 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("f2 i20 i21 = " + Float.floatToIntBits(f2) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 iArr = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0335.instanceCount Test0335.iFld Test0335.bFld = " + Test0335.instanceCount + "," + Test0335.iFld +
                "," + (Test0335.bFld ? 1 : 0));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
