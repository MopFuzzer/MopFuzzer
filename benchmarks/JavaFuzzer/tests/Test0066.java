// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0066 {

    public static final int N = 400;

    public static long instanceCount = -35515L;
    public static volatile int iFld = -6;
    public static boolean bFld = true;
    public static long[] lArrFld = new long[N];
    public static volatile int[][] iArrFld = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0066.lArrFld, -1550847640608828669L);
        FuzzerUtils.init(Test0066.iArrFld, 232);
    }

    public volatile int iFld1 = -11;
    public short sFld = -12781;
    public volatile float[] fArrFld = new float[N];

    public static void vMeth2(int i2, int i3) {

        int i4 = -6, i5 = -10, i6 = -12, i7 = 29605;
        byte by2 = 4;
        boolean b = false;

        i3 *= i2;
        for (i4 = 239; 6 < i4; i4 -= 3) {
            for (i6 = 1; i6 < 20; i6++) {
                i5 += (i6 * i7);
                i5 += i3;
                switch ((i6 % 3) + 80) {
                    case 80:
                    case 81:
                        Test0066.lArrFld[i4 - 1] *= 15999;
                        Test0066.instanceCount >>= i7;
                        i5 ^= (int) Test0066.instanceCount;
                        i2 |= 29120;
                        break;
                    case 82:
                        switch ((i6 % 7) + 37) {
                            case 37:
                                i2 += (-13910 + (i6 * i6));
                                break;
                            case 38:
                                i2 *= i4;
                                break;
                            case 39:
                                i5 += i6;
                            case 40:
                                i2 <<= 9;
                                break;
                            case 41:
                                Test0066.iArrFld[i6][i6 + 1] = i3;
                                break;
                            case 42:
                            case 43:
                                i7 = by2;
                        }
                        break;
                    default:
                        if (b) break;
                }
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + by2 + (b ? 1 : 0);
    }

    public static void vMeth1(float f1) {

        int i8 = 54907, i9 = 208, i10 = 70, i11 = 121, i12 = -8, i13 = -7, i14 = 1, i15 = -2;
        short s1 = 3559;
        double d = -67.123588;
        byte by3 = 22;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 34.831F);

        vMeth2(Test0066.iFld, Test0066.iFld);
        for (i8 = 17; 275 > i8; i8++) {
            Test0066.iFld /= (int) (i8 | 1);
            switch ((i8 % 2) + 97) {
                case 97:
                    for (i10 = 1; i10 < 6; ++i10) {
                        f1 += i10;
                        Test0066.iArrFld[i10 + 1][i8 - 1] -= (int) f1;
                    }
                    switch ((i8 % 10) + 20) {
                        case 20:
                            for (i12 = i8; 6 > i12; ++i12) {
                                short s = 21303;
                                i11 += (int) Test0066.instanceCount;
                                i9 -= s;
                                Test0066.instanceCount -= Test0066.instanceCount;
                            }
                            for (i14 = 1; i14 < 6; i14++) {
                                f1 += (((i14 * f1) + s1) - Test0066.instanceCount);
                                Test0066.iArrFld[i8 + 1][i14] -= (int) d;
                            }
                        case 21:
                            by3 *= (byte) Test0066.iFld;
                            break;
                        case 22:
                            fArr[i8] += Test0066.instanceCount;
                            break;
                        case 23:
                            Test0066.iFld -= (int) f1;
                        case 24:
                            by3 >>>= (byte) i13;
                        case 25:
                            i9 = Test0066.iFld;
                            break;
                        case 26:
                            by3 += (byte) (((i8 * i13) + s1) - Test0066.iFld);
                            break;
                        case 27:
                            f1 -= Test0066.instanceCount;
                            break;
                        case 28:
                            Test0066.iFld -= Test0066.iFld;
                            break;
                        case 29:
                            i11 -= (int) f1;
                        default:
                            Test0066.instanceCount = i11;
                    }
                case 98:
                    i13 += i8;
                    break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + s1 +
                Double.doubleToLongBits(d) + by3 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(byte by, int i, byte by1) {

        int i1 = 240, i16 = -38512, i17 = 72, i18 = 47993, i19 = -36, i20 = -2;
        float f = -117.989F, f2 = 112.741F;
        double d1 = -1.83090;

        i1 = 1;
        do {
            i += (((i1 * Test0066.instanceCount) + i1) - i);
            Test0066.lArrFld = (Test0066.lArrFld = (Test0066.lArrFld = FuzzerUtils.long1array(N, (long) 226L)));
            Test0066.iArrFld[i1][i1] *= (10 * ((i + by1) + (-(i + i))));
        } while (++i1 < 249);
        try {
            Test0066.instanceCount *= (long) f;
            vMeth1(f);
            for (f2 = 8; f2 < 237; ++f2) {
                for (i17 = 1; i17 < 7; i17++) {
                    i18 += (int) Test0066.instanceCount;
                    Test0066.iFld += (i17 + i);
                    d1 = Test0066.instanceCount;
                    for (i19 = 1; 2 > i19; ++i19) {
                        i16 = by;
                        by1 -= (byte) Test0066.instanceCount;
                    }
                }
            }
        } catch (UserDefinedExceptionTest0066 exc1) {
            Test0066.instanceCount += (long) f;
        }
        vMeth_check_sum += by + i + by1 + i1 + Float.floatToIntBits(f) + Float.floatToIntBits(f2) + i16 + i17 + i18 +
                Double.doubleToLongBits(d1) + i19 + i20;
    }

    public static void main(String[] strArr) {

        try {
            Test0066 _instance = new Test0066();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        byte by4 = -122;
        int i21 = 31449;
        int i22 = -12726;
        int i24 = 0;
        int i25 = -53193;
        int i26 = -40637;
        int i27 = 55270;
        int i28 = -8;
        int i29 = -5;
        int i30 = 13;
        int[] iArr = new int[N];
        float f3 = 0.702F;
        double d2 = 2.42895;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, 27760);
        FuzzerUtils.init(dArr, 2.20279);

        vMeth(by4, Test0066.iFld, by4);
        for (i21 = 1; i21 < 348; ++i21) {
            Test0066.iFld = (int) 2.639F;
            f3 -= -22241;
            fArrFld[i21 - 1] += i22;
            for (i24 = 2; i24 < 73; i24 += 2) {
                i22 += (i24 * i24);
                Test0066.instanceCount <<= Test0066.instanceCount;
                Test0066.instanceCount >>>= by4;
                i25 |= (int) Test0066.instanceCount;
            }
        }
        Test0066.bFld = Test0066.bFld;
        f3 -= iFld1;
        i26 = 1;
        do {
            for (i27 = 5; i27 < 99; ++i27) {
                d2 -= i27;
                dArr[i27 + 1] *= 751950133675310052L;
                Test0066.instanceCount = Test0066.instanceCount;
                i22 += 250;
                by4 += (byte) Test0066.instanceCount;
                if (Test0066.bFld) {
                    f3 += ((long) i27 ^ (long) i22);
                    for (i29 = 1; i29 < 2; ++i29) {
                        Test0066.iFld -= i26;
                        switch (((i26 % 10) * 5) + 69) {
                            case 79:
                                i22 -= Test0066.iFld;
                                break;
                            case 88:
                                if (Test0066.bFld) break;
                                i30 = iFld1;
                                f3 += ((long) i29 | (long) Test0066.iFld);
                            case 85:
                                sFld = (short) Test0066.iFld;
                                f3 += by4;
                                break;
                            case 103:
                                Test0066.iArrFld[i29 + 1][i29 + 1] -= iFld1;
                                break;
                            case 84:
                                Test0066.iFld += i29;
                                break;
                            case 119:
                                Test0066.iArrFld[i26 + 1][i26 - 1] = (int) Test0066.instanceCount;
                            case 94:
                                i28 -= i27;
                                break;
                            case 118:
                                Test0066.iFld |= i25;
                                break;
                            case 101:
                                i22 = i27;
                                break;
                            case 114:
                                try {
                                    Test0066.iArrFld[i26][i26 + 1] = (39508 % i28);
                                    i30 = (Test0066.iFld % i22);
                                    i22 = (437239982 / i24);
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                        }
                    }
                } else {
                    f3 = Test0066.instanceCount;
                }
            }
        } while (++i26 < 253);

        FuzzerUtils.out.println("by4 i21 i22 = " + by4 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("f3 i24 i25 = " + Float.floatToIntBits(f3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("d2 i29 i30 = " + Double.doubleToLongBits(d2) + "," + i29 + "," + i30);
        FuzzerUtils.out.println("iArr dArr = " + FuzzerUtils.checkSum(iArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0066.instanceCount Test0066.iFld Test0066.bFld = " + Test0066.instanceCount + "," + Test0066.iFld +
                "," + (Test0066.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld1 sFld Test0066.lArrFld = " + iFld1 + "," + sFld + "," +
                FuzzerUtils.checkSum(Test0066.lArrFld));
        FuzzerUtils.out.println("Test0066.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test0066.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}

///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest0066 extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
