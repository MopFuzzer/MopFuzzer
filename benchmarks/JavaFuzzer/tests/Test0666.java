// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0666 {

    public static final int N = 400;

    public static long instanceCount = 206L;
    public static boolean bFld = false;
    public static int iFld = 4;
    public static int[] iArrFld = new int[N];
    public static short[] sArrFld = new short[N];
    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0666.iArrFld, 14);
        FuzzerUtils.init(Test0666.sArrFld, (short) -28692);
    }

    public short sFld = -16823;
    public byte byFld = -47;
    public long[] lArrFld = new long[N];

    public static int iMeth(int i14, double d1, int i15) {

        int i16 = -1, i17 = -19339, i18 = 40856, i19 = 3, i20 = 238;
        double d2 = 0.17765;
        short s = 18160;
        float f = -24.237F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -3542371273L);

        for (i16 = 15; i16 < 329; ++i16) {
            Test0666.instanceCount += (long) (59.504F + (i16 * i16));
            i15 = i15;
            for (d2 = 1; d2 < 5; ++d2) {
                i18 = (int) Test0666.instanceCount;
                for (i19 = 1; i19 < 2; i19++) {
                    Test0666.instanceCount -= i15;
                    Test0666.instanceCount += (i19 ^ s);
                    switch ((((9 >>> 1) % 3) * 5) + 114) {
                        case 121:
                            if (Test0666.bFld) break;
                            break;
                        case 124:
                        case 115:
                            switch ((i19 % 9) + 105) {
                                case 105:
                                    f -= 248;
                                    i18 = -4;
                                    break;
                                case 106:
                                    Test0666.instanceCount = -209;
                                    Test0666.bFld = true;
                                    break;
                                case 107:
                                    i14 = i14;
                                    break;
                                case 108:
                                case 109:
                                    Test0666.instanceCount >>= i17;
                                case 110:
                                    i18 += (i19 * i19);
                                    break;
                                case 111:
                                    Test0666.instanceCount *= i17;
                                    break;
                                case 112:
                                    i15 >>>= (int) Test0666.instanceCount;
                                case 113:
                                    s += (short) (((i19 * i18) + Test0666.instanceCount) - i16);
                            }
                            break;
                        default:
                            lArr[(int) (d2 - 1)] *= i19;
                    }
                }
            }
        }
        long meth_res = i14 + Double.doubleToLongBits(d1) + i15 + i16 + i17 + Double.doubleToLongBits(d2) + i18 + i19 +
                i20 + s + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i6, int i7) {

        int i8 = -205, i9 = -58232, i10 = -53489, i11 = -8, i12 = 99, i13 = -58483;
        byte by = 17;
        double d3 = 18.97075;
        float f1 = -1.897F;

        for (i8 = 15; 392 > i8; i8++) {
            for (i10 = i8; i10 < 4; ++i10) {
                i6 >>= (++i9);
                Test0666.iArrFld[i10] += (i6 -= Math.min(i7, i11 = by));
                for (i12 = 1; 1 > i12; i12++) {
                    Test0666.instanceCount >>>= iMeth(12, d3, i12);
                    try {
                        Test0666.iArrFld[i8 + 1] = (i8 % -252);
                        i13 = (i11 % 42801);
                        i9 = (i11 % i8);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0666.sArrFld[i10 - 1] = (short) i12;
                    i7 = by;
                    f1 -= i12;
                    if (true) break;
                    Test0666.instanceCount += 58647;
                    Test0666.iArrFld = Test0666.iArrFld;
                    f1 += (((i12 * f1) + f1) - i10);
                    by -= (byte) 49401;
                }
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + by + i12 + i13 + Double.doubleToLongBits(d3) +
                Float.floatToIntBits(f1);
    }

    public static short sMeth(int i2, int i3) {

        int i4 = 3392, i5 = 0, i21 = -6, i22 = -3, i23 = -10;
        double d4 = -1.121844;
        float f2 = 29.169F;

        for (i4 = 14; i4 < 378; ++i4) {
            i2 += (((i4 * i5) + i2) - i2);
            vMeth(-62550, i4);
            if (i4 != 0) {
            }
            Test0666.instanceCount = 0;
            for (i21 = 1; i21 < 5; i21++) {
                d4 = i4;
            }
            i23 = 1;
            do {
                if (i21 != 0) {
                }
                i2 += i23;
                i5 = i21;
            } while (++i23 < 5);
        }
        i2 >>= 34725;
        i3 = i23;
        i3 -= i4;
        Test0666.instanceCount += (long) f2;
        long meth_res = i2 + i3 + i4 + i5 + i21 + i22 + Double.doubleToLongBits(d4) + i23 + Float.floatToIntBits(f2);
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0666 _instance = new Test0666();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 102;
        int i1 = 40487;
        int i25 = -56673;
        int i26 = -54758;
        int i27 = -198;
        int i28 = 4;
        int i29 = 7147;
        int[] iArr = new int[N];
        double d = -2.9753;
        float f3 = 1.920F;
        float f4 = -2.806F;
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr, 14786);
        FuzzerUtils.init(fArr, 125.23F);

        iArr[(i >>> 1) % N] *= sFld;
        for (d = 6; d < 160; d++) {
            int i24 = -4;
            i <<= sMeth(i1, i24);
            for (i25 = 7; i25 < 163; i25++) {
                try {
                    i = (1211365074 % iArr[(int) (d + 1)]);
                    i26 = (iArr[i25 - 1] % i1);
                    i24 = (i24 % i25);
                } catch (ArithmeticException a_e) {
                }
                Test0666.instanceCount >>= i1;
                lArrFld[i25 + 1] = i;
                iArr[(int) (d)] += (int) f3;
                if (false) break;
                i27 = 1;
                do {
                    i26 = -5;
                    byFld += (byte) (i27 - i25);
                    f3 *= 55.1006F;
                    Test0666.bFld = Test0666.bFld;
                    lArrFld[i25 + 1] *= i24;
                    if (Test0666.bFld) break;
                } while (++i27 < 2);
                fArr[i25 + 1] -= i26;
            }
            i28 = 1;
            while (++i28 < 163) {
                i29 = 1;
                do {
                    i24 += (((i29 * i24) + f3) - i);
                    i += (i29 + f3);
                    i += i29;
                    if (Test0666.bFld) {
                        i26 = (int) f4;
                        i += (i29 - i26);
                        Test0666.instanceCount += Test0666.instanceCount;
                        Test0666.iArrFld[i28] = Test0666.iFld;
                    } else if (Test0666.bFld) {
                        i26 += (i29 * i29);
                    }
                    Test0666.instanceCount = i25;
                    i |= (int) Test0666.instanceCount;
                } while ((i29 -= 2) > 0);
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i25 i26 f3 = " + i25 + "," + i26 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("f4 iArr fArr = " + Float.floatToIntBits(f4) + "," + FuzzerUtils.checkSum(iArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0666.instanceCount sFld Test0666.bFld = " + Test0666.instanceCount + "," + sFld + "," +
                (Test0666.bFld ? 1 : 0));
        FuzzerUtils.out.println("byFld Test0666.iFld Test0666.iArrFld = " + byFld + "," + Test0666.iFld + "," +
                FuzzerUtils.checkSum(Test0666.iArrFld));
        FuzzerUtils.out.println("Test0666.sArrFld lArrFld = " + FuzzerUtils.checkSum(Test0666.sArrFld) + "," +
                FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
