// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0706 {

    public static final int N = 400;

    public static long instanceCount = -81L;
    public static volatile int iFld = -7;
    public static int iFld1 = 111;
    public static byte byFld = -63;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public short[] sArrFld = new short[N];

    public static float fMeth(float f1, int i5) {

        int i6 = -117;
        int i7 = -13;
        int i8 = 36393;
        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, -11);

        i5 = (int) Test0706.instanceCount;
        i5 -= i5;
        i6 = 1;
        do {
            short s = 6893;
            Test0706.instanceCount += Test0706.instanceCount;
            f1 = -3819;
            switch (((i6 >>> 1) % 1) + 44) {
                case 44:
            }
            i5 = s;
            i5 += i6;
            for (i7 = 1; i7 < 6; ++i7) {
                i5 += (-54292 + (i7 * i7));
                f1 = i8;
                if (false) break;
                try {
                    i5 = (i7 % -19840);
                    i5 = (i5 / -39199);
                    Test0706.iFld = (i7 % 233);
                } catch (ArithmeticException a_e) {
                }
                i5 ^= (int) 13890L;
                iArr = iArr;
            }
        } while (++i6 < 299);
        long meth_res = Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth1() {

        int i = 173;
        int i1 = 69;
        int i2 = -56569;
        int i3 = -166;
        int i4 = 194;
        int[] iArr1 = new int[N];
        float f2 = -1.888F;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, 32790);
        FuzzerUtils.init(lArr, -161L);

        for (i = 15; i < 317; ++i) {
            i1 ^= ((i + (++i1)) + 36957);
            i1 -= i1;
            for (i2 = i; i2 < 5; ++i2) {
                i4 = 1;
                do {
                    i1 = (int) fMeth(f2, -4);
                    Test0706.iFld = i3;
                    Test0706.iFld += i1;
                    i1 += (i4 * i4);
                    Test0706.instanceCount = i4;
                    switch (((i >>> 1) % 3) + 86) {
                        case 86:
                            iArr1[i4 + 1] = -6;
                            i1 = Test0706.iFld1;
                            i3 = i3;
                            break;
                        case 87:
                            lArr = lArr;
                            break;
                        case 88:
                            i3 = Test0706.byFld;
                    }
                } while (++i4 < 1);
            }
        }
        vMeth1_check_sum += i + i1 + i2 + i3 + i4 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1) +
                FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l, float f) {

        double d = 1.123219;
        int i9 = 26705, i10 = -9672, i11 = 5, i12 = 11167, i13 = -55038, i14 = -119, i15 = -9, i16 = 41970;
        float f3 = 91.59F;
        boolean b = false;

        vMeth1();
        f -= Test0706.byFld;
        d += Test0706.iFld;
        for (i9 = 13; i9 < 269; i9 += 3) {
            Test0706.iFld += i9;
        }
        f = -216;
        if (b) {
            for (i11 = 19; i11 < 314; ++i11) {
                Test0706.iFld = i12;
            }
            for (i13 = 2; i13 < 301; i13++) {
                f3 = Test0706.instanceCount;
            }
        }
        for (i15 = 3; i15 < 173; ++i15) {
            Test0706.instanceCount += l;
            i12 += (-144 + (i15 * i15));
            d -= i12;
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + i13 + i14
                + Float.floatToIntBits(f3) + (b ? 1 : 0) + i15 + i16;
    }

    public static void main(String[] strArr) {

        try {
            Test0706 _instance = new Test0706();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f4 = 0.258F;
        int i17 = 12;
        int i18 = 19;
        int i19 = -8;
        int i20 = -113;
        int i21 = 39909;
        int i22 = 44479;
        int i23 = 2745;
        int i24 = -14;
        int i25 = -46623;
        int i26 = 50894;
        int i27 = -238;
        int[] iArr2 = new int[N];
        boolean b1 = false;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr2, 9);
        FuzzerUtils.init(dArr, -115.129766);

        vMeth(Test0706.instanceCount, f4);
        for (i17 = 7; i17 < 361; ++i17) {
            Test0706.byFld *= (byte) Test0706.iFld;
            Test0706.iFld1 >>= (int) Test0706.instanceCount;
            Test0706.instanceCount -= 100;
            Test0706.instanceCount = i18;
            f4 -= i18;
            for (i19 = 71; i19 > 3; --i19) {
                i20 += (((i19 * f4) + Test0706.instanceCount) - Test0706.iFld);
            }
            if (b1) {
                if (b1) continue;
                iArr2[i17] += (int) Test0706.instanceCount;
                if (b1) continue;
                i20 -= (int) Test0706.instanceCount;
            } else {
                sArrFld[i17] = (short) i20;
                Test0706.instanceCount = Test0706.instanceCount;
                for (i21 = 3; i21 < 71; i21++) {
                    Test0706.instanceCount -= i21;
                    Test0706.instanceCount += (long) (0.617F + (i21 * i21));
                }
            }
        }
        iArr2[(i23 >>> 1) % N] -= i22;
        iArr2[(i22 >>> 1) % N] = i18;
        for (i24 = 12; i24 < 315; i24++) {
            iArr2[i24] = i17;
            i18 *= i20;
            for (i26 = 5; i26 < 83; i26++) {
                dArr[i26] += Test0706.iFld;
                i20 *= i26;
                f4 += (178 + (i26 * i26));
                Test0706.iFld >>= i21;
                i22 = i19;
            }
        }

        FuzzerUtils.out.println("f4 i17 i18 = " + Float.floatToIntBits(f4) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 b1 = " + i19 + "," + i20 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 iArr2 dArr = " + i27 + "," + FuzzerUtils.checkSum(iArr2) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0706.instanceCount Test0706.iFld Test0706.iFld1 = " + Test0706.instanceCount + "," + Test0706.iFld +
                "," + Test0706.iFld1);
        FuzzerUtils.out.println("Test0706.byFld sArrFld = " + Test0706.byFld + "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
