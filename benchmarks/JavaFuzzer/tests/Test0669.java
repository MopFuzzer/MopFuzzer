// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test0669 {

    public static final int N = 400;

    public static long instanceCount = 808011023405762169L;
    public static int iFld = 19;
    public static volatile boolean bFld = true;
    public static float fFld = 0.363F;
    public static int[] iArrFld = new int[N];
    public static volatile double[] dArrFld = new double[N];
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0669.iArrFld, -10);
        FuzzerUtils.init(Test0669.dArrFld, -1.81248);
        FuzzerUtils.init(Test0669.fArrFld, 0.100F);
    }

    public byte byFld = 73;

    public static void vMeth(long l) {

        int i5 = -203, i6 = 60207, i7 = -48042, i8 = -13, i9 = 62478, i10 = -111;
        float f1 = 3.320F, f2 = -1.519F;
        byte by = -57;
        short s = 19020;
        double d1 = 0.93335;

        for (i5 = 5; i5 < 358; ++i5) {
            Test0669.iArrFld[i5] >>= (int) l;
            Test0669.iFld = (int) f1;
            Test0669.instanceCount = Test0669.iFld;
            Test0669.iFld = (int) l;
            if (Test0669.bFld) {
                Test0669.iFld *= (int) Test0669.instanceCount;
                switch (((117 >>> 1) % 9) + 14) {
                    case 14:
                        i7 = 1;
                        while (++i7 < 5) {
                            by += (byte) i6;
                        }
                        Test0669.iFld += i5;
                        break;
                    case 15:
                        for (f2 = 1; f2 < 5; ++f2) {
                            for (i9 = 1; i9 < 2; i9++) {
                                f1 += i5;
                                l *= i7;
                            }
                        }
                    case 16:
                        if (Test0669.bFld) break;
                        break;
                    case 17:
                        Test0669.iFld += -109;
                        break;
                    case 18:
                        i10 += i5;
                        break;
                    case 19:
                    case 20:
                        if (Test0669.bFld) break;
                    case 21:
                        Test0669.iFld += s;
                        break;
                    case 22:
                        Test0669.instanceCount *= i9;
                }
            } else if (Test0669.bFld) {
                d1 += -26084;
            } else if (Test0669.bFld) {
                Test0669.iFld += (int) -110.715F;
            }
        }
        vMeth_check_sum += l + i5 + i6 + Float.floatToIntBits(f1) + i7 + by + Float.floatToIntBits(f2) + i8 + i9 + i10
                + s + Double.doubleToLongBits(d1);
    }

    public static int iMeth1(int i4) {

        int i11 = -8, i12 = 4, i13 = 63909, i14 = -27671, i15 = -11, i16 = -54338;
        long l1 = -1770920270L;

        i4 = (int) Test0669.instanceCount;
        Test0669.iArrFld[(i4 >>> 1) % N] -= (int) ((Test0669.iArrFld[(Test0669.iFld >>> 1) % N]++) / 43.774F);
        vMeth(Test0669.instanceCount);
        for (i11 = 9; 153 > i11; ++i11) {
            for (i13 = 1; i13 < 11; ++i13) {
                Test0669.iArrFld[i11] -= (int) Test0669.instanceCount;
                Test0669.iArrFld[i11 + 1] >>= (int) Test0669.instanceCount;
            }
            l1 = i4;
            for (i15 = 1; i15 < 11; i15++) {
                i14 = Test0669.iFld;
                i12 += -38;
            }
            Test0669.iArrFld = Test0669.iArrFld;
            i14 -= 7;
            Test0669.dArrFld[i11 - 1] *= 0.51407;
            i4 = 223;
        }
        long meth_res = i4 + i11 + i12 + i13 + i14 + l1 + i15 + i16;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth() {

        int i17 = -228, i18 = 3, i19 = 10, i20 = 11, i21 = 0, i22 = -13, i23 = 218, i24 = -2;
        byte by1 = 87;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 7490698191731190378L);

        Test0669.instanceCount = (-Test0669.iArrFld[(Test0669.iFld >>> 1) % N]);
        Test0669.iFld *= Math.min(iMeth1(Test0669.iFld) * Test0669.iFld, Test0669.iFld);
        lArr[(-24329 >>> 1) % N] = (long) Test0669.fFld;
        for (i17 = 7; i17 < 122; i17++) {
            for (i19 = 1; 14 > i19; ++i19) {
                i18 |= (int) Test0669.instanceCount;
                by1 += (byte) (i19 | i18);
                if (i20 != 0) {
                }
                if (Test0669.bFld) break;
            }
            i20 += i17;
            for (i21 = 1; i21 < 14; ++i21) {
                for (i23 = 2; i23 > 1; i23 -= 3) {
                    Test0669.iArrFld[(-14486 >>> 1) % N] += i23;
                    by1 *= by1;
                    if (Test0669.bFld) continue;
                }
            }
        }
        long meth_res = i17 + i18 + i19 + i20 + by1 + i21 + i22 + i23 + i24 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0669 _instance = new Test0669();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -49801, i1 = -29670, i2 = -48050, i3 = -51, i25 = 8148, i26 = -52418, i27 = -197, i28 = 56411, i29 = -79;
        float f = 0.527F;
        short s1 = 26030;
        short[] sArr = new short[N];
        long l2 = 181L;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(sArr, (short) -25135);
        FuzzerUtils.init(lArr1, 10L);

        for (i = 1; i < 258; i++) {
            for (i2 = i; i2 < 98; i2++) {
                f += (-iMeth());
                i1 *= -56898;
            }
            for (i25 = 5; 98 > i25; i25++) {
                i3 ^= i26;
                for (i27 = 1; i27 < 2; ++i27) {
                    if (Test0669.bFld) {
                        Test0669.iArrFld[i - 1] = Test0669.iFld;
                    } else {
                        sArr[i - 1] = (short) f;
                    }
                    Test0669.fFld = Test0669.instanceCount;
                    i28 >>= i27;
                    Test0669.fArrFld[i + 1] = i1;
                    i28 ^= 0;
                    i26 += (int) Test0669.instanceCount;
                    Test0669.iArrFld[i] *= i27;
                    Test0669.iFld += (i27 ^ i25);
                }
                i29 = 1;
                do {
                    if (Test0669.bFld) {
                        Test0669.iFld >>= 2;
                        Test0669.instanceCount = Test0669.instanceCount;
                        Test0669.instanceCount -= i26;
                        s1 += (short) i27;
                    } else if (Test0669.bFld) {
                        i26 += (i29 * i3);
                        Test0669.instanceCount += byFld;
                        lArr1[i - 1] = i26;
                    }
                    byFld -= (byte) 27;
                    i26 += i;
                    Test0669.dArrFld[i25 + 1] *= l2;
                    i3 = i1;
                } while (++i29 < 2);
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f i25 = " + i3 + "," + Float.floatToIntBits(f) + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 s1 l2 = " + i29 + "," + s1 + "," + l2);
        FuzzerUtils.out.println("sArr lArr1 = " + FuzzerUtils.checkSum(sArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0669.instanceCount Test0669.iFld Test0669.bFld = " + Test0669.instanceCount + "," + Test0669.iFld +
                "," + (Test0669.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0669.fFld byFld Test0669.iArrFld = " + Float.floatToIntBits(Test0669.fFld) + "," + byFld + ","
                + FuzzerUtils.checkSum(Test0669.iArrFld));
        FuzzerUtils.out.println("Test0669.dArrFld Test0669.fArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0669.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0669.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
