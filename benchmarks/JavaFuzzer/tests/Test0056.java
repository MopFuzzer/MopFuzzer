// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0056 {

    public static final int N = 400;

    public static long instanceCount = 10590L;
    public static int iFld = -115;
    public static int iFld1 = 2;
    public static double dFld1 = -17.80203;
    public static volatile byte byFld = -50;
    public static long lFld = 946666434L;
    public static volatile short sFld = -29442;
    public static long[] lArrFld = new long[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0056.lArrFld, -117L);
        FuzzerUtils.init(Test0056.iArrFld, 8);
    }

    public double dFld = 29.40321;

    public static int iMeth(boolean b, int i2, int i3) {

        int i4 = -42055;
        int i5 = 16275;
        int i6 = -7;
        int i7 = 43735;
        int i8 = -13955;
        int[] iArr1 = new int[N];
        short s1 = -5789;
        byte by2 = 113;

        FuzzerUtils.init(iArr1, 62512);

        Test0056.iFld = (int) Test0056.dFld1;
        for (i4 = 4; i4 < 200; ++i4) {
            for (i6 = 1; i6 < 8; i6++) {
                Test0056.instanceCount &= 2206409280339593398L;
                i3 = i5;
                Test0056.instanceCount -= i6;
                iArr1 = iArr1;
                switch ((i6 % 2) + 81) {
                    case 81:
                        Test0056.byFld = (byte) Test0056.iFld1;
                        Test0056.instanceCount = s1;
                        break;
                    case 82:
                        i8 = 1;
                        while ((i8 += 2) < 2) {
                            by2 += (byte) i4;
                        }
                        Test0056.instanceCount += i6;
                        i7 -= i8;
                        break;
                    default:
                        i2 = 239;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i2 + i3 + i4 + i5 + i6 + i7 + s1 + i8 + by2 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i1) {

        boolean b1 = true;
        float f1 = 2.729F;
        int i9 = 54, i10 = -64322, i11 = -5;
        short s2 = 31559;

        Test0056.iFld1 |= iMeth(b1, 46, Test0056.iFld1);
        Test0056.iFld1 = Test0056.iFld1;
        Test0056.iFld <<= (int) Test0056.instanceCount;
        f1 -= Test0056.iFld;
        i9 = 1;
        do {
            for (i10 = 1; i10 < 9; ++i10) {
                Test0056.lArrFld[i9 - 1] += Test0056.iFld1;
                Test0056.iFld = s2;
                Test0056.instanceCount = Test0056.iFld1;
                Test0056.iFld = (int) f1;
                i1 |= i9;
                i11 -= i9;
                Test0056.instanceCount += i10;
                f1 += i10;
                Test0056.iArrFld[i10 - 1] += s2;
            }
        } while (++i9 < 177);
        vMeth1_check_sum += i1 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i9 + i10 + i11 + s2;
    }

    public static void vMeth(int i, float f, long l) {

        byte by1 = -72;
        short s = -3965;
        long l1 = 199L;
        int i12 = -193;
        int i13 = 0;
        int i14 = 2;
        int[] iArr = new int[N];
        float f2 = 1.586F;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(dArr, 1.73793);

        Test0056.iFld <<= iArr[(Test0056.iFld >>> 1) % N];
        i += (int) (((i * i) - i) + ((--dArr[(i >>> 1) % N]) - (Test0056.iFld << Test0056.iFld)));
        by1 ^= (byte) (-((i++) - (s - s)));
        vMeth1(Test0056.iFld);
        i -= (int) l;
        for (l1 = 3; l1 < 211; l1 += 3) {
            i12 += (int) (((l1 * i12) + Test0056.iFld1) - Test0056.iFld1);
            Test0056.iArrFld[(int) (l1 - 1)] -= (int) f;
            Test0056.instanceCount -= -41392L;
            for (i13 = 1; i13 < 22; i13++) {
                i14 = -193;
                l -= (long) f;
                f2 = 1;
                do {
                    Test0056.iFld >>= Test0056.iFld;
                    Test0056.iFld1 = Test0056.byFld;
                } while (++f2 < 2);
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + l + by1 + s + l1 + i12 + i13 + i14 + Float.floatToIntBits(f2)
                + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void main(String[] strArr) {

        try {
            Test0056 _instance = new Test0056();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        byte by = 81;
        float f3 = 0.78F;
        float f4 = 98.1007F;
        float[] fArr = new float[N];
        int i15 = 11, i16 = 31, i17 = -11834, i18 = 67, i19 = -12404, i20 = 241, i21 = -6;
        boolean b2 = false;
        long l2 = -8L, l3 = -7548387770616144325L;

        FuzzerUtils.init(fArr, 115.322F);

        fArr[(Test0056.iFld >>> 1) % N] += (Test0056.iFld--);
        dFld -= by;
        Test0056.iFld *= (int) (Test0056.instanceCount--);
        vMeth(-25496, f3, Test0056.instanceCount);
        for (i15 = 326; i15 > 11; i15--) {
            Test0056.instanceCount += i15;
            for (i17 = 80; i17 > 5; i17--) {
                for (i19 = 1; i19 < 2; ++i19) {
                    f3 -= 851835282L;
                    Test0056.instanceCount -= (long) f4;
                }
                Test0056.instanceCount >>= i20;
                i18 += (((i17 * i18) + i17) - Test0056.lFld);
                Test0056.lFld = i20;
            }
            switch (((i17 >>> 1) % 6) + 92) {
                case 92:
                case 93:
                    Test0056.iFld -= i18;
                    break;
                case 94:
                    Test0056.lFld = Test0056.lFld;
                    if (b2) {
                        b2 = false;
                        f3 *= by;
                        b2 = b2;
                    } else {
                        Test0056.lFld ^= Test0056.lFld;
                        i20 = i20;
                    }
                    for (l2 = 5; l2 < 80; l2++) {
                        i21 = i17;
                        i20 -= (int) f4;
                        l3 *= (long) Test0056.dFld1;
                    }
                    break;
                case 95:
                    switch ((i15 % 2) + 18) {
                        case 18:
                            Test0056.iArrFld[i15] = (int) Test0056.instanceCount;
                            i21 = (int) f4;
                            i16 -= i16;
                        case 19:
                            Test0056.dFld1 += i21;
                            break;
                        default:
                            dFld += -4717728035855509534L;
                    }
                    break;
                case 96:
                    Test0056.sFld = (short) i18;
                case 97:
                    l3 += (i15 * Test0056.iFld1);
                    break;
                default:
                    dFld = Test0056.instanceCount;
            }
        }

        FuzzerUtils.out.println("by f3 i15 = " + by + "," + Float.floatToIntBits(f3) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 f4 = " + i19 + "," + i20 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("b2 l2 i21 = " + (b2 ? 1 : 0) + "," + l2 + "," + i21);
        FuzzerUtils.out.println("l3 fArr = " + l3 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0056.instanceCount Test0056.iFld dFld = " + Test0056.instanceCount + "," + Test0056.iFld + "," +
                Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0056.iFld1 Test0056.dFld1 Test0056.byFld = " + Test0056.iFld1 + "," +
                Double.doubleToLongBits(Test0056.dFld1) + "," + Test0056.byFld);
        FuzzerUtils.out.println("Test0056.lFld Test0056.sFld Test0056.lArrFld = " + Test0056.lFld + "," + Test0056.sFld + "," +
                FuzzerUtils.checkSum(Test0056.lArrFld));
        FuzzerUtils.out.println("Test0056.iArrFld = " + FuzzerUtils.checkSum(Test0056.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
