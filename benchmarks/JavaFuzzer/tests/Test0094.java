// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test0094 {

    public static final int N = 400;

    public static long instanceCount = 5873501493324472631L;
    public static int iFld = 12;
    public static short[] sArrFld = new short[N];
    public static float[][] fArrFld = new float[N][N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0094.sArrFld, (short) -6018);
        FuzzerUtils.init(Test0094.fArrFld, -1.257F);
    }

    public volatile float fFld = 0.503F;
    public boolean bFld = true;
    public long lFld = 145L;
    public double dFld = -117.90073;

    public static void vMeth1(double d, int i3, int i4) {

        float f = -11.331F;
        float[][] fArr1 = new float[N][N];
        double d1 = -2.118524;
        int i5 = -43025;
        int i6 = 26;
        int i7 = -43828;
        int i8 = 177;
        int i9 = 43305;
        int i10 = 27;
        int i11 = 4;
        int[] iArr1 = new int[N];
        byte by1 = -16;

        FuzzerUtils.init(iArr1, -75);
        FuzzerUtils.init(fArr1, 104.838F);

        f += i4;
        d *= Test0094.iFld;
        for (d1 = 3; d1 < 247; ++d1) {
            Test0094.instanceCount <<= Test0094.instanceCount;
            for (i6 = 1; 7 > i6; i6++) {
                iArr1 = iArr1;
            }
        }
        i3 *= by1;
        for (i8 = 13; 313 > i8; ++i8) {
            iArr1[i8 + 1] ^= i4;
            fArr1 = fArr1;
            iArr1 = iArr1;
            for (i10 = 1; i10 < 6; i10++) {
                Test0094.instanceCount >>= Test0094.iFld;
                d = d1;
                Test0094.instanceCount += i5;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i3 + i4 + Float.floatToIntBits(f) +
                Double.doubleToLongBits(d1) + i5 + i6 + i7 + by1 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void main(String[] strArr) {

        try {
            Test0094 _instance = new Test0094();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(int i1, long l, int i2) {

        int i12 = -123;
        int i13 = -223;
        int i14 = 45375;
        int[] iArr2 = new int[N];
        float f1 = -2.56F;
        float[] fArr = new float[N];
        double d2 = 42.86656;
        long[] lArr = new long[N];

        FuzzerUtils.init(fArr, -1.651F);
        FuzzerUtils.init(lArr, 3L);
        FuzzerUtils.init(iArr2, -19703);

        fArr = FuzzerUtils.float1array(N, (float) 1.668F);
        vMeth1(-2.67768, i2, i1);
        Test0094.iFld = 65;
        i12 = 1;
        do {
            for (f1 = 1; f1 < 7; f1++) {
                i14 = 1;
                while (++i14 < 2) {
                    lArr[(int) (f1)] >>= l;
                    i1 += i1;
                    fArr[i12] -= i12;
                    Test0094.instanceCount = (long) f1;
                    switch (((i14 >>> 1) % 6) + 79) {
                        case 79:
                            if (i2 != 0) {
                            }
                            Test0094.iFld >>= i13;
                            if (bFld) continue;
                        case 80:
                            i13 <<= (int) lFld;
                            break;
                        case 81:
                            lArr[(int) (f1 - 1)] *= (long) fFld;
                            break;
                        case 82:
                            fFld -= i12;
                            break;
                        case 83:
                            i13 |= -78;
                            break;
                        case 84:
                            iArr2[(int) (f1)] = i14;
                            break;
                        default:
                            d2 += i13;
                    }
                }
            }
        } while (++i12 < 234);
        long meth_res = i1 + l + i2 + i12 + Float.floatToIntBits(f1) + i13 + i14 + Double.doubleToLongBits(d2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void vMeth() {

        byte by = 105;
        int i15 = -1604;
        int i16 = -5;
        int i17 = 6;
        int i18 = -23515;
        int i19 = 13307;
        int i20 = 109;
        int[][] iArr3 = new int[N][N];
        int[][] iArr4 = new int[N][N];
        double d3 = 28.36763;
        short s = 31996;

        FuzzerUtils.init(iArr3, 9);
        FuzzerUtils.init(iArr4, -9);

        by = (byte) (((fFld + Test0094.iFld) - Test0094.iFld) - (iMeth(Test0094.iFld, 1L, Test0094.iFld) * Test0094.iFld));
        fFld *= (float) dFld;
        for (i15 = 16; i15 < 262; i15++) {
            d3 -= s;
            i16 += i15;
            lFld *= -3;
            for (i17 = 1; i17 < 7; ++i17) {
                lFld += i16;
                iArr3 = iArr4;
            }
            lFld |= i16;
            for (i19 = i15; i19 < 7; ++i19) {
                Test0094.sArrFld[i15] *= (short) i18;
                iArr4[i15 - 1][i19 + 1] -= i17;
                Test0094.iFld <<= i15;
                Test0094.iFld += (int) fFld;
            }
        }
        vMeth_check_sum += by + i15 + i16 + Double.doubleToLongBits(d3) + s + i17 + i18 + i19 + i20 +
                FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(iArr4);
    }

    public void mainTest(String[] strArr1) {

        int i21 = -68;
        int i22 = 7;
        int i23 = -17966;
        int i24 = 181;
        int i25 = -13;
        int i26 = -52;
        int[] iArr = new int[N];
        double d4 = -71.70695;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, -1222);
        FuzzerUtils.init(dArr, -46.108025);

        for (int i : iArr) {
            vMeth();
            switch (((Test0094.iFld >>> 1) % 2) + 52) {
                case 52:
                    for (i21 = 63; 1 < i21; i21 -= 3) {
                        short s1 = 26920;
                        s1 >>= (short) i22;
                        i += i;
                        i = i21;
                        i22 += (i21 - i22);
                    }
                    for (i23 = 2; 63 > i23; ++i23) {
                        i22 -= i22;
                        dArr[i23 + 1] = i21;
                        switch ((i23 % 2) + 113) {
                            case 113:
                                i22 = i22;
                                dFld = Test0094.instanceCount;
                                i22 += i23;
                            case 114:
                                iArr[i23 - 1] += Test0094.iFld;
                                i25 = 1;
                                while (++i25 < 2) {
                                    i24 += (i25 | i);
                                    Test0094.iFld = i22;
                                }
                                fFld += (((i23 * Test0094.instanceCount) + Test0094.instanceCount) - lFld);
                                if (true) {
                                    dArr = dArr;
                                    Test0094.iFld += i23;
                                } else {
                                    i24 += i23;
                                    for (d4 = 1; 2 > d4; d4 += 3) {
                                        i ^= i25;
                                        i26 -= i25;
                                        i24 /= (int) (i23 | 1);
                                        if (false) break;
                                        lFld += (long) (d4 * Test0094.iFld);
                                    }
                                }
                                break;
                        }
                    }
                    break;
                case 53:
                    Test0094.fArrFld[(i25 >>> 1) % N][(i22 >>> 1) % N] = 0;
                    break;
            }
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 d4 = " + i24 + "," + i25 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i26 iArr dArr = " + i26 + "," + FuzzerUtils.checkSum(iArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0094.instanceCount fFld Test0094.iFld = " + Test0094.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0094.iFld);
        FuzzerUtils.out.println("bFld lFld dFld = " + (bFld ? 1 : 0) + "," + lFld + "," +
                Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0094.sArrFld Test0094.fArrFld = " + FuzzerUtils.checkSum(Test0094.sArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0094.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
