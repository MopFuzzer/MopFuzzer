// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0605 {

    public static final int N = 400;

    public static long instanceCount = 7L;
    public static boolean bFld = false;
    public static volatile double dFld = -78.46041;
    public static short sFld = 27477;
    public static byte byFld = 90;
    public static volatile float[] fArrFld = new float[N];
    public static long[] lArrFld = new long[N];
    public static float[][] fArrFld1 = new float[N][N];
    public static long dMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0605.fArrFld, -100.175F);
        FuzzerUtils.init(Test0605.lArrFld, -1367199524L);
        FuzzerUtils.init(Test0605.fArrFld1, 2.700F);
    }

    public int[] iArrFld = new int[N];
    public int[] iArrFld1 = new int[N];

    public static void vMeth(double d, int i9) {


        i9 = (int) Test0605.instanceCount;
        Test0605.instanceCount -= (long) d;
        vMeth_check_sum += Double.doubleToLongBits(d) + i9;
    }

    public static long lMeth(long l, long l1, int i8) {

        int i10 = 11;
        int i11 = 229;
        int i12 = -99;
        int i13 = 6835;
        int i14 = 0;
        int i15 = 63533;
        int i16 = -143;
        int[][] iArr1 = new int[N][N];
        float f2 = 0.433F;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, -49);
        FuzzerUtils.init(lArr, 10573L);

        vMeth(Test0605.dFld, i8);
        Test0605.instanceCount = l;
        Test0605.fArrFld[(i8 >>> 1) % N] += Test0605.sFld;
        iArr1[(i8 >>> 1) % N][(i8 >>> 1) % N] = i8;
        for (i10 = 159; i10 > 4; --i10) {
            for (i12 = i10; i12 < 10; ++i12) {
                for (f2 = 1; f2 < 1; f2++) {
                    Test0605.instanceCount *= i14;
                }
                Test0605.instanceCount += (((i12 * l1) + l) - l);
                Test0605.instanceCount += i12;
                for (i15 = 1; 1 > i15; ++i15) {
                    i8 -= (int) Test0605.dFld;
                    i13 += (i15 * f2);
                    iArr1[i10 - 1][i12 + 1] *= (int) l1;
                    lArr[i10] -= 56780;
                }
            }
        }
        long meth_res = l + l1 + i8 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) + i14 + i15 + i16 +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static double dMeth(short s) {

        int i3 = -3436;
        int i4 = -62;
        int i5 = 48253;
        int i6 = -52797;
        int i7 = 4;
        int i17 = 13051;
        int[] iArr = new int[N];
        float f1 = 2.854F, f3 = -2.318F;
        long l2 = 129L;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, 39);
        FuzzerUtils.init(dArr, 7.36605);

        i3 = (i3++);
        for (i4 = 5; i4 < 185; i4++) {
            Test0605.bFld = Test0605.bFld;
            iArr[i4] -= i4;
            f1 = 1;
            while (++f1 < 9) {
                for (i6 = 1; 1 > i6; i6++) {
                    dArr = (dArr = (dArr = dArr));
                    i3 += (i6 * i6);
                    Test0605.instanceCount = (lMeth(Test0605.instanceCount, Test0605.instanceCount, i4) - i4);
                }
                i3 += (int) (f1 * Test0605.instanceCount);
                Test0605.lArrFld[(int) (f1 - 1)] >>= i4;
                s = (short) 29345;
                for (l2 = 1; l2 < 1; ++l2) {
                    Test0605.instanceCount = l2;
                    f3 -= i17;
                }
            }
        }
        long meth_res = s + i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + l2 + i17 + Float.floatToIntBits(f3) +
                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0605 _instance = new Test0605();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 238, i1 = 941, i2 = 40278, i18 = -1, i19 = 9213, i20 = -13552, i21 = 31939;
        float f = 119.692F;
        double d1 = 0.78557;

        if (Test0605.bFld) {
            for (i = 4; i < 234; ++i) {
                for (f = 109; f > 5; f -= 3) {
                    i2 += (int) (dMeth(Test0605.sFld) + Test0605.instanceCount);
                    switch (((i1 >>> 1) % 7) + 75) {
                        case 75:
                            i1 = (int) f;
                            i2 ^= -51686;
                            break;
                        case 76:
                            iArrFld[(int) (f)] = i2;
                            Test0605.byFld += (byte) f;
                        case 77:
                            i1 >>>= 15976;
                            i2 = (int) Test0605.instanceCount;
                            for (i18 = 1; 4 > i18; i18++) {
                                i1 >>= i;
                            }
                            iArrFld1[i + 1] = (int) Test0605.instanceCount;
                            break;
                        case 78:
                            Test0605.dFld += f;
                            Test0605.fArrFld[(i19 >>> 1) % N] += -27L;
                            for (d1 = 1; d1 < 4; ++d1) {
                                Test0605.instanceCount = i20;
                                Test0605.fArrFld1 = Test0605.fArrFld1;
                            }
                            i20 += (int) f;
                            break;
                        case 79:
                        case 80:
                            i20 >>>= (int) 1571673827L;
                            Test0605.instanceCount -= i;
                        case 81:
                            i2 *= 223;
                            Test0605.dFld -= i2;
                            i21 = 1;
                            do {
                                Test0605.dFld = Test0605.instanceCount;
                                Test0605.instanceCount += 30487;
                                if (Test0605.bFld) continue;
                                iArrFld1[(int) (f)] = i18;
                                try {
                                    i20 = (iArrFld[i - 1] % 11996);
                                    i1 = (i20 % -46203);
                                    iArrFld1[i + 1] = (72 / i);
                                } catch (ArithmeticException a_e) {
                                }
                            } while (++i21 < 4);
                            break;
                        default:
                            iArrFld[i - 1] = i18;
                    }
                }
            }
        } else if (Test0605.bFld) {
            i2 -= (int) -7L;
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 i18 i19 = " + i2 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("d1 i20 i21 = " + Double.doubleToLongBits(d1) + "," + i20 + "," + i21);

        FuzzerUtils.out.println("Test0605.instanceCount Test0605.bFld Test0605.dFld = " + Test0605.instanceCount + "," + (Test0605.bFld ? 1
                : 0) + "," + Double.doubleToLongBits(Test0605.dFld));
        FuzzerUtils.out.println("Test0605.sFld Test0605.byFld Test0605.fArrFld = " + Test0605.sFld + "," + Test0605.byFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0605.fArrFld)));
        FuzzerUtils.out.println("Test0605.lArrFld iArrFld iArrFld1 = " + FuzzerUtils.checkSum(Test0605.lArrFld) + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(iArrFld1));
        FuzzerUtils.out.println("Test0605.fArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0605.fArrFld1)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  lMeth ->  lMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
