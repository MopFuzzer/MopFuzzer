// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test0093 {

    public static final int N = 400;

    public static long instanceCount = 114L;
    public static volatile float fFld = 45.168F;
    public static double dFld = 1.104971;
    public static long[] lArrFld = new long[N];
    public static short[] sArrFld = new short[N];
    public static float[] fArrFld = new float[N];
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0093.lArrFld, -9031638235281488963L);
        FuzzerUtils.init(Test0093.sArrFld, (short) -23364);
        FuzzerUtils.init(Test0093.fArrFld, 123.695F);
    }

    public int iFld = 7299;
    public short sFld = 29626;
    public int iFld1 = 4;
    public volatile int[] iArrFld = new int[N];

    public static void main(String[] strArr) {

        try {
            Test0093 _instance = new Test0093();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public long lMeth(int i8, int i9, int i10) {

        float f = -1.721F;
        int i11 = 0, i12 = -36235, i13 = 9, i14 = 37720;
        short s = 3071;

        f = 1;
        while (++f < 362) {
            iArrFld[(int) (f - 1)] *= i9;
            switch (((i8 >>> 1) % 1) + 107) {
                case 107:
                    Test0093.fArrFld[(int) (f)] = i8;
                    switch ((int) (((f % 5) * 5) + 1)) {
                        case 2:
                            i8 = (int) Test0093.instanceCount;
                        case 15:
                            i9 -= i8;
                            i8 += (int) ((long) f | (long) Test0093.fFld);
                            for (i11 = (int) (f); i11 < 5; i11 += 2) {
                                for (i13 = (int) (f); i13 < 1; i13++) {
                                    i9 += (int) Test0093.dFld;
                                    s = (short) i9;
                                    iArrFld[i11 - 1] >>= i8;
                                    i10 += (int) (-2.832F + (i13 * i13));
                                    Test0093.lArrFld = Test0093.lArrFld;
                                }
                            }
                            break;
                        case 24:
                            Test0093.instanceCount *= i14;
                            break;
                        case 22:
                            iArrFld[(int) (f)] = i13;
                            break;
                        case 12:
                            i14 = i10;
                            break;
                        default:
                            i9 *= i13;
                    }
                    break;
            }
        }
        long meth_res = i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + s;
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void vMeth(double d, double d1, int i3) {

        int i4 = 0, i5 = 40702, i6 = -10, i7 = -4, i15 = -178, i16 = -10;
        boolean b = true;
        byte by1 = -69;

        Test0093.fArrFld[(i3 >>> 1) % N] -= Test0093.fFld;
        for (i4 = 5; i4 < 381; ++i4) {
            for (i6 = 1; i6 < 4; ++i6) {
                i7 %= (int) (((long) (((--Test0093.instanceCount) - (98 + (Test0093.fFld--))) + i6)) | 1);
                if (b) {
                    i7 = (int) (lMeth(i4, i3, 106) + i3);
                    if (b) break;
                    i5 -= 20;
                } else if (b) {
                    i5 &= 6960;
                    i5 = by1;
                    try {
                        i7 = (22 % i4);
                        i5 = (i5 % -44516);
                        i5 = (i3 % iArrFld[i4]);
                    } catch (ArithmeticException a_e) {
                    }
                    iArrFld[i4] = 1684;
                } else if (b) {
                    for (i15 = 1; i15 < 2; i15++) {
                        iArrFld[i6 + 1] *= (int) d;
                        iArrFld[i4] -= (int) 12L;
                    }
                } else {
                    Test0093.dFld += i7;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i3 + i4 + i5 + i6 + i7 + (b ? 1 :
                0) + by1 + i15 + i16;
    }

    public float fMeth() {

        int i17 = -154, i18 = -11, i19 = -8, i20 = -19643;
        boolean b1 = false;

        vMeth(Test0093.dFld, Test0093.dFld, iFld);
        i17 = 1;
        while (++i17 < 312) {
            iFld = iFld;
            Test0093.fFld = i17;
            b1 = b1;
            i18 = 1;
            do {
                iFld += (((i18 * Test0093.instanceCount) + iFld) - i18);
                if (i18 != 0) {
                }
                for (i19 = i18; i19 < 1; ++i19) {
                    Test0093.instanceCount -= i19;
                    i20 -= sFld;
                    i20 /= (int) (i18 | 1);
                    iArrFld[i18] = (int) Test0093.fFld;
                    iFld >>= (int) 32283L;
                    b1 = b1;
                }
            } while (++i18 < 5);
        }
        long meth_res = i17 + (b1 ? 1 : 0) + i18 + i19 + i20;
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i1 = 14, i2 = 24517, i21 = 6, i22 = -67, i23 = 156, i24 = -10, i25 = -126;
        byte by = 108;

        for (int i : iArrFld) {
            i >>>= (int) (-(-(i = (int) Test0093.instanceCount)));
            i1 = 1;
            do {
                i = (++iArrFld[i1]);
                iArrFld[i1] -= iArrFld[i1 - 1];
                i2 = 1;
                while (++i2 < 1) {
                    i -= (int) (Test0093.lArrFld[(i2 >>> 1) % N] % (((i + -184) - (i2 % (by | 1))) | 1));
                    Test0093.fFld *= (iArrFld[i2] - Test0093.sArrFld[i2 + 1]);
                    i += (i2 * i1);
                    Test0093.dFld -= (Math.abs(-16245 - by) + i2);
                    Test0093.instanceCount *= (long) (-fMeth());
                    iFld ^= i2;
                }
                i = -8;
                i -= i;
            } while (++i1 < 63);
            for (i21 = 1; 63 > i21; ++i21) {
                switch ((i21 % 1) + 21) {
                    case 21:
                        for (i23 = 1; i23 < 2; ++i23) {
                            Test0093.fFld += (float) 63.88030;
                            i24 += (i23 - Test0093.fFld);
                            Test0093.fFld -= 2;
                        }
                        i25 = 1;
                        do {
                            Test0093.fArrFld[i25 + 1] -= i1;
                            i24 *= (int) Test0093.instanceCount;
                            iArrFld = iArrFld;
                            Test0093.instanceCount += (((i25 * i22) + i) - i1);
                            i += (i25 * iFld1);
                            iArrFld[i21 - 1] -= i21;
                        } while (++i25 < 2);
                        i24 += (i21 * i2);
                        i24 = (int) Test0093.fFld;
                        break;
                }
                i ^= (int) Test0093.instanceCount;
            }
        }

        FuzzerUtils.out.println("i1 i2 by = " + i1 + "," + i2 + "," + by);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 = " + i24 + "," + i25);

        FuzzerUtils.out.println("Test0093.instanceCount Test0093.fFld Test0093.dFld = " + Test0093.instanceCount + "," +
                Float.floatToIntBits(Test0093.fFld) + "," + Double.doubleToLongBits(Test0093.dFld));
        FuzzerUtils.out.println("iFld sFld iFld1 = " + iFld + "," + sFld + "," + iFld1);
        FuzzerUtils.out.println("iArrFld Test0093.lArrFld Test0093.sArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0093.lArrFld) + "," + FuzzerUtils.checkSum(Test0093.sArrFld));
        FuzzerUtils.out.println("Test0093.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0093.fArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
