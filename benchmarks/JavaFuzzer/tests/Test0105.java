// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test0105 {

    public static final int N = 400;

    public static long instanceCount = 6617981402092904510L;
    public static double dFld = -2.24920;
    public static boolean bFld = false;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public short sFld = 29602;
    public int iFld = -40328;
    public int iFld1 = -4;
    public int[][] iArrFld = new int[N][N];
    public float[] fArrFld = new float[N];

    public static void main(String[] strArr) {

        try {
            Test0105 _instance = new Test0105();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(byte by, int i5) {

        float f1 = -52.16F;
        int i6 = -3582, i7 = -7, i8 = -1, i9 = 5;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -1774047752L);

        i5 *= (int) Test0105.instanceCount;
        f1 *= 126L;
        for (i6 = 4; i6 < 144; ++i6) {
            i7 = (int) f1;
            f1 = i7;
            Test0105.instanceCount -= i6;
            lArr[i6] = i6;
            i7 += i6;
            Test0105.instanceCount += 750804935L;
            for (i8 = 1; i8 < 11; i8++) {
                Test0105.instanceCount = (long) f1;
                i5 -= (int) Test0105.dFld;
            }
            Test0105.instanceCount *= i7;
        }
        Test0105.bFld = Test0105.bFld;
        Test0105.dFld = f1;
        long meth_res = by + i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void vMeth1(long l, int i) {

        int i1 = 167, i2 = -18126, i3 = 9, i4 = -2, i10 = 153;
        long l1 = -12320L;
        double d = -14.54879;

        for (i1 = 21; i1 < 383; i1++) {
            for (i3 = 1; i3 < 5; ++i3) {
                i = (int) Math.sqrt(Test0105.dFld--);
                try {
                    iArrFld[i3 - 1][i3 + 1] = (i % iArrFld[i3 - 1][i1 - 1]);
                    i = (i1 % -1669770463);
                    i4 = (-238892623 % i4);
                } catch (ArithmeticException a_e) {
                }
                i = (++i4);
                i += (i3 - Test0105.instanceCount);
                i >>= sFld;
                Test0105.instanceCount = iMeth((byte) (-87), i1);
                i4 = (int) Test0105.dFld;
                iArrFld[i1] = iArrFld[i3];
                l1 += i2;
            }
            iArrFld[i1 + 1][i1] = i2;
            for (d = 5; 1 < d; --d) {
                if (Test0105.bFld) continue;
                Test0105.dFld = i;
            }
        }
        vMeth1_check_sum += l + i + i1 + i2 + i3 + i4 + l1 + Double.doubleToLongBits(d) + i10;
    }

    public void vMeth(float f) {

        int i11 = 1, i12 = 131, i13 = -4, i14 = -12, i15 = 3;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 0.407F);

        vMeth1(-8043926888310664239L, i11);
        for (i12 = 8; i12 < 318; ++i12) {
            if (i13 != 0) {
                vMeth_check_sum += Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            i13 = (int) Test0105.instanceCount;
            for (i14 = i12; i14 < 5; i14++) {
                iArrFld[i14][i12] <<= i15;
                Test0105.dFld = -27153;
                fArr[i14 - 1] = i15;
            }
            iArrFld[i12 + 1][i12] -= i13;
            i11 = i15;
            i11 = i11;
            i15 += i15;
            iArrFld[i12][i12 + 1] <<= -54447;
            iArrFld[i12][i12 - 1] += i13;
        }
        iArrFld[(51988 >>> 1) % N][(i14 >>> 1) % N] >>= i11;
        vMeth_check_sum += Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        float f2 = 106.326F, f3 = 14.936F;
        int i16 = 34857, i17 = -51390, i18 = 254, i19 = -10285;
        byte by1 = 118;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 15353L);

        vMeth(f2);
        f2 -= -30873;
        fArrFld = FuzzerUtils.float1array(N, (float) -1.523F);
        iFld <<= iFld;
        Test0105.instanceCount = -8;
        i16 = 1;
        while (++i16 < 359) {
            for (f3 = 1; 70 > f3; ++f3) {
                for (i18 = 1; i18 < 2; i18++) {
                    iFld *= i16;
                    Test0105.instanceCount = i17;
                    sFld *= (short) 7458259648448184117L;
                    Test0105.instanceCount = -10538;
                    Test0105.instanceCount -= i17;
                    switch ((i18 % 10) + 85) {
                        case 85:
                            i17 *= i19;
                            i19 -= (int) Test0105.instanceCount;
                            i19 += iFld1;
                            iFld1 &= iFld;
                            break;
                        case 86:
                            by1 += (byte) i16;
                        case 87:
                            iArrFld[(int) (f3 - 1)][i18] >>= 24948;
                            i17 += i16;
                            i17 -= (int) Test0105.instanceCount;
                            Test0105.instanceCount = Test0105.instanceCount;
                            break;
                        case 88:
                        case 89:
                        case 90:
                            f2 = Test0105.instanceCount;
                            iFld = iFld;
                            lArr1[i18 - 1] += i17;
                            Test0105.instanceCount += i19;
                        case 91:
                            iFld1 += (i18 - Test0105.instanceCount);
                            i17 = iFld1;
                            i19 |= sFld;
                        case 92:
                            iFld *= by1;
                            break;
                        case 93:
                            Test0105.dFld = -85.581F;
                            break;
                        case 94:
                            iFld1 = iFld;
                            break;
                        default:
                            i19 += (i18 * i18);
                    }
                }
            }
        }

        FuzzerUtils.out.println("f2 i16 f3 = " + Float.floatToIntBits(f2) + "," + i16 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("by1 lArr1 = " + by1 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0105.instanceCount Test0105.dFld sFld = " + Test0105.instanceCount + "," +
                Double.doubleToLongBits(Test0105.dFld) + "," + sFld);
        FuzzerUtils.out.println("Test0105.bFld iFld iFld1 = " + (Test0105.bFld ? 1 : 0) + "," + iFld + "," + iFld1);
        FuzzerUtils.out.println("iArrFld fArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
