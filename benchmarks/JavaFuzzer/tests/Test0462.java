// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test0462 {

    public static final int N = 400;

    public static long instanceCount = 11L;
    public static int iFld = -32;
    public static boolean bFld = false;
    public static double dFld = -2.23469;
    public static float fFld = 2.676F;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(boolean b, double d, int i5) {


        d = i5;
        Test0462.iFld %= -10382;
        i5 = i5;
        long meth_res = (b ? 1 : 0) + Double.doubleToLongBits(d) + i5;
        iMeth2_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth1(int i3, int i4, float f) {


        i3 = (((Test0462.iFld--) * iMeth2(Test0462.bFld, Test0462.dFld, Test0462.iFld)) + Test0462.iFld);
        long meth_res = i3 + i4 + Float.floatToIntBits(f);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(byte by, int i) {

        int i1 = -49454;
        int i2 = -23884;
        int i6 = -64280;
        int i7 = 107;
        int i8 = 117;
        int i9 = -11;
        int i10 = -53914;
        int[] iArr = new int[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr, 14);
        FuzzerUtils.init(fArr, -12.727F);

        for (i1 = 260; i1 > 10; --i1) {
            iArr[i1] -= (iMeth1(27275, -5539, 0.837F) * -3);
            Test0462.instanceCount += (i1 * i1);
            for (i6 = 1; i6 < 7; ++i6) {
                Test0462.fFld -= i;
                Test0462.dFld -= i2;
                try {
                    i2 = (Test0462.iFld % i);
                    Test0462.iFld = (-17648 / iArr[i6]);
                    i7 = (i1 % iArr[i6]);
                } catch (ArithmeticException a_e) {
                }
                for (i8 = 1; 2 > i8; ++i8) {
                    switch (((-7 >>> 1) % 5) + 20) {
                        case 20:
                            Test0462.iFld = i9;
                            i7 &= (int) Test0462.instanceCount;
                            i7 += (((i8 * Test0462.fFld) + i7) - i8);
                            break;
                        case 21:
                            Test0462.fFld = i10;
                            break;
                        case 22:
                            i += (i8 * i8);
                            Test0462.fFld = i8;
                            break;
                        case 23:
                            fArr[i8 - 1] -= Test0462.instanceCount;
                            break;
                        case 24:
                            iArr = iArr;
                            break;
                        default:
                            Test0462.instanceCount = i6;
                    }
                }
            }
        }
        long meth_res = by + i + i1 + i2 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0462 _instance = new Test0462();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        byte by1 = -112;
        int i11 = -109;
        int i12 = -108;
        int i13 = 14;
        int i14 = 63419;
        int i15 = -12389;
        int i16 = 16;
        int i17 = -198;
        int i18 = -42039;
        int i19 = 0;
        int i20 = -53824;
        int i21 = 154;
        int i22 = -46173;
        int i23 = -194;
        int[][] iArr1 = new int[N][N];
        int[] iArr2 = new int[N];
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 18317);
        FuzzerUtils.init(iArr1, -33833);
        FuzzerUtils.init(iArr2, -85);

        if (Test0462.bFld) {
            sArr[(Test0462.iFld >>> 1) % N] -= (short) iMeth(by1, Test0462.iFld);
            Test0462.instanceCount += 9;
            i11 = 1;
            while (++i11 < 156) {
                Test0462.iFld >>= Test0462.iFld;
            }
        }
        for (i12 = 18; i12 < 342; i12++) {
            i13 += i12;
            Test0462.dFld -= -14;
            Test0462.dFld = i12;
            iArr1[i12][i12 - 1] = Test0462.iFld;
        }
        for (i14 = 16; i14 < 395; i14++) {
            Test0462.instanceCount += (i14 * i14);
            i13 <<= -4;
            if (Test0462.bFld) break;
            for (i16 = 3; i16 < 66; ++i16) {
                Test0462.dFld += -163L;
            }
            for (i18 = i14; i18 < 66; i18++) {
                i15 = i16;
            }
            try {
                i13 = (195 / i18);
                i17 = (iArr2[i14 - 1] % 172);
                iArr1[i14 - 1][i14] = (-264372401 / i19);
            } catch (ArithmeticException a_e) {
            }
            i13 = Test0462.iFld;
        }
        for (i20 = 5; i20 < 123; i20++) {
            for (i22 = 212; i22 > 13; --i22) {
                i21 += i20;
                i23 = (int) Test0462.instanceCount;
                by1 *= by1;
            }
            Test0462.fFld += -44199;
            i21 = i15;
            i19 += (((i20 * i19) + i13) - i21);
            i23 = Test0462.iFld;
            Test0462.instanceCount >>>= -58L;
        }

        FuzzerUtils.out.println("by1 i11 i12 = " + by1 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 sArr = " + i22 + "," + i23 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("iArr1 iArr2 = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0462.instanceCount Test0462.iFld Test0462.bFld = " + Test0462.instanceCount + "," + Test0462.iFld +
                "," + (Test0462.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0462.dFld Test0462.fFld = " + Double.doubleToLongBits(Test0462.dFld) + "," +
                Float.floatToIntBits(Test0462.fFld));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
