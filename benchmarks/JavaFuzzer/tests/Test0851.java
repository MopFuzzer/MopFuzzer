// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test0851 {

    public static final int N = 400;

    public static long instanceCount = -55091L;
    public static volatile int iFld = 8;
    public static float fFld = -4.881F;
    public static boolean[] bArrFld = new boolean[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0851.bArrFld, true);
    }

    public volatile boolean bFld = true;
    public int[] iArrFld = new int[N];
    public float[] fArrFld = new float[N];

    public static int iMeth(int i1) {

        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 11L);

        i1 -= (int) ((lArr[(-62559 >>> 1) % N]++) + i1);
        long meth_res = i1 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static short sMeth(long l, short s) {

        int i12 = -84;
        int i13 = 0;
        int i14 = -33785;
        int i15 = -18;
        int[] iArr = new int[N];
        boolean b = false;
        double d = -1.76146;
        double[] dArr = new double[N];
        float f = -96.50F;

        FuzzerUtils.init(dArr, -1.125437);
        FuzzerUtils.init(iArr, 32065);

        i12 <<= i12;
        i12 <<= i12;
        if (true) {
            if (b) {
                i12 = (int) -6L;
                b = b;
                for (d = 1; d < 368; ++d) {
                    double d1 = -51.28664;
                    d1 += 25325;
                    if (b) {
                        i13 += (int) (((d * s) + l) - i13);
                        dArr[(int) (d)] = Test0851.instanceCount;
                    } else if (true) {
                        for (i14 = 1; i14 < 5; ++i14) {
                            d1 = i14;
                            iArr[(int) (d)] *= i15;
                            f = i14;
                        }
                    }
                }
            }
        }
        long meth_res = l + s + i12 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i13 + i14 + i15 +
                Float.floatToIntBits(f) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void vMeth1(int i5, int i6) {

        int i7 = -14;
        int i8 = 22548;
        int i9 = 36946;
        int i10 = -50;
        int i11 = -135;
        int i16 = 8;
        int[] iArr1 = new int[N];
        byte by = -65;
        double d2 = 26.127270;
        float f1 = 116.198F;
        long l1 = 5316712923619809522L;
        long[] lArr1 = new long[N];
        short s2 = -4122;

        FuzzerUtils.init(lArr1, -2L);
        FuzzerUtils.init(iArr1, 227);

        for (i7 = 22; 364 > i7; i7++) {
            i6 <<= (i8++);
            for (i9 = 1; i9 < 5; ++i9) {
                i11 = 1;
                while (++i11 < 2) {
                    short s1 = 4818;
                    by += (byte) (i11 | i7);
                    i5 = (int) ((sMeth(61344L, s1) + Test0851.instanceCount) - i10);
                    s1 = (short) d2;
                }
                f1 -= -46L;
                lArr1[i7 + 1] |= i8;
                for (l1 = 1; l1 < 2; ++l1) {
                    iArr1[i7 + 1] += (int) f1;
                    lArr1[i7 + 1] = i8;
                }
                iArr1[i7] ^= i11;
                f1 += s2;
                f1 *= i16;
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + by + Double.doubleToLongBits(d2) +
                Float.floatToIntBits(f1) + l1 + i16 + s2 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i3, int i4) {


        vMeth1(i4, i3);
        vMeth_check_sum += i3 + i4;
    }

    public static void main(String[] strArr) {

        try {
            Test0851 _instance = new Test0851();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -5, i17 = -158, i18 = 218, i19 = 234, i20 = -14, i21 = -10, i22 = -27303, i23 = 5;
        float f2 = -14.1018F;
        double d3 = -2.96578;
        long[] lArr2 = new long[N];

        FuzzerUtils.init(lArr2, -403376662L);

        i *= ((-(++i)) - Math.abs(iMeth(i)));
        iArrFld[(i >>> 1) % N] -= i;
        i *= iMeth((int) (Test0851.instanceCount + (i + i)));
        for (int i2 : iArrFld) {
            fArrFld[(39708 >>> 1) % N] -= (((--i) * Math.max(i2, i2)) + i);
        }
        vMeth(i, 2);
        fArrFld = fArrFld;
        i += i;
        i = i;
        i |= Test0851.iFld;
        fArrFld[(i >>> 1) % N] = 1.889F;
        i17 = 1;
        while (++i17 < 316) {
            short s3 = 22497;
            Test0851.bArrFld[i17 + 1] = bFld;
            lArr2[i17 - 1] -= (long) 113.58293;
            s3 <<= (short) i17;
        }
        i18 = 1;
        while (++i18 < 328) {
            Test0851.iFld *= (int) 1.21013;
        }
        if (bFld) {
            fArrFld[(i17 >>> 1) % N] -= i18;
            for (i19 = 9; i19 < 261; i19 += 3) {
                Test0851.iFld += (((i19 * Test0851.iFld) + i18) - Test0851.instanceCount);
                for (f2 = 298; f2 > i19; f2 -= 3) {
                    d3 = f2;
                    iArrFld[i19] <<= (int) 333875370L;
                    if (bFld) break;
                }
                Test0851.fFld += (float) 0.110249;
                Test0851.fFld += (i19 * i19);
                for (i22 = 15; i22 < 298; i22++) {
                    Test0851.fFld += Test0851.instanceCount;
                    i21 += (int) Test0851.instanceCount;
                }
            }
        } else if (bFld) {
            Test0851.instanceCount >>= i23;
        }

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 f2 = " + i19 + "," + i20 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i21 d3 i22 = " + i21 + "," + Double.doubleToLongBits(d3) + "," + i22);
        FuzzerUtils.out.println("i23 lArr2 = " + i23 + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test0851.instanceCount Test0851.iFld bFld = " + Test0851.instanceCount + "," + Test0851.iFld + "," +
                (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0851.fFld iArrFld fArrFld = " + Float.floatToIntBits(Test0851.fFld) + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("Test0851.bArrFld = " + FuzzerUtils.checkSum(Test0851.bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
