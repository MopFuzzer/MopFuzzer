// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0242 {

    public static final int N = 400;

    public static long instanceCount = 3838353601L;
    public static int iFld = -14;
    public static short sFld = 26127;
    public static byte byFld = -89;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0242.iArrFld, 908);
    }

    public volatile float fFld = 0.378F;

    public static int iMeth(int i5) {

        float f2 = 15.414F;
        double d = 2.23803;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, -12);

        Test0242.instanceCount *= Test0242.iFld;
        f2 = (float) d;
        iArr1[(Test0242.iFld >>> 1) % N] = (int) Test0242.instanceCount;
        d = d;
        iArr1[(i5 >>> 1) % N] = Test0242.iFld;
        long meth_res = i5 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i1, int i2) {

        int i3 = 1, i4 = -148, i6 = 0, i7 = 60, i8 = 11, i9 = -13;
        double d1 = -1.15910;
        double[] dArr = new double[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(dArr, 39.33068);
        FuzzerUtils.init(lArr, 46219L);

        for (i3 = 11; i3 < 183; ++i3) {
            if (i2 != 0) {
                vMeth1_check_sum += i1 + i2 + i3 + i4 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d1) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
                return;
            }
            Test0242.sFld = (short) (-(i2 * iMeth(i4)));
            i4 += i3;
            for (i6 = 1; i6 < 9; i6 += 2) {
                for (i8 = i3; i8 < 3; ++i8) {
                    switch ((((0 >>> 1) % 8) * 5) + 88) {
                        case 116:
                            i1 = i2;
                            i7 = (int) Test0242.instanceCount;
                            break;
                        case 128:
                            Test0242.byFld = (byte) i2;
                            break;
                        case 109:
                            dArr[(i9 >>> 1) % N] -= Test0242.instanceCount;
                            i4 >>>= i6;
                            break;
                        case 110:
                            d1 = i7;
                            break;
                        case 102:
                            lArr = lArr;
                            Test0242.instanceCount *= i6;
                        case 106:
                            Test0242.instanceCount ^= Test0242.instanceCount;
                            break;
                        case 124:
                            i2 += i8;
                            break;
                        case 115:
                            i1 -= Test0242.sFld;
                            break;
                    }
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        float f = 2.95F, f1 = 60.286F;
        int i10 = 20;
        int i11 = 8;
        int i12 = -12;
        int i13 = 30477;
        int[] iArr = new int[N];
        boolean b = true;

        FuzzerUtils.init(iArr, 185);

        f = iArr[(Test0242.iFld >>> 1) % N];
        f1 = 1;
        while (++f1 < 202) {
            vMeth1(Test0242.iFld, 59432);
            Test0242.iFld = Test0242.iFld;
            Test0242.iFld ^= Test0242.iFld;
        }
        for (i10 = 8; i10 < 358; i10++) {
            Test0242.sFld = (short) Test0242.instanceCount;
            if (b) {
                i11 += (i10 ^ i11);
                Test0242.iFld += i10;
                i11 += 113;
            } else {
                for (i12 = 1; i12 < 5; ++i12) {
                    Test0242.iFld += i12;
                    i13 *= i11;
                }
                if (Test0242.iFld != 0) {
                    vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i10 + i11 + (b ? 1 : 0) +
                            i12 + i13 + FuzzerUtils.checkSum(iArr);
                    return;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i10 + i11 + (b ? 1 : 0) + i12 + i13 +
                FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0242 _instance = new Test0242();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 171, i14 = -31962, i15 = 32, i16 = 19353, i17 = 4, i18 = -195, i19 = -197;
        byte by = -18;
        double d2 = -50.69124;
        double[] dArr1 = new double[N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(dArr1, -4.81675);
        FuzzerUtils.init(lArr1, -36659L);

        i -= (int) (fFld--);
        Test0242.instanceCount >>= (--by);
        vMeth();
        i14 = 1;
        do {
            i /= (int) (i14 | 1);
            for (d2 = 4; d2 < 65; d2++) {
                switch (((Test0242.iFld >>> 1) % 8) + 67) {
                    case 67:
                        Test0242.byFld %= (byte) (Test0242.iFld | 1);
                        break;
                    case 68:
                        fFld %= ((long) (fFld) | 1);
                        i *= i;
                        dArr1 = dArr1;
                        Test0242.iArrFld[(int) (d2 - 1)] = (int) d2;
                        break;
                    case 69:
                        Test0242.iFld = (int) 198L;
                        for (i16 = 1; i16 < 2; ++i16) {
                            Test0242.sFld >>= (short) i;
                            Test0242.instanceCount = (long) fFld;
                            Test0242.iFld += (i16 * i16);
                        }
                        Test0242.iArrFld[(int) (d2 - 1)] = Test0242.sFld;
                        i18 = 2;
                        while (--i18 > 0) {
                            i15 = (int) -1847901340622427423L;
                            fFld = i18;
                            switch ((i14 % 1) + 82) {
                                case 82:
                                    Test0242.instanceCount *= i16;
                                    lArr1[i14 - 1] += i16;
                                    i19 += (i18 * i18);
                                    Test0242.iArrFld[(i14 >>> 1) % N] -= (int) 1.46784;
                                    break;
                            }
                            i17 = i15;
                            lArr1[i18 + 1] = 11;
                            Test0242.instanceCount -= 202;
                            Test0242.iFld = (int) d2;
                        }
                        break;
                    case 70:
                        i15 -= (int) 102.848F;
                        break;
                    case 71:
                        Test0242.instanceCount = i18;
                        break;
                    case 72:
                        i15 += (int) d2;
                        break;
                    case 73:
                        i17 += (int) d2;
                        break;
                    case 74:
                        Test0242.iArrFld[(i15 >>> 1) % N] *= Test0242.iFld;
                }
            }
        } while (++i14 < 385);

        FuzzerUtils.out.println("i by i14 = " + i + "," + by + "," + i14);
        FuzzerUtils.out.println("d2 i15 i16 = " + Double.doubleToLongBits(d2) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("dArr1 lArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," +
                FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0242.instanceCount fFld Test0242.iFld = " + Test0242.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0242.iFld);
        FuzzerUtils.out.println("Test0242.sFld Test0242.byFld Test0242.iArrFld = " + Test0242.sFld + "," + Test0242.byFld + "," +
                FuzzerUtils.checkSum(Test0242.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
