// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0280 {

    public static final int N = 400;

    public static long instanceCount = -17125L;
    public static double dFld = -2.82843;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0280.fArrFld, -72.921F);
        FuzzerUtils.init(Test0280.iArrFld, 12);
        FuzzerUtils.init(Test0280.dArrFld, -1.29970);
    }

    public float fFld = -2.383F;

    public static void vMeth1(int i4, int i5) {

        int i6 = -6;
        int i7 = -193;
        int i8 = 38557;
        int i9 = -3;
        int i10 = 12;
        int[][] iArr = new int[N][N];
        double d = -15.104128;
        short s1 = 2544;
        float f1 = 100.723F;

        FuzzerUtils.init(iArr, -77);

        Test0280.dFld *= -1.513F;
        for (i6 = 143; 4 < i6; --i6) {
            Test0280.fArrFld[i6 + 1] -= i7;
            i5 = (int) Test0280.instanceCount;
            switch (((i6 % 2) * 5) + 43) {
                case 44:
                    i5 = (int) Test0280.instanceCount;
                    i8 = 1;
                    while (++i8 < 11) {
                        i5 += i8;
                        i4 -= (int) Test0280.instanceCount;
                        d = Test0280.instanceCount;
                    }
                    i4 = -9;
                    for (i9 = 11; i9 > 1; i9--) {
                        s1 *= (short) i4;
                        iArr[i9 + 1][i9 + 1] += 41;
                        f1 = i5;
                    }
                case 47:
                    iArr[i6 + 1][i6 + 1] -= i8;
                default:
                    d += i9;
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + s1 +
                Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(float f) {

        int i11 = -4761, i12 = 12, i13 = 0;

        vMeth1(i11, -168);
        i11 *= i11;
        i11 = i11;
        i11 *= (int) Test0280.instanceCount;
        Test0280.instanceCount *= i11;
        for (float f2 : Test0280.fArrFld) {
            for (i12 = 1; 4 > i12; ++i12) {
                Test0280.iArrFld[i12 - 1] -= i12;
                i13 -= 3;
                Test0280.instanceCount = 1;
                i11 >>>= (int) Test0280.instanceCount;
                i13 -= i13;
                i11 = i12;
                i13 = (int) Test0280.dFld;
                i13 += i11;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i11 + i12 + i13;
    }

    public static long lMeth(int i3) {

        float f3 = -68.61F;
        int i14 = 6, i15 = 0;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 110L);

        vMeth(f3);
        for (i14 = 7; i14 < 369; i14++) {
            Test0280.instanceCount += i3;
            i3 = i14;
            f3 *= -7;
            i15 += 234;
            Test0280.instanceCount *= i3;
            lArr1 = lArr1;
            Test0280.dFld -= -95.129890;
        }
        long meth_res = i3 + Float.floatToIntBits(f3) + i14 + i15 + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0280 _instance = new Test0280();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        short s = 5978;
        int i = 1, i1 = 3, i2 = 70, i16 = -19722, i17 = 4, i18 = -62520, i19 = 12, i20 = 31269;
        double d1 = 56.107732;
        byte by = 0;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 11772L);

        s = (short) Math.min(--i, --i);
        lArr = (lArr = lArr);
        for (i1 = 16; 384 > i1; i1++) {
            i = (int) (lMeth(i) * fFld);
            i2 -= (int) Test0280.instanceCount;
            Test0280.fArrFld[i1] += fFld;
            Test0280.iArrFld[i1 + 1] += (int) Test0280.instanceCount;
            switch ((i1 % 2) + 116) {
                case 116:
                    i += (-8 + (i1 * i1));
                    i2 += (-10 + (i1 * i1));
                    i -= i1;
                    break;
                case 117:
                    i -= s;
                    for (i16 = 3; i16 < 68; ++i16) {
                        i17 = i1;
                        i += (int) fFld;
                        for (i18 = 2; 1 < i18; i18 -= 2) {
                            i2 <<= (int) 131616760L;
                            Test0280.fArrFld[i18] = Test0280.instanceCount;
                            i2 -= i;
                        }
                        Test0280.iArrFld[i16 - 1] = i18;
                    }
                    break;
            }
            for (d1 = 4; d1 < 68; ++d1) {
                i19 += (int) Test0280.instanceCount;
                i = i2;
                fFld -= -45;
                i19 += (int) (d1 * d1);
            }
        }
        Test0280.iArrFld[(45 >>> 1) % N] = 46453;
        Test0280.dArrFld[(i16 >>> 1) % N] -= by;
        fFld *= i19;
        i20 = -3;
        Test0280.fArrFld[(i17 >>> 1) % N] -= Test0280.instanceCount;

        FuzzerUtils.out.println("s i i1 = " + s + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i16 i17 = " + i2 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 d1 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i20 by lArr = " + i20 + "," + by + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0280.instanceCount Test0280.dFld fFld = " + Test0280.instanceCount + "," +
                Double.doubleToLongBits(Test0280.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0280.fArrFld Test0280.iArrFld Test0280.dArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0280.fArrFld)) + "," + FuzzerUtils.checkSum(Test0280.iArrFld) +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0280.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
