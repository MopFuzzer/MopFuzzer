// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test0977 {

    public static final int N = 400;

    public static long instanceCount = -51115L;
    public static volatile short sFld = -3289;
    public static float fFld = 1.537F;
    public static int[][] iArrFld = new int[N][N];
    public static float[] fArrFld = new float[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0977.iArrFld, -45337);
        FuzzerUtils.init(Test0977.fArrFld, -105.289F);
    }

    public boolean bFld = true;
    public double dFld = 21.65401;

    public static byte byMeth(long l, int i10, int i11) {

        int i12 = 43603, i13 = -6, i14 = 8, i15 = -164, i16 = -13, i17 = -6;
        double d1 = 0.19249;

        i12 = 1;
        while (++i12 < 332) {
            Test0977.instanceCount = i11;
            i11 = i12;
            Test0977.iArrFld[i12][i12 + 1] <<= i12;
            Test0977.iArrFld[i12][i12 + 1] = (int) Test0977.fFld;
        }
        l *= l;
        Test0977.iArrFld[(i10 >>> 1) % N][(i11 >>> 1) % N] *= (int) Test0977.instanceCount;
        for (i13 = 346; 11 < i13; i13--) {
            for (i15 = i13; i15 < 5; ++i15) {
                l *= -53063;
            }
            i14 = i14;
            Test0977.instanceCount -= (long) d1;
            i17 = 1;
            while (++i17 < 5) {
                i16 = (int) Test0977.instanceCount;
                i14 <<= i10;
            }
        }
        long meth_res = l + i10 + i11 + i12 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + i17;
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static int iMeth() {

        int i8 = -41540;
        int i9 = -144;
        int i19 = -28050;
        int i20 = 9;
        int[] iArr1 = new int[N];
        double d2 = 0.10844;
        boolean b1 = false;
        byte by1 = 6;

        FuzzerUtils.init(iArr1, 63204);

        for (i8 = 1; i8 < 177; ++i8) {
            Test0977.instanceCount = byMeth(Test0977.instanceCount, 9, i8);
        }
        for (int i18 : iArr1) {
            Test0977.instanceCount += (long) d2;
            Test0977.instanceCount = -7;
            if (b1) {
                for (i19 = 1; i19 < 4; ++i19) {
                    b1 = b1;
                    i9 -= by1;
                    i20 -= i20;
                    Test0977.instanceCount = i20;
                    if (false) break;
                    i20 += -39160;
                }
                i9 >>= i19;
            } else if (b1) {
                d2 -= 0L;
            } else if (b1) {
                i20 = i8;
            }
        }
        long meth_res = i8 + i9 + Double.doubleToLongBits(d2) + i19 + i20 + (b1 ? 1 : 0) + by1 +
                FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(double d) {

        int i2 = 3;
        int i3 = -191;
        int i4 = -12;
        int i5 = -87;
        int i6 = -4;
        int i21 = -1;
        int i22 = -14177;
        int[] iArr = new int[N];
        boolean b = false;
        byte by = 118;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(iArr, -3);
        FuzzerUtils.init(byArr, (byte) -88);

        i2 = 1;
        do {
            for (i3 = 1; i3 < 6; ++i3) {
                for (i5 = 2; i5 > 1; --i5) {
                    int i7 = -57087;
                    i4 += (((i5 * i3) + Test0977.sFld) - i3);
                    b = (b = ((i5 * Test0977.fFld) != i6));
                    Test0977.instanceCount = (long) ((by <<= (byte) (-1 + (i3 - Test0977.instanceCount))) + (++Test0977.fFld));
                    Test0977.instanceCount = ((++i6) * ((i3 + i6) / (iArr[i3 - 1] | 1)));
                    i4 = (int) (Test0977.instanceCount % (((long) ((i7 - i7) * Float.intBitsToFloat(i6))) | 1));
                    Test0977.instanceCount -= (i6 - byArr[i2 + 1]);
                    try {
                        i7 = (-59423 / i6);
                        i7 = (16263 / iArr[i2]);
                        i4 = (i4 / 180);
                    } catch (ArithmeticException a_e) {
                    }
                }
                i6 = (int) (Test0977.instanceCount = (long) ((-iMeth()) - Test0977.fFld));
            }
            if (true) continue;
            for (i21 = i2; i21 < 6; ++i21) {
                b = true;
                i4 += (((i21 * Test0977.instanceCount) + by) - i3);
            }
        } while (++i2 < 261);
        vMeth_check_sum += Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + i6 + (b ? 1 : 0) + by + i21 + i22 +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0977 _instance = new Test0977();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 10, i1 = -106, i23 = -41, i24 = 3, i25 = -14, i26 = 152, i27 = -2, i28 = 3, i29 = -193;
        long l1 = 246L;
        byte by2 = 2;
        byte[] byArr1 = new byte[N];
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 17027);
        FuzzerUtils.init(byArr1, (byte) -60);

        for (i = 12; i < 386; i++) {
            if (bFld) continue;
            dFld /= (i | 1);
            i1 = (++i1);
            switch ((i % 7) + 4) {
                case 4:
                    Test0977.instanceCount += (i - ((Test0977.instanceCount - -15133) - (--i1)));
                    vMeth(0.92301);
                    sArr[i + 1] += (short) dFld;
                    for (i23 = i; i23 < 67; ++i23) {
                        Test0977.fArrFld[i23 - 1] %= (i1 | 1);
                        i1 = (int) Test0977.instanceCount;
                        i25 = 1;
                        while (++i25 < 1) {
                            l1 -= i1;
                            i1 = (int) l1;
                            i24 = 37799;
                        }
                        switch ((i % 3) + 117) {
                            case 117:
                                i1 *= i1;
                                for (i26 = 1; i26 < 1; ++i26) {
                                    l1 += i24;
                                    Test0977.iArrFld[i23 + 1][i26 - 1] = i26;
                                    Test0977.sFld += (short) -110;
                                    Test0977.sFld += (short) (i26 ^ i23);
                                    dFld = Test0977.sFld;
                                    i1 -= (int) Test0977.fFld;
                                    i1 *= i1;
                                }
                                for (i28 = 1; i28 < 1; i28++) {
                                    Test0977.instanceCount *= -5158;
                                    byArr1[i23] = by2;
                                    Test0977.iArrFld[i28][i28 + 1] = i25;
                                    i24 += i1;
                                }
                            case 118:
                                Test0977.fFld += (-13 + (i23 * i23));
                                break;
                            case 119:
                                i27 += (i23 ^ i24);
                                break;
                        }
                    }
                case 5:
                    i24 = (int) Test0977.instanceCount;
                    break;
                case 6:
                    Test0977.fArrFld[i - 1] *= Test0977.fFld;
                    break;
                case 7:
                    i27 -= (int) -6422362794690820096L;
                    break;
                case 8:
                    Test0977.fArrFld[i] -= Test0977.fFld;
                    break;
                case 9:
                    i29 = -10;
                    break;
                case 10:
                    if (bFld) continue;
                    break;
                default:
                    Test0977.instanceCount = i23;
            }
        }

        FuzzerUtils.out.println("i i1 i23 = " + i + "," + i1 + "," + i23);
        FuzzerUtils.out.println("i24 i25 l1 = " + i24 + "," + i25 + "," + l1);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 by2 sArr = " + i29 + "," + by2 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("byArr1 = " + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0977.instanceCount bFld dFld = " + Test0977.instanceCount + "," + (bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0977.sFld Test0977.fFld Test0977.iArrFld = " + Test0977.sFld + "," +
                Float.floatToIntBits(Test0977.fFld) + "," + FuzzerUtils.checkSum(Test0977.iArrFld));
        FuzzerUtils.out.println("Test0977.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0977.fArrFld)));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  byMeth ->  byMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
