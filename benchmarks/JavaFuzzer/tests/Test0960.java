// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0960 {

    public static final int N = 400;

    public static long instanceCount = 3874831146348963223L;
    public static volatile byte byFld = 117;
    public static volatile float fFld = 2.795F;
    public static double dFld = 0.94807;
    public static int[] iArrFld = new int[N];
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0960.iArrFld, 55543);
        FuzzerUtils.init(Test0960.fArrFld, -112.294F);
    }

    public boolean bFld = true;

    public static int iMeth2(int i1) {

        int i2 = 42750, i3 = 3;
        boolean b = true;

        for (i2 = 10; i2 < 202; ++i2) {
            short s = -8911;
            i1 += (i2 + i3);
            if (b) {
                if (b) continue;
                i1 += 247;
                Test0960.dFld += Test0960.fFld;
                Test0960.iArrFld[i2] -= i3;
            } else if (b) {
                i1 -= i2;
                Test0960.instanceCount = i2;
            } else if (b) {
                i1 += (((i2 * i2) + i1) - Test0960.fFld);
                i1 += (int) -3153253393L;
                i1 -= i2;
            }
            i3 -= i2;
            s = (short) i1;
            Test0960.instanceCount <<= i2;
        }
        long meth_res = i1 + i2 + i3 + (b ? 1 : 0);
        iMeth2_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth1() {

        int i4 = -16120, i5 = 8, i6 = -4, i7 = 33192, i8 = 8, i9 = -54773, i10 = 0;

        Test0960.dFld *= (iMeth2(i4) + Test0960.instanceCount);
        for (i5 = 4; i5 < 127; i5++) {
            for (i7 = i5; i7 < 13; i7++) {
                Test0960.instanceCount >>= i7;
                if (true) break;
                i4 <<= 1;
                Test0960.iArrFld = Test0960.iArrFld;
                for (i9 = 1; i9 < 1; ++i9) {
                    Test0960.fArrFld[i9] *= i8;
                    Test0960.instanceCount -= i7;
                    Test0960.dFld = -1.323F;
                }
                i6 -= (int) Test0960.fFld;
                i8 = i5;
                i10 += (i7 * i7);
                i6 = (int) Test0960.instanceCount;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i) {

        double d = 106.53321;
        int i11 = 11, i12 = 203, i13 = 130;
        float f = 106.901F;

        i += (i - (--i));
        d -= ((Integer.reverseBytes(i) >> i) - ((Test0960.byFld++) - Math.abs(Test0960.instanceCount)));
        Test0960.fFld += ((iMeth1() - i) * i);
        d += i;
        i11 = 1;
        while (++i11 < 222) {
            i |= (int) Test0960.instanceCount;
            i = (int) -2.994F;
        }
        Test0960.instanceCount >>>= Test0960.byFld;
        d += Test0960.instanceCount;
        i -= 32;
        Test0960.instanceCount = (long) Test0960.dFld;
        f = 1;
        while (++f < 269) {
            for (i12 = (int) (f); 6 > i12; i12++) {
                i -= (int) 17972L;
                Test0960.dFld = i13;
            }
        }
        long meth_res = i + Double.doubleToLongBits(d) + i11 + Float.floatToIntBits(f) + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0960 _instance = new Test0960();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i14 = 3, i15 = 97, i16 = -71, i17 = -202, i18 = -15829;
        short s1 = -31470;
        long[] lArr = new long[N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(lArr, -87L);
        FuzzerUtils.init(bArr, true);

        iMeth(i14);
        Test0960.instanceCount |= i14;
        i15 = 1;
        do {
            for (i16 = 3; 65 > i16; i16++) {
                Test0960.instanceCount *= (long) Test0960.dFld;
                lArr[i16] -= s1;
                i18 = 1;
                while (++i18 < 2) {
                    if (bFld) {
                        s1 += (short) i18;
                    } else if (bFld) {
                        i17 = (int) 0L;
                        i17 = (int) 7913010841240919773L;
                        Test0960.fFld *= i18;
                        i14 = i17;
                    } else {
                        i17 %= (int) (i18 | 1);
                    }
                    Test0960.byFld -= (byte) 2217654955L;
                    Test0960.instanceCount += (i18 * i18);
                    i17 = i18;
                    i17 -= (int) Test0960.instanceCount;
                    i17 -= -8;
                    bArr[i16] = bFld;
                    Test0960.iArrFld[i15 + 1] += i14;
                }
                Test0960.instanceCount -= 18;
                try {
                    i17 = (-47347 / i14);
                    i14 = (i14 % Test0960.iArrFld[i15 + 1]);
                    i14 = (i18 / i17);
                } catch (ArithmeticException a_e) {
                }
                i14 -= (int) Test0960.fFld;
                Test0960.instanceCount <<= Test0960.byFld;
                Test0960.fFld -= i18;
                Test0960.fFld = i18;
                Test0960.instanceCount += Test0960.instanceCount;
            }
            i17 += (int) Test0960.fFld;
            i17 = (int) Test0960.dFld;
        } while (++i15 < 389);

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 s1 i18 = " + i17 + "," + s1 + "," + i18);
        FuzzerUtils.out.println("lArr bArr = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0960.instanceCount Test0960.byFld Test0960.fFld = " + Test0960.instanceCount + "," + Test0960.byFld +
                "," + Float.floatToIntBits(Test0960.fFld));
        FuzzerUtils.out.println("Test0960.dFld bFld Test0960.iArrFld = " + Double.doubleToLongBits(Test0960.dFld) + "," + (bFld ? 1
                : 0) + "," + FuzzerUtils.checkSum(Test0960.iArrFld));
        FuzzerUtils.out.println("Test0960.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0960.fArrFld)));

        FuzzerUtils.out.println("iMeth2_check_sum: " + iMeth2_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
