// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0077 {

    public static final int N = 400;

    public static long instanceCount = 6019778632778643347L;
    public static long lFld = -15326L;
    public static byte byFld = 20;
    public static float fFld = 101.749F;
    public static short sFld = 32169;
    public static boolean bFld = false;
    public static volatile double dFld = 7.68620;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0077.iArrFld, 76);
    }

    public static void vMeth2(float f, short s) {

        int i3 = 23091;
        int i4 = 14;
        int i5 = 37338;
        int i6 = 11;
        int i7 = -10;
        int i8 = 29903;
        int[] iArr = new int[N];
        double d2 = 69.75513;
        boolean b = true;

        FuzzerUtils.init(iArr, -39);

        i3 <<= i3;
        Test0077.lFld += Test0077.byFld;
        f *= 6652;
        iArr[(i3 >>> 1) % N] = Test0077.byFld;
        Test0077.fFld = i3;
        for (d2 = 13; 217 > d2; ++d2) {
            for (i5 = 1; i5 < 8; ++i5) {
                if (b) {
                    Test0077.instanceCount *= (long) -1.962F;
                    for (i7 = i5; i7 < 2; i7++) {
                        float f1 = 75.957F;
                        i6 += (0 + (i7 * i7));
                        i6 -= (int) f1;
                        Test0077.fFld += i7;
                        iArr[i7 - 1] <<= i8;
                        i4 = (int) f1;
                    }
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + s + i3 + Double.doubleToLongBits(d2) + i4 + i5 + i6 + i7 + i8 +
                (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i1) {

        double d1 = 0.117962, d3 = 0.8025;
        int i2 = 14, i9 = 11, i10 = -150, i11 = 55835, i12 = 10, i13 = 647, i14 = -44490;

        for (d1 = 192; d1 > 7; d1--) {
            vMeth2(Test0077.fFld, Test0077.sFld);
            for (i9 = 1; i9 < 9; ++i9) {
                for (i11 = i9; i11 < 2; ++i11) {
                    Test0077.iArrFld[i9] -= (int) 1.46601;
                    i10 *= Test0077.byFld;
                    try {
                        Test0077.iArrFld[(i10 >>> 1) % N] = (i11 / 68);
                        i2 = (-64414 / i2);
                        i2 = (Test0077.iArrFld[(i2 >>> 1) % N] % i9);
                    } catch (ArithmeticException a_e) {
                    }
                    d3 += 62585L;
                    i10 += (i11 * i11);
                    i2 <<= 19044;
                    Test0077.bFld = false;
                    i1 = 14;
                }
                for (i13 = 2; i13 > 1; --i13) {
                    i14 += i12;
                    i14 += (int) Test0077.lFld;
                }
            }
        }
        vMeth1_check_sum += i1 + Double.doubleToLongBits(d1) + i2 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d3)
                + i13 + i14;
    }

    public static void vMeth(int i, double d) {

        long l = 1418587505L;
        long[] lArr = new long[N];
        int i15 = 5076, i16 = -14566, i17 = 5;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -28.665F);
        FuzzerUtils.init(lArr, -1258188423L);

        l = 1;
        while (++l < 169) {
            vMeth1(i);
            Test0077.instanceCount = i;
            Test0077.byFld <<= (byte) i;
            Test0077.instanceCount = i;
            i15 = 1;
            do {
                for (i16 = 1; i16 < 1; i16++) {
                    Test0077.instanceCount += (long) d;
                    Test0077.iArrFld[i15] -= i17;
                    if (i != 0) {
                        vMeth_check_sum += i + Double.doubleToLongBits(d) + l + i15 + i16 + i17 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                }
                Test0077.fFld -= 838419890953647984L;
                fArr[i15] -= i16;
                lArr[(int) (l)] += -7;
                i &= i15;
                i17 += (-52662 + (i15 * i15));
            } while (++i15 < 9);
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + l + i15 + i16 + i17 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0077 _instance = new Test0077();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i18 = -12, i19 = 12, i20 = 49240, i21 = -6, i22 = 13687, i23 = 27512, i24 = -10, i25 = -9, i26 = -64663;
        long[] lArr1 = new long[N];
        float[] fArr1 = new float[N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(lArr1, 2766430757L);
        FuzzerUtils.init(fArr1, -1.477F);
        FuzzerUtils.init(bArr, true);

        vMeth(14033, 1.94470);
        Test0077.sFld >>= (short) 46742;
        i18 >>= 6;
        i18 <<= (int) Test0077.lFld;
        lArr1[(i18 >>> 1) % N] -= i18;
        for (i19 = 10; i19 < 253; i19++) {
            Test0077.dFld -= Test0077.sFld;
            Test0077.fFld += (((i19 * i19) + i19) - i20);
            for (i21 = i19; i21 < 103; ++i21) {
                Test0077.iArrFld[i19 + 1] = (int) Test0077.lFld;
                if (Test0077.bFld) {
                    fArr1[i21 - 1] = Test0077.lFld;
                    lArr1[i21 - 1] = -77;
                    for (i23 = 1; i23 < 1; ++i23) {
                        i22 += i21;
                        Test0077.iArrFld[i21] -= -50500;
                        bArr[i19] = true;
                        Test0077.fFld -= -94;
                    }
                } else if (Test0077.bFld) {
                    i20 = (int) -2L;
                    Test0077.iArrFld[i19] += i24;
                    i24 += (i21 * Test0077.fFld);
                    Test0077.instanceCount = i21;
                } else {
                    i24 = i24;
                    i18 = (int) Test0077.lFld;
                }
                if (Test0077.bFld) break;
                for (i25 = 1; i25 < 1; i25++) {
                    i26 += i25;
                }
                i22 = i18;
            }
            i24 = i25;
            Test0077.instanceCount += i19;
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("lArr1 fArr1 bArr = " + FuzzerUtils.checkSum(lArr1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0077.instanceCount Test0077.lFld Test0077.byFld = " + Test0077.instanceCount + "," + Test0077.lFld +
                "," + Test0077.byFld);
        FuzzerUtils.out.println("Test0077.fFld Test0077.sFld Test0077.bFld = " + Float.floatToIntBits(Test0077.fFld) + "," + Test0077.sFld
                + "," + (Test0077.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0077.dFld Test0077.iArrFld = " + Double.doubleToLongBits(Test0077.dFld) + "," +
                FuzzerUtils.checkSum(Test0077.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
