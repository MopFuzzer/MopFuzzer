// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0340 {

    public static final int N = 400;

    public static long instanceCount = 4133367452374792753L;
    public static byte byFld = 25;
    public static volatile short sFld = 19007;
    public static short[] sArrFld = new short[N];
    public static int[] iArrFld1 = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0340.sArrFld, (short) 20236);
        FuzzerUtils.init(Test0340.iArrFld1, -13);
    }

    public int[] iArrFld = new int[N];

    public static double dMeth(int i8, int i9) {

        int i10 = -14873;
        int i11 = -2;
        int i12 = -15211;
        int i13 = 216;
        int i14 = -4;
        int[] iArr1 = new int[N];
        float f1 = 0.309F;
        boolean b1 = false;

        FuzzerUtils.init(iArr1, -6);

        i8 = (int) Test0340.instanceCount;
        for (i10 = 6; i10 < 134; ++i10) {
            i9 += Test0340.sFld;
            Test0340.sFld = (short) i11;
            f1 += i10;
            i11 <<= i8;
            i8 = i10;
        }
        iArr1[(i8 >>> 1) % N] >>= i10;
        for (i12 = 5; i12 < 302; i12++) {
            i13 += (int) Test0340.instanceCount;
            i11 *= (int) f1;
            if (b1) {
                Test0340.sFld = (short) Test0340.instanceCount;
            }
            b1 = b1;
            i9 += (((i12 * Test0340.instanceCount) + i11) - i14);
        }
        long meth_res = i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + (b1 ? 1 : 0) + i14 +
                FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static int iMeth(int i5) {

        int i6 = 78, i7 = 213, i15 = -1, i16 = 4, i17 = 1588, i18 = 50624;
        boolean b = true;

        for (i6 = 3; i6 < 201; i6 += 2) {
            if (b) break;
            i5 -= (int) ((dMeth(i7, i7) * i5) - i6);
            Test0340.instanceCount >>= Test0340.instanceCount;
            for (i15 = 1; i15 < 16; i15++) {
                Test0340.instanceCount -= 1821763405390109454L;
            }
            i5 = i5;
            for (i17 = 1; i17 < 16; i17++) {
                b = b;
                i5 = i5;
            }
        }
        for (short s : Test0340.sArrFld) {
            Test0340.iArrFld1[(i18 >>> 1) % N] = 7;
            i7 %= (int) (i17 | 1);
            Test0340.byFld ^= (byte) Test0340.instanceCount;
            i18 = i17;
        }
        long meth_res = i5 + i6 + i7 + (b ? 1 : 0) + i15 + i16 + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(float f) {

        int i1 = -151;
        int i2 = 1;
        int i3 = 14;
        int i4 = 4688;
        int i19 = 254;
        int i20 = -7125;
        int[] iArr = new int[N];
        boolean b2 = false;

        FuzzerUtils.init(iArr, 6);

        f = (-((i1 + i1) * (i1--)));
        for (i2 = 8; 204 > i2; i2++) {
            i4 = 1;
            do {
                iArr[i2] = Math.max((int) ((i4 >> i3) + (-11 - (Test0340.byFld - 6L))), Math.abs(iMeth(i4)));
                try {
                    i1 = (36 % i4);
                    i3 = (i3 % i4);
                    iArr[i2 + 1] = (i3 / 96);
                } catch (ArithmeticException a_e) {
                }
                i3 -= i4;
                f += i2;
                i3 += (i4 - Test0340.sFld);
                Test0340.byFld = (byte) f;
                for (i19 = 1; i19 < 1; i19++) {
                    i20 >>= Test0340.sFld;
                    if (b2) {
                        i20 = 1062;
                        Test0340.instanceCount += (long) (24.735F + (i19 * i19));
                        i1 += i19;
                    } else if (b2) {
                        Test0340.instanceCount += 11L;
                    } else if (b2) {
                        i1 >>= i20;
                    } else {
                        i1 >>= Test0340.sFld;
                    }
                }
            } while (++i4 < 8);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + i19 + i20 + (b2 ? 1 : 0) +
                FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0340 _instance = new Test0340();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 182, i21 = -251, i22 = 223, i23 = 223, i24 = 10, i25 = -7, i26 = 136, i27 = 6, i28 = 67, i29 = 12, i30 = -1, i31 = -31069;
        float f2 = -87.412F;
        double d = 34.77261;
        boolean b3 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 162L);

        i -= Math.max((int) (Math.abs(228) + (57.231F - (iArrFld[(i >>> 1) % N]++))), -(i++));
        vMeth(f2);
        i21 = 395;
        while (--i21 > 0) {
            Test0340.instanceCount += i21;
            for (i22 = 2; 64 > i22; ++i22) {
                Test0340.instanceCount = (long) d;
                f2 += (float) d;
                f2 = -44909;
                for (i24 = 1; 2 > i24; ++i24) {
                    Test0340.instanceCount += (-2303 + (i24 * i24));
                    i25 += (int) d;
                    lArr[i22] = i23;
                    Test0340.instanceCount = Test0340.sFld;
                    f2 = i25;
                }
            }
            i = (int) f2;
            i23 = (int) f2;
            i23 += (int) (-614492111L + (i21 * i21));
            i26 = 1;
            while (++i26 < 64) {
                i *= i23;
                iArrFld[i21] -= i;
            }
            iArrFld[i21 + 1] <<= i23;
            for (i27 = 3; i27 < 64; i27 += 2) {
                switch (((i26 >>> 1) % 8) + 97) {
                    case 97:
                        Test0340.instanceCount += (((i27 * i22) + f2) - i);
                    case 98:
                        i25 = i23;
                        for (i29 = 1; i29 < 3; i29++) {
                            if (true) {
                                i31 -= i29;
                                f2 *= (float) d;
                                f2 = i31;
                            } else if (b3) {
                                i30 = i26;
                            }
                        }
                        break;
                    case 99:
                        i25 = i25;
                        break;
                    case 100:
                        f2 = i31;
                        break;
                    case 101:
                        iArrFld[i27 + 1] = (int) Test0340.instanceCount;
                    case 102:
                        i = i29;
                        break;
                    case 103:
                        if (true) continue;
                        break;
                    case 104:
                        if (b3) break;
                        break;
                    default:
                        i23 += i28;
                }
            }
        }

        FuzzerUtils.out.println("i f2 i21 = " + i + "," + Float.floatToIntBits(f2) + "," + i21);
        FuzzerUtils.out.println("i22 i23 d = " + i22 + "," + i23 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 b3 = " + i30 + "," + i31 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0340.instanceCount Test0340.byFld Test0340.sFld = " + Test0340.instanceCount + "," + Test0340.byFld +
                "," + Test0340.sFld);
        FuzzerUtils.out.println("iArrFld Test0340.sArrFld Test0340.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0340.sArrFld) + "," + FuzzerUtils.checkSum(Test0340.iArrFld1));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
