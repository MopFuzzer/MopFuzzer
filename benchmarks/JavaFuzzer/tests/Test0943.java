// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0943 {

    public static final int N = 400;

    public static long instanceCount = -37582L;
    public static double dFld = 2.46201;
    public static short sFld = 21125;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public byte byFld = 62;
    public int iFld = 242;
    public float[] fArrFld = new float[N];

    public static void vMeth1(int i6, int i7, int i8) {

        int i9 = -13;
        int i10 = 188;
        int i11 = 9;
        int i12 = 53;
        int i13 = 9;
        int[] iArr = new int[N];
        float f = 0.864F;
        float[] fArr = new float[N];
        byte by = -50;

        FuzzerUtils.init(iArr, 18158);
        FuzzerUtils.init(fArr, 7.238F);

        i6 = (int) Test0943.instanceCount;
        for (i9 = 209; i9 > 11; --i9) {
            i7 -= (int) f;
            i10 += i9;
            iArr = FuzzerUtils.int1array(N, (int) -48333);
            i8 <<= (int) Test0943.instanceCount;
            i10 -= i8;
            for (i11 = 8; i11 > 1; i11 -= 3) {
                i13 = 1;
                do {
                    iArr[i11 + 1] -= by;
                    iArr[i9 - 1] += -80;
                } while (++i13 < 4);
                i12 *= i8;
                i12 -= 46628;
                f -= f;
                fArr[i9 + 1] = i10;
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + by +
                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int i14 = -109;
        int i16 = -53555;
        int i17 = -173;
        int i18 = -7;
        int[] iArr1 = new int[N];
        boolean b = true;
        byte by1 = 61;
        double d = 26.20373;
        float f1 = 15.394F;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(iArr1, -26653);
        FuzzerUtils.init(fArr1, -2.679F);

        try {
            vMeth1(i14, i14, i14);
            for (int i15 : iArr1) {
                i14 *= (int) Test0943.instanceCount;
                if (b) {
                    if (i14 != 0) {
                        vMeth_check_sum += i14 + (b ? 1 : 0) + i16 + i17 + i18 + by1 + Double.doubleToLongBits(d) +
                                Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                        return;
                    }
                }
                for (i16 = 1; i16 < 4; i16++) {
                    short s = -20046;
                    i17 <<= i15;
                    switch ((((i14 >>> 1) % 6) * 5) + 3) {
                        case 5:
                            if (b) continue;
                            if (b) break;
                            break;
                        case 25:
                            i15 = i18;
                            iArr1[i16] = 32806;
                            s >>= by1;
                            iArr1[i16 - 1] += i15;
                            break;
                        case 18:
                            if (i17 != 0) {
                                vMeth_check_sum += i14 + (b ? 1 : 0) + i16 + i17 + i18 + by1 + Double.doubleToLongBits(d) +
                                        Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1) +
                                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                                return;
                            }
                            break;
                        case 12:
                            if (i18 != 0) {
                                vMeth_check_sum += i14 + (b ? 1 : 0) + i16 + i17 + i18 + by1 + Double.doubleToLongBits(d) +
                                        Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1) +
                                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                                return;
                            }
                            break;
                        case 29:
                            by1 = (byte) i14;
                            break;
                        case 19:
                            d = s;
                        default:
                            fArr1[i16] *= i17;
                    }
                }
            }
        } catch (ArithmeticException exc1) {
            iArr1[(i17 >>> 1) % N] += i18;
        } finally {
            i18 += (int) f1;
        }
        vMeth_check_sum += i14 + (b ? 1 : 0) + i16 + i17 + i18 + by1 + Double.doubleToLongBits(d) +
                Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static int iMeth(int i5) {


        vMeth();
        i5 /= (int) (Test0943.instanceCount | 1);
        i5 <<= i5;
        long meth_res = i5;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0943 _instance = new Test0943();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 7;
        int i1 = 3;
        int i2 = -8;
        int i3 = -6;
        int i20 = 7801;
        int i21 = 16282;
        int i22 = -5;
        int i23 = 9;
        int i24 = 235;
        int[][] iArr2 = new int[N][N];
        float f2 = 112.824F;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -24675);
        FuzzerUtils.init(iArr2, -76);

        for (i = 7; i < 236; i++) {
            fArrFld[i - 1] *= Test0943.instanceCount;
            for (i2 = 110; i < i2; --i2) {
                int i4 = -11;
                i1 *= ((++i4) * Integer.reverseBytes(iMeth(i3)));
                sArr = sArr;
            }
            fArrFld[i] -= byFld;
            i1 = (int) Test0943.dFld;
        }
        Test0943.instanceCount -= iFld;
        Test0943.instanceCount *= 22699;
        i20 = 1;
        do {
            i3 <<= i2;
            f2 = i2;
            f2 = i;
            iArr2[i20] = iArr2[i20 + 1];
            for (i21 = 4; i21 < 65; i21 += 3) {
                iFld += (int) Test0943.instanceCount;
                i3 = i3;
            }
            iFld *= -27172;
            i3 += (i20 ^ Test0943.sFld);
            Test0943.instanceCount += Test0943.sFld;
            i23 = 1;
            do {
                Test0943.sFld += (short) Test0943.instanceCount;
                iArr2[i23 + 1][i23] *= iFld;
                i24 = 1;
                do {
                    boolean b1 = false;
                    iFld *= (int) f2;
                    try {
                        i1 = (i20 % -38314);
                        i1 = (iArr2[(i3 >>> 1) % N][i20] % i22);
                        iArr2[i23][i24] = (iArr2[i20][i20] % 136);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0943.instanceCount += Test0943.instanceCount;
                    if (b1) break;
                    i1 += (int) 2.205F;
                    i3 = i23;
                } while (++i24 < 1);
            } while (++i23 < 65);
        } while (++i20 < 390);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i20 f2 = " + i3 + "," + i20 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 sArr iArr2 = " + i24 + "," + FuzzerUtils.checkSum(sArr) + "," +
                FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0943.instanceCount byFld Test0943.dFld = " + Test0943.instanceCount + "," + byFld + "," +
                Double.doubleToLongBits(Test0943.dFld));
        FuzzerUtils.out.println("iFld Test0943.sFld fArrFld = " + iFld + "," + Test0943.sFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
