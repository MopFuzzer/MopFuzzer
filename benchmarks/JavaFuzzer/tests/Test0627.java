// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0627 {

    public static final int N = 400;

    public static long instanceCount = -83L;
    public static byte byFld = 1;
    public static int[] iArrFld = new int[N];
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0627.iArrFld, 7603);
        FuzzerUtils.init(Test0627.fArrFld, -79.27F);
    }

    public float fFld = -100.889F;

    public static void vMeth1(short s, int i7) {

        int i8 = -50, i9 = 213, i10 = -178, i11 = -132, i12 = -3;
        float f = 46.12F;
        double d1 = -1.50270;

        for (i8 = 19; 345 > i8; i8++) {
            for (f = 1; f < 5; f++) {
                Test0627.instanceCount -= Test0627.instanceCount;
            }
            i10 -= i8;
            Test0627.instanceCount = (long) d1;
            i11 = 1;
            do {
                i7 = i9;
                i12 = 1;
                do {
                    i7 += (i12 * i12);
                    Test0627.byFld /= (byte) 3;
                    Test0627.instanceCount += (long) f;
                    i7 = (int) d1;
                    i9 = (int) -2813591061773430132L;
                    i7 <<= i11;
                    try {
                        i9 = (i10 % 87);
                        i10 = (i10 / Test0627.iArrFld[i12]);
                        i7 = (i11 % -300958937);
                    } catch (ArithmeticException a_e) {
                    }
                } while (++i12 < 1);
            } while (++i11 < 5);
        }
        vMeth1_check_sum += s + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + Double.doubleToLongBits(d1) + i11 + i12;
    }

    public static void vMeth(byte by) {

        int i5 = -51735;
        int i6 = -42263;
        int i13 = -34378;
        int i14 = -58044;
        int i15 = 202;
        int i16 = 127;
        int[] iArr = new int[N];
        double d = 2.71392;
        short s1 = 3483;
        float f1 = -47.202F;
        boolean b = true;

        FuzzerUtils.init(iArr, -34);

        for (int i4 : iArr) {
            for (i5 = 1; i5 < 4; i5++) {
                i4 >>= Integer.reverseBytes((int) ((d * i5) * (i4++)));
                vMeth1(s1, i4);
                f1 += (((i5 * i5) + i4) - i6);
                for (i13 = 1; i13 < 2; i13++) {
                    Test0627.instanceCount *= (long) d;
                }
                i14 -= i5;
                i6 = (int) Test0627.instanceCount;
                i6 = 51177;
                s1 += (short) (((i5 * Test0627.instanceCount) + i13) - s1);
            }
            if (i4 != 0) {
                vMeth_check_sum += by + i5 + i6 + Double.doubleToLongBits(d) + s1 + Float.floatToIntBits(f1) + i13 +
                        i14 + i15 + i16 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                return;
            }
            for (i15 = 1; i15 < 4; i15++) {
                b = b;
                Test0627.iArrFld[i15 - 1] = i6;
            }
        }
        vMeth_check_sum += by + i5 + i6 + Double.doubleToLongBits(d) + s1 + Float.floatToIntBits(f1) + i13 + i14 + i15
                + i16 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1, int i2, int i3) {

        int i17 = 52, i18 = -16439, i19 = 125, i20 = -136;
        double d2 = 1.96266;
        boolean b1 = false;
        short s2 = -30062;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 10L);

        vMeth(Test0627.byFld);
        for (i17 = 11; i17 < 313; i17++) {
            Test0627.instanceCount += i17;
            for (d2 = i17; d2 < 5; ++d2) {
                i20 = 1;
                do {
                    if (b1) {
                        i2 = (int) Test0627.instanceCount;
                        if (b1) continue;
                        i18 = (int) Test0627.instanceCount;
                    } else {
                        lArr = lArr;
                        i2 ^= (int) -6196006392370902034L;
                    }
                } while (++i20 < 1);
                i2 <<= -188;
                if (b1) {
                    Test0627.fArrFld[i17 + 1] *= i18;
                    s2 = (short) Test0627.instanceCount;
                } else {
                    i2 = Test0627.byFld;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i17 + i18 + Double.doubleToLongBits(d2) + i19 + i20 + (b1 ? 1 : 0) + s2 +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0627 _instance = new Test0627();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -4, i21 = -8, i22 = -9, i23 = -78, i24 = -118, i25 = 7, i26 = 230, i27 = 14, i28 = 10, i29 = 49602, i30 = -151, i31 = 15423,
                i32 = -13443;
        short s3 = 15651;
        boolean b2 = false;
        float f2 = -46.931F, f3 = 2.600F;
        double d3 = 48.88729;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 5911061039658263878L);

        i = (int) (Test0627.instanceCount * iMeth(i, -59387, 115));
        for (i21 = 16; i21 < 341; ++i21) {
            fFld = -1;
        }
        for (i23 = 9; i23 < 353; i23++) {
            fFld += i23;
            fFld *= Test0627.byFld;
            i22 += i23;
            i24 += (((i23 * i21) + i22) - s3);
            Test0627.instanceCount += (i23 ^ Test0627.instanceCount);
            for (i25 = i23; i25 < 73; i25++) {
                if (b2) break;
            }
            Test0627.fArrFld = FuzzerUtils.float1array(N, (float) -52.767F);
            for (f2 = 73; f2 > 4; f2 -= 2) {
                for (i28 = (int) (f2); 3 > i28; ++i28) {
                    i = (int) Test0627.instanceCount;
                    i27 = i;
                    Test0627.iArrFld[i28] -= (int) f2;
                    d3 *= i;
                    i22 *= i25;
                    i22 += (((i28 * i25) + fFld) - i27);
                }
                if (b2) {
                    for (f3 = 1; f3 < 3; f3++) {
                        i26 = i25;
                        i27 += s3;
                        fFld += i30;
                    }
                    switch ((int) (((f2 % 2) * 5) + 90)) {
                        case 99:
                            b2 = b2;
                            for (i31 = 3; i31 > 1; i31 -= 2) {
                                b2 = b2;
                                i22 += (((i31 * i26) + Test0627.instanceCount) - Test0627.byFld);
                            }
                            break;
                        case 93:
                            lArr1[i23] <<= Test0627.instanceCount;
                            break;
                    }
                } else {
                    i = (int) Test0627.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 s3 = " + i23 + "," + i24 + "," + s3);
        FuzzerUtils.out.println("i25 i26 b2 = " + i25 + "," + i26 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("f2 i27 i28 = " + Float.floatToIntBits(f2) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 d3 f3 = " + i29 + "," + Double.doubleToLongBits(d3) + "," +
                Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0627.instanceCount Test0627.byFld fFld = " + Test0627.instanceCount + "," + Test0627.byFld + "," +
                Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0627.iArrFld Test0627.fArrFld = " + FuzzerUtils.checkSum(Test0627.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0627.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
