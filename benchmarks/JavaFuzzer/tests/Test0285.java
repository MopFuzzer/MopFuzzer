// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test0285 {

    public static final int N = 400;

    public static volatile long instanceCount = -37911L;
    public static float fFld = -2.638F;
    public static long lFld = 0L;
    public static volatile boolean bFld = true;
    public static boolean[][] bArrFld = new boolean[N][N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0285.bArrFld, true);
    }

    public byte byFld = 117;
    public short sFld = -11846;
    public int[] iArrFld = new int[N];

    public static void vMeth2() {

        int i8 = -11;
        int i9 = 44243;
        int i10 = -2;
        int[] iArr = new int[N];
        boolean b = false;
        byte by = -109;
        double d1 = 2.125117;
        short s = -29630;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -6862207546822151529L);
        FuzzerUtils.init(iArr, 30977);

        lArr[(i8 >>> 1) % N] = i8;
        Test0285.bArrFld[(i8 >>> 1) % N][(i8 >>> 1) % N] = b;
        i8 += (int) Test0285.instanceCount;
        by -= (byte) d1;
        i8 += -2;
        i8 = s;
        i8 = i8;
        switch ((((i8 >>> 1) % 1) * 5) + 123) {
            case 128:
                for (i9 = 264; i9 > 12; i9 -= 2) {
                    Test0285.instanceCount = i10;
                }
                break;
            default:
                lArr[(i10 >>> 1) % N] += 3320;
                i8 += by;
                iArr[(i9 >>> 1) % N] = (int) Test0285.instanceCount;
                iArr[(i8 >>> 1) % N] += (int) Test0285.fFld;
        }
        vMeth2_check_sum += i8 + (b ? 1 : 0) + by + Double.doubleToLongBits(d1) + s + i9 + i10 +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i5, int i6, int i7) {


        vMeth2();
        vMeth1_check_sum += i5 + i6 + i7;
    }

    public static void vMeth(long l) {

        int i3 = 52060;
        int i4 = -7195;
        int i11 = 37432;
        int[][] iArr1 = new int[N][N];
        double d = 24.77882, d2 = 0.71152;
        byte by1 = -110;
        byte[] byArr = new byte[N];
        boolean b1 = false;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(byArr, (byte) -26);
        FuzzerUtils.init(iArr1, -8);
        FuzzerUtils.init(lArr1, -37L);

        Test0285.instanceCount -= (long) (((++i3) - (l + Test0285.fFld)) + d);
        byArr[(i3 >>> 1) % N] -= (byte) (0.780F + (-(i3 * -124)));
        i4 = 164;
        do {
            Test0285.fFld = i3;
            vMeth1(i4, i4, i3);
            i3 = (int) l;
            i3 ^= i4;
            i3 += (((i4 * l) + i3) - l);
            iArr1[i4][i4] += (int) Test0285.lFld;
            lArr1[i4 - 1] = i4;
            Test0285.lFld = (long) Test0285.fFld;
            for (d2 = 1; d2 < 19; d2 += 2) {
                if (b1) {
                    Test0285.fFld *= by1;
                }
                iArr1[i4][(int) (d2 + 1)] = -1;
            }
        } while ((i4 -= 2) > 0);
        vMeth_check_sum += l + i3 + Double.doubleToLongBits(d) + i4 + Double.doubleToLongBits(d2) + i11 + by1 + (b1 ? 1
                : 0) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0285 _instance = new Test0285();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -164;
        int i1 = 137;
        int i2 = -20;
        int i12 = 40289;
        int i13 = 32743;
        int[][] iArr2 = new int[N][N];
        double d3 = 1.59686;
        double[] dArr = new double[N];
        long[] lArr2 = new long[N];

        FuzzerUtils.init(dArr, 95.20340);
        FuzzerUtils.init(lArr2, -3022533108L);
        FuzzerUtils.init(iArr2, 33355);

        for (i = 139; 2 < i; --i) {
            iArrFld[i] += (++iArrFld[i - 1]);
            iArrFld[i] = -36;
            if (Test0285.bFld) {
                i1 >>= (int) (i * (--Test0285.fFld));
                i2 = 1;
                while (++i2 < 183) {
                    dArr = (dArr = (dArr = (dArr = dArr)));
                    i1 = (int) (Test0285.fFld + (++i1));
                    vMeth(Test0285.instanceCount);
                    Test0285.instanceCount = Test0285.lFld;
                    i1 = (int) -98L;
                    i1 = (int) Test0285.instanceCount;
                    for (i12 = 1; i12 < 1; ++i12) {
                        d3 += d3;
                        switch ((i % 6) + 27) {
                            case 27:
                                i1 += (((i12 * Test0285.instanceCount) + Test0285.lFld) - Test0285.fFld);
                                dArr[i12 - 1] *= 18707;
                                break;
                            case 28:
                                i13 <<= 5;
                                i13 += byFld;
                                break;
                            case 29:
                                i13 = (int) Test0285.lFld;
                                iArrFld[(i12 >>> 1) % N] >>= i;
                                Test0285.fFld *= 95.794F;
                                break;
                            case 30:
                                if (Test0285.bFld) break;
                                i13 = i13;
                                lArr2[i - 1] /= (sFld | 1);
                                iArrFld[i + 1] >>= 55;
                                break;
                            case 31:
                                Test0285.fFld += (i12 * i12);
                                iArr2 = iArr2;
                                Test0285.fFld += Test0285.fFld;
                                if (false) break;
                            case 32:
                                if (Test0285.bFld) break;
                                break;
                        }
                    }
                }
            } else {
                Test0285.instanceCount *= i12;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i12 i13 d3 = " + i12 + "," + i13 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("dArr lArr2 iArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
                FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0285.instanceCount Test0285.fFld Test0285.lFld = " + Test0285.instanceCount + "," +
                Float.floatToIntBits(Test0285.fFld) + "," + Test0285.lFld);
        FuzzerUtils.out.println("byFld Test0285.bFld sFld = " + byFld + "," + (Test0285.bFld ? 1 : 0) + "," + sFld);
        FuzzerUtils.out.println("iArrFld Test0285.bArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0285.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
