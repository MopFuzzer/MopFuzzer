// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test0021 {

    public static final int N = 400;

    public static volatile long instanceCount = 18477L;
    public static boolean bFld = false;
    public static byte byFld = 102;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public int iFld = 8;
    public double dFld = 50.45231;

    public static void vMeth2(byte by, int i5) {

        int i6 = -6, i7 = -10962, i8 = -25, i9 = -13, i10 = 6, i11 = -10;
        short s = 21486;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, 85.165F);

        for (i6 = 12; i6 < 194; ++i6) {
            for (i8 = 1; 9 > i8; i8++) {
                for (i10 = 1; i10 < 2; ++i10) {
                    i11 = -636;
                    Test0021.bFld = Test0021.bFld;
                    fArr[i10 + 1] = fArr[i6 - 1];
                    if (i11 != 0) {
                        vMeth2_check_sum += by + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                    i5 = i5;
                    Test0021.instanceCount = i5;
                    s <<= (short) Test0021.instanceCount;
                    if (i6 != 0) {
                        vMeth2_check_sum += by + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                }
                i7 += (i8 * i8);
                Test0021.bFld = false;
                i9 >>= i10;
                if (Test0021.bFld) break;
            }
        }
        vMeth2_check_sum += by + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i3, float f, int i4) {

        byte by1 = -5;
        int i12 = 8, i13 = -174, i14 = -2, i15 = 126, i16 = 211, i17 = 53133;

        vMeth2(by1, -8);
        i3 -= i4;
        i3 = -23;
        i4 -= -230;
        for (i12 = 4; i12 < 152; ++i12) {
            Test0021.instanceCount -= (long) 1.485F;
            i13 += (((i12 * f) + i12) - i13);
            i4 %= (int) (i13 | 1);
            if (true) continue;
            for (i14 = 11; i14 > 1; i14--) {
                for (i16 = 1; i16 < 2; i16++) {
                    Test0021.instanceCount += (long) f;
                    f = f;
                    if (i3 != 0) {
                        vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + by1 + i12 + i13 + i14 + i15 + i16 + i17;
                        return;
                    }
                    Test0021.bFld = true;
                }
            }
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + by1 + i12 + i13 + i14 + i15 + i16 + i17;
    }

    public static void vMeth(int i, long l, boolean b) {

        int i1 = 28941;
        int i2 = -4027;
        int i18 = 29712;
        int i19 = -400;
        int[] iArr = new int[N];
        float f1 = -1.355F;
        long l1 = 36379L;
        short s1 = 19740;
        boolean b1 = true;

        FuzzerUtils.init(iArr, -5);

        for (i1 = 134; i1 > 6; i1 -= 3) {
            i2 -= 0;
            vMeth1(i, 2.6F, i);
        }
        f1 = i;
        l1 = 298;
        do {
            if (b1) {
                for (i18 = (int) (l1); 6 > i18; i18++) {
                    double d = 81.30630;
                    i2 = i2;
                    d -= f1;
                    l -= -2145980556412056092L;
                    if (b) {
                        i *= i1;
                        s1 += (short) i18;
                    } else if (b) {
                        iArr[(int) (l1)] -= (int) l1;
                    } else if (Test0021.bFld) {
                        i2 = (int) -9114L;
                    }
                }
                vMeth_check_sum += i + l + (b ? 1 : 0) + i1 + i2 + Float.floatToIntBits(f1) + l1 + i18 + i19 + s1 + (b1
                        ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                return;
            } else {
                Test0021.instanceCount += (((l1 * i1) + s1) - i2);
            }
        } while (--l1 > 0);
        vMeth_check_sum += i + l + (b ? 1 : 0) + i1 + i2 + Float.floatToIntBits(f1) + l1 + i18 + i19 + s1 + (b1 ? 1 :
                0) + FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0021 _instance = new Test0021();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = 17776;
        int i21 = -22;
        int i22 = 0;
        int i23 = 33534;
        int i24 = 3;
        int i25 = -12;
        int[] iArr1 = new int[N];
        float f2 = 2.456F;

        FuzzerUtils.init(iArr1, 10);

        vMeth(iFld, Test0021.instanceCount, Test0021.bFld);
        if (false) {
            for (i20 = 7; i20 < 190; ++i20) {
                dFld += i20;
                Test0021.byFld = (byte) -5;
                if (Test0021.bFld) continue;
                for (i22 = 3; 137 > i22; ++i22) {
                    iFld <<= (int) Test0021.instanceCount;
                    for (i24 = 1; 2 > i24; ++i24) {
                        switch ((i24 % 9) + 126) {
                            case 126:
                                i25 += (int) f2;
                                Test0021.byFld += (byte) i24;
                            case 127:
                            case 128:
                                i23 = (int) f2;
                                break;
                            case 129:
                                iFld += (i24 | i23);
                                try {
                                    i25 = (i24 / -22342);
                                    i23 = (i21 % -1158708268);
                                    iArr1[i20 + 1] = (i22 % -64977);
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            case 130:
                                i21 ^= iFld;
                                iArr1[i20 - 1] = i23;
                            case 131:
                                iArr1[i24] -= 14;
                                i23 = Test0021.byFld;
                                break;
                            case 132:
                                Test0021.instanceCount = Test0021.instanceCount;
                                break;
                            case 133:
                                Test0021.instanceCount += (i24 - f2);
                                break;
                            case 134:
                                i25 = iFld;
                                i21 += (i24 | i23);
                                break;
                        }
                        f2 = Test0021.instanceCount;
                        Test0021.instanceCount += i24;
                        Test0021.bFld = Test0021.bFld;
                        i21 += (((i24 * Test0021.instanceCount) + i23) - i24);
                        Test0021.instanceCount = iFld;
                        Test0021.instanceCount &= Test0021.instanceCount;
                        i21 <<= -112;
                    }
                }
            }
        } else if (Test0021.bFld) {
            iArr1[(i25 >>> 1) % N] = i21;
        } else {
            Test0021.instanceCount >>= i20;
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f2 iArr1 = " + Float.floatToIntBits(f2) + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test0021.instanceCount Test0021.bFld iFld = " + Test0021.instanceCount + "," + (Test0021.bFld ? 1 : 0)
                + "," + iFld);
        FuzzerUtils.out.println("dFld Test0021.byFld = " + Double.doubleToLongBits(dFld) + "," + Test0021.byFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
