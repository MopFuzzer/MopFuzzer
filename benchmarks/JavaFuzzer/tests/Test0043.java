// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test0043 {

    public static final int N = 400;

    public static long instanceCount = -42114L;
    public static byte byFld = 102;
    public static boolean bFld = false;
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0043.lArrFld, 10L);
    }

    public short sFld = -4964;
    public float[] fArrFld = new float[N];

    public static int iMeth(short s, long l1) {

        int i9 = -14;
        int i10 = -50855;
        int i11 = 4;
        int i12 = -10;
        int i13 = 1;
        int i14 = -10;
        int[] iArr1 = new int[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr1, -75);
        FuzzerUtils.init(dArr, 79.69079);

        i9 <<= s;
        i10 = 1;
        while (++i10 < 220) {
            for (i11 = 1; i11 < 7; ++i11) {
                i9 += i11;
                Test0043.instanceCount += i11;
                if (i12 != 0) {
                }
                iArr1 = iArr1;
                for (i13 = 1; i13 < 2; i13++) {
                    dArr[i11] -= i10;
                    i14 += (i13 * i13);
                    i12 += (i13 * i13);
                }
                Test0043.byFld *= (byte) 1.9401;
                l1 <<= Test0043.byFld;
                i12 += (int) 53858L;
            }
            i9 <<= -24632;
        }
        long meth_res = s + l1 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(long l, float f1) {

        int i7 = 11;
        int i8 = -14;
        int i15 = 202;
        int i16 = 11;
        int i17 = -135;
        int i18 = 5;
        int i19 = -30;
        int i20 = 211;
        int[] iArr2 = new int[N];
        short s1 = -10494;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 2.418F);
        FuzzerUtils.init(iArr2, -6);

        for (i7 = 10; i7 < 291; ++i7) {
            Test0043.lArrFld[i7] = (long) (Math.abs(i8--) - (i8 = (int) (-67.303F + (i7 * i8))));
        }
        i8 |= iMeth(s1, l);
        for (i15 = 3; 205 > i15; ++i15) {
            i16 = Test0043.byFld;
        }
        for (i17 = 2; i17 < 238; ++i17) {
            s1 = s1;
            for (i19 = i17; i19 < 7; i19++) {
                i16 = i18;
                i18 += i19;
                Test0043.instanceCount = i20;
            }
            i8 = Test0043.byFld;
            fArr[i17 + 1] %= (Test0043.instanceCount | 1);
            i8 *= Test0043.byFld;
            iArr2[i17] *= i20;
        }
        vMeth1_check_sum += l + Float.floatToIntBits(f1) + i7 + i8 + s1 + i15 + i16 + i17 + i18 + i19 + i20 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i4) {

        int i5 = 12077;
        int i6 = 33;
        int[] iArr = new int[N];
        float f2 = -2.929F;

        FuzzerUtils.init(iArr, 31619);

        for (i5 = 6; i5 < 391; ++i5) {
            switch ((i5 % 10) + 22) {
                case 22:
                    iArr[i5] = ((i6--) >> (++iArr[i5]));
                    switch ((i5 % 2) + 38) {
                        case 38:
                            vMeth1(Test0043.instanceCount, 24.378F);
                            i4 += (i5 * i5);
                            break;
                        case 39:
                            Test0043.instanceCount -= i5;
                            i6 += i5;
                            break;
                        default:
                            i4 <<= i6;
                            f2 += i5;
                            Test0043.instanceCount *= 7469030358934367054L;
                    }
                    i4 += (((i5 * Test0043.byFld) + Test0043.instanceCount) - i4);
                    i4 = i5;
                case 23:
                    i4 |= (int) Test0043.instanceCount;
                    if (Test0043.bFld) continue;
                    break;
                case 24:
                    f2 = i5;
                case 25:
                    i4 += (int) 8959307285522689004L;
                case 26:
                    i4 += 53;
                    break;
                case 27:
                    i4 = (int) f2;
                    break;
                case 28:
                    Test0043.lArrFld[i5] |= i4;
                    break;
                case 29:
                    Test0043.instanceCount -= i4;
                    break;
                case 30:
                    iArr[i5 + 1] = i4;
                case 31:
                    Test0043.lArrFld[i5 - 1] = Test0043.instanceCount;
                    break;
                default:
                    if (i6 != 0) {
                        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0043 _instance = new Test0043();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -49717;
        int i1 = -1;
        int i2 = 214;
        int i3 = 159;
        int i21 = 162;
        int i22 = 180;
        int i23 = 209;
        int i24 = -15166;
        int i25 = -112;
        int i26 = -7;
        int[] iArr3 = new
                int[N];
        double d = 0.88760;
        boolean b = true;
        float f = 1.268F;

        FuzzerUtils.init(iArr3, -5);

        i = 1;
        do {
            for (i1 = 4; i1 < 75; ++i1) {
                Test0043.lArrFld[i - 1] = (long) (Math.abs(Float.intBitsToFloat(i1)) + ((--i2) + (-46030L -
                        (Test0043.instanceCount - d))));
            }
            i2 += i1;
            b = (b = true);
        } while (++i < 335);
        i3 = 1;
        do {
            Test0043.lArrFld[i3 - 1] >>= (i2 = (int) ((-32329 * (i2 * Test0043.instanceCount)) + i2));
            f -= Test0043.instanceCount;
            vMeth(-59);
            i2 -= (int) Test0043.instanceCount;
            i2 = -31669;
        } while ((i3 += 3) < 249);
        for (i21 = 9; i21 < 311; ++i21) {
            d = i1;
            iArr3[i21 + 1] = i;
            i22 |= i1;
            if (true) continue;
            for (i23 = 4; i23 < 83; ++i23) {
                i2 += (((i23 * f) + Test0043.instanceCount) - i1);
                i24 ^= 51;
                i24 = i24;
                Test0043.instanceCount = Test0043.instanceCount;
                i22 = i23;
                i24 += (((i23 * Test0043.instanceCount) + f) - Test0043.instanceCount);
                iArr3[i23 - 1] = sFld;
            }
            for (i25 = 2; i25 < 83; i25 += 2) {
                Test0043.instanceCount -= i26;
                i22 = (int) f;
                i22 *= 3;
                fArrFld[i21] -= -35802;
                Test0043.instanceCount |= i;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("d b i3 = " + Double.doubleToLongBits(d) + "," + (b ? 1 : 0) + "," + i3);
        FuzzerUtils.out.println("f i21 i22 = " + Float.floatToIntBits(f) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 iArr3 = " + i26 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0043.instanceCount Test0043.byFld Test0043.bFld = " + Test0043.instanceCount + "," + Test0043.byFld +
                "," + (Test0043.bFld ? 1 : 0));
        FuzzerUtils.out.println("sFld Test0043.lArrFld fArrFld = " + sFld + "," + FuzzerUtils.checkSum(Test0043.lArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
