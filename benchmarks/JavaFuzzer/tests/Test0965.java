// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0965 {

    public static final int N = 400;

    public static long instanceCount = 2648115697768971767L;
    public static float fFld = -61.927F;
    public static short sFld = -25176;
    public static int[] iArrFld = new int[N];
    public static float[] fArrFld = new float[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0965.iArrFld, -64873);
        FuzzerUtils.init(Test0965.fArrFld, 64.510F);
        FuzzerUtils.init(Test0965.lArrFld, 43L);
    }

    public double dFld = 2.85640;
    public int iFld = 7;
    public short[] sArrFld = new short[N];

    public static int iMeth1(float f1, int i6, int i7) {

        int i8 = 50, i9 = -16169, i10 = -249, i11 = 142;
        double d = -2.102416;
        byte by = 80;
        float f2 = 1.688F;

        for (i8 = 9; i8 < 151; i8++) {
            i7 += -8752;
            for (d = 1; d < 11; ++d) {
                i10 >>= (int) Test0965.instanceCount;
                Test0965.iArrFld[(int) (d)] = (int) Test0965.instanceCount;
                Test0965.iArrFld[i8 - 1] = (int) Test0965.instanceCount;
                by -= (byte) i9;
                f1 += Test0965.instanceCount;
                i7 += (int) (50.327F + (d * d));
                i10 -= i8;
                i11 -= i11;
            }
            i11 /= (int) -3989892294L;
            f2 *= i11;
            Test0965.instanceCount ^= i7;
            Test0965.fArrFld[i8 - 1] = 2;
        }
        long meth_res = Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + i10 + by + i11 +
                Float.floatToIntBits(f2);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i3, boolean b, long l1) {

        int i4 = -14;
        int i5 = -10;
        int[] iArr = new int[N];
        float f3 = -70.921F;
        float[] fArr = new float[N];
        byte by1 = -53;
        double d1 = 41.84594;
        short[] sArr = new short[N];

        FuzzerUtils.init(fArr, 2.180F);
        FuzzerUtils.init(iArr, -1);
        FuzzerUtils.init(sArr, (short) -27408);

        i4 = 1;
        while (++i4 < 308) {
            i3 += (i4 ^ i4);
            i5 = 1;
            while (++i5 < 5) {
                fArr[i5] = Math.abs((int) ((7650496028695771298L * (-8630200907303893234L << (--iArr[i5]))) >>>
                        iMeth1(f3, i4, i5)));
                if (true) break;
                i3 >>= (int) l1;
                i3 += (i5 * i3);
                i3 = i4;
                i3 = i3;
                i3 += by1;
                d1 = i4;
            }
            f3 += i3;
        }
        f3 = 36735L;
        sArr = FuzzerUtils.short1array(N, (short) 31151);
        i3 -= i4;
        long meth_res = i3 + (b ? 1 : 0) + l1 + i4 + i5 + Float.floatToIntBits(f3) + by1 + Double.doubleToLongBits(d1)
                + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i2, long l) {

        boolean b1 = true;
        int i12 = -41, i13 = -1, i14 = 50508;
        long l2 = -13L;
        long[] lArr = new long[N];
        short s = 26965;

        FuzzerUtils.init(lArr, -2056166471241119965L);

        i2 *= (int) ((iMeth(i2, b1, Test0965.instanceCount) + Test0965.instanceCount) * l);
        for (i12 = 2; i12 < 242; ++i12) {
            byte by2 = -80;
            Test0965.instanceCount += (((i12 * i12) + i12) - Test0965.fFld);
            i13 *= i12;
            switch ((i12 % 2) + 25) {
                case 25:
                    i13 += by2;
                    Test0965.fFld = i13;
                    switch ((i12 % 8) + 108) {
                        case 108:
                            Test0965.instanceCount += i12;
                            i2 += (int) Test0965.instanceCount;
                            i14 = 1;
                            do {
                                l2 = 1;
                                do {
                                    b1 = b1;
                                    Test0965.fFld *= i2;
                                    Test0965.fFld -= -105;
                                } while (++l2 < 1);
                            } while (++i14 < 7);
                            break;
                        case 109:
                            i2 += (int) l2;
                            break;
                        case 110:
                            Test0965.iArrFld[i12] = (int) l2;
                            break;
                        case 111:
                        case 112:
                            try {
                                i2 = (-19846 / i12);
                                i2 = (Test0965.iArrFld[i12 + 1] % i2);
                                Test0965.iArrFld[i12] = (240 % Test0965.iArrFld[i12 - 1]);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 113:
                            if (b1) break;
                            break;
                        case 114:
                            lArr[i12 - 1] = by2;
                            break;
                        case 115:
                            i13 += (((i12 * i2) + i12) - i12);
                        default:
                            l |= i14;
                    }
                    break;
                case 26:
                    i2 += s;
            }
        }
        vMeth_check_sum += i2 + l + (b1 ? 1 : 0) + i12 + i13 + i14 + l2 + s + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0965 _instance = new Test0965();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 58635, i1 = 7, i15 = 57509, i16 = -3608, i17 = -3, i18 = 5, i19 = 50809, i20 = 13, i21 = -13, i22 = -195, i23 = -14;
        float f = 2.307F;
        long l3 = 14L;
        double d2 = 88.21513;
        byte by3 = -64;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) -55);

        i *= (int) (Math.max((int) (i = (int) Test0965.instanceCount), (int) (f - i)) / (((long) ((f + Test0965.instanceCount) * (i
                + i1))) | 1));
        vMeth(i1, Test0965.instanceCount);
        for (i15 = 4; i15 < 171; ++i15) {
            boolean b2 = false;
            if (b2) continue;
            if (b2) {
                for (l3 = 5; 150 > l3; ++l3) {
                    for (i18 = 1; i18 < 2; i18++) {
                        if (b2) {
                            i20 = i20;
                            Test0965.instanceCount = 38798;
                            Test0965.fFld -= i17;
                        } else {
                            Test0965.sFld ^= (short) 11;
                            Test0965.instanceCount += (((i18 * Test0965.fFld) + i15) - i1);
                        }
                        i = (int) -1.1521;
                    }
                    Test0965.lArrFld[i15 + 1] *= 181;
                    Test0965.instanceCount >>= i15;
                    dFld -= i19;
                    i19 += (int) (((l3 * i) + i19) - i15);
                    Test0965.instanceCount = Test0965.instanceCount;
                }
                for (i21 = i15; i21 < 150; ++i21) {
                    switch (((i21 % 9) * 5) + 36) {
                        case 38:
                            i <<= Test0965.sFld;
                            sArrFld[i15] = (short) i18;
                            Test0965.lArrFld[i21] *= i20;
                            break;
                        case 44:
                            for (d2 = 1; 1 > d2; d2++) {
                                Test0965.instanceCount += (long) 1.735F;
                                Test0965.instanceCount = 11;
                                Test0965.instanceCount += i17;
                                i20 >>= 49;
                                iFld -= i1;
                            }
                            break;
                        case 64:
                            byArr[i21 - 1] = (byte) i23;
                        case 71:
                            i23 -= i23;
                            break;
                        case 78:
                            i16 += (i21 * i21);
                            break;
                        case 47:
                            Test0965.instanceCount = i22;
                            break;
                        case 59:
                            Test0965.instanceCount = (long) Test0965.fFld;
                        case 63:
                            dFld -= by3;
                            break;
                        case 48:
                            i1 >>>= (int) Test0965.instanceCount;
                            break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i f i1 = " + i + "," + Float.floatToIntBits(f) + "," + i1);
        FuzzerUtils.out.println("i15 i16 l3 = " + i15 + "," + i16 + "," + l3);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("d2 i23 by3 = " + Double.doubleToLongBits(d2) + "," + i23 + "," + by3);
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0965.instanceCount Test0965.fFld Test0965.sFld = " + Test0965.instanceCount + "," +
                Float.floatToIntBits(Test0965.fFld) + "," + Test0965.sFld);
        FuzzerUtils.out.println("dFld iFld Test0965.iArrFld = " + Double.doubleToLongBits(dFld) + "," + iFld + "," +
                FuzzerUtils.checkSum(Test0965.iArrFld));
        FuzzerUtils.out.println("Test0965.fArrFld Test0965.lArrFld sArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0965.fArrFld)) + "," + FuzzerUtils.checkSum(Test0965.lArrFld) +
                "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
