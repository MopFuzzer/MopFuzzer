// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0613 {

    public static final int N = 400;

    public static long instanceCount = 2979548382172199295L;
    public static double dFld = 1.83867;
    public static byte byFld = -10;
    public static int iFld1 = 180;
    public static float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0613.fArrFld, 1.696F);
    }

    public int iFld = -93;
    public long[] lArrFld = new long[N];

    public static void vMeth1() {

        int i5 = 7;
        int i6 = 9;
        int i7 = 60615;
        int i8 = -86;
        int i9 = 1;
        int[] iArr = new int[N];
        boolean b = true;

        FuzzerUtils.init(iArr, 21);

        for (i5 = 5; 136 > i5; i5++) {
            i6 = (int) -36852L;
            iArr[i5] <<= i6;
            i7 = 1;
            while ((i7 += 2) < 12) {
                float f2 = 0.231F;
                try {
                    i6 = (i6 % -96);
                    i6 = (i7 / 158384398);
                    i6 = (i7 / 15);
                } catch (ArithmeticException a_e) {
                }
                for (i8 = i7; i8 < 2; ++i8) {
                    if (b) continue;
                }
                f2 += (i7 * i7);
                Test0613.dFld = -26596;
                iArr[i7 - 1] -= (int) Test0613.instanceCount;
                iArr[(i7 >>> 1) % N] += i6;
                i9 = (int) -8681465467116610509L;
                if (false) continue;
                i6 = (int) 321312881L;
                Test0613.dFld = Test0613.instanceCount;
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i2, int i3, int i4) {

        double d = 0.121485, d1 = -76.105489;
        int i10 = 10, i11 = 29500, i12 = -14171;
        float f3 = 17.913F;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -10525);

        i3 = (i2 += i3);
        vMeth1();
        for (d = 3; 210 > d; d++) {
            i4 >>>= i3;
            switch ((int) ((d % 1) + 112)) {
                case 112:
                    i2 = -209;
                    for (i11 = 1; i11 < 8; ++i11) {
                        d1 = 1;
                        while (++d1 < 2) {
                            Test0613.instanceCount += (long) d1;
                            Test0613.instanceCount *= -4434;
                            i10 -= i3;
                            i10 <<= (int) Test0613.instanceCount;
                            Test0613.instanceCount += (long) (d1 * d1);
                            Test0613.byFld >>= (byte) i2;
                            Test0613.instanceCount += -1030789102153118515L;
                        }
                    }
                default:
                    Test0613.byFld = (byte) f3;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + Double.doubleToLongBits(d) + i10 + i11 + i12 + Double.doubleToLongBits(d1) +
                Float.floatToIntBits(f3) + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth(int i, float f) {

        float f1 = 3.232F;
        int i1 = -51404;
        int i13 = -85;
        int i14 = 1;
        int i15 = -124;
        int i16 = 96;
        int[] iArr1 = new int[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, 31.13662);
        FuzzerUtils.init(iArr1, 237);

        Test0613.instanceCount = ((i ^= (int) (1.292F * (i + i))) * (-(++i)));
        for (f1 = 12; f1 < 211; ++f1) {
            i1 += (int) f1;
            vMeth(i, i1, i1);
            i += (int) (f1 * f1);
            for (i13 = (int) (f1); i13 < 8; i13 += 2) {
                i1 = i13;
            }
        }
        for (i15 = 10; i15 < 235; i15++) {
            Test0613.byFld += (byte) (((i15 * i15) + Test0613.instanceCount) - i16);
            dArr[i15] += Test0613.instanceCount;
            switch ((i15 % 2) + 61) {
                case 61:
                    Test0613.instanceCount >>>= 28219;
                    f = 2610;
                case 62:
                    f -= 53;
                    f = i14;
                    break;
                default:
                    Test0613.fArrFld[i15] = i13;
            }
        }
        long meth_res = i + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i1 + i13 + i14 + i15 + i16 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0613 _instance = new Test0613();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f4 = -2.44F;
        int i18 = -5, i19 = 10, i20 = 46396, i21 = -171, i22 = -7096, i23 = 6, i24 = 3, i25 = 7, i26 = 90;
        double[] dArr1 = new double[N];

        FuzzerUtils.init(dArr1, 0.74931);

        Test0613.instanceCount -= iMeth(iFld, f4);
        lArrFld[(iFld >>> 1) % N] += (long) Test0613.dFld;
        iFld = (int) f4;
        iFld = iFld;
        Test0613.instanceCount -= iFld;
        i18 = 1;
        do {
            iFld += (i18 - f4);
            switch (((i18 % 2) * 5) + 98) {
                case 102:
                    iFld += (i18 | Test0613.iFld1);
                    Test0613.dFld *= Test0613.dFld;
                    switch (((i18 % 3) * 5) + 72) {
                        case 77:
                            dArr1[i18 - 1] *= i18;
                            break;
                        case 73:
                            for (i19 = i18; i19 < 89; i19++) {
                                f4 += (i19 * i19);
                                switch ((i19 % 5) + 50) {
                                    case 50:
                                        for (i21 = 1; 1 > i21; ++i21) {
                                            Test0613.instanceCount += i21;
                                            dArr1[i18 + 1] -= Test0613.dFld;
                                            i22 <<= (int) Test0613.instanceCount;
                                        }
                                        i23 = 1;
                                        while (++i23 < 1) {
                                            Test0613.iFld1 += (-38555 + (i23 * i23));
                                            Test0613.fArrFld = Test0613.fArrFld;
                                            Test0613.iFld1 += i23;
                                        }
                                        iFld <<= i19;
                                        break;
                                    case 51:
                                        for (i24 = 1; i24 < 1; ++i24) {
                                            i25 = i22;
                                        }
                                        i20 -= i19;
                                        Test0613.instanceCount = (long) 1.6124;
                                        break;
                                    case 52:
                                        Test0613.instanceCount += i19;
                                        iFld = (int) Test0613.instanceCount;
                                    case 53:
                                        i22 += (((i19 * iFld) + i23) - i18);
                                    case 54:
                                        i22 += i19;
                                        break;
                                    default:
                                        i25 = i24;
                                }
                            }
                            break;
                        case 74:
                            Test0613.instanceCount += i21;
                            break;
                    }
                case 107:
                    Test0613.byFld += (byte) i26;
                    break;
            }
        } while (++i18 < 281);

        FuzzerUtils.out.println("f4 i18 i19 = " + Float.floatToIntBits(f4) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 dArr1 = " + i26 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test0613.instanceCount Test0613.dFld Test0613.byFld = " + Test0613.instanceCount + "," +
                Double.doubleToLongBits(Test0613.dFld) + "," + Test0613.byFld);
        FuzzerUtils.out.println("iFld Test0613.iFld1 Test0613.fArrFld = " + iFld + "," + Test0613.iFld1 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0613.fArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
