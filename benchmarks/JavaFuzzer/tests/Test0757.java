// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0757 {

    public static final int N = 400;

    public static long instanceCount = 14L;
    public static float fFld = -2.19F;
    public static boolean[] bArrFld = new boolean[N];
    public static short[] sArrFld = new short[N];
    public static volatile long[][] lArrFld = new long[N][N];
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0757.bArrFld, true);
        FuzzerUtils.init(Test0757.sArrFld, (short) 31223);
        FuzzerUtils.init(Test0757.lArrFld, 1855813740128743498L);
    }

    public volatile short sFld = -19709;
    public int[] iArrFld = new int[N];

    public static void vMeth(int i14, double d2, int i15) {

        int i16 = 47071;
        int i17 = -85;
        int i18 = -44404;
        int i19 = -228;
        int i20 = 150;
        int i21 = 14;
        int[] iArr1 = new int[N];
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr1, -14);
        FuzzerUtils.init(fArr, -39.346F);

        for (i16 = 11; i16 < 196; ++i16) {
            for (i18 = 9; i18 > 1; i18 -= 2) {
                Test0757.instanceCount -= -60040;
                i14 = i15;
                i15 += (int) Test0757.instanceCount;
                for (i20 = 1; i20 < 3; ++i20) {
                    iArr1[i16 + 1] += i15;
                    i21 |= i18;
                    Test0757.bArrFld[i16 - 1] = false;
                    i15 -= i14;
                }
                Test0757.fFld = i18;
                switch ((i18 % 2) + 109) {
                    case 109:
                        i19 += i18;
                        break;
                    case 110:
                }
                try {
                    iArr1[i16] = (i14 / i17);
                    i19 = (i15 / 42341);
                    i17 = (i14 % i20);
                } catch (ArithmeticException a_e) {
                }
                fArr[i18 - 1] = i14;
            }
        }
        vMeth_check_sum += i14 + Double.doubleToLongBits(d2) + i15 + i16 + i17 + i18 + i19 + i20 + i21 +
                FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(int i8, int i9, int i10) {

        double d1 = 0.79796;
        int i11 = -203;
        int i12 = 13;
        int i13 = 157;
        int[] iArr = new int[N];
        boolean b1 = true;
        float[] fArr1 = new float[N];

        FuzzerUtils.init(iArr, 176);
        FuzzerUtils.init(fArr1, -1.350F);

        Test0757.instanceCount *= (++i9);
        for (d1 = 8; d1 < 176; d1++) {
            if (false) {
                for (i12 = 9; i12 > 1; i12--) {
                    switch ((i12 % 6) + 96) {
                        case 96:
                            i9 = (int) Test0757.instanceCount;
                            if (Test0757.bArrFld[i12] = (!(Test0757.fFld != (i9 * i10)))) break;
                            iArr[i12 - 1] -= (int) 62.40244;
                            i9 ^= (i8--);
                            break;
                        case 97:
                            vMeth(i11, d1, i9);
                            iArr[i12 + 1] = (int) Test0757.instanceCount;
                            Test0757.sArrFld[(int) (d1)] = (short) 12;
                            i13 += i10;
                            break;
                        case 98:
                            fArr1[i12 - 1] *= i13;
                            break;
                        case 99:
                            i8 += i12;
                            break;
                        case 100:
                            iArr[(int) (d1 - 1)] /= (int) (Test0757.instanceCount | 1);
                        case 101:
                            b1 = b1;
                            break;
                        default:
                            i9 += -59;
                    }
                }
            }
        }
        long meth_res = i8 + i9 + i10 + Double.doubleToLongBits(d1) + i11 + i12 + i13 + (b1 ? 1 : 0) +
                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static float fMeth(int i4, long l1, int i5) {

        int i6 = -26068, i7 = -137, i22 = 19553, i23 = 0;
        short s = 17047;
        byte[] byArr1 = new byte[N];

        FuzzerUtils.init(byArr1, (byte) -36);

        for (i6 = 254; i6 > 7; --i6) {
            Test0757.fFld = s;
            i7 = (i5 << iMeth(i4, i5, i7));
            Test0757.lArrFld[i6] = Test0757.lArrFld[i6 + 1];
            for (i22 = 1; 7 > i22; ++i22) {
                l1 += i23;
            }
            byArr1[i6] -= (byte) s;
            i23 >>= 59995;
        }
        long meth_res = i4 + l1 + i5 + i6 + i7 + s + i22 + i23 + FuzzerUtils.checkSum(byArr1);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0757 _instance = new Test0757();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -10446, i1 = 65, i2 = 130, i3 = -126;
        boolean b = true;
        boolean[] bArr = new boolean[N];
        double d = 115.124307;
        long l = -3249902308L;
        byte by = -104;
        byte[][] byArr = new byte[N][N];
        float[] fArr2 = new float[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(byArr, (byte) -41);
        FuzzerUtils.init(fArr2, 2.811F);

        i = 1;
        while (++i < 326) {
            b = ((i > d) ^ bArr[i]);
            switch ((((7 * i) >>> 1) % 7) + 25) {
                case 25:
                    for (l = i; 77 > l; l++) {
                        sFld += (short) (227 + (l * l));
                        i1 = i;
                        if (b) {
                            switch ((((--i1) >>> 1) % 10) + 113) {
                                case 113:
                                    i1 <<= (++i1);
                                    i1 = (int) Float.intBitsToFloat(i1--);
                                    i2 = 1;
                                    do {
                                        Test0757.instanceCount ^= (i1 + ((i2 + l) - (i2 + i)));
                                        byArr[i + 1][i2] += (byte) i;
                                        i3 += (int) Math.abs(fMeth(i, Test0757.instanceCount, i));
                                        by = (byte) i;
                                        i3 -= (int) l;
                                        if (b) {
                                            Test0757.lArrFld[i - 1][i2 + 1] += Test0757.instanceCount;
                                            iArrFld[i2 - 1] += (int) l;
                                            i1 -= (int) d;
                                        } else if (b) {
                                            i3 = i3;
                                        } else if (b) {
                                            Test0757.fFld = i;
                                            d = -8170L;
                                            i1 *= (int) Test0757.instanceCount;
                                            i3 += (int) Test0757.instanceCount;
                                        } else {
                                            Test0757.instanceCount += i;
                                            Test0757.instanceCount = -3;
                                            by += (byte) i2;
                                            d += -1520;
                                        }
                                        i3 += (int) l;
                                    } while (++i2 < 1);
                                case 114:
                                    i3 -= i;
                                case 115:
                                    Test0757.instanceCount = i1;
                                case 116:
                                    by += (byte) (((l * sFld) + i3) - Test0757.fFld);
                                    break;
                                case 117:
                                    fArr2 = fArr2;
                                case 118:
                                    Test0757.instanceCount = l;
                                    break;
                                case 119:
                                    i3 += (int) (((l * i) + i2) - Test0757.fFld);
                                    break;
                                case 120:
                                    try {
                                        iArrFld[(int) (l + 1)] = (i % i);
                                        i1 = (i2 % 46135);
                                        i3 = (i2 % 53390);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    break;
                                case 121:
                                    sFld >>>= (short) i;
                                case 122:
                                    Test0757.fFld += 1.426F;
                                    break;
                            }
                        } else if (true) {
                            try {
                                i3 = (i % iArrFld[i - 1]);
                                i3 = (-720610322 % i3);
                                i3 = (i1 / iArrFld[(int) (l - 1)]);
                            } catch (ArithmeticException a_e) {
                            }
                        } else {
                            i1 += (int) (((l * sFld) + i2) - Test0757.fFld);
                        }
                    }
                    break;
                case 26:
                    iArrFld[i] = i3;
                    break;
                case 27:
                    Test0757.lArrFld[i][i + 1] += 37786;
                    break;
                case 28:
                    d = Test0757.instanceCount;
                    break;
                case 29:
                    i1 *= i;
                    break;
                case 30:
                    sFld += (short) i3;
                    break;
                case 31:
                    i1 += (int) (-13L + (i * i));
                    break;
                default:
                    Test0757.fFld = (float) d;
            }
        }

        FuzzerUtils.out.println("i b d = " + i + "," + (b ? 1 : 0) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("l i1 i2 = " + l + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 by bArr = " + i3 + "," + by + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("byArr fArr2 = " + FuzzerUtils.checkSum(byArr) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test0757.instanceCount sFld Test0757.fFld = " + Test0757.instanceCount + "," + sFld + "," +
                Float.floatToIntBits(Test0757.fFld));
        FuzzerUtils.out.println("Test0757.bArrFld Test0757.sArrFld Test0757.lArrFld = " + FuzzerUtils.checkSum(Test0757.bArrFld) + ","
                + FuzzerUtils.checkSum(Test0757.sArrFld) + "," + FuzzerUtils.checkSum(Test0757.lArrFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
