// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test0878 {

    public static final int N = 400;

    public static long instanceCount = -14L;
    public static volatile double dFld = -1.92769;
    public static double[] dArrFld = new double[N];
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0878.dArrFld, 1.65620);
        FuzzerUtils.init(Test0878.iArrFld, 4);
    }

    public static void vMeth1() {

        int i2 = 237;
        int i3 = -212;
        int i4 = 49907;
        int i5 = -7;
        int i6 = 101;
        int i7 = 44;
        int[] iArr = new int[N];
        boolean b = true;
        float f = 1.1001F, f1 = -103.483F;
        byte by = 87;

        FuzzerUtils.init(iArr, -8918);

        i2 = 1;
        while (++i2 < 158) {
            iArr[i2 - 1] -= (int) -124.80742;
        }
        for (i3 = 17; i3 < 336; ++i3) {
            b = b;
            Test0878.dArrFld[i3] = i4;
            for (f = i3; f < 5; ++f) {
                Test0878.instanceCount += i5;
                Test0878.instanceCount += (long) f;
                i5 = (int) f;
                i4 += (int) (((f * by) + i2) - i2);
                by += (byte) i3;
                for (i6 = 1; i6 < 1; ++i6) {
                    if (b) continue;
                    Test0878.instanceCount -= (long) f;
                    f1 *= by;
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + (b ? 1 : 0) + Float.floatToIntBits(f) + i5 + by + i6 + i7 +
                Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i8 = -42342, i9 = -236, i10 = -11, i11 = -75, i12 = 49257, i13 = 76;
        float f2 = 2.60F;
        boolean b1 = true;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) 15787);

        vMeth1();
        for (i8 = 3; i8 < 267; ++i8) {
            i9 <<= i8;
            for (i10 = 1; i10 < 6; i10++) {
                i9 = i8;
                Test0878.instanceCount >>= i10;
                Test0878.dArrFld[i10 + 1] = f2;
                i9 += i11;
                i9 |= i8;
                if (b1) continue;
            }
            for (i12 = 1; i12 < 6; ++i12) {
                i9 *= i8;
                sArr[(i11 >>> 1) % N] = (short) 127;
                i11 = -46758;
                i9 = -4;
            }
        }
        vMeth_check_sum += i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) + i12 + i13 +
                FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth() {

        float f3 = -2.542F, f4 = 87.116F;
        int i14 = 52190, i15 = -14, i16 = 65327, i17 = -110, i18 = -39;
        byte by1 = -41;

        vMeth();
        f3 = f3;
        Test0878.iArrFld[(i14 >>> 1) % N] = i14;
        Test0878.instanceCount = -39169;
        for (i15 = 1; 177 > i15; i15++) {
            i16 *= i16;
            for (i17 = 1; i17 < 9; i17++) {
                i14 += i14;
                Test0878.iArrFld[i15] = (int) f4;
                i16 += (i17 - i15);
                by1 = (byte) f4;
                Test0878.instanceCount -= Test0878.instanceCount;
            }
            by1 += (byte) (i15 * i15);
        }
        i18 *= (int) Test0878.instanceCount;
        Test0878.instanceCount += (long) Test0878.dFld;
        long meth_res = Float.floatToIntBits(f3) + i14 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f4) + by1;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0878 _instance = new Test0878();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 30068, i1 = -3, i19 = 40, i20 = 10;
        short s = 2877;
        float f5 = -1.824F, f6 = 2.857F;
        double d = -4.68651;
        byte by2 = 116;

        for (i = 18; i < 359; ++i) {
            s = (short) (((Test0878.dFld - i1) + (4 * (i - -51.49941))) - iMeth());
            for (f5 = 74; f5 > i; --f5) {
                boolean b2 = true;
                Test0878.dFld *= i1;
                i19 = i1;
                if (b2) {
                    Test0878.iArrFld[(int) (f5)] *= i;
                    i19 = i1;
                } else {
                    i1 -= i;
                    b2 = b2;
                }
                i1 >>>= i;
                i1 *= (int) Test0878.dFld;
                i19 += (int) ((long) f5 ^ Test0878.instanceCount);
            }
            Test0878.dFld = Test0878.instanceCount;
            f6 = Test0878.instanceCount;
            i20 = 74;
            while (--i20 > 0) {
                boolean b3 = true;
                Test0878.instanceCount <<= Test0878.instanceCount;
                Test0878.iArrFld[i20 + 1] -= i19;
                i1 <<= (int) Test0878.instanceCount;
                if (b3) continue;
                Test0878.iArrFld[i - 1] = (int) Test0878.dFld;
                i19 = 185;
                d = 1;
                while (++d < 1) {
                    s += (short) Test0878.dFld;
                    Test0878.iArrFld = Test0878.iArrFld;
                    Test0878.iArrFld[i] -= i;
                    i19 = (int) f6;
                }
                if (false) break;
                i1 ^= by2;
            }
            Test0878.iArrFld[i + 1] /= -9;
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("f5 i19 f6 = " + Float.floatToIntBits(f5) + "," + i19 + "," + Float.floatToIntBits(f6));
        FuzzerUtils.out.println("i20 d by2 = " + i20 + "," + Double.doubleToLongBits(d) + "," + by2);

        FuzzerUtils.out.println("Test0878.instanceCount Test0878.dFld Test0878.dArrFld = " + Test0878.instanceCount + "," +
                Double.doubleToLongBits(Test0878.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0878.dArrFld)));
        FuzzerUtils.out.println("Test0878.iArrFld = " + FuzzerUtils.checkSum(Test0878.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
