// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0939 {

    public static final int N = 400;

    public static long instanceCount = 14L;
    public static float fFld = 116.826F;
    public static int iFld = 65058;
    public static boolean bFld = true;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0939.iArrFld, -6);
    }

    public double dFld = -1.15977;

    public static void vMeth2() {

        double d = -107.38487, d1 = -41.110054;
        short s = -1248;
        int i6 = 3, i7 = 51005, i8 = 6135, i9 = -152, i10 = 23099;
        boolean b = true;

        Test0939.iArrFld[(Test0939.iFld >>> 1) % N] += (int) d;
        Test0939.iFld = s;
        Test0939.instanceCount -= (long) Test0939.fFld;
        Test0939.iArrFld[(Test0939.iFld >>> 1) % N] = Test0939.iFld;
        Test0939.iFld *= Test0939.iFld;
        Test0939.iFld = Test0939.iFld;
        for (i6 = 11; i6 < 192; i6++) {
            for (d1 = 1; d1 < 9; ++d1) {
                Test0939.instanceCount = i7;
                i8 += (61822 + (d1 * d1));
            }
            Test0939.fFld += (((i6 * i6) + Test0939.iFld) - i8);
            for (i9 = 1; i9 < 9; ++i9) {
                i7 = (int) Test0939.instanceCount;
                Test0939.iFld &= -30832;
                if (b) break;
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + s + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + (b
                ? 1 : 0);
    }

    public static void vMeth1(int i3, long l) {

        int i4 = -137, i5 = 13, i11 = -130, i12 = 21189, i13 = -25569;
        short s1 = -3599;

        for (i4 = 11; i4 < 259; i4++) {
            vMeth2();
            i5 -= s1;
            i11 = 1;
            do {
                if (Test0939.bFld) break;
                Test0939.fFld += i11;
                for (i12 = i4; i12 < 1; ++i12) {
                    i3 = i3;
                    switch (((i11 % 2) * 5) + 86) {
                        case 92:
                            Test0939.fFld = i12;
                            Test0939.instanceCount = Test0939.iFld;
                            Test0939.iFld += i12;
                            break;
                        case 88:
                            i5 -= (int) 83.685F;
                            Test0939.fFld /= (i13 | 1);
                        default:
                            i13 += (int) Test0939.instanceCount;
                    }
                }
            } while (++i11 < 7);
        }
        vMeth1_check_sum += i3 + l + i4 + i5 + s1 + i11 + i12 + i13;
    }

    public static void main(String[] strArr) {

        try {
            Test0939 _instance = new Test0939();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        int i1 = -33872, i2 = 58085, i14 = -5, i15 = -37, i16 = -13, i17 = -15545, i18 = 46724;
        float f1 = 1.846F;
        byte by = 6;
        byte[] byArr = new byte[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 5797061113948265752L);
        FuzzerUtils.init(byArr, (byte) 51);

        for (i1 = 8; i1 < 258; i1++) {
            vMeth1(i2, Test0939.instanceCount);
            Test0939.instanceCount += 20098;
            for (i14 = 1; i14 < 7; i14 += 3) {
                if (i2 != 0) {
                    vMeth_check_sum += i1 + i2 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 + i18 + by +
                            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
                    return;
                }
            }
            switch ((i1 % 9) + 37) {
                case 37:
                    i15 -= Test0939.iFld;
                    i2 &= i15;
                    i2 |= i15;
                    break;
                case 38:
                    dFld -= -15406;
                    for (f1 = 7; f1 > i1; f1 -= 2) {
                        for (i17 = 1; i17 < 1; ++i17) {
                            i16 += (int) (-43195L + (i17 * i17));
                            Test0939.iArrFld[i17] = by;
                            i18 >>= i14;
                        }
                    }
                    break;
                case 39:
                    i18 = i17;
                    break;
                case 40:
                    i15 *= i2;
                    break;
                case 41:
                    Test0939.fFld *= 52.511F;
                    break;
                case 42:
                    by += (byte) (i1 | i1);
                    break;
                case 43:
                    byArr[i1 - 1] = by;
                    break;
                case 44:
                    Test0939.iArrFld = Test0939.iArrFld;
                case 45:
                default:
                    Test0939.iFld += (i1 - Test0939.iFld);
            }
        }
        vMeth_check_sum += i1 + i2 + i14 + i15 + Float.floatToIntBits(f1) + i16 + i17 + i18 + by +
                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        float f = 0.718F;
        float[] fArr = new float[N];
        int i = -36642;
        int i19 = 197;
        int i20 = -117;
        int i21 = -6;
        int i22 = -3;
        int i23 = 54721;
        int i24 = -2;
        int[] iArr = new int[N];
        byte by1 = 5;
        double d2 = 71.104532;
        short s2 = 23185;

        FuzzerUtils.init(iArr, -41928);
        FuzzerUtils.init(fArr, 2.1019F);

        for (f = 211; f > 11; f--) {
            Test0939.fFld += iArr[(int) (f + 1)];
            vMeth();
            Test0939.iArrFld[(int) (f - 1)] = 57985;
            Test0939.instanceCount %= ((long) (dFld) | 1);
            Test0939.iFld = (int) dFld;
            Test0939.iFld >>= i;
            Test0939.instanceCount = 56595;
            by1 += (byte) (f * Test0939.iFld);
        }
        for (d2 = 15; d2 < 250; ++d2) {
            i19 += (int) (((d2 * Test0939.iFld) + i19) - i19);
            for (i20 = 5; i20 < 107; ++i20) {
                Test0939.bFld = Test0939.bFld;
                s2 = (short) i21;
                Test0939.fFld *= Test0939.instanceCount;
                i21 = (int) Test0939.instanceCount;
                i21 *= i19;
                fArr[(int) (d2)] %= (i20 | 1);
                Test0939.instanceCount = Test0939.instanceCount;
            }
            try {
                Test0939.iFld = (-25277 / i21);
                i21 = (46 % i);
                Test0939.iFld = (-1661177108 % Test0939.iFld);
            } catch (ArithmeticException a_e) {
            }
            for (i22 = 107; i22 > d2; --i22) {
                i21 += i19;
                i24 = 1;
                while (--i24 > 0) {
                    i ^= by1;
                    switch ((int) ((d2 % 4) + 120)) {
                        case 120:
                            i21 *= i;
                            Test0939.instanceCount <<= Test0939.instanceCount;
                        case 121:
                            i19 += (((i24 * i23) + i20) - i19);
                            if (Test0939.bFld) continue;
                        case 122:
                            Test0939.fFld *= 32060;
                            break;
                        case 123:
                            s2 = (short) 52629;
                            break;
                        default:
                            i -= i24;
                    }
                }
            }
        }

        FuzzerUtils.out.println("f i by1 = " + Float.floatToIntBits(f) + "," + i + "," + by1);
        FuzzerUtils.out.println("d2 i19 i20 = " + Double.doubleToLongBits(d2) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 s2 i22 = " + i21 + "," + s2 + "," + i22);
        FuzzerUtils.out.println("i23 i24 iArr = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0939.instanceCount Test0939.fFld Test0939.iFld = " + Test0939.instanceCount + "," +
                Float.floatToIntBits(Test0939.fFld) + "," + Test0939.iFld);
        FuzzerUtils.out.println("Test0939.bFld dFld Test0939.iArrFld = " + (Test0939.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(dFld) + "," + FuzzerUtils.checkSum(Test0939.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
