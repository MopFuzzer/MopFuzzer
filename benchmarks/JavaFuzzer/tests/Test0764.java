// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0764 {

    public static final int N = 400;

    public static long instanceCount = 12L;
    public static float fFld = 74.481F;
    public static volatile int iFld = 239;
    public static boolean bFld = true;
    public static short sFld = -1904;
    public static double[] dArrFld = new double[N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0764.dArrFld, 0.105548);
        FuzzerUtils.init(Test0764.iArrFld, -11);
    }

    public double dFld = -2.117516;

    public static int iMeth() {

        int i4 = -18, i5 = -14, i6 = -20, i7 = 64251;
        byte by = -44;
        double d = -117.50193;
        short s = -17043;
        long l = 3L;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 121L);

        i4 -= by;
        i5 = 1;
        while (++i5 < 379) {
            d += by;
            i4 = i5;
            s <<= (short) i4;
            lArr[i5 + 1] -= (long) d;
            i4 = i5;
        }
        for (i6 = 7; i6 < 339; ++i6) {
            i4 += (((i6 * i6) + i7) - i6);
            i7 -= by;
            Test0764.fFld += (float) d;
            l = 1;
            do {
                i7 += i6;
                d = Test0764.instanceCount;
                lArr[(int) (l - 1)] *= i6;
            } while (++l < 5);
        }
        long meth_res = i4 + by + i5 + Double.doubleToLongBits(d) + s + i6 + i7 + l + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1() {

        int i3 = -175;
        int i8 = 4318;
        int i9 = -11759;
        int i10 = 12;
        int i11 = 6;
        int[] iArr = new int[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, 54403);
        FuzzerUtils.init(dArr, -120.74399);

        if (Test0764.bFld) {
            i3 = 1;
            while (++i3 < 384) {
                iMeth();
                Test0764.iFld -= -1;
            }
            i8 = 1;
            do {
                i9 = 1;
                while (++i9 < 6) {
                    Test0764.iFld = Test0764.iFld;
                    Test0764.bFld = true;
                    for (i10 = 1; 1 > i10; ++i10) {
                        iArr[i8 - 1] = i9;
                        if (Test0764.bFld) {
                            Test0764.instanceCount = i9;
                            dArr = dArr;
                        }
                        i11 = i10;
                        Test0764.iFld <<= i10;
                    }
                }
            } while (++i8 < 284);
        } else {
            Test0764.fFld += Test0764.iFld;
        }
        vMeth1_check_sum += i3 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i1 = 20708, i2 = 96, i12 = -47086, i13 = 20824, i14 = -9, i15 = -167;
        double[] dArr1 = new double[N];

        FuzzerUtils.init(dArr1, 2.84885);

        for (i1 = 9; i1 < 253; i1++) {
            vMeth1();
            Test0764.instanceCount += (73 + (i1 * i1));
            Test0764.iFld += i1;
        }
        for (i12 = 5; 234 > i12; ++i12) {
            i2 <<= Test0764.sFld;
            Test0764.instanceCount += i12;
            i2 = Test0764.iFld;
            Test0764.instanceCount += i12;
            for (i14 = 1; i14 < 7; i14++) {
                i13 = Test0764.iFld;
                i13 = 1;
                i13 = -111;
                i15 *= (int) Test0764.instanceCount;
                Test0764.iFld -= i14;
            }
        }
        vMeth_check_sum += i1 + i2 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static void main(String[] strArr) {

        try {
            Test0764 _instance = new Test0764();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 0, i16 = -47860, i17 = 0, i18 = -185, i19 = 52232, i20 = 217, i21 = 22042, i22 = 190, i23 = 47909, i24 = -245;
        float f = 32.681F;
        double d2 = -53.56605;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) 100);

        i >>= (--i);
        vMeth();
        Test0764.iFld -= i;
        for (f = 8; f < 330; f++) {
            i >>>= i;
            Test0764.iFld = i16;
            Test0764.fFld = 204;
            Test0764.iFld += i;
            i >>= (int) Test0764.instanceCount;
        }
        for (d2 = 7; d2 < 205; ++d2) {
            Test0764.dArrFld[(int) (d2 - 1)] = Test0764.fFld;
            Test0764.iFld = i17;
        }
        i16 += i16;
        i18 = 1;
        while (++i18 < 301) {
            i += (((i18 * Test0764.iFld) + i18) - Test0764.iFld);
            byArr[i18] >>= (byte) i16;
            for (i19 = 3; i19 < 84; ++i19) {
                i16 <<= i20;
                for (i21 = i18; i21 < 2; ++i21) {
                    Test0764.instanceCount >>= Test0764.instanceCount;
                    i23 = i16;
                    i *= i16;
                    dFld = i17;
                    Test0764.iFld += i24;
                    i16 += (i21 * i21);
                    Test0764.iArrFld[i21] = (int) Test0764.instanceCount;
                    i17 = -5;
                }
            }
            i24 += (i18 * i18);
            Test0764.instanceCount = 13;
            i22 += i21;
        }

        FuzzerUtils.out.println("i f i16 = " + i + "," + Float.floatToIntBits(f) + "," + i16);
        FuzzerUtils.out.println("d2 i17 i18 = " + Double.doubleToLongBits(d2) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0764.instanceCount Test0764.fFld Test0764.iFld = " + Test0764.instanceCount + "," +
                Float.floatToIntBits(Test0764.fFld) + "," + Test0764.iFld);
        FuzzerUtils.out.println("Test0764.bFld Test0764.sFld dFld = " + (Test0764.bFld ? 1 : 0) + "," + Test0764.sFld + "," +
                Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test0764.dArrFld Test0764.iArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0764.dArrFld)) + "," + FuzzerUtils.checkSum(Test0764.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
