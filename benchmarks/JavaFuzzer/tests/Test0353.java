// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0353 {

    public static final int N = 400;

    public static long instanceCount = 28289L;
    public static int iFld = -63507;
    public static int iFld1 = -12;
    public static boolean bFld = false;
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0353.lArrFld, 12L);
    }

    public byte byFld = -64;
    public int iFld2 = 7;
    public double dFld = 118.83075;
    public int[][] iArrFld = new int[N][N];

    public static void vMeth1(byte by, int i7, int i8) {

        int i9 = -145;
        int i10 = -6;
        int i11 = 51;
        int i12 = 5;
        int i13 = -29773;
        int i14 = -170;
        int[] iArr1 = new int[N];
        double d = 44.68991;
        boolean b1 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, -749);
        FuzzerUtils.init(lArr, 52573L);

        Test0353.instanceCount = i7;
        for (i9 = 14; i9 < 303; ++i9) {
            Test0353.iFld >>= i8;
            try {
                iArr1[i9] = (i8 % 21706);
                iArr1[i9] = (40953 % Test0353.iFld1);
                i10 = (-163 / Test0353.iFld1);
            } catch (ArithmeticException a_e) {
            }
            i7 = (int) Test0353.instanceCount;
        }
        Test0353.iFld1 &= (int) Test0353.instanceCount;
        i11 = 1;
        while (++i11 < 241) {
            switch (((i11 % 8) * 5) + 108) {
                case 111:
                    i12 = 1;
                    do {
                        Test0353.iFld1 = by;
                        Test0353.instanceCount += (-67L + (i12 * i12));
                        Test0353.iFld = -50601;
                        for (i13 = 1; i13 < 1; ++i13) {
                            iArr1 = iArr1;
                        }
                        i7 = i10;
                    } while (++i12 < 7);
                    break;
                case 115:
                    Test0353.iFld1 = 85;
                    break;
                case 143:
                    lArr[i11 + 1] -= i7;
                case 131:
                    iArr1[i11 - 1] -= Test0353.iFld;
                    break;
                case 125:
                    lArr[i11] = i8;
                case 140:
                    i7 <<= (int) 182L;
                    break;
                case 112:
                    d = d;
                    break;
                case 146:
                    if (b1) break;
                    break;
            }
        }
        vMeth1_check_sum += by + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d) + (b1 ? 1 : 0)
                + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i5, boolean b, int i6) {

        byte by1 = 37;

        vMeth1(by1, i5, Test0353.iFld);
        i6 *= -13;
        long meth_res = i5 + (b ? 1 : 0) + i6 + by1;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0353 _instance = new Test0353();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(long l, long l1, int i2) {

        int i3 = 23, i4 = 254, i15 = 79, i16 = 3;
        short s = -24964;
        double d1 = -102.112292;
        float f = 40.136F;

        for (i3 = 150; i3 > 7; i3 -= 2) {
            iMeth(i2, Test0353.bFld, Test0353.iFld1);
            s += (short) i3;
            for (i15 = 1; i15 < 22; i15++) {
                i2 = Test0353.iFld1;
                Test0353.iFld -= (int) d1;
                Test0353.iFld += (-12 + (i15 * i15));
            }
            i4 &= s;
            switch ((i3 % 10) + 83) {
                case 83:
                    Test0353.iFld += (int) Test0353.instanceCount;
                    break;
                case 84:
                    i2 = Test0353.iFld1;
                    i2 += i16;
                    i4 *= byFld;
                    if (i15 != 0) {
                        vMeth_check_sum += l + l1 + i2 + i3 + i4 + s + i15 + i16 + Double.doubleToLongBits(d1) +
                                Float.floatToIntBits(f);
                        return;
                    }
                    break;
                case 85:
                    Test0353.iFld += byFld;
                    break;
                case 86:
                    l1 -= l;
                case 87:
                    l1 -= i15;
                case 88:
                case 89:
                    Test0353.iFld1 += i15;
                    break;
                case 90:
                    f -= i3;
                    break;
                case 91:
                    Test0353.iFld1 >>>= i4;
                    break;
                case 92:
                    Test0353.iFld1 = 5;
                default:
                    i16 += i3;
            }
        }
        vMeth_check_sum += l + l1 + i2 + i3 + i4 + s + i15 + i16 + Double.doubleToLongBits(d1) +
                Float.floatToIntBits(f);
    }

    public void mainTest(String[] strArr1) {

        int i = -112;
        int i1 = -165;
        int i17 = 6214;
        int i18 = -188;
        int i19 = 3;
        int i20 = -70;
        int i21 = -95;
        int i22 = 231;
        int i23 = -1;
        int i24 = 8;
        int[] iArr = new int[N];
        float f1 = 0.279F, f2 = -8.452F;
        long l2 = 5812983174861315832L;

        FuzzerUtils.init(iArr, -9477);

        i = 1;
        do {
            try {
                Test0353.iFld = (i / iArr[(i >>> 1) % N]);
                Test0353.iFld = (-74 % Test0353.iFld);
                Test0353.iFld1 = (i / -31540);
            } catch (ArithmeticException a_e) {
            }
            i1 = 130;
            while (--i1 > 0) {
                vMeth(Test0353.instanceCount, 11L, i);
                f1 = Test0353.iFld;
                for (l2 = 1; l2 < 1; ++l2) {
                    Test0353.iFld1 <<= (int) l2;
                    Test0353.iFld >>= Test0353.iFld1;
                    Test0353.instanceCount = iFld2;
                }
                Test0353.iFld -= Test0353.iFld;
                Test0353.instanceCount -= l2;
                f1 = byFld;
                for (i18 = 1; i18 < 1; i18++) {
                    i19 *= i19;
                    iArrFld = iArrFld;
                    Test0353.instanceCount = i;
                }
                Test0353.lArrFld = Test0353.lArrFld;
            }
            for (f2 = 3; f2 < 130; f2++) {
                f1 = i19;
                f1 *= i;
                iArr[i] |= -43;
                iFld2 += (int) f2;
                for (i21 = 1; i21 < 2; i21++) {
                    iArr[i + 1] = (int) dFld;
                }
                for (i23 = 1; i23 < 2; i23++) {
                    iArrFld[i23] = iArrFld[i + 1];
                    i22 += (i23 * i23);
                    Test0353.lArrFld[i] = Test0353.instanceCount;
                    if (Test0353.bFld) break;
                }
                Test0353.lArrFld = Test0353.lArrFld;
            }
        } while (++i < 193);

        FuzzerUtils.out.println("i i1 f1 = " + i + "," + i1 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("l2 i17 i18 = " + l2 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 f2 i20 = " + i19 + "," + Float.floatToIntBits(f2) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 iArr = " + i24 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test0353.instanceCount Test0353.iFld Test0353.iFld1 = " + Test0353.instanceCount + "," + Test0353.iFld +
                "," + Test0353.iFld1);
        FuzzerUtils.out.println("Test0353.bFld byFld iFld2 = " + (Test0353.bFld ? 1 : 0) + "," + byFld + "," + iFld2);
        FuzzerUtils.out.println("dFld iArrFld Test0353.lArrFld = " + Double.doubleToLongBits(dFld) + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test0353.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
