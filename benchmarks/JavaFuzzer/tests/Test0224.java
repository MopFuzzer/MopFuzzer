// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0224 {

    public static final int N = 400;

    public static long instanceCount = -8L;
    public static float fFld = -2.773F;
    public static volatile long[][] lArrFld = new long[N][N];
    public static int[][] iArrFld1 = new int[N][N];
    public static float[] fArrFld1 = new float[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0224.lArrFld, -5646374591172523820L);
        FuzzerUtils.init(Test0224.iArrFld1, -146);
        FuzzerUtils.init(Test0224.fArrFld1, -21.461F);
    }

    public byte byFld = -115;
    public float[] fArrFld = new float[N];
    public int[] iArrFld = new int[N];
    public volatile short[] sArrFld = new short[N];

    public static short sMeth(long l1, int i10, long l2) {

        int i11 = 12, i12 = -144, i13 = 15326, i14 = -221, i15 = 11952, i16 = 243;
        double d = -41.99775;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 14L);

        i11 = 228;
        do {
            Test0224.lArrFld = FuzzerUtils.long2array(N, (long) -102L);
            i10 += (int) d;
            i10 = i11;
            for (i12 = i11; i12 < 7; i12++) {
                Test0224.iArrFld1[i12][i12 - 1] |= i10;
                for (i14 = 1; i14 < 1; ++i14) {
                    i15 += i11;
                    Test0224.fArrFld1[i12 + 1] -= -43933;
                }
                l1 = i15;
                Test0224.fArrFld1[i12] += l2;
            }
            Test0224.instanceCount >>= i10;
            if (false) {
                if (i12 != 0) {
                }
                Test0224.instanceCount = i16;
            } else {
                l1 += (i11 * i12);
            }
        } while (--i11 > 0);
        long meth_res = l1 + i10 + l2 + i11 + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 +
                FuzzerUtils.checkSum(lArr);
        sMeth_check_sum += meth_res;
        return (short) meth_res;
    }

    public static void vMeth1(int i9) {

        int i17 = -8;
        int i18 = 63343;
        int i19 = -57636;
        int i20 = 13;
        int[] iArr = new int[N];
        byte by = 0;
        double d1 = 0.34521, d2 = -60.117526;
        boolean b = false;

        FuzzerUtils.init(iArr, 11);

        Test0224.instanceCount ^= i9;
        iArr[(i9 >>> 1) % N] = sMeth(Test0224.instanceCount, i9, Test0224.instanceCount);
        for (i17 = 11; 212 > i17; ++i17) {
            switch (((i9 >>> 1) % 3) + 117) {
                case 117:
                    by += (byte) (i17 * i17);
                    break;
                case 118:
                    iArr[i17] = i17;
                    Test0224.iArrFld1[i17 + 1][i17 + 1] += (int) Test0224.fFld;
                    break;
                case 119:
                    by += (byte) (i17 * i17);
                    d1 -= i17;
                    break;
            }
        }
        Test0224.instanceCount = Test0224.instanceCount;
        i18 = i18;
        for (d2 = 229; d2 > 9; --d2) {
            i20 = 1;
            while ((i20 += 3) < 7) {
                i9 += i20;
                if (b) continue;
            }
        }
        vMeth1_check_sum += i9 + i17 + i18 + by + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i19 + i20
                + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i7) {

        int i8 = -5;
        byte by1 = 78;
        short s1 = -23525;
        float f3 = 2.1F;

        i8 = 1;
        do {
            Test0224.fFld += (i8 + Test0224.instanceCount);
            i7 *= i8;
            Test0224.fFld += (((i8 * i7) + Test0224.fFld) - i8);
            vMeth1(i8);
            Test0224.fArrFld1[i8] += -11;
            by1 += (byte) -57.74656;
            switch (((i8 % 7) * 5) + 24) {
                case 57:
                    i7 += (i8 | i8);
                    Test0224.instanceCount = i7;
                    try {
                        i7 = (i8 % -18226);
                        i7 = (-1143407349 % i7);
                        i7 = (-13157 % i7);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 53:
                    Test0224.instanceCount += i8;
                    Test0224.instanceCount >>>= Test0224.instanceCount;
                    Test0224.instanceCount &= i8;
                    s1 *= (short) i7;
                case 35:
                    i7 += i8;
                    break;
                case 28:
                    Test0224.instanceCount -= i8;
                case 44:
                    s1 += (short) (((i8 * f3) + i8) - i7);
                case 59:
                    i7 -= -39;
                    break;
                case 43:
                    i7 += (((i8 * Test0224.instanceCount) + Test0224.instanceCount) - i7);
                    break;
            }
        } while (++i8 < 331);
        vMeth_check_sum += i7 + i8 + by1 + s1 + Float.floatToIntBits(f3);
    }

    public static void main(String[] strArr) {

        try {
            Test0224 _instance = new Test0224();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 11, i1 = -168, i2 = 46802, i3 = -7, i4 = 42854, i5 = 2, i6 = 9, i21 = 252, i22 = -117, i23 = -47745, i24 = 40, i25 = 54456,
                i26 = -13;
        float f = 0.120F;
        long l = 4838L;
        short s = 17427;

        i = 138;
        while (--i > 0) {
            i1 += (i + f);
        }
        for (l = 277; l > 1; l--) {
            fArrFld[(int) (l - 1)] = i2;
        }
        for (float f1 : fArrFld) {
            i1 *= (++i2);
            Test0224.instanceCount -= (Test0224.instanceCount--);
            Test0224.instanceCount -= (Test0224.instanceCount++);
            i1 >>= (int) (((8585130859360249946L * i3) - i) * (iArrFld[(i >>> 1) % N]--));
            f1 = (i1 % (i4 | 1));
        }
        i2 = (++s);
        for (i5 = 385; i5 > 10; i5--) {
            vMeth(i5);
            for (i21 = 3; i21 < 67; i21++) {
                for (i23 = 2; i23 > 1; i23 -= 2) {
                    i2 -= i1;
                    i6 -= i2;
                    Test0224.instanceCount = i21;
                    Test0224.lArrFld[i5][i5 - 1] <<= byFld;
                    i4 = s;
                }
                iArrFld[i21 + 1] *= (int) 6272667361230441825L;
                Test0224.instanceCount = -11;
                i3 += i22;
                i22 = i23;
            }
            for (i25 = 2; i25 < 67; i25++) {
                i22 >>= i1;
                sArrFld[i5 + 1] *= (short) l;
                iArrFld[i25 - 1] += i1;
            }
            i6 *= (int) Test0224.fFld;
            f += 6831;
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("l i2 i3 = " + l + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i4 s i5 = " + i4 + "," + s + "," + i5);
        FuzzerUtils.out.println("i6 i21 i22 = " + i6 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 = " + i26);

        FuzzerUtils.out.println("Test0224.instanceCount Test0224.fFld byFld = " + Test0224.instanceCount + "," +
                Float.floatToIntBits(Test0224.fFld) + "," + byFld);
        FuzzerUtils.out.println("fArrFld iArrFld Test0224.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0224.lArrFld));
        FuzzerUtils.out.println("Test0224.iArrFld1 Test0224.fArrFld1 sArrFld = " + FuzzerUtils.checkSum(Test0224.iArrFld1) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0224.fArrFld1)) + "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
