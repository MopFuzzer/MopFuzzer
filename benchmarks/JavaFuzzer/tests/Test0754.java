// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0754 {

    public static final int N = 400;

    public static long instanceCount = -13807L;
    public static boolean bFld = true;
    public static int iFld = 28264;
    public static volatile double dFld = 2.84536;
    public static byte[] byArrFld = new byte[N];
    public static float[] fArrFld = new float[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0754.byArrFld, (byte) 51);
        FuzzerUtils.init(Test0754.fArrFld, 0.310F);
    }

    public float fFld = 0.554F;

    public static void vMeth2(long l, long l1, int i1) {

        int i2 = 11;
        int i3 = -39881;
        int[] iArr = new int[N];
        float f = 0.680F;
        short s = -8663;
        byte by = 86;
        long l2 = 637548598L;

        FuzzerUtils.init(iArr, -239);

        switch (((i1 >>> 1) % 10) + 76) {
            case 76:
            case 77:
                for (i2 = 10; 277 > i2; i2++) {
                    i1 = i1;
                    i3 += (int) f;
                    if (false) break;
                    i3 += (((i2 * i2) + i1) - s);
                    iArr[i2 - 1] -= by;
                    f += i2;
                    s /= (short) -99.37349;
                    if (Test0754.bFld) {
                        by = (byte) l1;
                        i1 = by;
                    } else if (Test0754.bFld) {
                        i3 = i3;
                        i1 = i2;
                        l1 += (((i2 * l1) + s) - f);
                        vMeth2_check_sum += l + l1 + i1 + i2 + i3 + Float.floatToIntBits(f) + s + by + l2 +
                                FuzzerUtils.checkSum(iArr);
                        return;
                    } else {
                        i3 += (int) (-30987L + (i2 * i2));
                    }
                }
                break;
            case 78:
                iArr[(i1 >>> 1) % N] -= i1;
            case 79:
                iArr[(i3 >>> 1) % N] *= 5;
                break;
            case 80:
                Test0754.instanceCount <<= i3;
                break;
            case 81:
                i1 = -62032;
                break;
            case 82:
                i1 += (int) l;
                break;
            case 83:
                Test0754.instanceCount = i1;
                break;
            case 84:
                Test0754.byArrFld[(9 >>> 1) % N] *= (byte) i2;
                break;
            case 85:
            default:
                l2 = i1;
        }
        vMeth2_check_sum += l + l1 + i1 + i2 + i3 + Float.floatToIntBits(f) + s + by + l2 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i) {

        int i4 = 8653, i5 = -26470, i6 = 23017;
        float f1 = 0.37F;
        byte by1 = -121;
        short s1 = -2913;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -5032053380650779309L);

        i += (int) lArr[(i >>> 1) % N];
        vMeth2(Test0754.instanceCount, -33208L, i);
        i4 = 1;
        while (++i4 < 274) {
            i = (int) f1;
            i += -13;
        }
        if (true) {
            lArr[(i >>> 1) % N] = i4;
            vMeth1_check_sum += i + i4 + Float.floatToIntBits(f1) + i5 + i6 + by1 + s1 + FuzzerUtils.checkSum(lArr);
            return;
        } else if (false) {
            for (i5 = 7; i5 < 259; ++i5) {
                Test0754.instanceCount = i6;
                by1 += (byte) i5;
                f1 *= Test0754.iFld;
                i -= i;
                s1 -= (short) Test0754.iFld;
                lArr = lArr;
                i -= 10;
            }
        } else if (Test0754.bFld) {
            i -= (int) f1;
        }
        vMeth1_check_sum += i + i4 + Float.floatToIntBits(f1) + i5 + i6 + by1 + s1 + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0754 _instance = new Test0754();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        int i7 = 253;
        int i8 = -50415;
        int i9 = 29;
        int i10 = 49816;
        int i11 = -2;
        int i12 = 24376;
        int i13 = 250;
        int[] iArr1 = new int[N];
        short s2 = 1762;
        float f2 = 0.679F;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(iArr1, 12368);
        FuzzerUtils.init(lArr1, -44927L);

        vMeth1(-93);
        for (i7 = 23; i7 < 382; i7++) {
            if (Test0754.bFld) {
                switch (((Test0754.iFld >>> 1) % 7) + 88) {
                    case 88:
                        s2 += (short) (i7 * i7);
                        for (i9 = 1; i9 < 5; ++i9) {
                            iArr1[i9] = i9;
                            Test0754.iFld = i11;
                            for (i12 = i9; 2 > i12; i12++) {
                                Test0754.iFld = i9;
                                Test0754.iFld += (-57 + (i12 * i12));
                            }
                            Test0754.iFld *= (int) Test0754.instanceCount;
                            if (Test0754.bFld) continue;
                        }
                        i11 += (i7 * Test0754.iFld);
                        lArr1[i7 - 1] -= (long) Test0754.dFld;
                        break;
                    case 89:
                        Test0754.instanceCount >>>= i11;
                    case 90:
                        Test0754.instanceCount = s2;
                    case 91:
                        i10 |= i7;
                        break;
                    case 92:
                    case 93:
                        lArr1[i7 - 1] -= Test0754.instanceCount;
                        break;
                    case 94:
                        f2 *= Test0754.instanceCount;
                        break;
                    default:
                        Test0754.fArrFld[i7 + 1] -= 51;
                }
            } else if (Test0754.bFld) {
                i13 = i13;
                vMeth_check_sum += i7 + i8 + s2 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) +
                        FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
                return;
            } else {
                Test0754.iFld = (int) Test0754.instanceCount;
            }
        }
        vMeth_check_sum += i7 + i8 + s2 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i14 = -166;
        int i15 = -3975;
        int i16 = 172;
        int i17 = 8;
        int i18 = -7;
        int i19 = 52036;
        int[] iArr2 = new int[N];
        short s3 = -11306;
        short[] sArr = new short[N];
        double d = 1.18409;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr2, -13);
        FuzzerUtils.init(dArr, 56.41040);
        FuzzerUtils.init(sArr, (short) 3864);

        try {
            vMeth();
            for (i14 = 5; i14 < 122; ++i14) {
                s3 = (short) i15;
                i15 += (((i14 * i15) + i15) - i15);
                fFld = i14;
                Test0754.instanceCount += (i14 | Test0754.instanceCount);
                for (d = 11; 214 > d; ++d) {
                    try {
                        i17 = (-51171 / Test0754.iFld);
                        i15 = (iArr2[i14 - 1] / 135);
                        i16 = (i17 % -118);
                    } catch (ArithmeticException a_e) {
                    }
                    dArr[(int) (d - 1)] -= fFld;
                    i15 += (int) (d - i14);
                    i17 = (int) Test0754.instanceCount;
                    fFld -= 121;
                    Test0754.dFld *= i17;
                    Test0754.iFld = (int) Test0754.instanceCount;
                    iArr2[i14] >>= i16;
                    if (Test0754.bFld) {
                        i15 <<= 8;
                        dArr[i14 + 1] -= Test0754.instanceCount;
                    } else {
                        Test0754.iFld = i15;
                        switch (((i14 % 6) * 5) + 60) {
                            case 87:
                                iArr2[i14 + 1] *= 5;
                                Test0754.instanceCount += (48 + (d * d));
                                Test0754.iFld >>= Test0754.iFld;
                                for (i18 = i14; i18 < 2; ++i18) {
                                    fFld = Test0754.iFld;
                                    Test0754.instanceCount += (((i18 * Test0754.instanceCount) + i14) - i14);
                                    Test0754.instanceCount += (i18 * Test0754.instanceCount);
                                    i16 += (i18 * i18);
                                    i19 -= i18;
                                }
                            case 74:
                                i17 += (int) (((d * i17) + i17) - i16);
                            case 80:
                                sArr[i14] >>>= (short) i18;
                                break;
                            case 64:
                                iArr2[i14 + 1] -= (int) Test0754.instanceCount;
                            case 70:
                                Test0754.instanceCount = 24564L;
                                break;
                            case 79:
                                i15 -= i15;
                                break;
                        }
                    }
                }
            }
        } catch (NullPointerException exc1) {
            i15 = (int) 3596684894L;
        }

        FuzzerUtils.out.println("i14 i15 s3 = " + i14 + "," + i15 + "," + s3);
        FuzzerUtils.out.println("d i16 i17 = " + Double.doubleToLongBits(d) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 iArr2 = " + i18 + "," + i19 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("dArr sArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
                FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0754.instanceCount Test0754.bFld Test0754.iFld = " + Test0754.instanceCount + "," + (Test0754.bFld ? 1
                : 0) + "," + Test0754.iFld);
        FuzzerUtils.out.println("Test0754.dFld fFld Test0754.byArrFld = " + Double.doubleToLongBits(Test0754.dFld) + "," +
                Float.floatToIntBits(fFld) + "," + FuzzerUtils.checkSum(Test0754.byArrFld));
        FuzzerUtils.out.println("Test0754.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0754.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
