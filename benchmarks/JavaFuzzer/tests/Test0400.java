// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test0400 {

    public static final int N = 400;

    public static long instanceCount = 6124129003912423823L;
    public static short sFld = 31146;
    public static boolean bFld = true;
    public static float fFld = -2.829F;
    public static double dFld = -95.98194;
    public static float[] fArrFld = new float[N];
    public static volatile long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0400.fArrFld, 28.606F);
        FuzzerUtils.init(Test0400.lArrFld, 20L);
    }

    public short sFld1 = -20500;
    public int[] iArrFld = new int[N];

    public static void vMeth2() {

        int i8 = 54022;
        int i9 = -58483;
        int i10 = -224;
        int i11 = 240;
        int i12 = -130;
        int[] iArr = new int[N];
        byte by = 83;
        boolean b = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -35543L);
        FuzzerUtils.init(iArr, 207);

        for (i8 = 19; i8 < 329; ++i8) {
            Test0400.instanceCount += (i8 * i8);
            lArr[i8] >>= 253L;
            i9 += (((i8 * Test0400.instanceCount) + i9) - i8);
            for (i10 = 1; 5 > i10; i10++) {
                i12 = 1;
                while (++i12 < 2) {
                    by *= (byte) i12;
                    i9 |= Test0400.sFld;
                    if (i9 != 0) {
                        vMeth2_check_sum += i8 + i9 + i10 + i11 + i12 + by + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    Test0400.fArrFld = Test0400.fArrFld;
                    if (b) {
                        iArr[i8 + 1] = (int) Test0400.instanceCount;
                    }
                    i9 *= i10;
                }
                i11 += i10;
                i11 += (i10 - i8);
            }
        }
        vMeth2_check_sum += i8 + i9 + i10 + i11 + i12 + by + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, double d, int i3) {

        int i4 = 111, i5 = 62758, i6 = 8, i7 = 13, i13 = -8, i14 = 32;
        long[] lArr1 = new long[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(lArr1, 4008451327996320305L);
        FuzzerUtils.init(byArr, (byte) 46);

        for (i4 = 1; i4 < 388; i4++) {
            for (i6 = 1; i6 < 4; ++i6) {
                long l = 3408113158558599350L;
                Test0400.instanceCount |= Test0400.instanceCount;
                vMeth2();
                i7 += Test0400.sFld;
                switch (((i6 % 5) * 5) + 108) {
                    case 120:
                        for (i13 = 1; i13 < 2; i13 += 3) {
                            lArr1[i6] = 105;
                            if (Test0400.bFld) continue;
                            Test0400.fFld += (i13 + i6);
                            if (true) break;
                            i2 = i6;
                            if (Test0400.bFld) {
                                if (i13 != 0) {
                                    vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i13 +
                                            i14 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr);
                                    return;
                                }
                                i3 += i13;
                                vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i13 + i14 +
                                        FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr);
                                return;
                            } else {
                                byArr[i13] >>= (byte) i5;
                            }
                        }
                    case 113:
                    case 118:
                        if (i2 != 0) {
                            vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i13 + i14 +
                                    FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr);
                            return;
                        }
                        break;
                    case 131:
                        i14 += (int) d;
                        break;
                    case 130:
                    default:
                        i7 *= (int) l;
                }
            }
        }
        vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i13 + i14 +
                FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0400 _instance = new Test0400();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(int i) {

        int i1 = -6, i15 = 24302, i16 = 5, i17 = -9;
        byte by1 = -8;

        i -= (int) ((-38639L - (Test0400.instanceCount * Test0400.instanceCount)) >> i);
        i1 = 1;
        do {
            double d1 = -17.65937;
            vMeth1(i, d1, i);
            Test0400.instanceCount += (-4 + (i1 * i1));
            i += (-55 + (i1 * i1));
            for (i15 = 1; i15 < 10; i15++) {
                i += (0 + (i15 * i15));
                try {
                    i16 = (1512994296 % i16);
                    i = (-129 % i);
                    i = (i16 / iArrFld[i15]);
                } catch (ArithmeticException a_e) {
                }
                i >>>= 0;
                Test0400.lArrFld[i15 + 1] -= i;
                Test0400.instanceCount = 8846;
                i16 += (i15 * by1);
                i17 = 1;
                while (++i17 < 2) {
                    i += (((i17 * i15) + by1) - Test0400.instanceCount);
                    i16 = i1;
                }
            }
        } while (++i1 < 153);
        vMeth_check_sum += i + i1 + i15 + i16 + by1 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i18 = -10, i19 = -8, i20 = -5, i21 = 51684, i22 = -252, i23 = 24828, i24 = -110, i25 = 13554;
        byte by2 = 117;
        long l1 = -3772541424L;

        vMeth(i18);
        i18 = (int) Test0400.dFld;
        i18 = (int) Test0400.instanceCount;
        i18 -= -228;
        i18 *= i18;
        i18 >>= -58146;
        for (i19 = 14; i19 < 296; ++i19) {
            for (i21 = 4; i21 < 89; ++i21) {
                if (true) break;
                i18 += (i21 - by2);
                Test0400.instanceCount += (((i21 * i22) + i18) - i21);
                for (i23 = 1; i23 < 2; i23++) {
                    i22 += i19;
                    switch (((i23 >>> 1) % 2) + 13) {
                        case 13:
                            sFld1 |= (short) i23;
                            iArrFld[i19 + 1] -= (int) 1.491F;
                            Test0400.instanceCount = Test0400.instanceCount;
                            break;
                        case 14:
                            if (Test0400.bFld) break;
                            break;
                    }
                    i20 ^= i18;
                    i22 += (i23 | i24);
                    i20 -= (int) Test0400.instanceCount;
                    Test0400.fFld = i19;
                }
                i22 = i23;
                Test0400.dFld = i21;
            }
            i24 += (i19 ^ (long) Test0400.fFld);
            for (l1 = 3; l1 < 89; l1++) {
                Test0400.fFld += l1;
                Test0400.sFld *= (short) i22;
                iArrFld[i19 + 1] >>= i21;
            }
        }
        Test0400.bFld = Test0400.bFld;

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 by2 = " + i21 + "," + i22 + "," + by2);
        FuzzerUtils.out.println("i23 i24 l1 = " + i23 + "," + i24 + "," + l1);
        FuzzerUtils.out.println("i25 = " + i25);

        FuzzerUtils.out.println("Test0400.instanceCount Test0400.sFld Test0400.bFld = " + Test0400.instanceCount + "," + Test0400.sFld +
                "," + (Test0400.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0400.fFld Test0400.dFld sFld1 = " + Float.floatToIntBits(Test0400.fFld) + "," +
                Double.doubleToLongBits(Test0400.dFld) + "," + sFld1);
        FuzzerUtils.out.println("Test0400.fArrFld iArrFld Test0400.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0400.fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld) + "," +
                FuzzerUtils.checkSum(Test0400.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
