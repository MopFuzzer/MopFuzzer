// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test0560 {

    public static final int N = 400;

    public static long instanceCount = -1L;
    public static boolean bFld = false;
    public static long lFld = 6610530580033189147L;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, long l1) {

        int i3 = -56;
        int i4 = 7;
        int i5 = 14;
        int i6 = -53;
        int i7 = 2;
        int i8 = 3;
        int i9 = -11208;
        int i10 = 9;
        int[] iArr = new int[N];
        byte by = -38;
        float f1 = 0.58F;
        float[] fArr = new float[N];
        double d2 = 1.77772;

        FuzzerUtils.init(fArr, 1.187F);
        FuzzerUtils.init(iArr, -230);

        for (i3 = 11; i3 < 228; i3++) {
            double d1 = 75.2949;
            d1 -= i3;
            fArr[i3 - 1] -= by;
            for (i5 = i3; i5 < 7; ++i5) {
                i6 = i4;
                for (f1 = 1; f1 < 1; f1++) {
                    by += (byte) i7;
                    if (Test0560.bFld) break;
                }
            }
            for (i8 = 1; 7 > i8; i8++) {
                i6 >>= 10;
                for (d2 = 1; d2 < 2; ++d2) {
                    d1 += l1;
                    Test0560.lFld = 8184;
                    i10 += (int) d2;
                    iArr[i8 - 1] = (int) Test0560.instanceCount;
                }
            }
        }
        vMeth2_check_sum += l + l1 + i3 + i4 + by + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 +
                Double.doubleToLongBits(d2) + i10 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i2 = 3;
        float f = 0.402F;

        i2 -= (int) (++f);
        vMeth2(Test0560.lFld, Test0560.lFld);
        vMeth1_check_sum += i2 + Float.floatToIntBits(f);
    }

    public static void vMeth(int i1) {

        double d3 = -117.36737;
        float f2 = -19.461F;
        byte by1 = -40;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, 225);

        vMeth1();
        Test0560.lFld = (long) d3;
        Test0560.instanceCount = Test0560.instanceCount;
        d3 -= f2;
        i1 >>= -62;
        Test0560.lFld <<= Test0560.lFld;
        f2 -= f2;
        i1 -= i1;
        Test0560.lFld = (long) f2;
        i1 = (int) Test0560.lFld;
        by1 <<= (byte) i1;
        iArr1[(i1 >>> 1) % N] -= 45;
        vMeth_check_sum += i1 + Double.doubleToLongBits(d3) + Float.floatToIntBits(f2) + by1 +
                FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0560 _instance = new Test0560();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        boolean b = false;
        double d = -1.3846;
        int i = -8;
        int i11 = -17488;
        int i12 = 7019;
        int i13 = -51407;
        int i14 = -24713;
        int i15 = 5;
        int i16 = 4;
        int i17 = -117;
        int i18 = 8;
        int i19 = -233;
        int[] iArr2 = new
                int[N];
        short s = 23533;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) 50);
        FuzzerUtils.init(iArr2, -14);

        b = b;
        byArr = FuzzerUtils.byte1array(N, (byte) -69);
        d *= (i++);
        vMeth(17415);
        for (i11 = 6; i11 < 131; ++i11) {
            iArr2[i11] = i;
        }
        i += i;
        for (i13 = 228; i13 > 8; i13--) {
            iArr2[i13 - 1] -= i13;
            i15 = 1;
            do {
                if (false) break;
                Test0560.lFld += (i15 - i12);
                if (false) break;
                for (i16 = 1; i16 > 1; i16 -= 3) {
                    iArr2[i13] <<= i17;
                    b = false;
                    i14 = i16;
                    i12 = (int) d;
                }
                for (i18 = 1; i18 < 1; i18++) {
                    Test0560.instanceCount += (i18 * i18);
                    switch (((-202 >>> 1) % 2) + 123) {
                        case 123:
                            s |= (short) i16;
                            Test0560.lFld = 229;
                            Test0560.bFld = Test0560.bFld;
                            b = false;
                            break;
                        case 124:
                            if (Test0560.bFld) break;
                            i14 = (int) -6504380749932602065L;
                            break;
                        default:
                            i17 += i;
                            i = i18;
                            i = (int) Test0560.instanceCount;
                    }
                }
            } while (++i15 < 114);
        }

        FuzzerUtils.out.println("b d i = " + (b ? 1 : 0) + "," + Double.doubleToLongBits(d) + "," + i);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("s byArr iArr2 = " + s + "," + FuzzerUtils.checkSum(byArr) + "," +
                FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0560.instanceCount Test0560.bFld Test0560.lFld = " + Test0560.instanceCount + "," + (Test0560.bFld ? 1
                : 0) + "," + Test0560.lFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
