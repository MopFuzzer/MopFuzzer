// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0241 {

    public static final int N = 400;

    public static long instanceCount = 20596L;
    public static short sFld = 11923;
    public static volatile int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static volatile long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0241.iArrFld, 130);
        FuzzerUtils.init(Test0241.dArrFld, -2.6609);
        FuzzerUtils.init(Test0241.lArrFld, 3L);
    }

    public float fFld = 1.922F;
    public boolean bFld = true;

    public static long lMeth1(int i4) {

        int i5 = -4, i6 = -22, i7 = -22812, i8 = 97, i9 = 60, i10 = 31100;
        float f2 = -12.1013F;
        boolean b = false;

        Test0241.iArrFld[(i4 >>> 1) % N] = i4;
        i4 *= i4;
        for (i5 = 221; i5 > 10; i5--) {
            for (i7 = 1; i7 < 8; ++i7) {
                short s = -2203;
                Test0241.dArrFld[i7] = s;
            }
            for (i9 = i5; 8 > i9; i9++) {
                i10 = i5;
                switch (((i5 >>> 1) % 2) + 1) {
                    case 1:
                        switch (((i5 % 7) * 5) + 25) {
                            case 54:
                                i6 = -30780;
                                Test0241.iArrFld[i5] += i4;
                                f2 = -26267;
                                break;
                            case 31:
                                f2 = i7;
                                Test0241.instanceCount ^= -6;
                                Test0241.sFld = (short) i7;
                                break;
                            case 47:
                                if (i9 != 0) {
                                }
                            case 50:
                                f2 += (i9 * i8);
                                break;
                            case 43:
                                Test0241.sFld *= (short) i8;
                                break;
                            case 30:
                                if (b) continue;
                                break;
                            case 33:
                                Test0241.instanceCount >>= i6;
                                break;
                        }
                        break;
                    case 2:
                    default:
                        i10 = i6;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f2) + (b ? 1 : 0);
        lMeth1_check_sum += meth_res;
        return (long) meth_res;
    }

    public static long lMeth(long l) {

        int i3 = 157;
        int i11 = -244;
        int i12 = -56403;
        int i13 = -24;
        int[] iArr = new int[N];
        float f1 = 5.240F;
        float[] fArr = new float[N];
        double d = 1.105260;
        byte by = 114;

        FuzzerUtils.init(iArr, 6);
        FuzzerUtils.init(fArr, 114.405F);

        iArr[(-217 >>> 1) % N] = (iArr[(i3 >>> 1) % N] - (i3++));
        f1 += lMeth1(i3);
        f1 -= l;
        for (i11 = 8; i11 < 148; ++i11) {
            i3 = Test0241.sFld;
            d = 64996;
            fArr[i11 + 1] = i12;
            i3 += i11;
            i13 = 1;
            do {
                Test0241.iArrFld[i11] = i12;
                i12 *= (int) Test0241.instanceCount;
                i3 = i3;
                by += (byte) (i13 * i13);
                i3 >>>= i12;
                i3 -= (int) Test0241.instanceCount;
            } while (++i13 < 11);
        }
        long meth_res = l + i3 + Float.floatToIntBits(f1) + i11 + i12 + Double.doubleToLongBits(d) + i13 + by +
                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i1, int i2, float f) {

        int i14 = 134, i15 = 130, i16 = -218, i17 = 36;
        byte by1 = -107;
        byte[][] byArr = new byte[N][N];
        double d2 = 1.98767;

        FuzzerUtils.init(byArr, (byte) 53);

        try {
            Test0241.sFld = (short) lMeth(Test0241.instanceCount);
            for (i14 = 7; i14 < 383; i14++) {
                Test0241.instanceCount += (((i14 * Test0241.instanceCount) + i1) - by1);
                for (i16 = 1; i16 < 4; ++i16) {
                    long l1 = 3414628032L;
                    Test0241.iArrFld[i16 - 1] *= (int) d2;
                    i1 = (int) f;
                    Test0241.instanceCount = (long) f;
                    Test0241.lArrFld[i14] |= by1;
                    Test0241.dArrFld[i14 + 1] /= (l1 | 1);
                    i1 += (int) Test0241.instanceCount;
                    i17 = (int) Test0241.instanceCount;
                    byArr = byArr;
                }
                i17 += (((i14 * i1) + i2) - Test0241.instanceCount);
                f += Test0241.instanceCount;
            }
        } catch (NullPointerException exc1) {
            i1 += by1;
        }
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f) + i14 + i15 + by1 + i16 + i17 +
                Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0241 _instance = new Test0241();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 3, i18 = -1, i19 = -52809, i20 = -92, i21 = -63068, i22 = -183, i23 = 46511, i24 = -3, i25 = -236, i26 = 4, i27 = -3164,
                i28 = -8;
        double d3 = -2.90701;
        byte by2 = 78;
        boolean[] bArr = new boolean[N];
        float[] fArr1 = new float[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr1, -1.711F);

        fFld = (i + i);
        vMeth(i, i, fFld);
        for (i18 = 2; i18 < 168; i18++) {
            for (i20 = 3; i20 < 151; i20++) {
                Test0241.iArrFld[i18 + 1] |= -114;
            }
            Test0241.instanceCount += Test0241.instanceCount;
            for (i22 = 8; i22 < 151; i22++) {
                i21 += i22;
                for (i24 = i18; 2 > i24; ++i24) {
                    d3 *= i22;
                    switch ((((i18 >>> 1) % 3) * 5) + 43) {
                        case 51:
                            i25 = i20;
                            bArr[i22 - 1] = bFld;
                            i21 = by2;
                            break;
                        case 52:
                            i25 *= i22;
                            i26 -= i18;
                            if (bFld) break;
                            break;
                        case 55:
                            i26 >>= i22;
                    }
                    Test0241.instanceCount <<= Test0241.instanceCount;
                    i = i24;
                    fArr1[i18 + 1] -= fFld;
                    Test0241.lArrFld[i18] >>>= i18;
                    fArr1 = FuzzerUtils.float1array(N, (float) -87.877F);
                }
                for (i27 = 1; i27 < 2; ++i27) {
                    i25 += (i27 ^ i18);
                    Test0241.iArrFld[i27 - 1] = (int) Test0241.instanceCount;
                    try {
                        i28 = (Test0241.iArrFld[i22] % i25);
                        i23 = (-124 % i24);
                        i25 = (i25 / -2028002002);
                    } catch (ArithmeticException a_e) {
                    }
                    i += (i27 * i27);
                    i25 += i27;
                    i23 -= -58846;
                }
            }
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("d3 by2 i26 = " + Double.doubleToLongBits(d3) + "," + by2 + "," + i26);
        FuzzerUtils.out.println("i27 i28 bArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test0241.instanceCount fFld Test0241.sFld = " + Test0241.instanceCount + "," +
                Float.floatToIntBits(fFld) + "," + Test0241.sFld);
        FuzzerUtils.out.println("bFld Test0241.iArrFld Test0241.dArrFld = " + (bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0241.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0241.dArrFld)));
        FuzzerUtils.out.println("Test0241.lArrFld = " + FuzzerUtils.checkSum(Test0241.lArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
