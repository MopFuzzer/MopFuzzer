// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test0739 {

    public static final int N = 400;

    public static volatile long instanceCount = -195L;
    public static short sFld = -5582;
    public static volatile boolean bFld = true;
    public static int[] iArrFld = new int[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0739.iArrFld, 229);
    }

    public float fFld = -2.729F;

    public static void vMeth1(boolean b2, long l, float f1) {

        int i2 = 6;
        int i3 = 42959;
        int i4 = 23998;
        int i5 = -34418;
        int i6 = -11;
        int i7 = 40;
        int i8 = 22785;
        int[] iArr = new int[N];
        double d = 1.43603;
        float f2 = -112.667F;

        FuzzerUtils.init(iArr, -33140);

        for (i2 = 1; i2 < 374; i2 += 3) {
            Test0739.instanceCount += (long) f1;
            for (i4 = 1; i4 < 13; ++i4) {
                iArr = iArr;
                l += i3;
                i6 = 1;
                do {
                    i3 += (((i6 * i6) + Test0739.instanceCount) - i5);
                } while (++i6 < 2);
            }
            l -= i5;
            i7 = 1;
            do {
                f1 *= i7;
                i3 -= (int) d;
                try {
                    i5 = (i5 % 1542718470);
                    i3 = (i2 % -54010);
                    i3 = (-11364 / iArr[i2 - 1]);
                } catch (ArithmeticException a_e) {
                }
                for (f2 = 1; 1 > f2; ++f2) {
                    if (true) break;
                    try {
                        i5 = (i4 % -142);
                        i8 = (i3 / iArr[i2 - 1]);
                        i5 = (iArr[(int) (f2 + 1)] / iArr[(int) (f2)]);
                    } catch (ArithmeticException a_e) {
                    }
                }
            } while (++i7 < 13);
        }
        vMeth1_check_sum += (b2 ? 1 : 0) + l + Float.floatToIntBits(f1) + i2 + i3 + i4 + i5 + i6 + i7 +
                Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i8 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(boolean b, boolean b1) {

        int i1 = -5;
        int i9 = 7;
        int i10 = -6955;
        int i11 = 32856;
        int i12 = 63425;
        int[] iArr1 = new int[N];
        float f = -32.151F;
        long[] lArr = new long[N];
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr1, 10);
        FuzzerUtils.init(lArr, 39799L);
        FuzzerUtils.init(dArr, -84.94510);

        b1 = ((Test0739.instanceCount + (i1 * i1)) != (-(f * i1)));
        vMeth1(false, Test0739.instanceCount, f);
        iArr1[(i1 >>> 1) % N] <<= i1;
        for (i9 = 16; i9 < 383; i9++) {
            i10 += i9;
            i11 = 1;
            while (++i11 < 5) {
                i10 = (int) Test0739.instanceCount;
                iArr1[i9 + 1] = i9;
                switch ((i9 % 5) + 9) {
                    case 9:
                        lArr[i11 + 1] >>= Test0739.sFld;
                        i12 = 1;
                        while (++i12 < 1) {
                            i10 = 10;
                            i10 -= (int) 175L;
                            Test0739.instanceCount -= i1;
                            if (b) break;
                        }
                        break;
                    case 10:
                        dArr[i11 + 1] = 227;
                        break;
                    case 11:
                        i10 += (i11 - i9);
                        break;
                    case 12:
                        lArr[i11 + 1] = i10;
                    case 13:
                        f = f;
                        break;
                    default:
                        Test0739.sFld += (short) i10;
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + i1 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth() {

        int i13 = -1596, i14 = -2, i15 = 176, i16 = 35938, i17 = 7, i18 = -6;
        float f3 = 77.716F;
        double d1 = 0.76531;
        byte by = 122;
        long[] lArr1 = new long[N];
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(lArr1, 461926694L);
        FuzzerUtils.init(bArr, false);

        vMeth(Test0739.bFld, true);
        for (i13 = 200; i13 > 1; --i13) {
            f3 -= i13;
            i14 >>= i14;
            for (i15 = i13; i15 < 8; i15++) {
                Test0739.instanceCount = (long) d1;
                i14 = (int) 8258897966790227129L;
                switch (((54 >>> 1) % 8) + 104) {
                    case 104:
                        f3 = i15;
                        lArr1[i15 - 1] -= (long) d1;
                        if (Test0739.bFld) continue;
                    case 105:
                        i16 = (int) f3;
                        for (i17 = 1; i17 < 1; i17++) {
                            Test0739.iArrFld[i13 - 1] /= (int) (i18 | 1);
                            bArr[i13] = Test0739.bFld;
                        }
                        break;
                    case 106:
                        i18 -= i17;
                        break;
                    case 107:
                        Test0739.iArrFld[i13 + 1] += (int) d1;
                        break;
                    case 108:
                        i14 -= i13;
                        break;
                    case 109:
                        Test0739.instanceCount += by;
                        break;
                    case 110:
                        i16 *= i18;
                        break;
                    case 111:
                        f3 *= Test0739.sFld;
                        break;
                    default:
                        Test0739.instanceCount -= -5L;
                }
            }
        }
        long meth_res = i13 + i14 + Float.floatToIntBits(f3) + i15 + i16 + Double.doubleToLongBits(d1) + i17 + i18 + by
                + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0739 _instance = new Test0739();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -2;

        i = (int) (iMeth() * fFld);

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test0739.instanceCount Test0739.sFld Test0739.bFld = " + Test0739.instanceCount + "," + Test0739.sFld +
                "," + (Test0739.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld Test0739.iArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0739.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
