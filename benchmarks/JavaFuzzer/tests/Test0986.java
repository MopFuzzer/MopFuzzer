// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test0986 {

    public static final int N = 400;

    public static long instanceCount = -56405L;
    public static byte byFld = 35;
    public static double dFld = -2.4410;
    public static volatile float fFld = 2.825F;
    public static volatile int[] iArrFld = new int[N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0986.iArrFld, -200);
    }

    public int iFld = 1;
    public double[] dArrFld = new double[N];

    public static void vMeth1(float f1, float f2) {

        int i5 = 254;
        int i6 = 14;
        int i7 = 46845;
        int i8 = -66;
        int i9 = 5;
        int i10 = -11;
        int[] iArr = new int[N];
        short s = -31656;

        FuzzerUtils.init(iArr, -41384);

        for (i5 = 15; i5 < 337; ++i5) {
            for (i7 = 1; i7 < 5; ++i7) {
                i8 += i7;
                for (i9 = 1; i9 < 2; ++i9) {
                    if (false) continue;
                    switch (((i7 % 4) * 5) + 65) {
                        case 66:
                            try {
                                i10 = (i8 / -18);
                                iArr[i7] = (i8 / i7);
                                i6 = (i9 % i8);
                            } catch (ArithmeticException a_e) {
                            }
                            Test0986.dFld = -100.253F;
                            i6 = -10;
                        case 84:
                            i6 += i9;
                            Test0986.instanceCount += (38727L + (i9 * i9));
                            Test0986.dFld += i9;
                            break;
                        case 81:
                            f2 += (float) Test0986.dFld;
                            i10 += i9;
                            i8 += s;
                        case 79:
                            f1 += Test0986.instanceCount;
                            break;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i5 + i6 + i7 + i8 + i9 + i10 + s +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i2) {

        int i3 = 54, i4 = 392, i11 = 44, i12 = 46, i13 = -92, i14 = -62738;
        float f3 = -81.941F;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, -3063810794L);

        for (i3 = 8; i3 < 229; i3++) {
            i4 += (int) (-lArr[i3 + 1][i3 + 1]);
            vMeth1(1.704F, f3);
            for (i11 = 1; i11 < 7; ++i11) {
                for (i13 = i11; 2 > i13; i13++) {
                    i12 *= i4;
                    Test0986.instanceCount = Test0986.instanceCount;
                    i14 *= 1095;
                }
                i4 &= -8459;
                Test0986.iArrFld[i11 - 1] = (int) Test0986.instanceCount;
                i12 += i12;
                i14 >>= i2;
                i4 = i14;
                Test0986.iArrFld[i3] += (int) Test0986.dFld;
            }
            Test0986.byFld &= (byte) i2;
        }
        vMeth_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f3) + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth() {

        int i15 = 8, i16 = -13, i17 = 39450, i18 = 207, i19 = 48;
        short s1 = -17013;
        float[] fArr1 = new float[N];
        long[] lArr1 = new long[N];

        FuzzerUtils.init(fArr1, 0.357F);
        FuzzerUtils.init(lArr1, -7392508128558182409L);

        vMeth(-219);
        fArr1[(i15 >>> 1) % N] = i15;
        lArr1 = lArr1;
        i16 = 1;
        do {
            i15 += (i16 * i16);
            Test0986.iArrFld[i16 + 1] += (int) Test0986.dFld;
            for (i17 = 5; 1 < i17; i17 -= 3) {
                i18 += (((i17 * Test0986.instanceCount) + i18) - i15);
                Test0986.instanceCount += i17;
                Test0986.instanceCount = -2;
                Test0986.iArrFld[i17] -= (int) Test0986.instanceCount;
                i19 = 1;
                do {
                    Test0986.fFld = s1;
                    i18 = i19;
                    Test0986.instanceCount *= s1;
                } while (++i19 < 5);
            }
        } while (++i16 < 348);
        long meth_res = i15 + i16 + i17 + i18 + i19 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
                FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0986 _instance = new Test0986();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 115, i1 = 14458, i20 = 24917, i21 = 125, i22 = 0, i23 = -24, i24 = 187, i25 = -8;
        float f = 0.180F;
        float[] fArr = new float[N];
        double d = 1.1094;
        short s2 = 25945;

        FuzzerUtils.init(fArr, 53.81F);

        iFld <<= (iFld++);
        for (i = 5; i < 126; i++) {
            iFld &= (int) (f - (Test0986.byFld + Test0986.instanceCount));
        }
        if (lMeth() < Test0986.byFld) {
            dArrFld[(i >>> 1) % N] -= Integer.reverseBytes((int) ((d - -11918) * i1));
            fArr[(iFld >>> 1) % N] = (++f);
        }
        Test0986.iArrFld[(i >>> 1) % N] += -1;
        for (i20 = 160; i20 > 7; i20 -= 3) {
            i1 <<= i20;
            for (i22 = 1; i20 > i22; i22++) {
                try {
                    i23 = (Test0986.iArrFld[i22 + 1] % i22);
                    i1 = (i21 % iFld);
                    i23 = (i23 / -203);
                } catch (ArithmeticException a_e) {
                }
                Test0986.instanceCount >>= Test0986.instanceCount;
                for (i24 = 1; i24 < 2; i24 += 3) {
                    f = 19466;
                }
                i1 >>= i1;
            }
            i23 += (i20 - s2);
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("d i20 i21 = " + Double.doubleToLongBits(d) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 s2 fArr = " + i25 + "," + s2 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0986.instanceCount iFld Test0986.byFld = " + Test0986.instanceCount + "," + iFld + "," +
                Test0986.byFld);
        FuzzerUtils.out.println("Test0986.dFld Test0986.fFld dArrFld = " + Double.doubleToLongBits(Test0986.dFld) + "," +
                Float.floatToIntBits(Test0986.fFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("Test0986.iArrFld = " + FuzzerUtils.checkSum(Test0986.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
