// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test0810 {

    public static final int N = 400;

    public static long instanceCount = -3L;
    public static float fFld = 9.1010F;
    public static double dFld = 79.54534;
    public static byte byFld = 83;
    public static double[] dArrFld = new double[N];
    public static float[] fArrFld = new float[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0810.dArrFld, -64.64402);
        FuzzerUtils.init(Test0810.fArrFld, 0.374F);
    }

    public static int iMeth() {

        int i2 = -50, i3 = 19085, i4 = -42585, i5 = 104, i6 = -48;
        boolean b = true;

        i2 = 1;
        while (++i2 < 251) {
            for (i3 = 1; i3 < 6; ++i3) {
                i4 += (((i3 * Test0810.fFld) + Test0810.instanceCount) - Test0810.fFld);
                i4 = i3;
                Test0810.dFld = i4;
                i4 += (i3 - i4);
                i4 -= (int) 4157710630L;
                if (false) continue;
                if (b) {
                    i4 >>>= i3;
                    i4 |= i2;
                    i4 -= i3;
                } else if (b) {
                    for (i5 = 1; i5 < 2; i5++) {
                        Test0810.dFld *= Test0810.fFld;
                        i6 = i5;
                    }
                } else {
                    i6 -= (int) Test0810.instanceCount;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i, int i1) {

        int i7 = 0;
        int i8 = -73;
        int i9 = 3;
        int i10 = -7;
        int i11 = -10;
        int i12 = -6;
        int[] iArr = new int[N];
        byte by = -9;
        short s = -16883;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr, -60528);
        FuzzerUtils.init(lArr, 9L);

        iArr[(i1 >>> 1) % N] &= (int) ((++Test0810.fFld) * (Test0810.instanceCount++));
        Test0810.dArrFld[(-27112 >>> 1) % N] *= iMeth();
        lArr = FuzzerUtils.long1array(N, (long) -12L);
        for (i7 = 13; 220 > i7; i7++) {
            switch (((i7 % 10) * 5) + 7) {
                case 19:
                    Test0810.instanceCount = Test0810.instanceCount;
                    i += i7;
                    i8 = by;
                    Test0810.fFld -= Test0810.fFld;
                case 9:
                    Test0810.instanceCount = s;
                    i8 ^= -28366;
                case 33:
                    for (i9 = 1; i9 < 8; i9++) {
                        for (i11 = 1; 2 > i11; i11++) {
                            if (true) break;
                            i10 &= i12;
                        }
                    }
                case 34:
                    if (false) break;
                    break;
                case 56:
                    i1 <<= i10;
                    break;
                case 27:
                    i10 += i7;
                case 48:
                    Test0810.instanceCount = -52141L;
                    break;
                case 18:
                    Test0810.fFld += (((i7 * Test0810.fFld) + Test0810.instanceCount) - Test0810.instanceCount);
                    break;
                case 8:
                case 30:
                default:
                    Test0810.dFld -= Test0810.fFld;
            }
        }
        vMeth1_check_sum += i + i1 + i7 + i8 + by + s + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
                FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0810 _instance = new Test0810();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        int i13 = -60406, i14 = 206, i15 = 53, i16 = -9347, i17 = -189, i18 = 8, i19 = 24457;
        short s1 = -5640;

        vMeth1(i13, i13);
        i13 ^= (int) Test0810.instanceCount;
        i13 = i13;
        for (i14 = 7; i14 < 277; ++i14) {
            s1 += (short) (83.274F + (i14 * i14));
            Test0810.fFld += i14;
            i15 += (int) Test0810.instanceCount;
            for (i16 = 1; i16 < 6; i16 += 2) {
                i17 = (int) Test0810.instanceCount;
                for (i18 = 1; i18 < 3; i18++) {
                    i17 += (-55455 + (i18 * i18));
                }
                i19 += (((i16 * Test0810.instanceCount) + i19) - i19);
                if (i18 != 0) {
                    vMeth_check_sum += i13 + i14 + i15 + s1 + i16 + i17 + i18 + i19;
                    return;
                }
            }
            i17 += i14;
        }
        i19 = i18;
        vMeth_check_sum += i13 + i14 + i15 + s1 + i16 + i17 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        int i20 = 1;
        int i21 = 14;
        int i22 = 7;
        int i23 = -11;
        int i24 = -4;
        int i25 = -221;
        int i26 = 140;
        int i27 = 45;
        int i28 = 9;
        int i29 = -113;
        int i30 = 8;
        int i31 = -59792;
        int i32 = 27;
        int i33 = 101;
        int i34 = -26;
        int i35 = 23;
        int[][] iArr1 = new int[N][N];
        byte by1 = -121;
        long[][] lArr1 = new long[N][N];

        FuzzerUtils.init(iArr1, -31955);
        FuzzerUtils.init(lArr1, -3152306831L);

        vMeth();
        for (i20 = 8; 346 > i20; ++i20) {
            i21 = i20;
        }
        i21 &= i20;
        i22 = 1;
        while (++i22 < 321) {
            i21 %= (int) (Test0810.instanceCount | 1);
        }
        for (i23 = 17; i23 < 326; i23++) {
            Test0810.instanceCount ^= 1432681017L;
            i21 += -26270;
            for (i25 = 1; i25 < 81; i25++) {
                i21 = i25;
                if (false) continue;
                Test0810.instanceCount -= 31069;
                i27 = 1;
                while (++i27 < 2) {
                    Test0810.instanceCount *= i20;
                    i21 >>= i28;
                    try {
                        i24 = (64369 / iArr1[i25][i23 + 1]);
                        i26 = (i21 / i20);
                        i26 = (-13776 / iArr1[i27][i25]);
                    } catch (ArithmeticException a_e) {
                    }
                }
            }
            for (i29 = 1; i29 < 81; i29++) {
                Test0810.fFld = Test0810.byFld;
                Test0810.dArrFld[i23 + 1] = 251;
                lArr1[i23 + 1][i23 + 1] = by1;
            }
        }
        for (i31 = 13; i31 < 252; i31++) {
            short s2 = -31302;
            Test0810.fFld += s2;
            i33 = 1;
            while (++i33 < 105) {
                for (i34 = 1; i34 < 1; ++i34) {
                    iArr1[i34 - 1][i31] >>= i21;
                    Test0810.instanceCount = Test0810.instanceCount;
                    Test0810.fArrFld[i31 + 1] += -17.702F;
                    i26 += (((i34 * i21) + Test0810.instanceCount) - s2);
                    Test0810.dFld = s2;
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 by1 = " + i29 + "," + i30 + "," + by1);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 i35 iArr1 = " + i34 + "," + i35 + "," + FuzzerUtils.checkSum(iArr1));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0810.instanceCount Test0810.fFld Test0810.dFld = " + Test0810.instanceCount + "," +
                Float.floatToIntBits(Test0810.fFld) + "," + Double.doubleToLongBits(Test0810.dFld));
        FuzzerUtils.out.println("Test0810.byFld Test0810.dArrFld Test0810.fArrFld = " + Test0810.byFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0810.dArrFld)) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0810.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
