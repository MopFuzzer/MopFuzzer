// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0259 {

    public static final int N = 400;

    public static long instanceCount = 21022L;
    public static int iFld = -28685;
    public static double dFld = 2.47835;
    public static byte byFld = -73;
    public static int[] iArrFld1 = new int[N];
    public static int[] iArrFld2 = new int[N];
    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0259.iArrFld1, -117);
        FuzzerUtils.init(Test0259.iArrFld2, -110);
    }

    public volatile int[] iArrFld = new int[N];

    public static int iMeth(int i8, int i9, int i10) {

        int i11 = -90, i12 = -93, i13 = -46219, i14 = 12, i15 = 7;
        boolean b = false, b1 = false;

        if (b) {
            Test0259.instanceCount = Test0259.byFld;
            i10 = 2;
            Test0259.instanceCount -= Test0259.instanceCount;
            for (i11 = 8; 253 > i11; i11++) {
                for (i13 = 1; i13 < 7; ++i13) {
                    short s = -4969;
                    Test0259.dFld *= Test0259.byFld;
                    Test0259.iArrFld1[i11] += -127;
                    i12 = s;
                    Test0259.iArrFld1[i13 - 1] |= 29;
                    Test0259.iFld = (int) Test0259.instanceCount;
                    i12 -= i15;
                }
                Test0259.iFld *= i14;
                Test0259.instanceCount %= (i15 | 1);
                i9 &= i12;
            }
        } else if (b1) {
            Test0259.instanceCount >>= Test0259.iFld;
        } else if (b) {
            Test0259.iArrFld2[(i15 >>> 1) % N] = i13;
        } else {
            Test0259.dFld -= Test0259.instanceCount;
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + (b ? 1 : 0) + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth(float f, double d1, int i1) {

        int i2 = -8, i3 = 6675, i4 = 8, i5 = 123, i6 = 38381, i7 = -18452, i16 = 25342;
        short s1 = -4240;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, -46992L);

        for (i2 = 17; 367 > i2; i2++) {
            for (i4 = 1; i4 < 5; i4++) {
                try {
                    i3 = (-243 / i4);
                    i5 = (-1 / i2);
                    i1 = (i3 / Test0259.iFld);
                } catch (ArithmeticException a_e) {
                }
                Test0259.instanceCount -= (i5++);
                try {
                    Test0259.iFld = (i1 % -13755);
                    Test0259.iArrFld1[i2 - 1] = (i2 / -22);
                    i3 = (-785183485 / Test0259.iArrFld1[i4]);
                } catch (ArithmeticException a_e) {
                }
                for (i6 = 1; i6 < 2; i6++) {
                    i5 = iMeth(i4, i6, i7);
                    lArr1[i6 - 1] += i4;
                    s1 += (short) i1;
                    Test0259.iArrFld2[i4 + 1] = (int) -1.1952;
                    Test0259.iFld += (((i6 * i16) + i5) - i7);
                    Test0259.instanceCount += (i6 * Test0259.byFld);
                    Test0259.instanceCount += (i6 | Test0259.instanceCount);
                }
                i1 += (((i4 * i7) + i5) - Test0259.instanceCount);
                Test0259.instanceCount = 9;
            }
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i1 + i2 + i3 + i4 + i5 + i6 + i7 + s1 +
                i16 + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vSmallMeth(int i) {

        float f1 = -2.304F;

        Test0259.dFld -= ((lMeth(f1, Test0259.dFld, i) + Test0259.instanceCount) - Test0259.instanceCount);
        i = i;
        vSmallMeth_check_sum += i + Float.floatToIntBits(f1);
    }

    public static void main(String[] strArr) {

        try {
            Test0259 _instance = new Test0259();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        double d = 0.37861;
        boolean b2 = true;
        int i17 = 2614, i18 = -24, i19 = 9, i20 = 177, i21 = 54727, i22 = 680, i23 = -10, i24 = -17131;
        float f2 = 1.220F, f3 = 0.258F;
        short s2 = 8462;
        long[] lArr = new long[N];
        byte[] byArr = new byte[N];

        FuzzerUtils.init(lArr, 8L);
        FuzzerUtils.init(byArr, (byte) -11);

        d -= (-(Test0259.instanceCount + (Test0259.iFld--)));
        iArrFld[(Test0259.iFld >>> 1) % N] >>= (--iArrFld[(Test0259.iFld >>> 1) % N]);
        lArr[(Test0259.iFld >>> 1) % N] *= Test0259.iFld;
        for (int smallinvoc = 0; smallinvoc < 906; smallinvoc++) vSmallMeth(Test0259.iFld);
        b2 = b2;
        Test0259.iFld -= i17;
        Test0259.dFld = i17;
        i17 >>>= -46;
        for (i18 = 9; i18 < 158; i18++) {
            f2 = 1;
            while (++f2 < 168) {
                lArr[(int) (f2 + 1)] += i17;
            }
            d -= i18;
            for (i20 = i18; i20 < 168; i20++) {
                iArrFld[i18] = -215;
                Test0259.iFld -= -12;
                if (b2) continue;
                Test0259.iFld = i18;
            }
            if (b2) break;
            Test0259.iFld = i17;
            for (i22 = 168; i22 > 4; --i22) {
                i17 += (int) Test0259.instanceCount;
                Test0259.iFld -= (int) Test0259.dFld;
                Test0259.iFld += (i22 * i22);
                Test0259.iArrFld2[i22 + 1] = i18;
                Test0259.instanceCount += (((i22 * i20) + i17) - Test0259.byFld);
            }
            for (f3 = 4; f3 < 168; f3++) {
                Test0259.instanceCount = Test0259.instanceCount;
                Test0259.byFld &= (byte) i24;
                Test0259.iArrFld1[(int) (f3)] += s2;
                i23 >>= -6;
            }
        }

        FuzzerUtils.out.println("d b2 i17 = " + Double.doubleToLongBits(d) + "," + (b2 ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 f2 = " + i18 + "," + i19 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 f3 i24 = " + i23 + "," + Float.floatToIntBits(f3) + "," + i24);
        FuzzerUtils.out.println("s2 lArr byArr = " + s2 + "," + FuzzerUtils.checkSum(lArr) + "," +
                FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test0259.instanceCount Test0259.iFld Test0259.dFld = " + Test0259.instanceCount + "," + Test0259.iFld +
                "," + Double.doubleToLongBits(Test0259.dFld));
        FuzzerUtils.out.println("Test0259.byFld iArrFld Test0259.iArrFld1 = " + Test0259.byFld + "," +
                FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test0259.iArrFld1));
        FuzzerUtils.out.println("Test0259.iArrFld2 = " + FuzzerUtils.checkSum(Test0259.iArrFld2));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth lMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
