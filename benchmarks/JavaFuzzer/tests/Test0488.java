// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test0488 {

    public static final int N = 400;

    public static long instanceCount = -64838L;
    public static short sFld = 28063;
    public static byte byFld = 120;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0488.fArrFld, 33.370F);
        FuzzerUtils.init(Test0488.iArrFld, -83);
    }

    public volatile int iFld = 108;
    public volatile long[] lArrFld = new long[N];

    public static void vMeth1(int i3) {

        double d = -124.24082;
        int i4 = -211;
        int i5 = 45349;
        int i6 = 12;
        int[] iArr = new int[N];
        byte by1 = -69;
        boolean b = true;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, 1.7F);
        FuzzerUtils.init(iArr, -12);

        for (float f : fArr) {
            for (d = 1; 4 > d; d++) {
                i3 *= (int) Test0488.instanceCount;
                f += Test0488.instanceCount;
            }
            i3 -= -238;
            for (i5 = 1; 4 > i5; ++i5) {
                i3 <<= Test0488.sFld;
                i3 >>= i3;
            }
            switch (((i3 >>> 1) % 1) + 70) {
                case 70:
                    f -= i6;
                    i3 = i3;
                    iArr[(i3 >>> 1) % N] = by1;
                    Test0488.instanceCount <<= Test0488.instanceCount;
                    break;
                default:
                    if (b) continue;
                    i3 = i4;
            }
        }
        vMeth1_check_sum += i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + by1 + (b ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(byte by, long l) {

        int i7 = -175;
        int i8 = -63517;
        int i9 = -146;
        int i10 = 223;
        int i11 = -59312;
        int i12 = -5;
        int[] iArr1 = new int[N];
        float[] fArr1 = new float[N];
        short[] sArr = new short[N];

        FuzzerUtils.init(iArr1, 84);
        FuzzerUtils.init(fArr1, -22.266F);
        FuzzerUtils.init(sArr, (short) 8465);

        vMeth1(i7);
        for (i8 = 268; i8 > 10; --i8) {
            iArr1[i8] += i7;
        }
        i9 = (int) l;
        fArr1[(-42 >>> 1) % N] += i9;
        sArr[(i7 >>> 1) % N] += (short) -7L;
        i7 -= (int) 1.11371;
        for (i10 = 10; 213 > i10; ++i10) {
            i11 -= (int) l;
            i12 = 1;
            do {
                Test0488.instanceCount += by;
                Test0488.instanceCount += (27482 + (i12 * i12));
                Test0488.instanceCount = i7;
                fArr1 = Test0488.fArrFld;
                if (i7 != 0) {
                    vMeth_check_sum += by + l + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(sArr);
                    return;
                }
            } while (++i12 < 8);
        }
        vMeth_check_sum += by + l + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(sArr);
    }

    public static float fMeth(int i) {

        int i1 = -118;
        int i2 = -18143;
        int i13 = -175;
        int i14 = -2;
        int i15 = 27308;
        int[] iArr2 = new int[N];
        float f1 = 102.154F, f2 = 8.70F;
        boolean b1 = true;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -234L);
        FuzzerUtils.init(iArr2, 112);

        for (i1 = 7; 246 > i1; i1++) {
            i = (int) lArr[i1];
            vMeth((byte) (20), Test0488.instanceCount);
            for (f1 = 1; f1 < 7; f1++) {
                i13 += (int) (((f1 * i2) + i13) - Test0488.instanceCount);
                for (i14 = 1; 2 > i14; i14++) {
                    if (b1) continue;
                    f2 = i13;
                    iArr2 = FuzzerUtils.int1array(N, (int) -59391);
                    i15 += i1;
                    i15 <<= -12;
                }
                i <<= -14;
                i2 += (int) (((f1 * f1) + Test0488.byFld) - Test0488.sFld);
                Test0488.instanceCount += (long) (((f1 * i15) + i2) - Test0488.byFld);
                i2 += (int) (((f1 * Test0488.instanceCount) + i13) - Test0488.instanceCount);
            }
        }
        long meth_res = i + i1 + i2 + Float.floatToIntBits(f1) + i13 + i14 + i15 + (b1 ? 1 : 0) +
                Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0488 _instance = new Test0488();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i16 = -24059;
        int i17 = -13;
        int i18 = -14;
        int i19 = -13014;
        int i20 = -13;
        int i21 = 7;
        int i22 = 9;
        int i23 = 0;
        int i24 = 110;
        int i25 = -61;
        int[] iArr3 = new
                int[N];
        float f3 = -1.57F;
        double d1 = -1.42385;
        boolean b2 = true;

        FuzzerUtils.init(iArr3, -82);

        Test0488.instanceCount -= (long) (((--Test0488.sFld) - Long.reverseBytes(-229L)) + (-fMeth(iFld)));
        for (i16 = 6; i16 < 332; ++i16) {
            Test0488.sFld += (short) (((i16 * f3) + Test0488.instanceCount) - iFld);
            try {
                i17 = (iFld / i17);
                i17 = (iFld % 157);
                i17 = (-35298 % Test0488.iArrFld[i16]);
            } catch (ArithmeticException a_e) {
            }
            for (i18 = 2; i18 < 77; i18++) {
                for (i20 = 1; i20 < 2; ++i20) {
                    Test0488.instanceCount = 14;
                    i21 -= i17;
                    f3 += (((i20 * i19) + i20) - i19);
                    try {
                        Test0488.iArrFld[i16] = (i20 % -3835);
                        i19 = (i18 / i20);
                        i19 = (i20 % -59357);
                    } catch (ArithmeticException a_e) {
                    }
                    switch ((i20 % 2) + 47) {
                        case 47:
                            i17 |= (int) Test0488.instanceCount;
                            f3 *= -1925674906L;
                            lArrFld[i18 + 1] *= -218380162L;
                            break;
                        case 48:
                    }
                    Test0488.instanceCount = Test0488.instanceCount;
                    iFld = i19;
                    d1 -= -269752265L;
                }
                i19 = 156;
                Test0488.instanceCount = i18;
                iFld = i18;
                for (i22 = 1; i22 < 2; i22++) {
                    Test0488.instanceCount += (i22 - i19);
                    i23 += i22;
                }
                for (i24 = 1; i24 < 2; ++i24) {
                    i19 -= i23;
                    b2 = true;
                    switch ((i24 % 5) + 106) {
                        case 106:
                            i17 = i23;
                            i23 -= i23;
                            i25 += (((i24 * i22) + f3) - i23);
                            break;
                        case 107:
                            lArrFld[i16 - 1] = (long) d1;
                        case 108:
                            try {
                                iFld = (i17 / 90);
                                iArr3[i24 + 1] = (i17 / i21);
                                i19 = (i19 / -797925473);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 109:
                            i25 += (((i24 * i23) + Test0488.instanceCount) - i20);
                            break;
                        case 110:
                            Test0488.sFld = (short) i22;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i16 i17 f3 = " + i16 + "," + i17 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d1 i22 = " + i21 + "," + Double.doubleToLongBits(d1) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b2 iArr3 = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0488.instanceCount Test0488.sFld Test0488.byFld = " + Test0488.instanceCount + "," + Test0488.sFld +
                "," + Test0488.byFld);
        FuzzerUtils.out.println("iFld Test0488.fArrFld Test0488.iArrFld = " + iFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0488.fArrFld)) + "," + FuzzerUtils.checkSum(Test0488.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
