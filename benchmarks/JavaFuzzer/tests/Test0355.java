// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test0355 {

    public static final int N = 400;

    public static long instanceCount = 25921L;
    public static float fFld = 41.301F;
    public static double dFld = 10.96743;
    public static volatile float[] fArrFld = new float[N];
    public static volatile int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0355.fArrFld, 2.1016F);
        FuzzerUtils.init(Test0355.iArrFld, -56251);
    }

    public byte byFld = -39;

    public static void vMeth1() {

        int i2 = 122;
        int i3 = -53855;
        int i4 = 199;
        int i5 = 34006;
        int i6 = -7;
        int i7 = -216;
        int i8 = 58567;
        int[][] iArr1 = new int[N][N];
        boolean b = false;

        FuzzerUtils.init(iArr1, 118);

        switch (((i2 >>> 1) % 1) + 99) {
            case 99:
                for (i3 = 6; i3 < 206; ++i3) {
                    iArr1[i3 - 1][i3] <<= i3;
                    for (i5 = 8; i5 > i3; --i5) {
                        for (i7 = i5; i7 < 1; i7++) {
                            i8 += (i7 * i7);
                            if (b) break;
                            Test0355.instanceCount = Test0355.instanceCount;
                            Test0355.instanceCount |= i6;
                            i2 = i6;
                            i8 *= -59103;
                            if (i2 != 0) {
                                vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) +
                                        FuzzerUtils.checkSum(iArr1);
                                return;
                            }
                            if (true) {
                                i6 = i7;
                                Test0355.fFld += Test0355.fFld;
                            }
                        }
                    }
                }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l, int i1) {

        int i9 = -57124;
        int i10 = 75;
        int i11 = 18;
        int[][] iArr2 = new int[N][N];
        float f = 1.328F;
        byte by = 23;

        FuzzerUtils.init(iArr2, -212);

        vMeth1();
        l <<= i1;
        i9 = 1;
        while ((i9 += 3) < 301) {
            i1 <<= i1;
            if (false) {
                f -= 104.189F;
                iArr2 = FuzzerUtils.int2array(N, (int) 56872);
                for (i10 = 1; 16 > i10; ++i10) {
                    i1 = i1;
                    Test0355.fFld -= i11;
                    i11 /= (int) ((long) (f) | 1);
                    Test0355.fFld = Test0355.fFld;
                    Test0355.instanceCount = i9;
                    iArr2[i9][i9] = i10;
                    i1 -= 2;
                }
            } else {
                i1 = by;
            }
        }
        long meth_res = l + i1 + i9 + Float.floatToIntBits(f) + i10 + i11 + by + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {

        int i = 13;
        int i12 = -2;
        int i13 = 14;
        int i14 = 10;
        int i15 = -155;
        int i16 = 2;
        int i17 = -50689;
        int i18 = 6;
        int[] iArr = new int[N];
        double d = 1.39045;
        short s = 14092;

        FuzzerUtils.init(iArr, 47);

        iArr[(i >>> 1) % N] ^= iMeth(Test0355.instanceCount, i);
        i |= i;
        i *= (int) d;
        for (i12 = 11; i12 < 241; ++i12) {
            i13 <<= 9602;
        }
        for (i14 = 2; i14 < 198; i14++) {
            i13 = s;
            for (i16 = i14; i16 < 8; ++i16) {
                i18 = 1;
                do {
                    i13 *= i17;
                    Test0355.fArrFld[(i18 >>> 1) % N] -= 1504931800L;
                    i -= (int) Test0355.fFld;
                    i15 -= i14;
                    try {
                        i17 = (28125 / i12);
                        i17 = (40302 / i18);
                        i17 = (153 % iArr[i16 + 1]);
                    } catch (ArithmeticException a_e) {
                    }
                    i13 = i18;
                } while (++i18 < 1);
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + s + i16 + i17 + i18 +
                FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0355 _instance = new Test0355();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i19 = -3071, i20 = 128, i21 = 118, i23 = 11, i24 = -19587, i25 = -51488, i26 = -12, i27 = -29;
        short s1 = -9875;
        long l1 = 12L;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -1.118256);

        vMeth();
        dArr[(i19 >>> 1) % N] *= Test0355.instanceCount;
        for (i20 = 10; i20 < 233; ++i20) {
            Test0355.dFld = Test0355.fFld;
            Test0355.instanceCount += (-3509624748L + (i20 * i20));
            i19 *= (int) Test0355.instanceCount;
            i21 *= 16;
            for (i23 = 2; i23 < 113; ++i23) {
                s1 += (short) i23;
                i19 >>= -27994;
                i25 = 1;
                do {
                    i21 = (int) Test0355.fFld;
                } while (++i25 < 2);
                Test0355.dFld += Test0355.instanceCount;
                i19 = (int) 50L;
                i24 += (i23 + i23);
                Test0355.iArrFld[i23 - 1] &= (int) Test0355.instanceCount;
                for (i26 = 1; i26 < 2; i26++) {
                    i19 *= (int) Test0355.dFld;
                    i27 = (int) Test0355.fFld;
                    switch ((i26 % 7) + 60) {
                        case 60:
                            Test0355.dFld *= Test0355.instanceCount;
                            i27 *= i20;
                            Test0355.instanceCount += i26;
                            break;
                        case 61:
                            l1 = l1;
                            break;
                        case 62:
                            Test0355.iArrFld[i26 - 1] = i23;
                            i24 += (((i26 * i23) + i19) - Test0355.instanceCount);
                            i24 -= byFld;
                            break;
                        case 63:
                            l1 = i23;
                            Test0355.instanceCount += i24;
                            i21 += i26;
                            break;
                        case 64:
                            Test0355.fFld += i26;
                            break;
                        case 65:
                            Test0355.iArrFld[i20 + 1] = 189;
                            break;
                        case 66:
                            Test0355.fFld += (i26 * i24);
                            break;
                        default:
                            Test0355.fArrFld[i23] -= i23;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i23 i24 s1 = " + i23 + "," + i24 + "," + s1);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("l1 dArr = " + l1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0355.instanceCount Test0355.fFld Test0355.dFld = " + Test0355.instanceCount + "," +
                Float.floatToIntBits(Test0355.fFld) + "," + Double.doubleToLongBits(Test0355.dFld));
        FuzzerUtils.out.println("byFld Test0355.fArrFld Test0355.iArrFld = " + byFld + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0355.fArrFld)) + "," + FuzzerUtils.checkSum(Test0355.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
