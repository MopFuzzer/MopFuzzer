// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0277 {

    public static final int N = 400;

    public static long instanceCount = 63509L;
    public static float fFld = -1.745F;
    public static int[] iArrFld = new int[N];
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0277.iArrFld, -5895);
    }

    public volatile int iFld = 8;
    public short sFld = 14126;
    public long[] lArrFld = new long[N];
    public short[] sArrFld = new short[N];

    public static long lMeth1() {

        double d3 = 19.12238;
        int i4 = -215;
        int i5 = 32011;
        int i6 = 68;
        int i7 = 171;
        int i8 = 3;
        int[] iArr = new int[N];
        byte by = -97;
        boolean b = true;
        float[] fArr = new float[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(fArr, 0.895F);
        FuzzerUtils.init(lArr, -4563158298137905048L);
        FuzzerUtils.init(iArr, -4);

        d3 = i4;
        for (float f : fArr) {
            if (true) break;
            i4 = (int) f;
            if (b) {
                for (i5 = 4; i5 > 1; i5 -= 2) {
                    for (i7 = 1; i7 < 4; i7++) {
                        lArr[i7] = 738855764L;
                        i6 += i7;
                        Test0277.instanceCount = -32417;
                        d3 -= by;
                        iArr[i7] += (int) f;
                    }
                    b = false;
                    i4 = (int) d3;
                    Test0277.instanceCount = i7;
                }
            } else if (false) {
                i4 = i4;
            }
        }
        long meth_res = Double.doubleToLongBits(d3) + i4 + i5 + i6 + i7 + i8 + by + (b ? 1 : 0) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
                FuzzerUtils.checkSum(iArr);
        lMeth1_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0277 _instance = new Test0277();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        double d2 = -46.25451;
        int i1 = -144;
        int i2 = -5;
        int i3 = 47;
        int i10 = -11;
        int i11 = 4530;
        int i12 = -101;
        int i13 = 6;
        int[] iArr1 = new int[N];
        boolean b1 = true;
        byte[][] byArr = new byte[N][N];

        FuzzerUtils.init(iArr1, -192);
        FuzzerUtils.init(byArr, (byte) -27);

        for (d2 = 5; d2 < 254; d2++) {
            for (i2 = 7; i2 > 1; i2--) {
                Test0277.instanceCount *= lMeth1();
                i1 = -170;
                Test0277.instanceCount = (long) d2;
                lArrFld[(i2 >>> 1) % N] += (long) d2;
            }
            i3 %= (int) 37.46709;
            Test0277.instanceCount += (-164 + (d2 * d2));
            for (i10 = 1; i10 < 7; ++i10) {
                iArr1[(i2 >>> 1) % N] ^= i1;
                i3 += i10;
            }
            for (i12 = 1; 7 > i12; ++i12) {
                byArr[(int) (d2)][i12] = (byte) Test0277.instanceCount;
                b1 = b1;
                if (b1) break;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d2) + i1 + i2 + i3 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) +
                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public long lMeth(double d1) {

        int i14 = 2, i15 = 1, i16 = -5;
        boolean b2 = true;

        vMeth();
        i14 = 170;
        do {
            Test0277.iArrFld[i14] >>>= -50187;
            switch (((i14 % 3) * 5) + 73) {
                case 76:
                    iFld -= (int) 6L;
                    Test0277.fFld -= 3917721943L;
                    for (i15 = 1; i15 < 9; ++i15) {
                        iFld += (((i15 * i15) + Test0277.instanceCount) - i16);
                        d1 = 7;
                        d1 *= i15;
                        Test0277.instanceCount = iFld;
                        i16 -= (int) Test0277.instanceCount;
                        if (b2) break;
                        Test0277.instanceCount += i16;
                        sArrFld[i15] = (short) iFld;
                    }
                    break;
                case 87:
                    i16 += (i14 * i14);
                    break;
                case 86:
                    iFld = i14;
                    break;
                default:
                    i16 = (int) Test0277.instanceCount;
            }
        } while (--i14 > 0);
        long meth_res = Double.doubleToLongBits(d1) + i14 + i15 + i16 + (b2 ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = -13, i17 = 13, i18 = -37, i19 = 10, i20 = 60346, i21 = -23, i22 = 21647, i23 = 6;
        double d4 = 124.67540;
        double[] dArr = new double[N];
        boolean b3 = false;
        byte by1 = -64;
        byte[] byArr1 = new byte[N];

        FuzzerUtils.init(dArr, -10.131052);
        FuzzerUtils.init(byArr1, (byte) 59);

        i = (int) (--Test0277.instanceCount);
        for (double d : dArr) {
            i -= (int) lMeth(d);
        }
        switch ((((-63868 >>> 1) % 1) * 5) + 86) {
            case 90:
                for (i17 = 9; i17 < 300; i17++) {
                    Test0277.fFld += i17;
                    Test0277.fFld *= -5;
                    i = (int) Test0277.instanceCount;
                    Test0277.instanceCount += iFld;
                    i19 = 1;
                    do {
                        switch ((i19 % 5) + 15) {
                            case 15:
                                Test0277.instanceCount = 32495;
                                break;
                            case 16:
                                switch ((i19 % 1) + 1) {
                                    case 1:
                                        iFld += (i19 ^ Test0277.instanceCount);
                                    default:
                                        for (i20 = 1; i20 < 1; i20++) {
                                            sFld += (short) (i20 * i20);
                                            i21 -= iFld;
                                            Test0277.instanceCount -= Test0277.instanceCount;
                                            if (b3) {
                                                d4 += i18;
                                                i21 += (i20 * i20);
                                            } else if (b3) {
                                                Test0277.fFld += (i20 * i20);
                                            } else {
                                                d4 -= Test0277.instanceCount;
                                                lArrFld[i20] = i18;
                                                i21 = (int) 3L;
                                                byArr1[i17] += (byte) i17;
                                            }
                                        }
                                        for (i22 = i17; i22 < 1; i22++) {
                                            i23 = (int) -3780978524915375188L;
                                        }
                                }
                                i21 += (i19 - i20);
                                i21 = iFld;
                            case 17:
                                i18 += (i19 * i19);
                                break;
                            case 18:
                                if (b3) break;
                                break;
                            case 19:
                                i += i19;
                            default:
                                Test0277.iArrFld[i19 - 1] = by1;
                        }
                    } while (++i19 < 86);
                }
                break;
            default:
                i21 = i20;
        }

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("d4 b3 i22 = " + Double.doubleToLongBits(d4) + "," + (b3 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 by1 dArr = " + i23 + "," + by1 + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("byArr1 = " + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0277.instanceCount iFld Test0277.fFld = " + Test0277.instanceCount + "," + iFld + "," +
                Float.floatToIntBits(Test0277.fFld));
        FuzzerUtils.out.println("sFld lArrFld Test0277.iArrFld = " + sFld + "," + FuzzerUtils.checkSum(lArrFld) + "," +
                FuzzerUtils.checkSum(Test0277.iArrFld));
        FuzzerUtils.out.println("sArrFld = " + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
