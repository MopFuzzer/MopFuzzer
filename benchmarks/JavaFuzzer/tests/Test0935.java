// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test0935 {

    public static final int N = 400;

    public static long instanceCount = -1850481105L;
    public static double dFld = -9.15280;
    public static volatile int[][] iArrFld = new int[N][N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0935.iArrFld, 234);
    }

    public byte byFld = -26;

    public static float fMeth(int i7) {

        int i8 = 64328;
        int i9 = 0;
        int i10 = 82;
        int i11 = -28070;
        int i12 = -6;
        int i13 = -224;
        int i14 = 4;
        int[] iArr = new int[N];
        float f = -63.374F;
        short[] sArr = new short[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(sArr, (short) -2151);
        FuzzerUtils.init(iArr, 6865);
        FuzzerUtils.init(lArr, -7863980666082573832L);

        for (i8 = 304; 6 < i8; i8 -= 3) {
            for (i10 = 1; i10 < 16; i10++) {
                try {
                    i11 = (37605 % i8);
                    i7 = (Test0935.iArrFld[i10 - 1][i8 - 1] % i11);
                    Test0935.iArrFld[i10][i8] = (i11 / 53295);
                } catch (ArithmeticException a_e) {
                }
                sArr[i8 - 1] = (short) Test0935.dFld;
                switch (((i8 % 2) * 5) + 20) {
                    case 28:
                        for (i12 = 1; i12 < 2; ++i12) {
                            try {
                                i7 = (i10 / Test0935.iArrFld[i8 - 1][i8 + 1]);
                                iArr[i10 + 1] = (2283 % Test0935.iArrFld[i8 + 1][i8]);
                                i14 = (i11 % 82);
                            } catch (ArithmeticException a_e) {
                            }
                            i7 += i12;
                            Test0935.instanceCount += (i12 | Test0935.instanceCount);
                            i13 += (((i12 * Test0935.instanceCount) + i14) - i13);
                            f = Test0935.instanceCount;
                        }
                        switch ((i8 % 2) + 69) {
                            case 69:
                                Test0935.iArrFld[i8][i10 - 1] -= (int) Test0935.instanceCount;
                                i14 += (int) 8883700514305686961L;
                                i11 = (int) -2.624F;
                            case 70:
                                Test0935.instanceCount = -2L;
                                break;
                        }
                        break;
                    case 29:
                        i7 *= (int) f;
                        break;
                    default:
                        lArr[i8 + 1] = i7;
                }
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) +
                FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth1(long l, int i6) {

        short s = -21736;
        int i15 = 14411, i16 = 181, i17 = 212;
        boolean b = true;
        float f1 = 83.378F;
        byte by = -3;

        s *= (short) -1708507956L;
        Test0935.instanceCount -= (long) (((++i6) - fMeth(-242)) * i6);
        i6 = s;
        i15 = 1;
        while (++i15 < 376) {
            i16 = 1;
            while (++i16 < 4) {
                Test0935.iArrFld[i16 + 1][i15 - 1] = (int) 5L;
                Test0935.instanceCount = i6;
                i17 = 1;
                do {
                    b = b;
                    f1 = i15;
                    Test0935.iArrFld[i15][i16 - 1] = 0;
                    i6 = i16;
                    Test0935.iArrFld[i16 - 1][i15 - 1] += -5969;
                    if (i15 != 0) {
                        vMeth1_check_sum += l + i6 + s + i15 + i16 + i17 + (b ? 1 : 0) + Float.floatToIntBits(f1) + by;
                        return;
                    }
                } while (++i17 < 1);
            }
            by -= (byte) i17;
        }
        vMeth1_check_sum += l + i6 + s + i15 + i16 + i17 + (b ? 1 : 0) + Float.floatToIntBits(f1) + by;
    }

    public static void vMeth() {

        int i4 = -7, i5 = -155, i18 = -224, i19 = -157, i20 = -12, i21 = -13, i22 = -194, i23 = -18261, i24 = -3974, i25 = 7, i26 = 12;

        for (i4 = 6; 188 > i4; i4++) {
            i5 += i4;
            vMeth1(Test0935.instanceCount, i5);
            i18 = 1;
            do {
                byte by1 = 91;
                i5 += (((i18 * i4) + i5) - by1);
            } while (++i18 < 9);
        }
        for (i19 = 1; i19 < 270; ++i19) {
            Test0935.instanceCount = i20;
            Test0935.instanceCount += i19;
            if (i5 != 0) {
                vMeth_check_sum += i4 + i5 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26;
                return;
            }
        }
        for (i21 = 3; i21 < 163; i21++) {
            for (i23 = 1; i23 < 10; ++i23) {
                for (i25 = 1; 2 > i25; ++i25) {
                    i20 += 5;
                    i22 >>= -247;
                    Test0935.instanceCount = Test0935.instanceCount;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26;
    }

    public static void main(String[] strArr) {

        try {
            Test0935 _instance = new Test0935();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -10829, i1 = -53, i2 = -56246, i3 = -11, i27 = 1, i28 = 42074, i29 = -190;
        float f2 = -18.467F;
        boolean b1 = true;
        long l1 = 8191902120307293311L;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, -4L);

        for (i = 326; i > 13; i--) {
            for (i2 = 5; i2 < 80; ++i2) {
                vMeth();
            }
            Test0935.iArrFld[i + 1][i + 1] = i;
            i27 = 1;
            while (++i27 < 80) {
                Test0935.instanceCount -= Test0935.instanceCount;
                i1 *= (int) f2;
                Test0935.instanceCount = byFld;
                for (i28 = 1; i28 < 1; ++i28) {
                    f2 = i28;
                    i3 ^= (int) -113L;
                    Test0935.instanceCount += i28;
                    Test0935.instanceCount = i28;
                    if (b1) continue;
                    f2 -= i28;
                    i29 += (((i28 * i2) + i2) - i3);
                }
                l1 = 1;
                while (++l1 < 1) {
                    i1 >>= i2;
                    if (b1) break;
                    Test0935.dFld += i28;
                    i29 -= 9195;
                    Test0935.instanceCount += l1;
                    lArr1[i27] -= i;
                }
                Test0935.dFld -= Test0935.instanceCount;
                b1 = b1;
                switch (((i >>> 1) % 4) + 75) {
                    case 75:
                        if (b1) {
                            Test0935.iArrFld[i27 - 1][i] *= i28;
                        } else if (b1) {
                            f2 = byFld;
                            Test0935.instanceCount = (long) f2;
                        } else if (b1) {
                            i1 += i27;
                        } else {
                            i1 += (i27 | i1);
                        }
                    case 76:
                        Test0935.instanceCount *= 11;
                        break;
                    case 77:
                        i29 += -9;
                        break;
                    case 78:
                        i3 *= -37377;
                        break;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i27 f2 = " + i3 + "," + i27 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i28 i29 b1 = " + i28 + "," + i29 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("l1 lArr1 = " + l1 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0935.instanceCount Test0935.dFld byFld = " + Test0935.instanceCount + "," +
                Double.doubleToLongBits(Test0935.dFld) + "," + byFld);
        FuzzerUtils.out.println("Test0935.iArrFld = " + FuzzerUtils.checkSum(Test0935.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
