// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0239 {

    public static final int N = 400;

    public static long instanceCount = 32022L;
    public static boolean bFld = false;
    public static volatile long[][] lArrFld = new long[N][N];
    public static volatile short[] sArrFld = new short[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0239.lArrFld, 6L);
        FuzzerUtils.init(Test0239.sArrFld, (short) -16359);
    }

    public short sFld = 26684;

    public static long lMeth() {

        int i2 = 9, i3 = 11, i4 = -6, i5 = -59836, i6 = 22505, i7 = -35407, i8 = 39;
        long l = 40040L;
        float f2 = 75.47F;
        double[][] dArr = new double[N][N];

        FuzzerUtils.init(dArr, 2.78351);

        for (i2 = 7; i2 < 217; ++i2) {
            Test0239.lArrFld[i2][i2 + 1] += i2;
        }
        for (i4 = 22; i4 < 376; ++i4) {
            Test0239.instanceCount = Test0239.instanceCount;
            i5 -= -3;
            dArr[i4 - 1][i4] = i5;
            l >>= i4;
            i6 = 1;
            while (++i6 < 5) {
                for (i7 = 1; i7 < 1; i7++) {
                    i8 /= (int) (i4 | 1);
                    l += i6;
                    i5 += i7;
                    i3 += i4;
                    f2 += (i7 * i7);
                    Test0239.sArrFld[i4] = (short) i7;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + l + i6 + i7 + i8 + Float.floatToIntBits(f2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth1(int i1) {

        double d = -32.86793;
        int i9 = -9, i10 = -2, i11 = 50599, i12 = -23339, i13 = 61, i14 = 2;

        i1 -= (int) lMeth();
        for (d = 12; d < 230; ++d) {
            if (Test0239.bFld) break;
        }
        i1 -= i9;
        for (i10 = 1; 343 > i10; i10++) {
            for (i12 = 1; i12 < 5; ++i12) {
                i9 += (47057 + (i12 * i12));
                Test0239.bFld = Test0239.bFld;
                Test0239.instanceCount = i13;
                i14 = 1;
                while (++i14 < 2) {
                    i11 *= i9;
                    i9 &= 7859;
                    if (Test0239.bFld) continue;
                    Test0239.bFld = true;
                    i1 += (i14 * i14);
                }
            }
        }
        vMeth1_check_sum += i1 + Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + i13 + i14;
    }

    public static void vMeth(float f, float f1, int i) {

        int i15 = -2;
        int i16 = -60;
        int i17 = 184;
        int i18 = 167;
        int i20 = 11;
        int i21 = 1;
        int i22 = 155;
        int i23 = -22075;
        int[][] iArr = new int[N][N];
        int[] iArr1 = new
                int[N];
        double d1 = -72.88187;
        byte by = 89;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, -2.330F);
        FuzzerUtils.init(iArr, 12151);
        FuzzerUtils.init(iArr1, -3152);

        Test0239.instanceCount += (long) fArr[(i >>> 1) % N][(i >>> 1) % N];
        vMeth1(i);
        for (i15 = 289; i15 > 14; i15 -= 2) {
            if (false) break;
        }
        for (i17 = 8; i17 < 203; ++i17) {
            i18 >>= 44431;
            iArr[i17 - 1][i17 - 1] >>= (int) Test0239.instanceCount;
        }
        i18 = -99;
        for (int i19 : iArr1) {
            for (i20 = 1; i20 < 4; ++i20) {
                d1 *= 44;
                i19 -= i15;
            }
            for (i22 = 1; i22 < 4; ++i22) {
                Test0239.instanceCount += (i22 | i20);
                by -= (byte) Test0239.instanceCount;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i + i15 + i16 + i17 + i18 + i20 + i21 +
                Double.doubleToLongBits(d1) + i22 + i23 + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0239 _instance = new Test0239();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        float f3 = 2.606F;
        float[] fArr1 = new float[N];
        int i24 = 24906;
        int i25 = 821;
        int i26 = 230;
        int i27 = -207;
        int i28 = 48424;
        int i29 = 11;
        int i30 = -4;
        int i31 = 57690;
        int i32 = -4;
        int[][] iArr2 = new
                int[N][N];
        byte by1 = -24;
        double d2 = 0.69876;

        FuzzerUtils.init(fArr1, 0.537F);
        FuzzerUtils.init(iArr2, -42);

        vMeth(f3, f3, i24);
        sFld = (short) i24;
        for (i25 = 2; i25 < 258; i25++) {
            i27 = 98;
            do {
                Test0239.instanceCount = 2;
                i24 = -7;
                fArr1 = fArr1;
                i26 = i25;
                i26 += (-10 + (i27 * i27));
                i24 = 44583;
                f3 *= by1;
                d2 -= i27;
                for (i28 = 1; i28 > 1; --i28) {
                    i29 += (int) f3;
                    i26 = (int) -8608917510046513310L;
                    fArr1[(i27 >>> 1) % N] -= i27;
                    Test0239.sArrFld[i27] += (short) Test0239.instanceCount;
                    sFld = (short) Test0239.instanceCount;
                    if (Test0239.bFld) continue;
                    i24 += (i28 * i29);
                    i24 <<= (int) Test0239.instanceCount;
                }
            } while (--i27 > 0);
            i30 = 1;
            while (++i30 < 98) {
                try {
                    i24 = (i28 / i30);
                    iArr2[i30 - 1][i30 + 1] = (34 % i24);
                    i29 = (5052 / i26);
                } catch (ArithmeticException a_e) {
                }
                iArr2[i30][i30 - 1] <<= i26;
                switch (((i30 % 10) * 5) + 62) {
                    case 75:
                        for (i31 = 1; i31 < 1; ++i31) {
                            Test0239.lArrFld[i30 + 1][i30] = -29548;
                            Test0239.sArrFld[i25] -= (short) 9;
                        }
                        break;
                    case 95:
                        iArr2[i25][i25] = (int) -1L;
                        break;
                    case 72:
                        i26 += (((i30 * i25) + i30) - Test0239.instanceCount);
                        break;
                    case 82:
                        i26 >>= i24;
                        break;
                    case 83:
                        i24 += by1;
                        break;
                    case 102:
                        i24 ^= i32;
                    case 79:
                        i29 -= i32;
                    case 85:
                        Test0239.lArrFld[i25 - 1][i30] += i29;
                    case 104:
                        iArr2[i25][i30] += i32;
                        break;
                    case 112:
                        i32 = -119;
                }
            }
        }

        FuzzerUtils.out.println("f3 i24 i25 = " + Float.floatToIntBits(f3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 by1 = " + i26 + "," + i27 + "," + by1);
        FuzzerUtils.out.println("d2 i28 i29 = " + Double.doubleToLongBits(d2) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("fArr1 iArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," +
                FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0239.instanceCount Test0239.bFld sFld = " + Test0239.instanceCount + "," + (Test0239.bFld ? 1 : 0)
                + "," + sFld);
        FuzzerUtils.out.println("Test0239.lArrFld Test0239.sArrFld = " + FuzzerUtils.checkSum(Test0239.lArrFld) + "," +
                FuzzerUtils.checkSum(Test0239.sArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
