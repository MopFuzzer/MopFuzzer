// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0621 {

    public static final int N = 400;

    public static long instanceCount = -51021L;
    public static float fFld = 0.357F;
    public static volatile int[] iArrFld = new int[N];
    public static volatile float[] fArrFld = new float[N];
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0621.iArrFld, -37842);
        FuzzerUtils.init(Test0621.fArrFld, 0.369F);
    }

    public short sFld = 1330;

    public static void vMeth1(int i7, int i8) {

        int i9 = -52093;
        int i10 = 106;
        int i11 = 55;
        int[] iArr = new int[N];
        short s = 14363;
        byte by = 33;
        boolean b1 = false;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, -42519L);
        FuzzerUtils.init(iArr, -53777);

        lArr1[(i7 >>> 1) % N] = i8;
        i7 = i8;
        i7 = i7;
        for (i9 = 5; i9 < 214; ++i9) {
            s = (short) 8713L;
            i7 = i8;
        }
        i11 = 1;
        do {
            iArr[i11 - 1] *= 11170;
            by = (byte) 11471;
            if (b1) break;
            i8 += i11;
            switch ((i11 % 1) + 52) {
                case 52:
                    i7 += -5;
                    i8 -= i10;
                    break;
                default:
                    Test0621.instanceCount <<= Test0621.instanceCount;
            }
        } while (++i11 < 233);
        vMeth1_check_sum += i7 + i8 + i9 + i10 + s + i11 + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr1) +
                FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(float f1) {

        int i5 = 4, i6 = -1, i12 = 11, i13 = 4, i14 = -10, i15 = -92, i16 = 49840;
        float f2 = -1.717F;
        boolean b2 = false;

        for (i5 = 13; i5 < 375; i5++) {
            vMeth1(i5, 27);
            for (f2 = i5; 5 > f2; f2++) {
                double d = 110.65596;
                i13 = 1;
                do {
                    b2 = b2;
                    f1 += i6;
                } while (++i13 < 1);
                Test0621.instanceCount = i12;
                i12 = (int) d;
                try {
                    i6 = (-1742842502 % i5);
                    i12 = (-7 % Test0621.iArrFld[i5 + 1]);
                    i12 = (i13 % -39773);
                } catch (ArithmeticException a_e) {
                }
                for (i14 = (int) (f2); i14 < 1; ++i14) {
                    Test0621.instanceCount = 8458;
                    i16 *= i16;
                    f1 += (i14 * i14);
                    i12 -= 9;
                }
                d -= Test0621.instanceCount;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i5 + i6 + Float.floatToIntBits(f2) + i12 + i13 + (b2 ? 1 : 0) +
                i14 + i15 + i16;
    }

    public static void main(String[] strArr) {

        try {
            Test0621 _instance = new Test0621();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public float fMeth() {

        float f = -96.901F;
        int i4 = -18, i17 = -43134, i18 = 2, i19 = -85;
        boolean b3 = true;
        byte by1 = -63;

        for (f = 18; f < 339; f++) {
            vMeth(f);
            if (b3) break;
            i4 -= (int) Test0621.instanceCount;
            i4 *= by1;
            i17 = 1;
            do {
                Test0621.iArrFld[(int) (f)] += i4;
                for (i18 = 1; i18 < 1; ++i18) {
                    if (b3) continue;
                    switch (((i18 >>> 1) % 9) + 81) {
                        case 81:
                            Test0621.fArrFld[i17] *= Test0621.instanceCount;
                            b3 = b3;
                            break;
                        case 82:
                            Test0621.fFld += (((i18 * i19) + i17) - i4);
                            b3 = b3;
                            Test0621.fFld += i18;
                            break;
                        case 83:
                            i4 <<= i19;
                            break;
                        case 84:
                            if (b3) break;
                        case 85:
                            i4 = (int) Test0621.instanceCount;
                        case 86:
                            i19 += i18;
                            break;
                        case 87:
                            Test0621.fFld = Test0621.instanceCount;
                            break;
                        case 88:
                        case 89:
                            Test0621.instanceCount = i17;
                            break;
                    }
                }
            } while (++i17 < 5);
        }
        long meth_res = Float.floatToIntBits(f) + i4 + (b3 ? 1 : 0) + by1 + i17 + i18 + i19;
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 36, i1 = 32818, i2 = -193, i3 = 237, i20 = -26, i21 = -14, i22 = -14, i23 = -8;
        boolean b = true;
        boolean[] bArr = new boolean[N];
        double d1 = 22.43562;
        double[] dArr = new double[N];
        long[] lArr = new long[N];

        FuzzerUtils.init(dArr, 1.23437);
        FuzzerUtils.init(lArr, 5L);
        FuzzerUtils.init(bArr, true);

        i = 1;
        do {
            i1 = 1;
            while (++i1 < 76) {
                for (i2 = i; i2 < 1; i2++) {
                    Test0621.instanceCount += (i2 * i2);
                    if (b) {
                        dArr = dArr;
                    }
                    lArr[i1] *= (long) (-fMeth());
                    d1 += 57.144F;
                    d1 = i;
                    Test0621.instanceCount *= i;
                    Test0621.fFld += i2;
                    if (true) continue;
                    Test0621.iArrFld = Test0621.iArrFld;
                }
                i3 = sFld;
                Test0621.fFld *= i2;
                switch (((i % 5) * 5) + 65) {
                    case 67:
                        for (i20 = i1; 1 > i20; ++i20) {
                            Test0621.instanceCount = i1;
                            i21 += (i20 ^ i);
                        }
                        break;
                    case 78:
                        bArr[i] = b;
                        for (i22 = 1; 1 > i22; i22++) {
                            try {
                                Test0621.iArrFld[i - 1] = (i1 % -20);
                                i21 = (i23 % i);
                                i3 = (-1464197150 / i23);
                            } catch (ArithmeticException a_e) {
                            }
                            switch (((i22 >>> 1) % 2) + 64) {
                                case 64:
                                case 65:
                                    Test0621.fFld += Test0621.instanceCount;
                                    if (b) break;
                                    d1 = i22;
                                    dArr[i1] -= i2;
                                    break;
                            }
                            d1 -= i;
                            Test0621.instanceCount += i;
                            d1 = i2;
                        }
                        break;
                    case 90:
                        i3 *= i23;
                        break;
                    case 81:
                        i21 <<= (int) Test0621.instanceCount;
                        break;
                    case 73:
                        bArr[i + 1] = b;
                        break;
                    default:
                        Test0621.instanceCount >>= i21;
                }
            }
        } while (++i < 329);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 b d1 = " + i3 + "," + (b ? 1 : 0) + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 dArr lArr = " + i23 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test0621.instanceCount Test0621.fFld sFld = " + Test0621.instanceCount + "," +
                Float.floatToIntBits(Test0621.fFld) + "," + sFld);
        FuzzerUtils.out.println("Test0621.iArrFld Test0621.fArrFld = " + FuzzerUtils.checkSum(Test0621.iArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0621.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
