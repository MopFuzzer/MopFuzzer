// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test0041 {

    public static final int N = 400;

    public static long instanceCount = -5306423382604342465L;
    public static int iFld = 136;
    public static int iFld1 = 12;
    public static int[] iArrFld = new int[N];
    public static short[][] sArrFld = new short[N][N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0041.iArrFld, 81);
        FuzzerUtils.init(Test0041.sArrFld, (short) 13388);
    }

    public float fFld = -2.928F;
    public byte[] byArrFld = new byte[N];

    public static int iMeth1(int i5, int i6) {


        Test0041.iArrFld[(i6 >>> 1) % N] *= Test0041.iFld1;
        long meth_res = i5 + i6;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth() {

        long l = -3919052813L;
        int i2 = -11, i3 = -157, i4 = 32545, i7 = 50123, i8 = -93;
        float f1 = 0.105F;
        float[] fArr1 = new float[N];
        short s = 15605;
        double d = 19.13014;
        boolean b = false;

        FuzzerUtils.init(fArr1, 61.135F);

        for (l = 7; l < 165; l += 2) {
            for (i3 = (int) (l); i3 < 19; ++i3) {
                Test0041.iFld += (((i3 * Test0041.instanceCount) + Test0041.instanceCount) - i3);
                Test0041.iFld1 -= (int) (((158 + iMeth1(i4, i2)) * l) + 47.920F);
                for (i7 = 1; 1 > i7; i7++) {
                    Test0041.instanceCount += (i7 | (long) f1);
                }
                i2 += (i3 * i3);
                Test0041.instanceCount += (i3 + f1);
            }
            Test0041.iFld = Test0041.iFld1;
            s += (short) l;
            if (b) {
                Test0041.iFld1 += (int) l;
                Test0041.instanceCount += l;
                Test0041.instanceCount -= Test0041.iFld1;
                fArr1[(int) (l)] = i3;
            } else if (b) {
                Test0041.instanceCount += (l * l);
                vMeth_check_sum += l + i2 + i3 + i4 + i7 + i8 + Float.floatToIntBits(f1) + s +
                        Double.doubleToLongBits(d) + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                return;
            } else if (b) {
                d -= i8;
            } else {
                Test0041.iArrFld[(int) (l)] = (int) 4145233137275013923L;
            }
        }
        vMeth_check_sum += l + i2 + i3 + i4 + i7 + i8 + Float.floatToIntBits(f1) + s + Double.doubleToLongBits(d) + (b
                ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void main(String[] strArr) {

        try {
            Test0041 _instance = new Test0041();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public int iMeth(float f) {

        int i = -45511, i1 = 0, i9 = 9664, i10 = -39735, i11 = 9, i12 = 183, i13 = -179;
        boolean b1 = false;
        float[] fArr = new float[N];

        FuzzerUtils.init(fArr, -9.88F);

        Test0041.iFld = (int) (Test0041.instanceCount = Math.max(Test0041.iArrFld[(Test0041.iFld >>> 1) % N] -= 11,
                --Test0041.iArrFld[(Test0041.iFld >>> 1) % N]));
        for (i = 3; 372 > i; i += 3) {
            fArr[i] = ((Math.min(Test0041.iFld, i) ^ (i1 * Test0041.instanceCount)) * Integer.reverseBytes((int) (-116L <<
                    Math.abs(i))));
            vMeth();
            for (i9 = 1; i9 < 13; ++i9) {
                Test0041.iFld *= i1;
                if (b1) break;
                for (i11 = 1; i11 < 2; ++i11) {
                    i10 ^= i11;
                    i1 = i11;
                    Test0041.iFld1 += i10;
                    Test0041.instanceCount /= 24766L;
                    i10 >>= i13;
                }
            }
            Test0041.instanceCount += (i + i1);
            i12 = (int) 2.411F;
        }
        long meth_res = Float.floatToIntBits(f) + i + i1 + i9 + i10 + (b1 ? 1 : 0) + i11 + i12 + i13 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f2 = 102.277F;
        int i14 = 12, i15 = -195, i16 = 33729, i17 = 3, i18 = 140, i19 = -243, i20 = -73, i21 = 8997, i22 = -6;
        double d1 = 10.2322;
        boolean b2 = false;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, -1084167681L);

        iMeth(fFld);
        for (f2 = 1; 256 > f2; ++f2) {
            for (i15 = 5; i15 < 99; ++i15) {
                i14 <<= i16;
                for (i17 = 1; i17 < 2; ++i17) {
                    Test0041.iArrFld[i15 - 1] = Test0041.iFld1;
                    byArrFld = byArrFld;
                    switch (((i15 % 2) * 5) + 57) {
                        case 64:
                            Test0041.instanceCount = i17;
                            break;
                        case 66:
                        default:
                            d1 += i16;
                    }
                    i16 += i18;
                    Test0041.iFld >>= i14;
                    i18 += (((i17 * Test0041.iFld1) + Test0041.iFld) - Test0041.iFld);
                    try {
                        Test0041.iArrFld[(int) (f2)] = (Test0041.iFld % i15);
                        i16 = (i15 / i17);
                        i16 = (Test0041.iArrFld[(int) (f2 + 1)] / Test0041.iFld1);
                    } catch (ArithmeticException a_e) {
                    }
                    lArr[i15 - 1] = i15;
                    i18 += i17;
                    if (b2) break;
                }
                Test0041.iFld = 3;
                b2 = b2;
                Test0041.instanceCount /= 35551L;
                Test0041.sArrFld[i15 + 1] = FuzzerUtils.short1array(N, (short) 25602);
                i16 += (((i15 * Test0041.instanceCount) + fFld) - i17);
            }
            Test0041.iFld1 ^= (int) Test0041.instanceCount;
            Test0041.iArrFld[(int) (f2 + 1)] -= (int) d1;
            Test0041.iArrFld[(int) (f2 - 1)] -= i15;
            fFld = i18;
        }
        for (i19 = 18; i19 < 377; ++i19) {
            for (i21 = 70; i21 > i19; i21 -= 2) {
                Test0041.instanceCount = (long) d1;
                if (b2) continue;
            }
        }

        FuzzerUtils.out.println("f2 i14 i15 = " + Float.floatToIntBits(f2) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("d1 b2 i19 = " + Double.doubleToLongBits(d1) + "," + (b2 ? 1 : 0) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test0041.instanceCount Test0041.iFld Test0041.iFld1 = " + Test0041.instanceCount + "," + Test0041.iFld +
                "," + Test0041.iFld1);
        FuzzerUtils.out.println("fFld Test0041.iArrFld byArrFld = " + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0041.iArrFld) + "," + FuzzerUtils.checkSum(byArrFld));
        FuzzerUtils.out.println("Test0041.sArrFld = " + FuzzerUtils.checkSum(Test0041.sArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
