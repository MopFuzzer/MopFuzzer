// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test0566 {

    public static final int N = 400;

    public static volatile long instanceCount = -64553L;
    public static double dFld = -14.23491;
    public static byte byFld = -11;
    public static boolean bFld = true;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0566.iArrFld, 0);
    }

    public static void vMeth2(int i11) {

        float f3 = -1.829F;
        int i12 = -4, i13 = 1, i14 = 4;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 2421800319113514619L);

        i11 += (int) Test0566.instanceCount;
        f3 = i11;
        lArr[(39147 >>> 1) % N] = 7;
        switch (((i11 >>> 1) % 2) + 27) {
            case 27:
                for (i12 = 10; i12 < 347; i12++) {
                    i13 += i12;
                    i13 = (int) Test0566.instanceCount;
                }
                i11 &= i12;
                lArr = lArr;
            case 28:
                i14 = 1;
                while (++i14 < 219) {
                    i11 += (int) Test0566.instanceCount;
                    i13 += (i14 ^ Test0566.instanceCount);
                    Test0566.dFld = Test0566.byFld;
                    Test0566.instanceCount |= i13;
                }
                i13 *= i14;
                break;
            default:
                Test0566.instanceCount -= (long) Test0566.dFld;
        }
        vMeth2_check_sum += i11 + Float.floatToIntBits(f3) + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        double d = 1.43501;
        float f1 = 81.390F, f2 = 1.402F;
        int i7 = -64952;
        int i8 = 8;
        int i9 = -2;
        int i10 = 126;
        int[] iArr = new int[N];
        int[][] iArr1 = new int[N][N];
        byte by = 93;

        FuzzerUtils.init(iArr, -56191);
        FuzzerUtils.init(iArr1, -55692);

        d /= (Test0566.instanceCount | 1);
        f1 += (((i7 - i7) + by) + ((244 - i7) - (i7 = -1807)));
        for (f2 = 13; f2 < 285; f2++) {
            try {
                iArr[(int) (f2 + 1)] = (iArr[(int) (f2 + 1)] / -45585);
                i8 = (i8 / -206);
                i8 = (-13115 % i7);
            } catch (ArithmeticException a_e) {
            }
            for (i9 = 1; i9 < 6; i9++) {
                switch ((int) ((f2 % 8) + 127)) {
                    case 127:
                        vMeth2(i7);
                        iArr[(int) (f2 - 1)] -= i9;
                        iArr[(int) (f2)] = (int) Test0566.instanceCount;
                        break;
                    case 128:
                        iArr1 = FuzzerUtils.int2array(N, (int) 15);
                        i7 += i9;
                        break;
                    case 129:
                        iArr1[(int) (f2)] = iArr;
                        break;
                    case 130:
                        d += i10;
                        Test0566.instanceCount >>= i9;
                        by += (byte) Test0566.instanceCount;
                    case 131:
                    case 132:
                        i8 = i9;
                        break;
                    case 133:
                        i10 -= (int) 5676827119800313681L;
                        break;
                    case 134:
                        i10 >>= i7;
                        break;
                    default:
                        i8 += (6 + (i9 * i9));
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i7 + by + Float.floatToIntBits(f2)
                + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2, int i3, int i4) {

        int i5 = -54829, i6 = 23757, i15 = -7;
        float f = 64.197F;

        for (i5 = 10; i5 < 175; ++i5) {
            f = (i6++);
            vMeth1();
            i6 *= i6;
            i15 = 1;
            do {
                if (true) break;
                i3 &= i6;
            } while (++i15 < 10);
            i4 *= (int) 5938075316001314535L;
            Test0566.instanceCount += (i5 * i5);
        }
        i2 = (int) Test0566.instanceCount;
        i2 <<= (int) Test0566.instanceCount;
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i15;
    }

    public static void main(String[] strArr) {

        try {
            Test0566 _instance = new Test0566();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -8, i1 = 38747, i16 = 9, i17 = -16624, i18 = -25356, i19 = -4, i20 = -253;
        short s = 10418;
        float f4 = -1.65F;
        double[][] dArr = new double[N][N];

        FuzzerUtils.init(dArr, 40.130141);

        for (i = 12; 218 > i; ++i) {
            switch ((i % 7) + 127) {
                case 127:
                    vMeth(i, i1, i);
                    break;
                case 128:
                    i1 *= i;
                    s += (short) (i ^ i);
                    Test0566.byFld = (byte) i;
                    break;
                case 129:
                    Test0566.iArrFld[i - 1] = i1;
                    i1 -= s;
                    i1 -= i1;
                    i1 = (int) f4;
                    break;
                case 130:
                    switch (((i1 >>> 1) % 10) + 56) {
                        case 56:
                            for (i16 = 7; i16 < 122; i16++) {
                                dArr[i16][i] = i16;
                                Test0566.dFld *= i;
                                i17 >>= (int) Test0566.instanceCount;
                                i17 -= 38342;
                                Test0566.iArrFld[i16 + 1] = i;
                            }
                            break;
                        case 57:
                            i1 = i16;
                            f4 -= (float) Test0566.dFld;
                            Test0566.dFld += s;
                            for (i18 = i; 122 > i18; ++i18) {
                                if (Test0566.bFld) continue;
                                switch (((i18 % 1) * 5) + 4) {
                                    case 6:
                                        i17 += s;
                                        break;
                                }
                                Test0566.instanceCount = i19;
                                i17 += i18;
                                i1 += (((i18 * f4) + i1) - f4);
                                i1 -= -3;
                            }
                            break;
                        case 58:
                            i17 += i17;
                        case 59:
                            Test0566.instanceCount >>= 49224L;
                            break;
                        case 60:
                            i19 *= i18;
                        case 61:
                            i1 = -2;
                            break;
                        case 62:
                            try {
                                i19 = (-1327054038 / i19);
                                i17 = (i20 % Test0566.iArrFld[i]);
                                i19 = (i1 % -83117449);
                            } catch (ArithmeticException a_e) {
                            }
                        case 63:
                            Test0566.instanceCount += i18;
                            break;
                        case 64:
                            Test0566.byFld = (byte) i16;
                            break;
                        case 65:
                            Test0566.byFld += (byte) (i - Test0566.instanceCount);
                    }
                    break;
                case 131:
                    i20 -= (int) f4;
                    break;
                case 132:
                    s += (short) Test0566.dFld;
                case 133:
                    f4 *= i1;
                    break;
            }
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("f4 i16 i17 = " + Float.floatToIntBits(f4) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test0566.instanceCount Test0566.dFld Test0566.byFld = " + Test0566.instanceCount + "," +
                Double.doubleToLongBits(Test0566.dFld) + "," + Test0566.byFld);
        FuzzerUtils.out.println("Test0566.bFld Test0566.iArrFld = " + (Test0566.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0566.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
