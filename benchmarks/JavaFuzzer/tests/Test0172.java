// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test0172 {

    public static final int N = 400;

    public static long instanceCount = -28221L;
    public static float fFld = 0.998F;
    public static short sFld = 19729;
    public static int iFld1 = 63357;
    public static long[] lArrFld = new long[N];
    public static volatile float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0172.lArrFld, 53351L);
        FuzzerUtils.init(Test0172.fArrFld, 124.373F);
        FuzzerUtils.init(Test0172.iArrFld, -20);
        FuzzerUtils.init(Test0172.dArrFld, -1.87662);
    }

    public int iFld = 4;
    public double dFld = -2.26076;

    public static void vMeth2() {

        int i8 = 13, i9 = 20483, i10 = 14, i11 = 90, i12 = 22387, i13 = -53110;
        double d1 = 70.79725;
        boolean b = true;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(bArr, true);

        i8 = 1;
        do {
            Test0172.lArrFld[i8] = Test0172.instanceCount;
            Test0172.fArrFld[i8 + 1] *= i8;
            for (d1 = 1; d1 < 8; ++d1) {
                for (i10 = i8; i10 < 2; i10++) {
                    i9 += i8;
                }
                i11 = 20396;
                Test0172.fFld -= i11;
                i12 = 1;
                while ((i12 += 3) < 2) {
                    bArr[i8] = b;
                    if (false) {
                        i11 += i9;
                    } else if (b) {
                        Test0172.iArrFld[i12 + 1] = (int) Test0172.instanceCount;
                        Test0172.dArrFld[i12 + 1] -= i12;
                    } else {
                        Test0172.instanceCount += (i12 * i13);
                        vMeth2_check_sum += i8 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + (b ? 1 : 0) + i13
                                + FuzzerUtils.checkSum(bArr);
                        return;
                    }
                }
            }
        } while (++i8 < 205);
        vMeth2_check_sum += i8 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + (b ? 1 : 0) + i13 +
                FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth1(int i3, int i4, float f) {

        int i5 = -1, i6 = 5, i7 = 92;
        boolean b1 = false;
        byte by = 1;

        i5 = 1;
        while (++i5 < 398) {
            i3 += (int) (-Test0172.instanceCount);
            i3 -= (i5 + i3);
            for (i6 = 1; i6 < 4; i6++) {
                vMeth2();
                Test0172.iArrFld = Test0172.iArrFld;
                i7 += i3;
                i3 += (i6 * i6);
            }
            Test0172.instanceCount += i3;
            Test0172.instanceCount -= (long) f;
            Test0172.instanceCount += (i5 * i5);
            switch ((i5 % 6) + 47) {
                case 47:
                    if (b1) break;
                    i7 ^= i3;
                    i3 = i4;
                    break;
                case 48:
                    f += i5;
                    break;
                case 49:
                    b1 = b1;
                    break;
                case 50:
                    i7 += (0 + (i5 * i5));
                case 51:
                    i4 *= by;
                    break;
                case 52:
                    Test0172.iArrFld[(-7080 >>> 1) % N] = i3;
                default:
                    Test0172.iArrFld[i5 + 1] = -51;
            }
        }
        vMeth1_check_sum += i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + (b1 ? 1 : 0) + by;
    }

    public static void vMeth() {

        double d = 1.46617;
        int i = 215, i1 = 204, i2 = 68, i14 = 58036, i15 = -27, i16 = 221, i17 = 14;
        byte by1 = -30;
        long l = 2028631903L;
        boolean[] bArr1 = new boolean[N];

        FuzzerUtils.init(bArr1, false);

        for (d = 16; d < 268; ++d) {
            for (i1 = 1; i1 < 6; ++i1) {
                vMeth1(i1, -209, Test0172.fFld);
                i2 += 31642;
            }
            Test0172.instanceCount = -63905L;
            i2 -= 25586;
        }
        i2 = i2;
        for (i14 = 4; i14 < 350; i14++) {
            by1 -= (byte) -27085;
            bArr1 = FuzzerUtils.boolean1array(N, (boolean) true);
            i16 = 1;
            while (++i16 < 5) {
                for (l = i14; l < 1; ++l) {
                    Test0172.instanceCount = i14;
                    Test0172.instanceCount -= Test0172.sFld;
                    Test0172.fFld = -2;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + i14 + i15 + by1 + i16 + l + i17 +
                FuzzerUtils.checkSum(bArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0172 _instance = new Test0172();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i18 = 7, i19 = 24039, i20 = 52266, i21 = 3466, i22 = 189, i23 = 9482, i24 = -46, i25 = -82;
        boolean b2 = true;

        vMeth();
        Test0172.instanceCount *= Test0172.instanceCount;
        iFld <<= iFld;
        iFld = iFld;
        Test0172.sFld = (short) 26302;
        Test0172.fArrFld[(iFld >>> 1) % N] = iFld;
        for (i18 = 359; i18 > 3; i18--) {
            Test0172.instanceCount -= Test0172.instanceCount;
            Test0172.instanceCount = Test0172.sFld;
            iFld >>= i18;
            for (i20 = 1; i20 < 71; ++i20) {
                Test0172.sFld += (short) (i20 - Test0172.instanceCount);
                Test0172.instanceCount += (i20 * i20);
            }
            for (i22 = 2; i22 < 71; ++i22) {
                if (b2) {
                    dFld = Test0172.instanceCount;
                    Test0172.instanceCount += i21;
                    for (i24 = 1; i24 < 2; ++i24) {
                        Test0172.instanceCount *= i23;
                        dFld = Test0172.sFld;
                        iFld = i19;
                        try {
                            i23 = (70 % Test0172.iFld1);
                            i25 = (i22 % 74);
                            i25 = (-24017 / i24);
                        } catch (ArithmeticException a_e) {
                        }
                        Test0172.sFld = (short) i21;
                        Test0172.iArrFld[i24] = (int) Test0172.instanceCount;
                        i21 <<= i25;
                        switch ((i18 % 2) + 90) {
                            case 90:
                                if (b2) continue;
                                try {
                                    Test0172.iArrFld[i24] = (-48778 % Test0172.iArrFld[i18 - 1]);
                                    iFld = (i19 % -69);
                                    i19 = (Test0172.iArrFld[i24 + 1] / 60);
                                } catch (ArithmeticException a_e) {
                                }
                                Test0172.sFld -= (short) i22;
                                Test0172.fFld += (i24 * i24);
                                break;
                            case 91:
                                i25 >>= Test0172.iFld1;
                        }
                    }
                } else {
                    if (b2) break;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 b2 = " + i24 + "," + i25 + "," + (b2 ? 1 : 0));

        FuzzerUtils.out.println("Test0172.instanceCount Test0172.fFld Test0172.sFld = " + Test0172.instanceCount + "," +
                Float.floatToIntBits(Test0172.fFld) + "," + Test0172.sFld);
        FuzzerUtils.out.println("iFld dFld Test0172.iFld1 = " + iFld + "," + Double.doubleToLongBits(dFld) + "," +
                Test0172.iFld1);
        FuzzerUtils.out.println("Test0172.lArrFld Test0172.fArrFld Test0172.iArrFld = " + FuzzerUtils.checkSum(Test0172.lArrFld) + ","
                + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0172.fArrFld)) + "," + FuzzerUtils.checkSum(Test0172.iArrFld));
        FuzzerUtils.out.println("Test0172.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0172.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
