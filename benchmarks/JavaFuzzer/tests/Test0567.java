// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test0567 {

    public static final int N = 400;

    public static long instanceCount = 8576528951659013060L;
    public static float fFld = 0.712F;
    public static int iFld = 14;
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0567.lArrFld, 2L);
    }

    public static int iMeth() {

        int i10 = -21;
        int i11 = -31704;
        int i12 = 52280;
        int i13 = 14;
        int i14 = 236;
        int i15 = -40073;
        int[][] iArr1 = new int[N][N];
        float f1 = 0.660F;
        boolean b = true;

        FuzzerUtils.init(iArr1, -36741);

        for (i10 = 1; i10 < 170; ++i10) {
            i11 = i10;
        }
        i11 *= -8930;
        if (b) {
            iArr1[(i10 >>> 1) % N][(i11 >>> 1) % N] -= i11;
            for (i12 = 294; 7 < i12; --i12) {
                i11 += i11;
                if (false) continue;
                for (i14 = 1; 6 > i14; ++i14) {
                    try {
                        i13 = (i12 / i14);
                        i13 = (975690463 / i15);
                        i15 = (i10 / i13);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0567.instanceCount += (((i14 * i15) + Test0567.instanceCount) - Test0567.fFld);
                    f1 = 1;
                    while (++f1 < 2) {
                        i15 <<= i14;
                        i15 = i13;
                    }
                    i15 *= i11;
                }
            }
        } else {
            i11 -= i10;
        }
        long meth_res = i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
                FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i3, double d, int i4) {

        long l = 8545415547257197446L, l1 = 3089346415L;
        int i5 = 3;
        int i6 = 7;
        int i7 = -53566;
        int i8 = 104;
        int i9 = 7;
        int[] iArr = new int[N];
        float f = 0.707F;
        float[][] fArr = new float[N][N];
        short s = -9067;
        boolean b1 = false;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(dArr, 38.121088);
        FuzzerUtils.init(fArr, 91.874F);

        i4 += i4;
        for (l = 288; l > 17; l--) {
            for (i6 = 1; i6 < 6; ++i6) {
                for (i8 = i6; 2 > i8; i8++) {
                    iArr[i6] *= (int) (i3 *= (int) d);
                    d = (iArr[i6 - 1]++);
                    i7 >>= (iArr[i6] / ((i4 - (++iArr[i8])) | 1));
                    switch ((((((int) (l + f)) >>> 1) % 10) * 5) + 59) {
                        case 83:
                            Test0567.lArrFld[i8 + 1] *= Math.max(-10, Integer.reverseBytes(i5));
                            i9 = (int) dArr[(i4 >>> 1) % N];
                            fArr = (fArr = (fArr = (fArr = fArr)));
                            s -= (short) Math.sqrt(dArr[i8 - 1]);
                            break;
                        case 60:
                            i3 *= Math.abs(i4++);
                            i4 *= Integer.reverseBytes(-Math.abs(i9));
                            break;
                        case 67:
                            i4 -= (int) ((l + -16817L) + (f - i9));
                            break;
                        case 65:
                            if (i9 != 0) {
                                vMeth1_check_sum += i3 + Double.doubleToLongBits(d) + i4 + l + i5 + i6 + i7 + i8 + i9 +
                                        Float.floatToIntBits(f) + s + l1 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                                return;
                            }
                            break;
                        case 101:
                            if ((((l / (i5 | 1)) + iArr[i6 + 1]) + iMeth()) != Test0567.instanceCount) continue;
                            break;
                        case 98:
                            l1 = i6;
                            break;
                        case 62:
                            i9 -= i9;
                        case 78:
                            i5 += (int) d;
                            break;
                        case 103:
                            i7 -= i3;
                        case 77:
                            b1 = b1;
                            break;
                    }
                }
            }
        }
        vMeth1_check_sum += i3 + Double.doubleToLongBits(d) + i4 + l + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f)
                + s + l1 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))
                + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1) {

        int i2 = -54573, i16 = -13, i17 = 23814, i18 = 191, i19 = 0;
        double d1 = -2.32636;
        short s1 = -29760;

        i2 = 1;
        while (++i2 < 228) {
            vMeth1(i2, d1, i);
            i = i;
        }
        i = i2;
        i16 = 1;
        while (++i16 < 146) {
            d1 = i16;
            for (i17 = 1; i17 < 11; ++i17) {
                i1 -= i16;
                switch ((i17 % 1) + 31) {
                    case 31:
                        i += (((i17 * Test0567.fFld) + Test0567.instanceCount) - i17);
                    default:
                        s1 -= (short) -12;
                        i18 += (i17 * i17);
                        i = i2;
                }
                i19 = i1;
                Test0567.fFld += i1;
            }
        }
        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d1) + i16 + i17 + i18 + s1 + i19;
    }

    public static void main(String[] strArr) {

        try {
            Test0567 _instance = new Test0567();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {


        vMeth(13, Test0567.iFld);


        FuzzerUtils.out.println("Test0567.instanceCount Test0567.fFld Test0567.iFld = " + Test0567.instanceCount + "," +
                Float.floatToIntBits(Test0567.fFld) + "," + Test0567.iFld);
        FuzzerUtils.out.println("Test0567.lArrFld = " + FuzzerUtils.checkSum(Test0567.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
