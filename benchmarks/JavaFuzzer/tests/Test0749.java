// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test0749 {

    public static final int N = 400;

    public static volatile long instanceCount = 4L;
    public static int iFld = -20285;
    public static float fFld = 88.238F;
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0749.iArrFld, 210);
        FuzzerUtils.init(Test0749.lArrFld, 242L);
    }

    public byte byFld = 120;

    public static int iMeth() {

        int i7 = -51617, i8 = 57020, i9 = -3, i10 = -31219, i11 = 224, i12 = -33385;
        double d = 50.91658;
        short s = -5233;
        byte by1 = 41;

        Test0749.iFld = Test0749.iFld;
        for (i7 = 3; i7 < 285; i7++) {
            boolean b1 = true;
            b1 = b1;
            for (i9 = 6; i9 > 1; i9 -= 2) {
                for (i11 = 1; i11 < 3; ++i11) {
                    byte by = -120;
                    d = Test0749.fFld;
                    i8 = Test0749.iFld;
                    s >>>= (short) i9;
                    Test0749.iArrFld = Test0749.iArrFld;
                    Test0749.instanceCount += by;
                    Test0749.iArrFld[i7] = i10;
                }
                Test0749.fFld = i12;
                by1 = (byte) 43;
                Test0749.iFld >>= i12;
                s *= (short) i8;
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d) + s + by1;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i5) {

        int i6 = 26697, i13 = 42, i14 = 60406, i15 = -36, i16 = 150, i17 = 12;
        short s1 = 28864;
        float f1 = 1.107F;

        i6 = 1;
        while (++i6 < 372) {
            boolean b2 = true;
            Test0749.instanceCount ^= iMeth();
            Test0749.iFld += (i6 * i6);
            i5 += (((i6 * Test0749.fFld) + Test0749.instanceCount) - Test0749.instanceCount);
            Test0749.iFld += (int) Test0749.instanceCount;
            for (i13 = 1; i13 < 5; i13++) {
                s1 = (short) i5;
            }
            if (b2) continue;
            f1 -= Test0749.fFld;
            i5 -= (int) f1;
        }
        for (i15 = 4; i15 < 139; i15 += 3) {
            Test0749.iFld &= i14;
            Test0749.iArrFld[i15] -= (int) 1.107141;
            Test0749.instanceCount = Test0749.iFld;
            try {
                Test0749.iFld = (i17 % 241);
                i16 = (-239 / Test0749.iArrFld[i15]);
                i5 = (Test0749.iArrFld[i15] % i13);
            } catch (ArithmeticException a_e) {
            }
        }
        vMeth1_check_sum += i5 + i6 + i13 + i14 + s1 + Float.floatToIntBits(f1) + i15 + i16 + i17;
    }

    public static void vMeth(float f, int i) {

        int i1 = 8694;
        int i3 = -715;
        int i4 = 14;
        int i18 = -70;
        int i19 = 2;
        int i20 = 59912;
        int[] iArr = new int[N];
        boolean b = false;
        short s2 = 25373;

        FuzzerUtils.init(iArr, 142);

        iArr[(i >>> 1) % N] <<= (int) (((i + i) - Test0749.instanceCount) - Test0749.instanceCount);
        i1 = 1;
        while (++i1 < 220) {
            if (b) break;
            for (i3 = 1; i3 < 7; i3++) {
                switch (((i1 % 2) * 5) + 23) {
                    case 25:
                        vMeth1(i1);
                        for (i18 = i3; 2 > i18; ++i18) {
                            s2 += (short) i1;
                            Test0749.instanceCount = i3;
                            Test0749.instanceCount ^= -8966417369452192255L;
                            Test0749.instanceCount = Test0749.instanceCount;
                            f -= i20;
                            i19 <<= i3;
                            i20 = 39220;
                            Test0749.iFld >>= i3;
                        }
                    case 31:
                        Test0749.iFld = (int) Test0749.instanceCount;
                        break;
                    default:
                        Test0749.lArrFld[i1 + 1] = i4;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + (b ? 1 : 0) + i3 + i4 + i18 + i19 + s2 + i20 +
                FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0749 _instance = new Test0749();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        boolean b3 = false, b4 = false;
        int i21 = -14579, i22 = -4, i23 = 46028, i24 = 14, i25 = -1;
        short s3 = -3666;

        try {
            if (b3) {
                vMeth(Test0749.fFld, Test0749.iFld);
                Test0749.instanceCount -= Test0749.iFld;
                byFld *= (byte) Test0749.iFld;
                Test0749.iFld -= Test0749.iFld;
            } else {
                if (b4) {
                    i21 = 1;
                    do {
                        Test0749.fFld = s3;
                        for (i22 = 3; i22 < 102; i22++) {
                            Test0749.iFld *= (int) Test0749.instanceCount;
                            i23 = i21;
                            Test0749.lArrFld[i22] = -2721922526L;
                            Test0749.fFld += i21;
                            i24 = -28258;
                            Test0749.iArrFld[i22] = i23;
                            Test0749.iFld <<= Test0749.iFld;
                            switch ((i22 % 5) + 94) {
                                case 94:
                                    Test0749.iArrFld[i22] += i21;
                                    i23 *= i23;
                                    i25 = 1;
                                    do {
                                        Test0749.lArrFld[i21] = i21;
                                        i23 = (int) Test0749.instanceCount;
                                        try {
                                            Test0749.iArrFld[i25] = (-92 % i23);
                                            i23 = (220 % i21);
                                            i23 = (13 % i24);
                                        } catch (ArithmeticException a_e) {
                                        }
                                        i23 *= 123;
                                        i24 += (((i25 * Test0749.fFld) + i24) - Test0749.iFld);
                                    } while (++i25 < 2);
                                    break;
                                case 95:
                                    i24 = (int) -210185070L;
                                    Test0749.instanceCount = i23;
                                    break;
                                case 96:
                                    Test0749.iArrFld[i21] -= i25;
                                    if (b4) continue;
                                case 97:
                                    i24 -= 7;
                                case 98:
                                    Test0749.iFld = (int) -8121445998016085404L;
                                    break;
                                default:
                                    i24 -= i24;
                            }
                        }
                    } while (++i21 < 247);
                } else {
                    Test0749.fFld = i21;
                }
            }
        } catch (ArithmeticException exc1) {
            i24 <<= i22;
        }

        FuzzerUtils.out.println("b3 i21 s3 = " + (b3 ? 1 : 0) + "," + i21 + "," + s3);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 b4 = " + i25 + "," + (b4 ? 1 : 0));

        FuzzerUtils.out.println("Test0749.instanceCount Test0749.iFld Test0749.fFld = " + Test0749.instanceCount + "," + Test0749.iFld +
                "," + Float.floatToIntBits(Test0749.fFld));
        FuzzerUtils.out.println("byFld Test0749.iArrFld Test0749.lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test0749.iArrFld)
                + "," + FuzzerUtils.checkSum(Test0749.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
