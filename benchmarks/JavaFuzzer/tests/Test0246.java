// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test0246 {

    public static final int N = 400;

    public static long instanceCount = 4276250345389369984L;
    public static volatile int iFld = -52822;
    public static float fFld = 0.406F;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0246.iArrFld, 228);
    }

    public static void vMeth2(int i3) {

        int i4 = -6636, i5 = -18065, i6 = -8, i7 = -57093, i8 = 76;
        float f1 = 0.499F;
        boolean b = true;
        double d = 89.115039;

        i4 = 1;
        while (++i4 < 309) {
            Test0246.iFld = (int) f1;
            switch (((i4 % 3) * 5) + 17) {
                case 29:
                    switch (((i4 >>> 1) % 7) + 22) {
                        case 22:
                            Test0246.iFld -= Test0246.iFld;
                            Test0246.instanceCount = i3;
                        case 23:
                            Test0246.iFld *= Test0246.iFld;
                            for (i5 = 1; i5 < 5; i5++) {
                                i6 -= Test0246.iFld;
                                for (i7 = 1; 2 > i7; ++i7) {
                                    i8 >>>= i3;
                                    if (b) continue;
                                    i8 = i6;
                                    if (b) continue;
                                    b = b;
                                }
                            }
                        case 24:
                            Test0246.iArrFld = Test0246.iArrFld;
                            break;
                        case 25:
                            if (i8 != 0) {
                                vMeth2_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + (b ? 1 : 0) +
                                        Double.doubleToLongBits(d);
                                return;
                            }
                            break;
                        case 26:
                            i8 *= i7;
                            break;
                        case 27:
                            Test0246.iFld ^= i3;
                            break;
                        case 28:
                            d = -46.78569;
                        default:
                            Test0246.instanceCount += (((i4 * i6) + i8) - Test0246.instanceCount);
                    }
                    break;
                case 30:
                    i8 += (((i4 * i4) + Test0246.instanceCount) - Test0246.instanceCount);
                    break;
                case 22:
                    i6 -= i7;
                    break;
                default:
                    i6 *= 63403;
            }
        }
        vMeth2_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + (b ? 1 : 0) +
                Double.doubleToLongBits(d);
    }

    public static void vMeth1(int i, int i1) {

        int i2 = 10;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, 20132L);

        i2 = 1;
        while (++i2 < 256) {
            lArr[i2][i2 - 1] *= ((++Test0246.instanceCount) - ((--i1) + (i * 54342)));
            vMeth2(i2);
        }
        Test0246.fFld -= i1;
        vMeth1_check_sum += i + i1 + i2 + FuzzerUtils.checkSum(lArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0246 _instance = new Test0246();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth() {

        float f = 0.441F;
        int i9 = 7, i10 = 177, i11 = -12, i12 = -3, i13 = 137, i14 = -9;
        double d1 = 0.61487;
        boolean b1 = true;

        Test0246.iFld = (int) (((Test0246.instanceCount++) + (-(Test0246.instanceCount++))) - f);
        vMeth1(Test0246.iFld, Test0246.iFld);
        Test0246.iArrFld = Test0246.iArrFld;
        Test0246.iArrFld[(Test0246.iFld >>> 1) % N] >>= 240;
        for (i9 = 2; i9 < 244; ++i9) {
            for (i11 = 1; i11 < 7; i11++) {
                for (i13 = 1; i13 < 2; i13 += 2) {
                    if (b1) {
                        i10 ^= i10;
                        Test0246.iArrFld[i11 + 1] ^= i10;
                    } else if (b1) {
                        d1 *= i10;
                        Test0246.iArrFld[i13 - 1] -= (int) Test0246.instanceCount;
                    }
                    i10 += i13;
                    Test0246.iFld -= i14;
                    if (false) continue;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) +
                (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i15 = -35137, i16 = 6, i17 = -236, i18 = 63, i19 = -8, i20 = -7, i21 = -9;
        boolean b2 = false;
        double d2 = 2.77855;
        float f2 = 0.992F;
        byte by = 114;
        short s = 19212;

        vMeth();
        i15 = 1;
        do {
            if (b2) continue;
            Test0246.iFld *= i15;
            for (d2 = 6; d2 < 107; ++d2) {
                i16 = (int) Test0246.fFld;
                i16 = -60258;
                Test0246.instanceCount = i15;
                for (f2 = 1; f2 < 2; f2++) {
                    i16 += (int) (f2 * f2);
                    Test0246.instanceCount += (long) f2;
                    Test0246.instanceCount = by;
                    Test0246.fFld *= Test0246.instanceCount;
                    if (b2) {
                        i17 = (int) Test0246.instanceCount;
                    } else {
                        i16 = i15;
                        i16 += i16;
                        try {
                            i17 = (i15 / 63279);
                            i16 = (-248 % i17);
                            i17 = (i17 % i17);
                        } catch (ArithmeticException a_e) {
                        }
                    }
                    if (b2) continue;
                    i16 -= 128;
                    s += (short) (f2 - f2);
                    i16 >>= i17;
                }
                Test0246.fFld -= i16;
            }
            for (i18 = 4; i18 < 107; i18 += 3) {
                i16 |= i15;
                Test0246.iFld = Test0246.iFld;
            }
            Test0246.instanceCount >>= i16;
        } while (++i15 < 235);
        for (i20 = 2; 223 > i20; ++i20) {
            Test0246.fFld += i20;
            if (b2) break;
        }

        FuzzerUtils.out.println("i15 b2 d2 = " + i15 + "," + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i16 f2 i17 = " + i16 + "," + Float.floatToIntBits(f2) + "," + i17);
        FuzzerUtils.out.println("by s i18 = " + by + "," + s + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);

        FuzzerUtils.out.println("Test0246.instanceCount Test0246.iFld Test0246.fFld = " + Test0246.instanceCount + "," + Test0246.iFld +
                "," + Float.floatToIntBits(Test0246.fFld));
        FuzzerUtils.out.println("Test0246.iArrFld = " + FuzzerUtils.checkSum(Test0246.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
