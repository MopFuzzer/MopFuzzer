// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test0425 {

    public static final int N = 400;

    public static long instanceCount = -867369845L;
    public static float fFld = 2.273F;
    public static int iFld = 9;
    public static boolean[] bArrFld = new boolean[N];
    public static int[] iArrFld = new int[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0425.bArrFld, true);
        FuzzerUtils.init(Test0425.iArrFld, 11);
        FuzzerUtils.init(Test0425.lArrFld, -10L);
    }

    public static void vMeth1() {

        int i5 = 0;
        int i6 = -96;
        int i7 = 36309;
        int i8 = -10;
        int[] iArr = new int[N];
        boolean b = true;
        long l1 = 82L;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr, 41);
        FuzzerUtils.init(dArr, 72.23338);

        for (i5 = 19; i5 < 341; i5++) {
            iArr[i5 - 1] = i5;
            i6 = Test0425.iFld;
            Test0425.bArrFld[i5 + 1] = b;
            l1 = 1;
            while (++l1 < 5) {
                for (i7 = 1; i7 < 1; i7++) {
                    Test0425.instanceCount -= l1;
                    dArr[i5 + 1] = l1;
                    i8 += (((i7 * Test0425.fFld) + l1) - i5);
                    if (i6 != 0) {
                        vMeth1_check_sum += i5 + i6 + (b ? 1 : 0) + l1 + i7 + i8 + FuzzerUtils.checkSum(iArr) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    if (b) {
                        i6 -= i8;
                        try {
                            iArr[i7] = (Test0425.iFld / i6);
                            i6 = (i6 / 18);
                            i8 = (i6 % iArr[i7 + 1]);
                        } catch (ArithmeticException a_e) {
                        }
                        Test0425.instanceCount ^= i6;
                        i8 -= i7;
                    } else {
                        Test0425.iFld += (((i7 * Test0425.instanceCount) + Test0425.instanceCount) - i6);
                        vMeth1_check_sum += i5 + i6 + (b ? 1 : 0) + l1 + i7 + i8 + FuzzerUtils.checkSum(iArr) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + (b ? 1 : 0) + l1 + i7 + i8 + FuzzerUtils.checkSum(iArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(long l) {

        double d = -42.10508;
        int i3 = 49208, i4 = -183;
        byte by = 39;
        boolean b1 = false;
        short s = -24947;

        Test0425.instanceCount <<= (long) ((++Test0425.fFld) - ((long) (Test0425.iFld - d) >>> (Test0425.instanceCount * Test0425.iFld)));
        for (i3 = 1; 321 > i3; i3++) {
            vMeth1();
            switch ((((Test0425.iFld >>> 1) % 5) * 5) + 48) {
                case 63:
                    by &= (byte) Test0425.iFld;
                    Test0425.bArrFld[i3] = b1;
                    break;
                case 53:
                    i4 += i3;
                    d += i3;
                    Test0425.iFld -= s;
                    break;
                case 58:
                    Test0425.iFld += i3;
                    i4 ^= (int) l;
                    Test0425.fFld = i4;
                    Test0425.iFld *= Test0425.iFld;
                    break;
                case 68:
                    b1 = b1;
                    Test0425.iFld += (((i3 * Test0425.fFld) + i4) - Test0425.iFld);
                case 60:
                    i4 *= 19;
                    break;
            }
        }
        long meth_res = l + Double.doubleToLongBits(d) + i3 + i4 + by + (b1 ? 1 : 0) + s;
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i2) {

        double d1 = -1.72491;
        int i9 = -50, i10 = 4, i11 = -52;
        short s1 = -2848;
        boolean b2 = true;
        byte[][] byArr = new byte[N][N];

        FuzzerUtils.init(byArr, (byte) 119);

        byArr[(i2 >>> 1) % N][(i2 >>> 1) % N] = (byte) (i2 + iMeth(Test0425.instanceCount));
        for (d1 = 7; d1 < 180; ++d1) {
            i2 <<= s1;
            Test0425.fFld *= i2;
            Test0425.iFld -= i2;
            if (b2) break;
        }
        for (i10 = 2; i10 < 303; i10++) {
            Test0425.iArrFld[i10 + 1] = Test0425.iFld;
            Test0425.instanceCount += (((i10 * i2) + i10) - i10);
            Test0425.instanceCount += i11;
            Test0425.iArrFld[i10] = i9;
        }
        Test0425.fFld -= Test0425.instanceCount;
        Test0425.fFld *= -14;
        vMeth_check_sum += i2 + Double.doubleToLongBits(d1) + i9 + s1 + (b2 ? 1 : 0) + i10 + i11 +
                FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0425 _instance = new Test0425();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -1, i1 = 148, i13 = -32, i14 = -31971, i15 = -80;
        byte by1 = 44;
        byte[] byArr1 = new byte[N];
        float f = 0.142F;
        boolean b3 = false;
        double[] dArr1 = new double[N];

        FuzzerUtils.init(dArr1, -1.86910);
        FuzzerUtils.init(byArr1, (byte) -52);

        for (i = 2; i < 178; ++i) {
            vMeth(i1);
            Test0425.instanceCount = by1;
            if (true) {
                for (i13 = 1; i13 < 143; i13 += 3) {
                    Test0425.iFld = i1;
                    Test0425.lArrFld[i13] = i13;
                    Test0425.iFld += i14;
                    switch ((i % 1) + 105) {
                        case 105:
                            Test0425.iFld += i1;
                            Test0425.instanceCount <<= Test0425.iFld;
                            if (false) {
                                dArr1[i13] -= -12.15396;
                                i14 *= (int) Test0425.instanceCount;
                                i1 += (((i13 * i1) + i1) - Test0425.fFld);
                            } else {
                                byArr1 = byArr1;
                            }
                        default:
                            i14 += i13;
                            switch (((i % 2) * 5) + 25) {
                                case 29:
                                    Test0425.instanceCount = Test0425.iFld;
                                    for (f = i13; 4 > f; ++f) {
                                        i15 = 10;
                                        i15 = (int) -3713782970L;
                                    }
                                    break;
                                case 31:
                                    Test0425.iFld -= Test0425.iFld;
                                    i14 = (int) Test0425.fFld;
                                    break;
                            }
                    }
                    Test0425.fFld = i14;
                    Test0425.fFld += 158;
                    i1 += (i13 | Test0425.instanceCount);
                }
                Test0425.iArrFld[i] += i1;
                i1 += (((i * i1) + i15) - i14);
            } else if (b3) {
                Test0425.fFld = i1;
            } else {
                by1 += (byte) i;
            }
        }

        FuzzerUtils.out.println("i i1 by1 = " + i + "," + i1 + "," + by1);
        FuzzerUtils.out.println("i13 i14 f = " + i13 + "," + i14 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i15 b3 dArr1 = " + i15 + "," + (b3 ? 1 : 0) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));
        FuzzerUtils.out.println("byArr1 = " + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test0425.instanceCount Test0425.fFld Test0425.iFld = " + Test0425.instanceCount + "," +
                Float.floatToIntBits(Test0425.fFld) + "," + Test0425.iFld);
        FuzzerUtils.out.println("Test0425.bArrFld Test0425.iArrFld Test0425.lArrFld = " + FuzzerUtils.checkSum(Test0425.bArrFld) + ","
                + FuzzerUtils.checkSum(Test0425.iArrFld) + "," + FuzzerUtils.checkSum(Test0425.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
