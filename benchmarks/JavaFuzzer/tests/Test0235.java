// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0235 {

    public static final int N = 400;

    public static long instanceCount = -12L;
    public static double dFld = 1.11435;
    public static int iFld = 10;
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0235.iArrFld, -4);
    }

    public int iFld1 = 2;
    public float fFld = -2.237F;
    public double[] dArrFld = new double[N];

    public static void vMeth2(int i6) {

        int i8 = 5, i9 = -99;
        boolean b = false;
        byte by1 = -54;

        i6 >>= i6;
        try {
            switch (((-56140 >>> 1) % 2) + 29) {
                case 29:
                    i6 <<= i6;
                    for (int i7 : Test0235.iArrFld) {
                        i8 = 1;
                        while (++i8 < 4) {
                            i7 *= (int) Test0235.instanceCount;
                        }
                    }
                    Test0235.dFld *= i8;
                    break;
                case 30:
            }
            b = b;
            i6 -= (int) Test0235.instanceCount;
        } catch (ArrayIndexOutOfBoundsException exc1) {
            i6 <<= 14629;
            i9 = 193;
            do {
                by1 = (byte) i9;
                Test0235.instanceCount += i6;
            } while (--i9 > 0);
            Test0235.iArrFld[(i8 >>> 1) % N] ^= (int) Test0235.instanceCount;
        } finally {
            i6 = i9;
        }
        vMeth2_check_sum += i6 + i8 + (b ? 1 : 0) + i9 + by1;
    }

    public static void vMeth1(int i4) {

        int i5 = 54, i10 = 20428, i11 = 20;
        short s = 27462;
        float f = -109.587F;
        double d = -7.35850;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 2268L);

        i5 = 1;
        while (++i5 < 190) {
            Test0235.iArrFld[i5] = (int) (i4 + ((s * Test0235.instanceCount) * (Test0235.instanceCount++)));
            Test0235.instanceCount >>= -1;
            vMeth2(i4);
            for (i10 = 1; i10 < 8; ++i10) {
                f = i11;
                i4 = (int) Test0235.instanceCount;
                d = 2;
                while (--d > 0) {
                    lArr[i5 + 1] *= -3L;
                    f /= (s | 1);
                    i11 = (int) Test0235.instanceCount;
                    i4 += i10;
                    i11 = i11;
                    i4 = (int) -105L;
                    Test0235.instanceCount -= -236L;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + s + i10 + i11 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) +
                FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1) {

        int i2 = 6, i3 = 1871, i12 = 0, i13 = -199, i14 = -35192;
        long l = -88L;
        byte by = 27;
        byte[] byArr = new byte[N];
        float f1 = -16.742F;
        boolean b1 = true;

        FuzzerUtils.init(byArr, (byte) -93);

        i2 = 1;
        do {
            for (l = 5; l > 1; --l) {
                Test0235.instanceCount += by;
            }
            vMeth1(i1);
            i1 += (i2 * i2);
            f1 = i3;
            for (i12 = i2; i12 < 5; i12++) {
                i14 = 1;
                do {
                    i1 = i14;
                } while (++i14 < 1);
                if (i12 != 0) {
                    vMeth_check_sum += i1 + i2 + l + i3 + by + Float.floatToIntBits(f1) + i12 + i13 + i14 + (b1 ? 1 :
                            0) + FuzzerUtils.checkSum(byArr);
                    return;
                }
                Test0235.iArrFld[i2 - 1] = i13;
                switch ((i2 % 6) + 73) {
                    case 73:
                    case 74:
                        f1 += i1;
                        i3 += (i12 | i12);
                        byArr[i2 + 1] = (byte) i12;
                    case 75:
                        i1 *= by;
                        break;
                    case 76:
                        Test0235.dFld -= i3;
                        break;
                    case 77:
                        Test0235.iArrFld[i12 - 1] = i13;
                        break;
                    case 78:
                        if (b1) continue;
                        break;
                }
            }
        } while (++i2 < 365);
        vMeth_check_sum += i1 + i2 + l + i3 + by + Float.floatToIntBits(f1) + i12 + i13 + i14 + (b1 ? 1 : 0) +
                FuzzerUtils.checkSum(byArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0235 _instance = new Test0235();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 0, i15 = -118, i16 = -33278, i17 = 92, i18 = 57, i19 = -12, i20 = -17436;
        double d1 = 1.110205;
        long[] lArr1 = new long[N];
        short[] sArr = new short[N];

        FuzzerUtils.init(lArr1, -7992L);
        FuzzerUtils.init(sArr, (short) -14383);

        Test0235.instanceCount >>= (Test0235.instanceCount++);
        Test0235.dFld -= ((Test0235.iArrFld[(i >>> 1) % N] += (int) (Test0235.instanceCount + Test0235.dFld)) + Math.max(i--, i - i));
        vMeth(Test0235.iFld);
        Test0235.iArrFld[(Test0235.iFld >>> 1) % N] ^= 14;
        Test0235.instanceCount -= i;
        Test0235.iFld |= (int) Test0235.instanceCount;
        switch ((((i >>> 1) % 10) * 5) + 16) {
            case 51:
            case 25:
                i >>= i;
                break;
            case 33:
                for (d1 = 4; d1 < 182; d1++) {
                    Test0235.iArrFld[(int) (d1 - 1)] *= Test0235.iFld;
                    i16 = 1;
                    while (++i16 < 141) {
                        Test0235.instanceCount |= iFld1;
                        Test0235.iArrFld[i16 - 1] = (int) 6068204940564424954L;
                        lArr1[i16 - 1] -= Test0235.iFld;
                        Test0235.instanceCount = i;
                    }
                    Test0235.instanceCount += (long) d1;
                }
                lArr1[(iFld1 >>> 1) % N] <<= Test0235.instanceCount;
                Test0235.iFld &= -26750;
                Test0235.instanceCount *= i16;
                break;
            case 53:
                for (short s1 : sArr) {
                    i15 -= 31;
                    Test0235.instanceCount = i;
                    for (i17 = 2; i17 < 63; i17++) {
                        lArr1[i17 - 1] = Test0235.iFld;
                        Test0235.instanceCount -= -173;
                        i15 -= (int) -1.843F;
                        i18 += (i17 + Test0235.iFld);
                        for (i19 = 1; 2 > i19; i19 += 3) {
                            i18 += (((i19 * Test0235.instanceCount) + Test0235.instanceCount) - Test0235.iFld);
                            Test0235.dFld = i20;
                        }
                    }
                }
                break;
            case 60:
                fFld -= Test0235.instanceCount;
            case 47:
                i15 *= 27;
            case 32:
                Test0235.iArrFld[(i15 >>> 1) % N] *= (int) Test0235.instanceCount;
                break;
            case 26:
                dArrFld[(Test0235.iFld >>> 1) % N] = i16;
                break;
            case 62:
                i15 = 31;
                break;
            case 49:
                i18 = (int) Test0235.instanceCount;
                break;
        }

        FuzzerUtils.out.println("i d1 i15 = " + i + "," + Double.doubleToLongBits(d1) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 lArr1 = " + i19 + "," + i20 + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0235.instanceCount Test0235.dFld Test0235.iFld = " + Test0235.instanceCount + "," +
                Double.doubleToLongBits(Test0235.dFld) + "," + Test0235.iFld);
        FuzzerUtils.out.println("iFld1 fFld Test0235.iArrFld = " + iFld1 + "," + Float.floatToIntBits(fFld) + "," +
                FuzzerUtils.checkSum(Test0235.iArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
