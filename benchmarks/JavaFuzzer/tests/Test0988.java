// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test0988 {

    public static final int N = 400;

    public static long instanceCount = -13L;
    public static byte byFld = 62;
    public static short sFld = 19094;
    public static double dFld = 107.23490;
    public static int[][] iArrFld = new int[N][N];
    public static long[] lArrFld = new long[N];
    public static float[] fArrFld = new float[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0988.iArrFld, 29014);
        FuzzerUtils.init(Test0988.lArrFld, -2L);
        FuzzerUtils.init(Test0988.fArrFld, 58.141F);
    }

    public int iFld = 109;
    public volatile float fFld = -55.814F;

    public static void vMeth2() {

        int i10 = -37635, i11 = -219, i12 = 24708, i13 = 10, i14 = -9, i15 = 9;
        boolean b = true;
        float f2 = 92.900F;
        float[][] fArr = new float[N][N];

        FuzzerUtils.init(fArr, -12.155F);

        fArr[(i10 >>> 1) % N][(i10 >>> 1) % N] -= (float) Test0988.dFld;
        for (i11 = 7; 256 > i11; i11++) {
            i13 *= i11;
            Test0988.iArrFld[i11 + 1][i11 + 1] |= 42662;
            for (i14 = 1; i14 < 7; ++i14) {
                Test0988.instanceCount >>>= i15;
                Test0988.iArrFld[i14][i11 - 1] &= i14;
                Test0988.dFld += i13;
                b = true;
                Test0988.lArrFld[i14 - 1] += Test0988.instanceCount;
                i10 = (int) f2;
                i15 += i14;
                f2 += (((i14 * i12) + Test0988.instanceCount) - f2);
                Test0988.iArrFld[i14 + 1][i14 - 1] -= (int) Test0988.dFld;
            }
            Test0988.byFld -= (byte) f2;
        }
        vMeth2_check_sum += i10 + i11 + i12 + i13 + i14 + i15 + (b ? 1 : 0) + Float.floatToIntBits(f2) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(float f1, int i2, long l) {

        int i3 = 13, i4 = -242, i5 = 5, i6 = 0, i7 = 4, i8 = 522, i9 = 5, i16 = -30, i17 = 6980;
        double[] dArr = new double[N];

        FuzzerUtils.init(dArr, -1.96152);

        i2 = (int) ((f1 -= (-56314 + (i2 + Test0988.sFld))) * (45473 - (i2 <<= Test0988.sFld)));
        for (i3 = 8; i3 < 205; ++i3) {
            for (i5 = i3; i5 < 8; ++i5) {
                dArr[i3 - 1] *= Float.intBitsToFloat(--i6);
                Test0988.lArrFld[i3] *= Test0988.lArrFld[i3 + 1];
                i4 = (int) ((Test0988.dFld - (-i4)) + ((Test0988.dFld + Test0988.byFld) + i2));
            }
            i4 = Math.abs((int) ((-51316 + (Test0988.instanceCount - l)) + (i6 - Test0988.dFld)));
            for (i7 = 1; i7 < 8; ++i7) {
                i9 += (((i7 * i9) + f1) - i2);
                vMeth2();
                for (i16 = i3; i16 < 2; i16++) {
                    i4 >>= i3;
                }
                l -= (long) f1;
                i8 *= i16;
                Test0988.instanceCount = -170;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i2 + l + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i16 + i17 +
                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        float f = 24.643F;
        float[] fArr1 = new float[N];
        int i = -10, i1 = -61635, i18 = -47904, i19 = -31413;
        long[][] lArr = new long[N][N];

        FuzzerUtils.init(lArr, 1163L);
        FuzzerUtils.init(fArr1, 0.170F);

        Test0988.byFld += (byte) f;
        i = 317;
        while (--i > 0) {
            i1 = (int) (lArr[i - 1][i + 1] + Test0988.sFld);
            vMeth1(f, i1, 57629L);
            i1 -= (int) 1.587F;
            i1 >>= i1;
            for (i18 = 1; i18 < 5; i18++) {
                boolean b1 = false;
                switch (((i18 % 4) * 5) + 70) {
                    case 80:
                        i19 = 32364;
                        if (b1) continue;
                        break;
                    case 72:
                    case 83:
                        i1 &= i;
                        i19 -= (int) 1811429848L;
                        break;
                    case 75:
                        Test0988.iArrFld[i18 - 1][i + 1] *= i1;
                        break;
                }
            }
            fArr1[i + 1] *= i;
            i1 = i;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i18 + i19 + FuzzerUtils.checkSum(lArr) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void main(String[] strArr) {

        try {
            Test0988 _instance = new Test0988();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i20 = 0, i21 = 8, i22 = -31589, i23 = -9, i24 = -9966, i25 = 107, i26 = -4, i27 = 78;
        boolean b2 = true;
        short[] sArr = new short[N];

        FuzzerUtils.init(sArr, (short) -10311);

        sArr[(-70 >>> 1) % N] >>= (short) ((iFld * 1.10909) + (Test0988.iArrFld[(iFld >>> 1) % N][(iFld >>> 1) % N] +
                Test0988.iArrFld[(iFld >>> 1) % N][(iFld >>> 1) % N]));
        iFld += (int) Test0988.instanceCount;
        vMeth();
        Test0988.fArrFld[(iFld >>> 1) % N] = fFld;
        for (i20 = 16; i20 < 261; ++i20) {
            Test0988.instanceCount += Test0988.instanceCount;
            switch ((i20 % 5) + 53) {
                case 53:
                    for (i22 = 103; i22 > i20; i22 -= 2) {
                        switch ((((i23 >>> 1) % 2) * 5) + 57) {
                            case 58:
                                i23 += Test0988.byFld;
                            case 66:
                                iFld += (int) Test0988.instanceCount;
                            default:
                                Test0988.fArrFld[i22] -= i21;
                                iFld &= 30384;
                        }
                        Test0988.instanceCount -= i23;
                        i21 += (i22 * i22);
                        for (i24 = 1; i24 < 1; ++i24) {
                            Test0988.fArrFld = FuzzerUtils.float1array(N, (float) 64.647F);
                            i21 ^= i24;
                            Test0988.iArrFld[i24 + 1][i22 - 1] <<= i20;
                            if (true) continue;
                            Test0988.iArrFld[i22 + 1][i24 + 1] = 53678;
                            i25 -= -58927;
                            fFld = i25;
                            iFld = i22;
                            switch (((i23 >>> 1) % 9) + 29) {
                                case 29:
                                    switch (((i22 % 8) * 5) + 35) {
                                        case 50:
                                            i23 += i25;
                                            i21 = (int) -127L;
                                            i23 = i25;
                                            fFld *= Test0988.instanceCount;
                                            break;
                                        case 54:
                                            fFld = i26;
                                            break;
                                        case 56:
                                            Test0988.dFld += -77;
                                            break;
                                        case 74:
                                            i25 += (i24 * i24);
                                        case 57:
                                            i26 *= (int) Test0988.instanceCount;
                                            break;
                                        case 60:
                                            fFld = -60763;
                                            break;
                                        case 71:
                                            Test0988.fArrFld = Test0988.fArrFld;
                                            break;
                                        case 49:
                                            i26 = i21;
                                            break;
                                        default:
                                            fFld -= i20;
                                    }
                                    break;
                                case 30:
                                    i26 += (int) Test0988.instanceCount;
                                    break;
                                case 31:
                                    i23 *= i23;
                                    break;
                                case 32:
                                    iFld += (12486 + (i24 * i24));
                                    break;
                                case 33:
                                    if (b2) continue;
                                case 34:
                                    fFld += 1.987F;
                                    break;
                                case 35:
                                    Test0988.instanceCount += i21;
                                    break;
                                case 36:
                                    Test0988.sFld += (short) 113;
                                    break;
                                case 37:
                                    iFld -= i27;
                                    break;
                            }
                        }
                    }
                    break;
                case 54:
                    i23 -= i24;
                    break;
                case 55:
                    Test0988.instanceCount += i20;
                    break;
                case 56:
                    Test0988.dFld *= fFld;
                    break;
                case 57:
                    Test0988.iArrFld[i20 - 1][i20] = i26;
                    break;
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 b2 i27 = " + i26 + "," + (b2 ? 1 : 0) + "," + i27);
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test0988.instanceCount iFld Test0988.byFld = " + Test0988.instanceCount + "," + iFld + "," +
                Test0988.byFld);
        FuzzerUtils.out.println("Test0988.sFld Test0988.dFld fFld = " + Test0988.sFld + "," + Double.doubleToLongBits(Test0988.dFld) +
                "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test0988.iArrFld Test0988.lArrFld Test0988.fArrFld = " + FuzzerUtils.checkSum(Test0988.iArrFld) + ","
                + FuzzerUtils.checkSum(Test0988.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0988.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
