// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test0640 {

    public static final int N = 400;

    public static long instanceCount = 10L;
    public static int iFld = 8;
    public static volatile boolean bFld = false;
    public static float[] fArrFld = new float[N];
    public static int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0640.fArrFld, 108.313F);
        FuzzerUtils.init(Test0640.iArrFld, -6);
        FuzzerUtils.init(Test0640.dArrFld, -19.2733);
    }

    public static double dMeth() {

        float f1 = -1.118F, f2 = -2.23F;
        int i9 = 129;
        int i10 = 51957;
        int i11 = 1;
        int i12 = 7928;
        int[] iArr = new int[N];
        short s1 = -147;
        long[][] lArr1 = new long[N][N];

        FuzzerUtils.init(lArr1, 860887002987794478L);
        FuzzerUtils.init(iArr, 11);

        lArr1[(Test0640.iFld >>> 1) % N][(Test0640.iFld >>> 1) % N] = Test0640.iFld;
        if (Test0640.bFld) {
            for (f1 = 9; f1 < 309; ++f1) {
                Test0640.iFld += (int) (((f1 * i9) + s1) - f1);
                i10 = 1;
                while (++i10 < 6) {
                    i9 = (int) Test0640.instanceCount;
                    Test0640.iFld += (-199 + (i10 * i10));
                    Test0640.instanceCount += (((i10 * Test0640.iFld) + Test0640.iFld) - i9);
                    i9 = i10;
                    for (i11 = 1; 1 > i11; ++i11) {
                        iArr[i11 + 1] <<= -9882;
                        Test0640.instanceCount |= Test0640.iFld;
                        Test0640.instanceCount = Test0640.iFld;
                        Test0640.instanceCount = i10;
                        Test0640.instanceCount = i9;
                    }
                }
            }
        } else if (Test0640.bFld) {
            f2 = s1;
        } else if (Test0640.bFld) {
            iArr[(24589 >>> 1) % N] >>= (int) Test0640.instanceCount;
        } else {
            Test0640.iFld <<= Test0640.iFld;
        }
        long meth_res = Float.floatToIntBits(f1) + i9 + s1 + i10 + i11 + i12 + Float.floatToIntBits(f2) +
                FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static int iMeth() {

        int i4 = -155;
        int i5 = 8;
        int i6 = -7;
        int i7 = -249;
        int i8 = 207;
        int i13 = -220;
        int[] iArr1 = new int[N];
        float f = 2.531F;
        double d = -73.53568;
        short s = 307;
        short[] sArr = new short[N];
        boolean b = false;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(sArr, (short) -12077);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, -57991);

        Test0640.iFld = ((++Test0640.iFld) + (Test0640.iFld + (Test0640.iFld - Test0640.iFld)));
        i4 *= (int) ((f * (Test0640.iFld--)) * ((long) (d + Test0640.iFld) >>> (Test0640.instanceCount - i4)));
        i4 = (int) (Test0640.instanceCount + ((Test0640.iFld & i4) + (f * f)));
        sArr[(-17982 >>> 1) % N] = (short) ((Test0640.iFld = (int) (d * i4)) * (Test0640.fArrFld[(i4 >>> 1) % N]++));
        for (i5 = 14; i5 < 332; i5++) {
            for (i7 = 1; i7 < 5; i7++) {
                s += (short) (51418 + (i7 * i7));
                i8 = i8;
                bArr[i7 + 1] = (b = ((d--) >= d));
            }
            dMeth();
            Test0640.iFld = i5;
            i13 = 13;
            iArr1[i5 - 1] *= (int) Test0640.instanceCount;
            Test0640.iFld += (int) Test0640.instanceCount;
            iArr1[i5 + 1] &= (int) Test0640.instanceCount;
        }
        long meth_res = i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + s + (b ? 1 : 0)
                + i13 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(long l, long l1) {

        int i2 = 40379;
        int i3 = 95;
        int i14 = -18;
        int i15 = -38314;
        int i16 = -9;
        int i17 = -60400;
        int i18 = -1;
        int[] iArr2 = new int[N];
        float f3 = 0.919F, f4 = 28.642F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(iArr2, -6);

        for (i2 = 16; i2 < 268; i2++) {
            l1 += i2;
            lArr[i2] = (long) (((i3 * 14.577F) - iMeth()) / (i3 | 1));
        }
        i3 -= i2;
        for (i14 = 5; i14 < 312; ++i14) {
            f3 += (i14 - i14);
            for (f4 = 1; 5 > f4; ++f4) {
                for (i17 = 1; 2 > i17; ++i17) {
                    if (Test0640.bFld) continue;
                    l *= Test0640.iFld;
                    i18 = i2;
                    i3 += i3;
                    if (Test0640.bFld) {
                        iArr2[i17] *= (int) f3;
                    } else {
                        i15 += i2;
                    }
                }
            }
        }
        vMeth_check_sum += l + l1 + i2 + i3 + i14 + i15 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) + i16 +
                i17 + i18 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public static void main(String[] strArr) {

        try {
            Test0640 _instance = new Test0640();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = -14631, i1 = -63849, i19 = -22467, i20 = -33897, i21 = -51099, i22 = 16708, i23 = 31951, i24 = -118, i25 = 13, i26 = -59977;
        double d1 = -52.65196, d2 = -26.6783;
        float f5 = 2.371F, f6 = 0.955F;
        byte by = -65;
        long[] lArr2 = new long[N];
        short[] sArr1 = new short[N];

        FuzzerUtils.init(lArr2, -51495L);
        FuzzerUtils.init(sArr1, (short) -29262);

        for (i = 7; 269 > i; ++i) {
            vMeth(167L, Test0640.instanceCount);
            d1 = f5;
            f5 = Test0640.instanceCount;
            for (d2 = i; 96 > d2; d2++) {
                i1 -= (int) d1;
                Test0640.iFld += (227 + (d2 * d2));
            }
            f5 = -6;
            Test0640.instanceCount += i;
            Test0640.iArrFld[i] -= i19;
            for (i20 = 3; i20 < 96; i20++) {
                lArr2[i20] <<= i20;
                Test0640.iFld = Test0640.iFld;
                Test0640.instanceCount += Test0640.instanceCount;
                Test0640.instanceCount += (i20 | (long) f5);
                for (i22 = 1; i22 < 2; i22 += 2) {
                    Test0640.instanceCount *= by;
                    i23 += Test0640.iFld;
                    Test0640.iArrFld[i + 1] = i;
                    f5 *= 17047;
                    i19 = i23;
                    f5 = f5;
                    i23 -= i;
                }
                for (i24 = 2; 1 < i24; i24--) {
                    sArr1[i + 1] >>= by;
                    Test0640.iFld *= i19;
                    d1 -= Test0640.instanceCount;
                }
                for (f6 = i; f6 < 2; f6 += 2) {
                    Test0640.instanceCount = i23;
                    Test0640.dArrFld[i20] -= Test0640.iFld;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d1 = " + i + "," + i1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("f5 d2 i19 = " + Float.floatToIntBits(f5) + "," + Double.doubleToLongBits(d2) + "," +
                i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 by i24 = " + i23 + "," + by + "," + i24);
        FuzzerUtils.out.println("i25 f6 i26 = " + i25 + "," + Float.floatToIntBits(f6) + "," + i26);
        FuzzerUtils.out.println("lArr2 sArr1 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test0640.instanceCount Test0640.iFld Test0640.bFld = " + Test0640.instanceCount + "," + Test0640.iFld +
                "," + (Test0640.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0640.fArrFld Test0640.iArrFld Test0640.dArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0640.fArrFld)) + "," + FuzzerUtils.checkSum(Test0640.iArrFld) +
                "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0640.dArrFld)));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
