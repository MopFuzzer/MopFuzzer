// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test0612 {

    public static final int N = 400;

    public static long instanceCount = 2332544194L;
    public static volatile byte byFld = -74;
    public static int iFld = -10621;
    public static float fFld = -79.645F;
    public static int[] iArrFld = new int[N];
    public static double[] dArrFld = new double[N];
    public static long[] lArrFld = new long[N];
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    static {
        FuzzerUtils.init(Test0612.iArrFld, 2);
        FuzzerUtils.init(Test0612.dArrFld, -82.13131);
        FuzzerUtils.init(Test0612.lArrFld, 125098619L);
    }

    public double dFld = 2.82806;

    public static void vMeth() {

        int i8 = -80, i9 = 154, i10 = 47458, i11 = -54938, i12 = 34929, i13 = -26801;
        byte by = 9;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(lArr1, 4L);

        i8 += -29;
        for (i9 = 1; 259 > i9; i9++) {
            i11 = 1;
            do {
                Test0612.iArrFld[i11 + 1] = (int) Test0612.instanceCount;
                i12 = 1;
                while (++i12 < 1) {
                    i8 >>= 190;
                    i10 <<= (int) 85469022035739497L;
                    i10 = i11;
                    lArr1[i12 + 1] <<= i11;
                }
                switch ((i9 % 1) + 126) {
                    case 126:
                        i13 = 1;
                        do {
                            double d = 2.34114;
                            i8 = by;
                            i8 -= (int) d;
                            i10 = i8;
                        } while (++i13 < 1);
                        i8 = -105;
                        break;
                    default:
                        Test0612.iArrFld[i9] = (int) 1.31269;
                }
            } while (++i11 < 6);
        }
        vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + by + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth1(int i7) {

        int i14 = -229, i15 = 7, i16 = 13;
        float f1 = -57.954F;
        double d1 = 1.38894;
        short s = -16963;

        Test0612.instanceCount = ((Test0612.iArrFld[(i7 >>> 1) % N] * i7) - (i7 - (i7 - Test0612.instanceCount)));
        vMeth();
        i14 = 1;
        do {
            f1 += (-8252076113832735699L + (i14 * i14));
            Test0612.instanceCount = -10;
            d1 -= -20.36997;
        } while (++i14 < 139);
        for (i15 = 9; i15 < 173; i15++) {
            d1 -= s;
            Test0612.dArrFld[i15 - 1] += 63842;
            f1 *= -3211127183L;
            f1 += (((i15 * i14) + Test0612.instanceCount) - i16);
            i16 -= i15;
            Test0612.byFld *= (byte) d1;
        }
        Test0612.iFld = i7;
        i16 = i16;
        long meth_res = i7 + i14 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i15 + i16 + s;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i1) {

        int i2 = 13, i3 = 55683, i4 = -91, i5 = 3, i6 = -130;
        float f = -74.336F;
        double d2 = 31.125895;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 13L);

        i2 = 1;
        while (++i2 < 266) {
            if (false) {
                for (i3 = 1; i3 < 6; i3++) {
                    for (i5 = 2; i5 > i3; i5 -= 2) {
                        Test0612.iArrFld[i2] -= i4;
                        i6 += (((i5 * i6) + Test0612.instanceCount) - f);
                        f += (((i5 * i5) + i1) - i1);
                        lArr[i3] = Test0612.iArrFld[i5];
                        i4 += i5;
                        i6 -= Math.min(i1 -= -18, Test0612.iArrFld[i5]);
                        i4 >>= (iMeth1(i2) * i3);
                        Test0612.instanceCount <<= 24318;
                        d2 = f;
                    }
                    Test0612.instanceCount += (((i3 * f) + Test0612.instanceCount) - Test0612.instanceCount);
                    Test0612.iArrFld = Test0612.iArrFld;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0612 _instance = new Test0612();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 59937, i17 = -164, i18 = -9, i19 = 5, i20 = 203, i21 = -4, i22 = 12, i23 = -4, i24 = 4, i25 = -1;
        float f2 = -104.155F;
        float[] fArr = new float[N];
        boolean b = true;
        double d3 = 46.77263;

        FuzzerUtils.init(fArr, -38.278F);

        Test0612.iArrFld[(i >>> 1) % N] >>= (i + iMeth(i));
        for (i17 = 3; i17 < 195; ++i17) {
            Test0612.iFld >>>= (int) Test0612.instanceCount;
            Test0612.lArrFld[i17] = 20701;
            Test0612.lArrFld[i17 + 1] = 146;
            fArr = fArr;
            Test0612.iArrFld[i17 - 1] += (int) -114.849F;
            for (i19 = 4; i19 < 131; ++i19) {
                for (i21 = 1; i21 < 2; ++i21) {
                    dFld = Test0612.instanceCount;
                    Test0612.iFld = i21;
                    i18 -= i22;
                    Test0612.byFld -= (byte) dFld;
                }
                for (i23 = 1; 2 > i23; ++i23) {
                    Test0612.byFld += (byte) (i23 * i);
                    i20 &= i19;
                    i22 += (int) f2;
                    i20 += -8427;
                    i20 += (((i23 * i20) + i20) - i);
                    i += i22;
                    i18 += (((i23 * i17) + i24) - i20);
                    Test0612.fFld = f2;
                }
                if (b) continue;
            }
            dFld -= i23;
            dFld -= i19;
        }
        for (d3 = 9; d3 < 308; d3++) {
            if (b) {
                i22 -= i24;
                i18 += (int) (((d3 * i18) + Test0612.iFld) - i23);
                dFld = d3;
            } else {
                i18 += (int) Test0612.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("f2 b d3 = " + Float.floatToIntBits(f2) + "," + (b ? 1 : 0) + "," +
                Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i25 fArr = " + i25 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test0612.instanceCount Test0612.byFld Test0612.iFld = " + Test0612.instanceCount + "," + Test0612.byFld +
                "," + Test0612.iFld);
        FuzzerUtils.out.println("dFld Test0612.fFld Test0612.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
                Float.floatToIntBits(Test0612.fFld) + "," + FuzzerUtils.checkSum(Test0612.iArrFld));
        FuzzerUtils.out.println("Test0612.dArrFld Test0612.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0612.dArrFld)) + "," + FuzzerUtils.checkSum(Test0612.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
