// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test0536 {

    public static final int N = 400;

    public static volatile long instanceCount = 2593585362803564458L;
    public static byte byFld = 6;
    public static int iFld = 1226;
    public static double dFld = -2.90610;
    public static short sFld = 3813;
    public static volatile float[] fArrFld = new float[N];
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0536.fArrFld, -21.45F);
    }

    public static void vMeth() {

        int[] iArr = new int[N];

        FuzzerUtils.init(iArr, 49967);

        Test0536.byFld = (byte) iArr[(Test0536.iFld >>> 1) % N];
        Test0536.iFld += Integer.reverseBytes(Test0536.iFld--);
        vMeth_check_sum += FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth1(int i8, short s, int i9) {


        Test0536.dFld += Test0536.instanceCount;
        long meth_res = i8 + s + i9;
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(double d) {

        int i4 = 46, i5 = 143, i6 = -60, i7 = 12;
        float f = -106.299F, f1 = -119.571F;
        long[] lArr = new long[N];

        FuzzerUtils.init(lArr, 4722771302564183954L);

        for (i4 = 5; i4 < 288; i4++) {
            boolean b = true;
            for (f = 1; 6 > f; f++) {
                i7 = 1;
                do {
                    if (i5 == lArr[(int) (f + 1)]) continue;
                    i5 += (i7 * i7);
                    i5 ^= (int) (i6 >>= (int) ((++Test0536.instanceCount) - (++i5)));
                    f1 *= iMeth1(i6, (short) (-2207), Test0536.iFld);
                    Test0536.iFld = i4;
                    lArr[i4 - 1] *= 15113;
                    Test0536.instanceCount += (long) -86.16F;
                    i6 <<= (int) Test0536.instanceCount;
                } while (++i7 < 2);
                Test0536.instanceCount = Test0536.instanceCount;
                f1 += i7;
                Test0536.instanceCount -= 1;
            }
            b = b;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 +
                Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i3, long l) {

        boolean b1 = true;
        int i10 = 44398;
        int i11 = -194;
        int i12 = -7;
        int i13 = -53;
        int i14 = -20218;
        int i15 = 17945;
        int[] iArr1 = new int[N];
        float f2 = -115.860F;
        long l1 = -407543854811002822L;
        double[] dArr = new double[N];

        FuzzerUtils.init(iArr1, 2);
        FuzzerUtils.init(dArr, 2.62364);

        vMeth();
        vMeth1(Test0536.dFld);
        i3 += (int) l;
        i3 = i3;
        b1 = b1;
        for (i10 = 12; i10 < 291; i10++) {
            i12 = 1;
            while (++i12 < 6) {
                if (b1) break;
                iArr1[i12 + 1] = Test0536.iFld;
                for (i13 = 1; i13 < 1; ++i13) {
                    Test0536.iFld *= i15;
                }
            }
        }
        i14 -= i13;
        dArr[(i11 >>> 1) % N] = f2;
        i3 -= (int) f2;
        l1 += -80;
        long meth_res = i3 + l + (b1 ? 1 : 0) + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) + l1 +
                FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0536 _instance = new Test0536();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 11;
        int i1 = 128;
        int i2 = -14;
        int i16 = -1;
        int i17 = -47525;
        int[][] iArr2 = new int[N][N];
        byte by = -110;
        float f3 = -66.484F;
        boolean b2 = true;

        FuzzerUtils.init(iArr2, 15);

        for (i = 3; i < 154; i += 2) {
            i2 = 1;
            do {
                i1 = Math.max(iMeth(i1, -9L), i1);
                for (i16 = 1; i16 < 1; i16++) {
                    Test0536.fArrFld[i] = i;
                    by = (byte) i2;
                    if (b2) {
                        i17 = -35435;
                        switch (((i2 >>> 1) % 5) + 65) {
                            case 65:
                                iArr2[i16][i - 1] += (int) f3;
                                Test0536.iFld = i2;
                                by *= (byte) Test0536.instanceCount;
                            case 66:
                                i1 += (((i16 * i2) + i16) - i17);
                                by = (byte) i16;
                                break;
                            case 67:
                                Test0536.iFld += (i16 - f3);
                                if (b2) continue;
                                i17 = (int) Test0536.instanceCount;
                                break;
                            case 68:
                                if (b2) continue;
                                i1 += i16;
                                Test0536.instanceCount >>= Test0536.byFld;
                                break;
                            case 69:
                                switch (((i % 2) * 5) + 69) {
                                    case 76:
                                        Test0536.iFld -= i;
                                        i1 = 10;
                                        f3 -= (float) 26.32599;
                                    case 75:
                                        Test0536.iFld += (int) Test0536.dFld;
                                        break;
                                }
                                break;
                        }
                    } else {
                        Test0536.fArrFld[i + 1] += Test0536.instanceCount;
                        iArr2[i2][i16 + 1] = i16;
                        Test0536.dFld -= 0.52433;
                    }
                    Test0536.sFld >>= (short) Test0536.iFld;
                    iArr2 = iArr2;
                }
            } while (++i2 < 334);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i16 i17 by = " + i16 + "," + i17 + "," + by);
        FuzzerUtils.out.println("f3 b2 iArr2 = " + Float.floatToIntBits(f3) + "," + (b2 ? 1 : 0) + "," +
                FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0536.instanceCount Test0536.byFld Test0536.iFld = " + Test0536.instanceCount + "," + Test0536.byFld +
                "," + Test0536.iFld);
        FuzzerUtils.out.println("Test0536.dFld Test0536.sFld Test0536.fArrFld = " + Double.doubleToLongBits(Test0536.dFld) + "," +
                Test0536.sFld + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test0536.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
