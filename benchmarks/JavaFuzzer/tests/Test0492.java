// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test0492 {

    public static final int N = 400;

    public static long instanceCount = 49006L;
    public static byte byFld = -61;
    public static int iFld = -52689;
    public static boolean bFld = true;
    public static volatile int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0492.iArrFld, -2);
    }

    public static void vMeth1(long l, int i3) {

        int i4 = -7;
        int i5 = -31;
        int i6 = 96;
        int i7 = 26416;
        int[] iArr = new int[N];
        float f = -1.473F;
        double d1 = 44.130449, d2 = -1.71268;
        long l1 = 57629L;

        FuzzerUtils.init(iArr, -5670);

        for (i4 = 2; i4 < 231; ++i4) {
            i6 = 1;
            while (++i6 < 7) {
                f += (-20798 + (i6 * i6));
                Test0492.instanceCount += l;
                i5 = i5;
                i5 += (((i6 * l) + i4) - Test0492.instanceCount);
                d1 += i4;
                i7 = 1;
                while ((i7 += 2) < 1) {
                    Test0492.byFld = (byte) 205L;
                    i3 += Test0492.iFld;
                    d2 -= i6;
                    l1 *= i6;
                    l1 = 6564866785116946138L;
                    iArr[i4 + 1] &= -2;
                    if (false) continue;
                }
            }
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i7 +
                Double.doubleToLongBits(d2) + l1 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i2) {

        int i8 = 159;
        int i9 = 8;
        int i10 = -63732;
        int i11 = 48711;
        int i12 = -1;
        int i13 = -8;
        int i14 = 3;
        int[] iArr1 = new int[N];
        short s = -26074;
        long[] lArr = new long[N];

        FuzzerUtils.init(iArr1, -38414);
        FuzzerUtils.init(lArr, 5L);

        vMeth1(3177158001L, 28);
        for (i8 = 6; i8 < 164; i8++) {
            for (i10 = 1; 10 > i10; i10++) {
                for (i12 = 1; i12 < 2; i12 += 3) {
                    float f1 = 0.988F;
                    i2 <<= i2;
                    Test0492.instanceCount += (-219 + (i12 * i12));
                    iArr1[i10] = s;
                    Test0492.iFld >>= i11;
                    i9 += i12;
                    i14 += (((i12 * s) + i10) - s);
                    i13 /= (int) (i14 | 1);
                    i13 += (i12 - Test0492.instanceCount);
                    Test0492.instanceCount += i12;
                    i2 += (int) f1;
                }
                lArr[i10] = Test0492.instanceCount;
            }
        }
        long meth_res = i2 + i8 + i9 + i10 + i11 + i12 + i13 + s + i14 + FuzzerUtils.checkSum(iArr1) +
                FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i, int i1) {

        double d = -74.96755, d3 = 120.105288;
        int i15 = 1, i16 = 113, i17 = -3, i18 = -1502;
        float f2 = -1.340F;

        Test0492.instanceCount -= (Test0492.instanceCount - (Math.abs(2) + -12072));
        d *= iMeth(i1);
        if (Test0492.bFld) {
            for (d3 = 8; d3 < 247; d3 += 3) {
                i16 = 19;
                while (--i16 > 0) {
                    d += i1;
                    i = i15;
                    Test0492.instanceCount += (i16 | Test0492.iFld);
                    i -= (int) f2;
                }
                Test0492.instanceCount = 14;
                if (Test0492.bFld) continue;
                for (i17 = 1; 19 > i17; i17 += 2) {
                    i = 9;
                    Test0492.instanceCount &= Test0492.instanceCount;
                    i = i16;
                }
            }
        } else if (Test0492.bFld) {
            i1 += (int) d3;
        } else if (true) {
            Test0492.iFld += (int) f2;
        } else {
            Test0492.instanceCount = Test0492.byFld;
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d3) + i15 + i16 +
                Float.floatToIntBits(f2) + i17 + i18;
    }

    public static void main(String[] strArr) {

        try {
            Test0492 _instance = new Test0492();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i19 = 12, i20 = -18638, i21 = -242, i22 = -40693, i23 = -25920, i24 = 52270;
        float f3 = 56.105F;
        float f4 = -50.43F;
        float[] fArr = new float[N];
        double d4 = -1.69881;
        short s1 = -22146;
        long[] lArr1 = new long[N];

        FuzzerUtils.init(fArr, -117.996F);
        FuzzerUtils.init(lArr1, -70L);

        vMeth(Test0492.iFld, Test0492.iFld);
        for (i19 = 4; i19 < 232; i19++) {
            i20 = (int) f3;
            for (f4 = i19; f4 < 110; ++f4) {
                switch ((int) ((f4 % 8) + 114)) {
                    case 114:
                        for (i22 = 1; 1 > i22; i22++) {
                            Test0492.byFld = (byte) -243;
                            Test0492.iArrFld[(9 >>> 1) % N] -= (int) d4;
                            Test0492.iFld += i22;
                            i23 += (i22 | i19);
                            i20 <<= i23;
                            Test0492.iArrFld = Test0492.iArrFld;
                            i21 -= (int) f3;
                        }
                        break;
                    case 115:
                        Test0492.instanceCount -= (long) f3;
                        break;
                    case 116:
                        s1 = (short) Test0492.iFld;
                        break;
                    case 117:
                        Test0492.iArrFld[i19 - 1] = (int) Test0492.instanceCount;
                        i23 >>>= Test0492.iFld;
                        break;
                    case 118:
                    case 119:
                        if (true) continue;
                        fArr[i19 + 1] = i21;
                    case 120:
                        i24 = 1;
                        while (++i24 < 1) {
                            d4 = 12;
                            switch ((((i24 >>> 1) % 4) * 5) + 90) {
                                case 104:
                                    Test0492.iFld >>= s1;
                                    i21 += i24;
                                    break;
                                case 100:
                                    Test0492.iFld = i22;
                                    f3 = (float) d4;
                                    break;
                                case 91:
                                    lArr1[(int) (f4 + 1)] += i19;
                                    f3 += (i24 * i24);
                                    f3 = f4;
                                    break;
                                case 95:
                                    Test0492.iFld = i21;
                            }
                        }
                        break;
                    case 121:
                        if (false) continue;
                    default:
                        i21 <<= 102;
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 f3 = " + i19 + "," + i20 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("f4 i21 i22 = " + Float.floatToIntBits(f4) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 d4 s1 = " + i23 + "," + Double.doubleToLongBits(d4) + "," + s1);
        FuzzerUtils.out.println("i24 fArr lArr1 = " + i24 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test0492.instanceCount Test0492.byFld Test0492.iFld = " + Test0492.instanceCount + "," + Test0492.byFld +
                "," + Test0492.iFld);
        FuzzerUtils.out.println("Test0492.bFld Test0492.iArrFld = " + (Test0492.bFld ? 1 : 0) + "," +
                FuzzerUtils.checkSum(Test0492.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
