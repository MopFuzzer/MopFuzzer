// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test0113 {

    public static final int N = 400;

    public static long instanceCount = -148L;
    public static short sFld = 29153;
    public static int iFld = -19632;
    public static byte byFld = -39;
    public static volatile long[] lArrFld = new long[N];
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    static {
        FuzzerUtils.init(Test0113.lArrFld, 3707915100L);
    }

    public long lFld = 3435390385L;
    public volatile float fFld = 2.321F;
    public float[] fArrFld = new float[N];

    public static void vMeth1(long l1) {


        Test0113.sFld ^= (short) Test0113.iFld;
        vMeth1_check_sum += l1;
    }

    public static void main(String[] strArr) {

        try {
            Test0113 _instance = new Test0113();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void vMeth(int i2, long l) {

        boolean b = false;
        int i3 = 55404;
        int i4 = 182;
        int i5 = 61216;
        int i6 = -53683;
        int i7 = 14383;
        int i8 = -7763;
        int[] iArr = new int[N];
        double d = -72.33770;
        float f = 0.122F;

        FuzzerUtils.init(iArr, -11);

        vMeth1(l);
        Test0113.iFld += i2;
        b = b;
        for (i3 = 168; i3 > 6; --i3) {
            byte by = 43;
            switch ((i3 % 5) + 13) {
                case 13:
                    i2 += i4;
                    break;
                case 14:
                    d = -176L;
                    Test0113.lArrFld[i3 + 1] %= (by | 1);
                case 15:
                    for (i5 = 1; i5 < 10; i5 += 3) {
                        l += by;
                        f += i2;
                        for (i7 = 4; i7 > 1; i7--) {
                            Test0113.instanceCount *= 21082;
                        }
                        Test0113.lArrFld[i5] = 14524;
                        i8 = i4;
                    }
                    break;
                case 16:
                    iArr[i3] *= by;
                    break;
                case 17:
                    i6 += (int) lFld;
                    break;
                default:
                    l = 246;
            }
        }
        vMeth_check_sum += i2 + l + (b ? 1 : 0) + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 +
                Float.floatToIntBits(f) + i7 + i8 + FuzzerUtils.checkSum(iArr);
    }

    public double dMeth() {

        float f1 = -11.301F;
        int i9 = -46;
        int i10 = -4980;
        int[] iArr1 = new int[N];

        FuzzerUtils.init(iArr1, -56672);

        vMeth(Test0113.iFld, lFld);
        for (f1 = 2; 388 > f1; f1++) {
            i9 = i9;
            lFld = (long) f1;
            fFld = Test0113.instanceCount;
            Test0113.lArrFld[(int) (f1 + 1)] -= 96;
            Test0113.iFld += Test0113.byFld;
            iArr1[(int) (f1 - 1)] &= i9;
            Test0113.iFld += (int) (((f1 * Test0113.sFld) + lFld) - Test0113.iFld);
            fArrFld[(int) (f1 + 1)] = 10264;
            Test0113.instanceCount >>>= Test0113.iFld;
            Test0113.iFld += -28595;
        }
        lFld = i9;
        i10 -= -181;
        lFld *= i9;
        long meth_res = Float.floatToIntBits(f1) + i9 + i10 + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i = 8;
        int i1 = 1;
        int i11 = -26;
        int i13 = 5;
        int i14 = 230;
        int i15 = -6;
        int i16 = -217;
        int i17 = -142;
        int i18 = 113;
        int[] iArr2 = new int[N];
        int[][] iArr3 = new
                int[N][N];
        double d1 = 126.77526;
        boolean b1 = true;
        boolean[] bArr = new boolean[N];

        FuzzerUtils.init(iArr2, -14741);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr3, -28177);

        i = 1;
        do {
            i1 = (int) dMeth();
            i1 += (-18460 + (i * i));
            i1 -= (int) d1;
            Test0113.iFld -= Test0113.sFld;
            i1 = 15083;
            iArr2[i + 1] = Test0113.iFld;
            i11 = 1;
            while (++i11 < 172) {
                if (b1) break;
            }
            i1 += (int) fFld;
        } while (++i < 146);
        i13 = 1;
        do {
            for (i14 = 3; i14 < 120; ++i14) {
                Test0113.iFld >>>= i11;
                Test0113.instanceCount = Test0113.iFld;
                i16 = 1;
                do {
                    Test0113.instanceCount >>= i15;
                    bArr[i13 + 1] = b1;
                    try {
                        i15 = (39017 % iArr2[i14 + 1]);
                        i15 = (-15699 % iArr2[i13]);
                        i17 = (-360214820 % i15);
                    } catch (ArithmeticException a_e) {
                    }
                    i18 *= Test0113.sFld;
                    i18 += i11;
                    Test0113.iFld += (i16 * fFld);
                    Test0113.instanceCount -= -11L;
                    lFld -= i15;
                } while (++i16 < 2);
                i18 = i;
                iArr3 = iArr3;
                iArr2[i14] &= i13;
                d1 += Test0113.iFld;
                if (false) continue;
                Test0113.lArrFld[i13] |= i13;
            }
        } while (++i13 < 210);
        iArr3[(Test0113.iFld >>> 1) % N] = FuzzerUtils.int1array(N, (int) 235);

        FuzzerUtils.out.println("i i1 d1 = " + i + "," + i1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i11 b1 i13 = " + i11 + "," + (b1 ? 1 : 0) + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 iArr2 = " + i17 + "," + i18 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("bArr iArr3 = " + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test0113.instanceCount Test0113.sFld Test0113.iFld = " + Test0113.instanceCount + "," + Test0113.sFld +
                "," + Test0113.iFld);
        FuzzerUtils.out.println("lFld fFld Test0113.byFld = " + lFld + "," + Float.floatToIntBits(fFld) + "," + Test0113.byFld);
        FuzzerUtils.out.println("Test0113.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test0113.lArrFld) + "," +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
