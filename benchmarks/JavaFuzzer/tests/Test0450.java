// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test0450 {

    public static final int N = 400;

    public static volatile long instanceCount = -7672791929703765751L;
    public static volatile boolean bFld = true;
    public static short sFld = -27592;
    public static volatile short sFld1 = 14004;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public double dFld = -87.56515;

    public static int iMeth1(int i5, int i6) {

        int i7 = -14;
        int i8 = 166;
        int i9 = -60819;
        int i10 = -125;
        int i11 = -49574;
        int i12 = 49769;
        int[] iArr = new int[N];
        float f = 1.806F;
        double d = 101.82104;
        byte by = -50;

        FuzzerUtils.init(iArr, -13);

        i7 = 1;
        while (++i7 < 331) {
            f = i6;
            Test0450.bFld = Test0450.bFld;
            i5 += (i7 | i6);
            if (false) break;
            d += 111L;
            if (Test0450.bFld) {
                switch ((i7 % 5) + 43) {
                    case 43:
                        f += (((i7 * i6) + i7) - by);
                        for (i8 = i7; i8 < 5; ++i8) {
                            i5 = (int) Test0450.instanceCount;
                        }
                        for (i10 = i7; i10 < 5; i10++) {
                            i9 = -190;
                            f /= (Test0450.sFld | 1);
                            i12 >>= i8;
                        }
                        break;
                    case 44:
                        f = i7;
                        break;
                    case 45:
                        iArr[i7] = (int) -3.73712;
                        break;
                    case 46:
                        Test0450.instanceCount = (long) d;
                        break;
                    case 47:
                        i9 >>= i12;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + by + i8 + i9 + i10 + i11
                + i12 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i2, short s) {

        int i3 = -12;
        int i4 = -153;
        int i13 = -47078;
        int i14 = 4;
        int i15 = -44406;
        int i16 = 0;
        int[][] iArr1 = new int[N][N];
        double d1 = 123.21424;
        byte by1 = 10;

        FuzzerUtils.init(iArr1, -159);

        for (i3 = 135; i3 > 1; i3 -= 2) {
            i4 += (i3 + i4);
            i2 += iMeth1(i2, i4);
            i4 = i3;
            for (i13 = 1; i13 < 23; i13++) {
                Test0450.instanceCount += Test0450.instanceCount;
                try {
                    i2 = (i2 / -199);
                    i2 = (i14 % -101);
                    i4 = (180 / i13);
                } catch (ArithmeticException a_e) {
                }
                i4 >>>= (int) Test0450.instanceCount;
                for (i15 = i13; i15 < 2; i15++) {
                    i2 >>= i13;
                    iArr1[i15] = iArr1[i13 - 1];
                    d1 *= i2;
                    by1 += (byte) Test0450.instanceCount;
                    by1 = (byte) i4;
                    i4 *= i14;
                }
            }
        }
        vMeth_check_sum += i2 + s + i3 + i4 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + by1 +
                FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i, int i1) {

        double d2 = -39.50163;
        int[] iArr2 = new int[N];

        FuzzerUtils.init(iArr2, 30232);

        vMeth(i, Test0450.sFld1);
        iArr2[(i1 >>> 1) % N] += (int) d2;
        long meth_res = i + i1 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] strArr) {

        try {
            Test0450 _instance = new Test0450();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i17 = -8;

        dFld *= (-iMeth(i17, i17));
        i17 = i17;

        FuzzerUtils.out.println("i17 = " + i17);

        FuzzerUtils.out.println("Test0450.instanceCount dFld Test0450.bFld = " + Test0450.instanceCount + "," +
                Double.doubleToLongBits(dFld) + "," + (Test0450.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test0450.sFld Test0450.sFld1 = " + Test0450.sFld + "," + Test0450.sFld1);

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
