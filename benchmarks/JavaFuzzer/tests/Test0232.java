// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test0232 {

    public static final int N = 400;

    public static long instanceCount = 6093L;
    public static short sFld = -368;
    public static float fFld = 86.141F;
    public static boolean bFld = true;
    public static long[] lArrFld = new long[N];
    public static double[][] dArrFld = new double[N][N];
    public static int[] iArrFld = new int[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0232.lArrFld, -220L);
        FuzzerUtils.init(Test0232.dArrFld, 80.85126);
        FuzzerUtils.init(Test0232.iArrFld, -38661);
    }

    public double dFld = 65.79158;
    public byte[] byArrFld = new byte[N];

    public static void vMeth2(int i12) {

        int i13 = 189, i14 = -189, i15 = -55574, i16 = 13, i17 = 35325;
        byte by1 = -71;

        i12 *= -4;
        i12 |= i12;
        Test0232.fFld = i12;
        i12 += (int) Test0232.instanceCount;
        for (i13 = 2; 196 > i13; ++i13) {
            i15 = 8;
            while (--i15 > 0) {
                int i18 = 6;
                for (i16 = 1; 1 > i16; ++i16) {
                    Test0232.iArrFld = FuzzerUtils.int1array(N, (int) 8);
                    i17 = i17;
                    by1 += (byte) i13;
                    Test0232.iArrFld[i13 + 1] = (int) Test0232.instanceCount;
                    Test0232.iArrFld[i15 + 1] += i13;
                    i12 += (int) (-63496L + (i16 * i16));
                }
                by1 = (byte) 6;
                i14 *= i18;
            }
        }
        vMeth2_check_sum += i12 + i13 + i14 + i15 + i16 + i17 + by1;
    }

    public static void vMeth1() {

        int i7 = -14;
        int i8 = -62591;
        int i9 = -23730;
        int i10 = -14;
        int i11 = -9;
        int i19 = 2872;
        int[] iArr1 = new int[N];
        byte by2 = -20;
        float[] fArr = new float[N];

        FuzzerUtils.init(iArr1, 13372);
        FuzzerUtils.init(fArr, -1.523F);

        Test0232.sFld >>= (short) (i7 - (++i7));
        for (i8 = 2; 256 > i8; i8++) {
            for (i10 = 1; i10 < 6; ++i10) {
                Test0232.dArrFld[i10 + 1][i8] -= (Test0232.fFld++);
            }
            Test0232.dArrFld[i8 + 1][i8 + 1] += (-(++i9));
            i11 = (int) ((iArr1[i8] * (Test0232.instanceCount - Test0232.instanceCount)) * (i8 * Math.abs(Test0232.fFld)));
            Test0232.instanceCount |= Test0232.instanceCount;
            fArr[i8 + 1] += (iArr1[i8 - 1]++);
            if (i10 != 0) {
                vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i19 + by2 + FuzzerUtils.checkSum(iArr1) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
        }
        iArr1[(i8 >>> 1) % N] -= (++i7);
        vMeth2(i7);
        i19 = 1;
        do {
            if (Test0232.bFld) {
                Test0232.sFld -= (short) i9;
                i7 -= i9;
            } else if (false) {
                Test0232.fFld -= Test0232.fFld;
            } else if (Test0232.bFld) {
                by2 += (byte) (((i19 * i8) + i7) - i8);
                vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i19 + by2 + FuzzerUtils.checkSum(iArr1) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            } else {
                Test0232.dArrFld[i19][i19 - 1] -= i11;
            }
        } while (++i19 < 149);
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i19 + by2 + FuzzerUtils.checkSum(iArr1) +
                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        float f = -1.418F;
        int i2 = 62917;
        int i3 = 226;
        int i4 = -39;
        int i5 = 13;
        int i6 = 133;
        int[] iArr = new int[N];
        byte by = 107;
        short s = 22004;

        FuzzerUtils.init(iArr, 91);

        for (f = 4; f < 224; f += 2) {
            iArr[(int) (f - 1)] = (int) -120.190F;
            for (i3 = 1; i3 < 14; i3++) {
                int i20 = 159;
                for (i5 = 1; i5 < 2; ++i5) {
                    iArr[i3 - 1] *= (--by);
                    try {
                        i2 = (-19113 % i2);
                        i6 = (iArr[i3] % 130);
                        iArr[i5 + 1] = (i5 / i5);
                    } catch (ArithmeticException a_e) {
                    }
                    Test0232.lArrFld[i3] = (-(s--));
                    vMeth1();
                    Test0232.instanceCount += i2;
                }
                by <<= (byte) Test0232.instanceCount;
                i6 *= -4;
                switch (((i3 % 2) * 5) + 89) {
                    case 91:
                        Test0232.iArrFld = iArr;
                        i6 -= i20;
                        Test0232.bFld = Test0232.bFld;
                        break;
                    case 95:
                        i2 += (i3 * i3);
                        break;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + by + s + FuzzerUtils.checkSum(iArr);
    }

    public static void main(String[] strArr) {

        try {
            Test0232 _instance = new Test0232();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        int i = 17, i1 = -1, i21 = -38882, i22 = 12, i23 = -30624, i24 = 13, i25 = 106, i26 = -217, i27 = 16016, i28 = 5820;
        long l = 68L, l1 = -174L;

        for (i = 5; i < 122; ++i) {
            vMeth();
            for (l = 2; l < 214; l++) {
                i21 += (int) (((l * Test0232.fFld) + l) - i1);
                for (l1 = 1; l1 < 2; ++l1) {
                    i1 *= i22;
                    Test0232.instanceCount >>= i22;
                    i21 += (int) l1;
                    Test0232.iArrFld[(int) (l1 + 1)] <<= (int) 3771506434L;
                    i21 = (int) l1;
                    i21 -= i21;
                    i21 = (int) Test0232.instanceCount;
                    i1 += (int) l1;
                    Test0232.lArrFld[i + 1] -= i21;
                    Test0232.iArrFld[(int) (l)] += (int) l1;
                }
                try {
                    Test0232.iArrFld[(i22 >>> 1) % N] = (-123 / i21);
                    i1 = (i % -158);
                    i21 = (10509 % i);
                } catch (ArithmeticException a_e) {
                }
                Test0232.instanceCount = i1;
                for (i23 = 1; i23 < 2; ++i23) {
                    byArrFld[(int) (l - 1)] *= (byte) i;
                    Test0232.fFld += (((i23 * i22) + i24) - i);
                    Test0232.bFld = Test0232.bFld;
                }
            }
            Test0232.fFld = i24;
            i21 -= i;
            for (i25 = 7; i25 < 214; i25++) {
                for (i27 = 1; i27 < 2; ++i27) {
                    i21 = (int) Test0232.instanceCount;
                    i26 += (i27 * i27);
                    Test0232.fFld *= i25;
                    i22 &= i23;
                    dFld *= i24;
                }
            }
        }

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i21 l1 i22 = " + i21 + "," + l1 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);

        FuzzerUtils.out.println("Test0232.instanceCount Test0232.sFld Test0232.fFld = " + Test0232.instanceCount + "," + Test0232.sFld +
                "," + Float.floatToIntBits(Test0232.fFld));
        FuzzerUtils.out.println("Test0232.bFld dFld Test0232.lArrFld = " + (Test0232.bFld ? 1 : 0) + "," +
                Double.doubleToLongBits(dFld) + "," + FuzzerUtils.checkSum(Test0232.lArrFld));
        FuzzerUtils.out.println("Test0232.dArrFld Test0232.iArrFld byArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0232.dArrFld)) + "," + FuzzerUtils.checkSum(Test0232.iArrFld) +
                "," + FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
