// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test0139 {

    public static final int N = 400;

    public static long instanceCount = 0L;
    public static volatile int iFld = 44145;
    public static float fFld = -1.387F;
    public static double[] dArrFld = new double[N];
    public static long[] lArrFld = new long[N];
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    static {
        FuzzerUtils.init(Test0139.dArrFld, 40.8894);
        FuzzerUtils.init(Test0139.lArrFld, 31400L);
    }

    public static void vMeth2(int i3) {

        int i4 = -7;
        int i5 = -45;
        int i6 = -1;
        int i7 = 28182;
        int i8 = 13;
        int[] iArr = new int[N];
        float f = -18.114F;
        boolean b1 = true;
        short s = -25461;
        double d1 = 0.107410;

        FuzzerUtils.init(iArr, -189);

        for (i4 = 8; 143 > i4; ++i4) {
            i5 *= (int) Test0139.instanceCount;
            iArr[i4 + 1] = i5;
            Test0139.instanceCount >>= Test0139.instanceCount;
            Test0139.instanceCount += (-8 + (i4 * i4));
            Test0139.lArrFld[i4 - 1] = (long) f;
        }
        b1 = false;
        for (i6 = 6; i6 < 126; ++i6) {
            i5 *= (int) Test0139.instanceCount;
            i3 += i6;
        }
        f = s;
        i8 = 1;
        do {
            i3 = i8;
            Test0139.instanceCount *= (long) d1;
            i7 *= i3;
        } while (++i8 < 165);
        vMeth2_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f) + (b1 ? 1 : 0) + i6 + i7 + s + i8 +
                Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l1) {


        vMeth2(Test0139.iFld);
        vMeth1_check_sum += l1;
    }

    public static void vMeth(long l, boolean b, int i) {

        int i1 = 138;
        int i2 = 33;
        int i9 = -7;
        int i10 = -183;
        int i11 = -145;
        int i12 = 9;
        int[] iArr1 = new int[N];
        double d2 = 36.33077;
        short s1 = 24114;
        byte[] byArr = new byte[N];

        FuzzerUtils.init(byArr, (byte) -74);
        FuzzerUtils.init(iArr1, 32188);

        try {
            i = (byArr[(i >>> 1) % N]++);
            for (i1 = 8; (140 + 400) > i1; i1++) {
                i /= (int) ((--i) | 1);
                vMeth1(l);
                iArr1[i1 - 1] += i1;
                for (i9 = 1; i9 < 4; i9++) {
                    i += (((i9 * i10) + i2) - i2);
                    for (i11 = 1; i11 < (2 + 400); i11++) {
                        d2 = i12;
                        Test0139.instanceCount |= Test0139.instanceCount;
                        iArr1[i11] *= i1;
                        iArr1[i11] += (int) d2;
                        i10 = i2;
                        i12 -= (int) -97.833F;
                    }
                }
            }
        } catch (ArrayIndexOutOfBoundsException exc1) {
            s1 >>= (short) -2964735171261726139L;
        }
        vMeth_check_sum += l + (b ? 1 : 0) + i + i1 + i2 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d2) + s1 +
                FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void main(String[] strArr) {

        try {
            Test0139 _instance = new Test0139();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public void mainTest(String[] strArr1) {

        boolean b2 = true;
        int i13 = -253;
        int i14 = 34;
        int i15 = -28731;
        int i16 = -12;
        int i17 = -2;
        int i18 = 97;
        int i19 = -36313;
        int i20 = -8641;
        int i21 = 6;
        int i22 = 4636;
        int[] iArr2 = new
                int[N];
        byte by = 94;

        FuzzerUtils.init(iArr2, -8);

        vMeth(3737690917L, b2, Test0139.iFld);
        for (i13 = 10; i13 < 184; ++i13) {
            Test0139.iFld += (i13 | Test0139.instanceCount);
            Test0139.fFld -= Test0139.iFld;
        }
        Test0139.iFld += Test0139.iFld;
        i15 = 1;
        while (++i15 < 316) {
            Test0139.instanceCount *= by;
            Test0139.lArrFld = Test0139.lArrFld;
            for (i16 = 1; 80 > i16; ++i16) {
                try {
                    Test0139.iFld = (i16 % i17);
                    iArr2[i16 - 1] = (i15 / i15);
                    i14 = (i16 / 57546);
                } catch (ArithmeticException a_e) {
                }
                Test0139.iFld += (i16 * i17);
                Test0139.fFld += by;
                for (i18 = 1; i18 < 2; i18++) {
                    Test0139.instanceCount = i19;
                }
            }
            i19 >>= i16;
            i20 = 1;
            do {
                double d3 = -18.23179;
                if (true) break;
                Test0139.iFld = i16;
                i14 = (int) Test0139.instanceCount;
                i14 -= i14;
                d3 -= i19;
                i14 += (-3254 + (i20 * i20));
                Test0139.fFld = i16;
                for (i21 = 2; 1 < i21; i21 -= 3) {
                    if (b2) break;
                    i19 += i22;
                    Test0139.iFld *= (int) 42581L;
                    i17 = (int) Test0139.fFld;
                    Test0139.instanceCount += (6L + (i21 * i21));
                }
            } while ((i20 += 2) < 80);
            iArr2[i15] += (int) Test0139.instanceCount;
        }

        FuzzerUtils.out.println("b2 i13 i14 = " + (b2 ? 1 : 0) + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 by i16 = " + i15 + "," + by + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test0139.instanceCount Test0139.iFld Test0139.fFld = " + Test0139.instanceCount + "," + Test0139.iFld +
                "," + Float.floatToIntBits(Test0139.fFld));
        FuzzerUtils.out.println("Test0139.dArrFld Test0139.lArrFld = " +
                Double.doubleToLongBits(FuzzerUtils.checkSum(Test0139.dArrFld)) + "," + FuzzerUtils.checkSum(Test0139.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
