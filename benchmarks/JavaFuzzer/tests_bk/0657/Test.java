// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3813663241L;
    public double dFld=-56.79764;
    public static byte byFld=57;
    public static volatile float fFld=-2.691F;
    public short sFld=-30503;
    public int iArrFld[][]=new int[N][N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static void vMeth1(short s, byte by, int i1) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -3);

        iArr[(i1 >>> 1) % N] -= iArr[(i1 >>> 1) % N];
        vMeth1_check_sum += s + by + i1 + FuzzerUtils.checkSum(iArr);
    }

    public static short sMeth(int i2, long l, int i3) {

        short s1=17194;
        double d=-59.53373;
        int i4=225, i5=29255, i6=-160, i7=-6, i8=-128, i9=-62481, iArr1[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 97L);
        FuzzerUtils.init(iArr1, -1);

        vMeth1(s1, Test.byFld, i3);
        for (d = 226; 4 < d; --d) {
            for (i5 = 1; i5 < 7; i5 += 2) {
                Test.fFld += Test.fFld;
            }
            i7 = 1;
            do {
                Test.fFld += l;
                lArr[i7] <<= l;
                Test.fFld += Test.byFld;
                i6 = -123;
                Test.instanceCount = i3;
                i6 += (i7 | i6);
                iArr1[(int)(d - 1)] = i2;
            } while (++i7 < 7);
            for (i8 = (int)(d); i8 < 7; ++i8) {
                i3 -= (int)Test.instanceCount;
                i3 = (int)Test.instanceCount;
            }
        }
        long meth_res = i2 + l + i3 + s1 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(int i) {


        vMeth1(sMeth(180, Test.instanceCount, 3087), Test.byFld, i);
        i %= (int)(i | 1);
        Test.instanceCount *= Test.instanceCount;
        vMeth_check_sum += i;
    }

    public void mainTest(String[] strArr1) {

        int i10=24712, i11=-32629, i12=94, i13=-143, i14=8, i15=11, i16=25617, i17=-14659, i18=36506, i19=-10, i20=-48,
            i21=-3, iArr2[]=new int[N];
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -1);
        FuzzerUtils.init(lArr1, -280370259L);

        Test.instanceCount *= (long)dFld;
        vMeth(i10);
        i10 -= Test.byFld;
        iArr2[(-5 >>> 1) % N] = 2;
        Test.fFld *= Test.instanceCount;
        switch ((((i10 >>> 1) % 6) * 5) + 118) {
        case 131:
            for (i11 = 7; i11 < 161; i11++) {
                iArr2[i11] /= (int)10.943F;
                i12 += (((i11 * Test.byFld) + i12) - Test.fFld);
                i13 = 1;
                while (++i13 < 163) {
                    iArrFld = iArrFld;
                    Test.byFld = (byte)i11;
                    Test.fFld /= (Test.byFld | 1);
                }
                for (i14 = 3; i14 < 163; ++i14) {
                    lArr1[i14 + 1] *= 12;
                    i10 += (i14 * i14);
                    if (b) {
                        i10 -= 11;
                    }
                }
                i12 = 8;
                i10 += (((i11 * sFld) + i11) - sFld);
            }
            if (true) {
                for (i16 = 14; i16 < 308; ++i16) {
                    i10 = i16;
                    i15 -= (int)Test.fFld;
                    for (i18 = 3; i18 < 86; i18++) {
                        for (i20 = i16; i20 < 2; i20++) {
                            Test.instanceCount = i21;
                            Test.fFld -= i11;
                            i21 <<= (int)Test.instanceCount;
                            i12 = (int)8540270465834237928L;
                        }
                    }
                }
            } else {
                i15 &= (int)Test.instanceCount;
            }
            break;
        case 120:
            iArrFld[(-47 >>> 1) % N] = iArrFld[(i15 >>> 1) % N];
            break;
        case 134:
            Test.byFld = (byte)i10;
            break;
        case 123:
            i15 *= (int)Test.fFld;
            break;
        case 135:
            iArr2[(i12 >>> 1) % N] &= i16;
            break;
        case 144:
            lArr1[(i12 >>> 1) % N] += i20;
            break;
        default:
            i19 >>= i10;
        }

        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("b i16 i17 = " + (b ? 1 : 0) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 iArr2 lArr1 = " + i21 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld sFld iArrFld = " + Float.floatToIntBits(Test.fFld) + "," + sFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest sMeth
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
