// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=5778808837391869298L;
    public static int iFld=-663;
    public static float fFld=0.222F;
    public double dFld=-2.50617;
    public static int iFld1=63109;
    public static byte byFld=29;
    public int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2) {

        long l3=-4L, l4=-51727L;
        int i4=43985, i5=-96, i6=133, i7=61053, iArr[][]=new int[N][N];
        float f1=46.593F;
        boolean b=true;
        double d=-2.62035;

        FuzzerUtils.init(iArr, 11);

        for (l3 = 11; l3 < 322; l3++) {
            if (b) {
                iArr[(int)(l3 - 1)][(int)(l3)] = i4;
            } else if (b) {
                f1 *= i4;
                f1 += f1;
                Test.iFld += (int)l3;
                Test.iFld *= i4;
            } else {
                d = l3;
            }
            if (b) continue;
            Test.instanceCount *= i4;
            if (b) continue;
            for (i5 = 1; i5 < 5; i5++) {
                i7 += (i5 | i5);
                iArr[i5][(int)(l3 + 1)] = (int)l3;
                iArr[(int)(l3)][(int)(l3 - 1)] = (int)l4;
            }
        }
        vMeth1_check_sum += l2 + l3 + i4 + Float.floatToIntBits(f1) + (b ? 1 : 0) + Double.doubleToLongBits(d) + i5 +
            i6 + i7 + l4 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i3, long l, long l1) {


        vMeth1(Test.instanceCount);
        vMeth_check_sum += i3 + l + l1;
    }

    public static int iMeth(int i, int i1) {

        float f=0.78F, f2=40.74F;
        int i2=-42388, i8=-6, i9=-10, i10=-3, i11=-54471, iArr1[]=new int[N];
        short s=20931;
        double d1=0.26940, dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 125);
        FuzzerUtils.init(lArr, -787079339371858049L);
        FuzzerUtils.init(dArr, -2.110374);

        for (f = 10; f < 308; ++f) {
            switch (((i >>> 1) % 9) + 15) {
            case 15:
                vMeth(-29701, Test.instanceCount, Test.instanceCount);
                iArr1[(int)(f)] += (int)Test.instanceCount;
                switch ((int)((f % 10) + 91)) {
                case 91:
                    for (i8 = 1; i8 < 6; i8++) {
                        for (i10 = 1; i10 < 2; i10++) {
                            f2 += (i10 - s);
                            try {
                                iArr1[(int)(f)] = (i2 / -11062);
                                iArr1[i10] = (i % 344733845);
                                i2 = (34149 / iArr1[(i8 >>> 1) % N]);
                            } catch (ArithmeticException a_e) {}
                            i2 += (((i10 * i2) + i) - f2);
                            i1 = -140;
                            lArr[i10 + 1] <<= i10;
                            i11 = i10;
                        }
                        d1 += i1;
                        d1 *= Test.instanceCount;
                    }
                case 92:
                    f2 += i9;
                case 93:
                    try {
                        iArr1[(int)(f)] = (i1 / iArr1[(int)(f + 1)]);
                        i2 = (i11 % -58193);
                        i = (41 / i9);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 94:
                    Test.instanceCount = i11;
                case 95:
                    Test.instanceCount += (long)f;
                    break;
                case 96:
                    Test.iFld %= (int)(Test.iFld | 1);
                    break;
                case 97:
                    dArr[(int)(f - 1)] = i1;
                    break;
                case 98:
                    Test.instanceCount += s;
                case 99:
                    if (i2 != 0) {
                    }
                    break;
                case 100:
                    f2 += Test.instanceCount;
                    break;
                default:
                    i1 -= i2;
                }
                break;
            case 16:
                iArr1[(int)(f)] /= (int)(i8 | 1);
                break;
            case 17:
                iArr1[(-41727 >>> 1) % N] -= i10;
                break;
            case 18:
                i2 = i11;
            case 19:
            case 20:
                f2 += 9;
                break;
            case 21:
                i += (int)(((f * f2) + i) - i2);
                break;
            case 22:
                iArr1[(int)(f + 1)] += (int)f;
            case 23:
                i2 = i9;
                break;
            }
        }
        long meth_res = i + i1 + Float.floatToIntBits(f) + i2 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) + s +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i12=-22807, i13=2, i14=-6, i15=-13, i16=-29498, i17=-12, i18=13748;
        boolean b1=false;

        Test.iFld *= iMeth(102, Test.iFld);
        if (b1) {
            iArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
            Test.fFld -= Test.iFld;
            Test.iFld += Test.iFld;
            Test.iFld >>>= Test.iFld;
        } else if (b1) {
            for (i12 = 11; i12 < 242; ++i12) {
                i13 *= -123;
                i13 >>= (int)Test.instanceCount;
                Test.instanceCount += Test.instanceCount;
                i13 += i12;
                i13 += (i12 * i12);
                Test.iFld += (-20084 + (i12 * i12));
                Test.iFld ^= (int)Test.instanceCount;
                try {
                    iArrFld[i12 + 1] = (161 / i12);
                    Test.iFld = (i12 / i12);
                    iArrFld[i12 - 1] = (i12 / Test.iFld);
                } catch (ArithmeticException a_e) {}
            }
            i13 = i12;
            for (i14 = 163; i14 > 10; i14 -= 3) {
                i16 = 1;
                do {
                    long l5=1L;
                    if (b1) {
                        Test.iFld += (int)Test.instanceCount;
                    } else if (b1) {
                        i13 = (int)l5;
                        i15 -= (int)Test.instanceCount;
                        switch (((58335 >>> 1) % 5) + 108) {
                        case 108:
                            for (i17 = 2; i17 > 1; i17 -= 2) {
                                short s1=-8697;
                                Test.iFld = Test.iFld;
                                i13 = Test.iFld;
                                dFld = i13;
                                iArrFld[i17 - 1] = s1;
                            }
                            i15 *= i14;
                            Test.instanceCount += i12;
                            break;
                        case 109:
                            Test.iFld1 -= i17;
                        case 110:
                            Test.byFld = (byte)-38078;
                            break;
                        case 111:
                        case 112:
                            Test.fFld = i17;
                            break;
                        }
                    }
                } while (++i16 < 339);
            }
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 b1 = " + i18 + "," + (b1 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("dFld Test.iFld1 Test.byFld = " + Double.doubleToLongBits(dFld) + "," + Test.iFld1 +
            "," + Test.byFld);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
