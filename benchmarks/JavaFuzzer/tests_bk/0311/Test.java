// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=95L;
    public static volatile int iFld=-7;
    public static short sFld=13831;
    public static int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -236);
        FuzzerUtils.init(Test.lArrFld, -131L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, int i9, int i10) {

        float f3=-2.214F, f4=-70.750F;
        boolean b1=false;
        int i11=242, i12=12, i13=51701;
        double d=-79.20479, dArr2[]=new double[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-9682);
        FuzzerUtils.init(dArr2, 27.10103);

        f3 = f3;
        f4 = 1;
        while (++f4 < 244) {
            sArr = sArr;
            if (true) break;
            if (b1) break;
            for (i11 = 7; i11 > 1; --i11) {
                dArr2[(int)(f4 + 1)] -= 112.581F;
                i10 = i12;
            }
        }
        dArr2[(39995 >>> 1) % N] += -3;
        i13 = 1;
        do {
            Test.iArrFld[i13 - 1][i13] *= i9;
            Test.instanceCount -= Test.instanceCount;
            d -= i10;
            Test.iFld += (((i13 * Test.instanceCount) + i10) - Test.instanceCount);
            Test.lArrFld[i13 - 1] <<= 6;
        } while (++i13 < 322);
        vMeth1_check_sum += i8 + i9 + i10 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) + (b1 ? 1 : 0) + i11 +
            i12 + i13 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2));
    }

    public static void vMeth() {

        int i3=149, i4=18930, i5=-113, i6=9, i7=159;
        float f2=-51.913F;
        boolean b=false;

        i3 = 1;
        do {
            i4 += (123 + (i3 * i3));
            for (i5 = 1; i5 < 7; ++i5) {
                i6 = (int)(Test.instanceCount++);
                i7 = 1;
                while (++i7 < 2) {
                    Test.instanceCount += (i7 ^ Test.instanceCount);
                    f2 *= (Test.instanceCount++);
                    Test.instanceCount += (((i7 * i7) + Test.iFld) - f2);
                    Test.iArrFld = (Test.iArrFld = (Test.iArrFld = (Test.iArrFld = Test.iArrFld)));
                    b = b;
                    vMeth1(i7, i3, i4);
                    f2 = f2;
                    try {
                        i6 = (-1292364167 / i3);
                        i6 = (11 / i7);
                        i4 = (Test.iArrFld[i5][i5] % Test.iFld);
                    } catch (ArithmeticException a_e) {}
                    i4 >>= i5;
                }
                Test.iArrFld[i3 - 1][i5] -= (int)1.107800;
            }
        } while (++i3 < 226);
        vMeth_check_sum += i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + (b ? 1 : 0);
    }

    public static int iMeth(int i2) {

        int i14=6, i15=-6, i16=-50860, i17=-8;
        double d1=-110.76987, dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 11.6719);

        i2 = (int)(Math.abs(++dArr1[(-11 >>> 1) % N]) + i2);
        vMeth();
        Test.instanceCount -= Test.iFld;
        for (i14 = 3; i14 < 208; ++i14) {
            Test.iArrFld[i14][i14 + 1] >>= -66;
            for (i16 = 1; 8 > i16; ++i16) {
                d1 /= (i14 | 1);
                Test.instanceCount = 167;
            }
        }
        long meth_res = i2 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-2.569F, f1=0.675F;
        int i=77, i1=14, i18=-8, i19=210, i20=4017, i21=-5, iArr[]=new int[N];
        byte by=65;
        boolean b2=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.81001);
        FuzzerUtils.init(iArr, -45475);

        for (f = 6; f < 158; f++) {
            f1 -= Math.max(i = (i * i), (int)(-(dArr[(int)(f + 1)]++)));
            iArr = iArr;
            i1 = 1;
            do {
                i = (int)(Test.instanceCount++);
                by %= (byte)(((long)(f1 * iMeth(Test.iFld))) | 1);
                Test.instanceCount += (((i1 * f1) + Test.iFld) - Test.iFld);
                Test.instanceCount -= (long)f1;
                i = i;
                Test.lArrFld[i1] = Test.instanceCount;
                Test.iFld += (((i1 * Test.iFld) + i1) - f1);
                i += i1;
                Test.iFld >>= Test.iFld;
                i += (int)Test.instanceCount;
            } while (++i1 < 165);
            i += (int)f;
            Test.instanceCount += Test.instanceCount;
            by = (byte)f1;
            i18 = 1;
            do {
                i /= (int)(i1 | 1);
                dArr[(int)(f - 1)] *= Test.instanceCount;
            } while (++i18 < 165);
            for (i19 = 5; i19 < 165; i19++) {
                b2 = b2;
                i20 += (((i19 * i18) + i) - i);
                i21 = 2;
                do {
                    i20 = i19;
                    iArr[i21 - 1] = i19;
                    i -= i19;
                    i20 = (int)2459770637L;
                    Test.sFld += (short)i1;
                    i += (int)Test.instanceCount;
                } while (--i21 > 0);
            }
        }

        FuzzerUtils.out.println("f i f1 = " + Float.floatToIntBits(f) + "," + i + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i1 by i18 = " + i1 + "," + by + "," + i18);
        FuzzerUtils.out.println("i19 i20 b2 = " + i19 + "," + i20 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i21 dArr iArr = " + i21 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
