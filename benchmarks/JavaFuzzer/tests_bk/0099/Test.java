// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-926575115L;
    public static double dFld=106.61839;
    public static short sFld=17124;
    public int iFld=-6612;
    public volatile int iFld1=4;
    public byte byFld=-114;
    public static int iArrFld[]=new int[N];
    public volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -52308);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2) {

        double d1=0.72013;
        int i3=-47176, i4=-141, i5=0;
        boolean b1=true, bArr[]=new boolean[N];
        byte by1=-53;
        long l=-8793728816323709113L;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -77.1007F);
        FuzzerUtils.init(bArr, true);

        Test.sFld -= (short)i2;
        Test.instanceCount = i2;
        i2 += (int)-5921398228729601057L;
        Test.instanceCount = i2;
        d1 = 1;
        do {
            Test.sFld <<= (short)Test.instanceCount;
            i3 = 1;
            do {
                fArr[(int)(d1 + 1)] -= 39122;
                for (i4 = 1; i4 < 1; ++i4) {
                    i2 = -2;
                    if (b1) continue;
                    switch ((i4 % 5) * 5) {
                    case 24:
                    case 22:
                        i2 += (int)Test.dFld;
                        Test.sFld -= by1;
                        Test.iArrFld[(int)(d1)] <<= (int)l;
                        break;
                    case 7:
                        i2 <<= i4;
                        break;
                    case 10:
                        bArr[i3 - 1] = b1;
                        break;
                    case 5:
                        i5 = by1;
                        break;
                    }
                }
            } while (++i3 < 6);
        } while (++d1 < 264);
        vMeth1_check_sum += i2 + Double.doubleToLongBits(d1) + i3 + i4 + i5 + (b1 ? 1 : 0) + by1 + l +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth() {

        int i6=7, i7=-6, i8=-2, i9=-43419, i10=-29, i11=-12;
        float f=-75.432F;

        vMeth1(i6);
        for (i7 = 2; i7 < 225; ++i7) {
            Test.iArrFld[i7] += Test.sFld;
            i6 = (int)f;
            Test.dFld -= Test.instanceCount;
            i8 -= i6;
            i6 = (int)f;
            if (i7 != 0) {
            }
            for (i9 = 7; i9 > 1; --i9) {
                i6 += (i9 - Test.sFld);
                i11 = 1;
                do {
                    i6 += (((i11 * i7) + Test.instanceCount) - i9);
                    Test.instanceCount += i7;
                    i6 += (i11 | i11);
                    i8 = i7;
                } while (++i11 < 2);
            }
        }
        long meth_res = i6 + i7 + i8 + Float.floatToIntBits(f) + i9 + i10 + i11;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, byte by, boolean b) {

        double d=96.127974;
        int i1=153, i12=-21889, i13=28607, i14=-72, i15=-12, i16=80, i17=-44453;
        float f1=-54.43F;

        i = (int)(i = (int)((i * i) - (--Test.dFld)));
        for (d = 5; 174 > d; d++) {
            Test.instanceCount += (29 + (d * d));
        }
        i1 += (iMeth() * i1);
        Test.dFld += i12;
        for (i13 = 235; i13 > 14; --i13) {
            for (i15 = 1; i15 < 7; i15++) {
                i12 = (int)Test.instanceCount;
            }
            i17 = 1;
            do {
                i14 *= i16;
                f1 += Test.instanceCount;
                i1 = Test.sFld;
                i1 -= (int)88.496F;
                f1 += (i17 - i17);
                if (b) continue;
            } while (++i17 < 7);
        }
        vMeth_check_sum += i + by + (b ? 1 : 0) + Double.doubleToLongBits(d) + i1 + i12 + i13 + i14 + i15 + i16 + i17 +
            Float.floatToIntBits(f1);
    }

    public void mainTest(String[] strArr1) {

        boolean b2=true;
        double d2=-108.103088;
        int i18=126, i19=7243, i20=-121, i21=-44965;
        float f2=-31.837F, f3=-1.716F;

        vMeth(iFld, (byte)(-91), b2);
        d2 = 1;
        while (++d2 < 262) {
            for (i18 = (int)(d2); i18 < 96; ++i18) {
                iFld += (((i18 * i19) + f2) - f2);
                switch ((int)((d2 % 2) + 57)) {
                case 57:
                    Test.instanceCount += (long)d2;
                    break;
                case 58:
                    Test.instanceCount = iFld;
                    iFld1 %= (int)(i19 | 1);
                    for (f3 = 1; 1 > f3; ++f3) {
                        Test.instanceCount = 59519;
                        b2 = b2;
                    }
                    iFld += Test.sFld;
                    break;
                }
                i21 = 1;
                while (++i21 < 1) {
                    switch (((1 >>> 1) % 1) + 35) {
                    case 35:
                        iFld = (int)f2;
                        break;
                    }
                    dArrFld = dArrFld;
                    i20 *= (int)f2;
                    f2 += i21;
                    Test.instanceCount = (long)Test.dFld;
                    switch ((i21 % 1) + 7) {
                    case 7:
                        iFld1 -= i18;
                        i20 = i21;
                        b2 = b2;
                        i19 = i19;
                    default:
                        Test.iArrFld[(int)(d2)] -= i20;
                        f2 -= Test.instanceCount;
                        iFld1 <<= iFld1;
                    }
                    iFld1 = byFld;
                }
                Test.instanceCount *= iFld;
                iFld1 += i18;
            }
        }

        FuzzerUtils.out.println("b2 d2 i18 = " + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d2) + "," + i18);
        FuzzerUtils.out.println("i19 f2 f3 = " + i19 + "," + Float.floatToIntBits(f2) + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i20 i21 = " + i20 + "," + i21);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("iFld iFld1 byFld = " + iFld + "," + iFld1 + "," + byFld);
        FuzzerUtils.out.println("Test.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
