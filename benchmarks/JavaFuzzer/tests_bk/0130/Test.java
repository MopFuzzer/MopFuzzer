// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6400L;
    public static int iFld=35536;
    public static volatile short sFld=-2585;
    public static byte byFld=92;
    public static boolean bFld=true;
    public static boolean bFld1=false;
    public static int iArrFld[][]=new int[N][N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -111);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d) {

        int i8=162, i9=202, i10=113, i11=52, i12=124, i13=225, iArr1[]=new int[N];
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 7889301266093107589L);
        FuzzerUtils.init(iArr1, -14);

        for (i8 = 6; i8 < 243; ++i8) {
            for (i10 = 1; i10 < 7; ++i10) {
                lArr[i8 - 1] ^= i11;
                iArr1[i8 - 1] = -8;
                lArr[i10 + 1] -= i9;
            }
            Test.iArrFld = FuzzerUtils.int2array(N, (int)38362);
            Test.instanceCount |= i8;
            i9 %= (int)(Test.sFld | 1);
            i12 = 1;
            do {
                int i14=169;
                if (i13 != 0) {
                    vMeth1_check_sum += Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) +
                        FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                i13 >>= (int)Test.instanceCount;
                switch ((((i11 >>> 1) % 10) * 5) + 14) {
                case 45:
                    b = b;
                    i13 = 9;
                    i9 += (int)Test.instanceCount;
                    break;
                case 52:
                    Test.instanceCount <<= Test.byFld;
                    break;
                case 43:
                    i13 = i11;
                    break;
                case 53:
                    i11 += i9;
                case 31:
                case 22:
                    d = i13;
                    break;
                case 26:
                    i11 += (((i12 * Test.instanceCount) + i14) - i14);
                    break;
                case 63:
                    Test.iFld = 9031;
                    break;
                case 54:
                    i14 = (int)Test.instanceCount;
                    break;
                case 40:
                    Test.instanceCount -= 46008;
                    break;
                default:
                    b = true;
                }
            } while (++i12 < 7);
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2, int i3) {

        int i4=-63136, i5=-55669, i6=47, i7=0, i15=-3;
        double d1=-2.108245;
        float f1=1.542F, fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 1.491F);

        for (i4 = 15; 295 > i4; i4++) {
            for (i6 = i4; i6 < 6; i6++) {
                vMeth1(d1);
                fArr = fArr;
                i15 = 1;
                while (++i15 < 1) {
                    switch ((i15 % 1) + 120) {
                    case 120:
                        Test.iFld += i6;
                        Test.byFld /= (byte)(i6 | 1);
                        break;
                    }
                    Test.iFld = i5;
                    Test.iFld = i15;
                    Test.iFld = Test.iFld;
                    i2 -= i3;
                    i7 %= (int)(i2 | 1);
                    i7 = 60752;
                    f1 -= i6;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i15 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(int i1) {

        int i16=12, i17=9029, i18=12;
        double d2=62.89277;

        vMeth(i1, -12);
        Test.instanceCount |= Test.iFld;
        Test.byFld = (byte)Test.iFld;
        i16 = 1;
        do {
            Test.iFld += i16;
            i1 += (int)Test.instanceCount;
        } while (++i16 < 287);
        Test.iFld *= (int)Test.instanceCount;
        for (i17 = 13; 285 > i17; ++i17) {
            if (false) continue;
            d2 = 1;
            while (++d2 < 6) {
                i18 = i1;
                if (Test.bFld) continue;
                i1 >>>= 52275;
                i1 += (int)(((d2 * Test.instanceCount) + Test.iFld) - Test.byFld);
                if (Test.bFld) break;
            }
        }
        long meth_res = i1 + i16 + i17 + i18 + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0, i19=-195, i20=1, i21=-24575, i22=-6, i23=-14, i24=0, iArr[]=new int[N];
        float f=-2.411F, f2=115.860F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(byArr, (byte)-23);

        i = 1;
        do {
            Test.iFld = (int)((iArr[i] += (int)(f * Test.iFld)) - (iMeth(6) - Test.iFld));
            Test.instanceCount += (i * i);
            if (false) continue;
            Test.iFld <<= Test.iFld;
            for (i19 = 3; i19 < 80; ++i19) {
                i20 = Test.byFld;
                for (i21 = 1; 2 > i21; ++i21) {
                    Test.byFld *= (byte)i20;
                    Test.instanceCount = i;
                    Test.iArrFld[i19] = Test.iArrFld[i19];
                }
                Test.instanceCount &= -249L;
                Test.byFld -= (byte)i19;
                for (i23 = i19; i23 < 2; ++i23) {
                    f += (i23 - i22);
                    Test.iFld += (i23 * i23);
                }
            }
        } while (++i < 316);
        f2 = 1;
        do {
            Test.iFld <<= Test.iFld;
            i22 = (int)Test.instanceCount;
            if (Test.bFld) break;
            Test.iArrFld[(int)(f2 + 1)][(int)(f2)] += (int)Test.instanceCount;
            fArrFld[(int)(f2 - 1)] = Test.byFld;
            i22 *= i19;
            switch (((Test.iFld >>> 1) % 2) + 33) {
            case 33:
                Test.bFld = Test.bFld1;
                Test.iFld += (186 + (f2 * f2));
                byArr[(int)(f2)] -= (byte)i20;
                if (false) continue;
                break;
            case 34:
                iArr[(8 >>> 1) % N] = i23;
                break;
            }
            f = Test.instanceCount;
        } while (++f2 < 318);

        FuzzerUtils.out.println("i f i19 = " + i + "," + Float.floatToIntBits(f) + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 f2 = " + i23 + "," + i24 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("iArr byArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.byFld Test.bFld Test.bFld1 = " + Test.byFld + "," + (Test.bFld ? 1 : 0) + "," +
            (Test.bFld1 ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
