// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=163L;
    public static byte byFld=89;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i5, float f, int i6) {


        f = 31L;
        long meth_res = i5 + Float.floatToIntBits(f) + i6;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i3, int i4) {

        float f1=0.770F;
        int i7=-14, i8=-5, i9=-8408, i10=-45904, i11=-24736, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 14);

        i3 = (int)((++i3) + lMeth(i3, f1, i4));
        for (i7 = 5; i7 < 146; ++i7) {
            Test.instanceCount = Test.instanceCount;
            Test.instanceCount -= Test.instanceCount;
            i9 = 1;
            while (++i9 < 11) {
                i8 += (((i9 * i8) + i7) - Test.byFld);
                i4 += i8;
                for (i10 = 1; i10 < 1; ++i10) {
                    iArr[i7 - 1] *= (int)10L;
                    i11 = i9;
                    i4 += (((i10 * i4) + Test.instanceCount) - f1);
                    i3 <<= i7;
                    i8 = (int)Test.instanceCount;
                }
                i4 -= (int)f1;
                i11 += i9;
            }
        }
        vMeth1_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i1=-1, i2=65447, i12=-42394, i13=0, i14=11, i15=87, iArr1[][]=new int[N][N];
        short s=-4175;
        float f2=-1.826F;

        FuzzerUtils.init(iArr1, 36613);

        i1 = 1;
        while (++i1 < 278) {
            Test.instanceCount = (++i2);
            s += (short)(-118 + (i1 * i1));
            if (false) {
                vMeth1(149, i2);
            }
            i2 += i1;
            for (i12 = i1; i12 < 6; ++i12) {
                try {
                    i2 = (i1 / i13);
                    i2 = (i12 / -1858581739);
                    i2 = (i2 / iArr1[i12][i12 + 1]);
                } catch (ArithmeticException a_e) {}
                for (i14 = 1; i14 < 1; ++i14) {
                    switch (((-4 >>> 1) % 2) + 110) {
                    case 110:
                        i15 = i2;
                    case 111:
                        i15 ^= i13;
                        f2 -= i15;
                        s += (short)(i14 | i12);
                        if (i13 != 0) {
                            vMeth_check_sum += i1 + i2 + s + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) +
                                FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                        break;
                    default:
                        i2 += i13;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i2 + s + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=120;

        i = (~(iArrFld[(i >>> 1) % N]++));
        vMeth();

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld iArrFld = " + Test.instanceCount + "," + Test.byFld +
            "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
