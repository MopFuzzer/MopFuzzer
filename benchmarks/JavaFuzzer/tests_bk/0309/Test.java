// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3434090069190289640L;
    public int iFld=-59812;
    public static volatile float fFld=42.734F;

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth(float f1) {

        int i5=1520, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, 57843);

        iArr1[(40308 >>> 1) % N][(i5 >>> 1) % N] = (int)((i5 * (f1 * i5)) + (iArr1[(4 >>> 1) % N][(i5 >>> 1) % N] - (i5
            + -191)));
        vMeth_check_sum += Float.floatToIntBits(f1) + i5 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(double d1, double d2) {

        long l=-237L;
        double d3=-1.112905;
        int i8=-89, i9=-48352, i10=3;
        boolean b=false;
        byte by=-63;

        l = 122;
        do {
            vMeth(Test.fFld);
            for (d3 = 1; d3 < 25; d3 += 2) {
                Test.instanceCount >>>= i8;
            }
            Test.instanceCount = Test.instanceCount;
            Test.instanceCount = i8;
            i8 *= (int)d1;
            for (i9 = 1; i9 < 25; i9++) {
                i8 &= i8;
                Test.fFld -= Test.fFld;
                b = b;
                d2 -= 5L;
                i10 = (int)l;
                Test.instanceCount += by;
                i8 -= (int)Test.instanceCount;
            }
        } while ((l -= 2) > 0);
        vMeth1_check_sum += Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + l + Double.doubleToLongBits(d3)
            + i8 + i9 + i10 + (b ? 1 : 0) + by;
    }

    public static float fMeth() {

        int i6=54813, i7=7, i11=-51980, i12=-20957, i13=-59419, i14=215, iArr2[]=new int[N];
        double d4=0.111451;
        boolean b1=true;

        FuzzerUtils.init(iArr2, 41003);

        try {
            vMeth(Test.fFld);
            for (i6 = 5; i6 < 308; i6++) {
                vMeth1(d4, -124.128822);
                i7 >>= i7;
                b1 = b1;
                i7 += i6;
                for (i11 = 5; i11 > i6; i11--) {
                    i12 = i6;
                    iArr2[i6 - 1] >>= (int)Test.instanceCount;
                    b1 = b1;
                    for (i13 = 1; i13 < 1; ++i13) {
                        if (false) continue;
                        try {
                            iArr2[i6] = (i13 % i6);
                            iArr2[i6 - 1] = (i7 / iArr2[i6 - 1]);
                            i12 = (i11 / 36031);
                        } catch (ArithmeticException a_e) {}
                        d4 = i7;
                    }
                }
            }
        }
        catch (ArithmeticException exc1) {
            iArr2[(i7 >>> 1) % N] *= i12;
        }
        long meth_res = i6 + i7 + Double.doubleToLongBits(d4) + (b1 ? 1 : 0) + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr2);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=97, i1=116, i2=32210, i3=-13, i4=8, iArr[]=new int[N];
        float f=-1.614F;
        double d=-2.113366;
        boolean b2=false;
        byte by1=50, byArr[]=new byte[N];
        long lArr[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 166);
        FuzzerUtils.init(lArr, -44L);
        FuzzerUtils.init(byArr, (byte)65);
        FuzzerUtils.init(sArr, (short)-3526);

        iArr[(iFld >>> 1) % N] += (int)(61455 * ((lArr[(iFld >>> 1) % N]++) * iFld));
        for (i = 5; i < 383; i++) {
            for (f = 2; f < 67; ++f) {
                switch (((((int)(i2 - d)) >>> 1) % 2) + 27) {
                case 27:
                    for (i3 = (int)(f); 2 > i3; i3++) {
                        switch ((((i3 * -213) >>> 1) % 3) + 20) {
                        case 20:
                            lArr[i + 1] *= (long)(Test.instanceCount = (long)(Math.min(Test.instanceCount, -100701964L)
                                - fMeth()));
                            Test.fFld *= Test.instanceCount;
                            break;
                        case 21:
                            i1 += i3;
                            iFld <<= i1;
                        case 22:
                            lArr[(int)(f - 1)] *= i1;
                            break;
                        }
                        switch ((i % 3) + 82) {
                        case 82:
                            switch ((int)((f % 8) + 105)) {
                            case 105:
                                iFld = i;
                                switch ((i % 5) + 106) {
                                case 106:
                                    switch ((i3 % 7) + 23) {
                                    case 23:
                                        i2 -= (int)0L;
                                        i1 -= i2;
                                        Test.instanceCount += (i3 + i1);
                                    case 24:
                                        i2 = -213;
                                        i4 += (((i3 * iFld) + i) - i2);
                                        Test.fFld += i3;
                                    case 25:
                                        i2 >>= i1;
                                        if (b2) continue;
                                        i2 >>= 3373;
                                        by1 %= (byte)14;
                                        break;
                                    case 26:
                                        Test.fFld += Test.instanceCount;
                                        break;
                                    case 27:
                                        Test.instanceCount = i2;
                                        Test.instanceCount += i3;
                                        Test.fFld += i3;
                                    case 28:
                                        i1 = (int)Test.instanceCount;
                                        break;
                                    case 29:
                                        i1 += i3;
                                        break;
                                    }
                                    break;
                                case 107:
                                    lArr[i] = i1;
                                    break;
                                case 108:
                                    byArr[(int)(f - 1)] = (byte)16596;
                                    break;
                                case 109:
                                    Test.instanceCount -= -12;
                                    break;
                                case 110:
                                default:
                                    Test.instanceCount += (i3 + iFld);
                                }
                            case 106:
                            case 107:
                                iArr[i3] -= 23930;
                                break;
                            case 108:
                                Test.instanceCount += i3;
                                break;
                            case 109:
                                Test.fFld += i3;
                            case 110:
                                by1 += (byte)(i3 * i3);
                                break;
                            case 111:
                                sArr[i3 + 1] = (short)iFld;
                            case 112:
                                Test.fFld += iFld;
                            }
                            break;
                        case 83:
                            Test.fFld += 21;
                            break;
                        case 84:
                            Test.fFld -= i2;
                        default:
                            Test.instanceCount >>= iFld;
                        }
                    }
                    break;
                case 28:
                    try {
                        i2 = (i3 / i1);
                        i4 = (i / -14746);
                        i4 = (iArr[i - 1] / i4);
                    } catch (ArithmeticException a_e) {}
                default:
                    i2 >>= -21;
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i2 d i3 = " + i2 + "," + Double.doubleToLongBits(d) + "," + i3);
        FuzzerUtils.out.println("i4 b2 by1 = " + i4 + "," + (b2 ? 1 : 0) + "," + by1);
        FuzzerUtils.out.println("iArr lArr byArr = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr) +
            "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest vMeth1
//DEBUG  vMeth1 ->  vMeth1 fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
