// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=119L;
    public static short sFld=8303;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 23851);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=166, i2=46640, i3=-6, i4=35310, i5=-7;
        float f=-112.140F, f1=-1.579F;
        boolean b=true;
        byte by=13;

        for (i1 = 17; 362 > i1; ++i1) {
            for (i3 = 1; 5 > i3; i3++) {
                for (f = 1; f < 2; f++) {
                    f1 *= -14;
                    if (b) continue;
                    i2 += (int)f;
                    Test.instanceCount -= i1;
                    i4 = i5;
                    if (b) break;
                    i2 += (int)(((f * i1) + i5) - by);
                    Test.iArrFld[(int)(f)] -= i1;
                    i2 *= (int)1.105555;
                    f1 += (f - i5);
                }
                Test.sFld += (short)(i3 * i3);
                if (b) continue;
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            by;
    }

    public static void vMeth() {

        boolean b1=false;

        vMeth1();
        b1 = Test.bFld;
        Test.instanceCount -= Test.instanceCount;
        vMeth_check_sum += (b1 ? 1 : 0);
    }

    public static void vSmallMeth(long l, int i) {

        double d=-97.99764;

        vMeth();
        d = -192;
        vSmallMeth_check_sum += l + i + Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        int i6=4, i7=-111, i8=254, i9=151, i10=-133, i11=2, i12=-10;
        float f2=-1.825F;

        for (int smallinvoc=0; smallinvoc<875; smallinvoc++) vSmallMeth(Test.instanceCount, i6);
        for (i7 = 389; i7 > 2; --i7) {
            i8 &= i6;
            Test.instanceCount -= 71L;
            for (i9 = 3; i9 < 65; i9++) {
                Test.iArrFld[i9] = i9;
                for (i11 = 1; i11 < 2; i11++) {
                    Test.iArrFld[i11 + 1] *= i8;
                    i12 *= i8;
                    Test.instanceCount += i11;
                    switch ((i7 % 2) + 27) {
                    case 27:
                        i12 += i11;
                        break;
                    case 28:
                        Test.iArrFld[i7] <<= i6;
                        Test.instanceCount -= i8;
                        break;
                    default:
                        Test.iArrFld = Test.iArrFld;
                    }
                    switch ((((145 >>> 1) % 9) * 5) + 72) {
                    case 112:
                        i8 >>>= i7;
                        Test.iArrFld[i11 - 1] += i6;
                        break;
                    case 115:
                        i12 += (i11 | Test.instanceCount);
                        f2 = 0.995F;
                    case 91:
                        i6 += (i11 - f2);
                        break;
                    case 111:
                        Test.instanceCount |= i12;
                        Test.sFld += (short)(i11 * i11);
                        break;
                    case 114:
                        f2 = i9;
                    case 95:
                        if (false) {
                            if (Test.bFld) continue;
                            i6 = i12;
                            i8 = (int)Test.instanceCount;
                        }
                        break;
                    case 110:
                        i6 -= -59;
                        i10 -= i7;
                        break;
                    case 75:
                        Test.iArrFld[i11] = i8;
                    case 96:
                        i10 += i9;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i6 i7 i8 = " + i6 + "," + i7 + "," + i8);
        FuzzerUtils.out.println("i9 i10 i11 = " + i9 + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 f2 = " + i12 + "," + Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.bFld = " + Test.instanceCount + "," + Test.sFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
