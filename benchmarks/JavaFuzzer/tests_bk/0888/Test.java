// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1858087056L;
    public static int iFld=11;
    public double dFld=-1.96552;
    public static int iFld1=-50;
    public static short sFld=-7291;
    public static float fFld=-90.297F;
    public boolean bFld=false;
    public static int iFld2=-12853;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -71.65F);
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth(int i) {

        byte by=95;
        float f=0.181F;

        Test.instanceCount >>= (long)(((by >> 148L) + 2.1004F) - f);
        Test.instanceCount /= ((--by) | 1);
        vMeth_check_sum += i + by + Float.floatToIntBits(f);
    }

    public static int iMeth1(int i4, long l1, int i5) {

        int i6=11, i7=-253, i8=-2, i9=5149;
        float f1=-92.305F;
        double d=0.114952;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -7L);

        vMeth(20083);
        for (i6 = 5; i6 < 262; ++i6) {
            f1 = Test.instanceCount;
            i7 -= Test.iFld1;
            l1 += (long)f1;
            i7 = i7;
            Test.iArrFld[i6 - 1] -= i5;
            for (i8 = i6; i8 < 6; i8++) {
                d = 1;
                do {
                    i9 ^= -1593;
                    i9 -= (int)d;
                    Test.iFld1 |= 25090;
                    Test.iFld1 += i9;
                    l1 |= Test.iFld;
                    i5 = -39966;
                } while ((d += 2) < 1);
            }
        }
        long meth_res = i4 + l1 + i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, long l) {

        int i2=-59, i3=3, i10=35025;
        float f2=1.923F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -12L);

        for (i2 = 170; i2 > 10; i2 -= 3) {
            Test.iArrFld[i2 + 1] = iMeth1(i1, -9171923160572742768L, i1);
            i10 = 1;
            while (++i10 < 29) {
                Test.sFld >>>= (short)Test.iFld;
            }
        }
        Test.iFld += (int)l;
        i3 -= (int)f2;
        lArr1 = lArr1;
        Test.iArrFld[(Test.iFld1 >>> 1) % N] -= 14;
        long meth_res = i1 + l + i2 + i3 + i10 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d1=-78.23080;
        int i11=-92, i12=60652, i13=-197, i14=-9525, i15=-1222, i16=-63808, i17=-3;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, 0L);

        Test.fArrFld[(-60287 >>> 1) % N] = (float)(Test.iArrFld[(Test.iFld >>> 1) % N] -= (int)(++dFld));
        vMeth(iMeth(Test.iFld1, Test.instanceCount));
        Test.iArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        for (d1 = 2; d1 < 237; ++d1) {
            for (i12 = 6; 107 > i12; i12++) {
                Test.iArrFld[(int)(d1 + 1)] -= (int)1.36F;
                Test.iArrFld[(Test.iFld >>> 1) % N] <<= i11;
                Test.fFld = Test.iFld1;
                if (bFld) break;
                Test.instanceCount += (((i12 * Test.iFld1) + Test.instanceCount) - Test.instanceCount);
                Test.iArrFld[(int)(d1)] = Test.iFld2;
                Test.iArrFld[i12 - 1] *= Test.iFld;
                lArr2 = FuzzerUtils.long2array(N, (long)-97L);
                if (bFld) {
                    i13 += (((i12 * Test.fFld) + i12) - Test.iFld);
                    Test.iFld1 = Test.iFld2;
                    for (i14 = 1; i14 < 2; ++i14) {
                        i13 ^= (int)Test.instanceCount;
                        Test.instanceCount += Test.iFld2;
                        Test.iFld += (i14 ^ Test.iFld1);
                        Test.fFld *= Test.iFld;
                        i13 >>>= i13;
                    }
                } else if (bFld) {
                    for (i16 = 1; 2 > i16; ++i16) {
                        i15 += (189 + (i16 * i16));
                        i15 *= i15;
                        Test.iFld2 %= (int)(i14 | 1);
                        Test.iFld1 = 22807;
                        Test.iFld += (int)dFld;
                        Test.sFld = (short)Test.fFld;
                        dFld -= 6;
                    }
                } else {
                    i13 = i17;
                }
            }
        }

        FuzzerUtils.out.println("d1 i11 i12 = " + Double.doubleToLongBits(d1) + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 lArr2 = " + i16 + "," + i17 + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld dFld = " + Test.instanceCount + "," + Test.iFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.iFld1 Test.sFld Test.fFld = " + Test.iFld1 + "," + Test.sFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("bFld Test.iFld2 Test.fArrFld = " + (bFld ? 1 : 0) + "," + Test.iFld2 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest iMeth1 iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
