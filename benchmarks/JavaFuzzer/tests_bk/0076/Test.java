// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-59035L;
    public static volatile short sFld=24048;
    public static byte byFld=110;
    public static float fFld=0.325F;
    public static boolean bFld=false;
    public float fArrFld[]=new float[N];

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i5) {

        int i6=-26, i7=79, i8=107, i9=4, iArr[]=new int[N];
        byte by1=33;
        float f=-1.603F;
        double d=2.122050;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3149048647L);
        FuzzerUtils.init(iArr, 4);

        lArr[(i5 >>> 1) % N] *= i5;
        Test.instanceCount = i5;
        for (i6 = 10; 277 > i6; i6++) {
            by1 -= (byte)12;
            i5 -= Test.sFld;
            if (b) {
                Test.instanceCount = Test.instanceCount;
                for (i8 = 1; 6 > i8; i8++) {
                    int i10=11;
                    Test.sFld -= (short)-53202L;
                    f = 1;
                    while ((f += 2) < 2) {
                        i5 *= i6;
                    }
                    try {
                        i5 = (i5 / 22);
                        i9 = (i6 / -103);
                        i7 = (88 / i5);
                    } catch (ArithmeticException a_e) {}
                    i10 -= i9;
                    d -= f;
                    try {
                        i10 = (22842 / i5);
                        i9 = (46554 / i8);
                        i5 = (iArr[i6] % -2319);
                    } catch (ArithmeticException a_e) {}
                }
            } else if (b) {
                i7 -= 5445;
            }
        }
        long meth_res = i5 + i6 + i7 + by1 + i8 + i9 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + (b ? 1 :
            0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(byte by, long l) {

        int i1=-52609, i2=-29187, i3=-36987, i4=139, i11=250, i12=29932, i13=42568, iArr1[]=new int[N];
        long l1=4764865457815602544L, l2=1782064699L;
        float f1=-56.286F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.775F);
        FuzzerUtils.init(iArr1, 191);

        for (i1 = 8; i1 < 180; ++i1) {
            for (i3 = 9; 1 < i3; i3 -= 2) {
                i4 >>= (int)(i4 >>> (long)((i1 + Test.sFld) - -8.259F));
                i4 = (i2 = (i4++));
            }
            fArr[i1 + 1] = (Test.instanceCount - lMeth(i3));
            for (l1 = 1; l1 < 9; ++l1) {
                l += i1;
            }
            for (i12 = i1; 9 > i12; i12++) {
                iArr1[i12 - 1] >>= i1;
                f1 = i12;
                l = i2;
                iArr1 = iArr1;
                i11 += (((i12 * l1) + i3) - l2);
                by <<= (byte)i11;
                iArr1[i1 + 1] *= i4;
            }
        }
        long meth_res = by + l + i1 + i2 + i3 + i4 + l1 + i11 + i12 + i13 + Float.floatToIntBits(f1) + l2 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i14=5, i15=-13, i16=46660, i17=144, i18=61461, iArr2[]=new int[N], iArr3[]=new int[N];
        double d1=58.70973;
        short sArr[]=new short[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(sArr, (short)14254);
        FuzzerUtils.init(iArr2, -7);
        FuzzerUtils.init(lArr1, -987987374746612610L);
        FuzzerUtils.init(iArr3, 219);

        sArr[(-10 >>> 1) % N] = (short)iMeth1((byte)(-12), Test.instanceCount);
        i14 *= i14;
        for (i15 = 3; i15 < 203; i15++) {
            iArr2[i15] = i15;
            i16 = i16;
        }
        i14 <<= i15;
        for (i17 = 2; i17 < 219; i17++) {
            Test.instanceCount += (i17 ^ i14);
            switch ((i17 % 8) + 103) {
            case 103:
                Test.byFld <<= (byte)i15;
                i14 >>= i17;
                Test.byFld = (byte)i17;
                break;
            case 104:
                d1 = 7;
                do {
                    Test.fFld = (float)d1;
                    i14 -= (int)Test.instanceCount;
                } while ((d1 -= 2) > 0);
                break;
            case 105:
                lArr1[i17] >>= i17;
                break;
            case 106:
                Test.instanceCount = (long)Test.fFld;
                break;
            case 107:
                lArr1[i17 - 1] -= i16;
            case 108:
                Test.fFld += (((i17 * i15) + Test.instanceCount) - i15);
            case 109:
                iArr2[i17 - 1] = (int)Test.fFld;
                break;
            case 110:
                if (i14 != 0) {
                }
                break;
            default:
                iArr3[i17 - 1] = (int)Test.instanceCount;
            }
        }
        long meth_res = i14 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-43803, i19=2, i20=-1, i22=14891, i23=-13, i24=-253, i25=-71, i26=-58, i27=-4, i28=-150, iArr4[]=new
            int[N];
        double d2=81.107914;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr4, 120);
        FuzzerUtils.init(bArr, true);

        i *= iMeth();
        for (i19 = 18; 362 > i19; i19++) {
            for (d2 = 1; 73 > d2; d2++) {
                i20 *= -60185;
                Test.instanceCount = Test.byFld;
                if (Test.bFld) {
                    i += (int)d2;
                    for (i23 = 1; 2 > i23; i23++) {
                        iArr4[(int)(d2 + 1)] += i;
                        iArr4[i19 - 1] += (int)d2;
                        i24 *= i24;
                        bArr[i19 + 1] = false;
                        i22 = i20;
                    }
                    for (i25 = 1; i25 < 2; ++i25) {
                        try {
                            i20 = (i23 / 67);
                            iArr4[(int)(d2 - 1)] = (i24 / -12);
                            i20 = (iArr4[i25] / i24);
                        } catch (ArithmeticException a_e) {}
                        if (Test.bFld) continue;
                        fArrFld[i19 + 1] = i20;
                        Test.instanceCount -= Test.instanceCount;
                        iArr4[(int)(d2 - 1)] = -8322;
                        i22 -= i;
                    }
                } else {
                    Test.instanceCount = i22;
                    Test.instanceCount = Test.instanceCount;
                }
                for (i27 = (int)(d2); i27 < 2; i27++) {
                    Test.byFld = (byte)-8;
                    Test.bFld = Test.bFld;
                }
                i22 = -3;
                iArr4[(int)(d2 + 1)] *= i19;
                i22 += (int)(d2 - i25);
                i += Test.byFld;
            }
            i28 = i26;
        }

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d2 i22 i23 = " + Double.doubleToLongBits(d2) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr4 = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr4));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld Test.bFld fArrFld = " + Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ?
            1 : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
