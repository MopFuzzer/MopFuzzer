// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-31115L;
    public static double dFld=2.127451;
    public long lFld=24L;
    public static double dArrFld[]=new double[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, 2.78256);
        FuzzerUtils.init(Test.lArrFld, -4818348898726750853L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, float f) {

        int i6=249, i7=142, i8=-9, i9=-63103, i10=-10, i11=25833, iArr[]=new int[N];
        byte by=-86;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(lArr, -213L);

        for (i6 = 355; i6 > 9; --i6) {
            i8 = 1;
            do {
                Test.instanceCount += (i8 - by);
                switch (((i6 % 2) * 5) + 6) {
                case 9:
                    iArr[i8] >>>= -44;
                    iArr[i8 + 1] += i8;
                    for (i9 = 1; i9 < 1; i9++) {
                        i10 += (i9 - i6);
                        i5 = (int)Test.instanceCount;
                        i10 = i9;
                        Test.instanceCount = (long)Test.dFld;
                    }
                    break;
                case 13:
                    Test.instanceCount += (i8 + i9);
                    break;
                default:
                    iArr[i8 - 1] = i11;
                    lArr[i8 - 1] = Test.instanceCount;
                    i11 = i6;
                }
            } while (++i8 < 5);
        }
        vMeth2_check_sum += i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + by + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i3, int i4, long l) {

        int i12=-53316, i13=45631, i14=-1, i15=158, i16=56, iArr1[][]=new int[N][N];
        short s=-4323;
        double d=0.113473, dArr[][]=new double[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 9);
        FuzzerUtils.init(dArr, -106.48534);
        FuzzerUtils.init(lArr1, -23L);

        vMeth2(i3, 0.964F);
        for (i12 = 10; i12 < 291; ++i12) {
            i3 >>>= s;
            iArr1[i12 - 1][i12 + 1] *= (int)Test.dFld;
            i3 -= (int)l;
            i4 *= i4;
            i13 >>= i13;
        }
        for (d = 4; 160 > d; d++) {
            i3 += (-8 + (d * d));
            for (i15 = 1; 10 > i15; ++i15) {
                i4 >>>= i4;
                dArr[(int)(d - 1)][(int)(d)] *= i4;
                lArr1[(int)(d + 1)] = i14;
                iArr1[(int)(d)][i15 + 1] = i12;
                i3 = 60517;
            }
        }
        vMeth1_check_sum += i3 + i4 + l + i12 + i13 + s + Double.doubleToLongBits(d) + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        int i1=-12, i2=-14807, i17=199, i18=-162, i19=-14, i20=14, i22=8, i23=-41;
        float f1=0.10F;
        short s1=-18242;
        boolean b=true;

        for (i1 = 11; 319 > i1; ++i1) {
            vMeth1(i1, i2, Test.instanceCount);
            i2 -= 7;
            f1 -= i1;
            for (i17 = 1; i17 < 5; ++i17) {
                for (i19 = 1; i19 < 2; i19++) {
                    int i21=31323;
                    i21 -= (int)Test.dFld;
                    i18 >>>= s1;
                    i21 <<= i18;
                    b = false;
                }
                for (i22 = i1; i22 < 2; ++i22) {
                    f1 += 21;
                    i23 >>= -3;
                    i20 += i23;
                    Test.dArrFld[i1] = i20;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f1) + i17 + i18 + i19 + i20 + s1 + (b ? 1 : 0) + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i=0, i24=-1, i25=1, i26=-2772, i27=-253, i28=33938, iArr2[]=new int[N];
        float f2=0.381F;
        boolean b1=false;

        FuzzerUtils.init(iArr2, 26715);

        i = 1;
        do {
            switch (((i % 2) * 5) + 21) {
            case 26:
            case 22:
                vMeth();
                break;
            }
            Test.dFld += i24;
            i25 = 1;
            do {
                f2 *= 58389;
                Test.dArrFld[i + 1] = i24;
                switch ((i25 % 2) + 78) {
                case 78:
                    b1 = b1;
                    Test.dFld -= f2;
                case 79:
                    i24 *= (int)Test.instanceCount;
                    break;
                }
                i24 -= -41;
            } while (++i25 < 74);
            Test.instanceCount = i;
            i24 *= i24;
        } while (++i < 339);
        switch (((i >>> 1) % 5) + 22) {
        case 22:
            i26 = 1;
            while (++i26 < 155) {
                iArr2[i26 - 1] *= 9576;
                iArr2[i26] = i;
                Test.lArrFld[i26 - 1][i26] = 59L;
                Test.instanceCount += Test.instanceCount;
                for (i27 = 10; i27 < 162; i27++) {
                    i24 += (int)Test.instanceCount;
                    Test.dArrFld = FuzzerUtils.double1array(N, (double)57.60355);
                    Test.dFld = i27;
                    if (b1) break;
                    iArr2 = iArr2;
                    i24 = i28;
                    i28 >>>= 32723;
                    i24 += i27;
                }
                iArr2 = FuzzerUtils.int1array(N, (int)-12);
            }
            break;
        case 23:
            i24 += (int)Test.instanceCount;
            break;
        case 24:
            Test.instanceCount -= i;
            break;
        case 25:
            Test.instanceCount += (long)Test.dFld;
            break;
        case 26:
            Test.lArrFld[(i28 >>> 1) % N][(i24 >>> 1) % N] += (long)f2;
        default:
            lFld <<= -58720;
        }

        FuzzerUtils.out.println("i i24 i25 = " + i + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f2 b1 i26 = " + Float.floatToIntBits(f2) + "," + (b1 ? 1 : 0) + "," + i26);
        FuzzerUtils.out.println("i27 i28 iArr2 = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld lFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + lFld);
        FuzzerUtils.out.println("Test.dArrFld Test.lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
