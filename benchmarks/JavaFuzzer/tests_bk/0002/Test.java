// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public short sFld=-1465;
    public int iFld=2;
    public static boolean bFld=false;
    public static volatile double dFld=1.24852;
    public double dFld1=2.33174;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -11);
        FuzzerUtils.init(Test.dArrFld, -110.78501);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6, short s) {

        int i7=13, i8=-11, i9=-49256, i10=-134, i11=56311;
        float f1=-1.347F;
        double d=-2.95586;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 9L);

        for (i7 = 2; i7 < 148; ++i7) {
            f1 -= i8;
            lArr2 = lArr2;
            for (i9 = i7; 11 > i9; ++i9) {
                Test.iArrFld[i7 + 1] *= -226;
                lArr2[i7] = i6;
                Test.bFld = Test.bFld;
                Test.iArrFld[i7] = i9;
                i8 += (((i9 * i9) + i9) - i10);
                if (true) break;
                f1 += i8;
                for (d = 1; d < 1; d++) {
                    if (Test.bFld) continue;
                    Test.instanceCount += (long)d;
                    if (Test.bFld) break;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + s + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + Double.doubleToLongBits(d) +
            i11 + FuzzerUtils.checkSum(lArr2);
    }

    public static void vMeth1() {

        int i3=-27446, i4=29, i12=4, i13=2;
        float f=-45.933F;
        long l=139L, lArr1[]=new long[N];
        short s1=32224;
        double d1=72.110926;

        FuzzerUtils.init(lArr1, -2528L);

        for (i3 = 6; i3 < 316; i3++) {
            if (Test.bFld) break;
            if ((((i4 - i4) + (~i3)) << (long)((i3 - f) * (i3 - -99))) > ((-10 * (l + -9)) - (i3 * (-(i3 * 18863)))))
                continue;
            if (i4 != 0) {
                vMeth1_check_sum += i3 + i4 + Float.floatToIntBits(f) + l + s1 + Double.doubleToLongBits(d1) + i12 +
                    i13 + FuzzerUtils.checkSum(lArr1);
                return;
            }
            Test.iArrFld[i3] &= Math.min((int)((Test.dFld - 20617) + Test.iArrFld[i3 + 1]), (i4--) + Test.iArrFld[i3 +
                1]);
            Test.iArrFld[i3] = (int)((i4 * l) + (lArr1[i3]--));
            vMeth2(16, i3, s1);
            l -= i4;
            l -= i3;
            d1 = 5;
            while ((d1 -= 3) > 0) {
                i4 = i3;
                if (Test.bFld) {
                    for (i12 = (int)(d1); i12 < 3; i12++) {
                        l += i4;
                        if (false) break;
                    }
                } else {
                    try {
                        i13 = (39924 % Test.iArrFld[(int)(d1 + 1)]);
                        i13 = (i3 % 1526949938);
                        i13 = (i3 % i13);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + Float.floatToIntBits(f) + l + s1 + Double.doubleToLongBits(d1) + i12 + i13 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(int i, int i1, int i2) {

        int i14=-3573, i15=1, i16=1, i17=153, i18=23584;
        float f2=-2.647F;

        vMeth1();
        Test.dFld = -10;
        Test.iArrFld[(i1 >>> 1) % N] *= 27021;
        i2 = (int)146L;
        i2 -= i1;
        for (i14 = 12; i14 < 216; ++i14) {
            dFld1 = 0.79964;
            Test.instanceCount &= iFld;
            if (i2 != 0) {
                vMeth_check_sum += i + i1 + i2 + i14 + i15 + Float.floatToIntBits(f2) + i16 + i17 + i18;
                return;
            }
            f2 += (((i14 * i14) + i1) - i1);
            i16 = 1;
            while (++i16 < 8) {
                for (i17 = 1; 1 > i17; ++i17) {
                    Test.instanceCount += (i17 ^ i);
                    f2 -= sFld;
                    Test.dArrFld[i17] = i17;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i14 + i15 + Float.floatToIntBits(f2) + i16 + i17 + i18;
    }

    public void mainTest(String[] strArr1) {

        double d2=81.69828;
        float f3=0.439F, fArr[]=new float[N];
        int i19=11, i20=221, i21=13, i22=-23655, i24=-14;
        long l1=-22931L, l2=3890416962L, lArr[]=new long[N];

        FuzzerUtils.init(fArr, 1.603F);
        FuzzerUtils.init(lArr, 137L);

        Test.instanceCount -= ((Test.instanceCount - (--Test.instanceCount)) + (sFld - (iFld * iFld)));
        fArr[(-153 >>> 1) % N] = iFld;
        lArr[(-11 >>> 1) % N] += Test.iArrFld[(iFld >>> 1) % N];
        vMeth(13, iFld, iFld);
        d2 = 1;
        while (++d2 < 125) {
            iFld -= iFld;
        }
        iFld += -50345;
        f3 -= Test.instanceCount;
        for (i19 = 285; i19 > 14; i19--) {
            i20 = i19;
        }
        switch ((((i19 >>> 1) % 8) * 5) + 73) {
        case 93:
            lArr[(i20 >>> 1) % N] = i19;
            for (i21 = 10; 160 > i21; i21++) {
                Test.iArrFld[i21 - 1] = i22;
                i22 <<= (int)Test.instanceCount;
                iFld += (-66 + (i21 * i21));
                i22 += iFld;
                if (true) continue;
                l1 = 1;
                do {
                    int i23=-161;
                    Test.iArrFld[i21] = i23;
                    Test.instanceCount *= (long)f3;
                } while (++l1 < 167);
                i22 >>= (int)l2;
                l2 = 13;
                fArr[i21 - 1] /= (i21 | 1);
            }
            switch (((i19 >>> 1) % 2) + 1) {
            case 1:
                i24 = 302;
                while (--i24 > 0) {
                    f3 += (((i24 * i22) + i21) - Test.instanceCount);
                    f3 *= Test.instanceCount;
                }
                i22 -= i22;
                Test.dArrFld[(i19 >>> 1) % N] += i19;
                break;
            case 2:
                i20 += iFld;
                break;
            }
            break;
        case 87:
            i22 += i21;
            break;
        case 94:
            dFld1 -= -22417;
            break;
        case 110:
            l2 = i21;
            break;
        case 108:
            i22 -= (int)125.35351;
            break;
        case 88:
            i22 = sFld;
            break;
        case 105:
            lArr[(i21 >>> 1) % N] -= l2;
        case 107:
        }

        FuzzerUtils.out.println("d2 f3 i19 = " + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f3) + "," +
            i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("l1 l2 i24 = " + l1 + "," + l2 + "," + i24);
        FuzzerUtils.out.println("fArr lArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount sFld iFld = " + Test.instanceCount + "," + sFld + "," + iFld);
        FuzzerUtils.out.println("Test.bFld Test.dFld dFld1 = " + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Double.doubleToLongBits(dFld1));
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
