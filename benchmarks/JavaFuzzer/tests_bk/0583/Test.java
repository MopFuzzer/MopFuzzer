// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-61282L;
    public double dFld=0.11423;
    public static volatile boolean bFld=true;
    public long lFld=-37L;
    public static long lArrFld[][]=new long[N][N];
    public static long lArrFld1[]=new long[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1297908862498229807L);
        FuzzerUtils.init(Test.lArrFld1, -46720L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        int i7=-155, i8=12;

        i5 *= i6;
        for (i7 = 12; 337 > i7; ++i7) {
            Test.lArrFld[i7 + 1][i7 + 1] += i7;
            i8 >>>= i7;
            i8 = i5;
            i6 ^= 63;
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8;
    }

    public void vMeth(double d, int i4, long l) {

        int i9=-95, i10=-56968, i11=187, i12=-232, i13=13, i14=-11, i15=-84, iArr[]=new int[N];
        boolean b=true;
        float f=-11.715F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)8490);
        FuzzerUtils.init(iArr, 11690);

        vMeth1(-181, -12);
        i4 = (int)8476515329981050246L;
        for (i9 = 1; i9 < 212; i9++) {
            for (i11 = 1; i11 < 8; i11++) {
                i13 = 2;
                while (--i13 > 0) {
                    sArr[i11] = (short)d;
                    i10 = i12;
                    i10 *= (int)dFld;
                }
                for (i14 = 1; i14 < 2; ++i14) {
                    if (b) continue;
                    i10 = i4;
                    iArr[i9 - 1] -= i14;
                    i10 *= (int)-1114084766556389383L;
                    iArr[i11 + 1] = (int)f;
                    i12 += (i14 + i10);
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i4 + l + i9 + i10 + i11 + i12 + i13 + i14 + i15 + (b ? 1 : 0) +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public int iMeth(int i1, int i2, int i3) {

        int i16=6, i17=5515, i18=-1, i19=4786;
        float f1=-110.13F, f2=75.530F;
        short s=-31999;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        dFld += (-i1);
        vMeth(dFld, i2, 249L);
        i16 = 1;
        do {
            Test.instanceCount = -50857;
            i1 *= i1;
            if (i2 != 0) {
            }
        } while (++i16 < 335);
        f1 /= (float)122.36276;
        i17 = 1;
        while (++i17 < 221) {
            s = (short)4;
            f2 += i1;
            dFld *= i2;
            for (i18 = 7; i17 < i18; i18--) {
                Test.instanceCount += Test.instanceCount;
                bArr[i18] = Test.bFld;
                i19 = 54385;
            }
        }
        long meth_res = i1 + i2 + i3 + i16 + Float.floatToIntBits(f1) + i17 + s + Float.floatToIntBits(f2) + i18 + i19
            + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=7, i20=-70, i21=-22526, i22=-4478, i23=-14, i24=-11, i25=-11, i26=15305, i27=230, iArr1[]=new int[N];
        short s1=-10617;
        float f3=-2.914F;
        boolean b1=true;
        byte by=-21;

        FuzzerUtils.init(iArr1, 220);

        Test.instanceCount = (((-(++Test.instanceCount)) * (-i)) * (iMeth(i, i, i) - s1));
        for (long l1 : Test.lArrFld1) {
            for (i20 = 2; i20 < 63; i20++) {
                if (Test.bFld) {
                    for (i22 = 1; i22 < 2; ++i22) {
                        sArrFld[i20 + 1] -= (short)i23;
                        iArr1[i22] -= (int)dFld;
                        i *= -32505;
                        i21 += (((i22 * l1) + i) - i);
                    }
                    Test.instanceCount = 19014;
                    i -= (int)dFld;
                } else if (b1) {
                    Test.lArrFld[i20 + 1] = FuzzerUtils.long1array(N, (long)5L);
                    i23 += (i20 * i20);
                    f3 += (((i20 * i20) + i20) - i21);
                    if (false) break;
                } else {
                    i -= by;
                    i21 = (int)f3;
                    Test.instanceCount += (long)f3;
                    i = s1;
                }
                for (i24 = i20; i24 < 2; i24++) {
                    i21 += (i24 * i24);
                    dFld += dFld;
                    i23 -= i22;
                    i21 -= 208;
                }
                i += (i20 + i22);
                for (i26 = i20; i26 < 2; i26 += 2) {
                    f3 = lFld;
                }
                i25 += i27;
                f3 *= i26;
                try {
                    i = (i27 / -7224);
                    i21 = (iArr1[i20 + 1] % -39478);
                    i25 = (-125750580 / i27);
                } catch (ArithmeticException a_e) {}
            }
        }

        FuzzerUtils.out.println("i s1 i20 = " + i + "," + s1 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f3 b1 by = " + Float.floatToIntBits(f3) + "," + (b1 ? 1 : 0) + "," + by);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 iArr1 = " + i27 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("lFld Test.lArrFld Test.lArrFld1 = " + lFld + "," + FuzzerUtils.checkSum(Test.lArrFld)
            + "," + FuzzerUtils.checkSum(Test.lArrFld1));
        FuzzerUtils.out.println("sArrFld = " + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
