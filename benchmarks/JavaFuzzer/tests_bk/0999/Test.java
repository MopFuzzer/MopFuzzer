// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2626262430L;
    public static boolean bFld=false;
    public static volatile double dFld=0.80592;
    public volatile short sFld=3472;
    public long lFld=-6L;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3L);
        FuzzerUtils.init(Test.dArrFld, -49.113005);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        int i10=-9642, i11=69, i12=164, i13=-31723, i14=10, i15=-4487, i16=-145, i17=12, iArr2[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.253F);
        FuzzerUtils.init(iArr2, -4);

        for (i10 = 1; i10 < 152; i10++) {
            for (i12 = 1; i12 < 10; i12++) {
                fArr[i10 + 1] = -7L;
            }
            for (i14 = i10; i14 < 10; i14++) {
                iArr2[i10 + 1] = i10;
                Test.instanceCount -= i14;
                i13 += i14;
            }
            for (i16 = 1; i16 < 10; i16++) {
                float f=1.913F;
                if (Test.bFld) continue;
                i13 += (-4 + (i16 * i16));
                if (i11 != 0) {
                    vMeth1_check_sum += l1 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                if (i15 != 0) {
                    vMeth1_check_sum += l1 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                iArr2 = iArr2;
                f += (i16 * i16);
                i13 += (int)l1;
            }
        }
        vMeth1_check_sum += l1 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public static long lMeth(short s1, int i8, long l) {

        int i9=-23816, i18=1, i19=61108;
        byte by=37;
        float f1=25.384F, f2=-55.892F;

        i9 = 292;
        do {
            vMeth1(Test.instanceCount);
            i8 >>= by;
        } while (--i9 > 0);
        f1 = 1;
        do {
            i8 += (int)((long)f1 | i8);
            i8 += (int)(((f1 * i8) + i8) - Test.instanceCount);
            i8 += i9;
            i8 = i9;
            Test.instanceCount += (long)(-1.678F + (f1 * f1));
            for (i18 = 1; i18 < 5; ++i18) {
                f2 = l;
                if (false) continue;
                by -= (byte)i18;
                i8 = (int)58033L;
            }
        } while (++f1 < 335);
        i19 = i8;
        long meth_res = s1 + i8 + l + i9 + by + Float.floatToIntBits(f1) + i18 + i19 + Float.floatToIntBits(f2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d, short s) {

        int i6=168, i7=-59714, i20=-44003, i21=-222, i22=-5, i23=-9, i24=-4, iArr1[]=new int[N];
        float f3=-1.293F, fArr1[]=new float[N];

        FuzzerUtils.init(iArr1, 241);
        FuzzerUtils.init(fArr1, -2.118F);

        for (i6 = 10; 336 > i6; i6++) {
            iArr1[i6 - 1] += (int)lMeth(s, i6, Test.instanceCount);
            switch ((i6 % 7) + 56) {
            case 56:
                for (i20 = 1; i20 < 5; i20++) {
                    Test.bFld = Test.bFld;
                }
                i22 = 5;
                while (--i22 > 0) {
                    i7 &= i20;
                    for (i23 = i22; i23 < 1; i23 += 3) {
                        Test.instanceCount = i24;
                    }
                    i7 = (int)Test.instanceCount;
                    if (true) continue;
                    fArr1[i22 + 1] *= i24;
                    f3 *= 137;
                    i7 = i20;
                    try {
                        i24 = (i6 % iArr1[i6]);
                        i24 = (i7 / i6);
                        i21 = (iArr1[i6 + 1] / -713259371);
                    } catch (ArithmeticException a_e) {}
                }
                break;
            case 57:
                i21 *= i7;
                break;
            case 58:
                i24 = s;
                break;
            case 59:
                i24 = (int)Test.instanceCount;
                break;
            case 60:
                if (Test.bFld) break;
                break;
            case 61:
                i7 *= (int)Test.instanceCount;
                break;
            case 62:
                i21 += i22;
                break;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + s + i6 + i7 + i20 + i21 + i22 + i23 + i24 +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=18964, i1=-9, i2=-194, i3=-45575, i4=-60830, i5=-1, i25=-62109, i26=7, i27=9, i28=34772, i29=-165,
            i30=8237, i31=3105, i32=-98, iArr[]=new int[N];
        byte by1=107;
        boolean b=true;
        float fArr2[]=new float[N];

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(fArr2, 62.988F);

        for (i = 10; i < 191; i++) {
            for (i2 = 4; i2 < 139; ++i2) {
                if (Test.bFld) continue;
            }
        }
        for (i4 = 9; i4 < 192; ++i4) {
            iArr[i4] += (int)(Test.dFld -= ((i + -38687) >> i5));
            vMeth(Test.dFld, sFld);
        }
        for (i25 = 6; i25 < 134; i25++) {
            for (i27 = 12; i27 < 196; i27++) {
                for (i29 = 2; i29 > 1; i29--) {
                    if (Test.bFld) break;
                    i28 = (int)Test.instanceCount;
                    Test.instanceCount = i30;
                    Test.dFld = by1;
                    i28 *= (int)Test.instanceCount;
                    i1 >>>= i3;
                    i1 += (int)Test.instanceCount;
                }
                i28 *= (int)Test.instanceCount;
                Test.instanceCount = i25;
                if (b) {
                    for (i31 = 1; i31 < 2; ++i31) {
                        float f4=-16.1016F;
                        i26 ^= i5;
                        Test.lArrFld = Test.lArrFld;
                        switch (((i >>> 1) % 10) + 113) {
                        case 113:
                            by1 += (byte)i30;
                            i5 = (int)f4;
                            Test.lArrFld[i31 + 1] = i29;
                            i1 = -21101;
                            break;
                        case 114:
                            if (Test.bFld) {
                                i32 <<= 244;
                                i5 -= i1;
                            }
                            break;
                        case 115:
                            i26 -= (int)f4;
                            break;
                        case 116:
                            Test.dFld = Test.dFld;
                            break;
                        case 117:
                            i3 |= 4;
                        case 118:
                            sFld = (short)8;
                            break;
                        case 119:
                            fArr2 = FuzzerUtils.float1array(N, (float)0.452F);
                        case 120:
                            Test.dArrFld = Test.dArrFld;
                        case 121:
                            Test.instanceCount = i30;
                            break;
                        case 122:
                            lFld -= i5;
                            break;
                        default:
                            i3 += (((i31 * sFld) + i29) - f4);
                        }
                    }
                } else {
                    i3 += (((i27 * i) + i26) - i28);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("by1 i31 i32 = " + by1 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("b iArr fArr2 = " + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("sFld lFld Test.lArrFld = " + sFld + "," + lFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
