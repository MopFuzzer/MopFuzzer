// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-388904576L;
    public static float fFld=102.945F;
    public static boolean bFld=false;

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5) {

        double d=0.124699, d1=0.68258;
        int i6=34694, i7=-41948, i8=-16, i9=-10;
        boolean b=false;
        float f1=114.348F;
        short s=4719, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-633);

        sArr[(8 >>> 1) % N] -= (short)2.759F;
        for (d = 6; d < 150; ++d) {
            i7 = 1;
            while (++i7 < 11) {
                byte by=-71;
                for (i8 = 1; i8 < 1; i8++) {
                    i9 += i8;
                    i9 += i9;
                }
                i5 += (i7 - Test.instanceCount);
                i5 += (i7 | i7);
                if (b) continue;
                i5 &= by;
                f1 -= i8;
                i5 += i5;
                i5 = -21542;
                d1 = f1;
            }
            f1 = s;
        }
        long meth_res = i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 + (b ? 1 : 0) + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d1) + s + FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i3=-1366, i4=13, i10=25396, i11=36101, iArr[][]=new int[N][N];
        long l=7703482923026864300L;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -186);
        FuzzerUtils.init(bArr, true);

        for (i3 = 3; i3 < 340; i3++) {
            float f=59.624F;
            boolean b1=true;
            f = iMeth1(i4);
            Test.instanceCount = i3;
            switch ((((i3 >>> 1) % 3) * 5) + 16) {
            case 31:
                i10 = 1;
                do {
                    iArr[i10 + 1][i3] = (int)-224L;
                    i4 -= i4;
                    if (i4 != 0) {
                    }
                    for (l = 1; 5 > l; ++l) {
                        i4 /= (int)((long)(f) | 1);
                        Test.instanceCount = 137;
                        i4 += (int)(14L + (l * l));
                    }
                    Test.instanceCount += (((i10 * i11) + i3) - i3);
                } while ((i10 += 3) < 5);
                bArr[i3] = b1;
                break;
            case 27:
                iArr[i3][i3 - 1] >>>= i11;
                break;
            case 24:
                iArr[i3 - 1][i3 + 1] ^= -22555;
            }
        }
        long meth_res = i3 + i4 + i10 + l + i11 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i1=124, i2=6, i12=17701, i13=17452, i14=-79, i15=-61299, iArr1[]=new int[N];
        double d2=-2.28115;
        boolean b2=true;

        FuzzerUtils.init(iArr1, 241);

        for (i1 = 4; 146 > i1; ++i1) {
            i2 = Integer.reverseBytes(Math.abs(iMeth()));
            i2 *= (int)d2;
            Test.instanceCount += (-191 + (i1 * i1));
            iArr1[i1 + 1] -= (int)Test.instanceCount;
            for (i12 = 1; i12 < 11; ++i12) {
                i2 += i12;
                if (i13 != 0) {
                }
                if (i13 != 0) {
                }
                for (i14 = 1; 2 > i14; i14++) {
                    i13 += (int)Test.instanceCount;
                    Test.instanceCount += i14;
                    Test.fFld += (float)d2;
                    i13 = i12;
                }
                if (b2) continue;
            }
        }
        long meth_res = i1 + i2 + Double.doubleToLongBits(d2) + i12 + i13 + i14 + i15 + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=186, i16=51767, i17=-61013, i18=226, i20=4, i21=40334, i22=-28, i23=33296, i24=14326, iArr2[]=new int[N];
        byte by1=-89;
        double d3=0.127541;
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(bArr1, true);
        FuzzerUtils.init(iArr2, 4);

        i = (int)lMeth();
        Test.instanceCount *= i;
        i16 = 204;
        do {
            by1 += (byte)i;
            i *= 6;
            Test.bFld = Test.bFld;
            d3 %= -20877L;
            d3 = Test.fFld;
            i += (i16 * i16);
        } while (--i16 > 0);
        i += -30200;
        i = i;
        i <<= i;
        bArr1[(-133 >>> 1) % N] = Test.bFld;
        by1 -= (byte)i16;
        Test.instanceCount <<= i16;
        i *= (int)25512L;
        i = i16;
        if (true) {
            Test.instanceCount -= i16;
            for (i17 = 3; i17 < 142; ++i17) {
                d3 = i18;
                i += (((i17 * i16) + i18) - i18);
                i20 = 1;
                while ((i20 += 2) < 180) {
                    Test.instanceCount ^= i17;
                }
                for (i21 = 6; i21 < 180; i21++) {
                    try {
                        i18 = (iArr2[i17] / i16);
                        i22 = (iArr2[i21] % i17);
                        iArr2[i21 + 1] = (i22 / -9852);
                    } catch (ArithmeticException a_e) {}
                    for (i23 = 1; 2 > i23; i23++) {
                        Test.instanceCount -= -28231;
                    }
                    d3 += i21;
                    i18 -= i21;
                }
            }
        } else if (Test.bFld) {
            i = (int)Test.instanceCount;
        } else {
            i22 = i23;
        }

        FuzzerUtils.out.println("i i16 by1 = " + i + "," + i16 + "," + by1);
        FuzzerUtils.out.println("d3 i17 i18 = " + Double.doubleToLongBits(d3) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 bArr1 = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(bArr1));
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
