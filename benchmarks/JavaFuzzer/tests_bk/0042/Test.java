// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3567160269478033876L;
    public short sFld=-4401;
    public static int iFld=-56359;
    public float fFld=1.314F;
    public volatile boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -196L);
        FuzzerUtils.init(Test.iArrFld, 157);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l, int i6, int i7) {

        int i8=-42, i9=-9, i10=1, i11=106, iArr1[]=new int[N];
        float f1=-126.530F, fArr[]=new float[N];
        double d=-90.83515;
        byte by=-28;

        FuzzerUtils.init(fArr, 118.326F);
        FuzzerUtils.init(iArr1, 7);

        Test.instanceCount = i7;
        for (i8 = 4; 122 > i8; i8++) {
            i6 = (int)Test.instanceCount;
            fArr[i8 + 1] = f1;
        }
        iArr1[(i8 >>> 1) % N] *= i6;
        iArr1[(i8 >>> 1) % N] >>>= Test.iFld;
        d *= i8;
        i7 = i8;
        f1 = i6;
        Test.iFld += i9;
        for (i10 = 374; i10 > 21; i10 -= 2) {
            try {
                i7 = (i7 / i7);
                i6 = (Test.iFld / Test.iFld);
                iArr1[i10 - 1] = (iArr1[i10] % 59503);
            } catch (ArithmeticException a_e) {}
            i7 += (((i10 * i11) + Test.iFld) - i7);
            by |= (byte)182;
            i7 |= (int)l;
        }
        long meth_res = l + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i10 + i11 + by
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth1(float f) {

        int i3=29193, i4=78, i5=-58408, i12=-99, i13=60293, iArr2[]=new int[N];
        byte by1=-74;
        long l1=-39588L;
        boolean b=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, -11);
        FuzzerUtils.init(bArr, false);

        for (i3 = 18; i3 < 354; i3++) {
            i5 = 5;
            while ((i5 -= 2) > 0) {
                sFld -= (short)lMeth(Test.instanceCount, i3, i5);
                if (i3 != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + by1 + l1 + i12 + i13 + (b ? 1 : 0) +
                        FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
                    return;
                }
                Test.iFld = (int)Test.instanceCount;
                Test.instanceCount = -4;
                iArr2[(i3 >>> 1) % N] -= (int)f;
                by1 += (byte)(i5 + f);
                Test.instanceCount -= i3;
            }
            Test.iFld = i3;
        }
        i4 = (int)l1;
        for (i12 = 4; i12 < 335; i12++) {
            l1 <<= Test.instanceCount;
            bArr[i12] = b;
            iArr2[i12 - 1] <<= Test.iFld;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + by1 + l1 + i12 + i13 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
    }

    public void vMeth(short s) {

        int i1=220, i2=-253, i14=162, i15=-10, i16=-13, iArr[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr, -32720);

        for (int i : iArr) {
            for (i1 = 1; i1 < 4; i1++) {
                vMeth1(1.961F);
            }
            for (i14 = 1; i14 < 4; ++i14) {
                iArr[i14 + 1] /= (int)((long)(fFld) | 1);
                i16 = 1;
                while (++i16 < 2) {
                    Test.lArrFld = Test.lArrFld;
                    iArr[i16 + 1] = 10;
                    b1 = true;
                    i15 *= -54542;
                    if (false) break;
                    if (i15 != 0) {
                        vMeth_check_sum += s + i1 + i2 + i14 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
                Test.instanceCount <<= Test.instanceCount;
                fFld %= (i16 | 1);
            }
        }
        Test.instanceCount -= i16;
        vMeth_check_sum += s + i1 + i2 + i14 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        float f2=1.406F, fArr1[]=new float[N];
        int i17=39569, i18=2324, i19=51664;
        double d1=2.120104;
        byte by2=-102;

        FuzzerUtils.init(fArr1, 2.157F);

        vMeth((short)(23265));
        for (f2 = 2; f2 < 155; f2++) {
            Test.iFld += (int)(f2 * i17);
            switch ((int)(((f2 % 7) * 5) + 106)) {
            case 138:
                i17 = i17;
                i17 = -57;
                Test.instanceCount = 12629;
                i18 = 1;
                while (++i18 < 164) {
                    for (d1 = 1; d1 < 1; ++d1) {
                        fArr1[(int)(f2 - 1)] *= 56658;
                        switch ((int)((f2 % 7) + 118)) {
                        case 118:
                            Test.iFld = (int)f2;
                            break;
                        case 119:
                            if (bFld) break;
                            i19 += i19;
                            break;
                        case 120:
                            Test.iArrFld[(int)(d1)] ^= Test.iFld;
                            Test.instanceCount >>>= Test.iFld;
                            Test.instanceCount = i19;
                            Test.instanceCount = -115;
                        case 121:
                            by2 >>= by2;
                        case 122:
                            sFld = (short)-3898477073241997708L;
                            Test.instanceCount = i19;
                            break;
                        case 123:
                            switch ((int)((d1 % 2) + 54)) {
                            case 54:
                                fFld = Test.instanceCount;
                                i17 = sFld;
                                Test.iFld += (int)((long)d1 | Test.iFld);
                                Test.iFld = (int)-8492309207281420137L;
                                break;
                            case 55:
                            default:
                                Test.instanceCount = 1924;
                            }
                            i19 *= -231;
                            Test.iArrFld[(int)(d1)] *= i17;
                            break;
                        case 124:
                            i17 -= 12;
                            break;
                        }
                    }
                }
                break;
            case 115:
                Test.iFld <<= (int)-2352627743L;
                break;
            case 125:
                i17 += (int)(((f2 * Test.iFld) + f2) - i19);
                break;
            case 112:
                Test.instanceCount = (long)d1;
            case 113:
                fFld += i17;
                break;
            case 139:
                by2 = (byte)-242;
            case 114:
                Test.instanceCount += (long)(f2 + i18);
                break;
            }
        }

        FuzzerUtils.out.println("f2 i17 i18 = " + Float.floatToIntBits(f2) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("d1 i19 by2 = " + Double.doubleToLongBits(d1) + "," + i19 + "," + by2);
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount sFld Test.iFld = " + Test.instanceCount + "," + sFld + "," +
            Test.iFld);
        FuzzerUtils.out.println("fFld bFld Test.lArrFld = " + Float.floatToIntBits(fFld) + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
