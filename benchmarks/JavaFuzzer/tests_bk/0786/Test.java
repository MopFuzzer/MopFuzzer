// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1771128295L;
    public int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, int i7) {

        int i8=173, i9=143, i10=200, i11=-25, i12=-69, i13=-23726, iArr[]=new int[N];
        double d1=2.83765;
        short s1=3678;
        byte by1=74;

        FuzzerUtils.init(iArr, -48869);

        iArr[(i6 >>> 1) % N] += (int)117.122571;
        for (i8 = 6; i8 < 303; i8++) {
            for (i10 = 1; 6 > i10; ++i10) {
                d1 += 0;
                i9 >>= (int)Test.instanceCount;
                s1 += (short)i9;
                if (true) break;
                d1 += 43384;
                i7 += i6;
                for (i12 = 1; 2 > i12; ++i12) {
                    i6 >>= -43;
                    Test.instanceCount = i7;
                    by1 = (byte)i11;
                    i6 <<= i6;
                    try {
                        iArr[i8 - 1] = (26694 / i10);
                        i7 = (-60093 / i11);
                        iArr[i8 - 1] = (i10 / i8);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) + s1 + i12 + i13 + by1 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, int i5, double d) {

        int i14=3, i15=216, i16=5, i17=63493, i18=181, iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -67.920F);
        FuzzerUtils.init(iArr1, 0);

        vMeth1(i5, i5);
        i5 = (int)Test.instanceCount;
        i14 = 1;
        while (++i14 < 351) {
            i15 = 1;
            do {
                i5 %= (int)(i14 | 1);
                i5 += (-129 + (i15 * i15));
                l -= i15;
                fArr[i15] -= -206;
            } while (++i15 < 5);
            i16 = 1;
            do {
                for (i17 = 1; 1 > i17; ++i17) {
                    byte by2=43;
                    switch ((i14 % 1) + 121) {
                    case 121:
                        iArr1[i16] -= by2;
                        i5 = i5;
                        i18 -= i14;
                    default:
                        if (false) break;
                    }
                }
            } while (++i16 < 5);
        }
        vMeth_check_sum += l + i5 + Double.doubleToLongBits(d) + i14 + i15 + i16 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static double dMeth(byte by) {

        int i3=54772, i4=-7;
        double d2=0.52201;

        for (i3 = 3; i3 < 196; ++i3) {
            vMeth(Test.instanceCount, i3, d2);
            i4 += (i3 ^ Test.instanceCount);
        }
        long meth_res = by + i3 + i4 + Double.doubleToLongBits(d2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=254, i1=34734, i2=145, i19=-11, i20=187, i21=27, i22=153;
        short s=-13714;
        boolean b=true;
        byte by3=-124;
        double d3=-126.2059;
        float f=0.208F, f1=-13.359F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 20816L);

        for (i = 11; i < 347; i++) {
            i1 += (((i * i1) + s) - i2);
            b = (dMeth(by3) != -119L);
            for (d3 = 1; d3 < 75; ++d3) {
                i19 = (int)f;
                lArr[(int)(d3)] <<= 13L;
                i19 += (int)(-1.54F + (d3 * d3));
                iArrFld[i + 1] = (int)-9L;
                iArrFld[(int)(d3 - 1)] += i2;
            }
            i20 = 1;
            do {
                f1 = Test.instanceCount;
                dArrFld = dArrFld;
                i2 += i20;
                i2 -= 139;
                i2 = (int)d3;
                Test.instanceCount = -52;
                switch ((((52017 >>> 1) % 4) * 5) + 18) {
                case 31:
                    i2 += i20;
                    break;
                case 29:
                    i2 = (int)Test.instanceCount;
                    i2 += (((i20 * Test.instanceCount) + i) - by3);
                    i19 |= (int)Test.instanceCount;
                    switch (((i % 2) * 5) + 7) {
                    case 9:
                        for (i21 = i20; i21 < 3; ++i21) {
                            i2 = i2;
                            i1 -= (int)f1;
                            i19 = i22;
                            i1 -= i1;
                            Test.instanceCount = (long)d3;
                            i22 = (int)d3;
                            i1 -= (int)f1;
                        }
                    case 17:
                        i22 += (((i20 * i) + i2) - i22);
                        break;
                    }
                case 26:
                    i19 >>= 0;
                case 21:
                    i1 += (-30606 + (i20 * i20));
                }
            } while ((i20 += 3) < 75);
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("i2 b by3 = " + i2 + "," + (b ? 1 : 0) + "," + by3);
        FuzzerUtils.out.println("d3 i19 f = " + Double.doubleToLongBits(d3) + "," + i19 + "," +
            Float.floatToIntBits(f));
        FuzzerUtils.out.println("i20 f1 i21 = " + i20 + "," + Float.floatToIntBits(f1) + "," + i21);
        FuzzerUtils.out.println("i22 lArr = " + i22 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iArrFld dArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
