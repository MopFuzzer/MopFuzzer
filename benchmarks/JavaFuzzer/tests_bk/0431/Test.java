// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-9L;
    public static float fFld=14.889F;
    public static boolean bFld=true;
    public static volatile int iFld=-6;
    public static boolean bArrFld[]=new boolean[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.iArrFld, -13);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;

    public static float fMeth1(double d1) {

        int i7=-33751, i8=-12, i9=22232, i10=-45, i11=3661;
        byte by=-66;
        short s=-11842;

        Test.fFld = 223;
        for (i7 = 13; i7 < 214; i7++) {
            i9 = 1;
            while (++i9 < 8) {
                Test.fFld += (i9 * i8);
                i8 += i9;
                if (false) break;
                for (i10 = 1; i10 < 1; ++i10) {
                    if (Test.bFld) continue;
                    switch (((i9 >>> 1) % 5) + 127) {
                    case 127:
                        by += (byte)d1;
                    case 128:
                        Test.instanceCount += (((i10 * i8) + Test.fFld) - i8);
                        i11 += i8;
                        break;
                    case 129:
                    case 130:
                        Test.instanceCount -= i10;
                        by *= (byte)Test.instanceCount;
                        i11 >>= (int)Test.instanceCount;
                    case 131:
                        i11 *= s;
                        break;
                    default:
                        i8 = i7;
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 + by + s;
        fMeth1_check_sum += meth_res;
        return (float)meth_res;
    }

    public static float fMeth(int i3, int i4) {

        int i5=208, i6=0, i12=10, i13=5505, i14=-35406, i15=7, iArr[]=new int[N];
        double d=81.22819;
        float f1=-2.573F;
        byte by1=-48;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)28304);
        FuzzerUtils.init(iArr, 3);

        for (i5 = 16; i5 < 396; i5++) {
            Test.bArrFld[i5] = ((d += f1) == fMeth1(d));
            d = i4;
            Test.instanceCount = Test.instanceCount;
            Test.fFld -= 11;
            for (i12 = 4; i12 > i5; i12--) {
                f1 += Test.instanceCount;
                Test.instanceCount += i12;
            }
            if (Test.bFld) continue;
            Test.fFld *= i13;
            i6 = i3;
        }
        i6 &= by1;
        for (i14 = 7; i14 < 135; ++i14) {
            sArr[i14 + 1] = (short)Test.instanceCount;
            iArr[i14 + 1] -= i3;
        }
        long meth_res = i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i12 + i13 + by1 +
            i14 + i15 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i) {

        int i1=2, i2=-1, i16=60591, i17=-11, i18=35571;
        float f=-106.918F, f2=-97.156F;
        double d2=0.78122, dArr[]=new double[N];
        byte by2=91;

        FuzzerUtils.init(dArr, -28.7011);

        for (i1 = 16; i1 < 299; ++i1) {
            f = (float)(fMeth(i, i) * d2);
            for (i16 = 1; i16 < 6; ++i16) {
                dArr[i16] += Test.instanceCount;
                i &= i1;
                i += (i16 * i16);
                Test.iArrFld[i16 + 1] <<= i17;
                for (f2 = 1; f2 < 2; ++f2) {
                    d2 = Test.instanceCount;
                    i2 = i17;
                    switch ((((i17 >>> 1) % 2) * 5) + 30) {
                    case 40:
                        i2 = i;
                        by2 += (byte)((long)f2 ^ Test.instanceCount);
                        Test.instanceCount = i18;
                        break;
                    case 31:
                        i += (int)Test.instanceCount;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i16 + i17 +
            Float.floatToIntBits(f2) + i18 + by2 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        byte by3=37, byArr[]=new byte[N];
        int i19=8, i20=-14, i21=-161, i22=46873, i23=-62933, i24=-5, i25=-177, i26=-74, i27=-36, i28=-8;
        double d3=40.68117, dArr1[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2024L);
        FuzzerUtils.init(byArr, (byte)-17);
        FuzzerUtils.init(dArr1, -44.227);

        vMeth(Test.iFld);
        by3 += (byte)Test.iFld;
        for (i19 = 211; 1 < i19; i19--) {
            for (i21 = 7; i21 < 120; ++i21) {
                Test.iFld += (int)Test.instanceCount;
                Test.iFld += (i21 + i22);
                i22 += i21;
                Test.fFld += (i21 - i22);
                for (i23 = 2; i23 > 1; i23 -= 3) {
                    if (Test.bFld) break;
                    Test.instanceCount = Test.iFld;
                }
                i20 += (int)(-110L + (i21 * i21));
                i22 = (int)Test.instanceCount;
                for (i25 = 1; i25 < 2; ++i25) {
                    i24 = (int)d3;
                    Test.iFld *= i23;
                    lArr[i21 - 1] <<= i20;
                }
                i22 -= i20;
                Test.fFld *= Test.iFld;
            }
            byArr[i19 + 1] += (byte)Test.instanceCount;
            lArr[i19 - 1] &= Test.instanceCount;
            Test.iArrFld[i19 - 1] |= i25;
            for (i27 = 3; i27 < 120; i27++) {
                i20 += i20;
                i24 = (int)Test.instanceCount;
                Test.fFld += -14427;
                i20 *= (int)Test.instanceCount;
                dArr1[i19] += Test.iFld;
                Test.iFld -= (int)61.57015;
                Test.instanceCount %= (by3 | 1);
            }
        }

        FuzzerUtils.out.println("by3 i19 i20 = " + by3 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d3 i27 i28 = " + Double.doubleToLongBits(d3) + "," + i27 + "," + i28);
        FuzzerUtils.out.println("lArr byArr dArr1 = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(byArr)
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld Test.bArrFld Test.iArrFld = " + Test.iFld + "," +
            FuzzerUtils.checkSum(Test.bArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("fMeth1_check_sum: " + fMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
