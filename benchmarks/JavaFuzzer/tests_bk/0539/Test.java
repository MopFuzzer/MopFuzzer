// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-130108277L;
    public static volatile float fFld=117.873F;
    public static short sFld=19851;
    public static int iFld=115;
    public double dFld=-63.30932;
    public boolean bFld=false;
    public static byte byArrFld[]=new byte[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-127);
        FuzzerUtils.init(Test.dArrFld, 0.25552);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2) {

        long l=235L, l1=33222L;
        int i3=12, i4=8306, i5=-9879, i6=4966, i7=-14, i8=49985, iArr[][]=new int[N][N];
        byte by=-97;

        FuzzerUtils.init(iArr, -61920);

        for (l = 9; l < 179; l++) {
            iArr[(int)(l - 1)][(int)(l + 1)] <<= i3;
            iArr[(int)(l - 1)][(int)(l - 1)] += by;
            Test.instanceCount += (((l * Test.fFld) + Test.fFld) - i2);
            if (i3 != 0) {
                vMeth2_check_sum += i2 + l + i3 + by + i4 + i5 + l1 + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr);
                return;
            }
            Test.instanceCount <<= i2;
            i2 += i3;
            i2 <<= i2;
        }
        for (i4 = 3; i4 < 342; ++i4) {
            by = (byte)i3;
            for (l1 = 1; l1 < 5; l1 += 3) {
                for (i7 = 1; i7 < 5; i7++) {
                    i3 += (i7 * i7);
                    i8 >>= (int)l;
                    Test.fFld *= Test.sFld;
                }
            }
        }
        vMeth2_check_sum += i2 + l + i3 + by + i4 + i5 + l1 + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i, int i1) {

        int i9=-52633, i10=1, i11=-63269;
        double d=0.68588;

        vMeth2(i);
        i9 = 1;
        while ((i9 += 3) < 130) {
            Test.instanceCount += i9;
            i += i;
            Test.instanceCount >>= Test.sFld;
            d -= 167;
            i1 += (i9 * i9);
            i1 -= i1;
            i1 += (((i9 * i) + i1) - Test.instanceCount);
            i1 = (int)d;
            i1 -= Test.sFld;
            for (i10 = 2; i10 < 35; ++i10) {
                i1 = -13;
            }
        }
        i1 %= (int)(i9 | 1);
        i1 = (int)-40079L;
        vMeth1_check_sum += i + i1 + i9 + Double.doubleToLongBits(d) + i10 + i11;
    }

    public static void vMeth() {

        int i12=-221, i13=-224, i14=-11, i15=-40, i16=-235, iArr1[]=new int[N];
        double d1=2.69463;
        byte by1=-92;
        long l2=10L, l3=9L;

        FuzzerUtils.init(iArr1, -103);

        vMeth1(Test.iFld, Test.iFld);
        for (i12 = 12; i12 < 333; ++i12) {
            for (i14 = 1; i14 < 5; ++i14) {
                Test.sFld += (short)(i14 * i14);
                i13 = -172;
                d1 = by1;
                switch ((((5 >>> 1) % 6) * 5) + 121) {
                case 143:
                    i13 += Test.iFld;
                    for (l2 = 1; l2 < 2; ++l2) {
                        iArr1[(i13 >>> 1) % N] = (int)l2;
                        iArr1[(int)(l2)] |= (int)l2;
                        iArr1[i14 - 1] *= i12;
                        i13 += (14 + (l2 * l2));
                        iArr1 = iArr1;
                        by1 *= (byte)1;
                    }
                case 148:
                case 151:
                    try {
                        Test.iFld = (i15 % 62036);
                        i13 = (i13 % 2249);
                        iArr1[i14 + 1] = (244 % i15);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 124:
                    l3 *= i12;
                    break;
                case 135:
                    Test.instanceCount += i16;
                    break;
                case 137:
                    try {
                        i16 = (i13 / -5203);
                        i13 = (i12 % -16052);
                        i13 = (133 % i12);
                    } catch (ArithmeticException a_e) {}
                    break;
                }
            }
        }
        vMeth_check_sum += i12 + i13 + i14 + i15 + Double.doubleToLongBits(d1) + by1 + l2 + i16 + l3 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        long l4=9L;
        int i17=57379, i18=159, i19=-9, i20=13906, i21=-9248, iArr2[]=new int[N];
        byte by2=8;
        float f=107.31F;

        FuzzerUtils.init(iArr2, 91);

        vMeth();
        for (l4 = 11; l4 < 362; ++l4) {
            i18 = 72;
            do {
                i17 *= i18;
                dFld += Test.instanceCount;
                Test.iFld *= i17;
                Test.fFld += (((i18 * i17) + Test.iFld) - i18);
                bFld = true;
                dFld += i17;
                Test.instanceCount -= Test.iFld;
            } while ((i18 -= 2) > 0);
            for (i19 = 2; i19 < 72; ++i19) {
                i20 -= i19;
                i20 += (int)l4;
                Test.iFld *= 235;
                by2 <<= (byte)Test.instanceCount;
                for (f = l4; 2 > f; ++f) {
                    i17 >>>= i21;
                    switch ((int)(((f % 4) * 5) + 59)) {
                    case 66:
                        iArr2 = iArr2;
                        break;
                    case 65:
                        Test.iFld *= -12;
                        i17 += (int)(((f * Test.iFld) + i19) - i21);
                        i20 /= (int)(i18 | 1);
                        break;
                    case 67:
                        bFld = true;
                        Test.fFld /= -2;
                        Test.byArrFld[(int)(f)] *= (byte)Test.sFld;
                        i20 -= i21;
                        break;
                    case 74:
                        i17 += (int)(((f * Test.sFld) + Test.instanceCount) - l4);
                        Test.sFld = (short)i19;
                        Test.dArrFld[(int)(l4)] = Test.instanceCount;
                        break;
                    }
                    Test.iFld >>>= i20;
                }
            }
        }

        FuzzerUtils.out.println("l4 i17 i18 = " + l4 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 by2 = " + i19 + "," + i20 + "," + by2);
        FuzzerUtils.out.println("f i21 iArr2 = " + Float.floatToIntBits(f) + "," + i21 + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld dFld bFld = " + Test.iFld + "," + Double.doubleToLongBits(dFld) + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
