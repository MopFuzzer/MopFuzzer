// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static short sFld=22348;
    public static byte byFld=-50;
    public static int iFld=53;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 50929);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        int i6=9, i7=196, i8=3570, i9=114, i10=16200, i11=-197, i12=14, iArr[]=new int[N];
        float f1=-2.690F, f2=-102.878F;
        double d=112.59438;
        boolean b=true;
        byte by=-71;

        FuzzerUtils.init(iArr, 99);

        i6 = 1;
        do {
            for (i7 = 1; 23 > i7; i7++) {
                i5 -= i6;
                i8 = 20195;
            }
            i9 = 1;
            while (++i9 < 23) {
                iArr[i9 - 1] += (int)f1;
            }
            switch (((i6 % 2) * 5) + 52) {
            case 57:
                iArr[i6 + 1] = (int)d;
                for (f2 = i6; f2 < 23; ++f2) {
                    for (i11 = (int)(f2); i11 < 1; ++i11) {
                        if (b) continue;
                        i8 += (i11 * i12);
                        iArr[i11] = Test.sFld;
                        d = by;
                        Test.sFld += (short)(((i11 * i10) + f1) - i10);
                    }
                }
                break;
            case 62:
                iArr = FuzzerUtils.int1array(N, (int)-27832);
                break;
            }
        } while ((i6 += 2) < 134);
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f2) + i10 + i11 + i12 + (b ? 1 : 0) + by + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, int i2, short s) {

        int i3=-170, i4=53338, i13=-249, i14=-147, i15=39014, i16=0, i17=238;
        float f3=0.37F;

        for (i3 = 10; i3 < 298; ++i3) {
            vMeth1(48793);
            i4 += (((i3 * i4) + i3) - l);
            l += (((i3 * f3) + i4) - Test.byFld);
            i13 = 6;
            while (--i13 > 0) {
                f3 *= i2;
                i4 += i2;
                for (i14 = 1; i14 < 1; i14++) {
                    i15 = i13;
                }
                i15 >>= i15;
                for (i16 = 1; i16 < 1; i16++) {
                    s = (short)i17;
                    f3 += Test.instanceCount;
                    f3 = i3;
                    i2 += i16;
                }
            }
        }
        vMeth_check_sum += l + i2 + s + i3 + i4 + Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 + i17;
    }

    public static float fMeth(float f, int i, int i1) {

        double d1=1.103965;
        int i18=-5, i19=188, i20=106, i21=-2, iArr1[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr1, -131);

        vMeth(Test.instanceCount, i, Test.sFld);
        Test.sFld *= (short)-13;
        iArr1[(i1 >>> 1) % N] = -215;
        i1 = Test.byFld;
        for (d1 = 8; d1 < 339; ++d1) {
            Test.byFld |= (byte)i18;
            i19 = 5;
            do {
                Test.instanceCount <<= Test.instanceCount;
                if (b1) {
                    Test.instanceCount *= Test.byFld;
                    for (i20 = 1; 3 > i20; ++i20) {
                        i ^= i20;
                        i21 = (int)Test.instanceCount;
                        i |= i;
                        Test.instanceCount += (((i20 * Test.byFld) + i) - f);
                    }
                }
            } while ((i19 -= 3) > 0);
        }
        long meth_res = Float.floatToIntBits(f) + i + i1 + Double.doubleToLongBits(d1) + i18 + i19 + i20 + i21 + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f4=1.451F;
        int i22=249, i23=234, i24=-2, i25=100, i26=-2, i27=-178, i28=1201, i29=-14, i30=-216, i31=-41681, i32=-249;
        boolean b2=true;
        double d2=8.130843;

        Test.instanceCount -= (long)fMeth(f4, Test.iFld, Test.iFld);
        f4 += -5331;
        for (i22 = 6; i22 < 121; ++i22) {
            for (i24 = 10; i24 < 218; i24 += 2) {
                i25 -= -3;
                switch (((i23 >>> 1) % 4) + 75) {
                case 75:
                    Test.instanceCount *= i23;
                    Test.iFld -= -40967;
                case 76:
                    Test.instanceCount += (66L + (i24 * i24));
                    if (b2) continue;
                    i26 = 1;
                    while (++i26 < 3) {
                        d2 -= d2;
                        Test.instanceCount -= (long)f4;
                    }
                    break;
                case 77:
                    i25 += i24;
                    break;
                case 78:
                    for (i27 = 1; 3 > i27; i27++) {
                        i25 += (((i27 * Test.sFld) + Test.instanceCount) - i26);
                        i23 &= i25;
                    }
                    Test.iArrFld[i24 + 1][i24] = 9;
                    i29 = 1;
                    do {
                        f4 += i29;
                    } while (++i29 < 3);
                default:
                    i23 = -1;
                    i25 += -28224;
                    if (b2) break;
                    Test.iFld *= i22;
                }
                if (b2) {
                    i28 = 17;
                    if (b2) {
                        for (i30 = 1; i30 < 3; i30++) {
                            i31 += (i30 | i29);
                            i32 = 182;
                        }
                    } else if (b2) {
                        d2 = f4;
                    }
                } else {
                    i31 *= (int)0L;
                }
            }
        }

        FuzzerUtils.out.println("f4 i22 i23 = " + Float.floatToIntBits(f4) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 b2 = " + i24 + "," + i25 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i26 d2 i27 = " + i26 + "," + Double.doubleToLongBits(d2) + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 = " + i31 + "," + i32);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.iFld Test.iArrFld = " + Test.iFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
