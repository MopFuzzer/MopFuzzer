// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7435674883747566423L;
    public static byte byFld=60;
    public static double dFld=101.39874;
    public boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -4129746680L);
        FuzzerUtils.init(Test.iArrFld, 49);
        FuzzerUtils.init(Test.fArrFld, 35.762F);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, long l, double d) {

        long l1=-1859083778L;
        int i8=51, i9=14, i10=8, i11=-11, iArr[]=new int[N];
        float f1=78.190F;
        short s1=-9475;

        FuzzerUtils.init(iArr, 12);

        for (l1 = 10; l1 < 233; l1++) {
            iArr[(int)(l1)] = i7;
            i8 += (int)(l1 + i7);
            f1 += (((l1 * i7) + i7) - i8);
            i9 = 7;
            while ((i9 -= 2) > 0) {
                i8 -= i9;
                iArr = iArr;
                Test.byFld >>= (byte)i8;
                s1 = (short)i9;
                l += i9;
                iArr[i9] += (int)f1;
                i7 += (i9 * i9);
                for (i10 = 1; i10 < 2; i10++) {
                    i7 *= i8;
                    i11 = (int)-5959872511807271290L;
                }
            }
        }
        vMeth1_check_sum += i7 + l + Double.doubleToLongBits(d) + l1 + i8 + Float.floatToIntBits(f1) + i9 + s1 + i10 +
            i11 + FuzzerUtils.checkSum(iArr);
    }

    public static double dMeth() {

        int i12=64674, i13=74, i14=-47, i15=-53, i16=-14;
        float f2=-66.289F;

        vMeth1(i12, Test.instanceCount, Test.dFld);
        for (i13 = 17; 346 > i13; i13++) {
            f2 += Test.byFld;
            Test.instanceCount >>= i12;
            Test.instanceCount <<= Test.instanceCount;
            f2 += i13;
            i12 *= 237;
        }
        for (i15 = 394; i15 > 13; i15 -= 2) {
            Test.instanceCount += (i15 * f2);
        }
        long meth_res = i12 + i13 + i14 + Float.floatToIntBits(f2) + i15 + i16;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth() {

        int i2=1994, i3=-5, i4=50805, i5=-30661, i6=-19125, i17=39, i18=45450, i19=-115;
        float f=1.540F;
        boolean b=false;

        for (i2 = 1; 253 > i2; i2++) {
            for (i4 = 6; i4 > 1; --i4) {
                f -= (-(Test.byFld - Float.intBitsToFloat(i5)));
            }
        }
        i6 = 1;
        while (++i6 < 139) {
            Test.instanceCount >>= ((32696L + (i4 % (Test.byFld | 1))) * (--i5));
            dMeth();
            i5 = -4;
            if (b) break;
            for (i17 = 1; i17 < 11; i17++) {
                if (b) break;
                i3 -= 224;
                i19 = 1;
                do {
                    i3 += (((i19 * i19) + Test.instanceCount) - Test.instanceCount);
                    i5 += (int)-577129950L;
                    Test.dFld -= i19;
                } while (++i19 < 2);
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + (b ? 1 : 0) + i17 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        int i=-46, i1=26445, i20=-5809, i21=-10, i22=-224, i23=174, i24=-3, i25=-3;
        short s=-20255;
        float f3=-1.604F;

        for (i = 4; i < 304; i++) {
            Test.lArrFld[i] += Math.min((-13 - Short.reverseBytes(s)) - 68L, Test.instanceCount);
            vMeth();
            Test.iArrFld[i - 1] = (int)f3;
            for (i20 = 1; i20 < 84; i20++) {
                Test.fArrFld[i - 1] += i;
                if (bFld) {
                    Test.instanceCount -= Test.instanceCount;
                    i21 = (int)f3;
                    Test.instanceCount = i22;
                } else {
                    i23 = 1;
                    do {
                        Test.instanceCount += (i23 * Test.instanceCount);
                        i22 += (i23 * i22);
                        i22 *= s;
                        i22 <<= i;
                        i1 >>= i23;
                        i21 = i22;
                        i1 -= (int)f3;
                        i1 += i23;
                    } while (++i23 < 2);
                    for (i24 = 1; i24 < 2; ++i24) {
                        Test.instanceCount = s;
                        Test.instanceCount -= i1;
                        Test.iArrFld[i20 + 1] >>= s;
                    }
                    s += (short)(-213 + (i20 * i20));
                }
                i22 += i20;
                Test.iArrFld[i20] = i1;
                try {
                    i22 = (i1 / i20);
                    i25 = (i24 / i22);
                    i25 = (Test.iArrFld[i20] / i25);
                } catch (ArithmeticException a_e) {}
                if (bFld) break;
                Test.instanceCount -= -52690;
            }
            i1 ^= 12567;
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("f3 i20 i21 = " + Float.floatToIntBits(f3) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 = " + i25);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("bFld Test.lArrFld Test.iArrFld = " + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
