// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=45299L;
    public static byte byFld=45;
    public float fFld=0.941F;
    public static byte byArrFld[]=new byte[N];
    public static float fArrFld[]=new float[N];
    public volatile short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-71);
        FuzzerUtils.init(Test.fArrFld, -2.759F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i9=-13822, i10=-11, i11=-149, i12=-50, i13=52581, i14=-17, i15=108, i16=-109, i17=0, iArr1[]=new int[N];
        double d1=117.80476;
        boolean b=true;

        FuzzerUtils.init(iArr1, -6);

        Test.byArrFld = Test.byArrFld;
        i9 = i9;
        Test.instanceCount *= i9;
        for (i10 = 6; i10 < 308; i10++) {
            iArr1[i10] += (int)d1;
            i11 <<= i10;
        }
        iArr1[(4 >>> 1) % N] = i9;
        d1 *= d1;
        for (i12 = 12; i12 < 389; i12 += 3) {
            for (i14 = 1; i14 < 13; ++i14) {
                switch (((i12 % 6) * 5) + 25) {
                case 39:
                    i9 = (int)d1;
                    for (i16 = 1; i16 < 2; i16++) {
                        short s1=-9202;
                        iArr1[i14 - 1] *= -62;
                        i15 += (i16 | s1);
                    }
                case 46:
                    if (i11 != 0) {
                    }
                    break;
                case 50:
                    Test.instanceCount -= i15;
                case 30:
                    i11 += i14;
                case 26:
                    b = b;
                case 28:
                }
            }
        }
        long meth_res = i9 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13 + i14 + i15 + i16 + i17 + (b ? 1 : 0)
            + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(short s, int i3) {

        int i4=-231, i5=38351, i6=-45301, i7=-5, i8=-60098, iArr[]=new int[N];
        float f=43.831F;
        double d=-2.22555;

        FuzzerUtils.init(iArr, -13);

        for (i4 = 21; 393 > i4; i4 += 3) {
            iArr[i4] = (--i3);
            for (f = 1; f < 13; ++f) {
                i7 = 1;
                while (++i7 < 2) {
                    iArr[(int)(f - 1)] += ((iArr[i4 - 1]++) * i5);
                    Test.instanceCount += i7;
                    i6 = (int)Test.instanceCount;
                    Test.byFld += (byte)(i7 - i3);
                    d = Test.instanceCount;
                }
                if (i6 < ((f + (++i3)) * (-(Test.instanceCount * -1)))) continue;
                i8 = 1;
                do {
                    iArr[i4 - 1] += (int)Test.instanceCount;
                    if (((iMeth() + 4558769777130760136L) * i3) <= 4) break;
                } while (++i8 < 2);
                Test.instanceCount %= -84;
                i5 = Test.byFld;
            }
        }
        vMeth1_check_sum += s + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + Double.doubleToLongBits(d) + i8 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i1=60, i2=32983, i18=13, i19=-38975, i20=88, i21=97, i22=-81, i23=2, iArr2[][]=new int[N][N];
        short s2=-9420;
        float f1=0.988F;

        FuzzerUtils.init(iArr2, -3853);

        i1 = 1;
        do {
            i2 *= (int)(Test.instanceCount++);
            i2 += (i1 * Test.instanceCount);
            vMeth1(s2, i1);
        } while (++i1 < 386);
        for (i18 = 296; 7 < i18; i18 -= 2) {
            for (i20 = 1; i20 < 11; ++i20) {
                iArr2[i20 - 1] = iArr2[i20 + 1];
                i21 >>>= i21;
            }
            i21 -= i20;
            Test.instanceCount <<= i21;
            Test.instanceCount = i21;
            for (i22 = 1; i22 < 11; ++i22) {
                boolean b1=true;
                if (b1) {
                    i23 += (int)(1.920F + (i22 * i22));
                    f1 += i22;
                } else if (false) {
                    i23 = i19;
                } else {
                    i19 -= i20;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + s2 + i18 + i19 + i20 + i21 + i22 + i23 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-5634, i24=201, i25=10512, i26=-44, i27=8, i28=-101, i29=-197, iArr3[]=new int[N];
        boolean b2=true;
        double d2=2.18554;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr3, -116);
        FuzzerUtils.init(lArr, -51L);

        i = 1;
        do {
            vMeth();
            for (i24 = 109; i24 > 1; --i24) {
                i25 = i25;
                i25 *= -1599;
                iArr3[i24] -= i25;
                i25 = i;
                for (i26 = 1; i26 < 2; ++i26) {
                    short s3=16950;
                    i27 += i26;
                    iArr3[i26] /= (int)(i28 | 1);
                    i29 = (int)Test.instanceCount;
                    iArr3[i] = (int)fFld;
                    Test.instanceCount = i27;
                    i27 += (i26 + fFld);
                    b2 = b2;
                    i25 -= i29;
                    switch ((((i29 >>> 1) % 2) * 5) + 20) {
                    case 27:
                        if (b2) {
                            Test.instanceCount += (i26 | i26);
                            switch ((((45896 >>> 1) % 10) * 5) + 127) {
                            case 142:
                                Test.instanceCount = i28;
                                switch ((i24 % 1) + 34) {
                                case 34:
                                }
                                d2 -= 14;
                                b2 = b2;
                                break;
                            case 158:
                                fFld += i24;
                                i28 += (253 + (i26 * i26));
                                iArr3[i24 + 1] = i24;
                                break;
                            case 132:
                                s3 -= (short)fFld;
                                i28 *= 45191;
                                break;
                            case 143:
                                lArr[i24] = Test.instanceCount;
                                break;
                            case 168:
                                fFld *= i25;
                                break;
                            case 134:
                                Test.fArrFld[i24] += i28;
                                break;
                            case 139:
                                i28 += (int)Test.instanceCount;
                                break;
                            case 145:
                                Test.instanceCount |= Test.instanceCount;
                                break;
                            case 172:
                                i27 -= i27;
                            case 131:
                                if (b2) continue;
                                break;
                            default:
                                fFld *= (float)d2;
                            }
                        } else {
                            fFld *= i25;
                        }
                        break;
                    case 22:
                        fFld += (i26 + i24);
                        break;
                    default:
                        sArrFld[i26] &= (short)i;
                    }
                }
            }
        } while (++i < 231);

        FuzzerUtils.out.println("i i24 i25 = " + i + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 b2 d2 = " + i29 + "," + (b2 ? 1 : 0) + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("iArr3 lArr = " + FuzzerUtils.checkSum(iArr3) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld fFld = " + Test.instanceCount + "," + Test.byFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.byArrFld Test.fArrFld sArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
