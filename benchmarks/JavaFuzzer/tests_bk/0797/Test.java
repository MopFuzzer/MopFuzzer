// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-50770L;
    public static short sFld=-736;
    public static boolean bFld=false;
    public float fFld=2.551F;
    public static byte byFld=125;
    public double dFld=-121.89143;
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-70);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8) {

        int i9=0, i10=6, i11=-13033, i12=2, i13=-9875, i14=-183, iArr[]=new int[N];
        float f1=0.1017F;
        boolean b=true;
        double d=-41.126032;

        FuzzerUtils.init(iArr, 43419);

        i8 = i8;
        i8 = (int)1203812281L;
        i8 = i8;
        for (i9 = 3; i9 < 146; i9++) {
            Test.instanceCount = (long)23.42369;
            switch ((i9 % 4) + 112) {
            case 112:
                Test.instanceCount = (long)f1;
                switch ((((i9 >>> 1) % 9) * 5) + 103) {
                case 128:
                    Test.instanceCount = i8;
                    for (i11 = 1; i11 < 11; ++i11) {
                        f1 += (i11 * i11);
                        i10 >>= i12;
                        for (i13 = i11; i13 < 2; i13++) {
                            i12 -= i9;
                            iArr[i13] = i12;
                        }
                    }
                case 113:
                case 131:
                    Test.sFld += (short)(((i9 * Test.instanceCount) + f1) - Test.instanceCount);
                case 136:
                    i14 = 0;
                    break;
                case 122:
                    i10 = i12;
                    break;
                case 107:
                    if (b) break;
                    break;
                case 130:
                    i12 >>= -4415;
                case 134:
                    b = b;
                case 112:
                    i10 += (i9 * i9);
                    break;
                }
                break;
            case 113:
                d = 163;
                break;
            case 114:
                i8 = (int)Test.instanceCount;
            case 115:
                i8 += (((i9 * i12) + f1) - Test.instanceCount);
            }
        }
        vMeth2_check_sum += i8 + i9 + i10 + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + (b ? 1 : 0) +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i4=29168, i5=-25439, i6=46, i7=14726, i15=144, i16=-10376, i18=-164, i19=42017, iArr1[]=new int[N];
        float f2=1.750F;
        byte by=33;
        double d1=0.61592, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 2.5817);
        FuzzerUtils.init(iArr1, -34537);

        for (i4 = 2; i4 < 127; i4++) {
            dArr = (dArr = (dArr = dArr));
            for (i6 = 1; i6 < 13; i6++) {
                i7 = Integer.reverseBytes((i4 * -160) >> (i6 * i6));
                vMeth2(i7);
                i5 += i6;
            }
            i7 = i4;
            iArr1[i4 + 1] = (int)f2;
            for (i15 = i4; 13 > i15; ++i15) {
                Test.bFld = Test.bFld;
            }
            switch ((i4 % 4) + 40) {
            case 40:
                i16 >>>= i15;
                for (i18 = 13; i18 > 1; i18--) {
                    i7 >>= by;
                }
                i16 += (int)d1;
                break;
            case 41:
                f2 = i15;
                break;
            case 42:
                Test.instanceCount += (((i4 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                break;
            case 43:
                f2 += (i4 * i4);
                break;
            default:
                f2 = i15;
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + i15 + i16 + i18 + i19 + by +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2) {

        int i3=-27520, i20=-11, i21=-9, i22=17466, i23=197;
        float f=2.693F;
        double d2=0.1889;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1858675261L);

        i3 = 1;
        while (++i3 < 364) {
            switch ((((219 >>> 1) % 2) * 5) + 123) {
            case 125:
                i2 += i3;
                i2 = (int)((-(Test.instanceCount * i3)) - ((Test.instanceCount + f) * (++lArr[i3 - 1])));
                vMeth1();
            case 133:
                d2 -= d2;
                for (i20 = 1; i20 < 5; i20++) {
                    i2 >>>= (int)53L;
                    Test.byArrFld[i20 + 1] *= (byte)-7;
                    for (i22 = 1; i22 < 2; i22++) {
                        Test.instanceCount = i2;
                        Test.bFld = Test.bFld;
                        i21 += (i22 | i20);
                        if (Test.bFld) break;
                        if (Test.bFld) continue;
                    }
                }
                break;
            default:
                i2 += (((i3 * Test.instanceCount) + i22) - i21);
            }
        }
        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i20 + i21 + i22 + i23 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=10, i1=70, i24=-65328, i25=7, i26=26420, i27=49, i28=-38029, i29=8, i30=-11, iArr2[]=new int[N];
        byte byArr[]=new byte[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(byArr, (byte)-41);
        FuzzerUtils.init(sArr, (short)-27438);
        FuzzerUtils.init(iArr2, -65403);

        byArr[(13 >>> 1) % N] = (byte)35379;
        for (i = 20; i < 323; i++) {
            sArr[i + 1] -= (short)221;
            vMeth(i);
            i1 ^= i1;
            i1 -= (int)Test.instanceCount;
            Test.sFld += (short)2.555F;
            for (i24 = 1; 83 > i24; i24++) {
                i1 = i;
                i1 += (i24 * i24);
                i1 += i24;
                i25 = i1;
                Test.instanceCount += (i24 + fFld);
            }
            Test.byFld += (byte)(i + Test.instanceCount);
            i25 = i25;
            for (i26 = 1; i26 < 83; ++i26) {
                Test.byFld += (byte)(((i26 * Test.sFld) + i1) - fFld);
                switch ((i % 2) + 45) {
                case 45:
                    i1 += (i26 - i25);
                    i25 += (i26 * i26);
                    break;
                case 46:
                default:
                    i28 = 1;
                    do {
                        i25 *= Test.byFld;
                        Test.byFld -= (byte)i27;
                        i25 = i28;
                        i1 >>>= (int)Test.instanceCount;
                        Test.instanceCount *= (long)dFld;
                    } while (++i28 < 2);
                    Test.instanceCount *= i27;
                    for (i29 = 1; i29 < 2; i29++) {
                        i1 -= i28;
                        iArr2[i26 + 1] += i1;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i24 = " + i + "," + i1 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("byArr sArr iArr2 = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(sArr)
            + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.bFld = " + Test.instanceCount + "," + Test.sFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld Test.byFld dFld = " + Float.floatToIntBits(fFld) + "," + Test.byFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
