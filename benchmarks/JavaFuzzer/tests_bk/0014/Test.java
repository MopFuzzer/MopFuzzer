// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3668878200L;
    public static boolean bFld=true;
    public static float fFld=2.442F;
    public double dFld=-58.129990;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3108577395L);
        FuzzerUtils.init(Test.iArrFld, -19341);
        FuzzerUtils.init(Test.dArrFld, -14.33151);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i11=53930, i12=-6, i13=0, i14=29, iArr[]=new int[N];
        short s=7227;

        FuzzerUtils.init(iArr, -9);

        if (Test.bFld) {
            for (i11 = 206; i11 > 5; --i11) {
                for (i13 = 1; 8 > i13; i13++) {
                    s = (short)i14;
                    i14 = i14;
                    iArr[i13 + 1] ^= i13;
                    Test.fFld += Test.instanceCount;
                    i14 >>>= -3814;
                    Test.instanceCount -= i11;
                    Test.lArrFld[(i13 >>> 1) % N] |= i13;
                    i14 = i14;
                }
            }
            vMeth1_check_sum += i11 + i12 + i13 + i14 + s + FuzzerUtils.checkSum(iArr);
            return;
        } else if (Test.bFld) {
            i12 >>>= (int)223L;
        } else if (true) {
            Test.lArrFld[(i14 >>> 1) % N] -= i12;
            Test.instanceCount = i12;
            i14 += i12;
        } else {
            iArr = iArr;
        }
        vMeth1_check_sum += i11 + i12 + i13 + i14 + s + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth() {

        int i15=-13, i16=-37, i17=-188, i18=96, i19=-54933, iArr1[]=new int[N];
        double d1=104.16045;

        FuzzerUtils.init(iArr1, 61333);

        vMeth1();
        iArr1[(i15 >>> 1) % N] += (int)Test.instanceCount;
        i15 >>= i15;
        i16 = 1;
        do {
            Test.instanceCount = 86;
            for (i17 = i16; i17 < 9; i17++) {
                i18 += (i17 | i15);
                i15 = (int)Test.instanceCount;
                d1 = d1;
                Test.instanceCount = 43;
                i19 = 1;
                do {
                    Test.lArrFld[i19 + 1] <<= -51;
                    Test.instanceCount -= i18;
                    i15 >>= i15;
                    Test.instanceCount >>= i17;
                } while (++i19 < 1);
            }
        } while (++i16 < 177);
        long meth_res = i15 + i16 + i17 + i18 + Double.doubleToLongBits(d1) + i19 + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i2, long l, int i3) {

        int i4=11, i5=-87, i6=28597, i7=220, i8=106, i9=-4, i10=-14;
        byte by=-100;
        float f=-121.201F;
        double d=-2.46157;
        long l1=7270162490354476840L;

        i2 ^= i2;
        for (i4 = 4; i4 < 335; ++i4) {
            Test.instanceCount -= (by--);
            i6 = 1;
            do {
                for (i7 = 1; i7 < 1; i7++) {
                    i5 += (int)Test.lArrFld[i6];
                    i8 += (((i7 * f) + Test.instanceCount) - f);
                }
                d -= i3;
                if (Test.bFld) break;
                if ((((i8 + f) - (l + f)) + Test.lArrFld[i4 + 1]) == i5) break;
                for (i9 = 1; i9 < 1; i9++) {
                    i8 = (-13 & ((i10++) + (-44945 * (i9 + -2478))));
                    f += (((i10 - l1) + (i2 - i8)) - Math.abs(lMeth()));
                    i10 *= by;
                    i2 = (int)d;
                }
            } while (++i6 < 5);
        }
        vMeth_check_sum += i2 + l + i3 + i4 + i5 + by + i6 + i7 + i8 + Float.floatToIntBits(f) +
            Double.doubleToLongBits(d) + i9 + i10 + l1;
    }

    public void mainTest(String[] strArr1) {

        int i=-152, i1=-2, i20=42, i21=-203, i22=53633, i23=63475, i24=-21, i25=51117, i26=3, i27=51333, i28=-45321,
            i29=44965, i30=-53, i31=138, i32=10;
        short s1=31677;

        for (i = 5; i < 153; ++i) {
            vMeth(i1, Test.instanceCount, 5525);
            Test.instanceCount = Test.instanceCount;
            for (i20 = i; i20 < 169; ++i20) {
                i1 -= 123;
                dFld -= i1;
                i22 = 1;
                while (++i22 < 1) {
                    Test.iArrFld[i22 - 1] = i22;
                    fArrFld[i22 + 1] = Test.instanceCount;
                    i21 -= (int)Test.instanceCount;
                }
                Test.iArrFld[i] = s1;
                i21 += 12;
                for (i23 = 1; i23 < 1; i23++) {
                    Test.dArrFld[i] = Test.instanceCount;
                    i24 += -77;
                    i21 -= (int)dFld;
                    Test.instanceCount += (i23 | i23);
                }
                for (i25 = 1; 1 > i25; i25++) {
                    fArrFld[i] += 88L;
                    i26 += i25;
                }
                for (i27 = 1; i27 < 1; ++i27) {
                    try {
                        Test.iArrFld[i20 + 1] = (i21 / -242);
                        i1 = (-16816 / i21);
                        i1 = (i23 / -22);
                    } catch (ArithmeticException a_e) {}
                    Test.fFld += (float)dFld;
                    i21 += (int)Test.fFld;
                }
                Test.fFld *= -2;
                for (i29 = 1; i29 < 1; i29++) {
                    Test.iArrFld[i20 + 1] = i26;
                }
            }
            for (i31 = 9; i31 < 169; ++i31) {
                Test.instanceCount >>>= -47807;
                i30 += i23;
            }
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 i22 s1 = " + i21 + "," + i22 + "," + s1);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 = " + i32);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("dFld Test.lArrFld Test.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("fArrFld Test.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
