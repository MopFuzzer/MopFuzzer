// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static volatile int iFld=194;
    public short sFld=19102;
    public long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];
    public static long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.36305);
        FuzzerUtils.init(Test.lArrFld1, 490298540L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6, int i7) {

        int i8=14, i9=4579, i10=7, iArr1[]=new int[N];
        boolean b=true;
        float f1=0.1013F;

        FuzzerUtils.init(iArr1, 225);

        i6 >>= (int)-61636L;
        i5 = -3797;
        switch (((13 >>> 1) % 1) + 97) {
        case 97:
            for (i8 = 8; i8 < 154; i8++) {
                if (true) {
                    i7 += (((i8 * Test.instanceCount) + Test.instanceCount) - i5);
                } else if (b) {
                    i5 += (i8 | i7);
                } else if (false) {
                    if (b) {
                        i6 *= (int)39916L;
                        i7 = i8;
                        iArr1[i8] = (int)Test.instanceCount;
                    } else {
                        i9 *= i5;
                    }
                    for (f1 = 11; f1 > i8; --f1) {
                        iArr1[i8] ^= i7;
                    }
                    if (i10 != 0) {
                    }
                }
            }
            break;
        default:
            i10 = (int)-3889247903248538563L;
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i10 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i4=-6, i11=-10, i12=235;
        float f=-1.549F;
        double d2=22.114039;
        boolean b1=true, bArr[]=new boolean[N];
        short s=32194;

        FuzzerUtils.init(bArr, false);

        i4 = 1;
        while (++i4 < 218) {
            Test.instanceCount = (long)(((i4 * f) + (Test.instanceCount - i4)) - ((-21396 - i4) + iMeth(i4, i4, i4)));
            Test.iFld += (i4 + Test.iFld);
            Test.iFld = (int)-3921532436L;
        }
        Test.iFld += i4;
        Test.iFld -= (int)Test.instanceCount;
        f += (float)d2;
        for (i11 = 8; i11 < 135; i11++) {
            bArr[i11] = b1;
            d2 -= i4;
            s = (short)Test.instanceCount;
            i12 += 1429;
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i11 + i12 + (b1 ? 1 : 0) + s +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(double d, int i2) {

        int i3=0, i13=-40, i14=-12, iArr2[]=new int[N];
        short s1=21092;
        float f2=51.124F;

        FuzzerUtils.init(iArr2, 19);

        for (double d1 : Test.dArrFld) {
            i2 += (int)(((i2 * Test.instanceCount) + (2 + Test.lArrFld1[(i2 >>> 1) % N])) * (i2--));
            i3 = 4;
            do {
                vMeth1();
                s1 *= (short)Test.iFld;
                i2 -= (int)f2;
                iArr2[i3 - 1] <<= -18451;
                i2 = i2;
            } while ((i3 -= 3) > 0);
            Test.iFld = 34;
            switch ((((i3 >>> 1) % 3) * 5) + 100) {
            case 103:
                for (i13 = 4; i13 > 1; i13 -= 3) {
                    switch (((i13 % 4) * 5) + 43) {
                    case 62:
                        i14 <<= s1;
                        Test.iFld %= 3;
                        Test.iFld -= i13;
                    case 47:
                        i2 += (i13 * i13);
                        break;
                    case 49:
                        Test.instanceCount = (long)-1.83902;
                        break;
                    case 57:
                        Test.instanceCount = (long)f2;
                        break;
                    }
                }
                break;
            case 115:
                f2 = f2;
                break;
            case 109:
                i14 = -11812;
                break;
            default:
                Test.instanceCount &= i3;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i2 + i3 + s1 + Float.floatToIntBits(f2) + i13 + i14 +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i1=-206, i15=-14, i16=-210, i17=8, i18=-148, i19=-30, i20=8, i21=248, i22=247, i23=10, i24=-48740,
            iArr[]=new int[N];
        double d3=-1.81149;
        float f3=-1.324F, fArr[]=new float[N];
        boolean b2=false;

        FuzzerUtils.init(iArr, 118);
        FuzzerUtils.init(fArr, 0.805F);

        for (i = 1; i < 128; ++i) {
            lArrFld[i] = ((--iArr[i]) + i1);
        }
        vMeth(d3, i1);
        i1 += 73;
        for (i15 = 9; i15 < 267; ++i15) {
            i16 += i15;
            iArr[i15] = i1;
            i1 += (int)f3;
            for (i17 = 5; i17 < 97; i17++) {
                Test.iFld <<= sFld;
            }
            sFld <<= (short)31463;
        }
        for (i19 = 7; i19 < 143; ++i19) {
            for (i21 = 1; i21 < 184; ++i21) {
                byte by=42;
                if (b2) continue;
                Test.dArrFld[i19 + 1] += f3;
                i16 += by;
                for (i23 = i21; i23 < 2; i23++) {
                    i18 -= i19;
                    i22 = Test.iFld;
                    Test.instanceCount = -21008;
                    i18 += (int)f3;
                    Test.iFld -= i22;
                    i18 += (int)f3;
                    Test.iFld += (i23 * i23);
                    i24 += i23;
                    fArr[i19] -= 3L;
                }
                iArr[i19 + 1] = (int)Test.instanceCount;
            }
            i1 = i17;
            Test.instanceCount -= (long)-110.241F;
            d3 += Test.instanceCount;
        }

        FuzzerUtils.out.println("i i1 d3 = " + i + "," + i1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i15 i16 f3 = " + i15 + "," + i16 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("b2 i23 i24 = " + (b2 ? 1 : 0) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("iArr fArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld sFld = " + Test.instanceCount + "," + Test.iFld + "," +
            sFld);
        FuzzerUtils.out.println("lArrFld Test.dArrFld Test.lArrFld1 = " + FuzzerUtils.checkSum(lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld1));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
