// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=33517L;
    public static long lFld=-800472776397276691L;
    public static byte byFld=-35;
    public static double dFld=25.71554;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -12);
        FuzzerUtils.init(Test.lArrFld, 5646209008507396584L);
        FuzzerUtils.init(Test.byArrFld, (byte)-113);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, double d1) {

        int i7=-93, i8=-2, i9=-151, i10=-8, i11=-2;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-115);

        for (i7 = 8; i7 < 272; i7++) {
            Test.lFld = 207;
            for (i9 = i7; i9 < 6; i9++) {
                b = true;
                i10 *= (int)Test.instanceCount;
                Test.byFld = (byte)940213615L;
                switch ((i9 % 2) + 11) {
                case 11:
                    i8 += (-226 + (i9 * i9));
                case 12:
                    i11 = 1;
                    do {
                        i10 += (((i11 * i9) + i11) - i11);
                        i8 = i10;
                        if (b) continue;
                        byArr[i7] = (byte)i10;
                    } while (++i11 < 1);
                    if (i8 != 0) {
                        vMeth1_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 +
                            FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    Test.iArrFld[i7 + 1] *= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i4) {

        int i5=24, i6=62865, i13=-142, i14=6, i15=5;
        short s=4981;
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(bArr, false);

        for (i5 = 5; 281 > i5; i5 += 2) {
            boolean b1=true;
            vMeth1(b1, Test.dFld);
            Test.instanceCount = i4;
            i6 >>= -33;
            s += (short)i5;
            i4 -= (int)Test.dFld;
            for (i13 = 1; i13 < 11; ++i13) {
                i14 += i13;
                i6 ^= -1;
                Test.lArrFld[i13 - 1] >>= i14;
                i15 = 2;
                while ((i15 -= 3) > 0) {
                    i4 = (int)-131L;
                    bArr = bArr;
                    Test.lFld = i14;
                    b1 = b1;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + s + i13 + i14 + i15 + FuzzerUtils.checkSum(bArr);
    }

    public static long lMeth(int i2, float f, int i3) {

        short s1=31338;
        int i16=-98;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3130768503L);

        for (long l : lArr) {
            f = (i2 ^= (-(12 * (i2++))));
            vMeth(166);
        }
        i2 = i2;
        Test.lFld *= 6;
        i3 *= (int)3792972981752572759L;
        Test.iArrFld[(i2 >>> 1) % N] += 14;
        f = Test.instanceCount;
        i3 = s1;
        for (byte by : Test.byArrFld) {
            i16 = 1;
            while (++i16 < 4) {
                Test.iArrFld = Test.iArrFld;
                if (false) break;
                i3 = i16;
                i2 -= (int)-1.59170;
            }
        }
        long meth_res = i2 + Float.floatToIntBits(f) + i3 + s1 + i16 + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=3920, i1=20735, i17=-26369, i18=-14;
        double d=101.121783;
        short s2=954;
        float f1=2.98F;

        i = 1;
        while (++i < 256) {
            long l1=-2730894898L;
            if (Test.bFld) {
                for (d = 3; d < 98; ++d) {
                    Test.instanceCount += (long)(((d * i1) + i1) - i);
                    switch ((int)((d % 2) + 90)) {
                    case 90:
                        Test.instanceCount <<= (((i - Test.instanceCount) - (Test.instanceCount + Test.instanceCount))
                            + (lMeth(i, -19.538F, i1) + i1));
                    case 91:
                        i1 += (int)d;
                        i1 &= (int)Test.instanceCount;
                    }
                    i1 += i;
                    i1 = s2;
                    for (i17 = 1; i17 < 2; i17++) {
                        Test.bFld = Test.bFld;
                        switch ((int)((d % 2) + 89)) {
                        case 89:
                            i1 *= i18;
                            i18 += i1;
                            i1 <<= i17;
                            try {
                                i1 = (i17 % -232);
                                i18 = (1540713981 % i17);
                                i18 = (i1 % -1927689128);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 90:
                            Test.lArrFld[i - 1] = i18;
                            i1 = (int)Test.lFld;
                            try {
                                i18 = (Test.iArrFld[i17 + 1] / 190180263);
                                i1 = (-3210 % i17);
                                i18 = (i % -348550597);
                            } catch (ArithmeticException a_e) {}
                            break;
                        default:
                            i1 &= i1;
                            i18 = i17;
                            Test.iArrFld[i + 1] *= -132;
                        }
                        f1 += i18;
                        Test.lArrFld[i17 + 1] -= -5L;
                        Test.dFld += Test.dFld;
                        i18 -= i17;
                        Test.bFld = Test.bFld;
                        Test.lFld = i17;
                        i1 = 185;
                    }
                }
            } else {
                i1 *= (int)l1;
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("s2 i17 i18 = " + s2 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("f1 = " + Float.floatToIntBits(f1));

        FuzzerUtils.out.println("Test.instanceCount Test.lFld Test.byFld = " + Test.instanceCount + "," + Test.lFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.dFld Test.bFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            (Test.bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld Test.byArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
