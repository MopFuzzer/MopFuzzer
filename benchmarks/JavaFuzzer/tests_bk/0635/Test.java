// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4132965031L;
    public static int iFld=100;
    public static boolean bFld=false;
    public volatile float fFld=-1.683F;
    public static double dFld=1.117182;
    public static byte byFld=59;
    public static volatile float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -102.244F);
        FuzzerUtils.init(Test.iArrFld, -24312);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i7=3, i8=-243, i9=-4, i10=57895, i11=14, i12=-224, i13=115, i14=-72, iArr[]=new int[N];
        double d1=-27.62786;

        FuzzerUtils.init(iArr, -57636);

        i7 = (int)Test.instanceCount;
        iArr[(i7 >>> 1) % N] *= (int)d1;
        for (i8 = 23; 392 > i8; i8++) {
            iArr[(i7 >>> 1) % N] = (int)d1;
            i9 <<= i9;
            i7 <<= i7;
            iArr[i8 - 1] *= 5;
            for (i10 = 1; 5 > i10; i10++) {
                i11 = i8;
            }
        }
        for (i12 = 19; i12 < 323; i12++) {
            Test.instanceCount -= Test.instanceCount;
            Test.instanceCount >>= Test.instanceCount;
        }
        Test.instanceCount = Test.instanceCount;
        i14 += -104;
        d1 = -122;
        vMeth1_check_sum += i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(int i3, long l, long l1) {

        double d=2.66776;
        int i4=-213, i5=-21515, i6=-1, i15=-142, i16=0, iArr1[]=new int[N];
        float f1=-34.1014F;
        boolean b=false;
        short sArr[]=new short[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(sArr, (short)12284);
        FuzzerUtils.init(iArr1, -176);
        FuzzerUtils.init(byArr, (byte)60);

        for (d = 1; d < 367; ++d) {
            for (i5 = 1; i5 < 5; ++i5) {
                vMeth1();
                for (i15 = 1; i15 < 2; ++i15) {
                    switch ((i15 % 4) + 9) {
                    case 9:
                    case 10:
                        i16 ^= i5;
                        sArr[(int)(d)] -= (short)i16;
                        break;
                    case 11:
                        Test.instanceCount -= i5;
                        i4 -= i5;
                        switch (((i16 >>> 1) % 3) + 91) {
                        case 91:
                            i4 += (int)l1;
                            try {
                                i6 = (i4 % i4);
                                i6 = (i15 / -380947272);
                                i3 = (-31564 % i6);
                            } catch (ArithmeticException a_e) {}
                            iArr1[(int)(d)] = (int)Test.instanceCount;
                        case 92:
                            i16 -= (int)f1;
                            i16 += (-3676 + (i15 * i15));
                            break;
                        case 93:
                            if (b) continue;
                        default:
                            byArr[i15 - 1] %= (byte)171;
                        }
                        break;
                    case 12:
                        i6 -= i15;
                        break;
                    default:
                        i4 = i15;
                    }
                }
            }
        }
        long meth_res = i3 + l + l1 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i15 + i16 + Float.floatToIntBits(f1)
            + (b ? 1 : 0) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i1, float f) {

        int i2=-32429, i17=-8, i18=229, i19=29810, i20=54, i21=41322;
        short s=18467;
        byte by=48;

        i2 = 1;
        do {
            s = (short)f;
            f -= (Test.instanceCount * fMeth(i2, -1L, -6297692761123273824L));
        } while (++i2 < 393);
        i1 = i2;
        for (i17 = 1; i17 < 364; ++i17) {
            switch (((i19 >>> 1) % 3) + 44) {
            case 44:
                Test.instanceCount += (i17 + i1);
                Test.instanceCount += (i17 * i17);
                break;
            case 45:
                Test.iFld -= i20;
                i21 = 5;
                while (--i21 > 0) {
                    Test.fArrFld[i21] += -1.973F;
                    i18 >>= -30801;
                    i19 <<= (int)Test.instanceCount;
                }
                if (Test.bFld) break;
                break;
            case 46:
                by -= (byte)i17;
                break;
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i2 + s + i17 + i18 + i19 + i20 + i21 + by;
    }

    public void mainTest(String[] strArr1) {

        int i=-27, i22=-14, i23=3218, i24=-193, i25=40810, i26=32423, i27=-4, i28=0;

        i = 1;
        while (++i < 179) {
            vMeth(i, fFld);
            for (i22 = 1; i22 < 140; ++i22) {
                Test.instanceCount += (-14 + (i22 * i22));
                for (i24 = 1; i24 < 2; i24++) {
                    if (false) {
                        fFld = Test.instanceCount;
                        lArrFld[(i23 >>> 1) % N] *= -218;
                    } else if (Test.bFld) {
                        i25 *= -27710;
                        Test.iArrFld[i24 - 1] += i26;
                    } else if (Test.bFld) {
                        Test.dFld -= Test.byFld;
                    } else {
                        i25 = Test.iFld;
                        i25 *= i25;
                        i23 |= (int)Test.instanceCount;
                    }
                    Test.byFld = (byte)Test.dFld;
                    switch ((((Test.iFld >>> 1) % 2) * 5) + 91) {
                    case 97:
                        i27 += (int)Test.instanceCount;
                        break;
                    case 94:
                        i23 >>= i24;
                        Test.fArrFld[i + 1] = i24;
                        break;
                    default:
                        Test.fArrFld[i24] = 14;
                    }
                    Test.instanceCount = (long)Test.dFld;
                }
                Test.dFld = i27;
                Test.instanceCount = 0;
                if (Test.bFld) continue;
            }
            i23 = (int)Test.instanceCount;
            i28 = 140;
            while (--i28 > 0) {
                i26 = i22;
                Test.instanceCount = i22;
                Test.dFld = 91L;
                Test.instanceCount ^= Test.iFld;
            }
        }

        FuzzerUtils.out.println("i i22 i23 = " + i + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 = " + i27 + "," + i28);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld Test.dFld Test.byFld = " + Float.floatToIntBits(fFld) + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.fArrFld lArrFld Test.iArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
