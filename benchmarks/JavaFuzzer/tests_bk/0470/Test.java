// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6128885092704386834L;
    public static volatile double dFld=-103.46264;
    public static int iFld=198;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -4L);
        FuzzerUtils.init(Test.iArrFld, -136);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i1, int i2) {


        Test.dFld = i2;
        long meth_res = i1 + i2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i=-232, i3=11, i4=0, i5=10, i6=14, i7=-44068, i8=0, iArr[]=new int[N];
        boolean b=true;
        float f=0.559F;

        FuzzerUtils.init(iArr, 56732);

        Test.dFld -= (((1078180178L + (i + i)) + iMeth(i, i)) - i);
        for (i3 = 5; 204 > i3; i3++) {
            for (i5 = 8; i5 > i3; --i5) {
                if (b) continue;
            }
            i6 += (i3 * i3);
            for (i7 = 8; i7 > 1; i7--) {
                f += i;
                Test.lArrFld[i3 + 1] |= i3;
                i4 = i6;
                iArr[i7] = i4;
            }
            i8 += (int)(-34.905F + (i3 * i3));
        }
        Test.instanceCount -= -88;
        for (int i9 : iArr) {
            try {
                i = (i9 / i9);
                i8 = (1816781488 % i4);
                i8 = (i3 / i7);
            } catch (ArithmeticException a_e) {}
            i *= (int)Test.instanceCount;
        }
        vMeth1_check_sum += i + i3 + i4 + i5 + i6 + (b ? 1 : 0) + i7 + i8 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(short s) {

        long l=-5299750029763824131L;
        int i10=29729, i11=-9, i12=-58638, i13=179, i14=0;
        float f1=-2.477F;
        byte by=26;
        boolean b1=true;

        l = 1;
        do {
            vMeth1();
            if (b1) {
                Test.iArrFld[(int)(l - 1)] = Test.iFld;
                for (i10 = 1; i10 < 8; i10++) {
                    i11 = (int)f1;
                    for (i12 = 2; i12 > 1; i12--) {
                        Test.iFld >>= Test.iFld;
                        Test.iFld /= (int)((long)(Test.dFld) | 1);
                        Test.iArrFld[i12] >>= (int)l;
                        by = (byte)Test.dFld;
                        Test.iFld = i13;
                    }
                }
                i11 = i14;
            }
            Test.dFld = i10;
            f1 = l;
        } while (++l < 195);
        vMeth_check_sum += s + l + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + by + i14 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        short s1=16377;
        int i15=0, i16=-37148, i17=-2, i18=8, i19=-7, i20=8, i21=-23977;
        byte by1=-12;
        float f2=97.36F;

        vMeth(s1);
        for (i15 = 9; i15 < 222; ++i15) {
            i16 -= i16;
            i16 = i15;
            i16 -= by1;
            for (i17 = 118; 7 < i17; i17--) {
                fArrFld[i17] = -59.562F;
                switch ((i17 % 6) + 79) {
                case 79:
                    i18 >>= i18;
                    break;
                case 80:
                    Test.instanceCount >>= 3865959280L;
                    break;
                case 81:
                    i18 = i18;
                    f2 -= Test.instanceCount;
                    break;
                case 82:
                    i19 = 1;
                    while ((i19 += 3) < 2) {
                        i16 = 25253;
                        by1 += (byte)(((i19 * Test.instanceCount) + i15) - i15);
                        i16 = (int)Test.instanceCount;
                        Test.iFld |= i16;
                        i18 += (i19 * Test.instanceCount);
                        i16 = by1;
                    }
                    f2 -= 6;
                case 83:
                    Test.instanceCount = (long)f2;
                    Test.iFld += (i17 * i17);
                    switch ((i17 % 3) + 8) {
                    case 8:
                        for (i20 = 1; i20 < 2; ++i20) {
                            Test.instanceCount <<= Test.instanceCount;
                            f2 = f2;
                        }
                        i18 *= i21;
                        Test.instanceCount += i17;
                        Test.iFld = i17;
                    case 9:
                        Test.dFld = i19;
                    case 10:
                        i18 -= (int)f2;
                        break;
                    }
                    break;
                case 84:
                    Test.iFld += (int)Test.instanceCount;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("s1 i15 i16 = " + s1 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("by1 i17 i18 = " + by1 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("f2 i19 i20 = " + Float.floatToIntBits(f2) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 = " + i21);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld fArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
