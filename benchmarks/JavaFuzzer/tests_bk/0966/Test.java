// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-697177060L;
    public static int iFld=21;
    public static float fFld=13.438F;
    public static volatile int iArrFld[][]=new int[N][N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 13);
        FuzzerUtils.init(Test.fArrFld, -2.915F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1, int i7, short s1) {

        int i8=11, i9=-1, i10=85, i11=-55, i12=-14, i13=-16915, i14=27546;
        boolean b=true;
        byte by=96;

        i8 -= (int)874119504L;
        if (b) {
            Test.iFld <<= (int)Test.instanceCount;
            for (i9 = 10; i9 < 371; i9 += 3) {
                for (i11 = 13; i11 > 1; i11 -= 3) {
                    i7 = i11;
                    switch ((i11 % 4) + 56) {
                    case 56:
                        Test.instanceCount += -43;
                        break;
                    case 57:
                    case 58:
                        Test.iFld -= i7;
                        i12 = i7;
                        for (i13 = 1; i13 < 4; ++i13) {
                            Test.iArrFld[i9][i9 - 1] -= (int)253L;
                            i14 *= 9;
                            if (i10 != 0) {
                            }
                            Test.fFld += (i13 * i13);
                        }
                    case 59:
                        b = b;
                    default:
                        i12 ^= (int)Test.instanceCount;
                    }
                }
            }
        } else if (b) {
            by <<= (byte)i13;
        } else if (b) {
            i7 = i10;
        } else {
            Test.instanceCount = 11;
        }
        long meth_res = Float.floatToIntBits(f1) + i7 + s1 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + (b ? 1 : 0) + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i6) {

        short s=-28526;
        double d3=-53.65526;
        int i15=-109, i16=-43, i17=-81, i18=183, i19=-18415;
        boolean b1=true;

        try {
            i6 <<= (int)(((s + Test.fFld) * (i6 * -58425)) + (Test.iArrFld[(Test.iFld >>> 1) % N][(-73 >>> 1) % N] *=
                iMeth(Test.fFld, i6, s)));
        }
        catch (ArrayIndexOutOfBoundsException exc3) {
            i6 += (int)Test.instanceCount;
        }
        try {
            i6 *= (int)Test.fFld;
            d3 = 4157956606L;
            for (i15 = 1; i15 < (361 + 400); ++i15) {
                Test.instanceCount >>>= -785243957L;
                if (b1) {
                    for (i17 = 1; i17 < (4 + 400); ++i17) {
                        Test.instanceCount = Test.instanceCount;
                        Test.iArrFld[i17 - 1][i15] >>= Test.iFld;
                        b1 = b1;
                    }
                } else {
                    i16 = i16;
                    i18 %= (int)1.118506;
                }
            }
        }
        catch (NullPointerException exc4) {
            i6 = i19;
        }
        catch (ArrayIndexOutOfBoundsException exc5) {
            Test.fArrFld[(i18 >>> 1) % N] += i15;
        }
        vMeth1_check_sum += i6 + s + Double.doubleToLongBits(d3) + i15 + i16 + i17 + i18 + (b1 ? 1 : 0) + i19;
    }

    public static void vMeth(int i3, int i4, int i5) {

        float f=2.323F;
        double d2=79.1326;
        int i20=222, i21=-42161, i22=1;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 54476L);

        Test.iFld = (int)(Test.iFld = (int)((f = (float)d2) - Test.instanceCount));
        lArr1[(Test.iFld >>> 1) % N] *= (long)((f++) + (lArr1[(i4 >>> 1) % N] + (i4 + i4)));
        d2 *= Test.instanceCount;
        vMeth1(Test.iFld);
        Test.instanceCount = (long)f;
        Test.instanceCount = i3;
        i20 = 1;
        while ((i20 += 2) < 139) {
            Test.fArrFld[i20] = i4;
            i5 += (int)Test.instanceCount;
            i3 += (int)Test.instanceCount;
            Test.fArrFld = Test.fArrFld;
            Test.instanceCount >>>= i20;
        }
        for (i21 = 3; i21 < 188; ++i21) {
            i3 = i4;
            Test.iFld *= i3;
        }
        vMeth_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i20 + i21 + i22 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=13, i1=-11, i2=4115, i23=-7, i24=15141, i25=-5014, i26=87, iArr[]=new int[N];
        long l=3514886226L, lArr[]=new long[N];
        double d1=-1.58582;
        boolean b2=false;

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(lArr, 2303746455L);

        i = 1;
        while (++i < 179) {
            double d=-108.43304;
            Test.instanceCount = (long)(-((d * i) * (i + Test.instanceCount)));
            Test.iFld *= (iArr[i - 1]--);
            Test.iFld += (((i * l) + i) - Test.iFld);
            if (b2) {
                lArr[i] = ((6938 - (++Test.iFld)) >> (++Test.iFld));
            } else if (b2) {
                d1 = 140;
                while (--d1 > 0) {
                    Test.iFld += (int)(d1 - Test.iFld);
                    for (i1 = 1; i1 < 1; i1++) {
                        vMeth(-14, i1, i1);
                        if (b2) continue;
                        Test.iFld += i1;
                        Test.instanceCount >>= -1;
                        Test.iArrFld[i][i + 1] >>= i2;
                        Test.iFld -= 74;
                        Test.iFld = i;
                        Test.iFld <<= 17185;
                        Test.iFld >>= (int)11L;
                        Test.instanceCount = Test.instanceCount;
                    }
                }
                Test.instanceCount -= i;
            } else if (b2) {
                i2 -= (int)d;
            } else {
                Test.iFld -= (int)-2.24754;
                for (i23 = 3; i23 < 140; i23++) {
                    if (b2) continue;
                }
                for (i25 = 8; 140 > i25; i25++) {
                    Test.iFld += i25;
                    i26 += (int)d;
                    l += l;
                }
            }
        }
        i24 = (int)Test.instanceCount;
        i2 = 179;

        FuzzerUtils.out.println("i l d1 = " + i + "," + l + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i1 i2 b2 = " + i1 + "," + i2 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 iArr lArr = " + i26 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
