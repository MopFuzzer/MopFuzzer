// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7876379458474857963L;
    public static short sFld=17473;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 47540L);
        FuzzerUtils.init(Test.iArrFld, -58047);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        int i6=127, i7=30, i8=-6978, i9=32865, i10=-4, i11=-59;
        double d1=14.6338;
        float f1=0.518F;

        Test.instanceCount += i4;
        Test.lArrFld[(8 >>> 1) % N][(i5 >>> 1) % N] >>= i5;
        for (i6 = 10; i6 < 311; i6++) {
            i4 = (int)d1;
            if (true) {
                for (i8 = i6; i8 < 5; i8++) {
                    Test.iArrFld[i8 + 1] >>= i8;
                    Test.sFld >>= (short)i9;
                    i9 += (((i8 * i6) + i8) - f1);
                    for (i10 = 1; i10 < 1; ++i10) {
                        Test.lArrFld[i10 - 1][i8 - 1] = i4;
                        i5 += (i10 * i10);
                        Test.iArrFld[i10 + 1] += i5;
                        Test.instanceCount = 139L;
                        i4 += (i10 * i10);
                    }
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + Float.floatToIntBits(f1) + i10
            + i11;
    }

    public static void vMeth() {

        int i2=-10463, i3=34628, i12=-11;
        byte by=-126;
        double d=1.95059;
        boolean b1=false;

        for (i2 = 8; 133 > i2; i2++) {
            boolean b=true;
            i3 -= i3;
            i3 -= (int)(((by - i2) * (i3 + i2)) >> (long)(-(d + i3)));
            vMeth1(i2, i3);
            i3 <<= i3;
            b = b;
        }
        Test.sFld = (short)d;
        Test.instanceCount = Test.instanceCount;
        i3 = i3;
        i12 = 339;
        while ((i12 -= 3) > 0) {
            i3 = Test.sFld;
        }
        Test.instanceCount ^= Test.instanceCount;
        if (b1) {
            i3 -= i12;
            Test.instanceCount += Test.sFld;
        }
        vMeth_check_sum += i2 + i3 + by + Double.doubleToLongBits(d) + i12 + (b1 ? 1 : 0);
    }

    public static int iMeth(int i1, float f) {


        vMeth();
        long meth_res = i1 + Float.floatToIntBits(f);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-208, i13=-43672, i14=199, i15=-32, i16=0, i17=-139, i18=109;
        float f2=0.1006F;
        long l=-3659670939L;
        boolean b2=false;

        i &= (int)((iMeth(i, -1.895F) * i) / ((long)(f2) | 1));
        i += (int)Test.instanceCount;
        i *= 65424;
        for (l = 16; 364 > l; ++l) {
            i14 = 1;
            do {
                switch (((i14 % 7) * 5) + 59) {
                case 80:
                    i13 += i14;
                    i ^= (int)l;
                    break;
                case 90:
                    switch ((i14 % 7) + 44) {
                    case 44:
                        i13 = -60;
                        break;
                    case 45:
                        for (i15 = 1; 1 > i15; ++i15) {
                            double d2=-2.100082;
                            Test.iArrFld[i15 + 1] = (int)Test.instanceCount;
                            i13 -= (int)l;
                            Test.instanceCount = (long)d2;
                        }
                        Test.iArrFld[i14] /= 222;
                        break;
                    case 46:
                        if (b2) {
                            if (b2) {
                                i13 += (i14 * i16);
                                Test.instanceCount += 5;
                                Test.instanceCount += (i14 - i);
                                i17 = 1;
                                do {
                                    if (b2) continue;
                                } while (++i17 < 1);
                            } else {
                                i16 += (i14 * i14);
                                f2 -= i14;
                                Test.lArrFld[i14][i14] *= i13;
                            }
                            i13 = 49;
                        } else if (b2) {
                            i13 = (int)f2;
                            i18 = 1;
                            do {
                                i16 *= i18;
                                b2 = b2;
                            } while (++i18 < 1);
                        } else {
                            i += (int)Test.instanceCount;
                        }
                        break;
                    case 47:
                        i += i14;
                        break;
                    case 48:
                        i13 += (i14 * i14);
                        break;
                    case 49:
                        i16 += i14;
                    case 50:
                        Test.iArrFld[(int)(l)] >>= 1;
                        break;
                    default:
                        Test.instanceCount -= -3;
                    }
                    break;
                case 82:
                    i *= i;
                    break;
                case 74:
                    if (false) break;
                    break;
                case 64:
                case 94:
                case 89:
                    Test.instanceCount ^= i17;
                    break;
                }
            } while (++i14 < 72);
        }

        FuzzerUtils.out.println("i f2 l = " + i + "," + Float.floatToIntBits(f2) + "," + l);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 b2 = " + i16 + "," + i17 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i18 = " + i18);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.lArrFld = " + Test.instanceCount + "," + Test.sFld +
            "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
