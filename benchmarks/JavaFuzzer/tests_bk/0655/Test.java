// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1268433857L;
    public static byte byFld=-96;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1) {

        int i2=0, i3=-5, i4=-14, i5=22144, iArr[]=new int[N];
        float f1=74.538F;
        double d=25.74499, dArr[]=new double[N];
        byte by=-102;
        boolean b=false;

        FuzzerUtils.init(dArr, -103.21936);
        FuzzerUtils.init(iArr, -156);

        l1 ^= i2;
        i3 = 1;
        while (++i3 < 383) {
            switch ((i3 % 7) + 78) {
            case 78:
                i2 = (int)f1;
                d -= i3;
                break;
            case 79:
                i4 = 1;
                do {
                    dArr[i4] *= 61289;
                    i2 += i4;
                    f1 += (i4 - i4);
                    l1 <<= l1;
                    l1 >>>= i2;
                    iArr[i4 + 1] -= 4;
                    f1 += i4;
                } while (++i4 < 4);
                i2 += (int)-19.32614;
                break;
            case 80:
                i2 += i3;
                break;
            case 81:
                by &= (byte)i4;
                break;
            case 82:
                try {
                    i2 = (i4 / 220);
                    i5 = (i5 / i5);
                    i2 = (i4 / i3);
                } catch (ArithmeticException a_e) {}
                break;
            case 83:
                i5 = i5;
                break;
            case 84:
                i2 += (((i3 * i3) + i2) - f1);
                break;
            default:
                if (b) continue;
            }
        }
        vMeth2_check_sum += l1 + i2 + i3 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i4 + by + i5 + (b ?
            1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i1) {

        int i6=-165, i7=-220, i8=9, i9=-60173, i10=-4338, iArr1[]=new int[N];
        float f2=-111.568F;
        double d1=0.76295;
        long l2=-42254L, lArr[]=new long[N];
        boolean b1=false;

        FuzzerUtils.init(lArr, -59401L);
        FuzzerUtils.init(iArr1, 209);

        vMeth2(Test.instanceCount);
        for (i6 = 181; i6 > 8; --i6) {
            f2 += (i6 * i6);
            f2 = (float)d1;
            Test.instanceCount >>= Test.instanceCount;
            for (i8 = 1; i8 < 9; i8++) {
                for (l2 = 1; l2 < 2; ++l2) {
                    i7 = 254;
                    if (b1) {
                        d1 += i9;
                        if (i7 != 0) {
                            vMeth1_check_sum += i1 + i6 + i7 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) +
                                i8 + i9 + l2 + i10 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                    } else {
                        lArr[(int)(l2 - 1)] *= i6;
                        iArr1[i6] -= (int)-90.993F;
                    }
                    d1 *= -2347866307L;
                    i7 = -42;
                }
            }
        }
        vMeth1_check_sum += i1 + i6 + i7 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i8 + i9 + l2 + i10
            + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(float f, long l) {

        int i11=-32517, i12=8344, i13=10, i14=4, i15=-13, iArr2[][]=new int[N][N];
        boolean b2=true;

        FuzzerUtils.init(iArr2, 77);

        vMeth1(i11);
        for (i12 = 3; i12 < 164; i12 += 3) {
            l = (long)f;
            if (i11 != 0) {
                vMeth_check_sum += Float.floatToIntBits(f) + l + i11 + i12 + i13 + (b2 ? 1 : 0) + i14 + i15 +
                    FuzzerUtils.checkSum(iArr2);
                return;
            }
            i13 *= (int)Test.instanceCount;
            if (b2) break;
        }
        for (i14 = 6; i14 < 233; ++i14) {
            Test.byFld += (byte)i13;
            if (b2) {
                i13 = Test.byFld;
                i13 = i13;
                f += (i14 * i14);
                iArr2[i14] = iArr2[i14 + 1];
            } else {
                iArr2[i14][i14 - 1] >>>= i11;
                i11 += (((i14 * Test.instanceCount) + l) - i11);
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + l + i11 + i12 + i13 + (b2 ? 1 : 0) + i14 + i15 +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=59231, i16=-190, i17=-222, i18=-10, i19=-244;
        float f3=-14.425F;
        double d2=1.30861, d3=-1.119362;

        i = 1;
        do {
            Test.instanceCount = ((++Test.instanceCount) - i);
            vMeth(0.986F, -18284L);
            i16 += (((i * Test.instanceCount) + i16) - f3);
            i16 = i16;
            for (d2 = 4; d2 < 65; d2++) {
                i16 /= -36716;
                for (i18 = 1; i18 < 2; i18++) {
                    switch ((i18 % 7) + 106) {
                    case 106:
                        i19 -= (int)Test.instanceCount;
                        break;
                    case 107:
                    case 108:
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += (i18 * i18);
                        f3 = Test.instanceCount;
                        i16 -= -12;
                        break;
                    case 109:
                        f3 = i;
                        break;
                    case 110:
                        d3 += Test.instanceCount;
                        i16 = (int)f3;
                        switch (((i18 % 2) * 5) + 49) {
                        case 52:
                            i17 = i19;
                            switch (((i18 % 4) * 5) + 102) {
                            case 108:
                            case 110:
                                i19 >>= i;
                                break;
                            case 117:
                            case 118:
                                i17 += (int)-201L;
                                Test.instanceCount = i18;
                                i19 = i;
                                break;
                            default:
                                i17 += i18;
                                Test.instanceCount += (i18 - i17);
                            }
                            i17 = (int)Test.instanceCount;
                            i17 |= (int)Test.instanceCount;
                            break;
                        case 58:
                            Test.instanceCount += i18;
                            Test.instanceCount = Test.byFld;
                        default:
                            i17 *= i16;
                        }
                        break;
                    case 111:
                        i19 += (((i18 * Test.instanceCount) + Test.instanceCount) - i19);
                    case 112:
                        i17 += (((i18 * i19) + f3) - Test.instanceCount);
                        break;
                    default:
                        i17 -= (int)f3;
                    }
                }
            }
        } while (++i < 386);

        FuzzerUtils.out.println("i i16 f3 = " + i + "," + i16 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("d2 i17 i18 = " + Double.doubleToLongBits(d2) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 d3 = " + i19 + "," + Double.doubleToLongBits(d3));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld = " + Test.instanceCount + "," + Test.byFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
