// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=276744123L;
    public static float fFld=1.954F;
    public int iFld=-144;
    public int iArrFld[]=new int[N];

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=-133, i5=-1, i6=-6, i7=-20869, i8=44, i9=-22357, iArr[][]=new int[N][N];
        boolean b=true;
        long l1=137L;
        byte by1=15;

        FuzzerUtils.init(iArr, 254);

        i4 = i4;
        for (i5 = 6; i5 < 165; i5++) {
            if (b) break;
            iArr[i5 + 1][i5 - 1] = (int)Test.instanceCount;
        }
        iArr[(i4 >>> 1) % N][(i4 >>> 1) % N] = i5;
        l1 -= (long)7.827F;
        i7 = 1;
        while (++i7 < 398) {
            if (b) {
                i8 <<= (int)l1;
                l1 -= by1;
                i8 = i7;
            } else if (b) {
                i4 += (int)(-68.350F + (i7 * i7));
                i8 -= 25817;
                i8 = (int)4844693336361191605L;
            } else {
                i4 += (((i7 * i4) + i9) - i5);
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + (b ? 1 : 0) + l1 + i7 + i8 + by1 + i9 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i10=-36, i11=-26881, i12=19523, i13=157, i14=-9044, i16=-205, iArr1[]=new int[N];
        byte by2=51, byArr[]=new byte[N];
        double d1=21.75634;

        FuzzerUtils.init(byArr, (byte)37);
        FuzzerUtils.init(iArr1, 10);

        vMeth1();
        i10 %= (int)(by2 | 1);
        i10 += (int)Test.instanceCount;
        for (i11 = 10; i11 < 178; ++i11) {
            for (i13 = 1; i13 < 9; i13++) {
                int i15=-138;
                i10 -= i15;
                byArr = byArr;
                i16 = 1;
                while (++i16 < 2) {
                    i15 <<= i16;
                    d1 -= -62031L;
                    d1 += 99;
                    i10 = i16;
                    i12 = (int)Test.instanceCount;
                    try {
                        i12 = (i13 % iArr1[i11 - 1]);
                        iArr1[i11 - 1] = (iArr1[i16] % i14);
                        i15 = (i10 % i16);
                    } catch (ArithmeticException a_e) {}
                }
                i15 += (((i13 * i11) + Test.instanceCount) - i12);
            }
        }
        vMeth_check_sum += i10 + by2 + i11 + i12 + i13 + i14 + i16 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth(int i3, byte by) {

        int i17=0, i18=-133, i19=11, i20=14;

        vMeth();
        Test.fFld -= by;
        i3 = i3;
        for (i17 = 18; i17 < 306; i17++) {
            double d2=-126.48168;
            i3 += (((i17 * Test.instanceCount) + Test.instanceCount) - i3);
            Test.fFld += i17;
            Test.instanceCount = i18;
            if (i3 != 0) {
            }
            for (i19 = i17; 6 > i19; ++i19) {
                Test.instanceCount += (i19 * i19);
                Test.instanceCount >>>= Test.instanceCount;
            }
            d2 = i18;
        }
        long meth_res = i3 + by + i17 + i18 + i19 + i20;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=-193L, lArr[]=new long[N], lArr1[]=new long[N];
        int i=-9, i1=3, i2=-6, i21=-108, i22=39380, i23=-56397, i24=7, i25=-4, i26=-251, iArr2[]=new int[N];
        double d=12.83847;
        byte by3=-88;
        float f=2.733F;
        short s=-23470;

        FuzzerUtils.init(lArr, -872604676L);
        FuzzerUtils.init(lArr1, -52697L);
        FuzzerUtils.init(iArr2, 195);

        for (l = 206; l > 2; l -= 2) {
            for (i1 = 9; i1 < 246; ++i1) {
                lArr[(int)(l - 1)] -= (long)(d--);
            }
            Test.instanceCount &= (long)((Test.instanceCount &= l) * fMeth(i2, by3));
        }
        i += i2;
        i21 = 207;
        do {
            iArrFld[i21] += i1;
            i2 += i;
            for (i22 = 3; 121 > i22; ++i22) {
                for (i24 = 1; i24 < 2; i24++) {
                    by3 >>= (byte)i25;
                }
                i = 16;
                i23 = i25;
                iFld *= (int)l;
                for (f = i22; f < 2; f += 2) {
                    iArrFld[i22 + 1] = 13;
                    try {
                        i25 = (iArrFld[i22 - 1] / -1247530767);
                        i26 = (1633460047 % iArrFld[i22 - 1]);
                        iArrFld[i21] = (16256 % iArrFld[(int)(f + 1)]);
                    } catch (ArithmeticException a_e) {}
                    switch ((int)((f % 6) + 36)) {
                    case 36:
                        lArr1[i22 + 1] = l;
                        iArrFld[i22 + 1] = (int)Test.fFld;
                        iArrFld[(i24 >>> 1) % N] <<= i2;
                        Test.instanceCount *= Test.instanceCount;
                        break;
                    case 37:
                        if (false) break;
                        by3 = (byte)i23;
                        break;
                    case 38:
                    case 39:
                        s <<= (short)10L;
                        Test.instanceCount += iFld;
                        iFld += (int)(((f * l) + i) - Test.instanceCount);
                        break;
                    case 40:
                        s += (short)f;
                        try {
                            i = (i24 % i22);
                            iArr2[(int)(f)] = (53280 % i21);
                            i25 = (i2 % 22069);
                        } catch (ArithmeticException a_e) {}
                        iArrFld = iArr2;
                    case 41:
                        i26 += -81;
                    default:
                        Test.instanceCount += (long)f;
                    }
                }
            }
        } while (--i21 > 0);

        FuzzerUtils.out.println("l i i1 = " + l + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 d by3 = " + i2 + "," + Double.doubleToLongBits(d) + "," + by3);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 f = " + i24 + "," + i25 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i26 s lArr = " + i26 + "," + s + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("lArr1 iArr2 = " + FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + iFld);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
