// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3427934398L;
    public int iFld=-13;
    public static float fFld=2.567F;
    public static boolean bFld=true;
    public static double dFld=64.69421;
    public static short sFld=28524;
    public byte byFld=-29;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 10L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i7=-141, i8=61213;

        i7 = (int)Test.fFld;
        i8 = 151;
        while (--i8 > 0) {
            i7 += (((i8 * i8) + i8) - i7);
            i7 *= (int)Test.fFld;
            i7 = i8;
        }
        vMeth2_check_sum += i7 + i8;
    }

    public static void vMeth1(int i4) {

        int i5=-233, i6=-8, iArr[]=new int[N];
        double d=-90.1607;
        byte by=0;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 14);
        FuzzerUtils.init(fArr, -102.807F);

        Test.instanceCount = (long)Test.fFld;
        for (i5 = 129; i5 > 8; i5 -= 2) {
            d -= (d - (-(i4 * Test.fFld)));
            i4 += i5;
            vMeth2();
            iArr = iArr;
            i6 += (int)Test.instanceCount;
        }
        for (int i9 : iArr) {
            i6 *= (int)d;
            iArr[(i6 >>> 1) % N] = by;
            switch ((((23728 >>> 1) % 2) * 5) + 4) {
            case 7:
                Test.lArrFld[(i5 >>> 1) % N] *= i5;
                break;
            case 9:
                Test.bFld = false;
                i6 = i4;
            default:
                fArr = fArr;
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + Double.doubleToLongBits(d) + by + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i2, int i3) {

        int i10=-38498, i11=24918, i12=-3, i13=-14, i14=149, i15=-30612, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -8090);

        Test.instanceCount += ((i2 += i2) - i2);
        vMeth1(i10);
        i10 = (int)Test.instanceCount;
        i11 = 1;
        do {
            for (i12 = 1; i12 < 10; i12++) {
                switch (((i12 % 6) * 5) + 121) {
                case 138:
                    Test.instanceCount *= -45982;
                    i13 += i12;
                    break;
                case 147:
                    for (i14 = 1; i14 < 2; i14++) {
                        i15 = i10;
                        try {
                            i15 = (i15 % -28484);
                            i10 = (i10 / -1211919446);
                            i2 = (i14 / -129);
                        } catch (ArithmeticException a_e) {}
                    }
                    switch ((i11 % 2) + 27) {
                    case 27:
                        i15 -= (int)Test.fFld;
                        Test.dFld *= i14;
                        Test.dFld *= 2;
                        break;
                    case 28:
                        i13 *= i10;
                    default:
                        i10 += (int)(-2322014462L + (i12 * i12));
                    }
                    break;
                case 124:
                    i3 += (int)Test.instanceCount;
                    break;
                case 128:
                    i15 <<= i15;
                case 129:
                    i15 += (((i12 * Test.fFld) + i3) - i15);
                    break;
                case 131:
                    iArr1[i11 + 1] >>>= i15;
                    break;
                }
            }
        } while ((i11 += 2) < 314);
        vMeth_check_sum += i2 + i3 + i10 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=230, i1=113, i16=-66, i17=184, i18=53736, i19=-35436, i20=3, i21=-202, i22=-5, i23=6, iArr2[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr2, -161);
        FuzzerUtils.init(dArr, 77.62717);

        iFld <<= (int)((Long.reverseBytes(1013568459L) * (Test.instanceCount - iFld)) - iFld);
        for (i = 5; 225 > i; ++i) {
            vMeth(-228, i);
            i16 += (i * i);
            Test.instanceCount += (((i * i) + Test.sFld) - i16);
            Test.fFld = Test.instanceCount;
            iFld = Test.sFld;
            for (i17 = 1; i17 < 114; i17++) {
                i16 <<= 11;
                i1 -= (int)Test.instanceCount;
                for (i19 = 2; i19 > 1; i19--) {
                    Test.dFld += i20;
                }
                i21 = 1;
                do {
                    Test.fFld += 31668;
                    i18 = 2;
                    Test.instanceCount += (i21 * i21);
                    byFld += (byte)i1;
                    Test.instanceCount = i;
                    i18 = i1;
                    iFld >>= i17;
                    Test.instanceCount = i1;
                } while (++i21 < 2);
                switch ((((10 >>> 1) % 1) * 5) + 90) {
                case 91:
                    for (i22 = 1; i22 < 2; ++i22) {
                        Test.instanceCount = Test.instanceCount;
                        i16 = i16;
                        i16 += -14124;
                        iArr2[i17 - 1] *= i19;
                        i18 >>= i19;
                    }
                    break;
                }
                dArr[i] = i16;
                Test.instanceCount -= 231;
            }
        }

        FuzzerUtils.out.println("i i1 i16 = " + i + "," + i1 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 iArr2 dArr = " + i23 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bFld Test.dFld Test.sFld = " + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("byFld Test.lArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
