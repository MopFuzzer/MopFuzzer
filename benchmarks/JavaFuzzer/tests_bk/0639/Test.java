// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-123L;
    public static int iFld=-160;
    public static double dFld=22.45903;
    public static float fFld=-1.71F;
    public long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f) {

        short s=21746;
        int i8=135, i9=-36243, i10=-9, i11=11, i12=11;
        double d=0.7659;
        byte by=35;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -22.171F);

        s *= (short)Test.iFld;
        Test.iFld = (int)Test.instanceCount;
        for (i8 = 228; i8 > 13; i8 -= 3) {
            s += (short)Test.instanceCount;
            i10 = 1;
            while (++i10 < 22) {
                Test.iFld -= (int)Test.instanceCount;
                i9 = i8;
                f = 53;
                i9 = (int)d;
                for (i11 = 1; 1 < i11; i11 -= 2) {
                    by = (byte)Test.instanceCount;
                    f += i8;
                    i12 = i10;
                    fArr = FuzzerUtils.float1array(N, (float)-60.154F);
                    Test.instanceCount = i9;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + s + i8 + i9 + i10 + Double.doubleToLongBits(d) + i11 + i12 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i6, int i7) {

        float f1=-38.879F;
        int i13=6, i14=7, i15=8, i16=2, i17=-9765, iArr[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -37);
        FuzzerUtils.init(dArr, -2.64005);

        i6 = (-(++i7));
        vMeth1(f1);
        i13 = 197;
        while ((i13 -= 3) > 0) {
            for (i14 = 23; i14 > 1; i14--) {
                i7 = -250;
                for (i16 = 1; i16 < 2; ++i16) {
                    f1 += (i16 * f1);
                    iArr = iArr;
                    switch (((i14 >>> 1) % 9) + 124) {
                    case 124:
                        Test.iFld = i15;
                        Test.dFld = f1;
                        f1 += i14;
                        break;
                    case 125:
                        dArr[i16 + 1] -= 5;
                        break;
                    case 126:
                        i6 &= (int)Test.instanceCount;
                        dArr[i14 + 1] = -239;
                        break;
                    case 127:
                        Test.iFld *= (int)f1;
                        break;
                    case 128:
                    case 129:
                        Test.instanceCount += (i16 * i16);
                    case 130:
                        if (i14 != 0) {
                            vMeth_check_sum += i6 + i7 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 + i17 +
                                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                            return;
                        }
                        break;
                    case 131:
                    case 132:
                        f1 = -7;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i6 + i7 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public float fMeth(int i4, int i5) {

        int i18=99, i19=4435, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 90);

        vMeth(Test.iFld, -20016);
        lArrFld[(i4 >>> 1) % N] >>= Test.instanceCount;
        Test.instanceCount -= 12;
        for (i18 = 15; i18 < 245; ++i18) {
            iArr1[i18] *= i5;
            if (true) break;
            i4 -= (int)Test.instanceCount;
            if (Test.iFld != 0) {
            }
        }
        long meth_res = i4 + i5 + i18 + i19 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=-32720, i2=5, i3=1169, i20=0, i21=-7, i22=0, i23=166;
        short s1=-10780;
        byte by1=59;
        boolean b=true;
        float f2=-2.835F;

        for (i = 13; i < 311; ++i) {
            for (i2 = i; i2 < 84; i2 += 3) {
                Test.instanceCount *= (long)(fMeth(i, i3) * Test.instanceCount);
                for (i20 = 1; i20 > i2; i20 -= 2) {
                    Test.fFld -= -57.368F;
                    iArrFld[i - 1] = i;
                    iArrFld[i] ^= (int)Test.instanceCount;
                    Test.iFld >>= Test.iFld;
                }
                Test.instanceCount += (i2 * i2);
            }
            switch ((i % 6) + 7) {
            case 7:
                Test.fFld = i3;
                i1 += (i ^ s1);
                break;
            case 8:
                by1 >>>= (byte)Test.instanceCount;
                iArrFld[i - 1] = -30;
                Test.iFld *= (int)-1L;
                break;
            case 9:
                i21 += (-7494 + (i * i));
                break;
            case 10:
                by1 += (byte)-2.117520;
                i21 += (((i * i2) + i1) - i);
                iArrFld[i] = i21;
                break;
            case 11:
                lArrFld = lArrFld;
                lArrFld[i - 1] = i20;
                if (b) break;
                break;
            case 12:
                i21 = i2;
                i22 = 1;
                while (++i22 < 84) {
                    Test.dFld = i20;
                    for (f2 = 1; f2 < 1; ++f2) {
                        Test.fFld *= Test.iFld;
                        s1 += (short)(((f2 * i21) + Test.fFld) - Test.iFld);
                        i23 += (int)5L;
                        i23 += (int)Test.instanceCount;
                    }
                }
                break;
            default:
                i1 >>= i;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i20 i21 = " + i3 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("s1 by1 b = " + s1 + "," + by1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i22 f2 i23 = " + i22 + "," + Float.floatToIntBits(f2) + "," + i23);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld lArrFld iArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
