// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=14678L;
    public static float fFld=55.208F;
    public static boolean bFld=true;
    public static short sFld=23114;
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13);
        FuzzerUtils.init(Test.iArrFld1, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i4=111, i5=-36683, i6=-248, i7=228, i8=-30674, iArr[]=new int[N];
        float f=87.312F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -12L);
        FuzzerUtils.init(iArr, -41831);

        i4 |= 4;
        lArr1[(i4 >>> 1) % N] = (long)f;
        for (i5 = 1; i5 < 171; ++i5) {
            i6 *= i6;
            iArr[i5 + 1] *= (int)64074L;
            Test.instanceCount &= Test.instanceCount;
            i4 >>>= i6;
            i6 <<= i4;
            i6 += (int)f;
            i6 = -59381;
            for (i7 = 9; i7 > i5; i7--) {
                lArr1[i7] = i5;
                i8 <<= (int)-11L;
                lArr1[i7 - 1] <<= i8;
            }
        }
        f += -88L;
        long meth_res = i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i2=7239, i3=-8, i9=-54993, i10=4, i11=-14, i12=-53165, i13=8, i14=6, i15=16290;
        double d=110.68912;
        long l=-19L, lArr[]=new long[N];
        boolean b=true;

        FuzzerUtils.init(lArr, -2L);

        for (i2 = 15; i2 < 384; ++i2) {
            d -= i2;
            lArr[i2] = (long)(iMeth() * d);
            i3 += i2;
            for (i9 = 1; i9 < 5; ++i9) {
                i3 = 53250;
            }
            i10 += (((i2 * Test.fFld) + i10) - i2);
        }
        for (l = 19; 395 > l; ++l) {
            Test.iArrFld = Test.iArrFld;
            Test.iArrFld[(int)(l)] >>= i10;
        }
        for (i12 = 21; 381 > i12; ++i12) {
            if (b) {
                for (i14 = 1; i14 < 5; i14++) {
                    byte by=88;
                    try {
                        i11 = (Test.iArrFld[i12] % 533722756);
                        i15 = (i2 / -1688672269);
                        i11 = (i3 / -19280);
                    } catch (ArithmeticException a_e) {}
                    i11 <<= by;
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + Double.doubleToLongBits(d) + i9 + i10 + l + i11 + i12 + i13 + i14 + i15 + (b ? 1
            : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i16=-137, i17=-6, i18=-3, i19=15706, i20=-206, i21=29, i22=62407, i23=161;

        vMeth1();
        for (i16 = 205; i16 > 3; i16 -= 3) {
            for (i18 = 1; i18 < 23; i18 += 3) {
                for (i20 = 1; i20 < 4; i20++) {
                    i19 += 50470;
                }
                if (Test.bFld) continue;
                Test.sFld += (short)i19;
                i21 += i21;
                switch ((i18 % 1) + 83) {
                case 83:
                    for (i22 = 1; 4 > i22; i22++) {
                        switch (((i16 % 1) * 5) + 112) {
                        case 116:
                            Test.instanceCount -= Test.instanceCount;
                            i23 = 55;
                            break;
                        }
                        Test.instanceCount *= Test.instanceCount;
                        Test.instanceCount -= i18;
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i=-152, i1=6, i25=100, i26=-10;
        byte by1=-9;
        long lArr2[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr2, -53146L);
        FuzzerUtils.init(fArr, 92.569F);

        for (i = 8; 208 > i; i++) {
            int i24=20104;
            double d1=1.73788;
            vMeth();
            Test.sFld = Test.sFld;
            i1 += i;
            i1 += (((i * i) + i24) - i);
            Test.iArrFld1[i + 1] += i1;
            i24 = i1;
            Test.instanceCount += (long)d1;
            i1 = (int)Test.fFld;
            Test.instanceCount = -8408L;
        }
        lArr2 = lArr2;
        Test.instanceCount = by1;
        fArr[(i1 >>> 1) % N] += 2318970584L;
        for (double d2 : dArrFld) {
            Test.instanceCount = i1;
            Test.iArrFld1[(i1 >>> 1) % N] = (int)Test.fFld;
            for (i25 = 1; i25 < 63; ++i25) {
                i1 -= i26;
                i26 = i;
                if (Test.bFld) continue;
                i26 -= (int)Test.instanceCount;
                i1 = i26;
            }
            Test.fFld = i26;
            i1 = (int)-13L;
            Test.iArrFld[(i >>> 1) % N] -= i;
            dArrFld[(i1 >>> 1) % N] += i;
            Test.fFld += Test.instanceCount;
            Test.fFld = i1;
            i1 *= 18299;
        }
        Test.fFld += i26;

        FuzzerUtils.out.println("i i1 by1 = " + i + "," + i1 + "," + by1);
        FuzzerUtils.out.println("i25 i26 lArr2 = " + i25 + "," + i26 + "," + FuzzerUtils.checkSum(lArr2));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.sFld Test.iArrFld Test.iArrFld1 = " + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
