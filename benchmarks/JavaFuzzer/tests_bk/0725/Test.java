// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4281594772665340679L;
    public static short sFld=28626;
    public static double dFld=6.63870;
    public static float fFld=74.177F;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -203);
        FuzzerUtils.init(Test.lArrFld, -93L);
        FuzzerUtils.init(Test.fArrFld, 71.172F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i9) {

        int i10=18734, i11=-51865, i12=5, i13=218, i14=6;
        float f1=25.49F;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, -2.117126);

        for (i10 = 1; i10 < 233; i10++) {
            switch ((i10 % 8) + 64) {
            case 64:
                Test.dFld = i11;
                i12 = 7;
                while (--i12 > 0) {
                    Test.instanceCount = i10;
                    i11 += i12;
                    for (i13 = 1; i13 < 1; ++i13) {
                        Test.iArrFld[(i13 >>> 1) % N] = (int)l;
                        i11 = (int)l;
                    }
                    l >>= i13;
                    f1 = 1;
                    while (++f1 < 1) {
                        i11 *= i13;
                        l = i12;
                        dArr[i10 + 1][i12 + 1] += i9;
                        Test.sFld -= (short)i9;
                    }
                }
                break;
            case 65:
                Test.fFld += i10;
                break;
            case 66:
                Test.iArrFld = FuzzerUtils.int1array(N, (int)12);
                break;
            case 67:
            case 68:
                Test.instanceCount = (long)Test.dFld;
                break;
            case 69:
                i9 += (int)(58651L + (i10 * i10));
                break;
            case 70:
                i11 *= (int)f1;
                break;
            case 71:
                Test.iArrFld[i10 - 1] += i13;
                break;
            }
        }
        vMeth2_check_sum += l + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(byte by) {

        int i6=49660, i7=2, i8=9, i15=11, i16=-3, i17=-14, i18=-13676;
        float f=2.891F;

        if (true) {
            i6 = 1;
            do {
                for (i7 = 1; i7 < 8; ++i7) {
                    i8 += (96 + (i7 * i7));
                }
                Test.instanceCount *= (long)f;
                vMeth2(-1564455752512120672L, i7);
                for (i15 = i6; i15 < 8; i15++) {
                    if (i7 != 0) {
                        vMeth1_check_sum += by + i6 + i7 + i8 + Float.floatToIntBits(f) + i15 + i16 + i17 + i18;
                        return;
                    }
                    Test.fFld += (i15 * i15);
                    switch (((i15 % 1) * 5) + 45) {
                    case 48:
                        i16 += (((i15 * Test.instanceCount) + i6) - f);
                        for (i17 = 1; 1 > i17; i17++) {
                            Test.lArrFld[i6] *= (long)Test.fFld;
                            Test.fFld += -18283;
                            Test.iArrFld[i6] = -14;
                        }
                        break;
                    }
                }
            } while (++i6 < 189);
            vMeth1_check_sum += by + i6 + i7 + i8 + Float.floatToIntBits(f) + i15 + i16 + i17 + i18;
            return;
        }
        vMeth1_check_sum += by + i6 + i7 + i8 + Float.floatToIntBits(f) + i15 + i16 + i17 + i18;
    }

    public static void vMeth(int i, int i1, int i2) {

        int i3=-14, i4=138, i5=514, i19=-168, i20=20190, i21=196, i22=26529;
        byte by1=-60;

        for (i3 = 12; 300 > i3; ++i3) {
            i = (int)(((Test.instanceCount - i3) % ((-237 * i4) | 1)) - ((i2 - i1) * Test.sFld));
        }
        i5 = 1;
        while (++i5 < 212) {
            vMeth1(by1);
            for (i19 = i5; 8 > i19; i19++) {
                i4 -= i;
                i = i5;
                by1 += (byte)(-152L + (i19 * i19));
                for (i21 = 1; i21 < 1; ++i21) {
                    if (i2 != 0) {
                        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + by1 + i19 + i20 + i21 + i22;
                        return;
                    }
                }
                Test.fFld += i19;
                Test.iArrFld[i19 + 1] += by1;
                Test.fFld *= i20;
                i20 += (i19 ^ Test.instanceCount);
                Test.instanceCount += (long)Test.fFld;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + by1 + i19 + i20 + i21 + i22;
    }

    public void mainTest(String[] strArr1) {

        int i23=-3, i24=-23574, i25=-13555, i26=133, i27=39434, i28=3104, i29=-36136, i30=3, i31=-11, i32=-7, i33=224,
            i34=14;
        byte by2=-108;

        vMeth(i23, i23, 193);
        i23 -= i23;
        for (i24 = 23; i24 < 393; i24++) {
            i25 = i23;
            i23 ^= i24;
            Test.instanceCount = 5;
            Test.instanceCount *= i23;
            for (i26 = i24; i26 < 68; ++i26) {
                Test.lArrFld[i26 + 1] *= Test.instanceCount;
                Test.instanceCount += i26;
            }
        }
        i27 >>>= 13;
        for (i28 = 192; i28 > 2; --i28) {
            by2 = (byte)i27;
            i29 = i23;
            Test.instanceCount *= (long)Test.fFld;
            i27 -= i24;
        }
        for (i30 = 4; i30 < 363; ++i30) {
            i31 = -62030;
            Test.iArrFld[i30] <<= i29;
            i25 += i30;
            i27 *= Test.sFld;
            i32 = 70;
            do {
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-48830);
                Test.instanceCount = i26;
                i29 += (i32 | i23);
                for (i33 = i30; i33 < 1; ++i33) {
                    i23 = (int)Test.instanceCount;
                    Test.fArrFld[i32 + 1] -= Test.fFld;
                    i25 = -199;
                    Test.instanceCount += i26;
                }
            } while (--i32 > 0);
        }

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 by2 i30 = " + i29 + "," + by2 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 = " + i34);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.iArrFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
