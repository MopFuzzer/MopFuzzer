// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-25138L;
    public static float fFld=-2.543F;
    public static volatile byte byFld=-40;
    public boolean bFld=true;
    public volatile short sFld=-19526;

    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i9=8;

        i9 = 1;
        while (++i9 < 297) {
            double d1=-2.17508;
            Test.fFld += (((i9 * Test.fFld) + i9) - Test.instanceCount);
            d1 = i9;
        }
        long meth_res = i9;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(double d, float f) {

        int i5=15661, i6=-61709, i7=-23791, i8=237, i10=27615, i11=0, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -143);

        for (i5 = 1; i5 < 338; i5++) {
            for (i7 = 1; i7 < 5; ++i7) {
                short s=-17883;
                f += (lMeth() + Test.instanceCount);
                i8 += (int)f;
                i6 &= i8;
                i8 -= (int)d;
                for (i10 = 1; i10 < 2; ++i10) {
                    if (false) continue;
                    i6 -= (int)d;
                    i6 = (int)-2805551543446120815L;
                    Test.instanceCount = Test.instanceCount;
                    Test.byFld = (byte)i11;
                    iArr1[i5 - 1] -= i6;
                }
                Test.instanceCount = i7;
                s += (short)(-22328 + (i7 * i7));
            }
        }
        long meth_res = Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i10 + i11 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public byte byMeth(int i3) {

        long l=-33059L, lArr[][]=new long[N][N];
        int i4=1, i12=-3, i13=0, i14=62791, iArr2[]=new int[N];
        double d2=-115.98496;

        FuzzerUtils.init(iArr2, -3);
        FuzzerUtils.init(lArr, 2401723545L);

        for (l = 4; l < 142; l++) {
            i4 += (int)(((i4 - l) + iMeth(-1.75500, 13.687F)) * i4);
            i12 += (int)d2;
            i3 += (int)(((l * i4) + i13) - i3);
        }
        i12 /= (int)(i13 | 1);
        i13 += i3;
        i14 = 1;
        while (++i14 < 397) {
            iArr2[i14 + 1] |= i14;
            if (bFld) {
                i13 = i14;
                i4 = i14;
            } else if (bFld) {
                lArr[i14][i14 - 1] = i12;
                i12 += (i14 * i14);
                if (bFld) continue;
            } else {
                i13 += (i14 * i14);
            }
        }
        long meth_res = i3 + l + i4 + i12 + Double.doubleToLongBits(d2) + i13 + i14 + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(lArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=3, i2=-135, i15=144, i16=-54447, i17=-155, i18=-13, i19=17917, i20=13, iArr[]=new int[N],
            iArr3[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr, 172);
        FuzzerUtils.init(iArr3, 27222);

        iArr[(10 >>> 1) % N] = (int)(((Test.instanceCount + i) * i) + (-(i++)));
        if (b) {
            for (i1 = 1; i1 < 349; i1 += 2) {
                switch ((i1 % 7) + 5) {
                case 5:
                    i += (byMeth(i) + i);
                    for (i15 = 5; i15 < 144; ++i15) {
                        i16 += i15;
                        bFld = b;
                        i += (i15 + i16);
                        i16 *= (int)Test.instanceCount;
                        i += (((i15 * Test.fFld) + i1) - Test.byFld);
                    }
                    break;
                case 6:
                    Test.fFld += (((i1 * i16) + Test.instanceCount) - i2);
                    for (i17 = i1; i17 < 144; i17++) {
                        i -= i;
                        i2 = (int)Test.instanceCount;
                        i16 <<= -102;
                        for (i19 = 1; i19 < 1; ++i19) {
                            iArr[i1] >>= (int)15857L;
                            Test.fFld = i15;
                            iArr3[i19 - 1] = (int)2322010630L;
                            Test.byFld += (byte)(i19 - i15);
                            i20 += (i19 * i19);
                            switch (((i19 % 5) * 5) + 119) {
                            case 140:
                                i18 = i20;
                                break;
                            case 136:
                                i20 &= (int)Test.instanceCount;
                                if (bFld) break;
                            case 131:
                                i18 = (int)Test.instanceCount;
                                bFld = b;
                                i16 += (int)Test.fFld;
                                if (bFld) continue;
                                break;
                            case 122:
                                Test.instanceCount = i18;
                                break;
                            case 135:
                                Test.instanceCount >>= i20;
                                break;
                            }
                        }
                    }
                    break;
                case 7:
                    Test.instanceCount += (i1 | i17);
                    break;
                case 8:
                    i20 += sFld;
                    break;
                case 9:
                    Test.byFld -= (byte)9;
                case 10:
                    Test.instanceCount <<= 9087374879805580309L;
                    break;
                case 11:
                    sFld -= (short)i16;
                    break;
                default:
                    Test.instanceCount += (i1 + i20);
                }
            }
        } else {
            i -= i20;
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i15 i16 b = " + i15 + "," + i16 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 iArr iArr3 = " + i20 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("bFld sFld = " + (bFld ? 1 : 0) + "," + sFld);

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
