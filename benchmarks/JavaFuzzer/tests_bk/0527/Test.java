// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=224L;
    public static volatile float fFld=0.725F;
    public static byte byArrFld[][]=new byte[N][N];
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)64);
        FuzzerUtils.init(Test.iArrFld, -43000);
        FuzzerUtils.init(Test.fArrFld, -2.559F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        int i6=5, i7=32, i8=-13, i9=-13149;
        float f1=-2.430F;
        double d=-1.66891;
        byte by=-16;

        Test.byArrFld = Test.byArrFld;
        for (i6 = 1; i6 < 315; i6++) {
            f1 += (i6 * i6);
            i7 *= i6;
            i5 += (int)(1629321347593541948L + (i6 * i6));
            Test.instanceCount /= (Test.instanceCount | 1);
            for (i8 = 1; i8 < 5; i8 += 2) {
                short s=4061;
                i5 = i5;
                i9 += (int)Test.instanceCount;
                f1 += ((long)i8 | (long)i8);
                d -= Test.instanceCount;
                i7 += i8;
                f1 += (((i8 * s) + Test.instanceCount) - i6);
                by += (byte)(((i8 * i7) + i8) - i5);
                if (i8 != 0) {
                    vMeth2_check_sum += i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + Double.doubleToLongBits(d)
                        + by;
                    return;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + Double.doubleToLongBits(d) + by;
    }

    public static void vMeth1(long l1, long l2) {

        int i3=-39304, i4=-28121, i10=12, i11=147, i12=72, i13=249;
        short s1=-15931;
        double d1=78.86597;

        i3 = 1;
        do {
            i4 -= (i4--);
            vMeth2(151);
            for (i10 = 1; i10 < 8; ++i10) {
                Test.fFld -= i10;
                Test.iArrFld = Test.iArrFld;
                s1 *= (short)l1;
            }
            for (i12 = 8; i12 > i3; i12 -= 3) {
                d1 -= l1;
                i4 = i4;
            }
            i4 = -4;
            Test.fArrFld = Test.fArrFld;
        } while (++i3 < 200);
        Test.fFld = (float)d1;
        i13 |= i10;
        Test.instanceCount %= (i3 | 1);
        vMeth1_check_sum += l1 + l2 + i3 + i4 + i10 + i11 + s1 + i12 + i13 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(long l, float f) {

        int i=82, i1=61589, i2=-3, i14=-11, i15=-33103, i16=-34, i17=25630, iArr[]=new int[N];
        long l4=-2819060706L, lArr[]=new long[N];
        boolean b=true;

        FuzzerUtils.init(iArr, -53221);
        FuzzerUtils.init(lArr, -202L);

        f -= iArr[(i >>> 1) % N];
        for (i1 = 5; i1 < 236; i1 += 2) {
            i2 -= (int)((i2++) - ((105.301F - i2) + (iArr[i1 - 1]++)));
        }
        vMeth1(l, Test.instanceCount);
        Test.instanceCount -= -1277557618L;
        for (long l3 : lArr) {
            Test.byArrFld = Test.byArrFld;
            for (i14 = 1; i14 < 4; ++i14) {
                double d2=-2.78700;
                i15 = (int)l;
                Test.fFld -= -60634;
                d2 = i;
                for (i16 = 1; 2 > i16; ++i16) {
                    l4 = Test.instanceCount;
                    Test.instanceCount = l4;
                    if (b) continue;
                }
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + i + i1 + i2 + i14 + i15 + i16 + i17 + l4 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=52, i19=-236, i20=7, i21=53362, i22=44904, i23=143, i24=8, i25=-44584, i26=-11, i27=-6;
        long l5=-3399417107L, lArr1[]=new long[N];
        boolean b1=true;
        short s2=9217;

        FuzzerUtils.init(lArr1, -1804435163L);

        vMeth(-6L, Test.fFld);
        Test.fFld += Test.fFld;
        Test.instanceCount += i18;
        for (i19 = 6; i19 < 194; ++i19) {
            for (l5 = i19; l5 < 133; ++l5) {
                if (b1) break;
                for (i22 = (int)(l5); i22 < 1; i22++) {
                    i21 += i20;
                    Test.iArrFld[i19 - 1] *= i18;
                    Test.instanceCount <<= -11;
                    Test.instanceCount += (((i22 * l5) + l5) - Test.fFld);
                    i20 -= i23;
                }
                b1 = b1;
                i18 >>= (int)l5;
                Test.instanceCount += s2;
                for (i24 = 1; i24 < 1; i24++) {
                    Test.iArrFld = Test.iArrFld;
                    Test.instanceCount -= i21;
                    i23 = (int)1.467F;
                }
                i18 *= i22;
                i18 += (int)(l5 | i22);
                Test.fFld = i18;
                for (i26 = 1; 1 < i26; --i26) {
                    lArr1[i26] += i27;
                    i25 += (i26 * i26);
                    i21 = i24;
                    i20 += i24;
                }
            }
            i25 = i25;
            lArr1[i19 - 1] -= 38910;
            i25 = i25;
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("l5 i21 b1 = " + l5 + "," + i21 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i22 i23 s2 = " + i22 + "," + i23 + "," + s2);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 lArr1 = " + i27 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.byArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
