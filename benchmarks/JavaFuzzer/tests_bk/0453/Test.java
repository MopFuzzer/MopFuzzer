// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=131975111L;
    public static int iFld=7;
    public static boolean bFld=false;
    public static volatile short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)11398);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vSmallMeth(int i) {

        short s=32041;

        i -= i;
        i = Integer.reverseBytes((i - i) - (++s));
        vSmallMeth_check_sum += i + s;
    }

    public static void vMeth(int i4, int i5) {

        float f=-93.852F, fArr[]=new float[N];
        int i6=-65523, i7=171, i8=215, i9=51643, i10=-10199, i11=247, i12=-59001;
        short s1=-12172;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, -86.710F);
        FuzzerUtils.init(lArr, 80L);

        f = ((f--) + ((i5 * i5) - (-(f * i6))));
        vSmallMeth(i6);
        i4 = i4;
        s1 = (short)Test.instanceCount;
        for (i7 = 337; i7 > 7; i7 -= 2) {
            if (i5 != 0) {
                vMeth_check_sum += i4 + i5 + Float.floatToIntBits(f) + i6 + s1 + i7 + i8 + i9 + i10 + i11 + i12 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
                return;
            }
            for (i9 = 1; 10 > i9; i9++) {
                fArr[i9 + 1] -= 113;
                s1 += (short)i9;
                for (i11 = 2; 1 < i11; i11--) {
                    i10 &= i11;
                    i5 = i4;
                    if (i4 != 0) {
                        vMeth_check_sum += i4 + i5 + Float.floatToIntBits(f) + i6 + s1 + i7 + i8 + i9 + i10 + i11 + i12
                            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    i10 += (((i11 * Test.instanceCount) + i10) - i4);
                    lArr[i7 - 1] += i5;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + Float.floatToIntBits(f) + i6 + s1 + i7 + i8 + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1) {

        int i2=-1, i3=-69, i13=-145, i14=3, i15=-11, i16=-202, iArr[]=new int[N];
        double d=-31.92789;
        short s2=29781, sArr[][]=new short[N][N];
        boolean b=true;
        float f1=127.942F, f2=-1.790F;

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(sArr, (short)-5803);

        Test.instanceCount = iArr[(i1 >>> 1) % N];
        switch ((((iArr[(i1 >>> 1) % N] >>> 1) % 4) * 5) + 94) {
        case 99:
        case 103:
            for (i2 = 5; i2 < 127; ++i2) {
                vMeth(i3, i3);
                d = -238;
                i3 |= s2;
                i3 -= -10;
            }
            switch ((((i1 >>> 1) % 9) * 5) + 124) {
            case 161:
                for (i13 = 15; i13 < 244; ++i13) {
                    for (i15 = i13; i15 < 7; ++i15) {
                        i16 *= i15;
                        i1 = i13;
                        i1 -= s2;
                        Test.instanceCount >>= 234;
                        Test.instanceCount <<= i2;
                    }
                }
                break;
            case 155:
                i1 >>= i13;
                break;
            case 134:
                iArr = iArr;
                break;
            case 142:
                iArr[(i16 >>> 1) % N] = (int)Test.instanceCount;
                break;
            case 153:
                sArr[(i16 >>> 1) % N][(i13 >>> 1) % N] = (short)i3;
            case 159:
                b = b;
                break;
            case 160:
                i14 >>= i15;
            case 151:
                f1 %= (i1 | 1);
            case 149:
                Test.instanceCount -= i13;
                break;
            default:
                sArr[(i15 >>> 1) % N][(i15 >>> 1) % N] -= (short)f2;
            }
        case 100:
            Test.instanceCount = i2;
        case 110:
            i3 = i1;
            break;
        default:
            i16 += i3;
        }
        long meth_res = i1 + i2 + i3 + Double.doubleToLongBits(d) + s2 + i13 + i14 + i15 + i16 + (b ? 1 : 0) +
            Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=2.878F;
        int i19=3, i20=0, i21=-241, i22=-77, i23=4, i24=-4821, i25=-160, i26=68, i27=-82, i28=171, iArr1[]=new int[N];
        short s3=-23404;
        byte by=-3;
        double d1=-79.73896;

        FuzzerUtils.init(iArr1, 1);

        for (int smallinvoc=0; smallinvoc<541; smallinvoc++) vSmallMeth(iMeth(Test.iFld));
        Test.iFld = (int)f3;
        Test.iFld = (int)Test.instanceCount;
        for (i19 = 13; 359 > i19; ++i19) {
            for (i21 = 73; i21 > 1; i21--) {
                for (i23 = 1; i23 < 2; ++i23) {
                    Test.iFld = (int)Test.instanceCount;
                    i22 -= i19;
                    iArr1[i19] >>= -32080;
                    i25 += i23;
                    f3 = f3;
                    Test.sArrFld[i21] <<= s3;
                    i24 = (int)Test.instanceCount;
                }
                i26 = 1;
                do {
                    i25 *= (int)19.801F;
                    i22 >>= i26;
                    i24 -= (int)-113.38282;
                    Test.instanceCount *= i25;
                    i25 += (int)Test.instanceCount;
                } while (++i26 < 2);
                i20 -= 53206;
                Test.iFld -= i22;
                i24 -= (int)1.146F;
                by |= (byte)Test.instanceCount;
                for (i27 = 1; i27 < 2; ++i27) {
                    Test.bFld = Test.bFld;
                    iArr1[i27] >>= i25;
                    Test.instanceCount = -83;
                    iArr1[i19] *= i20;
                    i28 = (int)d1;
                    iArr1[i21] = -12;
                }
            }
        }

        FuzzerUtils.out.println("f3 i19 i20 = " + Float.floatToIntBits(f3) + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 s3 = " + i24 + "," + i25 + "," + s3);
        FuzzerUtils.out.println("i26 by i27 = " + i26 + "," + by + "," + i27);
        FuzzerUtils.out.println("i28 d1 iArr1 = " + i28 + "," + Double.doubleToLongBits(d1) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test vMeth iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
