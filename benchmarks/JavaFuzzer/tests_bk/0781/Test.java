// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2908082170L;
    public static byte byFld=0;
    public static volatile double dFld=122.12065;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -1964209424294906693L);
        FuzzerUtils.init(Test.iArrFld1, 35050);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i8, int i9, int i10) {

        int i11=152, i12=125, iArr2[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr2, 8);

        Test.instanceCount = Test.instanceCount;
        i11 = 1;
        while (++i11 < 220) {
            Test.instanceCount = Test.byFld;
            if (b1) {
                Test.instanceCount = Test.byFld;
                i10 *= (int)Test.instanceCount;
            } else {
                i9 += i11;
                b1 = b1;
                if (b1) {
                    iArr2[i11 + 1] = 60;
                    switch ((i11 % 1) + 11) {
                    case 11:
                        i9 = (int)Test.dFld;
                        break;
                    default:
                        i12 = 1;
                        while (++i12 < 7) {
                            iArr2[i12] >>= i12;
                            Test.instanceCount = i12;
                        }
                    }
                } else {
                    if (i11 != 0) {
                    }
                }
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + (b1 ? 1 : 0) + i12 + FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth() {

        int i6=7, i7=14, iArr1[]=new int[N];
        float f1=5.311F;

        FuzzerUtils.init(iArr1, -11);

        for (i6 = 14; i6 < 245; i6++) {
            i7 += (++iArr1[i6]);
            i7 = (int)dMeth(i7, i6, i6);
            f1 = i6;
            i7 *= (int)f1;
            iArr1[i6] *= (int)f1;
            i7 += i6;
            Test.instanceCount = 7;
        }
        i7 = i7;
        iArr1[(i7 >>> 1) % N] -= -28266;
        iArr1[(i6 >>> 1) % N] = i7;
        for (int i14 : iArr1) {
            i14 <<= 8;
            i7 |= i14;
            i7 = i14;
        }
        long meth_res = i6 + i7 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, long l) {

        int i1=34076, i2=-166, i3=-13, i4=-7, i5=9, i15=-14, i16=11, iArr[]=new int[N];
        long l1=-11L, lArr[]=new long[N];
        double d=-1.127439;
        boolean b=true;
        byte by=-45;
        float f2=104.895F;

        FuzzerUtils.init(lArr, -2L);
        FuzzerUtils.init(iArr, -2);

        for (i1 = 8; 267 > i1; i1++) {
            for (l1 = i1; l1 < 6; l1++) {
                lArr[i1] -= (long)(d / (i2 | 1));
                for (i4 = 1; i4 < 1; ++i4) {
                    float f=1.647F;
                    iArr[i1] -= iArr[i1];
                    if (b) break;
                    lArr[i1 + 1] += (long)(f -= i5);
                    by -= (byte)iMeth();
                }
                i2 += (int)Test.instanceCount;
                by = (byte)i1;
                i2 = (int)Test.instanceCount;
                for (i15 = 1; 1 > i15; i15++) {
                    if (b) continue;
                    f2 -= f2;
                }
                iArr[i1] = (int)-52.341F;
            }
        }
        vMeth_check_sum += i + l + i1 + i2 + l1 + i3 + Double.doubleToLongBits(d) + i4 + i5 + (b ? 1 : 0) + by + i15 +
            i16 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=19905, i18=76, i19=11249, i20=-5, i21=241, i22=-3, i23=-2, i24=-9259, i25=-20684, i26=0;
        double d1=0.74410, dArr[][]=new double[N][N];
        float f3=16.244F;
        boolean b2=true;
        long l2=-2L, l3=1087812538L;
        short s=29367;

        FuzzerUtils.init(dArr, -4.107888);

        vMeth(i17, Test.instanceCount);
        d1 *= f3;
        for (i18 = 9; i18 < 151; ++i18) {
            f3 = 3;
            for (i20 = 4; i20 < 177; i20++) {
                for (i22 = 1; i22 < 2; i22++) {
                    iArrFld[i22] = (int)Test.instanceCount;
                    iArrFld[i18 - 1] >>= (int)Test.instanceCount;
                    if (b2) break;
                    b2 = b2;
                    iArrFld[i22 - 1] -= (int)Test.instanceCount;
                }
                i23 += (int)Test.instanceCount;
                Test.instanceCount = (long)f3;
                l2 = 1;
                while (++l2 < 2) {
                    Test.lArrFld[i20] -= Test.byFld;
                    i19 = (int)l2;
                }
                i24 = -13;
                i21 = -121;
                for (i25 = 1; 2 > i25; ++i25) {
                    Test.dFld = l2;
                    Test.instanceCount += (long)(0.969F + (i25 * i25));
                    Test.instanceCount += (((i25 * i17) + i17) - i18);
                    i24 = (int)Test.instanceCount;
                    i19 >>= i22;
                    s += (short)i26;
                    i24 += i25;
                }
            }
            l3 -= i20;
            Test.iArrFld1[i18 - 1] *= (int)Test.dFld;
            dArr[i18 - 1][i18 - 1] -= i19;
            i26 += (i18 ^ l3);
        }

        FuzzerUtils.out.println("i17 d1 f3 = " + i17 + "," + Double.doubleToLongBits(d1) + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("b2 l2 i24 = " + (b2 ? 1 : 0) + "," + l2 + "," + i24);
        FuzzerUtils.out.println("i25 i26 s = " + i25 + "," + i26 + "," + s);
        FuzzerUtils.out.println("l3 dArr = " + l3 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("iArrFld Test.lArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
