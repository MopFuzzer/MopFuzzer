// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=0L;
    public static float fFld=-101.848F;
    public static boolean bFld=false;
    public static volatile double dFld=0.79934;
    public static byte byFld=26;
    public static short sFld=-4783;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -10L);
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2) {

        int i3=-64106, i4=-38688, i5=-7, i6=5735, i7=31484;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, -1.100893);

        for (i3 = 15; i3 < 287; i3++) {
            i5 = 1;
            while (++i5 < 6) {
                Test.fFld += i5;
                Test.lArrFld[i5 + 1] <<= Test.instanceCount;
                i4 *= i2;
                i2 ^= (int)3L;
                for (i6 = 1; i6 < 1; ++i6) {
                    switch ((i3 % 10) + 10) {
                    case 10:
                        i2 >>= 225;
                        break;
                    case 11:
                        if (Test.bFld) break;
                        if (Test.bFld) {
                            Test.iArrFld[i3 - 1] >>= i4;
                            Test.instanceCount <<= i4;
                            Test.iArrFld[i5 + 1] = (int)Test.instanceCount;
                            i2 += i6;
                        } else {
                            Test.dFld += i7;
                        }
                    case 12:
                        Test.instanceCount -= i5;
                        break;
                    case 13:
                        Test.iArrFld[i5] |= i2;
                        break;
                    case 14:
                        i7 = i6;
                        break;
                    case 15:
                        Test.fFld += (i6 * i6);
                        break;
                    case 16:
                        Test.instanceCount += (4L + (i6 * i6));
                        break;
                    case 17:
                        Test.fFld -= Test.instanceCount;
                        break;
                    case 18:
                        dArr1[i3 - 1] += i7;
                        break;
                    case 19:
                        i4 = (int)Test.fFld;
                    default:
                        i2 = i2;
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static void vMeth() {

        int i=60, i1=52156;
        double dArr[]=new double[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(dArr, 86.50908);
        FuzzerUtils.init(fArr, 0.335F);

        for (i = 7; i < 237; i++) {
            Test.instanceCount *= ((i1 >>= (int)(Test.instanceCount - i)) - (Test.instanceCount = (-(i - i1))));
            i1 += (int)(11L * (Test.instanceCount - (Test.instanceCount * Test.instanceCount)));
            dArr[i + 1] += (i1 + (59338L - (i1--)));
            vMeth1(i);
            i1 = (int)-3681355331L;
            i1 += i;
            i1 = i1;
        }
        if (true) {
            i1 -= (int)Test.instanceCount;
            Test.lArrFld[(i >>> 1) % N] = i1;
        } else if (Test.bFld) {
            i1 = Test.byFld;
            fArr[(i >>> 1) % N] += i1;
            i1 = i;
            i1 -= (int)Test.fFld;
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vSmallMeth() {

        short s=-23923;

        vMeth();
        Test.dFld = s;
        vSmallMeth_check_sum += s;
    }

    public void mainTest(String[] strArr1) {

        int i8=56, i9=-5, i10=32445, i11=40192, i12=-60962, i13=-95, i14=-62, i15=1;
        long l=-14L;

        for (int smallinvoc=0; smallinvoc<137; smallinvoc++) vSmallMeth();
        for (i8 = 7; i8 < 326; ++i8) {
            i9 *= i8;
            i9 = i8;
            i9 = Test.byFld;
            i9 <<= i8;
        }
        for (l = 7; l < 343; ++l) {
            Test.instanceCount = (long)Test.fFld;
            i11 = 75;
            do {
                i10 -= (int)Test.dFld;
            } while (--i11 > 0);
            if (Test.bFld) {
                for (i12 = 3; i12 < 75; i12++) {
                    i10 -= i13;
                    for (i14 = i12; 2 > i14; ++i14) {
                        i10 += (int)Test.instanceCount;
                        switch ((int)((l % 3) + 82)) {
                        case 82:
                        case 83:
                            i10 += (((i14 * Test.fFld) + i14) - l);
                            Test.fFld += Test.fFld;
                            i13 >>= (int)Test.instanceCount;
                            Test.iArrFld[(int)(l + 1)] *= i13;
                        case 84:
                            i10 += i9;
                            break;
                        }
                        i9 += (94 + (i14 * i14));
                        Test.sFld += (short)(-166L + (i14 * i14));
                        i9 -= (int)l;
                        Test.instanceCount = i9;
                    }
                    i9 -= i14;
                    i9 += 3;
                }
                Test.iArrFld[(int)(l + 1)] -= i12;
                Test.instanceCount <<= i15;
                i15 |= (int)l;
            } else if (Test.bFld) {
                if (true) break;
            } else if (Test.bFld) {
                iArrFld1[(int)(l)] += (int)Test.fFld;
            }
        }

        FuzzerUtils.out.println("i8 i9 l = " + i8 + "," + i9 + "," + l);
        FuzzerUtils.out.println("i10 i11 i12 = " + i10 + "," + i11 + "," + i12);
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.byFld Test.sFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.byFld + "," + Test.sFld);
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld iArrFld1 = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
