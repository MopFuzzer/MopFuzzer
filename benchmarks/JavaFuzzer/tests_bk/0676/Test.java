// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-4202198036461048395L;
    public static volatile double dFld=24.111544;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -23595);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i4, long l2) {

        float f1=1.963F;
        boolean b=false;
        int i5=-226;
        byte byArr[]=new byte[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-45);
        FuzzerUtils.init(lArr1, -142L);

        Test.iArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] = (int)f1;
        for (byte by : byArr) {
            Test.instanceCount *= i4;
            Test.dFld -= i4;
            i4 += i4;
            b = b;
            i5 = 1;
            do {
                by = (byte)Test.instanceCount;
                l2 -= l2;
                lArr1[i5 - 1] = i5;
                i4 >>= i4;
                if (b) continue;
                i4 &= i5;
            } while (++i5 < 4);
            lArr1 = lArr1;
            Test.iArrFld[(17721 >>> 1) % N][(i4 >>> 1) % N] *= i4;
        }
        long meth_res = l1 + i4 + l2 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i5 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth1() {

        double d1=1.30093;
        int i3=-41975, i6=-1, i7=143, i8=-35511, i9=11, i10=13991, i11=11, i12=65170;

        for (d1 = 5; d1 < 257; ++d1) {
            i3 = iMeth(200L, i3, Test.instanceCount);
            Test.instanceCount *= i3;
            i3 += (int)(d1 * d1);
            for (i6 = 1; i6 < 6; i6++) {
                for (i8 = (int)(d1); i8 < 2; ++i8) {
                    i9 <<= -22923;
                    Test.iArrFld[i6 - 1][i8] = i8;
                }
                Test.iArrFld[(int)(d1)][i6] >>= i8;
                i10 = 1;
                do {
                    i3 = 254;
                } while (++i10 < 2);
                i9 -= i9;
                for (i11 = 1; i11 < 2; ++i11) {
                    Test.instanceCount += (40 + (i11 * i11));
                    Test.iArrFld[i11 + 1][(int)(d1)] <<= i8;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i3 + i6 + i7 + i8 + i9 + i10 + i11 + i12;
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(double d, int i1, float f) {

        long l=-151048028243457879L, lArr[]=new long[N];
        int i2=-40029, i13=-23996, i14=13478, i15=-215;
        boolean b1=false;

        FuzzerUtils.init(lArr, 224L);

        f -= (i1 * ((-6302692593326709985L + i1) + Test.iArrFld[(i1 >>> 1) % N][(i1 >>> 1) % N]));
        for (l = 16; l < 268; ++l) {
            i2 *= (int)(--lArr[(int)(l + 1)]);
            Test.iArrFld[(int)(l)][(int)(l)] <<= (int)(i2 = (int)(--Test.instanceCount));
            i2 += (int)l;
            Test.instanceCount += ((lMeth1() << 63817) + l);
            i2 &= -85;
            for (i13 = 1; i13 < 6; i13++) {
                i2 &= -29605;
            }
        }
        i15 = 387;
        while ((i15 -= 3) > 0) {
            if (b1) {
                if (b1) continue;
                Test.iArrFld[i15][i15] ^= i1;
                if (i15 != 0) {
                }
            } else {
                Test.iArrFld[i15][i15 - 1] >>>= i1;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i1 + Float.floatToIntBits(f) + l + i2 + i13 + i14 + i15 + (b1 ? 1
            : 0) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i16=-200, i17=-11, i18=-8, i19=36281, i20=-158, i21=419, i22=0, i23=-30976, i24=-4, i25=35285,
            i26=-16900, i27=51, i28=13566, i29=-2728, i30=-187, i31=57321;
        byte by1=-58, byArr1[]=new byte[N];
        short s=22963;
        float f2=-1.400F;
        long l3=-5663366241419831463L, lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, -14596L);
        FuzzerUtils.init(byArr1, (byte)33);

        i += (int)(((154 - i) - (i * i)) - lMeth(Test.dFld, i, 0.407F));
        by1 = (byte)i;
        for (i16 = 14; i16 < 313; i16++) {
            i17 = by1;
        }
        for (i18 = 12; i18 < 240; ++i18) {
            for (i20 = 5; i20 < 110; ++i20) {
                s = (short)Test.dFld;
                lArr2[i20 + 1][i20] *= i;
                Test.iArrFld[(i >>> 1) % N][i18 + 1] = i21;
            }
            i += (int)Test.instanceCount;
            Test.iArrFld[i18][i18 - 1] >>= i20;
        }
        for (i22 = 217; i22 > 6; --i22) {
            for (i24 = i22; 119 > i24; i24++) {
                i19 = s;
                i21 += (((i24 * i19) + i16) - i25);
                f2 += i22;
            }
            Test.iArrFld[i22][i22 + 1] += (int)f2;
            byArr1 = byArr1;
        }
        for (i26 = 11; i26 < 341; i26++) {
            Test.dFld += f2;
            lArr2[i26] = lArr2[i26];
            i25 >>= i17;
            i23 = (int)Test.instanceCount;
        }
        i28 = 1;
        while (++i28 < 314) {
            for (i29 = 80; i28 < i29; --i29) {
                for (l3 = 1; l3 > 1; l3--) {
                    lArr2[i28 - 1][i29 - 1] = (long)f2;
                    Test.iArrFld[i29] = Test.iArrFld[(int)(l3)];
                    i23 = -129;
                    i31 += (int)l3;
                }
            }
        }

        FuzzerUtils.out.println("i by1 i16 = " + i + "," + by1 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 s = " + i20 + "," + i21 + "," + s);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 f2 i26 = " + i25 + "," + Float.floatToIntBits(f2) + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 l3 i31 = " + i30 + "," + l3 + "," + i31);
        FuzzerUtils.out.println("lArr2 byArr1 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(byArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iArrFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
