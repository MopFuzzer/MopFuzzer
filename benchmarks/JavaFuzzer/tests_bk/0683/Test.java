// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5160449551880983817L;
    public static boolean bFld=true;
    public static volatile float fFld=106.692F;
    public static double dFld=-22.57174;
    public static short sFld=15666;
    public byte byFld=124;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -185);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, int i8) {

        int i9=-48381, i10=11, i11=-1, i12=6, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -44);

        i9 = 299;
        do {
            i8 -= (int)40454L;
            for (i10 = 1; i10 < 6; ++i10) {
                byte by=-17;
                i8 += (((i10 * by) + i8) - i10);
                d1 += i10;
                Test.instanceCount -= -223;
                i8 = (int)Test.instanceCount;
                switch ((i10 % 4) + 55) {
                case 55:
                    i12 = 1;
                    while (++i12 < 2) {
                        Test.instanceCount >>= -4;
                        Test.instanceCount <<= Test.instanceCount;
                        if (Test.bFld) continue;
                        iArr = iArr;
                        Test.instanceCount = i8;
                    }
                    break;
                case 56:
                    i11 >>= 13691;
                    break;
                case 57:
                    i11 -= by;
                case 58:
                    Test.instanceCount = i10;
                    break;
                }
            }
        } while (--i9 > 0);
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(float f) {

        int i6=66, i7=10, i13=8, i14=3832, i15=-4, i16=-63968, iArr1[]=new int[N];
        double d2=-50.61736;
        short s=-25488;
        byte by1=-116;

        FuzzerUtils.init(iArr1, 0);

        for (i6 = 6; i6 < 262; i6++) {
            vMeth1(d2, i7);
            i7 = s;
            i7 = i6;
            iArr1[i6 - 1] *= i6;
            Test.instanceCount <<= -75;
            for (i13 = 1; i13 < 6; ++i13) {
                for (i15 = i13; i15 < 2; i15++) {
                    i7 <<= i14;
                    i7 = (int)8.340F;
                    i7 += i14;
                }
                Test.instanceCount += (i13 ^ i15);
                i16 = i16;
                iArr1[(i14 >>> 1) % N] = 35560;
                by1 *= (byte)i13;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i6 + i7 + Double.doubleToLongBits(d2) + s + i13 + i14 + i15 + i16 +
            by1 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3) {

        int i4=-22760, i5=-39413, i17=-7, i18=-40289, i19=17731, i20=6;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i4 = 6; i4 < 143; i4++) {
            iMeth(Test.fFld);
            if (Test.bFld) {
                bArr = bArr;
                for (i17 = 1; i17 < 11; ++i17) {
                    Test.iArrFld[i4 - 1] += i4;
                    Test.fFld -= Test.instanceCount;
                    Test.iArrFld[i17] = (int)Test.instanceCount;
                }
            } else {
                for (i19 = 1; i19 < 11; i19++) {
                    switch ((i4 % 2) + 113) {
                    case 113:
                        Test.iArrFld[i4] *= i5;
                        Test.dFld *= i3;
                        Test.iArrFld[i19] *= i4;
                        break;
                    case 114:
                        i18 >>= i18;
                    default:
                        i5 += (((i19 * i18) + i4) - i19);
                    }
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        double d=28.81177, d3=-68.102474, dArr[][]=new double[N][N];
        int i=59565, i1=-4, i2=-11, i21=208, i22=-8, i23=33580, i24=-2, i25=-8, i26=22915, i27=-43, i28=-8, i29=-6;
        long l=-211631378L;

        FuzzerUtils.init(dArr, 4.11770);

        d += i;
        for (i1 = 266; 14 < i1; i1--) {
            vMeth(11);
            Test.instanceCount = i1;
        }
        i -= (int)67.802F;
        switch (((i >>> 1) % 2) + 9) {
        case 9:
            switch (((i >>> 1) % 1) + 85) {
            case 85:
                for (i21 = 12; 393 > i21; ++i21) {
                    Test.fFld -= Test.fFld;
                    for (i23 = 2; i23 < 66; ++i23) {
                        Test.iArrFld[i23] -= (int)-106.748F;
                    }
                    i2 += (((i21 * i) + i2) - i1);
                    i24 -= i23;
                    i24 = i22;
                    Test.sFld += (short)i21;
                }
                Test.instanceCount <<= i;
                i24 = byFld;
                break;
            }
            for (l = 5; l < 139; ++l) {
                for (i26 = 8; i26 < 187; i26 += 2) {
                    Test.bFld = Test.bFld;
                }
                i24 = i21;
                Test.fFld %= -84;
                i25 <<= i26;
                i -= i21;
            }
            break;
        case 10:
            for (d3 = 8; d3 < 196; ++d3) {
                i29 = 1;
                do {
                    if (Test.bFld) break;
                } while (++i29 < 133);
                Test.fFld += (float)d3;
                dArr[(int)(d3 + 1)][(int)(d3 + 1)] = i23;
            }
            break;
        }
        i2 -= i1;

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i21 i22 = " + i2 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 l = " + i23 + "," + i24 + "," + l);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d3 i28 i29 = " + Double.doubleToLongBits(d3) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.sFld byFld = " + Double.doubleToLongBits(Test.dFld) + "," + Test.sFld +
            "," + byFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
