// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-166L;
    public static short sFld=-9380;
    public static double dFld=118.13085;
    public int iArrFld[]=new int[N];
    public byte byArrFld[]=new byte[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, -12);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i7, int i8, float f1) {

        int i10=-7, i11=46663, i12=-13237, i13=-7, i14=25449, i15=-2;
        float f2=-85.277F;
        double d1=79.86534;

        for (int i9 : Test.iArrFld1) {
            switch (((i9 >>> 1) % 3) + 2) {
            case 2:
                for (i10 = 1; i10 < 4; i10++) {
                    for (i12 = i10; i12 < 2; ++i12) {
                        i13 += Test.sFld;
                        i8 = i7;
                        Test.instanceCount += i12;
                        f2 -= (float)d1;
                        i7 += (i12 + f2);
                        i11 = i9;
                        i9 -= (int)Test.instanceCount;
                    }
                    for (i14 = 1; i14 < 2; i14 += 2) {
                        try {
                            Test.iArrFld1[i14 + 1] = (i14 / i13);
                            Test.iArrFld1[i10 + 1] = (i14 % 181);
                            i9 = (i14 % i10);
                        } catch (ArithmeticException a_e) {}
                        f1 = Test.instanceCount;
                    }
                    i13 ^= (int)-52693L;
                }
                break;
            case 3:
                i8 = i10;
            case 4:
            }
        }
        long meth_res = i7 + i8 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d1) + i14 + i15;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(long l, int i6) {

        double d=1.60421;
        float f3=-1.653F;
        int i16=5, i17=26, i18=-44360, i19=-52801;
        byte by1=96, byArr[]=new byte[N];
        boolean b=true;

        FuzzerUtils.init(byArr, (byte)122);

        d = lMeth(i6, i6, f3);
        d = -3625866013L;
        d -= d;
        if (b) {
            l = Test.instanceCount;
            for (byte by : byArr) {
                Test.iArrFld1 = Test.iArrFld1;
                i6 *= (int)f3;
                Test.instanceCount |= i6;
                for (i16 = 1; i16 < 4; ++i16) {
                    l *= -203;
                    switch (((i16 % 1) * 5) + 53) {
                    case 56:
                        for (i18 = 1; i18 < 2; i18++) {
                            i19 += by;
                            Test.iArrFld1[i16] += (int)-27.565F;
                        }
                        break;
                    }
                }
            }
        } else if (b) {
            d -= i19;
        } else if (b) {
            i17 /= (int)(by1 | 1);
        } else {
            i19 >>= (int)l;
        }
        long meth_res = l + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f3) + i16 + i17 + i18 + i19 + by1 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        int i4=33, i5=-11, i20=8, i21=53382, i22=-5, i23=-6, i24=62246;
        float f4=-101.716F;
        boolean b1=false;
        byte by2=-36;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)29155);

        for (i4 = 13; i4 < 213; i4++) {
            iMeth(Test.instanceCount, i2);
            for (i20 = 1; 8 > i20; ++i20) {
                for (i22 = 1; 2 > i22; i22++) {
                    f4 += (((i22 * i21) + Test.instanceCount) - i4);
                    i3 *= i22;
                    Test.iArrFld1[i4] -= (int)Test.instanceCount;
                    switch ((i20 % 6) + 56) {
                    case 56:
                        switch ((i20 % 7) + 51) {
                        case 51:
                            i5 >>= 0;
                            i5 = i4;
                            i23 = i3;
                            i5 = 52203;
                            break;
                        case 52:
                            Test.iArrFld1[i22] = i24;
                            i3 += i22;
                            break;
                        case 53:
                            if (b1) continue;
                            break;
                        case 54:
                            Test.dFld += 63615;
                            break;
                        case 55:
                            by2 = (byte)i3;
                            break;
                        case 56:
                            Test.iArrFld1 = FuzzerUtils.int1array(N, (int)-204);
                            break;
                        case 57:
                            Test.instanceCount = 66L;
                            break;
                        default:
                            b1 = b1;
                        }
                        break;
                    case 57:
                        Test.iArrFld1[i4 - 1] = i20;
                        break;
                    case 58:
                        Test.instanceCount = i24;
                    case 59:
                        Test.instanceCount ^= i2;
                        break;
                    case 60:
                        sArr[i20 + 1] = (short)i20;
                        break;
                    case 61:
                        i24 += (-25919 + (i22 * i22));
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i20 + i21 + i22 + i23 + Float.floatToIntBits(f4) + i24 + (b1 ? 1 : 0) +
            by2 + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i1=4416;
        float f=-51.306F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1685589658L);

        for (i = 6; 232 > i; i++) {
            i1 = (int)((--f) * (-(i - Test.instanceCount)));
            Test.instanceCount += lArr[i];
            iArrFld[i] &= (--byArrFld[i - 1]);
            i1 += i;
            i1 = -166;
            vMeth(i1, i1);
        }
        i1 *= i;
        f *= i;
        i1 += (int)Test.instanceCount;
        i1 = (int)Test.instanceCount;

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("iArrFld byArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(byArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
