// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-67L;
    public static byte byFld=-23;
    public static boolean bFld=true;
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -504191269126561288L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=8279, i4=-59341, i5=86, i6=-31103, i7=34, i8=-4, iArr[][]=new int[N][N];
        double d1=0.45174;

        FuzzerUtils.init(iArr, 12);

        for (i3 = 17; i3 < 308; i3++) {
            Test.instanceCount = i3;
            i4 += -60;
            for (i5 = 1; 6 > i5; i5++) {
                for (i7 = 1; i7 < 2; i7++) {
                    iArr[i7 + 1][i7 + 1] = i3;
                    i4 += i3;
                    iArr[i3 - 1][i5] <<= i5;
                    i6 -= (int)d1;
                    Test.instanceCount += (((i7 * i5) + i6) - i5);
                }
                iArr[i5][i3 + 1] = (int)Test.instanceCount;
                Test.lArrFld[i5][i5] += i5;
                i6 = i4;
                i6 -= (int)-7L;
                Test.instanceCount += (56373 + (i5 * i5));
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i9=7, i10=28, i11=1, i12=54626, i13=0, i14=-103, i15=-2195, iArr1[]=new int[N];
        short s=4056;
        float f=106.326F;
        double d2=-80.22103;

        FuzzerUtils.init(iArr1, -79);

        vMeth1();
        for (i9 = 3; i9 < 371; ++i9) {
            for (i11 = 1; 5 > i11; i11++) {
                iArr1[i9 - 1] = i9;
                s ^= (short)Test.instanceCount;
                iArr1 = iArr1;
            }
            try {
                iArr1[i9] = (i10 % 27677);
                i10 = (i10 % i9);
                i10 = (iArr1[i9 - 1] / 226);
            } catch (ArithmeticException a_e) {}
            i12 += (((i9 * Test.instanceCount) + s) - f);
            for (d2 = 1; d2 < 5; d2++) {
                for (i14 = 1; 2 > i14; i14 += 3) {
                    i15 += (i14 | Test.instanceCount);
                    i12 += i14;
                    i15 = (int)Test.instanceCount;
                    f -= i10;
                    f += (((i14 * Test.instanceCount) + Test.instanceCount) - f);
                }
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + s + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i13 + i14 +
            i15 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, double d) {

        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, -1.150F);

        fArr[(i2 >>> 1) % N][(i2 >>> 1) % N] = iMeth();
        i2 <<= (int)Test.instanceCount;
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=45125, i1=-14, i16=-74, i17=7, i18=-12, i19=-54240, i20=101, i21=-10, i22=-183, i23=57356;
        double d3=1.3384;
        short s1=-20103;
        float f1=1.326F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 111.164F);

        for (i = 6; i < 164; i++) {
            vMeth(i, d3);
            for (i16 = 8; i16 < 159; i16++) {
                switch (((i % 8) * 5) + 22) {
                case 59:
                    for (i18 = 2; i18 > 1; i18--) {
                        i19 = i;
                        i19 += (((i18 * Test.byFld) + Test.instanceCount) - i17);
                    }
                    break;
                case 62:
                    Test.instanceCount += (i16 * i16);
                    fArr1[i16] += (float)d3;
                case 40:
                    Test.lArrFld[(32 >>> 1) % N][i] = Test.instanceCount;
                    for (i20 = i; i20 < 2; ++i20) {
                        Test.instanceCount += (i20 * Test.instanceCount);
                        Test.instanceCount *= s1;
                        i17 = i;
                    }
                    i1 += (i16 | i21);
                    if (Test.bFld) break;
                case 29:
                    Test.instanceCount = Test.instanceCount;
                    i19 = i17;
                    f1 += (((i16 * i) + i18) - i);
                    Test.lArrFld[i][i16 - 1] += 55374;
                case 60:
                    Test.instanceCount = i18;
                    Test.instanceCount *= i1;
                    i17 *= i;
                    i1 >>= i17;
                    break;
                case 45:
                    f1 += (21436 + (i16 * i16));
                    Test.byFld += (byte)d3;
                    break;
                case 41:
                case 46:
                    i21 = i16;
                    break;
                }
                for (i22 = i16; i22 < 2; ++i22) {
                    Test.instanceCount *= (long)f1;
                }
                i19 += (((i16 * i19) + i22) - i16);
            }
        }

        FuzzerUtils.out.println("i i1 d3 = " + i + "," + i1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("s1 f1 i22 = " + s1 + "," + Float.floatToIntBits(f1) + "," + i22);
        FuzzerUtils.out.println("i23 fArr1 = " + i23 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
