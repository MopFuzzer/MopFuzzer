// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10897L;
    public static double dFld=1.121955;
    public static volatile short sFld=-14878;
    public static volatile boolean bFld=true;

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1) {

        float f=0.608F;
        int i1=-47, i2=197, i3=2060, i4=23, i5=197, i6=0, i7=-55;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2L);

        f = f;
        l1 -= i1;
        for (i2 = 1; i2 < 179; i2++) {
            if (b) continue;
            if (i3 != 0) {
            }
            if (b) continue;
            for (i4 = 9; i2 < i4; i4 -= 2) {
                Test.instanceCount = 2395886317L;
                for (i6 = 1; 1 > i6; ++i6) {
                    Test.dFld -= Test.instanceCount;
                    i7 = i3;
                    l1 ^= l1;
                    l1 = i5;
                    Test.instanceCount = i3;
                    lArr[i2 + 1] >>= i6;
                }
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f) + i1 + i2 + i3 + (b ? 1 : 0) + i4 + i5 + i6 + i7 +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l) {

        int i8=33, i9=24415, i10=-240, i11=10, iArr[]=new int[N];
        double d=-84.97364;
        float f1=83.654F, f2=0.48F, fArr[]=new float[N];
        short s2=-23462;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 148);
        FuzzerUtils.init(byArr, (byte)-83);
        FuzzerUtils.init(fArr, 2.874F);

        Test.instanceCount = ((iMeth(Test.instanceCount) * i8) - 251);
        for (d = 9; d < 170; ++d) {
            short s1=-23736;
            s1 <<= (short)i8;
            iArr[(int)(d - 1)] -= i10;
            byArr[(int)(d + 1)] = (byte)i9;
            l = -13251;
        }
        for (f1 = 391; f1 > 23; --f1) {
            switch ((int)(((f1 % 8) * 5) + 8)) {
            case 43:
                i8 <<= 36164;
                break;
            case 47:
                i11 >>>= i10;
                Test.instanceCount >>= s2;
            case 10:
                Test.instanceCount = i9;
                f2 += (f1 + f2);
            case 9:
                fArr[(int)(f1)] = Test.instanceCount;
                i11 = i10;
                break;
            case 39:
                l *= -26;
            case 46:
            case 27:
                l += -164;
                break;
            case 21:
                Test.instanceCount *= (long)Test.dFld;
                break;
            }
        }
        vMeth_check_sum += l + i8 + Double.doubleToLongBits(d) + i9 + i10 + Float.floatToIntBits(f1) + i11 + s2 +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vSmallMeth(short s, int i) {


        vMeth(Test.instanceCount);
        i <<= i;
        vSmallMeth_check_sum += s + i;
    }

    public void mainTest(String[] strArr3) {

        int i12=-49798, i13=-6236, i14=-18, i15=0, i16=2, i17=-62124, i18=-143, i19=49971, i20=-176, i21=-1891,
            i22=-39838;
        float f3=-104.0F, fArr1[]=new float[N];
        byte by=-9;
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr1, 66.1011F);
        FuzzerUtils.init(lArr1, -193488328080299657L);

        for (int smallinvoc=0; smallinvoc<379; smallinvoc++) vSmallMeth(Test.sFld, i12);
        for (i13 = 4; i13 < 148; i13++) {
            i14 *= i13;
            i14 += i12;
            i12 += (i13 ^ (long)f3);
        }
        for (i15 = 1; i15 < 192; i15++) {
            i14 -= i15;
            switch ((i15 % 7) + 105) {
            case 105:
                i14 <<= i16;
                i14 = i16;
                i16 -= i13;
                break;
            case 106:
                Test.dFld -= -21296L;
                switch (((i15 >>> 1) % 1) + 92) {
                case 92:
                    fArr1[i15] -= i15;
                    i12 = (int)f3;
                    Test.dFld *= i15;
                    break;
                }
                by += (byte)(i15 | i15);
                i12 -= (int)Test.instanceCount;
                break;
            case 107:
                for (i17 = 5; i17 < 131; ++i17) {
                    if (Test.bFld) break;
                    lArr1 = lArr1;
                    i18 = i13;
                }
                break;
            case 108:
                for (i19 = 2; i19 < 131; i19++) {
                    Test.instanceCount += i19;
                    if (Test.bFld) break;
                    Test.instanceCount -= (long)f3;
                }
                for (i21 = i15; i21 < 131; i21++) {
                    Test.dFld += 63531;
                    i12 = i21;
                    i14 += (((i21 * Test.instanceCount) + i13) - i14);
                }
                break;
            case 109:
                i16 += (i15 * i15);
                break;
            case 110:
                i18 |= -92;
            case 111:
                if (Test.bFld) break;
                break;
            default:
                i16 += (i15 - i13);
            }
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("f3 i15 i16 = " + Float.floatToIntBits(f3) + "," + i15 + "," + i16);
        FuzzerUtils.out.println("by i17 i18 = " + by + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 fArr1 lArr1 = " + i22 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))
            + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.bFld = " + (Test.bFld ? 1 : 0));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
