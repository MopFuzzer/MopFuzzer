// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=153989212L;
    public static boolean bFld=false;
    public static double dFld=2.56884;
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 28767);
        FuzzerUtils.init(Test.byArrFld, (byte)-83);
    }

    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i8=13, i9=14674, i11=194, i12=-47697, i13=6, i14=32768;
        byte by=-83;
        float f=2.137F;
        boolean b=true;

        for (i8 = 3; i8 < 220; i8 += 2) {
            int i10=-9;
            i10 = by;
            i9 -= (int)Test.instanceCount;
            i9 += (i8 * i8);
            i9 += (int)(112.143F + (i8 * i8));
            Test.iArrFld[i8 + 1] = i9;
            i9 = i8;
            if (b) {
                for (i11 = 1; i11 < 14; i11++) {
                    i13 = 1;
                    do {
                        i10 >>>= i13;
                        i14 += (((i13 * i14) + i11) - i8);
                        i12 *= (int)f;
                    } while (++i13 < 2);
                    i9 += (int)Test.instanceCount;
                    i14 += i12;
                }
                vMeth_check_sum += i8 + i9 + by + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + (b ? 1 : 0);
                return;
            }
        }
        vMeth_check_sum += i8 + i9 + by + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + (b ? 1 : 0);
    }

    public static short sMeth(int i5) {

        int i6=-54167, i7=-58017, i15=-128, i16=41;
        double d=-45.63222, dArr[]=new double[N];
        boolean b1=true;

        FuzzerUtils.init(dArr, 27.123408);

        Test.iArrFld[(-37254 >>> 1) % N] = Test.byArrFld[(i5 >>> 1) % N];
        for (i6 = 1; 142 > i6; ++i6) {
            switch ((i6 % 7) + 27) {
            case 27:
                vMeth();
                i5 += (int)d;
                i5 *= i7;
                i7 += (((i6 * Test.instanceCount) + i6) - i7);
                break;
            case 28:
                Test.instanceCount -= (long)d;
                break;
            case 29:
                Test.instanceCount *= Test.instanceCount;
                i5 += (i6 ^ i7);
                Test.instanceCount *= i5;
                break;
            case 30:
                for (i15 = 1; i15 < 11; ++i15) {
                    Test.iArrFld[i15 - 1] |= i15;
                    i16 += (int)Test.instanceCount;
                    i16 *= i5;
                }
                break;
            case 31:
                if (false) continue;
                break;
            case 32:
                if (b1) continue;
                break;
            case 33:
                dArr[i6] = 0;
                break;
            }
        }
        long meth_res = i5 + i6 + i7 + Double.doubleToLongBits(d) + i15 + i16 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth(int i1, int i2, long l) {

        int i3=-9, i4=6, i17=-60883, i18=-41, i19=-59975, i20=12, i21=-20231, i22=8187;
        byte by1=-98;
        float f1=-1.194F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 630590521L);
        FuzzerUtils.init(fArr, -14.670F);

        for (i3 = 4; i3 < 365; ++i3) {
            Test.instanceCount = sMeth(i1);
            for (i17 = 1; i17 < 5; ++i17) {
                by1 <<= (byte)i1;
                i2 = i18;
                for (i19 = 1; i19 < 2; i19 += 2) {
                    lArr[i17 + 1] &= -194;
                }
            }
            i1 += (i3 * i3);
            fArr[i3] -= i2;
        }
        i18 += i17;
        f1 = i17;
        Test.bFld = Test.bFld;
        for (i21 = 10; i21 < 175; ++i21) {
            Test.dFld = f1;
            i20 += i21;
        }
        long meth_res = i1 + i2 + l + i3 + i4 + i17 + i18 + by1 + i19 + i20 + Float.floatToIntBits(f1) + i21 + i22 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-86;
        float f2=-12.529F;

        i *= (int)((-(-20.640F + iMeth(i, i, -20001L))) + f2);

        FuzzerUtils.out.println("i f2 = " + i + "," + Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iArrFld Test.byArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
