// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1L;
    public static int iFld=-4349;
    public volatile long lFld=25L;
    public volatile long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=127, i9=-5, i10=-24059, i11=-8, i12=-10701, i13=-5;
        double d=23.25460;
        short s=8724;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3139297008121639501L);

        for (i8 = 7; i8 < 176; i8 += 3) {
            i9 = i9;
            d = Test.instanceCount;
            for (i10 = 1; i10 < 27; i10++) {
                Test.instanceCount += (i10 * i8);
                i9 >>= s;
                if (i9 != 0) {
                    vMeth2_check_sum += i8 + i9 + Double.doubleToLongBits(d) + i10 + i11 + s + i12 + i13 +
                        FuzzerUtils.checkSum(lArr);
                    return;
                }
                lArr[i10] -= Test.instanceCount;
                Test.instanceCount -= 176;
                i9 %= (int)(i11 | 1);
                switch ((i8 % 2) + 48) {
                case 48:
                    for (i12 = 1; i12 < 2; ++i12) {
                        i11 += i12;
                        i11 = i11;
                        i13 = (int)Test.instanceCount;
                    }
                    break;
                case 49:
                    i11 = i11;
                    break;
                }
            }
        }
        vMeth2_check_sum += i8 + i9 + Double.doubleToLongBits(d) + i10 + i11 + s + i12 + i13 +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l, int i3) {

        int i4=-241, i5=254, i6=-9, i7=25567, iArr[]=new int[N];
        float f=-1.6F, fArr[]=new float[N];
        double d1=0.104578;

        FuzzerUtils.init(iArr, 38746);
        FuzzerUtils.init(fArr, 1.838F);

        for (i4 = 3; i4 < 129; i4 += 2) {
            for (i6 = i4; i6 < 24; i6++) {
                boolean b=false;
                l = (8L - (i7 += (int)(Test.instanceCount + 64733L)));
                if (b = b) continue;
                vMeth2();
                i3 >>= i6;
                i7 += (i6 - l);
            }
            iArr[i4] = -6;
            i5 += i4;
            f += i7;
            f -= Test.instanceCount;
            fArr[i4] %= (i7 | 1);
            d1 += i4;
            l += i4;
            f += Test.instanceCount;
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i1, int i2) {

        int i14=4, i15=-3, i16=28250, i17=111, iArr1[]=new int[N];
        float f1=0.704F;
        boolean b1=false;
        double d2=3.31451;

        FuzzerUtils.init(iArr1, -121);

        vMeth1(Test.instanceCount, i1);
        i1 += i2;
        for (i14 = 2; i14 < 133; i14++) {
            try {
                i2 = (i2 / 631626452);
                i2 = (i15 / -62032);
                i2 = (40013 / i14);
            } catch (ArithmeticException a_e) {}
            f1 += (float)-1.118913;
            iArr1[i14 - 1] |= i14;
            Test.instanceCount += (i14 | i1);
        }
        Test.instanceCount -= Test.instanceCount;
        i2 <<= (int)Test.instanceCount;
        b1 = b1;
        i15 -= i14;
        for (i16 = 208; i16 > 8; --i16) {
            iArr1[i16] = 77;
            i15 &= i17;
            d2 = -70;
        }
        vMeth_check_sum += i1 + i2 + i14 + i15 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + i16 + i17 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=1, i18=-26334, i19=51324, i20=-26357, i21=11394, i22=-213, i23=-141, iArr2[][]=new int[N][N];
        short s1=-31621, sArr[]=new short[N];
        boolean b2=false;
        double d3=-120.116563;
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr2, 1234);
        FuzzerUtils.init(sArr, (short)5220);
        FuzzerUtils.init(fArr1, -66.462F);

        i = 1;
        do {
            vMeth(26946, i);
        } while (++i < 371);
        i18 = 1;
        do {
            Test.iFld += (((i18 * i) + i) - i);
        } while (++i18 < 269);
        for (i19 = 13; i19 < 256; ++i19) {
            for (i21 = 2; i21 < 103; i21++) {
                i22 += (i21 + Test.iFld);
                s1 <<= (short)i18;
                iArr2 = iArr2;
                i22 += (int)Test.instanceCount;
                if (b2) continue;
                b2 = b2;
                sArr[i19] -= (short)Test.instanceCount;
                iArr2[i21 - 1][i19] += 30370;
                i23 = 2;
                do {
                    lArrFld[i21] = Test.instanceCount;
                    d3 *= d3;
                    i22 = i;
                    d3 -= i22;
                    i20 >>>= (int)Test.instanceCount;
                    if (b2) {
                        Test.instanceCount = Test.iFld;
                        fArr1[i19] = (float)d3;
                        fArr1[i19 + 1] = Test.instanceCount;
                    } else if (true) {
                        lFld -= lFld;
                        s1 -= (short)i20;
                        lArrFld[i19 + 1] >>= i;
                        b2 = b2;
                    }
                    d3 = i22;
                    i20 += (i23 * i23);
                } while ((i23 -= 2) > 0);
            }
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("s1 b2 i23 = " + s1 + "," + (b2 ? 1 : 0) + "," + i23);
        FuzzerUtils.out.println("d3 iArr2 sArr = " + Double.doubleToLongBits(d3) + "," + FuzzerUtils.checkSum(iArr2) +
            "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld lFld = " + Test.instanceCount + "," + Test.iFld + "," +
            lFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
