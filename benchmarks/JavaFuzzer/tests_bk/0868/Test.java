// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2003174615L;
    public static short sFld=-22902;
    public static byte byFld=-9;
    public volatile float fFld=1.661F;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 5L);
        FuzzerUtils.init(Test.iArrFld, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, int i5, int i6) {

        int i8=21311, i9=8, i10=57416, i11=-4, iArr[]=new int[N];
        byte by=-60;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -65478);
        FuzzerUtils.init(dArr, 24.62523);

        for (int i7 : iArr) {
            for (i8 = 4; i8 > 1; i8--) {
                dArr[i8] *= i9;
                iArr[i8 - 1] += i6;
                i7 = (int)Test.instanceCount;
                i7 *= (int)-123.917F;
                i4 += i8;
                Test.instanceCount *= i7;
                Test.instanceCount += (i8 * i8);
                i5 += i6;
            }
        }
        Test.instanceCount &= by;
        Test.lArrFld[(i5 >>> 1) % N] += i5;
        for (i10 = 2; 348 > i10; ++i10) {
            i5 -= i9;
            i11 += (i10 * i10);
        }
        long meth_res = i4 + i5 + i6 + i8 + i9 + by + i10 + i11 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static byte byMeth() {

        int i12=-13, i13=-8, i14=-215, i15=-37003, i16=-22094, i17=8;
        long l=-8151362416439872161L;
        float f1=92.4F;
        double d=2.42249, d1=0.75536;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)12985);

        iMeth(7780, i12, 18424);
        i12 = Test.sFld;
        sArr[(103 >>> 1) % N] *= (short)l;
        for (i13 = 7; i13 < 267; i13++) {
            f1 -= l;
        }
        d = i14;
        d += l;
        for (d1 = 7; d1 < 143; ++d1) {
            Test.byFld *= (byte)i13;
            Test.iArrFld[(int)(d1)][(int)(d1)] -= i13;
            for (i16 = 1; i16 < 12; ++i16) {
                Test.iArrFld[(int)(d1 + 1)][i16] = i16;
                Test.byFld += (byte)i16;
                f1 = i13;
                Test.sFld *= (short)Test.instanceCount;
            }
        }
        long meth_res = i12 + l + i13 + i14 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(d1) + i15 + i16 + i17 + FuzzerUtils.checkSum(sArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth() {

        int i1=99, i2=-36589, i3=-41460, i19=0, iArr1[]=new int[N];
        float f=0.553F;
        short s=2056;
        double d2=-37.126937, d3=-2.996;

        FuzzerUtils.init(iArr1, 224);

        Test.instanceCount = (((i1 + i1) >>> (Test.lArrFld[(i1 >>> 1) % N]--)) - Test.iArrFld[(i1 >>> 1) % N][(i1 >>>
            1) % N]);
        i1 += (int)f;
        i1 = (int)(i1 * (-(Test.instanceCount % (s | 1))));
        Test.instanceCount = (Test.lArrFld[(47647 >>> 1) % N]++);
        for (i2 = 8; i2 < 282; i2++) {
            f = (byMeth() + -14);
            i3 += (i2 * i1);
            Test.iArrFld[i2 - 1][(i1 >>> 1) % N] *= i1;
        }
        for (int i18 : iArr1) {
            f = i1;
            iArr1 = Test.iArrFld[(i2 >>> 1) % N];
            for (d2 = 1; d2 < 4; ++d2) {
                if (true) {
                    f -= Test.instanceCount;
                    i1 = -155;
                } else {
                    d3 = i2;
                }
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + s + i2 + i3 + Double.doubleToLongBits(d2) + i19 +
            Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=100, i20=-52, i21=2198, i22=-13, i23=11, i24=65444, i25=3;
        boolean b=false;
        short sArr1[]=new short[N];

        FuzzerUtils.init(sArr1, (short)-1604);

        i = 1;
        do {
            if (b) {
                vMeth();
            } else {
            }
            if (b) break;
            for (i20 = 6; i20 < 141; i20++) {
                for (i22 = 1; i22 < 2; i22++) {
                    Test.lArrFld[i20 + 1] <<= Test.instanceCount;
                    i23 -= (int)fFld;
                    if (b) {
                        if (false) {
                            Test.iArrFld[i + 1][i20 + 1] += i23;
                            Test.instanceCount = i;
                            i23 += (int)(-8L + (i22 * i22));
                            if (b) break;
                        }
                        i21 = i;
                    } else if (b) {
                        Test.lArrFld[i] >>= i;
                        Test.byFld = (byte)-193;
                    }
                    i23 = -123;
                    Test.instanceCount >>= 6;
                    i23 |= i;
                    sArr1[i20] += (short)fFld;
                    i23 = 3;
                    Test.iArrFld[i20][i22] = (int)fFld;
                    Test.iArrFld[i][i22 - 1] += (int)Test.instanceCount;
                }
                i21 |= i23;
                i21 = i23;
                fFld -= i;
                for (i24 = 1; i24 < 2; i24++) {
                    i23 = 13066;
                    Test.sFld += (short)fFld;
                }
            }
        } while (++i < 178);

        FuzzerUtils.out.println("i b i20 = " + i + "," + (b ? 1 : 0) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 sArr1 = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("fFld Test.lArrFld Test.iArrFld = " + Float.floatToIntBits(fFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
