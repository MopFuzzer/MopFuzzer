// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=61376L;
    public static volatile int iFld=-34553;
    public static boolean bFld=true;
    public static double dFld=0.56431;
    public static short sFld=24789;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -41831);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i7) {

        double d2=-2.55763, dArr[]=new double[N];
        int i8=-2, i9=-221, i10=143, i11=10, i12=-80, i13=-11, i14=10, i15=-3, i16=-1;
        float f1=-67.775F;
        boolean b=false;

        FuzzerUtils.init(dArr, -11.24364);

        for (d2 = 17; 282 > d2; d2++) {
            i7 += i8;
            Test.iArrFld[(int)(d2 - 1)] >>= i8;
            i7 += (int)d2;
            for (i9 = (int)(d2); i9 < 6; ++i9) {
                f1 += Test.instanceCount;
                Test.instanceCount = (long)d2;
                i7 = (int)Test.instanceCount;
                for (i11 = i9; i11 < 1; ++i11) {
                    dArr[(int)(d2)] = i8;
                }
            }
            for (i13 = 1; i13 < 6; ++i13) {
                Test.instanceCount %= (Test.instanceCount | 1);
                for (i15 = i13; i15 < 2; ++i15) {
                    i16 += (((i15 * f1) + i8) - Test.instanceCount);
                }
                if (b) break;
            }
        }
        long meth_res = i7 + Double.doubleToLongBits(d2) + i8 + i9 + i10 + Float.floatToIntBits(f1) + i11 + i12 + i13 +
            i14 + i15 + i16 + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(byte by1) {

        int i1=-1, i2=13, i3=-1, i4=13, i5=-8, i6=-2, iArr[]=new int[N], iArr1[]=new int[N];
        double d1=54.28862;
        float f=-45.741F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 72);
        FuzzerUtils.init(iArr1, -181);
        FuzzerUtils.init(lArr, 1406142821527314173L);

        for (i1 = 5; 121 > i1; i1++) {
            iArr[i1 + 1] -= (int)Test.instanceCount;
            i2 = (int)(8776046007983761254L * ((--i2) << (-25690 - Math.max(i1, 70))));
            for (i3 = 13; i3 > 1; i3 -= 3) {
                d1 *= f;
                i2 += (((i3 * Test.instanceCount) + Test.instanceCount) - i2);
                for (i5 = i1; i5 < 4; i5++) {
                    i4 = (int)(((i3 % (i6 | 1)) * (f - i4)) + iArr[i3 + 1]);
                    i2 = (i4 = (iArr1[i5] - (-Math.min(i2, i2))));
                    i4 += (i5 | i5);
                    by1 *= (byte)(((i4 - 723296544137542749L) / ((++lArr[i5 + 1]) | 1)) << (lMeth(i6) % (i3 | 1)));
                    i4 = 1;
                    Test.instanceCount = i5;
                    i4 = (int)f;
                    i6 >>>= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += by1 + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i5 + i6 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public int iMeth(long l, long l1) {

        double d=0.94459;
        int i=251, i17=-176, i18=-64150, i19=-167, i20=17933, i21=3, i22=21654, i23=-57147;
        byte by2=44;

        d = (--i);
        i -= i;
        Test.instanceCount += (Test.instanceCount + (i++));
        vMeth(by2);
        for (i17 = 6; i17 < 388; ++i17) {
            for (i19 = 4; i19 > 1; i19--) {
                i18 += i21;
                i += i19;
                d = i18;
                i18 -= (int)l1;
                for (i22 = 1; 2 > i22; ++i22) {
                    i += i22;
                }
                l -= by2;
                i20 *= Test.iFld;
                d += l1;
            }
        }
        long meth_res = l + l1 + Double.doubleToLongBits(d) + i + by2 + i17 + i18 + i19 + i20 + i21 + i22 + i23;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=-98;
        int i24=43, i25=-22625, i26=41, i27=-32958, i28=37, i29=20074, i30=4, i31=-133, i32=-6, i33=-188, i34=40413;
        float f2=0.829F, f3=1.106F;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, -15.100563);

        Test.instanceCount = (((by + 5637) - iMeth(Test.instanceCount, -7451692960616946935L)) - Test.iFld);
        if (Test.bFld) {
            for (i24 = 14; i24 < 239; i24++) {
                for (i26 = 3; i26 < 112; ++i26) {
                    Test.iFld = 35125;
                    Test.iFld ^= -107;
                    for (i28 = 2; i28 > 1; i28 -= 2) {
                        i27 = i26;
                        i25 *= by;
                        Test.iArrFld[(i26 >>> 1) % N] -= i24;
                    }
                    if (Test.bFld) {
                        i25 = (int)-30.874F;
                    }
                }
                dArr1[i24 + 1] = -19.986F;
                Test.iFld += i25;
                Test.instanceCount = i29;
                i25 |= (int)Test.instanceCount;
                for (i30 = i24; i30 < 112; ++i30) {
                    if (Test.bFld) {
                        for (f2 = i24; f2 < 1; ++f2) {
                            i29 += i29;
                            i29 += (int)Test.dFld;
                            i25 += (int)(f2 * f2);
                            i32 *= i25;
                            i31 -= i28;
                            Test.iArrFld[i24] = i25;
                            i32 += (int)(((f2 * Test.instanceCount) + i30) - f2);
                            i31 |= Test.sFld;
                        }
                        for (i33 = 1; i33 < 1; i33++) {
                            i32 = 0;
                            f3 = (float)Test.dFld;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("by i24 i25 = " + by + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("f2 i32 i33 = " + Float.floatToIntBits(f2) + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 f3 dArr1 = " + i34 + "," + Float.floatToIntBits(f3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.sFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.sFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
