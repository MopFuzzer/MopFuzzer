// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=123L;
    public static float fFld=38.172F;
    public static int iFld=-28515;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -49207);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s, long l1) {

        int i6=58812, i7=6, i8=69, i9=170, iArr1[]=new int[N];
        byte by1=-14, byArr[]=new byte[N];
        float f2=-1.593F;

        FuzzerUtils.init(iArr1, -117);
        FuzzerUtils.init(byArr, (byte)-15);

        for (i6 = 9; 389 > i6; i6++) {
            Test.instanceCount *= by1;
            s += (short)(((i6 * i7) + i7) - f2);
            for (i8 = 1; i8 < 4; ++i8) {
                i7 += i8;
                Test.instanceCount -= i9;
                i9 += (int)Test.instanceCount;
                i9 = (int)l1;
                i9 -= i9;
                iArr1[i6 + 1] += by1;
                switch ((i6 % 2) + 67) {
                case 67:
                    f2 += i6;
                    i9 = i8;
                    break;
                case 68:
                    byArr[i6] += by1;
                    i7 -= i8;
                }
            }
        }
        vMeth2_check_sum += s + l1 + i6 + i7 + by1 + Float.floatToIntBits(f2) + i8 + i9 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(int i2, int i3, long l) {

        float f=0.993F, f1=-102.536F;
        byte by=-10;
        int i4=-20179, i5=17543, iArr[]=new int[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 25737);
        FuzzerUtils.init(sArr, (short)19893);

        switch ((((iArr[(i3 >>> 1) % N]--) >>> 1) % 9) + 99) {
        case 99:
        case 100:
            i2 *= (i2 % (i2 | 1));
            sArr = (sArr = sArr);
            i3 *= i3;
            f -= sArr[(53217 >>> 1) % N];
        case 101:
            f1 = 1;
            do {
                i3 += (int)(((f1 * by) + i2) - i2);
                for (i4 = 1; i4 < 8; i4++) {
                    short s1=14407;
                    vMeth2(s1, Test.instanceCount);
                    i3 = (int)Test.instanceCount;
                    iArr[(int)(f1)] = (int)Test.instanceCount;
                    iArr[i4] = (int)l;
                }
                i2 -= i4;
                i5 += (int)(f1 - l);
                Test.instanceCount += (long)(1.686F + (f1 * f1));
            } while (++f1 < 207);
        case 102:
            iArr[(i3 >>> 1) % N] -= 104;
            break;
        case 103:
            f *= f1;
        case 104:
            i5 = i4;
            break;
        case 105:
            by -= (byte)i2;
            break;
        case 106:
            iArr[(i2 >>> 1) % N] &= i2;
            break;
        case 107:
            f -= i3;
            break;
        }
        vMeth1_check_sum += i2 + i3 + l + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + by + i4 + i5 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i1) {

        double d1=-123.122973;

        vMeth1(i1, i1, Test.instanceCount);
        Test.fFld -= 243;
        i1 -= (int)d1;
        vMeth_check_sum += i1 + Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i=-52845, i10=61947, i11=-39368, i12=19744, i13=-203, i15=49247, i16=-13633, i17=-7, i18=92, i19=-11963,
            iArr2[]=new int[N];
        double d=0.126912;
        short s2=10094;
        long l2=-3455046914L, lArr[][]=new long[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, 10L);
        FuzzerUtils.init(iArr2, -32212);
        FuzzerUtils.init(fArr, -109.122F);

        i = (int)(--d);
        vMeth(i);
        i <<= (int)Test.instanceCount;
        Test.instanceCount /= (Test.iFld | 1);
        lArr = lArr;
        for (i10 = 11; i10 < 375; ++i10) {
            for (i12 = 1; i12 < 69; ++i12) {
                Test.fFld = i11;
                i11 = i11;
                Test.fFld = (float)0.108011;
                Test.iFld = i13;
            }
            Test.instanceCount = Test.instanceCount;
            i += (((i10 * i10) + s2) - i13);
            Test.instanceCount = Test.instanceCount;
            Test.instanceCount *= i10;
            Test.instanceCount *= (long)Test.fFld;
            Test.iFld >>= i;
            for (i15 = 1; i15 < 69; ++i15) {
                fArr[i15 - 1] *= Test.fFld;
            }
            iArr2[i10 - 1] = i10;
        }
        for (i17 = 258; i17 > 8; i17--) {
            Test.instanceCount >>= i15;
        }
        try {
            for (l2 = 383 + 400; l2 > 2; l2--) {
                Test.instanceCount += (-43693L + (l2 * l2));
                Test.instanceCount += l2;
                Test.instanceCount += i18;
                Test.iFld += (int)(((l2 * i) + i13) - i13);
                if (Test.bFld) break;
                iArr2[(int)(l2 + 1)] *= i17;
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            Test.iArrFld[(i16 >>> 1) % N] &= (int)l2;
        }

        FuzzerUtils.out.println("i d i10 = " + i + "," + Double.doubleToLongBits(d) + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("s2 i15 i16 = " + s2 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 l2 = " + i17 + "," + i18 + "," + l2);
        FuzzerUtils.out.println("i19 lArr iArr2 = " + i19 + "," + FuzzerUtils.checkSum(lArr) + "," +
            FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.bFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
