// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=10L;
    public int iFld=-10;
    public static long lFld=14L;
    public static double dFld=-1.84889;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s1, int i5) {

        int i6=3407, i7=134, i8=-56134, i9=-13201, i10=-55, i11=-62658, i12=163;
        double d2=-121.90726;
        float f1=94.72F;

        for (i6 = 392; 11 < i6; i6--) {
            i7 = i5;
            Test.instanceCount += (i6 * i6);
            Test.iArrFld[i6 + 1] = (int)Test.instanceCount;
        }
        i8 = 1;
        do {
            i7 = i8;
            if (i5 != 0) {
                vMeth1_check_sum += s1 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d2) +
                    Float.floatToIntBits(f1);
                return;
            }
        } while (++i8 < 186);
        i7 = (int)Test.instanceCount;
        Test.iArrFld = FuzzerUtils.int1array(N, (int)252);
        for (i9 = 14; 345 > i9; ++i9) {
            for (i11 = i9; i11 < 5; ++i11) {
                d2 = 5947;
                f1 = 12816L;
                i7 = (int)Test.instanceCount;
                d2 *= d2;
            }
        }
        vMeth1_check_sum += s1 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d2) +
            Float.floatToIntBits(f1);
    }

    public static void vMeth() {

        int i1=-65533, i2=-44858, i3=10, i4=14;
        short s=31606;
        float f=-77.226F;
        double d1=-2.11064;
        boolean b=false;
        byte by=51;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 798715664400974572L);

        for (i1 = 11; i1 < 240; i1++) {
            for (i3 = 1; 7 > i3; i3++) {
                s += (short)(126 + (i3 * i3));
                f -= Test.instanceCount;
                i4 ^= i1;
                switch (((i3 % 5) * 5) + 105) {
                case 114:
                case 125:
                    i4 /= (int)(((long)((Math.abs(0.28130) % (((long)(Test.instanceCount - d1)) | 1)) + lArr[i1])) | 1);
                    b = (b = b);
                    i4 += (int)(((f * i4) + (by * Test.instanceCount)) + (i1 - (i3 - 7448)));
                    break;
                case 110:
                    vMeth1(s, i2);
                    Test.iArrFld[i3 + 1] = (int)Test.instanceCount;
                    Test.lFld |= Test.instanceCount;
                    i4 += (i3 * i2);
                    break;
                case 119:
                    i4 = -4;
                    i2 -= (int)4038107593L;
                case 123:
                    Test.iArrFld[i3] >>>= i3;
                    break;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + s + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + (b ? 1 : 0)
            + by + FuzzerUtils.checkSum(lArr);
    }

    public static void vSmallMeth(int i, double d) {


        vMeth();
        i *= (int)Test.instanceCount;
        vSmallMeth_check_sum += i + Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        short s2=-12846;

        iFld = 6;
        for (int smallinvoc=0; smallinvoc<574; smallinvoc++) vSmallMeth(iFld, Test.dFld);
        iFld = s2;

        FuzzerUtils.out.println("s2 = " + s2);

        FuzzerUtils.out.println("Test.instanceCount iFld Test.lFld = " + Test.instanceCount + "," + iFld + "," +
            Test.lFld);
        FuzzerUtils.out.println("Test.dFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
