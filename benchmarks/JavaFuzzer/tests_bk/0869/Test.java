// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=212L;
    public static volatile double dFld=-20.125615;
    public static int iFld=-37156;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d) {

        short s1=-3774;
        int i8=56605, i9=9129, i10=13, i11=-62183, i12=13605;
        float f1=-1.818F;
        boolean b1=true, bArr1[]=new boolean[N];
        double dArr[]=new double[N];
        long lArr[]=new long[N], lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 0.23873);
        FuzzerUtils.init(lArr, 1792L);
        FuzzerUtils.init(lArr1, 2L);
        FuzzerUtils.init(bArr1, false);

        s1 -= (short)i8;
        for (double d1 : dArr) {
            for (i9 = 1; 4 > i9; i9++) {
                f1 -= (float)-104.60354;
                f1 *= i10;
                for (i11 = 1; i11 < 2; ++i11) {
                    Test.instanceCount = -7129;
                    d1 -= i11;
                    i10 -= i11;
                    s1 -= (short)i11;
                    lArr[i9 - 1] += i9;
                    i10 = i12;
                }
                lArr1[i9 + 1] = i12;
                bArr1[i9] = b1;
                i8 += (int)Test.instanceCount;
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + s1 + i8 + i9 + i10 + Float.floatToIntBits(f1) + i11 + i12 +
            (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr1);
    }

    public static void vMeth1(int i5, byte by1, short s) {

        int i6=84, i7=205, i13=44687, i14=-37451, i15=44, i16=-15500, i17=-25859, i18=-28854;
        boolean b2=false;

        Test.iArrFld[(i5 >>> 1) % N] -= ((-Math.max(247, i5)) + (by1 + (i5--)));
        for (i6 = 2; i6 < 142; ++i6) {
            vMeth2(Test.dFld);
            for (i13 = 1; 11 > i13; i13++) {
                i5 = i5;
                i5 = i5;
                Test.iArrFld[i6 - 1] |= i13;
                i5 *= by1;
                i5 += i13;
                Test.instanceCount *= i7;
                if (b2) continue;
                switch (((i15 >>> 1) % 1) + 23) {
                case 23:
                    for (i16 = 2; 1 < i16; --i16) {
                        Test.iArrFld[i6 - 1] = -12;
                        i18 += (-12383 + (i16 * i16));
                    }
                    break;
                }
            }
        }
        vMeth1_check_sum += i5 + by1 + s + i6 + i7 + i13 + i14 + (b2 ? 1 : 0) + i15 + i16 + i17 + i18;
    }

    public static void vMeth(int i, float f) {

        boolean b=false, bArr[]=new boolean[N];
        byte by=110;
        int i1=44729, i2=624, i3=7559, i4=-5, i19=13, i20=4;
        short s2=6320;

        FuzzerUtils.init(bArr, true);

        b = (((i != 61) || bArr[(i >>> 1) % N]) || ((Test.instanceCount + i) != (i - Test.instanceCount)));
        Test.iArrFld[(i >>> 1) % N] = by;
        for (i1 = 10; i1 < 291; i1++) {
            Test.instanceCount += (i1 | i2);
            f -= (float)((Integer.reverseBytes(i) + (++Test.iArrFld[i1 - 1])) - (-(Test.iArrFld[i1 - 1] -=
                (int)Test.dFld)));
            for (i3 = 6; i3 > i1; --i3) {
                vMeth1(i3, by, s2);
                for (i19 = 1; 1 > i19; ++i19) {
                    i20 = i19;
                    i4 = i3;
                    try {
                        i20 = (i % -2072609723);
                        i2 = (i3 / i3);
                        i2 = (Test.iArrFld[i3 - 1] / 95);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount = i4;
                    i4 += 50;
                }
                by *= (byte)13;
                i20 = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + (b ? 1 : 0) + by + i1 + i2 + i3 + i4 + s2 + i19 + i20 +
            FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=81, i22=-97, i23=-166, i24=-91, i25=-32343, i26=-13, i27=9, i28=-114, i29=1, i30=-24955, i31=11;
        float f2=-109.394F;
        short s3=-2403;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-83);

        vMeth(i21, -125.26F);
        Test.iArrFld[(i21 >>> 1) % N] ^= i21;
        i22 = 1;
        do {
            Test.iArrFld[i22 - 1] += i22;
            if (false) continue;
            for (i23 = i22; i23 < 101; ++i23) {
                long l=3886520795L;
                i21 += (((i23 * i22) + Test.instanceCount) - Test.instanceCount);
                i24 += (int)(-50646L + (i23 * i23));
                i21 += (i23 * Test.instanceCount);
                i21 >>= i22;
                l = i22;
            }
            Test.instanceCount -= (long)Test.dFld;
            i24 -= (int)Test.dFld;
            for (i25 = 5; i25 < 101; i25++) {
                i21 += i25;
                byArr[i25] = (byte)i25;
                i27 *= (int)f2;
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-124);
                Test.dFld *= f2;
                for (i28 = 1; i28 < 2; i28++) {
                    i29 |= Test.iFld;
                    i27 = 160;
                    i24 += (((i28 * i23) + i27) - i26);
                }
                Test.iFld += i29;
                for (i30 = 1; i30 < 2; ++i30) {
                    s3 = (short)Test.instanceCount;
                    s3 -= (short)Test.iFld;
                    Test.iArrFld[i22 + 1] -= i29;
                    i27 += (i30 | i28);
                    f2 = i23;
                }
            }
        } while (++i22 < 249);

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 f2 i28 = " + i27 + "," + Float.floatToIntBits(f2) + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("s3 byArr = " + s3 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
