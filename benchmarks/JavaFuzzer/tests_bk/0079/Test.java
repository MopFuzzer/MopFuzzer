// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=750703355L;
    public static boolean bFld=false;
    public static float fFld=-119.818F;
    public byte byFld=44;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 0);
        FuzzerUtils.init(Test.sArrFld, (short)-29052);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i5, int i6) {

        int i7=-57910, i8=-202, i9=13, i10=-47, i11=8164, iArr[]=new int[N];
        float f1=-122.609F;
        double d=-33.58914;
        short s=20202;

        FuzzerUtils.init(iArr, 14);

        for (i7 = 10; i7 < 382; i7++) {
            i8 += i5;
            switch ((i7 % 10) + 71) {
            case 71:
                f1 = 1;
                do {
                    Test.instanceCount >>>= i6;
                    i6 += (int)(f1 * f1);
                    Test.instanceCount = i5;
                    i8 = (int)f;
                    f = 3L;
                    f *= f1;
                    i8 = (int)Test.instanceCount;
                } while (++f1 < 5);
                d = i8;
                for (i9 = 5; i9 > 1; i9--) {
                    i8 = i10;
                    s = (short)i6;
                }
                break;
            case 72:
                s += (short)(((i7 * Test.instanceCount) + s) - Test.instanceCount);
                break;
            case 73:
                Test.instanceCount += -124L;
            case 74:
                iArr[i7] <<= (int)Test.instanceCount;
                break;
            case 75:
                if (false) continue;
                break;
            case 76:
                Test.instanceCount = i6;
            case 77:
                Test.instanceCount = (long)f;
                break;
            case 78:
                i10 -= (int)f1;
                break;
            case 79:
                i11 = (int)32531L;
                break;
            case 80:
                i10 += i7;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d) + i9 + i10 + s + i11 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i1, int i2) {

        int i3=0, i4=58033, i12=61716, i13=187, i14=50971;
        float f2=0.967F;
        long l1=-5595757667536446967L;
        boolean b=false;

        for (i3 = 8; i3 < 203; ++i3) {
            vMeth1(f2, -185, i3);
            for (l1 = 1; l1 < 8; ++l1) {
                i1 = (int)l1;
                Test.iArrFld[(int)(l1 + 1)] |= i12;
            }
            Test.instanceCount += i4;
            for (i13 = i3; i13 < 8; ++i13) {
                i1 *= -11;
                Test.iArrFld = Test.iArrFld;
                i2 -= i3;
                i12 = i1;
                i14 = (int)Test.instanceCount;
            }
            i14 += (i3 * i3);
            Test.instanceCount = i2;
            b = b;
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + Float.floatToIntBits(f2) + l1 + i12 + i13 + i14 + (b ? 1 : 0);
    }

    public static float fMeth(long l, int i) {

        float f3=100.501F, fArr[]=new float[N];
        byte by=18;
        double d1=1.68479;
        int i15=-11, i16=9, i17=-13, i18=-215;

        FuzzerUtils.init(fArr, -1.563F);

        vMeth(-46341, i);
        f3 *= by;
        Test.iArrFld[(i >>> 1) % N] = (int)d1;
        i >>= (int)Test.instanceCount;
        i = i;
        for (i15 = 14; i15 < 288; i15 += 3) {
            f3 += i15;
            for (i17 = 1; i17 < 17; i17++) {
                i = (int)d1;
            }
        }
        switch ((((i >>> 1) % 1) * 5) + 119) {
        case 123:
            d1 = i;
            switch ((((i >>> 1) % 2) * 5) + 26) {
            case 32:
                i16 += i16;
                fArr[(51130 >>> 1) % N] -= (float)d1;
            case 36:
                i >>= i16;
                break;
            }
            break;
        default:
            i16 -= i;
        }
        long meth_res = l + i + Float.floatToIntBits(f3) + by + Double.doubleToLongBits(d1) + i15 + i16 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i19=22157, i20=38113, i21=163, i22=40, i23=35438, i25=-8, i26=13, i27=-12, i28=-46133, i29=6, i30=2568;
        long l2=-46134L, l3=4065828477L, l4=-183L, lArr[]=new long[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 1.93F);
        FuzzerUtils.init(lArr, 49960L);

        fMeth(Test.instanceCount, i19);
        for (i20 = 322; i20 > 14; i20--) {
            double d2=2.104827;
            i19 %= (int)((long)(d2) | 1);
            Test.bFld = Test.bFld;
            for (i22 = 2; i22 < 82; ++i22) {
                Test.instanceCount -= i19;
                Test.iArrFld[i22] += (int)Test.fFld;
                Test.bFld = Test.bFld;
                Test.instanceCount >>= i19;
                if (Test.bFld) continue;
                i19 = -31168;
                fArr1[i22 + 1] += Test.fFld;
            }
            if (Test.bFld) continue;
            for (l2 = i20; l2 < 82; ++l2) {
                l3 >>>= 42546;
                i23 = (int)Test.fFld;
                d2 = i20;
                i23 -= i19;
                for (i26 = 1; i26 < 1; i26++) {
                    i23 = i20;
                }
                i25 -= i22;
            }
        }
        for (i28 = 21; i28 < 368; ++i28) {
            Test.sArrFld[i28] = (short)l3;
            try {
                i25 = (i19 % i28);
                i29 = (i26 / i28);
                i21 = (Test.iArrFld[i28 + 1] % 1832013139);
            } catch (ArithmeticException a_e) {}
            i19 += (((i28 * i25) + Test.fFld) - byFld);
            i29 -= (int)2.59F;
            i19 = i28;
            for (l4 = 1; l4 < 73; ++l4) {
                i23 = i26;
                lArr = lArr;
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 l2 = " + i22 + "," + i23 + "," + l2);
        FuzzerUtils.out.println("i25 l3 i26 = " + i25 + "," + l3 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("l4 i30 fArr1 = " + l4 + "," + i30 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("byFld Test.iArrFld Test.sArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test.iArrFld)
            + "," + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
