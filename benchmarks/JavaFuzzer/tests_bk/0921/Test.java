// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1435218779L;
    public static boolean bFld=false;
    public static short sFld=29;
    public static int iFld=220;
    public static byte byFld=104;
    public static float fArrFld[]=new float[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 81.164F);
        FuzzerUtils.init(Test.dArrFld, 1.39843);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        int i6=-112, i7=47, i8=-11, i9=-126, i10=-9, i11=-147, iArr[][]=new int[N][N];
        double d=2.99357;
        short s=-27729;

        FuzzerUtils.init(iArr, 7);

        iArr[(21260 >>> 1) % N][(i5 >>> 1) % N] <<= i5;
        i5 -= 43365;
        Test.bFld = true;
        i5 = (int)-29170L;
        for (i6 = 136; i6 > 5; i6--) {
            switch (((i6 % 2) * 5) + 92) {
            case 94:
                for (i8 = i6; i8 < 12; i8++) {
                    for (i10 = 1; 1 < i10; i10--) {
                        byte by=-87;
                        i7 = i9;
                        i7 += (((i10 * i7) + i8) - by);
                        Test.instanceCount <<= -43846L;
                        Test.instanceCount = -4150L;
                        if (Test.bFld) {
                            Test.instanceCount += (22408 + (i10 * i10));
                            vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + s +
                                FuzzerUtils.checkSum(iArr);
                            return;
                        } else {
                            d *= Test.instanceCount;
                        }
                    }
                }
                break;
            case 97:
                Test.bFld = Test.bFld;
                break;
            default:
                s = (short)i5;
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + s +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i12=36497, i13=-5, i14=-182, i15=-44, i16=-215, i17=-52;
        double d1=-2.3846, d2=-21.114496;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -40L);

        vMeth2(i12);
        for (float f : Test.fArrFld) {
            for (i13 = 1; i13 < 4; i13++) {
                lArr[i13] += i14;
                for (i15 = 1; i15 < 2; ++i15) {
                    Test.instanceCount *= Test.instanceCount;
                    i16 += (i15 - i15);
                    Test.dArrFld[i13 + 1] -= i12;
                }
                i12 >>>= i14;
                for (d1 = 1; d1 < 2; ++d1) {
                    d2 -= i15;
                    lArr[(int)(d1 + 1)] <<= i12;
                }
                d2 = i13;
                i16 += (((i13 * Test.sFld) + Test.instanceCount) - f);
                i17 = (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i12 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + i17 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i18=13, i19=-6, i20=58531, i21=3, i22=58986, iArr1[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, -126);

        vMeth1();
        i18 = 322;
        do {
            float f1=2.101F;
            Test.iFld *= 6;
            Test.iFld = 35583;
            Test.instanceCount += (i18 * i18);
            Test.instanceCount |= Test.iFld;
            Test.iFld += (int)f1;
            iArr1[i18 - 1] *= (int)Test.instanceCount;
        } while ((i18 -= 2) > 0);
        Test.iFld &= Test.iFld;
        for (i19 = 6; i19 < 134; ++i19) {
            for (i21 = 1; i21 < 12; ++i21) {
                i20 = i21;
                i20 += i21;
                b1 = Test.bFld;
                if (i19 != 0) {
                    vMeth_check_sum += i18 + i19 + i20 + i21 + i22 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
        }
        vMeth_check_sum += i18 + i19 + i20 + i21 + i22 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-31, i1=13, i2=2, i3=14078, i4=57767, iArr2[]=new int[N];
        boolean b=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr2, 39046);

        for (i = 341; i > 17; i -= 2) {
            bArr[i - 1] = b;
            i2 = 1;
            do {
                for (i3 = 1; i3 < 1; i3++) {
                    vMeth();
                    i1 = i2;
                    switch (((i % 2) * 5) + 66) {
                    case 76:
                        i1 += i3;
                        Test.instanceCount = 11;
                        i4 -= (int)Test.instanceCount;
                        Test.sFld += (short)113.67198;
                        break;
                    case 70:
                        switch ((i2 % 5) + 64) {
                        case 64:
                            i4 = -78;
                            Test.instanceCount = Test.byFld;
                            break;
                        case 65:
                            i1 += i3;
                            break;
                        case 66:
                            Test.iFld = (int)Test.instanceCount;
                        case 67:
                            Test.iFld = i3;
                            Test.instanceCount &= 18;
                            break;
                        case 68:
                            i4 += (((i3 * i4) + i2) - i3);
                            Test.instanceCount = Test.instanceCount;
                            break;
                        default:
                            bArr[i] = false;
                        }
                        i4 += i3;
                        if (false) {
                            Test.iFld <<= i4;
                            Test.byFld -= (byte)Test.instanceCount;
                            Test.iFld -= (int)3L;
                            i1 = i4;
                        } else {
                            i1 += (int)2.123788;
                        }
                        iArr2[i3] *= -10;
                    default:
                        Test.instanceCount += (long)(0.209F + (i3 * i3));
                    }
                }
            } while (++i2 < 155);
        }

        FuzzerUtils.out.println("i i1 b = " + i + "," + i1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("bArr iArr2 = " + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.sFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld Test.byFld Test.fArrFld = " + Test.iFld + "," + Test.byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
