// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2217031942L;
    public static volatile float fFld=-22.135F;
    public static short sFld=-27006;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
        FuzzerUtils.init(Test.lArrFld, -13L);
        FuzzerUtils.init(Test.dArrFld, -1.102687);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1) {

        int i5=14, i6=-147, i8=-33169, i9=-2, i10=161, i11=3, i12=204;
        float f3=2.384F;

        l1 = i5;
        i5 *= (int)Test.instanceCount;
        for (f3 = 7; 355 > f3; ++f3) {
            Test.fFld *= i5;
            l1 = i5;
            for (i8 = (int)(f3); 5 > i8; ++i8) {
                i5 = i8;
            }
            Test.instanceCount = Test.instanceCount;
            l1 += (long)f3;
            for (i10 = 1; i10 < 5; ++i10) {
                i9 += i10;
                Test.instanceCount = i12;
                i11 += (((i10 * i12) + i6) - l1);
                i12 = i9;
                i11 += (((i10 * i6) + i10) - i12);
            }
        }
        long meth_res = l1 + i5 + Float.floatToIntBits(f3) + i6 + i8 + i9 + i10 + i11 + i12;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4, float f2, long l) {

        double d1=18.48657, d2=62.8653;
        byte by=81;
        int i13=-15604, i14=-167, i15=64279, i16=137, i17=-3;

        d1 *= (Math.max(i4 = i4, iMeth1(-8120L)) + by);
        Test.iArrFld[(i4 >>> 1) % N] += (int)l;
        i13 = 214;
        while ((i13 -= 2) > 0) {
            i4 = 8;
            i4 += i13;
            Test.instanceCount = Test.instanceCount;
            i4 += i13;
        }
        for (i14 = 12; i14 < 264; ++i14) {
            Test.instanceCount += l;
        }
        for (i16 = 2; i16 < 181; ++i16) {
            i17 -= i13;
            d2 = 1;
            do {
                i4 += (int)d2;
                i17 >>>= i15;
                i15 <<= i17;
            } while (++d2 < 9);
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f2) + l + Double.doubleToLongBits(d1) + by + i13 + i14 + i15 + i16
            + i17 + Double.doubleToLongBits(d2);
    }

    public int iMeth() {

        int i3=154, i18=-55816, i19=-123, i20=-187, i21=10604, i22=-1;
        float f1=2.135F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 41.116976);

        Test.lArrFld[(i3 >>> 1) % N] = (long)((dArr[(i3 >>> 1) % N] * Test.lArrFld[(i3 >>> 1) % N]) - f1);
        vMeth(-79, 1.107F, Test.instanceCount);
        i18 = 1;
        do {
            switch (((-2 >>> 1) % 2) + 65) {
            case 65:
                i3 += (i18 * i18);
            case 66:
                i3 += (194 + (i18 * i18));
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-44008);
                for (i19 = 1; i19 < 9; ++i19) {
                    for (i21 = 1; i21 < 2; ++i21) {
                        Test.sFld = (short)i18;
                        i22 += i3;
                        i20 = i22;
                        Test.iArrFld[i18 - 1] ^= i21;
                        i3 += i21;
                    }
                    i22 = 113;
                }
                break;
            }
        } while (++i18 < 174);
        long meth_res = i3 + Float.floatToIntBits(f1) + i18 + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=4, i1=-2, i2=11, i23=48221, i24=-6, i25=-5, i26=-20060, i28=-90, i29=-58230;
        double d=-105.105780;
        float f=0.824F, f4=0.805F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)10751);

        for (i = 20; 339 > i; ++i) {
            for (d = i; d < 79; ++d) {
                i2 |= (int)(-f);
                i2 -= Test.iArrFld[i + 1];
                f -= (i2--);
                Test.instanceCount += (-9 + (d * d));
                i1 += (--i2);
            }
            i2 = i;
            i2 += iMeth();
            Test.iArrFld[i - 1] += i1;
            for (i23 = 79; i23 > 1; --i23) {
                int i27=2081;
                Test.sFld |= (short)Test.instanceCount;
                i24 -= (int)Test.instanceCount;
                f4 = 1;
                do {
                    i24 -= 42469;
                } while (++f4 < 2);
                for (i25 = 2; i25 > 1; --i25) {
                    i26 <<= i2;
                    Test.dArrFld[i23] -= f4;
                    i24 = i25;
                    Test.iArrFld = Test.iArrFld;
                    i26 -= i25;
                    i24 += (i25 | Test.instanceCount);
                    Test.iArrFld[i25 - 1] = i24;
                    sArr[i + 1] = (short)d;
                }
                i1 -= i27;
                Test.instanceCount = i25;
                for (i28 = 1; i28 < 2; i28++) {
                    f = i2;
                    i1 *= (int)3925596989L;
                    i26 += i28;
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 f i23 = " + i2 + "," + Float.floatToIntBits(f) + "," + i23);
        FuzzerUtils.out.println("i24 f4 i25 = " + i24 + "," + Float.floatToIntBits(f4) + "," + i25);
        FuzzerUtils.out.println("i26 i28 i29 = " + i26 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
