// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1728707378L;
    public static int iFld=145;
    public static int iFld1=-37186;
    public static float fFld=-1.783F;
    public double dFld=-1.26131;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 159L);
        FuzzerUtils.init(Test.iArrFld, 152);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        byte by=-73;
        float f1=-2.170F;
        int i1=-51814, i2=22, i3=-48719;
        boolean b=true;
        double d1=94.36769, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -109.30640);

        by &= (byte)Test.instanceCount;
        for (long l : Test.lArrFld) {
            l = (long)f1;
            l = Test.iFld;
            for (i1 = 1; i1 < 4; ++i1) {
                if (b) break;
                if (b) continue;
                for (d1 = 1; d1 < 2; d1++) {
                    Test.iFld1 = by;
                    Test.iFld -= (int)l;
                    Test.iArrFld[i1] = (int)l;
                    Test.iFld1 = Test.iFld;
                    Test.bArrFld[i1] = b;
                    f1 = -2852470728L;
                    i3 *= 8;
                }
            }
        }
        vMeth1_check_sum += by + Float.floatToIntBits(f1) + i1 + i2 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i3 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(float f, int i) {

        int i4=-2842;
        byte by1=6;
        double d2=0.129801;
        boolean b1=true;

        switch ((((i >>> 1) % 10) * 5) + 31) {
        case 76:
            Test.instanceCount = (long)(f + Math.max(i, i - i));
            vMeth1();
            break;
        case 43:
            i4 = 1;
            do {
                Test.iFld |= by1;
                if (b1) {
                    Test.iFld1 *= Test.iFld1;
                    Test.iFld *= Test.iFld;
                    d2 = 1;
                    do {
                        f -= Test.instanceCount;
                        f += Test.iFld;
                        Test.instanceCount = Test.iFld1;
                    } while (++d2 < 8);
                } else {
                    i += (int)Test.instanceCount;
                }
                Test.iFld1 += (((i4 * f) + i4) - f);
                i += i4;
            } while (++i4 < 193);
            break;
        case 33:
            i >>= -83;
        case 57:
            i *= (int)Test.instanceCount;
            break;
        case 55:
            Test.iArrFld[(Test.iFld >>> 1) % N] -= Test.iFld1;
            break;
        case 51:
            Test.instanceCount -= i4;
            break;
        case 80:
        case 40:
            Test.instanceCount = Test.instanceCount;
            break;
        case 67:
            i = (int)Test.instanceCount;
            break;
        case 81:
            Test.instanceCount -= Test.instanceCount;
            break;
        default:
            Test.instanceCount = 93;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i4 + by1 + Double.doubleToLongBits(d2) + (b1 ? 1 : 0);
    }

    public static void vSmallMeth() {


        vMeth(Test.fFld, Test.iFld);
        vSmallMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i6=13, i7=-247, i8=181, i9=43682, i10=48770, i11=-44, i12=-24673, i13=16878;
        boolean b2=true;
        short s=-1151;
        byte by2=-86;
        float f2=0.568F;

        for (int smallinvoc=0; smallinvoc<395; smallinvoc++) vSmallMeth();
        i6 = 1;
        do {
            for (i7 = 6; i7 < 114; ++i7) {
                if (false) {
                    b2 = b2;
                } else {
                    Test.iArrFld[i6] = s;
                    for (i9 = i6; i9 < 2; i9++) {
                        Test.iFld = (int)Test.instanceCount;
                        Test.instanceCount += Test.iFld1;
                        i8 = Test.iFld1;
                        Test.iArrFld[i6 - 1] = by2;
                        s += (short)(i9 ^ Test.instanceCount);
                        Test.fFld += (((i9 * i9) + i8) - Test.fFld);
                    }
                }
            }
            for (i11 = i6; i11 < 114; i11++) {
                Test.fFld -= Test.fFld;
                for (f2 = 1; f2 < 1; ++f2) {
                    Test.iArrFld = Test.iArrFld;
                    Test.lArrFld[i11] += s;
                    i8 &= i8;
                    switch ((((Test.iFld >>> 1) % 7) * 5) + 117) {
                    case 147:
                        Test.lArrFld[i6] = -197L;
                        break;
                    case 139:
                        i13 += i9;
                    case 122:
                        if (b2) {
                            i8 -= 42660;
                            i12 = i10;
                            Test.iFld -= i7;
                            dFld = 2.41691;
                        } else {
                            i13 ^= i6;
                            Test.instanceCount += Test.instanceCount;
                            if (false) continue;
                        }
                    case 124:
                        Test.instanceCount <<= i8;
                        break;
                    case 135:
                        Test.fFld *= i6;
                        break;
                    case 129:
                        if (true) break;
                        break;
                    case 130:
                        i12 += (int)(((f2 * Test.instanceCount) + s) - i8);
                        break;
                    default:
                        try {
                            i13 = (Test.iFld % -248);
                            Test.iArrFld[i11 + 1] = (130 % Test.iFld);
                            Test.iFld1 = (-1075822572 % i8);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        } while (++i6 < 221);

        FuzzerUtils.out.println("i6 i7 i8 = " + i6 + "," + i7 + "," + i8);
        FuzzerUtils.out.println("b2 s i9 = " + (b2 ? 1 : 0) + "," + s + "," + i9);
        FuzzerUtils.out.println("i10 by2 i11 = " + i10 + "," + by2 + "," + i11);
        FuzzerUtils.out.println("i12 f2 i13 = " + i12 + "," + Float.floatToIntBits(f2) + "," + i13);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iFld1 = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.iFld1);
        FuzzerUtils.out.println("Test.fFld dFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Double.doubleToLongBits(dFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.bArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
