// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-36984L;
    public static double dFld=2.85764;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 228);
        FuzzerUtils.init(Test.sArrFld, (short)21499);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, short s) {

        int i8=-15687, i9=4, i10=2, i11=-28973;
        boolean b=true, bArr[]=new boolean[N];
        float f=1.388F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr, -34.973F);
        FuzzerUtils.init(lArr, 3930247119L);

        i7 = i7;
        Test.iArrFld[(i7 >>> 1) % N] += i7;
        for (i8 = 8; 170 > i8; i8++) {
            i7 *= i7;
            bArr[i8] = b;
            i7 = i7;
            i9 += i8;
            Test.instanceCount += i7;
            fArr[i8 - 1] = i8;
            for (i10 = 1; i10 < 10; ++i10) {
                i7 *= 61711;
                i7 += (int)Test.instanceCount;
                if (b) {
                    f += (float)Test.dFld;
                    lArr = lArr;
                } else {
                    Test.instanceCount = -13301;
                }
            }
        }
        vMeth1_check_sum += i7 + s + i8 + i9 + (b ? 1 : 0) + i10 + i11 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i12=13;

        vMeth1(i12, (short)(18964));
        long meth_res = i12;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i1=-180, i2=-3044, i3=-13, i4=-9, i5=-3, i6=7, i13=-240, i14=-4, iArr[]=new int[N];
        double d=116.42080;
        float f1=2.191F;
        boolean b1=false;
        byte byArr[]=new byte[N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(byArr, (byte)-117);
        FuzzerUtils.init(iArr, 27164);
        FuzzerUtils.init(lArr1, -94L);

        for (i1 = 14; 271 > i1; ++i1) {
            i2 *= (int)(--Test.instanceCount);
        }
        for (i3 = 8; i3 < 224; ++i3) {
            Test.instanceCount += (((i3 * i3) + i3) - i2);
            i4 *= (byArr[i3]++);
            for (i5 = 1; i5 < 7; ++i5) {
                i6 -= (int)(d + iMeth());
                Test.instanceCount += (((i5 * i5) + i1) - Test.instanceCount);
                for (i13 = 1; i13 < 2; ++i13) {
                    int i15=-9590;
                    i6 = i5;
                    i15 += (i13 * i13);
                    switch ((i5 % 7) + 49) {
                    case 49:
                        try {
                            i15 = (i4 / Test.iArrFld[i5 + 1]);
                            i6 = (59924 / Test.iArrFld[i13 + 1]);
                            i2 = (iArr[i5] / i4);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 50:
                        i6 -= (int)Test.instanceCount;
                        i6 >>= i14;
                    case 51:
                        lArr1[i13 + 1][i3] -= (long)d;
                        break;
                    case 52:
                        f1 = i3;
                        break;
                    case 53:
                        Test.instanceCount = Test.instanceCount;
                    case 54:
                        i6 = (int)f1;
                    case 55:
                        if (b1) continue;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + i13 + i14 +
            Float.floatToIntBits(f1) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        long l=-112L;
        int i=149, i16=-3, i17=97, i18=-1, i19=52064, i20=-165, i21=-57265, i22=-235, i23=11, i24=86, i25=-25142;
        boolean b2=true;
        double d1=2.88458;
        byte by=-125;
        float f2=-1.934F;
        short s1=20315;

        for (l = 2; l < 314; l++) {
            vMeth();
            b2 = b2;
        }
        for (i16 = 13; 256 > i16; ++i16) {
            i18 = 1;
            while (++i18 < 103) {
                for (d1 = 1; d1 < 1; d1++) {
                    Test.iArrFld[i18] = (int)l;
                    by %= (byte)((long)(d1) | 1);
                    f2 *= 98.871F;
                    Test.iArrFld[i18 + 1] += by;
                }
                i = (int)1051980218L;
                i += (i18 | i);
                Test.sArrFld[i18 + 1] = (short)i17;
                Test.dFld = i19;
            }
            switch ((i16 % 6) + 124) {
            case 124:
            case 125:
                i19 *= i19;
                break;
            case 126:
                for (i20 = 6; 103 > i20; ++i20) {
                    f2 *= i20;
                }
                break;
            case 127:
                Test.instanceCount = s1;
                break;
            case 128:
                for (i22 = 6; i22 < 103; ++i22) {
                    switch (((i16 % 3) * 5) + 45) {
                    case 60:
                        for (i24 = 2; i24 > i16; i24--) {
                            f2 *= i;
                            f2 += (((i24 * i22) + l) - f2);
                            Test.iArrFld[(9902 >>> 1) % N] >>= i18;
                            Test.instanceCount = i24;
                            i23 = (int)l;
                            i21 <<= i21;
                            Test.iArrFld[i24 + 1] *= i18;
                        }
                        break;
                    case 56:
                    case 57:
                        Test.instanceCount *= i23;
                        break;
                    }
                }
            case 129:
                i21 = i25;
                break;
            }
        }

        FuzzerUtils.out.println("l i b2 = " + l + "," + i + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("d1 i19 by = " + Double.doubleToLongBits(d1) + "," + i19 + "," + by);
        FuzzerUtils.out.println("f2 i20 i21 = " + Float.floatToIntBits(f2) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("s1 i22 i23 = " + s1 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 = " + i24 + "," + i25);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iArrFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
