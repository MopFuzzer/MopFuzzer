// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=16L;
    public int iFld=-32142;
    public static int iFld1=-12;
    public static byte byFld=-34;
    public float fFld=55.994F;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
        FuzzerUtils.init(Test.sArrFld, (short)-8809);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=22029, i3=13, i4=10, i5=-13734, i6=10, iArr[]=new int[N];
        long l1=-13666L;
        float f2=-2.882F;
        double d1=-96.2861;
        boolean b=false;

        FuzzerUtils.init(iArr, 33324);

        if (false) {
            iArr[(Test.iFld1 >>> 1) % N] += Test.iFld1;
        } else if (b) {
            for (i2 = 16; i2 < 384; ++i2) {
                for (l1 = 5; i2 < l1; --l1) {
                    f2 -= 177;
                    i3 >>= (int)-7L;
                    iArr[(int)(l1 + 1)] += (int)d1;
                    for (i5 = 1; i5 < 1; i5++) {
                        switch (((i5 % 3) * 5) + 34) {
                        case 41:
                            i4 = (int)l1;
                            d1 = -571L;
                            break;
                        case 46:
                            Test.instanceCount += i6;
                            iArr[(int)(l1)] = i3;
                            iArr = iArr;
                            i6 += (i5 ^ i6);
                            break;
                        case 48:
                            iArr[(int)(l1)] += i4;
                            break;
                        }
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + l1 + i4 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i5 + i6 + (b ?
            1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1) {

        float f1=49.110F, f3=96.102F, f4=1.21F;
        int i7=-23492, i8=106;
        short s=-3306;
        boolean b1=false;

        f1 = 1;
        do {
            vMeth1();
            for (f3 = 1; f3 < 8; f3++) {
                Test.instanceCount >>= i7;
                Test.byFld = (byte)i1;
                s *= (short)f1;
                i8 = 1;
                while (++i8 < 2) {
                    f4 *= i1;
                    i7 *= (int)Test.instanceCount;
                    i7 *= i7;
                    if (b1) break;
                    Test.iFld1 += i8;
                    i1 -= i7;
                }
                Test.iFld1 = Test.byFld;
                Test.instanceCount |= -21535;
            }
        } while (++f1 < 196);
        long meth_res = i1 + Float.floatToIntBits(f1) + Float.floatToIntBits(f3) + i7 + s + i8 +
            Float.floatToIntBits(f4) + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, long l) {

        double d=113.5777;
        float f=-2.107F;
        int i9=-110, i10=24, i11=-192, i12=-28, i13=116;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 189L);

        d -= d;
        i += (int)f;
        if (true) {
            i = iMeth(Test.iFld1);
            i9 = 1;
            do {
                i += (i9 * f);
                Test.iFld1 = i;
                for (i10 = 1; i10 < 7; ++i10) {
                    long l2=-7323429762248916688L;
                    i12 = 1;
                    while (++i12 < 2) {
                        try {
                            Test.iFld1 = (i10 / i10);
                            Test.iFld1 = (1490264482 % Test.iArrFld[i12 + 1]);
                            i11 = (i12 / i12);
                        } catch (ArithmeticException a_e) {}
                    }
                    i13 = 1;
                    do {
                        Test.instanceCount = i;
                        Test.iArrFld[i10 + 1] = i13;
                        lArr[i10] += i10;
                    } while (++i13 < 2);
                    i >>= (int)l2;
                }
            } while (++i9 < 220);
        } else {
            i -= i;
        }
        vMeth_check_sum += i + l + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i14=-90, i15=22616, i16=-21, i17=-1, i18=-11;
        double d2=-108.62957;
        boolean b2=false;
        short s1=13002;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -20.472F);

        iFld = iFld;
        fArr = (fArr = fArr);
        vMeth(8, 4912366738718498184L);
        if (b2) {
            fArr = FuzzerUtils.float1array(N, (float)-2.908F);
        } else if (true) {
            iFld >>= iFld;
            for (i14 = 1; i14 < 152; i14++) {
                i15 |= i14;
                i16 = 1;
                while (++i16 < 166) {
                    for (i17 = 1; i17 < 1; ++i17) {
                        Test.iArrFld[i17 + 1] *= (int)fFld;
                        Test.iArrFld[i17 + 1] -= 10965;
                        Test.instanceCount = i14;
                        Test.iFld1 += 9;
                        if (true) break;
                        Test.iFld1 -= (int)d2;
                        try {
                            Test.iArrFld[i14 + 1] = (Test.iArrFld[i14] / i18);
                            i15 = (Test.iArrFld[i16] / -192);
                            i18 = (31 / Test.iFld1);
                        } catch (ArithmeticException a_e) {}
                        iFld = i15;
                    }
                    fFld += Test.iFld1;
                    if (b2) continue;
                    i18 += (int)Test.instanceCount;
                    s1 += (short)i16;
                    Test.instanceCount <<= 3;
                    if (b2) continue;
                    iFld = i15;
                    i18 += (i16 * i16);
                }
            }
            d2 = i14;
            fArr[(Test.iFld1 >>> 1) % N] += i17;
        } else {
            Test.sArrFld[(iFld >>> 1) % N] = (short)fFld;
            Test.byFld &= (byte)Test.instanceCount;
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 d2 = " + i17 + "," + i18 + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("b2 s1 fArr = " + (b2 ? 1 : 0) + "," + s1 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.iFld1 = " + Test.instanceCount + "," + iFld + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.byFld fFld Test.iArrFld = " + Test.byFld + "," + Float.floatToIntBits(fFld) + ","
            + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
