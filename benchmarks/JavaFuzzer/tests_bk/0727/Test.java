// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public static float fFld=-75.377F;
    public static int iFld=11589;
    public static int iFld1=69;
    public short sFld=7759;
    public static double dArrFld[]=new double[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -2.70942);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 110.560F);

        Test.iFld = (int)-10L;
        fArr[(Test.iFld >>> 1) % N] -= Test.iFld;
        Test.iFld -= Test.iFld;
        long meth_res = Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(int i7, int i8, long l1) {

        int i9=-5, i10=33961, i12=201, iArr[]=new int[N];
        long l3=165L, lArr1[]=new long[N];
        byte by=69;
        short s=-16639;

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(lArr1, -54295L);

        iArr[(i7 >>> 1) % N] += iMeth();
        for (i9 = 1; i9 < 257; ++i9) {
            int i11=42761;
            i7 = i9;
            iArr[i9 - 1] *= (int)Test.instanceCount;
            iArr[i9] = i9;
            switch (((i10 >>> 1) % 3) + 73) {
            case 73:
                Test.iFld += i9;
                try {
                    i11 = (iArr[i9 - 1] / i11);
                    Test.iFld = (Test.iFld / i10);
                    i11 = (i8 / i11);
                } catch (ArithmeticException a_e) {}
            case 74:
                i10 *= -44428;
                for (l3 = 1; 6 > l3; ++l3) {
                    i8 += (int)(l3 | by);
                    iArr[(int)(l3 + 1)] += i10;
                    l1 >>= s;
                    Test.instanceCount += l3;
                    iArr[i9 - 1] = Test.iFld;
                }
                break;
            case 75:
                i10 += i8;
                break;
            }
        }
        vMeth1_check_sum += i7 + i8 + l1 + i9 + i10 + l3 + i12 + by + s + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(boolean b, double d, long l) {

        int i2=12, i3=-12, i4=-49794, i5=140, i6=82, i13=-10533, i14=31826;
        byte by1=123;
        long lArr[]=new long[N];
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(lArr, 2711767776L);
        FuzzerUtils.init(dArr, 31.6577);

        lArr[(i2 >>> 1) % N] -= (i3--);
        i2 -= (int)(Test.dArrFld[(i2 >>> 1) % N]--);
        i4 = 1;
        while (++i4 < 251) {
            for (i5 = 1; i5 < 6; ++i5) {
                vMeth1(i6, i5, 88L);
                dArr = FuzzerUtils.double2array(N, (double)-82.96151);
                iArrFld[i5 - 1] |= (int)l;
                for (i13 = 1; i13 < 2; ++i13) {
                    Test.iFld -= 26593;
                    i6 = Test.iFld1;
                    Test.instanceCount >>= l;
                    i14 += i13;
                    Test.instanceCount += (((i13 * Test.fFld) + i6) - Test.fFld);
                }
                i2 += (((i5 * Test.iFld1) + Test.fFld) - by1);
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d) + l + i2 + i3 + i4 + i5 + i6 + i13 + i14 + by1 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=191, i1=54338, i15=-160, i16=-43598, i17=13, i18=31039, i19=-181, i20=-11, i21=5, i22=-53321, i23=49585,
            i24=27961;
        boolean b1=true;
        byte by2=-74;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -214L);

        for (i = 18; i < 354; ++i) {
            Test.instanceCount += (((i * i1) + i1) - Test.fFld);
        }
        Test.fFld *= (((i1++) - 68.269F) - (-(--Test.fFld)));
        vMeth(b1, -29.77045, Test.instanceCount);
        for (i15 = 2; i15 < 179; ++i15) {
            for (i17 = 142; i17 > 8; i17 -= 3) {
                i16 = Test.iFld1;
                lArr2[i17] = Test.iFld;
                for (i19 = 1; i19 < 4; ++i19) {
                    lArr2[i17 + 1] += Test.instanceCount;
                    i1 >>= (int)Test.instanceCount;
                }
                lArr2[i17 + 1] *= 42293;
                for (i21 = 1; 4 > i21; i21++) {
                    Test.instanceCount *= Test.instanceCount;
                    Test.iFld = (int)Test.instanceCount;
                }
                switch ((i17 % 2) + 60) {
                case 60:
                    Test.iFld += i20;
                    break;
                case 61:
                    i16 += (i17 - i);
                    for (i23 = 1; i23 < 4; ++i23) {
                        Test.instanceCount *= i19;
                    }
                    break;
                default:
                    sFld -= (short)i17;
                    i24 -= i21;
                    iArrFld[i15] >>>= (int)Test.instanceCount;
                }
            }
            i22 = (int)Test.instanceCount;
            Test.fFld %= (i18 | 1);
            by2 += (byte)(((i15 * i21) + i19) - i24);
            Test.iFld += (8 + (i15 * i15));
            i24 += (i15 - i22);
        }
        iArrFld = iArrFld;

        FuzzerUtils.out.println("i i1 b1 = " + i + "," + i1 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 by2 lArr2 = " + i24 + "," + by2 + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.iFld1 sFld Test.dArrFld = " + Test.iFld1 + "," + sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
