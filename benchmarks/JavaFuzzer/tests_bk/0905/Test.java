// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2341329227190046026L;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 59371);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, float f, int i4) {

        int i5=-59, i6=14161, i7=-3, i8=5, i9=11969, i10=-11;
        short s=23224;
        boolean b=false;
        double d=100.104;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 480068052L);

        for (i5 = 10; i5 < 277; ++i5) {
            for (i7 = 1; i7 < 6; i7++) {
                i6 = (int)f;
                i8 += (((i7 * i7) + s) - Test.instanceCount);
                Test.iArrFld[i7] = -6;
                for (i9 = 1; i9 < 2; i9 += 3) {
                    i10 += (i9 | i4);
                    i8 += (-38115 + (i9 * i9));
                    switch (((i5 % 9) * 5) + 47) {
                    case 66:
                    case 61:
                        i8 += i9;
                        if (b) break;
                        f = (float)d;
                    case 71:
                        i4 = (int)-195L;
                        lArr[i5 + 1] += (long)f;
                        Test.instanceCount += i9;
                        break;
                    case 76:
                        lArr[i5] -= i6;
                        break;
                    case 77:
                        l = (long)d;
                    case 84:
                        if (i6 != 0) {
                            vMeth2_check_sum += l + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + s + i9 + i10 +
                                (b ? 1 : 0) + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                    case 64:
                        l = i9;
                        break;
                    case 69:
                        if (b) break;
                        break;
                    case 72:
                        Test.instanceCount -= i10;
                        break;
                    default:
                        if (i10 != 0) {
                            vMeth2_check_sum += l + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + s + i9 + i10 +
                                (b ? 1 : 0) + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                    }
                }
            }
        }
        vMeth2_check_sum += l + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + s + i9 + i10 + (b ? 1 : 0) +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i3) {

        float f1=0.375F, fArr[]=new float[N];
        int i11=-34, i12=-21986, i13=156;
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, 58.127F);
        FuzzerUtils.init(lArr1, 11L);

        vMeth2(Test.instanceCount, -101.988F, -57079);
        Test.iArrFld = Test.iArrFld;
        f1 -= i3;
        i11 = 1;
        while (++i11 < 356) {
            for (i12 = 5; i12 > 1; i12--) {
                i13 += i12;
                Test.iArrFld[i11 + 1] = i11;
                Test.instanceCount = Test.instanceCount;
                switch ((i11 % 5) + 51) {
                case 51:
                    fArr = fArr;
                    Test.instanceCount >>= i11;
                    lArr1[i12 + 1] = (long)31.754F;
                case 52:
                    f1 = i3;
                    i13 >>= (int)Test.instanceCount;
                    Test.iArrFld[i12 + 1] = 31381;
                    break;
                case 53:
                case 54:
                    i13 += (-13 + (i12 * i12));
                    break;
                case 55:
                    i13 = i12;
                    break;
                default:
                    Test.instanceCount = Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f1) + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i) {

        int i1=-4, i2=10381, i14=-3815, i15=-7, i16=-113, i17=49550, i18=-146;
        double d1=-34.76816;
        float f2=0.551F, fArr1[]=new float[N];
        short s1=13041;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(fArr1, -1.615F);
        FuzzerUtils.init(lArr2, 11L);

        for (i1 = 6; i1 < 162; i1 += 2) {
            Test.instanceCount += (i1 + i1);
            vMeth1(i1);
            for (i14 = i1; i14 < 20; i14++) {
                fArr1[i1 + 1] *= i15;
                i += (179 + (i14 * i14));
                lArr2[i1 - 1][i1 + 1] -= (long)d1;
                for (i16 = 1; 1 > i16; ++i16) {
                    f2 += (i16 - Test.instanceCount);
                    i17 = i15;
                    i2 >>= i1;
                    i15 = (int)Test.instanceCount;
                }
                i18 = 1;
                while (++i18 < 1) {
                    i += (((i18 * i2) + Test.instanceCount) - i17);
                    i += (((i18 * Test.instanceCount) + i18) - s1);
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i14 + i15 + Double.doubleToLongBits(d1) + i16 + i17 + Float.floatToIntBits(f2)
            + i18 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i19=142, i20=-17398, i21=-123, i22=16189, i23=-161, i24=-37, i25=-103, i26=-22822, i27=8;
        float f3=37.64F;
        short s2=5336, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)20620);

        vMeth(i19);
        for (i20 = 10; 286 > i20; ++i20) {
            switch (((8 >>> 1) % 3) + 116) {
            case 116:
                for (i22 = 5; i22 < 91; i22++) {
                    for (i24 = 1; 2 > i24; i24 += 3) {
                        i19 += (-192 + (i24 * i24));
                        i21 = i21;
                        i19 = (int)f3;
                    }
                    i25 *= i25;
                    Test.instanceCount += (i22 - Test.instanceCount);
                    switch ((((-51536 >>> 1) % 10) * 5) + 124) {
                    case 138:
                    case 128:
                        i19 = (int)Test.instanceCount;
                        for (i26 = 1; i26 < 2; ++i26) {
                            Test.instanceCount |= Test.instanceCount;
                            i27 += (i26 - i24);
                            s2 |= (short)i25;
                            switch (((i26 % 8) * 5) + 47) {
                            case 79:
                                Test.iArrFld[i26 - 1] = (int)Test.instanceCount;
                                i19 >>>= i19;
                                i27 = (int)Test.instanceCount;
                                break;
                            case 83:
                                Test.instanceCount = (long)f3;
                                i19 += i27;
                                i21 = 0;
                                s2 += (short)i26;
                                break;
                            case 67:
                            case 85:
                                i19 = i23;
                                sArr[i26] = (short)i24;
                                f3 = i19;
                                s2 -= (short)i22;
                                break;
                            case 58:
                                f3 -= Test.instanceCount;
                                i25 <<= i23;
                                break;
                            case 86:
                                i23 += (-155 + (i26 * i26));
                                break;
                            case 50:
                                i19 = i25;
                                break;
                            case 66:
                                Test.instanceCount = i26;
                            default:
                                if (bFld) continue;
                            }
                        }
                        break;
                    case 162:
                        i21 += i24;
                    case 161:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    case 153:
                        f3 %= (i21 | 1);
                        break;
                    case 148:
                        if (bFld) continue;
                        break;
                    case 144:
                        i23 -= (int)f3;
                        break;
                    case 159:
                    case 132:
                        f3 = i24;
                        break;
                    case 164:
                        i19 = -9;
                        break;
                    }
                }
                break;
            case 117:
                i23 = i22;
            case 118:
                if (bFld) continue;
                break;
            default:
                i21 += i19;
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 f3 i26 = " + i25 + "," + Float.floatToIntBits(f3) + "," + i26);
        FuzzerUtils.out.println("i27 s2 sArr = " + i27 + "," + s2 + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount bFld Test.iArrFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
