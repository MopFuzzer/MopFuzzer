// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1056623979995335012L;
    public static volatile byte byFld=30;
    public boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 173L);
        FuzzerUtils.init(Test.iArrFld, 24597);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, double d1, long l) {

        float f=-1.526F;
        int i6=244, i7=-2, iArr1[]=new int[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, 53991);
        FuzzerUtils.init(sArr, (short)-11167);

        f = 1;
        while (++f < 277) {
            float f1=2.419F;
            iArr1[(int)(f)] -= (int)d1;
            f1 -= i5;
            i6 = 1;
            do {
                f1 += (i6 + f1);
                Test.instanceCount = i6;
                i5 >>>= (int)l;
                i7 = 1;
                do {
                    Test.byFld %= (byte)-11L;
                    i5 += (int)l;
                    if (true) break;
                } while (++i7 < 1);
                f1 = i5;
                i5 = Test.byFld;
                sArr[i6] *= (short)i5;
                i5 += i6;
            } while (++i6 < 6);
        }
        vMeth1_check_sum += i5 + Double.doubleToLongBits(d1) + l + Float.floatToIntBits(f) + i6 + i7 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
    }

    public static long lMeth() {

        int i3=81, i4=53, i8=-7, i9=-54614, i10=9, i11=50834, i12=-12, iArr2[]=new int[N];
        double d2=2.29200;
        float f2=56.416F, f3=0.504F;
        short s=-9359;
        boolean b=true;

        FuzzerUtils.init(iArr2, -33862);

        for (i3 = 1; i3 < 287; i3++) {
            vMeth1(-4916, d2, -3L);
            f2 -= (float)d2;
            if (b) {
                Test.instanceCount = i4;
                if (i4 != 0) {
                }
                i4 = i3;
            } else if (b) {
                for (i8 = 1; 6 > i8; i8++) {
                    for (f3 = 1; f3 < 2; ++f3) {
                        Test.instanceCount += (long)(((f3 * i4) + Test.instanceCount) - i4);
                        s += (short)Test.instanceCount;
                    }
                    for (i11 = 2; 1 < i11; --i11) {
                        i12 <<= (int)Test.instanceCount;
                        iArr2[i3 + 1] %= (int)(i10 | 1);
                        iArr2[i8] = (int)Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = i3 + i4 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + i8 + i9 +
            Float.floatToIntBits(f3) + i10 + s + i11 + i12 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(double d) {

        int i=17559, i1=2, i2=12, i13=225, iArr[]=new int[N];
        float f4=3.243F;
        long l1=41852L;

        FuzzerUtils.init(iArr, -4);

        Test.instanceCount = (Test.instanceCount--);
        i = 1;
        do {
            for (i1 = 1; i1 < 7; i1++) {
                iArr[i + 1] = (int)lMeth();
                f4 = 0.158F;
                i2 = i;
                Test.instanceCount = i1;
                Test.instanceCount = Test.instanceCount;
            }
            for (l1 = 1; l1 < 7; ++l1) {
                i2 += (int)l1;
                i13 += i2;
                bFld = false;
                Test.instanceCount -= i2;
                i13 += i;
                f4 -= i;
            }
        } while (++i < 245);
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + Float.floatToIntBits(f4) + l1 + i13 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d3=88.103725;
        float f5=-80.952F;
        int i14=-46376, i15=-59715, i16=37;

        vMeth(d3);
        for (f5 = 12; f5 < 281; f5++) {
            Test.lArrFld[(int)(f5)] += Test.instanceCount;
            for (i15 = 1; 93 > i15; ++i15) {
                try {
                    i16 = (i14 / -33078);
                    i14 = (i14 / 23305);
                    Test.iArrFld[(int)(f5 + 1)] = (-95 / i16);
                } catch (ArithmeticException a_e) {}
                Test.iArrFld = Test.iArrFld;
                i14 += i14;
                i16 += (((i15 * f5) + Test.byFld) - i16);
            }
            i14 = i16;
        }

        FuzzerUtils.out.println("d3 f5 i14 = " + Double.doubleToLongBits(d3) + "," + Float.floatToIntBits(f5) + "," +
            i14);
        FuzzerUtils.out.println("i15 i16 = " + i15 + "," + i16);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld bFld = " + Test.instanceCount + "," + Test.byFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
