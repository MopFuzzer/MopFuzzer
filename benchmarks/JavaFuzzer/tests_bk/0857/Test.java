// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=150L;
    public static int iFld=6;
    public static boolean bFld=true;
    public static float fFld=2.286F;
    public static byte byFld=53;
    public static volatile short sFld=-27916;
    public double dFld=1.93441;
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-30);
        FuzzerUtils.init(Test.iArrFld, 42);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l, long l1) {

        short s=16596;
        int i7=-76, i8=-28581, i9=3, iArr1[]=new int[N];
        double d=-11.53995;
        byte by=94, by1=-4;
        float f2=-118.90F;

        FuzzerUtils.init(iArr1, 11);

        Test.iFld = Test.iFld;
        iArr1[(Test.iFld >>> 1) % N] -= s;
        i7 = 292;
        while ((i7 -= 2) > 0) {
            Test.iFld = (int)Test.instanceCount;
            d += i7;
            for (i8 = 11; 1 < i8; i8--) {
                Test.bFld = Test.bFld;
                if (Test.bFld) break;
                if (Test.bFld) {
                    by -= by1;
                    Test.iFld += (((i8 * Test.iFld) + Test.iFld) - i7);
                    i9 = -10902;
                    if (false) {
                        l1 = -229L;
                        i9 += (((i8 * l1) + i8) - f2);
                    } else {
                        d = Test.iFld;
                    }
                }
            }
        }
        long meth_res = l + l1 + s + i7 + Double.doubleToLongBits(d) + i8 + i9 + by + by1 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i5) {

        int i6=0, i10=-21485, i11=108, iArr2[]=new int[N];
        double d1=75.64515;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 13L);
        FuzzerUtils.init(iArr2, 10);

        i6 = 344;
        do {
            i5 += (int)Test.instanceCount;
            Test.instanceCount = (long)(((i6 + -5) - (-Test.instanceCount)) - fMeth(Test.instanceCount,
                Test.instanceCount));
            Test.iFld = i5;
            Test.iFld = Test.iFld;
            Test.iFld += i5;
            Test.iFld += (((i6 * i6) + i5) - i5);
            Test.fFld += (float)d1;
            i5 = Test.iFld;
        } while (--i6 > 0);
        for (i10 = 14; 298 > i10; i10 += 3) {
            i11 *= i10;
            Test.iFld = i5;
            iArr2[i10] -= (int)Test.fFld;
        }
        Test.iFld = (int)Test.fFld;
        Test.byFld <<= (byte)Test.sFld;
        long meth_res = i5 + i6 + Double.doubleToLongBits(d1) + i10 + i11 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, float f) {

        int i1=12, i2=13073, i3=-30, i4=-18995, i12=3570, i13=248, iArr[]=new int[N];
        float f1=-2.1014F;
        long l3=-148L;

        FuzzerUtils.init(iArr, 8);

        f = (i += (int)f);
        for (i1 = 9; 200 > i1; ++i1) {
            for (f1 = 1; 8 > f1; f1++) {
                i4 = 2;
                while (--i4 > 0) {
                    iArr[(int)(f1 + 1)] <<= iMeth(i1);
                    Test.instanceCount = i;
                }
                for (l3 = 2; 1 < l3; l3 -= 2) {
                    f = 14;
                    i2 |= Test.byFld;
                    Test.fFld += (((l3 * f) + i2) - Test.sFld);
                    iArr[i1] <<= i2;
                }
                i13 = 1;
                while (++i13 < 2) {
                    Test.instanceCount = Test.instanceCount;
                    f += i12;
                    i += Test.sFld;
                }
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + i1 + i2 + Float.floatToIntBits(f1) + i3 + i4 + l3 + i12 + i13
            + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i14=3709, i15=-119, i16=246, i17=25266, i18=-8;
        float f3=-100.270F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth(-13, Test.fFld);
        for (i14 = 4; 142 > i14; ++i14) {
            Test.byFld -= (byte)469056607L;
            for (f3 = i14; f3 < 182; f3++) {
                Test.instanceCount = i14;
                Test.byFld += (byte)(-51674 + (f3 * f3));
                for (i17 = 1; i17 < 1; i17++) {
                    switch ((((Test.iFld >>> 1) % 9) * 5) + 47) {
                    case 91:
                        if (Test.bFld) continue;
                        i16 >>= i15;
                        Test.instanceCount = -5;
                    case 86:
                        Test.instanceCount += (((i17 * i14) + i15) - i15);
                        if (true) continue;
                        Test.byArrFld[(int)(f3 - 1)] = (byte)i15;
                    case 87:
                        i15 &= Test.iFld;
                        i15 = (int)dFld;
                    case 70:
                        Test.instanceCount = Test.instanceCount;
                        Test.iArrFld = Test.iArrFld;
                    case 56:
                        i16 = 11113;
                        break;
                    case 60:
                        Test.iArrFld[(int)(f3 - 1)] += (int)Test.fFld;
                        i18 = (int)Test.instanceCount;
                    case 74:
                        Test.iArrFld[i14] += (int)f3;
                        break;
                    case 61:
                        switch (((i17 >>> 1) % 1) + 12) {
                        case 12:
                            i15 = Test.sFld;
                            i18 -= (int)Test.instanceCount;
                            break;
                        }
                        bArr = bArr;
                    case 89:
                        Test.iArrFld[i17 - 1] -= (int)Test.fFld;
                        Test.iArrFld[i14] = Test.iFld;
                        i18 -= (int)f3;
                        Test.instanceCount += i17;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 f3 = " + i14 + "," + i15 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld Test.byFld Test.sFld = " + Float.floatToIntBits(Test.fFld) + "," +
            Test.byFld + "," + Test.sFld);
        FuzzerUtils.out.println("dFld Test.byArrFld Test.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(Test.byArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
