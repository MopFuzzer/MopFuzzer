// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=31602L;
    public static double dFld=-1.76337;
    public static short sFld=14472;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -209);
        FuzzerUtils.init(Test.fArrFld, 64.857F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=-1, i2=133, i3=14, i4=-63705;
        float f=-2.241F, f1=1.470F;
        byte by=-37;

        Test.iArrFld[(-32242 >>> 1) % N] += i1;
        Test.iArrFld[(i1 >>> 1) % N] += i1;
        i1 >>= i1;
        Test.instanceCount = -7;
        for (i2 = 6; i2 < 128; ++i2) {
            i3 |= i2;
            i3 += (11 + (i2 * i2));
            Test.iArrFld[i2 - 1] = (int)Test.instanceCount;
            for (f = 1; f < 13; ++f) {
                Test.iArrFld = Test.iArrFld;
                switch (((i1 >>> 1) % 9) + 10) {
                case 10:
                    i4 += (int)f;
                    break;
                case 11:
                    i3 = i2;
                    break;
                case 12:
                    i1 += (int)(f * f);
                    i1 += (int)(f + f);
                    break;
                case 13:
                    Test.instanceCount |= 37726;
                    break;
                case 14:
                    f1 += (f + i1);
                    break;
                case 15:
                    Test.instanceCount = (long)f1;
                case 16:
                case 17:
                    Test.instanceCount += (long)f;
                case 18:
                    by += (byte)f;
                    break;
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + Float.floatToIntBits(f1) + by;
    }

    public static int iMeth() {

        boolean b=true;
        int i=62, i5=12, i6=129, i7=-37147, i8=-233;
        float f2=-1.618F;

        b = true;
        i = 1;
        do {
            vMeth1();
            if (b) break;
            Test.iArrFld[i + 1] = (int)f2;
            i5 += (i ^ i);
        } while (++i < 271);
        i6 = 1;
        while (++i6 < 293) {
            i7 = 1;
            while ((i7 += 2) < 6) {
                Test.iArrFld[i7] = i7;
                i8 = 1;
                do {
                    Test.instanceCount = -12014;
                    i5 += i8;
                    try {
                        i5 = (i % Test.iArrFld[i6 + 1]);
                        i5 = (-18790 / i7);
                        i5 = (Test.iArrFld[i7] / i8);
                    } catch (ArithmeticException a_e) {}
                    f2 = -58.780F;
                    Test.fArrFld[i8 + 1] += i6;
                } while (++i8 < 2);
            }
        }
        long meth_res = (b ? 1 : 0) + i + Float.floatToIntBits(f2) + i5 + i6 + i7 + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, long l1) {

        short s=16473;
        int i9=3, i10=-46503, i11=22188, i12=-64124, i13=-14, i14=-8, i15=-112;
        float f3=0.87F;

        l = iMeth();
        s = (short)i9;
        for (i10 = 16; i10 < 294; i10++) {
            for (i12 = 1; i12 < 6; i12++) {
                byte by1=65;
                by1 -= (byte)f3;
                i9 -= (int)-2502L;
                l1 |= 26614;
                Test.instanceCount ^= i9;
                s >>= (short)i10;
            }
            f3 += i10;
        }
        Test.dFld *= i13;
        for (i14 = 16; i14 < 366; i14++) {
            l1 += l;
            i9 <<= (int)l1;
            i13 = i9;
        }
        vMeth_check_sum += l + l1 + s + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f3) + i14 + i15;
    }

    public void mainTest(String[] strArr1) {


        vMeth(Test.instanceCount, Test.instanceCount);
        Test.dFld = Test.sFld;


        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
