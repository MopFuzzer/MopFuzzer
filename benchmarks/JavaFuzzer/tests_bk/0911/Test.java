// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4068109394690120320L;
    public static volatile byte byFld=-123;
    public static long lFld=2029147142L;
    public int iFld=-1;
    public boolean bFld=false;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 120);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(int i6, long l, int i7) {

        int i8=56, i9=149, i10=-19, i11=9179, i12=2, i13=4, i14=57794, i15=120, iArr[]=new int[N];
        boolean b1=false, bArr[]=new boolean[N];
        float f1=-2.963F;
        double dArr[]=new double[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(dArr, 109.87776);

        for (i8 = 213; i8 > 4; i8 -= 3) {
            i6 += (i8 * i8);
        }
        bArr[(i7 >>> 1) % N] = b1;
        for (i10 = 13; i10 < 285; i10++) {
            for (i12 = 1; i12 < 6; ++i12) {
                i11 = -11;
                i9 >>= 11144;
                for (i14 = 1; 2 > i14; i14++) {
                    i7 = i8;
                    i6 >>>= Test.byFld;
                    Test.instanceCount = 56059;
                    f1 -= i10;
                    iArr[i14 - 1] /= (int)(i11 | 1);
                }
            }
            i6 = i8;
            dArr[i10] *= Test.instanceCount;
        }
        long meth_res = i6 + l + i7 + i8 + i9 + (b1 ? 1 : 0) + i10 + i11 + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth1(float f, int i) {

        int i1=-10851, i2=33283, i3=-11, i4=-16666, i5=-52261, iArr1[][]=new int[N][N];
        boolean b=false;
        double dArr1[]=new double[N];

        FuzzerUtils.init(iArr1, -34249);
        FuzzerUtils.init(dArr1, 1.127974);

        for (i1 = 2; i1 < 346; i1++) {
            for (i3 = 1; i3 < 5; ++i3) {
                i5 = 1;
                do {
                    short s=9760;
                    i4 += (--Test.byFld);
                    i4 = (Test.byFld - i4);
                    i += (i5 | i);
                    if (b = (b = bMeth(i4, Test.instanceCount, i4))) break;
                    i4 = (int)Test.instanceCount;
                    switch (((i3 % 10) * 5) + 121) {
                    case 151:
                        iArr1[i1] = iArr1[i5 + 1];
                        break;
                    case 133:
                        i += (i5 + i1);
                        iArr1[i3 - 1][i3] = 16;
                        i4 ^= s;
                        if (true) continue;
                        break;
                    case 124:
                        Test.instanceCount = i;
                    case 165:
                        i += (((i5 * Test.instanceCount) + i1) - i2);
                    case 168:
                        i4 = i2;
                        break;
                    case 166:
                        f *= 48234;
                        break;
                    case 159:
                        dArr1[i1] -= 244;
                        break;
                    case 141:
                    case 138:
                        s = (short)i;
                        break;
                    case 169:
                        i += i;
                        break;
                    default:
                        if (b) continue;
                    }
                } while (++i5 < 2);
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static void vMeth() {

        int i16=252, i17=-62798, i18=10, i19=-2, i20=7, i21=142, i22=-76;
        boolean b2=true;

        vMeth1(-2.782F, i16);
        for (i17 = 17; i17 < 297; ++i17) {
            i16 >>= (int)Test.instanceCount;
            i16 -= i18;
            if (b2) {
                for (i19 = 1; i19 < 6; i19 += 2) {
                    i18 *= (int)Test.instanceCount;
                    Test.iArrFld[i17][i19 + 1] /= (int)(Test.instanceCount | 1);
                    Test.instanceCount += (i19 | Test.instanceCount);
                    for (i21 = 1; i21 < 3; i21++) {
                        i18 += i21;
                        i20 = i22;
                        i16 += (((i21 * i16) + Test.byFld) - Test.lFld);
                        i16 = i21;
                    }
                    b2 = b2;
                }
            } else {
                i20 = -22977;
            }
        }
        vMeth_check_sum += i16 + i17 + i18 + i19 + i20 + i21 + i22 + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i23=-4, i24=-57450, i25=-62709, i26=32773, i27=-34993, i28=62702, i29=4, i30=-4, i31=33509;
        double d=2.29860;
        float f2=-66.250F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -9139835861282102938L);

        vMeth();
        for (i23 = 187; i23 > 3; i23--) {
            Test.iArrFld[i23 - 1][i23] *= i24;
            i25 = 1;
            while (++i25 < 136) {
                for (i26 = 1; i26 > 1; i26--) {
                    lArr[i26] <<= -1844361166L;
                    i24 = (int)d;
                    i24 = i24;
                    i27 = i24;
                    i24 = i27;
                    i27 = i27;
                    Test.iArrFld[i23 + 1][i25 - 1] = i26;
                    i24 += i26;
                    f2 *= i26;
                }
                for (i28 = 1; 1 > i28; i28++) {
                    i24 = i29;
                    i29 += (i28 ^ i23);
                }
                i29 += i25;
                f2 -= i26;
                lArr[i23 + 1] = i25;
                f2 -= -4344;
                i27 *= (int)-52971L;
                for (i30 = 1; i30 < 1; i30++) {
                    f2 = (float)d;
                    iFld = i27;
                }
                if (bFld) continue;
                iFld += (i25 + i27);
            }
            iFld += (i23 + i30);
            Test.instanceCount *= 14L;
            f2 += (i23 - Test.byFld);
        }

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 d = " + i26 + "," + i27 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("f2 i28 i29 = " + Float.floatToIntBits(f2) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 lArr = " + i30 + "," + i31 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.lFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.lFld);
        FuzzerUtils.out.println("iFld bFld Test.iArrFld = " + iFld + "," + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
