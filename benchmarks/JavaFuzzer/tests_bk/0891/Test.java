// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2878764377L;
    public static boolean bFld=false;
    public static int iFld1=-54049;
    public double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public static double dArrFld1[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -78);
        FuzzerUtils.init(Test.lArrFld, -4089698220032773759L);
        FuzzerUtils.init(Test.fArrFld, 98.180F);
        FuzzerUtils.init(Test.dArrFld1, -42.28287);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, int i10) {

        int i11=3, i12=13178, i13=-59843, i14=54, i15=-45648, i16=0;
        byte by=119;
        float f1=36.198F;

        Test.iArrFld[(i10 >>> 1) % N] *= (int)l2;
        i10 -= -25204;
        for (i11 = 4; i11 < 122; i11++) {
            if (Test.bFld) continue;
            for (i13 = 1; i13 < 13; i13++) {
                i14 += (i13 - i14);
                by -= (byte)i12;
                i10 -= i12;
                Test.lArrFld[i11 - 1] ^= i10;
                Test.iArrFld[i11 - 1] += (int)f1;
                Test.fArrFld[i11 + 1] = i14;
            }
            Test.iArrFld[i11 - 1] *= i14;
            for (i15 = 13; i15 > 1; --i15) {
                Test.iArrFld[i11 + 1] = i16;
            }
        }
        i16 |= -250;
        vMeth1_check_sum += l2 + i10 + i11 + i12 + i13 + i14 + by + Float.floatToIntBits(f1) + i15 + i16;
    }

    public static long lMeth(long l, boolean b, long l1) {

        int i6=18679, i7=43093, i8=-27237, i9=183, i17=116, i18=59;
        float f2=-2.164F;
        byte by1=4;
        double d=52.115434, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.25603);

        i6 *= (int)l1;
        i7 = 1;
        while (++i7 < 374) {
            for (i8 = 1; i8 < 5; i8++) {
                vMeth1(6L, i9);
            }
            switch ((i7 % 1) + 115) {
            case 115:
                i6 += (((i7 * f2) + i8) - Test.instanceCount);
                break;
            }
            switch (((i7 % 3) * 5) + 55) {
            case 56:
                i9 = i9;
                break;
            case 61:
                i17 = 1;
                do {
                    l = by1;
                    f2 = -1.380F;
                } while (++i17 < 5);
                i9 *= i7;
                for (d = 1; d < 5; ++d) {
                    if (Test.bFld) break;
                    dArr[i7] *= -77;
                }
                break;
            case 67:
                i18 *= (int)l1;
                break;
            }
        }
        long meth_res = l + (b ? 1 : 0) + l1 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f2) + i17 + by1 +
            Double.doubleToLongBits(d) + i18 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i2=28804, i3=3, i4=12, i5=38917, i19=1;
        float f3=-1.753F;
        byte by2=24;
        double d1=-91.102869;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)27148);

        for (short s : sArr) {
            i += (++i);
            for (i2 = 1; i2 < 4; i2++) {
                switch (((i2 % 10) * 5) + 96) {
                case 145:
                case 106:
                    for (i4 = 1; i4 < 2; ++i4) {
                        Test.iArrFld[i2] <<= (int)Math.abs(lMeth(Test.instanceCount, Test.bFld, Test.instanceCount));
                        switch (i4 + 91) {
                        case 91:
                            if (Test.bFld) break;
                            break;
                        case 92:
                            s = (short)i3;
                            i1 >>= (int)Test.instanceCount;
                            switch ((i4 % 7) + 119) {
                            case 119:
                                i3 <<= (int)Test.instanceCount;
                                break;
                            case 120:
                            case 121:
                                i1 -= i5;
                            case 122:
                                f3 -= Test.instanceCount;
                                i -= (int)Test.instanceCount;
                            case 123:
                                try {
                                    i = (i / -91);
                                    i = (i % Test.iArrFld[i2 - 1]);
                                    i1 = (-1915940399 % i3);
                                } catch (ArithmeticException a_e) {}
                                break;
                            case 124:
                                i1 += (int)f3;
                                break;
                            case 125:
                                Test.bFld = Test.bFld;
                            default:
                                Test.instanceCount = i5;
                            }
                            break;
                        case 93:
                            Test.instanceCount -= i4;
                        case 94:
                            Test.lArrFld[i2] *= i3;
                            break;
                        case 95:
                            i3 += (i4 - i4);
                            break;
                        case 96:
                            i5 = (int)Test.instanceCount;
                            break;
                        case 97:
                            by2 -= (byte)i1;
                            break;
                        case 98:
                            Test.instanceCount = Test.instanceCount;
                        case 99:
                            Test.iArrFld[i2 - 1] += i;
                            break;
                        case 100:
                            if (Test.bFld) break;
                        case 101:
                            Test.iArrFld[i4] -= 114;
                        case 102:
                            i3 += (i4 * i4);
                            break;
                        case 103:
                            by2 += (byte)(((i4 * Test.instanceCount) + i) - Test.instanceCount);
                        case 104:
                            Test.instanceCount = 48646;
                            break;
                        case 105:
                            s += (short)i4;
                            break;
                        case 106:
                            if (Test.bFld) continue;
                        case 107:
                            i5 = i3;
                            break;
                        case 108:
                            Test.instanceCount <<= i;
                            break;
                        case 109:
                            Test.bFld = true;
                            break;
                        case 110:
                            Test.instanceCount += i4;
                            break;
                        case 111:
                            i -= (int)-38L;
                            break;
                        case 112:
                            i3 = (int)Test.instanceCount;
                            break;
                        case 113:
                            i1 -= i2;
                            break;
                        case 114:
                            Test.instanceCount = i1;
                        case 115:
                            i >>= (int)Test.instanceCount;
                            break;
                        case 116:
                            i1 *= (int)Test.instanceCount;
                            break;
                        case 117:
                            i *= -142;
                            break;
                        case 118:
                            i1 = (int)-29625L;
                        case 119:
                            Test.instanceCount >>= i3;
                            break;
                        case 120:
                            if (i != 0) {
                                vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f3) + by2 +
                                    Double.doubleToLongBits(d1) + i19 + FuzzerUtils.checkSum(sArr);
                                return;
                            }
                        case 121:
                            Test.instanceCount += (207 + (i4 * i4));
                            break;
                        case 122:
                            Test.instanceCount += i4;
                        case 123:
                            f3 = i5;
                            break;
                        case 124:
                            Test.lArrFld[i2] = Test.instanceCount;
                            break;
                        case 125:
                            Test.iArrFld = Test.iArrFld;
                            break;
                        case 126:
                            Test.instanceCount = 2;
                            break;
                        case 127:
                            i1 += i5;
                        case 128:
                            d1 += 48870;
                            break;
                        case 129:
                            Test.fArrFld[i2 - 1] += i2;
                            break;
                        case 130:
                            i1 += (-25809 + (i4 * i4));
                            break;
                        case 131:
                            i3 += i4;
                            break;
                        case 132:
                            i3 += (int)d1;
                            break;
                        case 133:
                            Test.instanceCount += i1;
                        case 134:
                            i1 += (int)f3;
                            break;
                        case 135:
                            i1 += i2;
                        case 136:
                            i += (((i4 * i3) + i2) - i4);
                            break;
                        case 137:
                            Test.lArrFld[i2] = i5;
                        case 138:
                        case 139:
                            i1 += (((i4 * Test.instanceCount) + Test.instanceCount) - i);
                        case 140:
                            i1 += (i4 * i4);
                            break;
                        case 141:
                            try {
                                i1 = (Test.iArrFld[i4 + 1] / -132);
                                i = (i1 % i1);
                                i1 = (Test.iArrFld[i2] / -851656774);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 142:
                            i1 -= i3;
                            break;
                        case 143:
                            Test.instanceCount += i4;
                        case 144:
                            if (false) break;
                            break;
                        case 145:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 146:
                            i1 = (int)f3;
                            break;
                        case 147:
                            Test.dArrFld1 = FuzzerUtils.double1array(N, (double)-19.67552);
                            break;
                        case 148:
                            Test.iArrFld[i4] &= (int)-52341L;
                            break;
                        case 149:
                            Test.instanceCount = i2;
                        case 150:
                            Test.lArrFld[i2 + 1] = i3;
                        case 151:
                            Test.fArrFld[i4 - 1] = i4;
                            break;
                        case 152:
                            Test.lArrFld[i2] >>= -46369;
                            break;
                        case 153:
                            by2 *= (byte)i19;
                        case 154:
                            i -= (int)783836138L;
                            break;
                        case 155:
                            if (Test.bFld) break;
                            break;
                        case 156:
                            s = s;
                            break;
                        case 157:
                            i3 = i3;
                            break;
                        case 158:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 159:
                            i1 -= i2;
                        case 160:
                            f3 = i2;
                            break;
                        }
                    }
                    break;
                case 124:
                    i += (34150 + (i2 * i2));
                case 126:
                    i -= i;
                    break;
                case 121:
                    Test.iArrFld[i2 + 1] = i1;
                    break;
                case 103:
                    by2 = (byte)i19;
                    break;
                case 117:
                    i5 >>= (int)Test.instanceCount;
                    break;
                case 120:
                    i19 += (i2 * i2);
                    break;
                case 138:
                    i19 -= (int)Test.instanceCount;
                    break;
                case 98:
                    Test.lArrFld[i2 - 1] <<= i2;
                    break;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f3) + by2 + Double.doubleToLongBits(d1) +
            i19 + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr3) {

        float f=-117.1021F, f4=0.145F;
        double d2=0.24932;
        int i20=49486, i21=1022, i22=5, i23=-23262, i24=4601;
        byte by3=41;

        dArrFld[(95 >>> 1) % N] *= Math.abs(f--);
        vMeth(Test.iFld1, Test.iFld1);
        Test.instanceCount -= Test.iFld1;
        if (Test.bFld) {
            Test.iFld1 ^= Test.iFld1;
            Test.iFld1 = (int)d2;
        } else if (Test.bFld) {
            i20 = 1;
            while (++i20 < 211) {
                Test.iFld1 += (int)Test.instanceCount;
                Test.iFld1 *= Test.iFld1;
            }
            i21 = 1;
            while (++i21 < 291) {
                for (i22 = 3; i22 < 86; ++i22) {
                    i23 += i20;
                    Test.iArrFld[i22 + 1] >>= i23;
                    i24 = 1;
                    do {
                        Test.iFld1 += i24;
                        if (true) {
                            switch (((i24 % 2) * 5) + 60) {
                            case 62:
                                i23 += (int)Test.instanceCount;
                                i23 += i22;
                                break;
                            case 65:
                                i23 += (i24 - i20);
                                i23 = -66;
                                Test.iFld1 += (i24 * i24);
                                Test.iFld1 -= (int)Test.instanceCount;
                            default:
                            }
                            switch ((i22 % 1) + 52) {
                            case 52:
                                Test.instanceCount += (i24 + i22);
                            default:
                                f4 *= i22;
                                Test.iFld1 += 11;
                                f = i22;
                                Test.iFld1 -= (int)d2;
                            }
                            Test.fArrFld[i22] = -2012254097L;
                        } else {
                            d2 += by3;
                        }
                    } while (++i24 < 2);
                }
            }
        }

        FuzzerUtils.out.println("f d2 i20 = " + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d2) + "," +
            i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 f4 by3 = " + i24 + "," + Float.floatToIntBits(f4) + "," + by3);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.iFld1 = " + Test.instanceCount + "," + (Test.bFld ?
            1 : 0) + "," + Test.iFld1);
        FuzzerUtils.out.println("dArrFld Test.iArrFld Test.lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.fArrFld Test.dArrFld1 = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld1)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
