// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=55688L;
    public static double dFld=-50.124800;
    public float fFld=-2.169F;
    public static int iFld=-36;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3485076978L);
        FuzzerUtils.init(Test.iArrFld, -164);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, long l1) {

        int i6=47250, i7=53381, i8=0, i9=20644, i10=-4, i11=5, i12=39685, iArr[]=new int[N];
        short s=17798;
        long l2=35553L;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 49894);
        FuzzerUtils.init(dArr, 2.35944);

        for (i6 = 1; i6 < 130; ++i6) {
            Test.lArrFld[i6 - 1] >>>= s;
            for (l2 = 1; 12 > l2; ++l2) {
                if (i7 != 0) {
                    vMeth2_check_sum += i5 + l1 + i6 + i7 + s + l2 + i8 + i9 + i10 + i11 + i12 +
                        FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                Test.lArrFld[(int)(l2 - 1)] = i8;
            }
            for (i9 = 1; 12 > i9; ++i9) {
                for (i11 = 1; i11 < 2; i11++) {
                    i5 = i12;
                    try {
                        i7 = (235 % i8);
                        iArr[i9] = (i5 / i11);
                        i5 = (26 / iArr[i9 + 1]);
                    } catch (ArithmeticException a_e) {}
                    iArr[i9 + 1] = 2;
                    i7 += i11;
                    switch ((i9 % 2) + 120) {
                    case 120:
                        i5 = i11;
                        dArr[i11 - 1] -= Test.dFld;
                        i12 = i12;
                        break;
                    case 121:
                        i7 = (int)l1;
                        break;
                    default:
                        Test.instanceCount ^= 14;
                    }
                }
            }
        }
        vMeth2_check_sum += i5 + l1 + i6 + i7 + s + l2 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void vMeth1(int i3, int i4, long l) {

        boolean b1=false;
        int i13=-177, i14=43473, i15=-12063, i16=-12, i17=-11, i18=11;

        vMeth2(7, Test.instanceCount);
        b1 = b1;
        Test.instanceCount += 34626;
        Test.iArrFld[(7 >>> 1) % N] >>>= (int)l;
        i3 |= (int)l;
        i3 += i4;
        for (i13 = 3; i13 < 244; i13++) {
            i14 &= i14;
            l += i14;
            i14 *= i3;
            i3 = 33244;
        }
        for (i15 = 12; i15 < 244; ++i15) {
            for (i17 = 7; i17 > 1; --i17) {
                fFld = i15;
                i3 ^= i3;
            }
        }
        vMeth1_check_sum += i3 + i4 + l + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 + i17 + i18;
    }

    public void vMeth(boolean b, int i2) {

        int i19=-9, i20=152, i21=40033, i22=-249, i23=0;
        long l3=-2L;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 48.423F);

        vMeth1(i2, i2, Test.instanceCount);
        for (i19 = 5; i19 < 142; ++i19) {
            for (l3 = i19; l3 < 11; ++l3) {
                for (i22 = 1; i22 < 1; i22++) {
                    i21 *= (int)l3;
                    fArr[(int)(l3 - 1)] = i23;
                    Test.instanceCount += i22;
                    Test.instanceCount = i23;
                    fFld -= l3;
                    fArr[i19] -= fFld;
                    Test.instanceCount += i20;
                    i2 = -60049;
                    i21 += (i22 * i22);
                }
                fFld *= Test.instanceCount;
                Test.instanceCount *= i2;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i2 + i19 + i20 + l3 + i21 + i22 + i23 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=16, i24=3, i25=-12864, i26=-12;
        float f=-2.750F;
        long l4=1904626003L;
        short s1=21047;
        boolean b2=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i = 5; 126 > i; ++i) {
            vMeth(true, i);
            i1 += (64 + (i * i));
            i1 = 116;
            f = 1;
            do {
                i1 <<= i1;
                i1 = (int)fFld;
                Test.instanceCount /= 44;
                Test.instanceCount = Test.instanceCount;
                switch ((((i1 >>> 1) % 4) * 5) + 85) {
                case 102:
                    i24 = 1;
                    do {
                        i1 <<= i1;
                        fFld += i;
                        i1 <<= i;
                        l4 <<= l4;
                        i1 >>>= i;
                        i1 += (i24 + Test.instanceCount);
                        Test.instanceCount >>>= -249L;
                        fFld = f;
                        i1 -= (int)l4;
                        Test.instanceCount = i;
                    } while (++i24 < 1);
                    i1 += (int)(f * i24);
                case 100:
                    i1 >>= i1;
                    for (i25 = 1; i25 < 1; i25++) {
                        i26 %= 14;
                        Test.iArrFld[i + 1] -= (int)-116.134F;
                        i26 = s1;
                        i1 -= i24;
                        bArr[i25] = b2;
                        l4 |= Test.iFld;
                    }
                case 86:
                    l4 += (long)(((f * Test.instanceCount) + i) - i24);
                    break;
                case 88:
                    i1 = i26;
                    break;
                }
            } while (++f < 207);
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i24 l4 i25 = " + i24 + "," + l4 + "," + i25);
        FuzzerUtils.out.println("i26 s1 b2 = " + i26 + "," + s1 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.iFld Test.lArrFld Test.iArrFld = " + Test.iFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
