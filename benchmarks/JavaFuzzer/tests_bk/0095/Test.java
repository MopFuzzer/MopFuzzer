// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-24310L;
    public byte byFld=88;
    public static boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.382F);
        FuzzerUtils.init(Test.lArrFld, 3414394672L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d, long l) {

        int i8=-21883, i9=5, i10=10, i11=-8, i12=10;
        boolean b=false;
        float f1=2.393F, f2=0.173F;
        long l1=365L;

        i8 = (int)31.660F;
        i8 -= i8;
        b = false;
        f1 = 1;
        while (++f1 < 280) {
            i9 = 1;
            do {
                Test.fArrFld[i9] *= f1;
            } while (++i9 < 6);
            switch ((int)(((f1 % 2) * 5) + 19)) {
            case 22:
                Test.instanceCount = i8;
                i8 += (-176 + (f1 * f1));
                break;
            case 27:
                for (i10 = (int)(f1); i10 < 6; i10++) {
                    i12 = 1;
                    do {
                        i11 = (int)Test.instanceCount;
                        f2 /= (i12 | 1);
                        l = l1;
                        i8 += (((i12 * i12) + i9) - i10);
                    } while (++i12 < 1);
                }
                break;
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + l + i8 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i9 + i10 +
            i11 + i12 + Float.floatToIntBits(f2) + l1;
    }

    public static void vMeth1(int i7) {

        double d1=91.107318;
        int i13=72;
        float f3=-1.256F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)5091);

        vMeth2(d1, Test.instanceCount);
        i7 -= i7;
        i13 = 1;
        do {
            i7 *= 49956;
            switch ((i13 % 1) + 10) {
            case 10:
                Test.instanceCount += (i13 * i13);
                f3 += i13;
            }
        } while (++i13 < 326);
        sArr[(i7 >>> 1) % N] <<= (short)i7;
        i7 += i7;
        Test.lArrFld[(i13 >>> 1) % N] >>= -9;
        vMeth1_check_sum += i7 + Double.doubleToLongBits(d1) + i13 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth() {

        int i2=-17478, i3=-238, i4=-120, i5=-27125, i6=-207, i14=3488, i15=12, iArr[]=new int[N];
        byte by=65;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -167);
        FuzzerUtils.init(fArr, -72.761F);
        FuzzerUtils.init(lArr, -656166522L);

        for (i2 = 23; i2 < 393; ++i2) {
            i3 *= Integer.reverseBytes((int)(iArr[i2] - (fArr[i2]++)));
            i3 = ((iArr[i2 + 1] + i3) - Math.abs(i3 - i3));
            i4 = 1;
            while ((i4 += 3) < 5) {
                lArr[i4 - 1] = ((i3--) - (iArr[i2 + 1]--));
                lArr[i4] >>= i4;
            }
            Test.instanceCount = Test.instanceCount;
            for (i5 = 1; i5 < 5; ++i5) {
                vMeth1(i4);
                Test.instanceCount >>>= i3;
                by += (byte)Test.instanceCount;
                i3 += i5;
                for (i14 = 1; i14 < 2; ++i14) {
                    i6 *= 12;
                    i15 *= i14;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + by + i14 + i15 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr3) {

        int i=-93, i1=-253, i16=8, i17=244, i18=-32832, i19=13, i20=0, i21=91, i22=-40963, i23=-25046, iArr1[]=new
            int[N];
        short s=-1143;
        float f4=-1.753F;
        double d2=98.63588;

        FuzzerUtils.init(iArr1, 77);

        for (i = 17; 365 > i; i++) {
            vMeth();
            iArr1[i + 1] = i1;
            for (i16 = 2; i16 < 72; ++i16) {
                i17 = (int)Test.instanceCount;
            }
            if (Test.bFld) {
                iArr1[i] *= i;
                sArrFld[i] = (short)Test.instanceCount;
                i18 = 1;
                while (++i18 < 72) {
                    i17 += i18;
                    for (i19 = 1; i19 < 1; i19++) {
                        i1 = i17;
                        Test.instanceCount += Test.instanceCount;
                        i1 = (int)Test.instanceCount;
                    }
                    s += (short)(i18 * byFld);
                    Test.instanceCount = i;
                    i17 += i19;
                    for (i21 = 1; i21 > 1; i21 -= 3) {
                        if (Test.bFld) {
                            i22 += (int)1.943F;
                            i17 = i1;
                            f4 = 2814273775L;
                            Test.instanceCount = i20;
                        } else {
                            switch ((i21 % 9) + 103) {
                            case 103:
                                d2 -= 25151;
                                i17 -= i17;
                                i1 -= i22;
                                break;
                            case 104:
                                i17 >>= i;
                                i23 = i22;
                                i22 += i22;
                                break;
                            case 105:
                            case 106:
                                Test.instanceCount += 200;
                                break;
                            case 107:
                                i22 += (((i21 * byFld) + s) - i16);
                                break;
                            case 108:
                                i22 += (-17050 + (i21 * i21));
                                break;
                            case 109:
                                sArrFld[i21 + 1] >>= (short)Test.instanceCount;
                                break;
                            case 110:
                                iArr1[i21 + 1] -= (int)198L;
                                break;
                            case 111:
                                Test.lArrFld[i] += i1;
                                break;
                            default:
                                i17 -= -36659;
                            }
                        }
                    }
                }
            } else if (Test.bFld) {
                i1 += s;
            } else {
                iArr1[i + 1] ^= (int)Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i1 i16 = " + i + "," + i1 + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 s i21 = " + i20 + "," + s + "," + i21);
        FuzzerUtils.out.println("i22 f4 d2 = " + i22 + "," + Float.floatToIntBits(f4) + "," +
            Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i23 iArr1 = " + i23 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount byFld Test.bFld = " + Test.instanceCount + "," + byFld + "," +
            (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fArrFld Test.lArrFld sArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld) +
            "," + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
