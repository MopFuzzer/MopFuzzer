// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=11L;
    public static volatile short sFld=8006;
    public volatile double dFld=0.2736;
    public int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 98.107371);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i7, int i8, int i9) {

        int i10=-12, i11=-57261, i12=-32281, i13=62088, iArr[]=new int[N];
        float f=94.886F;
        boolean b=true;
        double d1=104.5681;

        FuzzerUtils.init(iArr, -90);

        i10 = 1;
        while (++i10 < 217) {
            f += Test.instanceCount;
            i7 = (int)Test.instanceCount;
            i9 <<= i10;
            switch (((i10 % 4) * 5) + 26) {
            case 30:
                iArr[i10] += i9;
                i8 = i9;
                i8 |= (int)Test.instanceCount;
                break;
            case 40:
                for (i11 = 1; 7 > i11; ++i11) {
                    b = b;
                    iArr[i10 - 1] = i9;
                    iArr[i11] >>>= i11;
                }
                i13 = 7;
                do {
                    f += (float)d1;
                    i8 >>>= i8;
                } while ((i13 -= 2) > 0);
                break;
            case 41:
                i7 >>>= -4;
                break;
            case 42:
                if (i12 != 0) {
                }
                break;
            default:
                iArr[i10 - 1] = (int)-472273590L;
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + (b ? 1 : 0) + i13 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i5=-12, i6=-26, i14=20500, i15=167, i16=-136, i17=-28128;
        double d2=-110.37103;
        byte by=-53, byArr[]=new byte[N];
        short s=16087;
        float f1=0.227F;

        FuzzerUtils.init(byArr, (byte)-32);

        for (i5 = 3; 202 > i5; i5++) {
            iMeth1(i6, i5, 22534);
            for (i14 = 1; i14 < 8; ++i14) {
                d2 += i5;
                by += (byte)(-105.689F + (i14 * i14));
                i6 *= i14;
                i6 += i15;
                i15 = 160;
                for (i16 = 2; i16 > 1; --i16) {
                    s ^= (short)i14;
                    Test.instanceCount += (i16 ^ (long)f1);
                    d2 = d2;
                    Test.instanceCount *= Test.instanceCount;
                    byArr[i16 - 1] -= (byte)-51138;
                    Test.instanceCount = i14;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i14 + i15 + Double.doubleToLongBits(d2) + by + i16 + i17 + s +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i3, int i4) {

        double d=1.45440;

        i3 -= (int)((0.121826 % (Long.reverseBytes(Test.instanceCount) | 1)) - (-201L - (d * i3)));
        vMeth();
        long meth_res = i3 + i4 + Double.doubleToLongBits(d);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-17686, i1=6, i2=22646, i18=-211, i19=-23583, i20=-20087;
        boolean b1=false;
        float f2=8.1003F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(fArr, 106.71F);

        for (i = 3; i < 152; i++) {
            byte by1=-91;
            iArrFld[i] -= (int)((lArr[i] & (++lArr[i + 1])) - Integer.reverseBytes(i1));
            i1 *= (++iArrFld[i + 1]);
            i2 = 1;
            while (++i2 < 168) {
                Test.instanceCount = ((-iMeth(i, i)) - -31702);
            }
            Test.dArrFld[i + 1] += i;
            by1 *= (byte)Test.instanceCount;
            iArrFld[i - 1] >>= (int)Test.instanceCount;
            if (b1) continue;
            if (b1) {
                for (i18 = 9; i18 < 168; i18++) {
                    i20 = 1;
                    while (++i20 < 2) {
                        f2 *= i19;
                        iArrFld[i] <<= (int)Test.instanceCount;
                        Test.sFld += (short)(-47164 + (i20 * i20));
                        fArr[i18] = i1;
                        i1 += i20;
                        switch ((i20 % 2) + 114) {
                        case 114:
                            lArr[i18 + 1] = -14;
                            dFld = -1.516F;
                            i19 += (((i20 * i19) + i20) - Test.instanceCount);
                            if (b1) break;
                            break;
                        case 115:
                            Test.instanceCount -= Test.instanceCount;
                            i1 += i2;
                            break;
                        }
                        Test.sFld = (short)-20.28F;
                        if (b1) continue;
                        i1 = (int)Test.instanceCount;
                        b1 = b1;
                    }
                    dFld = i18;
                    f2 -= i1;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("b1 i18 i19 = " + (b1 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 f2 lArr = " + i20 + "," + Float.floatToIntBits(f2) + "," +
            FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld dFld = " + Test.instanceCount + "," + Test.sFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
