// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-7018658863126991909L;
    public static boolean bFld=false;
    public static int iFld=18938;
    public byte byFld=-43;
    public short sFld=24178;
    public static float fArrFld[]=new float[N];
    public int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 56.432F);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i2, int i3) {

        short s=14397;
        long l=211L;
        int i4=0, i5=190, i6=4;
        float f3=-2.870F;

        s = (short)Test.instanceCount;
        Test.bFld = Test.bFld;
        for (l = 5; l < 318; ++l) {
            if (true) break;
            Test.instanceCount >>= i4;
            Test.instanceCount -= (long)-1.207F;
            i5 = 1;
            while (++i5 < 5) {
                i6 = 1;
                do {
                    f3 += i4;
                    if (Test.bFld) {
                        Test.fArrFld[i5] -= i5;
                        i4 = -4;
                        i3 += (((i6 * l) + i6) - f3);
                        i2 += (((i6 * i6) + i6) - i2);
                        vMeth_check_sum += i2 + i3 + s + l + i4 + i5 + i6 + Float.floatToIntBits(f3);
                        return;
                    }
                    i2 *= (int)l;
                } while (--i6 > 0);
            }
        }
        vMeth_check_sum += i2 + i3 + s + l + i4 + i5 + i6 + Float.floatToIntBits(f3);
    }

    public static long lMeth(float f2) {

        int i7=7217, i8=42704, i9=-218, i10=-1, i11=23499, i12=15461, i13=-50917, i14=18081, i15=59, i16=194,
            iArr[]=new int[N];
        byte by=113;

        FuzzerUtils.init(iArr, -57);

        vMeth(Test.iFld, -14);
        for (i7 = 5; i7 < 204; i7++) {
            i8 = (int)731705205601748521L;
            for (i9 = i7; i9 < 8; i9++) {
                for (i11 = 1; 1 > i11; i11++) {
                    i8 = i12;
                    iArr[i7 + 1] %= (int)(Test.iFld | 1);
                    f2 += i9;
                    i12 = i10;
                }
                i8 += (((i9 * i10) + i12) - by);
                for (i13 = 1; 1 > i13; i13++) {
                    by *= (byte)-46827L;
                }
            }
            for (i15 = 1; i15 < 8; ++i15) {
                i8 += (int)Test.instanceCount;
                i8 = -4;
            }
        }
        long meth_res = Float.floatToIntBits(f2) + i7 + i8 + i9 + i10 + i11 + i12 + by + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vSmallMeth(float f, int i1, float f1) {


        Test.instanceCount += Math.max((int)(i1 * (Test.instanceCount - i1)), (int)(lMeth(f1) * 55));
        vSmallMeth_check_sum += Float.floatToIntBits(f) + i1 + Float.floatToIntBits(f1);
    }

    public void mainTest(String[] strArr1) {

        int i=-130, i17=-27316, i18=-8691, i19=-5119, i20=-4, i21=52330, i22=64905, i23=238, i24=115, i25=-40357,
            i26=-111, i27=-43;
        float f4=-120.595F;

        i -= (int)(((i - -41) - (i += (int)Test.instanceCount)) - i);
        for (int smallinvoc=0; smallinvoc<464; smallinvoc++) vSmallMeth(f4, Test.iFld, f4);
        iArrFld = iArrFld;
        for (i17 = 2; i17 < 373; ++i17) {
            i >>= i18;
            for (i19 = i17; i19 < 68; i19 += 3) {
                lArrFld[i17] = -29875;
                i += (i19 - f4);
            }
            i ^= -13;
            i18 -= 7;
            i = (int)Test.instanceCount;
            for (i21 = 4; i21 < 68; ++i21) {
                Test.instanceCount += (8840597902947969940L + (i21 * i21));
            }
            for (i23 = 1; i23 < 68; ++i23) {
                for (i25 = 1; i25 < 2; ++i25) {
                    f4 = (float)-16.64696;
                    i = (int)f4;
                    Test.instanceCount = Test.instanceCount;
                    if (Test.bFld) {
                        i18 = i22;
                        iArrFld[i17] = i22;
                        byFld += (byte)i23;
                        Test.instanceCount = Test.iFld;
                    } else if (true) {
                        f4 = i;
                        i27 ^= i24;
                        Test.instanceCount = sFld;
                        Test.iFld -= 0;
                    } else {
                        Test.instanceCount *= 25444;
                        Test.instanceCount >>>= Test.instanceCount;
                    }
                    Test.iFld = i20;
                }
            }
        }

        FuzzerUtils.out.println("i f4 i17 = " + i + "," + Float.floatToIntBits(f4) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.iFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.iFld);
        FuzzerUtils.out.println("byFld sFld Test.fArrFld = " + byFld + "," + sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("iArrFld lArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth lMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
