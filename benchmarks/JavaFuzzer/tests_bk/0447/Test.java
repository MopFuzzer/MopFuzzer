// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static boolean bFld=true;
    public static long lFld=1L;
    public static int iFld=-11;
    public static int iFld1=-8969;
    public static float fFld=-76.578F;
    public static byte byFld=-117;
    public static boolean bArrFld[]=new boolean[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, -50044);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l1) {

        float f=0.89F, f1=-120.727F, f2=48.926F;
        int i9=6, i10=-39;
        double d1=2.98915;
        byte by=-8, byArr1[][]=new byte[N][N];

        FuzzerUtils.init(byArr1, (byte)31);

        for (f = 1; f < 267; ++f) {
            byArr1[(int)(f + 1)][(int)(f)] = (byte)2233;
            i9 = i9;
            i9 = i9;
            if (true) {
                f1 = 1;
                do {
                    if (i9 != 0) {
                    }
                    l1 = i9;
                    for (d1 = 1; 1 < d1; d1 -= 2) {
                        i9 = i9;
                        by = (byte)i10;
                        i9 += (int)(((d1 * i10) + i9) - f1);
                        if (Test.bFld) {
                            i10 = i9;
                        } else if (Test.bFld) {
                            i10 -= (int)l1;
                        } else if (true) {
                            f2 -= -141;
                        } else {
                            Test.iArrFld[(int)(f + 1)] += i10;
                        }
                    }
                } while (++f1 < 6);
            } else if (Test.bFld) {
                l1 >>>= i9;
            } else {
                f2 = i10;
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f) + i9 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) +
            i10 + by + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(byArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth1(int i5, int i6, int i7) {

        long l=-2L;
        int i8=9, i11=-57, i12=-12, i13=-90, i14=13, i15=0, i16=-8, iArr1[][]=new int[N][N];
        float f3=40.699F;

        FuzzerUtils.init(iArr1, -237);

        for (l = 375; 4 < l; l -= 3) {
            if (Test.bFld && (Test.bArrFld[(int)(l - 1)] && (-14 != (iArr1[(i5 >>> 1) % N][(int)(l)]--)))) continue;
            i8 -= (int)((fMeth(l) + 4027258498L) + -1697);
            i6 *= (int)Test.instanceCount;
            Test.iArrFld[(int)(l - 1)] = (int)Test.instanceCount;
            iArr1[(int)(l)][(int)(l + 1)] = i11;
        }
        for (i12 = 12; i12 < 264; i12 += 2) {
            i11 %= (int)(i13 | 1);
            for (i14 = 1; i14 < 12; ++i14) {
                i11 -= i14;
                i8 -= (int)f3;
                i11 = (int)Test.lFld;
                if (Test.bFld) {
                    Test.lFld += (i14 * f3);
                    i16 += (i14 + i11);
                } else {
                    i8 <<= -168;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + l + i8 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f3) + i16 +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i17=13, i18=-11, i20=-37593, i21=-65027, i22=-28454, i23=23153;
        byte by1=-121;
        float f4=108.603F;
        short s=-32381;

        iMeth1(i17, i18, i18);
        i17 += by1;
        i17 = i18;
        Test.iFld = i18;
        Test.lFld = Test.iFld;
        for (int i19 : Test.iArrFld) {
            i17 -= (int)f4;
            for (i20 = 4; i20 > 1; i20 -= 3) {
                i19 += (((i20 * Test.lFld) + Test.iFld1) - Test.lFld);
                for (i22 = 1; i22 < 4; ++i22) {
                    i21 = s;
                    i18 >>= i19;
                    Test.lFld += i23;
                }
            }
            Test.iFld = i20;
            Test.iFld -= i20;
        }
        long meth_res = i17 + i18 + by1 + Float.floatToIntBits(f4) + i20 + i21 + i22 + i23 + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i1=28502, i2=-213, i3=2093, i4=-11, iArr[]=new int[N];
        double d=64.124999, dArr[]=new double[N];
        boolean b=false;
        byte byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 2);
        FuzzerUtils.init(byArr, (byte)92);
        FuzzerUtils.init(lArr, -93L);
        FuzzerUtils.init(dArr, 0.76090);

        iArr[(-222 >>> 1) % N] = i;
        Test.instanceCount <<= i;
        i |= (i++);
        for (i1 = 11; i1 < 279; i1++) {
            i3 = 1;
            do {
                i -= (int)(++d);
                b = (b = b);
                i4 = 1;
                while ((i4 -= 3) > 0) {
                    Test.bArrFld = (Test.bArrFld = (Test.bArrFld = Test.bArrFld));
                    byArr[i1 + 1] *= (byte)iMeth();
                    if (false) continue;
                    switch (((i4 % 2) * 5) + 88) {
                    case 94:
                        iArr[i4] += (int)Test.fFld;
                        i *= (int)Test.fFld;
                        Test.iFld = (int)Test.instanceCount;
                        i2 -= (int)-1.128F;
                        break;
                    case 90:
                        i2 += (((i4 * Test.fFld) + i) - i1);
                        Test.fFld = (float)-1.104857;
                        i2 += i4;
                        break;
                    default:
                        Test.byFld >>= (byte)Test.iFld;
                        Test.fFld *= Test.iFld;
                        switch ((i4 % 5) + 103) {
                        case 103:
                            switch ((i3 % 2) + 39) {
                            case 39:
                                Test.iFld /= (int)(i1 | 1);
                                Test.lFld -= i3;
                                lArr = lArr;
                                Test.lFld <<= i4;
                                break;
                            case 40:
                                dArr[i3] = 5L;
                                break;
                            }
                            Test.fFld += i2;
                            Test.iFld = (int)Test.instanceCount;
                            break;
                        case 104:
                            Test.iFld1 %= (int)(i3 | 1);
                            break;
                        case 105:
                            i2 *= i1;
                            break;
                        case 106:
                            if (b) continue;
                            break;
                        case 107:
                            d += i4;
                        }
                    }
                }
            } while (++i3 < 94);
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 d b = " + i3 + "," + Double.doubleToLongBits(d) + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i4 iArr byArr = " + i4 + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("lArr dArr = " + FuzzerUtils.checkSum(lArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.lFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.lFld);
        FuzzerUtils.out.println("Test.iFld Test.iFld1 Test.fFld = " + Test.iFld + "," + Test.iFld1 + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.bArrFld Test.iArrFld = " + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.bArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
