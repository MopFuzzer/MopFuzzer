// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2828744552368875061L;
    public static double dFld=-1.92904;
    public static byte byFld=-18;
    public static float fFld=24.878F;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -8024);
        FuzzerUtils.init(Test.lArrFld, -110L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i14) {

        int i15=14, i16=22307, i17=6, i18=95, i19=-179, iArr2[]=new int[N];
        short s=6575;
        float f=13.754F;

        FuzzerUtils.init(iArr2, 2);

        i14 = (int)3373830599960233461L;
        for (i15 = 2; i15 < 129; i15++) {
            i17 = 1;
            while (++i17 < 12) {
                if (i16 != 0) {
                    vMeth1_check_sum += i14 + i15 + i16 + i17 + s + i18 + i19 + Float.floatToIntBits(f) +
                        FuzzerUtils.checkSum(iArr2);
                    return;
                }
                s += (short)i15;
                Test.instanceCount -= i16;
                for (i18 = 1; 1 > i18; ++i18) {
                    Test.iArrFld[i17 - 1] += (int)f;
                    Test.dFld = i14;
                    Test.instanceCount <<= -46862;
                    i14 += (((i18 * i17) + Test.byFld) - i15);
                }
                iArr2 = iArr2;
                i16 += (((i17 * i17) + i17) - i17);
                i19 >>>= 17497;
            }
            iArr2[i15 - 1] *= (int)Test.instanceCount;
        }
        vMeth1_check_sum += i14 + i15 + i16 + i17 + s + i18 + i19 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(long l) {

        int i8=-31468, i9=13, i10=-1230, i11=-2, i12=-50, i13=-32486, i20=9, iArr1[]=new int[N];
        short s1=24085;

        FuzzerUtils.init(iArr1, 1);

        i8 += (iArr1[(i8 >>> 1) % N] * (i8++));
        for (i9 = 1; i9 < 178; i9++) {
            i11 = 1;
            do {
                for (i12 = 1; i12 < 1; i12++) {
                    iArr1[i11 - 1] = (i8 -= i11);
                    vMeth1(i11);
                    Test.iArrFld[i9] = Test.byFld;
                    Test.instanceCount = 18745;
                    Test.dFld = Test.instanceCount;
                    iArr1[i9 - 1] -= i12;
                    iArr1[i9 - 1] = (int)Test.instanceCount;
                    s1 += (short)i8;
                    i20 += i20;
                    i20 |= (int)334003625L;
                }
                i13 *= i10;
            } while (++i11 < 9);
        }
        vMeth_check_sum += l + i8 + i9 + i10 + i11 + i12 + i13 + s1 + i20 + FuzzerUtils.checkSum(iArr1);
    }

    public int iMeth(int i6) {

        int i7=14, i21=-13, i22=56511, i23=2, i24=38800, i25=57248, iArr[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 25129);
        FuzzerUtils.init(fArr, 25.133F);

        i7 = 1;
        do {
            iArr[i7] -= (int)(((Test.instanceCount++) * (--Test.instanceCount)) + ((i6 + -10L) + (Test.dFld + i7)));
            fArr[i7 - 1] = (((i7 * i7) * (i7 * i6)) + -30004);
            vMeth(Test.instanceCount);
            Test.instanceCount += Test.instanceCount;
        } while (++i7 < 306);
        Test.lArrFld[(i6 >>> 1) % N] = (long)Test.dFld;
        Test.fFld = Test.instanceCount;
        for (i21 = 6; i21 < 189; ++i21) {
            Test.fFld *= Test.instanceCount;
            for (i23 = 1; i23 < 9; i23++) {
                Test.byFld = (byte)Test.instanceCount;
                i24 += (((i23 * i25) + Test.byFld) - i7);
                i24 += 7;
                Test.iArrFld[i23] = i25;
                Test.fFld = 100.706F;
            }
        }
        long meth_res = i6 + i7 + i21 + i22 + i23 + i24 + i25 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i1=39605, i2=1, i3=-3, i4=0, i5=-15087, i26=128, i27=-8;
        byte by=23;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 0L);

        i *= (int)(-Math.sqrt(i + i));
        i1 = 351;
        do {
            for (i2 = 2; i2 < 72; i2++) {
                for (i4 = 2; i4 > 1; i4 -= 2) {
                    i -= (int)(lArr[i1 - 1] + (-by));
                    i5 = by;
                    Test.dFld += (iMeth(12778) + i3);
                }
                for (i26 = 1; i26 < 2; i26++) {
                    i5 += (i26 + i1);
                    lArr[i26] += (long)Test.fFld;
                    Test.instanceCount += i26;
                    i3 += (((i26 * i26) + i5) - i26);
                    i27 *= (int)Test.instanceCount;
                    i3 += (i26 * i26);
                    i += (((i26 * Test.fFld) + Test.instanceCount) - i5);
                }
                switch (((i1 % 1) * 5) + 53) {
                case 57:
                    i3 -= i5;
                default:
                    i27 += (-52105 + (i2 * i2));
                }
                Test.instanceCount -= Test.instanceCount;
                Test.instanceCount += (((i2 * i26) + i27) - Test.fFld);
                Test.instanceCount -= (long)Test.fFld;
                i3 += (((i2 * Test.fFld) + Test.instanceCount) - i26);
                switch ((i2 % 7) + 19) {
                case 19:
                    i3 += (i2 * Test.instanceCount);
                    i -= -52;
                    Test.iArrFld[i1 + 1] = i4;
                    i5 ^= 61035;
                    break;
                case 20:
                    b = b;
                    i3 <<= i27;
                    break;
                case 21:
                    Test.iArrFld = Test.iArrFld;
                    break;
                case 22:
                case 23:
                    if (b) break;
                    break;
                case 24:
                    Test.instanceCount = i27;
                case 25:
                    Test.iArrFld[i1 + 1] -= (int)Test.instanceCount;
                    break;
                default:
                    Test.iArrFld[i2] <<= i4;
                }
            }
        } while (--i1 > 0);

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
        FuzzerUtils.out.println("by i26 i27 = " + by + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b lArr = " + (b ? 1 : 0) + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld Test.iArrFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
