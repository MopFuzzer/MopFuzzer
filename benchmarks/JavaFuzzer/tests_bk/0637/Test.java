// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4362289467731232902L;
    public static byte byFld=79;
    public static double dFld=-85.94160;
    public static boolean bFld=true;
    public static volatile short sFld=4674;
    public long lFld=5390264107072322024L;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 123);
        FuzzerUtils.init(Test.lArrFld, 2L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5, int i6, int i7) {

        int i8=6, i9=170, i10=-15106, i11=23782, i12=-6760, i13=-8, iArr[]=new int[N];
        double d=1.76658;
        float f1=81.7F, f2=89.813F;

        FuzzerUtils.init(iArr, -152);

        for (i8 = 21; 351 > i8; ++i8) {
            iArr[i8 - 1] *= (int)d;
            Test.instanceCount *= Test.instanceCount;
            i6 += (i8 - f1);
            for (i10 = 1; 5 > i10; i10++) {
                i11 &= i6;
                iArr[i8] -= i10;
                Test.instanceCount -= -14;
                d *= i9;
                Test.instanceCount += (i10 + i5);
                i5 += i10;
                iArr[i10 - 1] *= Test.byFld;
            }
            for (f2 = i8; 5 > f2; f2++) {
                iArr[i8 + 1] <<= i13;
                i13 -= i7;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i10 + i11 +
            Float.floatToIntBits(f2) + i12 + i13 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i4=6, i14=-247;
        float f3=57.406F;

        i4 *= (i4++);
        iMeth1(i4, i4, i4);
        Test.instanceCount = i4;
        i4 += -30863;
        if (Test.bFld) {
            i4 *= (int)Test.instanceCount;
            i14 = 1;
            while (++i14 < 181) {
                switch ((((i14 >>> 1) % 7) * 5) + 2) {
                case 8:
                    switch ((i14 % 2) + 35) {
                    case 35:
                        Test.instanceCount *= -196;
                        break;
                    case 36:
                        f3 *= i4;
                        i4 = i4;
                    }
                    i4 <<= i14;
                    Test.instanceCount += (i14 | i4);
                    break;
                case 7:
                    Test.dFld %= (Test.instanceCount | 1);
                    break;
                case 22:
                    i4 <<= i4;
                    break;
                case 25:
                    i4 = (int)Test.instanceCount;
                case 32:
                    i4 += (12 + (i14 * i14));
                    break;
                case 37:
                    Test.iArrFld[i14] = -214;
                    break;
                case 5:
                    i4 += (int)f3;
                    break;
                }
            }
        } else {
            i4 <<= i14;
        }
        vMeth_check_sum += i4 + i14 + Float.floatToIntBits(f3);
    }

    public static int iMeth() {

        int i2=-102, i3=126, i15=-61, i16=65, i17=59620;
        short s=-12287;

        for (i2 = 1; i2 < 307; i2++) {
            vMeth();
            for (i15 = 1; i15 < 5; i15++) {
                i17 = 1;
                do {
                    Test.instanceCount += i17;
                    i3 += (((i17 * Test.instanceCount) + i3) - Test.byFld);
                    switch (((18823 >>> 1) % 3) + 117) {
                    case 117:
                        try {
                            Test.iArrFld[i2 - 1] = (i17 / i17);
                            i3 = (-172 % i16);
                            i16 = (i17 % -52712);
                        } catch (ArithmeticException a_e) {}
                        Test.dFld *= Test.dFld;
                        i16 = i3;
                        break;
                    case 118:
                        s -= s;
                        break;
                    case 119:
                        Test.instanceCount ^= i17;
                        Test.byFld = (byte)i2;
                        i3 += (i17 + i15);
                        Test.instanceCount += Test.instanceCount;
                        break;
                    default:
                        Test.iArrFld[i2] >>= i3;
                    }
                } while (++i17 < 2);
            }
        }
        long meth_res = i2 + i3 + i15 + i16 + i17 + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-61232, i1=38951, i19=39, i20=10, i21=-13, i22=246, i23=-8, i24=-45, i25=7, i26=6;
        float f=-17.266F, fArr[]=new float[N];
        double d1=42.47922;

        FuzzerUtils.init(fArr, -1.788F);

        for (i = 1; i < 269; ++i) {
            i1 += i;
            i1 += (i * f);
            i1 = iMeth();
            fArr[i + 1] = i;
            i1 += i;
            i1 += (((i * i1) + i) - f);
            f = i1;
            i1 = (int)Test.instanceCount;
            i1 += (i * i);
            f += i;
        }
        for (i19 = 3; i19 < 158; i19++) {
            Test.lArrFld[i19] <<= 186;
            d1 = 1;
            do {
                for (i21 = 1; 1 > i21; i21++) {
                    f -= i1;
                    i1 &= -24;
                    Test.sFld |= Test.byFld;
                    i20 *= -6;
                    if (Test.bFld) break;
                }
            } while (++d1 < 162);
        }
        if (Test.bFld) {
            Test.instanceCount *= (long)d1;
            i23 = 1;
            do {
                if (true) break;
            } while (++i23 < 324);
        } else if (Test.bFld) {
            for (i24 = 13; 388 > i24; i24++) {
                i25 += (((i24 * i22) + Test.instanceCount) - i25);
                i26 = 1;
                while ((i26 += 2) < 67) {
                    i25 >>= i19;
                    f += (((i26 * i22) + i) - i);
                    i25 += (int)lFld;
                }
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i19 i20 d1 = " + i19 + "," + i20 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.sFld lFld = " + (Test.bFld ? 1 : 0) + "," + Test.sFld + "," + lFld);
        FuzzerUtils.out.println("Test.iArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
