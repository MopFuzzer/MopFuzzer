// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=6L;
    public static short sFld=11904;
    public byte byFld=-56;
    public static int iFld=17;
    public static long lFld=231379644L;
    public static volatile int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -53769);
        FuzzerUtils.init(Test.byArrFld, (byte)70);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i9, int i10, long l1) {

        byte by=81;
        int i11=6, i12=-9, i13=-58, i14=51984, i15=-64047, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 41946);
        FuzzerUtils.init(lArr, -2137923981L);

        i9 -= (int)l1;
        by = (byte)i9;
        i10 -= (int)l1;
        Test.sFld = (short)i10;
        for (i11 = 12; i11 < 221; ++i11) {
            i10 -= i11;
            l1 &= -36583;
            Test.sFld <<= (short)i10;
            i13 = 1;
            while ((i13 += 3) < 8) {
                switch ((i11 % 9) + 16) {
                case 16:
                    Test.instanceCount += l1;
                    break;
                case 17:
                    for (i14 = i11; i14 < 4; ++i14) {
                        l1 = i13;
                        i12 = i15;
                        iArr[i14 - 1] += -289;
                    }
                    break;
                case 18:
                    l1 >>>= by;
                    break;
                case 19:
                    lArr[i13 - 1] -= i10;
                case 20:
                    i10 += (-54777 + (i13 * i13));
                    break;
                case 21:
                    iArr[i13 + 1] *= i15;
                    break;
                case 22:
                    lArr[i11 - 1] -= i12;
                    break;
                case 23:
                    i9 += (i13 * i13);
                case 24:
                    i12 += (int)37L;
                    break;
                default:
                    i9 = i14;
                }
            }
        }
        long meth_res = i9 + i10 + l1 + by + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i3) {

        int i4=-9, i5=-245, i6=-13, i7=53, i8=-143, i16=-75, i17=11877;
        float f=-1.701F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 3781L);

        for (i4 = 5; i4 < 130; i4++) {
            for (i6 = 13; i6 > 1; i6 -= 3) {
                i8 = 1;
                while (++i8 < 4) {
                    i5 += iMeth(i7, i5, Test.instanceCount);
                }
                i5 += i6;
                i7 = i6;
                Test.instanceCount &= i6;
                Test.instanceCount += i6;
            }
            f += (((i4 * Test.instanceCount) + Test.sFld) - i7);
            i7 += (i4 ^ i5);
        }
        lArr1[(i5 >>> 1) % N] ^= Test.instanceCount;
        i16 = 1;
        while (++i16 < 182) {
            i17 = 1;
            do {
                Test.iArrFld[i17] -= i3;
                i7 += (((i17 * i6) + i3) - i5);
            } while (++i17 < 9);
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + i16 + i17 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(long l, int i) {

        int i1=-11, i2=14631, i18=96, i19=11, i20=-169, i21=-97, i22=45453;

        for (i1 = 3; i1 < 182; i1++) {
            vMeth1(i1);
            i = 3;
        }
        Test.iArrFld[(i1 >>> 1) % N] >>= (int)Test.instanceCount;
        for (i18 = 15; i18 < 310; i18++) {
            i2 = i19;
            i20 = 6;
            while ((i20 -= 2) > 0) {
                for (i21 = 1; i21 < 2; i21++) {
                    boolean b=true;
                    Test.iArrFld[i21] -= i2;
                    if (b) continue;
                    Test.instanceCount = Test.sFld;
                    i22 = (int)5.247F;
                    i22 = i22;
                }
                i2 -= -8;
            }
            Test.instanceCount >>= 1926410394309196163L;
        }
        vMeth_check_sum += l + i + i1 + i2 + i18 + i19 + i20 + i21 + i22;
    }

    public void mainTest(String[] strArr1) {

        int i23=63159, i24=-64056, i25=-9, i26=-1528, i27=54865, i28=-144, i29=-64, i30=50543;
        long l2=1648924025882440151L;
        boolean b1=true;
        float f2=2.323F;

        vMeth(Test.instanceCount, i23);
        for (i24 = 4; i24 < 198; ++i24) {
            float f1=-6.258F;
            i25 >>= i24;
            f1 += i23;
        }
        l2 = 1;
        while (++l2 < 349) {
            Test.instanceCount += l2;
            Test.sFld *= (short)l2;
        }
        Test.instanceCount *= Test.sFld;
        for (i26 = 3; i26 < 136; i26++) {
            Test.sFld += (short)(((i26 * i23) + Test.instanceCount) - l2);
            Test.instanceCount = byFld;
            if (false) break;
            if (b1) break;
            Test.iArrFld = Test.iArrFld;
            if (b1) continue;
            i28 = 1;
            while (++i28 < 188) {
                Test.iArrFld[i26] *= (int)Test.instanceCount;
                for (i29 = 1; i29 < 1; i29++) {
                    Test.instanceCount = i27;
                    i27 >>= byFld;
                    switch (((i28 % 7) * 5) + 71) {
                    case 78:
                        i23 += (129 + (i29 * i29));
                        Test.sFld *= (short)i28;
                    case 76:
                        Test.lFld -= (long)f2;
                        f2 *= i23;
                        switch ((((-33 >>> 1) % 2) * 5) + 93) {
                        case 102:
                            Test.iFld >>= -54499;
                            Test.sFld *= (short)Test.lFld;
                            byFld -= (byte)i24;
                            Test.lFld += 7;
                            break;
                        case 98:
                            byFld *= (byte)i28;
                        default:
                            i25 += i25;
                        }
                        break;
                    case 104:
                        Test.iFld = Test.sFld;
                        break;
                    case 98:
                        Test.byArrFld[i28] >>= (byte)i28;
                        break;
                    case 105:
                        try {
                            i30 = (i30 % i24);
                            i25 = (49349 % Test.iArrFld[i26]);
                            Test.iFld = (i24 % Test.iArrFld[i29]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 93:
                    case 72:
                        b1 = b1;
                        break;
                    default:
                        i25 = Test.sFld;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("l2 i26 i27 = " + l2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b1 i28 i29 = " + (b1 ? 1 : 0) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 f2 = " + i30 + "," + Float.floatToIntBits(f2));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld byFld = " + Test.instanceCount + "," + Test.sFld + "," +
            byFld);
        FuzzerUtils.out.println("Test.iFld Test.lFld Test.iArrFld = " + Test.iFld + "," + Test.lFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
