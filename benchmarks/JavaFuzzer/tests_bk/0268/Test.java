// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=52377L;
    public static boolean bFld=false;
    public double dFld=117.122245;
    public static int iFld=-134;
    public byte byFld=-51;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 114);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=-210, i6=205, i8=-54669;
        long l1=14L, lArr[][]=new long[N][N];
        double d1=30.112721;
        short s1=-19500;
        float f2=94.556F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, 3207130042L);
        FuzzerUtils.init(byArr, (byte)105);

        for (i5 = 14; i5 < 311; ++i5) {
            for (l1 = 1; l1 < 6; ++l1) {
                switch ((((i6 >>> 1) % 2) * 5) + 52) {
                case 62:
                    d1 -= d1;
                    switch ((int)((l1 % 8) + 89)) {
                    case 89:
                        i8 += (int)l1;
                        Test.iArrFld[i5 - 1] = s1;
                        i6 *= -74;
                        i6 += (51214 + (l1 * l1));
                    case 90:
                        lArr[i5 + 1][(i6 >>> 1) % N] = i6;
                        if (Test.bFld) continue;
                        Test.iArrFld[i5 + 1] >>= i8;
                        byArr[(int)(l1 + 1)] *= (byte)Test.instanceCount;
                        break;
                    case 91:
                        f2 -= i6;
                        Test.instanceCount = i6;
                        break;
                    case 92:
                        lArr[i5 + 1][(int)(l1)] >>= -7826;
                    case 93:
                        i8 = (int)Test.instanceCount;
                        break;
                    case 94:
                        Test.instanceCount >>= i5;
                        break;
                    case 95:
                    case 96:
                        Test.iArrFld[(int)(l1 - 1)] = (int)Test.instanceCount;
                        break;
                    default:
                        Test.instanceCount >>>= i5;
                    }
                    break;
                case 56:
                default:
                    d1 /= (i5 | 1);
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + l1 + i8 + Double.doubleToLongBits(d1) + s1 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(long l) {

        int i4=-79, i9=163, i10=14, iArr[]=new int[N];
        double d=65.48154;
        float f1=-1.647F, fArr[]=new float[N];

        FuzzerUtils.init(iArr, -29956);
        FuzzerUtils.init(fArr, -27.669F);

        i4 += (int)(((i4 / (i4 | 1)) / (((long)(l * d)) | 1)) - ((Test.instanceCount + i4) + (i4 %= (int)2733679434L)));
        i4 = (int)f1;
        iArr[(i4 >>> 1) % N] -= iArr[(i4 >>> 1) % N];
        vMeth1();
        i4 >>>= 10;
        fArr[(i4 >>> 1) % N] *= i4;
        i4 >>= i4;
        for (i9 = 331; i9 > 20; i9--) {
            Test.bFld = Test.bFld;
        }
        i10 += (int)l;
        vMeth_check_sum += l + i4 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i9 + i10 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i3=-7, i11=3, i12=-210, i13=182, i14=13, i15=-18753, i16=0;
        double d2=2.28028, d3=103.66781, dArr[]=new double[N];
        float f3=21.537F, fArr1[]=new float[N];

        FuzzerUtils.init(dArr, -45.68344);
        FuzzerUtils.init(fArr1, 0.424F);

        i3 = 1;
        while (++i3 < 329) {
            vMeth(50L);
        }
        dArr[(i11 >>> 1) % N] *= d2;
        for (d3 = 5; d3 < 194; d3++) {
            for (i13 = 1; i13 < 8; i13++) {
                for (i15 = 2; i15 > 1; i15--) {
                    f3 *= Test.instanceCount;
                    fArr1[i15 + 1] += f3;
                    try {
                        Test.iArrFld[(int)(d3 - 1)] = (i15 / -40640);
                        i14 = (i16 % Test.iArrFld[i13]);
                        i11 = (10 / i3);
                    } catch (ArithmeticException a_e) {}
                    i11 >>>= (int)Test.instanceCount;
                    Test.instanceCount &= i16;
                    Test.instanceCount -= i11;
                    Test.iArrFld = Test.iArrFld;
                    Test.instanceCount = (long)68.861F;
                    Test.instanceCount = Test.instanceCount;
                }
            }
        }
        long meth_res = i3 + i11 + Double.doubleToLongBits(d2) + Double.doubleToLongBits(d3) + i12 + i13 + i14 + i15 +
            i16 + Float.floatToIntBits(f3) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=192, i1=-74, i2=52521, i17=129, i18=-237, i19=-70, i20=-42;
        short s=-30842;
        float f=-1.605F, f4=104.259F;
        long l2=-4L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -185L);

        i = (-(++s));
        for (f = 12; f < 273; ++f) {
            i2 = 96;
            while (--i2 > 0) {
                Test.instanceCount = (iMeth() - 7);
                try {
                    i1 = (i1 / -35874);
                    i1 = (89 % Test.iArrFld[(int)(f - 1)]);
                    Test.iArrFld[i2] = (i1 % 112);
                } catch (ArithmeticException a_e) {}
                for (i17 = 1; i17 > 1; i17 -= 2) {
                    Test.iArrFld[(int)(f)] <<= i1;
                    f4 -= -5;
                    i -= -104;
                    Test.instanceCount -= (long)dFld;
                    i18 *= (int)-472089845664111894L;
                }
                Test.bFld = Test.bFld;
                if (Test.bFld) {
                    for (l2 = 1; l2 < 1; ++l2) {
                        i1 += (int)dFld;
                        i18 <<= (int)l2;
                        i19 += 7;
                        s = (short)Test.iFld;
                        i += (int)(((l2 * i1) + f4) - i2);
                        byFld += (byte)i2;
                        switch ((((i19 >>> 1) % 6) * 5) + 85) {
                        case 101:
                            lArr1[i2 - 1] |= i18;
                            byFld <<= (byte)l2;
                            break;
                        case 110:
                            i19 *= (int)-2638572880L;
                            Test.iArrFld[(int)(f)] = i18;
                            lArr1[(int)(f - 1)] &= -9;
                            break;
                        case 115:
                            byFld += (byte)(((l2 * i1) + l2) - i17);
                            i *= i;
                            s += (short)(l2 ^ l2);
                            i -= i2;
                        case 87:
                            f4 += (3 + (l2 * l2));
                        case 104:
                            i1 += i19;
                        case 99:
                            Test.iArrFld[(int)(f)] -= (int)l2;
                            break;
                        }
                    }
                } else if (Test.bFld) {
                    Test.instanceCount -= i19;
                } else if (Test.bFld) {
                    i20 += (((i2 * i2) + Test.iFld) - i1);
                }
            }
        }

        FuzzerUtils.out.println("i s f = " + i + "," + s + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i1 i2 i17 = " + i1 + "," + i2 + "," + i17);
        FuzzerUtils.out.println("i18 f4 l2 = " + i18 + "," + Float.floatToIntBits(f4) + "," + l2);
        FuzzerUtils.out.println("i19 i20 lArr1 = " + i19 + "," + i20 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld dFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0)
            + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.iFld byFld Test.iArrFld = " + Test.iFld + "," + byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
