// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static byte byFld=113;
    public static short sFld=6103;
    public int iFld=0;
    public static volatile boolean bFld=false;
    public static volatile float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 1.394F);
        FuzzerUtils.init(Test.iArrFld, 1);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i5) {

        int i6=78, i7=218, i8=7, i9=3, i10=-47050, iArr[]=new int[N];
        double d=-1.85322;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 36882L);
        FuzzerUtils.init(iArr, -47);

        for (i6 = 6; i6 < 157; ++i6) {
            byte by=-80;
            for (i8 = i6; i8 < 10; i8++) {
                i9 -= (int)53819L;
                i5 += (int)-91.536F;
                i5 >>>= i6;
                Test.fArrFld[i8] = i7;
                i10 = 1;
                while (++i10 < 1) {
                    i5 *= i9;
                    i7 -= i7;
                    d -= -6919;
                    i5 ^= i6;
                    lArr[i10] = i7;
                }
                iArr[i8 + 1] *= -25643;
            }
            i7 -= by;
            i9 += (i6 * i9);
        }
        vMeth1_check_sum += l + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i3, int i4) {

        long l1=207L;
        int i11=25678, i12=9, i13=246, i14=-5, i15=13;
        float f1=9.578F;

        vMeth1(Test.instanceCount, i3);
        Test.instanceCount = i3;
        for (l1 = 10; l1 < 198; l1++) {
            i4 = (int)-104.8362;
            f1 += (-15 + (l1 * l1));
            for (i12 = 8; i12 > 1; --i12) {
                Test.instanceCount -= i3;
                f1 += l1;
                Test.instanceCount += (((i12 * i4) + Test.instanceCount) - i12);
                f1 -= i4;
            }
            for (i14 = 1; i14 < 8; i14++) {
                Test.iArrFld[(int)(l1 - 1)] -= i3;
                i11 += (i14 + i4);
            }
        }
        i13 -= i12;
        i3 = i4;
        long meth_res = i3 + i4 + l1 + i11 + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i1=46, i2=-10651, i16=-102, i17=10;
        float f=-1.836F;
        double d1=-2.70140;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -122L);

        for (i1 = 7; i1 < 270; ++i1) {
            i = (i2 - (++i2));
            f += (iMeth(i1, 0) - Test.instanceCount);
            lArr1[i1] += (long)1.88157;
            f += (float)d1;
            i2 >>= i;
        }
        Test.instanceCount = i2;
        for (i16 = 5; i16 < 204; i16++) {
            i2 = (int)-10L;
            Test.byFld += (byte)Test.instanceCount;
            Test.instanceCount *= i1;
            i2 = i1;
            Test.iArrFld[i16 - 1] *= Test.sFld;
            i = Test.byFld;
            Test.iArrFld[i16 + 1] = (int)2.989F;
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i16 + i17 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i18=10, i19=18227, i20=-7571, i21=-45393, i22=-10, i23=177, i24=128, i25=-2, i26=1, i27=-90, i28=-5;
        double d2=25.108730;
        float f2=104.1012F;
        long l2=1558336837L;

        vMeth(11);
        Test.fArrFld[(i18 >>> 1) % N] -= Test.instanceCount;
        i19 -= (int)Test.instanceCount;
        i20 = 1;
        do {
            d2 *= i20;
            for (i21 = 3; i21 < 99; ++i21) {
                i22 <<= Test.byFld;
            }
            i23 += i21;
            for (i24 = 99; 6 < i24; i24--) {
                f2 = i25;
                for (l2 = 1; l2 < 2; ++l2) {
                    iFld += (int)(((l2 * i21) + l2) - i25);
                    Test.iArrFld[(int)(l2 + 1)] = i23;
                    Test.iArrFld[(int)(l2)] = i24;
                    f2 += (l2 * i19);
                    i18 = i20;
                    i25 += (int)1.628F;
                }
                for (i27 = 1; 2 > i27; ++i27) {
                    i19 = (int)l2;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)8);
                    switch (((i26 >>> 1) % 2) + 2) {
                    case 2:
                        Test.instanceCount = l2;
                        Test.iArrFld[i27 - 1] >>= i27;
                        break;
                    case 3:
                        switch ((i20 % 1) + 41) {
                        case 41:
                            Test.instanceCount <<= i23;
                            i18 >>= i26;
                            i22 -= i28;
                            Test.instanceCount -= i20;
                            break;
                        default:
                            Test.bFld = Test.bFld;
                            Test.iArrFld[i24] += (int)l2;
                        }
                        break;
                    }
                }
            }
        } while (++i20 < 255);

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("d2 i21 i22 = " + Double.doubleToLongBits(d2) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("f2 l2 i26 = " + Float.floatToIntBits(f2) + "," + l2 + "," + i26);
        FuzzerUtils.out.println("i27 i28 = " + i27 + "," + i28);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("iFld Test.bFld Test.fArrFld = " + iFld + "," + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
