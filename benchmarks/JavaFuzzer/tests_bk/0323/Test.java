// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=9132074709570908523L;
    public static boolean bFld=true;
    public static double dFld=1.47554;
    public static short sFld=19082;
    public float fFld=-3.528F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 221);
        FuzzerUtils.init(Test.lArrFld, 27424L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1) {

        int i9=9;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -24795L);

        lArr[(102 >>> 1) % N] *= i9;
        Test.iArrFld[(4 >>> 1) % N] = i9;
        long meth_res = Float.floatToIntBits(f1) + i9 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d1, int i5, int i6) {

        int i7=-60520, i8=-204, i10=0, i11=37499, i12=-20417;
        float f2=111.739F, f3=-52.326F, f4=14.371F;
        short s=28369;

        for (i7 = 1; i7 < 345; ++i7) {
            iMeth(f2);
            switch ((i7 % 2) + 29) {
            case 29:
                Test.instanceCount >>= i8;
                break;
            case 30:
                i5 += (i7 + Test.instanceCount);
                Test.instanceCount = i8;
                break;
            }
            i8 += (i7 - Test.instanceCount);
            f2 += f2;
            switch ((i7 % 4) + 106) {
            case 106:
                for (i10 = 1; i10 < 5; i10++) {
                    i6 += (int)f2;
                    for (f3 = i10; f3 < 2; ++f3) {
                        s += (short)(f3 - i11);
                        i11 >>= i12;
                        f4 += (((f3 * i10) + i8) - i10);
                    }
                }
                break;
            case 107:
            case 108:
                i8 -= i7;
                break;
            case 109:
                if (Test.bFld) break;
                break;
            default:
                Test.lArrFld[i7 - 1] = i10;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + i10 + i11 +
            Float.floatToIntBits(f3) + i12 + s + Float.floatToIntBits(f4);
    }

    public static long lMeth(int i4) {

        int i13=254, i14=235, i15=-120, i16=-71, i17=49911, i18=9;
        float f5=0.524F;
        byte by=8;

        vMeth(Test.dFld, -6, i4);
        for (i13 = 11; 229 > i13; ++i13) {
            i14 += (i13 - f5);
            i14 <<= i13;
            for (i15 = 7; i15 > 1; i15 -= 2) {
                for (i17 = 1; i17 < 3; ++i17) {
                    Test.bFld = Test.bFld;
                    i18 = -56895;
                    Test.instanceCount *= i15;
                    i4 = i18;
                    switch (((i13 % 10) * 5) + 48) {
                    case 67:
                        Test.iArrFld[i17] = i13;
                        by |= (byte)i18;
                        break;
                    case 72:
                        i16 -= i16;
                        break;
                    case 98:
                        f5 += i17;
                        break;
                    case 96:
                        if (Test.bFld) break;
                        break;
                    case 53:
                        by += (byte)(((i17 * i15) + i13) - f5);
                        break;
                    case 57:
                        i4 = i17;
                        break;
                    case 77:
                        Test.lArrFld[i17] += (long)112.512F;
                        break;
                    case 62:
                        f5 += -10421;
                        break;
                    case 71:
                        Test.dFld = i18;
                    case 55:
                        i14 *= 1;
                        break;
                    }
                }
            }
        }
        long meth_res = i4 + i13 + i14 + Float.floatToIntBits(f5) + i15 + i16 + i17 + i18 + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=0.19974;
        int i=31, i1=9, i2=-93, i3=0;
        float f=76.421F, fArr[][]=new float[N][N];
        byte by1=-55, byArr[]=new byte[N];
        long l=-24L;

        FuzzerUtils.init(byArr, (byte)56);
        FuzzerUtils.init(fArr, 0.331F);

        for (d = 5; d < 125; ++d) {
            switch ((int)((d % 8) + 88)) {
            case 88:
                for (i1 = 8; 209 > i1; ++i1) {
                    for (f = i1; f < 2; ++f) {
                        lMeth(i);
                        Test.iArrFld[(int)(d - 1)] = i3;
                        Test.dFld = 47L;
                        byArr[(int)(d)] += (byte)3755878790L;
                        Test.instanceCount = i;
                        i3 += (int)(8116L + (f * f));
                        Test.instanceCount -= Test.sFld;
                        i = by1;
                        i3 = (int)f;
                        Test.lArrFld[i1] += i;
                    }
                    i3 = i1;
                    l = 1;
                    while (++l < 2) {
                        fFld -= Test.instanceCount;
                        Test.sFld += (short)l;
                        Test.dFld -= i1;
                        Test.instanceCount += (((l * Test.sFld) + i) - f);
                        fFld = -5;
                        Test.iArrFld[(int)(d)] *= i1;
                        fFld = 28721;
                        fFld = -35318;
                    }
                    i -= (int)l;
                    i3 += (int)l;
                    i3 += 136;
                    fArr[i1][i1 + 1] = i1;
                }
                by1 &= (byte)i3;
                break;
            case 89:
                Test.bFld = Test.bFld;
                break;
            case 90:
                Test.lArrFld[(int)(d - 1)] = (long)d;
                break;
            case 91:
                i2 -= i;
                break;
            case 92:
                Test.sFld <<= (short)i1;
                break;
            case 93:
                i = i1;
                break;
            case 94:
                if (Test.bFld) break;
            case 95:
                fFld *= f;
                break;
            default:
                i3 = (int)l;
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 f i3 = " + i2 + "," + Float.floatToIntBits(f) + "," + i3);
        FuzzerUtils.out.println("by1 l byArr = " + by1 + "," + l + "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.sFld fFld Test.iArrFld = " + Test.sFld + "," + Float.floatToIntBits(fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
