// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static volatile boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2740L);
        FuzzerUtils.init(Test.byArrFld, (byte)-101);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, int i4) {

        int i5=-37488, i6=52328, i7=51205, i8=-56, i9=-186, i10=53615, i11=-3, i12=30492, i13=-240, iArr1[]=new int[N];
        float f1=0.153F;
        byte by=-37;
        boolean b=false;
        double dArr[]=new double[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(dArr, 0.33167);
        FuzzerUtils.init(iArr1, 7);
        FuzzerUtils.init(lArr, -57206L);

        i5 = 1;
        do {
            dArr[(i3 >>> 1) % N] *= f1;
            iArr1[i5 - 1] *= i5;
        } while (++i5 < 362);
        for (i6 = 6; i6 < 136; i6 += 3) {
            by = (byte)i3;
            i7 <<= -65;
            Test.instanceCount += (i6 - i5);
        }
        for (i8 = 4; i8 < 233; i8++) {
            for (i10 = 1; i10 < 7; i10++) {
                switch ((i10 % 8) + 69) {
                case 69:
                    by = (byte)i11;
                    for (i12 = i8; i12 < 2; ++i12) {
                        i3 += (int)Test.instanceCount;
                    }
                    break;
                case 70:
                    lArr[i8][i8 + 1] += i4;
                case 71:
                    i3 += i10;
                    break;
                case 72:
                    b = b;
                    break;
                case 73:
                    i11 += (i10 + f1);
                    break;
                case 74:
                    i11 = 2;
                case 75:
                    i4 *= (int)f1;
                case 76:
                    lArr[i10 + 1][i8 + 1] = i6;
                    break;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + by + i8 + i9 + i10 + i11 + i12 + i13 +
            (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i) {

        int i1=5, i2=-14, iArr[]=new int[N];
        float f=-1.706F;

        FuzzerUtils.init(iArr, 158);

        for (i1 = 14; i1 < 243; ++i1) {
            iArr = (iArr = (iArr = (iArr = iArr)));
            f = Test.instanceCount;
            vMeth2(i2, i1);
            i = i1;
            i2 += (i1 + i);
        }
        vMeth1_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i14=-8, i15=-151, i16=-2, i17=12, i18=2, iArr2[]=new int[N];
        long l=-233L;
        float f2=58.119F;

        FuzzerUtils.init(iArr2, 8);

        vMeth1(19728);
        Test.instanceCount = i14;
        for (i15 = 12; i15 < 241; ++i15) {
            for (l = i15; l < 7; ++l) {
                iArr2[(int)(l - 1)] >>>= i16;
                Test.instanceCount += l;
                i16 |= i14;
                for (f2 = l; f2 < 1; ++f2) {
                    if (Test.bFld) {
                        i17 = 0;
                    } else if (Test.bFld) {
                        Test.instanceCount %= (i16 | 1);
                        Test.lArrFld[(int)(f2)] += i15;
                        Test.instanceCount >>>= i18;
                        i17 = i15;
                        vMeth_check_sum += i14 + i15 + i16 + l + i17 + Float.floatToIntBits(f2) + i18 +
                            FuzzerUtils.checkSum(iArr2);
                        return;
                    } else {
                        Test.lArrFld[(int)(l)] = (long)f2;
                    }
                }
            }
        }
        vMeth_check_sum += i14 + i15 + i16 + l + i17 + Float.floatToIntBits(f2) + i18 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i19=12, i20=8719, i21=19, i22=-168, i23=0, i24=13, i25=53323, i26=-54661, i27=-22468, i28=-45845,
            i29=58078, i30=-4, i31=35, i32=-6, i33=12, i34=-35032, i35=-14;
        float f3=0.909F;
        double d=-1.32820;

        vMeth();
        for (i19 = 10; i19 < 229; ++i19) {
            Test.instanceCount >>= i19;
            i20 = (int)f3;
        }
        i21 -= (int)3L;
        for (i22 = 7; i22 < 148; ++i22) {
            for (i24 = i22; i24 < 178; i24++) {
                Test.instanceCount = -29730;
            }
            Test.instanceCount -= i23;
            i21 -= (int)Test.instanceCount;
            for (i26 = i22; 178 > i26; ++i26) {
                i27 = i22;
                i20 = (int)37503L;
                i27 &= i24;
                if (Test.bFld) break;
                i25 += i19;
                i27 += (((i26 * i22) + i27) - i20);
                Test.byArrFld[i26] *= (byte)i22;
            }
        }
        for (i28 = 8; i28 < 206; ++i28) {
            d *= Test.instanceCount;
            f3 = Test.instanceCount;
            i23 = 7219;
        }
        for (i30 = 339; i30 > 12; --i30) {
            i29 += (i30 * i30);
            Test.instanceCount -= i25;
            for (i32 = 1; i32 < 77; i32++) {
                for (i34 = 1; i34 < 2; ++i34) {
                    i33 += i34;
                    d = i33;
                    i29 += i34;
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 f3 = " + i19 + "," + i20 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("d i30 i31 = " + Double.doubleToLongBits(d) + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 i33 i34 = " + i32 + "," + i33 + "," + i34);
        FuzzerUtils.out.println("i35 = " + i35);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.lArrFld = " + Test.instanceCount + "," + (Test.bFld
            ? 1 : 0) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
