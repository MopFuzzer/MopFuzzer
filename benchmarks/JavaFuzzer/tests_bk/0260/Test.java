// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5849440480236436845L;
    public static float fFld=81.242F;
    public static int iFld=10;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 73L);
        FuzzerUtils.init(Test.iArrFld, -118);
    }

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        float f=-2.411F;
        int i6=56491, i7=66, i8=-14, i9=-10, i10=151, i11=54592;
        double d=0.102716;
        byte by=-109;
        short s1=13619;
        boolean b=false;

        Test.lArrFld[(-235 >>> 1) % N] &= Test.instanceCount;
        for (f = 361; 3 < f; f -= 3) {
            long l2=-3276113731L;
            i6 = i6;
            Test.fFld += (f * l2);
            l2 = i6;
            Test.iArrFld[(int)(f + 1)] = Test.iArrFld[(int)(f + 1)];
            for (d = 1; 13 > d; ++d) {
                by >>= (byte)l1;
                Test.iFld = s1;
            }
            Test.iFld = i6;
            for (i8 = 1; i8 < 13; ++i8) {
                i9 += (((i8 * Test.instanceCount) + Test.iFld) - Test.iFld);
                for (i10 = 1; i10 < 2; i10++) {
                    if (b) break;
                    i9 = i7;
                }
            }
        }
        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + i6 + Double.doubleToLongBits(d) + i7 + by + s1 + i8 + i9 +
            i10 + i11 + (b ? 1 : 0);
    }

    public static void vMeth(int i3, int i4, int i5) {


        i3 = (int)((~(i5 + Test.instanceCount)) - i3);
        vMeth1(Test.instanceCount);
        i3 = (int)51672L;
        Test.instanceCount = Test.instanceCount;
        vMeth_check_sum += i3 + i4 + i5;
    }

    public static short sMeth() {

        int i1=44591, i2=-38, i12=56623, i13=-14370, i14=-14, i15=55;
        boolean b1=false;

        Test.instanceCount = i1;
        Test.fFld *= (Test.fFld = Integer.reverseBytes(4 + (-(-(i1 % (i2 | 1))))));
        for (long l : Test.lArrFld) {
            vMeth(i1, Test.iFld, 28);
            i1 *= (int)Test.instanceCount;
            i2 = i1;
            i2 ^= i1;
        }
        i2 += i2;
        i12 = 1;
        do {
            byte by1=-25;
            if (b1) continue;
            i1 += by1;
            i13 = 1;
            do {
                for (i14 = 1; i14 < 1; ++i14) {
                    Test.instanceCount *= -4L;
                    Test.iFld /= (int)(Test.iFld | 1);
                }
            } while (++i13 < 6);
        } while (++i12 < 291);
        long meth_res = i1 + i2 + i12 + (b1 ? 1 : 0) + i13 + i14 + i15;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-35821;
        short s=-2667;

        i = (-(i / (i | 1)));
        s += sMeth();

        FuzzerUtils.out.println("i s = " + i + "," + s);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
