// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=228L;
    public float fFld=-56.291F;
    public static int iFld=-3;
    public static volatile boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static volatile byte byArrFld[]=new byte[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
        FuzzerUtils.init(Test.byArrFld, (byte)59);
        FuzzerUtils.init(Test.sArrFld, (short)26036);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        int i6=44393, i7=-6, i8=-61996, i9=0, i10=63841;
        short s=-26580;
        boolean b=false;
        float f=-2.92F;

        i6 = 1;
        do {
            Test.iFld /= (int)-81L;
        } while (++i6 < 208);
        Test.iFld -= s;
        for (i7 = 2; i7 < 344; ++i7) {
            if (b) {
                Test.instanceCount += (37 + (i7 * i7));
                for (i9 = 5; 1 < i9; i9 -= 3) {
                    i5 = Test.iFld;
                    i5 *= (int)Test.instanceCount;
                    Test.iFld >>>= i5;
                    i10 -= s;
                    i10 += (i9 * Test.instanceCount);
                    if (b) break;
                    Test.iArrFld[i7 - 1] = i6;
                }
                f += i6;
            } else {
                i8 = -247;
            }
        }
        vMeth1_check_sum += i5 + i6 + s + i7 + i8 + i9 + i10 + (b ? 1 : 0) + Float.floatToIntBits(f);
    }

    public static long lMeth(int i2) {

        int i3=-5, i4=165;
        double d=-2.46816;
        boolean b1=false;
        byte by=-64;
        float f1=49.252F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -8L);

        for (i3 = 198; 9 < i3; i3 -= 2) {
            vMeth1(Test.iFld);
            lArr[i3 + 1] -= (long)d;
            i4 += (int)1.266F;
            Test.iArrFld[i3 + 1] *= 25539;
            Test.instanceCount += i4;
            switch (((i3 % 3) * 5) + 37) {
            case 43:
                b1 = b1;
                switch ((i3 % 2) + 8) {
                case 8:
                    switch ((((i4 >>> 1) % 7) * 5) + 108) {
                    case 131:
                        i2 <<= -6;
                        try {
                            i4 = (i3 / -1453192960);
                            Test.iArrFld[i3 + 1] = (Test.iArrFld[i3 + 1] % Test.iArrFld[i3 - 1]);
                            Test.iFld = (i3 / -1462650075);
                        } catch (ArithmeticException a_e) {}
                        Test.iFld = by;
                        break;
                    case 129:
                        i4 >>= i2;
                    case 136:
                        i4 += (i3 + f1);
                    case 124:
                        Test.instanceCount += i4;
                        break;
                    case 128:
                        Test.byArrFld[i3 - 1] -= (byte)i2;
                        break;
                    case 109:
                        Test.sArrFld[i3 + 1] = (short)Test.instanceCount;
                        break;
                    case 134:
                    default:
                        Test.iFld = 95;
                    }
                    break;
                case 9:
                    f1 = -36628;
                default:
                    Test.iFld -= (int)Test.instanceCount;
                }
            case 38:
                f1 = Test.instanceCount;
                break;
            case 48:
                i4 = i4;
            }
        }
        long meth_res = i2 + i3 + i4 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + by + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i=-76, i1=35277, i11=4, i12=-10, i13=-12, i14=-12;
        boolean b2=false;
        double d1=0.57544;

        i = 1;
        while (++i < 331) {
            i1 -= (int)(fFld + lMeth(i1));
            i1 *= -39945;
            switch (((i >>> 1) % 2) + 95) {
            case 95:
                for (i11 = 5; i11 > 1; --i11) {
                    fFld += i11;
                    b2 = b2;
                    i1 += (((i11 * i12) + i1) - Test.instanceCount);
                    if (Test.iFld != 0) {
                        vMeth_check_sum += i + i1 + i11 + i12 + (b2 ? 1 : 0) + i13 + Double.doubleToLongBits(d1) + i14;
                        return;
                    }
                    Test.iArrFld[i11] <<= (int)Test.instanceCount;
                    switch (((i11 % 2) * 5) + 56) {
                    case 64:
                        i13 = 1;
                        while (++i13 < 2) {
                            d1 -= i13;
                            i1 += i13;
                            if (true) continue;
                        }
                        break;
                    case 63:
                        fFld -= Test.instanceCount;
                        break;
                    }
                }
                break;
            case 96:
                i14 += (i * Test.instanceCount);
            }
        }
        vMeth_check_sum += i + i1 + i11 + i12 + (b2 ? 1 : 0) + i13 + Double.doubleToLongBits(d1) + i14;
    }

    public void mainTest(String[] strArr1) {

        int i15=-19280, i16=64, i17=42824, i18=-38, i19=1;
        float f2=-69.110F;
        byte by1=114;
        short s1=-1696;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -27758L);

        vMeth();
        Test.iArrFld = FuzzerUtils.int1array(N, (int)52);
        Test.iFld += -5;
        lArr1[(Test.iFld >>> 1) % N] |= Test.iFld;
        Test.instanceCount *= -208152187L;
        for (i15 = 7; i15 < 294; i15++) {
            fFld += i15;
            for (i17 = 88; i17 > 5; i17 -= 3) {
                i16 <<= i18;
                Test.instanceCount += (i17 * i17);
                lArr1[i17] -= i18;
                for (f2 = 1; 4 > f2; ++f2) {
                    i18 = i18;
                    i19 = i17;
                    Test.bFld = Test.bFld;
                    i16 += (int)(f2 * f2);
                    i16 -= i19;
                    lArr1 = lArr1;
                    switch ((i15 % 2) + 7) {
                    case 7:
                        Test.iArrFld[i17] >>>= i16;
                        by1 += (byte)Test.instanceCount;
                        i16 -= (int)-1.658F;
                        s1 <<= (short)-98;
                        break;
                    case 8:
                        Test.iFld += (int)(((f2 * i17) + Test.instanceCount) - by1);
                        i16 += (int)((long)f2 ^ Test.instanceCount);
                        if (Test.bFld) break;
                        Test.iFld += (int)((long)f2 | Test.iFld);
                        break;
                    }
                    i16 = i18;
                    if (Test.bFld) break;
                }
            }
            Test.iArrFld = FuzzerUtils.int1array(N, (int)11);
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 f2 i19 = " + i18 + "," + Float.floatToIntBits(f2) + "," + i19);
        FuzzerUtils.out.println("by1 s1 lArr1 = " + by1 + "," + s1 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.bFld Test.iArrFld Test.byArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
