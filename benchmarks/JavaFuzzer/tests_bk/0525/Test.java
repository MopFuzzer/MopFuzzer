// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=6196L;
    public static byte byFld=1;
    public static volatile int iFld=-3;
    public double dFld=-1.13201;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 12);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1, float f2, long l) {

        int i11=2587, i12=161, i13=12843, i14=-9, i15=118, i16=-11, i17=-9;

        i11 <<= -9;
        switch (((27514 >>> 1) % 2) + 107) {
        case 107:
            for (i12 = 3; i12 < 158; ++i12) {
                for (i14 = i12; i14 < 10; ++i14) {
                    Test.byFld += (byte)(i14 * i14);
                    i15 += (i14 * i11);
                    for (i16 = 1; i16 < 1; i16++) {
                        i15 >>= i13;
                        i11 -= 220;
                        Test.iArrFld[i16] &= i13;
                        i13 += Test.iFld;
                    }
                    Test.byFld += (byte)(i14 + i16);
                    f1 *= Test.instanceCount;
                    Test.iArrFld[i12] = i16;
                    if (i11 != 0) {
                    }
                }
            }
        case 108:
            i15 >>= i11;
        default:
            Test.iArrFld[(i13 >>> 1) % N] = (int)0L;
        }
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + l + i11 + i12 + i13 + i14 + i15 + i16 +
            i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i7=-10478, i8=6, i9=14, i10=-14, i19=-28979, i20=-89, i21=-41319, i22=253;
        float f3=1.1013F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -102.100926);

        for (i7 = 6; i7 < 282; i7 += 3) {
            for (i9 = 1; 17 > i9; i9++) {
                i8 = (iMeth(-1.698F, f3, Test.instanceCount) * i9);
                i8 += (int)Test.instanceCount;
                Test.iArrFld[i9 - 1] *= i7;
                Test.iArrFld[i7] |= Test.iFld;
            }
            Test.iArrFld[i7] += i9;
        }
        for (int i18 : Test.iArrFld) {
            for (i19 = 4; i19 > 1; i19--) {
                dArr[i19 - 1] = -8343453841643302230L;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test.iArrFld[i21] -= (int)Test.instanceCount;
                    i20 += (i21 + f3);
                    i20 = (int)Test.instanceCount;
                }
                try {
                    Test.iArrFld[i19] = (243 % i9);
                    i20 = (Test.iArrFld[i19] % i8);
                    Test.iFld = (Test.iFld / -237);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + Float.floatToIntBits(f3) + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(float f, int i1) {

        int i2=-14, i3=248, i4=-14, i5=11718, i6=-223;
        double d=-1.128883;
        short s=28914;

        for (i2 = 3; i2 < 186; ++i2) {
            Test.iArrFld[i2 + 1] |= Test.iArrFld[i2 - 1];
            for (i4 = 1; i4 < 9; ++i4) {
                i6 = 1;
                while (++i6 < 2) {
                    i1 += (i6 ^ i4);
                    d -= i6;
                    Test.iArrFld = (Test.iArrFld = (Test.iArrFld = Test.iArrFld));
                    d -= (-((i5 / (i5 | 1)) * d));
                    i3 &= (~Integer.reverseBytes(s * 107));
                }
                vMeth1();
                f += (i4 * i4);
                i1 = (int)f;
                d += 1.129381;
                if (Test.iFld != 0) {
                    vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + i5 + i6 +
                        Double.doubleToLongBits(d) + s;
                    return;
                }
            }
        }
        i5 &= Test.iFld;
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + s;
    }

    public void mainTest(String[] strArr1) {

        int i=42086, i23=-150, i24=2, i25=13666, i26=-14, i27=-24640, i28=-52903;
        float f4=0.641F;
        short s1=-19445;

        i = 1;
        do {
            vMeth(f4, 27393);
            switch (((i % 3) * 5) + 38) {
            case 41:
                Test.instanceCount += (i * i);
                i23 = 1;
                do {
                    Test.iFld += (52715 + (i23 * i23));
                    Test.instanceCount *= i23;
                    dFld += i;
                    Test.iFld *= Test.iFld;
                    switch (((Test.iFld >>> 1) % 1) + 122) {
                    case 122:
                        if (bFld) continue;
                        Test.iFld = i23;
                        s1 >>= (short)0;
                    }
                    for (i24 = 1; i24 < 4; ++i24) {
                        Test.iFld = (int)Test.instanceCount;
                        i25 -= (int)Test.instanceCount;
                        i25 <<= i26;
                        i25 += (i24 - i24);
                        Test.byFld += (byte)i23;
                        Test.instanceCount -= (long)f4;
                        Test.iFld -= Test.iFld;
                        Test.instanceCount += i24;
                        Test.iFld -= Test.iFld;
                    }
                    Test.iFld += (i23 * i23);
                } while ((i23 += 3) < 124);
                for (i27 = 124; i27 > 4; --i27) {
                    Test.iFld = (int)dFld;
                    switch (((i27 % 2) * 5) + 125) {
                    case 126:
                        i28 += i27;
                        f4 -= -62682;
                        break;
                    case 132:
                        i26 += i27;
                        break;
                    }
                }
            case 53:
                dFld += i28;
            case 39:
                s1 = (short)i23;
                break;
            }
        } while (++i < 202);

        FuzzerUtils.out.println("i f4 i23 = " + i + "," + Float.floatToIntBits(f4) + "," + i23);
        FuzzerUtils.out.println("s1 i24 i25 = " + s1 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("dFld bFld Test.iArrFld = " + Double.doubleToLongBits(dFld) + "," + (bFld ? 1 : 0) +
            "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
