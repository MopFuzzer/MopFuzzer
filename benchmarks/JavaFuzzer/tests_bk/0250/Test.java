// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:59 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=57L;
    public static short sFld=-22317;
    public static int iFld=62029;
    public static volatile boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static volatile byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.756F);
        FuzzerUtils.init(Test.byArrFld, (byte)-56);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i7) {


        i7 = i7;
        vMeth_check_sum += i7;
    }

    public static long lMeth() {

        int i6=19424, i8=-162, i9=13, i10=-68;
        float f1=15.104F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 6L);

        i6 -= (int)-1L;
        vMeth(i6);
        for (i8 = 17; i8 < 288; ++i8) {
            i6 = (int)Test.instanceCount;
            if (i6 != 0) {
            }
            lArr[i8 - 1] *= i8;
            i9 ^= i9;
            i10 = 1;
            do {
                i9 = i10;
                f1 = 1;
                do {
                    float f2=-2.206F;
                    i6 += (int)((long)f1 | i10);
                    i6 += (int)f1;
                    i6 *= i6;
                    f2 *= i6;
                    i6 += i6;
                } while (++f1 < 1);
            } while (++i10 < 6);
        }
        long meth_res = i6 + i8 + i9 + i10 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(long l, int i3) {

        double d1=2.15732;
        int i4=-82, i11=-10, i12=-7208;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 88L);

        for (d1 = 271; d1 > 11; --d1) {
            int i5=-65180;
            i4 *= i5;
            i4 *= i5;
            i5 ^= (int)lMeth();
            i3 = i5;
            i5 += (int)l;
            lArr1[(int)(d1)] = -234;
            for (i11 = 6; i11 > 1; i11--) {
                i5 += i5;
            }
        }
        long meth_res = l + i3 + Double.doubleToLongBits(d1) + i4 + i11 + i12 + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-29217, i1=252, i2=-118, i13=0, i14=10276, i15=14, i16=-13, iArr[]=new int[N];
        double d=-61.87208, d2=47.75501;
        float f=-74.24F;

        FuzzerUtils.init(iArr, 2);

        for (i = 11; i < 370; i++) {
            for (d = 3; 70 > d; ++d) {
                i1 = (((i1 - i1) - (i * i)) * (Test.sFld + i1));
                Test.instanceCount *= (i2 = (int)(f + (Test.fArrFld[i]++)));
                Test.instanceCount *= (iArr[(int)(d - 1)] * (Test.instanceCount++));
                i2 >>= (int)(iArr[(int)(d + 1)] >>= (int)((i1--) + (--Test.instanceCount)));
                i2 += (int)((long)d ^ i);
                Test.instanceCount -= (iMeth(Test.instanceCount, -14019) + Test.instanceCount);
                i1 |= i1;
            }
            if (true) {
                d2 *= 1;
            } else if (Test.bFld) {
                if (Test.bFld) {
                    for (i13 = i; i13 < 70; i13++) {
                        i2 += (-59 + (i13 * i13));
                        for (i15 = 1; i15 < 1; ++i15) {
                            i16 -= i14;
                            i1 += i;
                            switch (((i % 3) * 5) + 99) {
                            case 114:
                                switch (((i % 6) * 5) + 10) {
                                case 34:
                                    i2 = (int)f;
                                    Test.instanceCount += (i15 * i15);
                                case 23:
                                    i16 = i2;
                                    iArr[i15] >>= i16;
                                    break;
                                case 16:
                                    Test.instanceCount *= i;
                                    iArr[i15 + 1] %= (int)30.25F;
                                    try {
                                        i1 = (Test.iFld % 5);
                                        i2 = (38071 % Test.iFld);
                                        i2 = (10245 / i);
                                    } catch (ArithmeticException a_e) {}
                                    break;
                                case 36:
                                    i2 = i1;
                                    Test.instanceCount *= 80L;
                                    Test.instanceCount = Test.instanceCount;
                                    break;
                                case 40:
                                    iArr[i + 1] >>>= i1;
                                    break;
                                case 11:
                                    Test.byArrFld[i15 - 1] = (byte)1.590F;
                                    break;
                                }
                                break;
                            case 112:
                                i14 *= (int)Test.instanceCount;
                                break;
                            case 103:
                                f = i2;
                            }
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 f d2 = " + i2 + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 iArr = " + i16 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.iFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.bFld Test.fArrFld Test.byArrFld = " + (Test.bFld ? 1 : 0) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
