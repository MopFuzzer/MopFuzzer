// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-148L;
    public static short sFld=29153;
    public static int iFld=-19632;
    public long lFld=3435390385L;
    public volatile float fFld=2.321F;
    public static byte byFld=-39;
    public static volatile long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3707915100L);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {


        Test.sFld ^= (short)Test.iFld;
        vMeth1_check_sum += l1;
    }

    public void vMeth(int i2, long l) {

        boolean b=false;
        int i3=55404, i4=182, i5=61216, i6=-53683, i7=14383, i8=-7763, iArr[]=new int[N];
        double d=-72.33770;
        float f=0.122F;

        FuzzerUtils.init(iArr, -11);

        vMeth1(l);
        Test.iFld += i2;
        b = b;
        for (i3 = 168; i3 > 6; --i3) {
            byte by=43;
            switch ((i3 % 5) + 13) {
            case 13:
                i2 += i4;
                break;
            case 14:
                d = -176L;
                Test.lArrFld[i3 + 1] %= (by | 1);
            case 15:
                for (i5 = 1; i5 < 10; i5 += 3) {
                    l += by;
                    f += i2;
                    for (i7 = 4; i7 > 1; i7--) {
                        Test.instanceCount *= 21082;
                    }
                    Test.lArrFld[i5] = 14524;
                    i8 = i4;
                }
                break;
            case 16:
                iArr[i3] *= by;
                break;
            case 17:
                i6 += (int)lFld;
                break;
            default:
                l = 246;
            }
        }
        vMeth_check_sum += i2 + l + (b ? 1 : 0) + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 +
            Float.floatToIntBits(f) + i7 + i8 + FuzzerUtils.checkSum(iArr);
    }

    public double dMeth() {

        float f1=-11.301F;
        int i9=-46, i10=-4980, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -56672);

        vMeth(Test.iFld, lFld);
        for (f1 = 2; 388 > f1; f1++) {
            i9 = i9;
            lFld = (long)f1;
            fFld = Test.instanceCount;
            Test.lArrFld[(int)(f1 + 1)] -= 96;
            Test.iFld += Test.byFld;
            iArr1[(int)(f1 - 1)] &= i9;
            Test.iFld += (int)(((f1 * Test.sFld) + lFld) - Test.iFld);
            fArrFld[(int)(f1 + 1)] = 10264;
            Test.instanceCount >>>= Test.iFld;
            Test.iFld += -28595;
        }
        lFld = i9;
        i10 -= -181;
        lFld *= i9;
        long meth_res = Float.floatToIntBits(f1) + i9 + i10 + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=8, i1=1, i11=-26, i13=5, i14=230, i15=-6, i16=-217, i17=-142, i18=113, iArr2[]=new int[N], iArr3[][]=new
            int[N][N];
        double d1=126.77526;
        boolean b1=true, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, -14741);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr3, -28177);

        i = 1;
        do {
            i1 = (int)dMeth();
            i1 += (-18460 + (i * i));
            i1 -= (int)d1;
            Test.iFld -= Test.sFld;
            i1 = 15083;
            iArr2[i + 1] = Test.iFld;
            i11 = 1;
            while (++i11 < 172) {
                if (b1) break;
            }
            i1 += (int)fFld;
        } while (++i < 146);
        i13 = 1;
        do {
            for (i14 = 3; i14 < 120; ++i14) {
                Test.iFld >>>= i11;
                Test.instanceCount = Test.iFld;
                i16 = 1;
                do {
                    Test.instanceCount >>= i15;
                    bArr[i13 + 1] = b1;
                    try {
                        i15 = (39017 % iArr2[i14 + 1]);
                        i15 = (-15699 % iArr2[i13]);
                        i17 = (-360214820 % i15);
                    } catch (ArithmeticException a_e) {}
                    i18 *= Test.sFld;
                    i18 += i11;
                    Test.iFld += (i16 * fFld);
                    Test.instanceCount -= -11L;
                    lFld -= i15;
                } while (++i16 < 2);
                i18 = i;
                iArr3 = iArr3;
                iArr2[i14] &= i13;
                d1 += Test.iFld;
                if (false) continue;
                Test.lArrFld[i13] |= i13;
            }
        } while (++i13 < 210);
        iArr3[(Test.iFld >>> 1) % N] = FuzzerUtils.int1array(N, (int)235);

        FuzzerUtils.out.println("i i1 d1 = " + i + "," + i1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i11 b1 i13 = " + i11 + "," + (b1 ? 1 : 0) + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 i18 iArr2 = " + i17 + "," + i18 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("bArr iArr3 = " + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.iFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("lFld fFld Test.byFld = " + lFld + "," + Float.floatToIntBits(fFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.lArrFld fArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
