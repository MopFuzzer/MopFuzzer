// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-113L;
    public static boolean bFld=true;
    public static double dFld=66.43801;
    public short sFld=7439;
    public byte byFld=-86;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -45654);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i3=-230, i4=6, i5=4, i6=-14, i7=-186, i8=-237, iArr[]=new int[N];
        long l1=-6793974667768998941L;
        float f=2.997F, fArr[]=new float[N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(iArr, -220);
        FuzzerUtils.init(sArr, (short)-5239);
        FuzzerUtils.init(fArr, 2.726F);

        for (i3 = 4; i3 < 163; i3++) {
            i5 = 1;
            do {
                for (l1 = 1; l1 < 1; ++l1) {
                    iArr[i5 + 1] -= i4;
                    i6 -= (int)-45942L;
                    sArr[(int)(l1 + 1)][(int)(l1 - 1)] *= (short)2;
                    iArr[i3 + 1] <<= (int)l1;
                }
                i6 <<= i4;
            } while (++i5 < 10);
            i6 += i3;
            for (i7 = 1; i7 < 10; i7 += 3) {
                f -= l;
                if (Test.bFld) break;
                fArr[i7 - 1] -= i8;
                f = i3;
                i6 *= i4;
            }
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + l1 + i6 + i7 + i8 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(byte by) {

        int i9=-74, i10=143, i11=57347, i12=7, i13=0, i14=-64544, iArr1[]=new int[N];
        short s=-12713;
        float f1=2.990F, fArr1[][]=new float[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 79);
        FuzzerUtils.init(fArr1, -47.917F);
        FuzzerUtils.init(lArr, 64159L);

        vMeth1(Test.instanceCount);
        for (i9 = 8; 268 > i9; ++i9) {
            for (i11 = 1; i11 < 6; i11++) {
                for (i13 = 1; i13 < 2; ++i13) {
                    iArr1[i13] |= i14;
                    i12 >>= by;
                    Test.instanceCount -= i14;
                    s |= (short)i14;
                    i10 += (int)Test.dFld;
                    Test.instanceCount += Test.instanceCount;
                    i14 <<= (int)Test.instanceCount;
                    fArr1[i9][(i13 >>> 1) % N] *= 40;
                }
                i12 = i11;
                lArr = lArr;
                Test.instanceCount -= (long)f1;
            }
        }
        long meth_res = by + i9 + i10 + i11 + i12 + i13 + i14 + s + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i2=9, i15=138, i16=56221, i17=248, i18=-13, i19=-4, i20=158;
        byte by1=-38;
        float f2=22.216F;

        i2 += (int)(i2 * (iMeth(by1) - Test.instanceCount));
        Test.dFld += i2;
        for (i15 = 7; 228 > i15; i15++) {
            Test.instanceCount += (i15 * i15);
            i2 += i15;
            if (Test.bFld) {
                i16 -= (int)2.95669;
            } else {
                Test.instanceCount = i16;
                by1 = (byte)i2;
                for (i17 = 7; i17 > i15; --i17) {
                    if (Test.bFld) break;
                    for (i19 = 1; i19 < 1; i19++) {
                        f2 -= sFld;
                        i16 *= (int)Test.instanceCount;
                        Test.iArrFld[i15 + 1] += -12110;
                    }
                }
            }
        }
        vMeth_check_sum += i2 + by1 + i15 + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        int i=-31662, i1=240, i21=163, i22=5, i23=-52921, i24=-202, i25=6, i26=1, i27=2, i28=52031;
        float f3=36.547F;

        for (i = 2; 284 > i; ++i) {
            vMeth();
            for (i21 = i; i21 < 89; ++i21) {
                try {
                    i22 = (i / 10027);
                    i1 = (-46951 % i);
                    i22 = (i / i22);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += i21;
                for (i23 = i; i23 < 1; i23++) {
                    i24 += -27382;
                }
                for (i25 = 1; 1 > i25; i25++) {
                    if (Test.bFld) {
                        if (Test.bFld) break;
                        f3 = -5695526961406180329L;
                        sFld += (short)Test.instanceCount;
                        i1 ^= i23;
                    } else if (Test.bFld) {
                        i1 = (int)f3;
                        i26 += (((i25 * Test.instanceCount) + f3) - i22);
                        sFld += (short)i25;
                    } else {
                        if (Test.bFld) break;
                        i24 <<= i22;
                        byFld = byFld;
                    }
                    Test.dFld += 0.372F;
                    f3 *= i25;
                    byFld += (byte)(((i25 * Test.instanceCount) + i26) - i21);
                    Test.iArrFld[i + 1] >>= (int)Test.instanceCount;
                    i24 += i24;
                    Test.instanceCount -= Test.instanceCount;
                }
                for (i27 = 1; 1 < i27; i27--) {
                    i24 = i27;
                    f3 -= 156;
                    Test.instanceCount += i27;
                    byFld += (byte)i24;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i21 = " + i + "," + i1 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 f3 = " + i25 + "," + i26 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i27 i28 = " + i27 + "," + i28);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("sFld byFld Test.iArrFld = " + sFld + "," + byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
