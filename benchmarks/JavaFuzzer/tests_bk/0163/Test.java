// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=41321L;
    public static boolean bFld=true;
    public static byte byFld=33;
    public static double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.78409);
        FuzzerUtils.init(Test.fArrFld, -96.637F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth() {

        int i9=-7;

        i9 |= i9;
        long meth_res = i9;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1(int i3, long l, float f1) {

        int i4=2, i5=233, i6=-1, i7=-6, i8=101, iArr[]=new int[N];
        byte by=-67;
        double d=-1.60198;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(lArr, -241L);

        for (i4 = 6; i4 < 338; ++i4) {
            for (i6 = i4; 5 > i6; ++i6) {
                iArr[i6] = Math.max(Math.min(i3, i5) * iArr[i4 - 1], (int)(i5 = (int)(by + -51.89588)));
                i3 += i6;
                lArr[i6] = (lArr[i4] = (lArr[i4] = (lArr[i4] = lArr[i4 + 1])));
                d *= (l - (i5 % ((long)(Math.abs(1.251F)) | 1)));
                f1 *= (i6 + l);
                l += (i6 * i6);
                Test.instanceCount *= (i5++);
                f1 += (i6 * i6);
            }
            i8 = 1;
            while (++i8 < 5) {
                Test.instanceCount -= (long)((Test.fArrFld[i4 - 1] + -165) + (Float.intBitsToFloat(59363) + byMeth()));
            }
        }
        vMeth1_check_sum += i3 + l + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + by + Double.doubleToLongBits(d) +
            i8 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i2) {

        float f=0.71F;
        int i10=-13, i11=-3, i12=-11, i13=-181, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 13);

        Test.dArrFld[(165 >>> 1) % N] *= Long.reverseBytes((long)((--f) * (i2 += (int)Test.instanceCount)));
        vMeth1(i2, Test.instanceCount, f);
        Test.instanceCount = i2;
        for (i10 = 1; i10 < 310; i10++) {
            for (i12 = 1; i12 < 5; ++i12) {
                if (i13 != 0) {
                    vMeth_check_sum += i2 + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
                Test.instanceCount = Test.instanceCount;
                i2 += (((i12 * i12) + i10) - i2);
                iArr1[i12 - 1] = -5365;
                if (Test.bFld) break;
                iArr1[i12 - 1] += (int)Test.instanceCount;
                i11 += (i12 + i12);
                if (i12 != 0) {
                    vMeth_check_sum += i2 + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
            f += i13;
            Test.byFld += (byte)(((i10 * i13) + i13) - i11);
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=34961, i14=-190, i15=-3099, i16=7, i17=22, i18=-206, i19=7, i20=-142, i21=-251, iArr2[]=new int[N];
        short s=-16995;
        byte by1=-31;
        float f2=47.462F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -153);
        FuzzerUtils.init(lArr1, 3635872337L);

        for (i = 2; i < 135; ++i) {
            i1 += (62427 + (i * i));
            vMeth(i1);
            i1 = i;
            for (i14 = 6; i14 < 188; i14++) {
                i15 = i1;
                switch (((i14 >>> 1) % 1) + 28) {
                case 28:
                    i15 = i15;
                    Test.byFld += (byte)(i14 * i14);
                    i1 <<= i1;
                    break;
                }
                i1 -= i;
                s += (short)i14;
            }
            i15 = i1;
            i15 += (((i * by1) + i14) - Test.instanceCount);
            f2 += i15;
            i1 += (int)f2;
        }
        for (i16 = 15; i16 < 347; i16++) {
            for (i18 = 1; i18 < 76; i18++) {
                i1 += (i18 * i18);
                i1 ^= i1;
                Test.bFld = Test.bFld;
                i17 += Test.byFld;
                i19 *= (int)Test.instanceCount;
                Test.bFld = false;
                for (i20 = 2; i16 < i20; --i20) {
                    i15 += (int)Test.instanceCount;
                }
                i15 <<= (int)-6428807212000637446L;
            }
            iArr2[i16 - 1] = i21;
            i17 += (int)Test.instanceCount;
            lArr1 = FuzzerUtils.long1array(N, (long)-29947L);
        }

        FuzzerUtils.out.println("i i1 i14 = " + i + "," + i1 + "," + i14);
        FuzzerUtils.out.println("i15 s by1 = " + i15 + "," + s + "," + by1);
        FuzzerUtils.out.println("f2 i16 i17 = " + Float.floatToIntBits(f2) + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 iArr2 lArr1 = " + i21 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.byFld = " + Test.instanceCount + "," + (Test.bFld ?
            1 : 0) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.dArrFld Test.fArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
