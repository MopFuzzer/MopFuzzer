// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=16605L;
    public static volatile boolean bFld=true;
    public static double dFld=0.15614;
    public static byte byFld=-47;
    public static double dFld1=-9.34580;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 12811L);
        FuzzerUtils.init(Test.iArrFld, 156);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i10=-186, i11=13, i12=4, i13=-59772, i14=63901, i15=-2, iArr[]=new int[N];
        boolean b=true, b1=false;
        byte by=-51;
        float f1=-121.364F;
        short s=2826;
        double d=9.39496;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3726897696L);
        FuzzerUtils.init(iArr, -74);

        for (i10 = 2; i10 < 130; ++i10) {
            if (b) break;
            by = (byte)Test.instanceCount;
            i11 = (int)Test.instanceCount;
        }
        lArr[(i10 >>> 1) % N] -= i11;
        i12 = 1;
        while (++i12 < 138) {
            switch (((i10 >>> 1) % 9) + 94) {
            case 94:
                i13 = 1;
                do {
                    f1 = i10;
                    for (i14 = i12; i14 < 1; ++i14) {
                        switch ((i13 % 4) + 82) {
                        case 82:
                            iArr = iArr;
                            i11 += i14;
                            i15 >>= i13;
                            i11 *= s;
                        case 83:
                            i15 -= -43464;
                            break;
                        case 84:
                            iArr[i12 - 1] *= i11;
                            break;
                        case 85:
                            i11 -= i14;
                            break;
                        }
                    }
                } while (++i13 < 11);
            case 95:
                i11 += i10;
                break;
            case 96:
                i11 -= i10;
                break;
            case 97:
            case 98:
                Test.lArrFld = Test.lArrFld;
                break;
            case 99:
                i15 = (int)Test.instanceCount;
                break;
            case 100:
                d += i11;
                break;
            case 101:
                b = b1;
                break;
            case 102:
            default:
                d = i11;
            }
        }
        vMeth1_check_sum += i10 + i11 + (b ? 1 : 0) + by + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + s +
            Double.doubleToLongBits(d) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i9=11, i16=-1, i17=7202, i18=29, i19=-19085;
        float f2=105.470F, f3=-94.771F;

        i9 -= (i9++);
        vMeth1();
        for (f2 = 2; f2 < 238; ++f2) {
            f3 = i16;
            i9 = (int)Test.instanceCount;
            for (i17 = (int)(f2); i17 < 7; ++i17) {
                i9 += i17;
                f3 += i17;
                Test.iArrFld[i17 + 1][i17] += i17;
                i16 -= 183;
            }
            if (Test.bFld) {
                i16 = (int)f3;
                i19 = 1;
                while (++i19 < 7) {
                    short s1=11358;
                    s1 = (short)215;
                    i16 += (int)123.284;
                }
            } else {
                Test.instanceCount += (41273 + (f2 * f2));
            }
        }
        long meth_res = i9 + Float.floatToIntBits(f2) + i16 + Float.floatToIntBits(f3) + i17 + i18 + i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, long l) {

        int i1=-41, i2=1, i3=1, i4=-12, i5=228, i6=-7, i7=9751, i8=-115;
        float f=-13.155F;
        long l1=-12278L;
        short s2=22509, s3=-18883;
        byte by1=21;

        for (i1 = 2; i1 < 214; ++i1) {
            for (i3 = 8; i3 > i1; i3--) {
                for (i5 = 1; i5 < 1; i5 += 3) {
                    i6 += (((i5 * l) + i1) - i6);
                }
                for (i7 = 1; i7 > i1; i7--) {
                    f += (-iMeth());
                    Test.dFld = Test.instanceCount;
                    switch ((i7 % 8) + 5) {
                    case 5:
                        switch (((i3 >>> 1) % 8) + 4) {
                        case 4:
                            l1 = (long)f;
                            Test.bFld = Test.bFld;
                            f += i7;
                            break;
                        case 5:
                            i = i;
                            Test.lArrFld[(i >>> 1) % N][i7 - 1] >>= i;
                            f -= 14;
                            break;
                        case 6:
                            i <<= 4;
                            break;
                        case 7:
                            Test.dFld = i1;
                            break;
                        case 8:
                            i2 <<= s2;
                            break;
                        case 9:
                            Test.dFld += 101;
                            break;
                        case 10:
                            f = i6;
                        case 11:
                            i4 += i7;
                            break;
                        default:
                            i += s2;
                        }
                        break;
                    case 6:
                        i2 |= by1;
                    case 7:
                        Test.instanceCount = i5;
                        break;
                    case 8:
                        s3 += (short)Test.dFld;
                        break;
                    case 9:
                        Test.iArrFld[i7][i3 + 1] = i1;
                        break;
                    case 10:
                        i6 *= i8;
                    case 11:
                        l1 += Test.instanceCount;
                        break;
                    case 12:
                        i += (((i7 * i7) + f) - i2);
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i + l + i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + l1 + s2 + by1 + s3;
    }

    public void mainTest(String[] strArr1) {

        int i20=54730, i21=-107, i22=187, i23=-9, i24=13, i25=-146, i26=-64531, i27=127;
        float f4=-1.235F;
        short s4=1642;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -19.119266);

        vMeth(i20, Test.instanceCount);
        for (i21 = 5; i21 < 235; i21++) {
            for (i23 = i21; i23 < 109; i23++) {
                i24 += i23;
                for (i25 = 1; i25 > 1; i25--) {
                    i24 += i25;
                    Test.instanceCount += (2 + (i25 * i25));
                    Test.instanceCount = Test.byFld;
                    Test.lArrFld[i23][i21 - 1] += -252;
                    f4 *= i24;
                    Test.instanceCount = i22;
                    Test.iArrFld[i25][i23 - 1] += -33459;
                    i26 <<= i25;
                    s4 = (short)Test.instanceCount;
                }
                dArr[i23 + 1] += i26;
                i20 = (int)Test.instanceCount;
                i27 = 1;
                while (++i27 < 1) {
                    i20 += (int)(-232L + (i27 * i27));
                    try {
                        i20 = (i26 % 59851);
                        i24 = (i20 / i21);
                        i22 = (i26 / -85);
                    } catch (ArithmeticException a_e) {}
                    dArr[i23] -= Test.dFld;
                    i26 >>= (int)7806116536988494734L;
                    if (Test.bFld) {
                        i24 -= (int)-2.62669;
                        Test.bFld = Test.bFld;
                        switch ((i23 % 1) + 112) {
                        case 112:
                            Test.bFld = Test.bFld;
                            i26 += -5106;
                            Test.dFld1 *= i27;
                            break;
                        }
                        Test.iArrFld[i27 + 1][i23 - 1] = s4;
                    } else {
                        Test.instanceCount >>= 99;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 f4 s4 = " + i26 + "," + Float.floatToIntBits(f4) + "," + s4);
        FuzzerUtils.out.println("i27 dArr = " + i27 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byFld Test.dFld1 Test.lArrFld = " + Test.byFld + "," +
            Double.doubleToLongBits(Test.dFld1) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
