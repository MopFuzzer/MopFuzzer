// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public static short sFld=-2026;
    public static volatile int iFld=-46390;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        float f=-71.372F;
        int i6=-19873, i7=-64664, i8=-243, iArr[]=new int[N];
        double d2=2.30120;
        boolean b1=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-8);
        FuzzerUtils.init(iArr, 11);

        Test.iFld = Test.iFld;
        Test.iFld -= -149;
        f -= Test.instanceCount;
        for (byte by : byArr) {
            for (i6 = 1; i6 < 4; i6++) {
                switch (((i6 % 7) * 5) + 48) {
                case 71:
                    i7 -= Test.iFld;
                    iArr[i6 + 1] /= (int)1361289417863393320L;
                    i7 <<= i7;
                    i7 -= -23220;
                    break;
                case 56:
                    i8 = 2;
                    do {
                        d2 += -1.97225;
                        Test.instanceCount = 11L;
                        Test.sFld = (short)Test.instanceCount;
                        Test.instanceCount += (-76 + (i8 * i8));
                    } while (--i8 > 0);
                case 54:
                    i7 = (int)Test.instanceCount;
                    break;
                case 67:
                    b1 = b1;
                    break;
                case 57:
                    Test.instanceCount -= Test.iFld;
                    break;
                case 69:
                    Test.iFld = i6;
                    break;
                case 82:
                    Test.instanceCount <<= i6;
                    break;
                default:
                    i7 += i6;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i6 + i7 + i8 + Double.doubleToLongBits(d2) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, int i4, int i5) {

        double d1=-98.69176;
        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 25994);

        d1 *= Test.instanceCount;
        Test.sFld += (short)(iMeth1() * i4);
        i5 <<= Test.sFld;
        iArr1 = FuzzerUtils.int1array(N, (int)-149);
        long meth_res = l + i4 + i5 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, boolean b, int i1) {

        int i2=-14688, i3=12, i9=107, i10=171, i11=42340, iArr2[]=new int[N];
        double d=2.74207;
        float f1=1.119F;

        FuzzerUtils.init(iArr2, 14);

        for (i2 = 13; i2 < 263; i2++) {
            i3 = (int)d;
            i3 -= (int)Math.sqrt((61 * (i * -56858)) + iMeth(Test.instanceCount, i, -51331));
            i += (i2 * f1);
            for (i9 = 1; i9 < 7; i9++) {
                byte by1=-23;
                i3 >>= by1;
                iArr2 = iArr2;
                Test.instanceCount += (i9 | Test.instanceCount);
                i11 = 1;
                while (++i11 < 2) {
                    iArr2[i9 + 1] = (int)Test.instanceCount;
                }
                i10 += (((i9 * Test.instanceCount) + i) - Test.instanceCount);
                d += f1;
                i += (i9 * Test.instanceCount);
                Test.instanceCount >>= i9;
            }
            b = b;
        }
        vMeth_check_sum += i + (b ? 1 : 0) + i1 + i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i9
            + i10 + i11 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {


        vMeth(45449, false, Test.iFld);


        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.iFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.iFld);

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
