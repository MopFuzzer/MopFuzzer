// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static volatile int iFld=-208;
    public static byte byFld=53;
    public static float fFld=-8.935F;
    public static int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];
    public static long lArrFld1[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 12);
        FuzzerUtils.init(Test.lArrFld1, -222L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, float f1, float f2) {

        int i4=250, i5=-116, i6=28327, i7=-28173, i8=-40780, i9=179, i10=146;
        double d=1.13242, d1=1.44320;

        for (i4 = 394; 20 < i4; i4--) {
            i3 |= i5;
            d = 1;
            while (++d < 5) {
                f1 = i5;
                Test.iArrFld[(int)(d - 1)] = (int)Test.instanceCount;
            }
            switch ((i4 % 3) + 35) {
            case 35:
                for (i6 = 5; i6 > 1; i6 -= 3) {
                    f1 %= 8;
                    d1 -= d1;
                }
                i7 += -40853;
            case 36:
                i8 = 5;
                do {
                    for (i9 = 1; i9 < 3; ++i9) {
                        i5 = (int)8.291F;
                        i10 = i6;
                        i10 += (int)f1;
                    }
                } while ((i8 -= 3) > 0);
                break;
            case 37:
                if (i10 != 0) {
                    vMeth1_check_sum += i3 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i4 + i5 +
                        Double.doubleToLongBits(d) + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10;
                    return;
                }
                break;
            }
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i4 + i5 +
            Double.doubleToLongBits(d) + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10;
    }

    public static int iMeth(int i2, short s) {

        float f3=0.380F;
        int i11=-159, i12=-10, i13=50435, iArr1[][]=new int[N][N];
        double d2=-1.28288;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 1);
        FuzzerUtils.init(lArr, -212281098575256315L);

        vMeth1(Test.iFld, f3, f3);
        for (i11 = 2; i11 < 133; i11++) {
            s >>= (short)i11;
            d2 = 1;
            while (++d2 < 12) {
                i12 += i2;
                i13 = 1;
                do {
                    Test.instanceCount = Test.iFld;
                    f3 = i13;
                    iArr1 = iArr1;
                    lArr[i11 - 1] *= Test.iFld;
                    Test.instanceCount = i11;
                    switch (((i13 >>> 1) % 2) + 59) {
                    case 59:
                        f3 *= f3;
                        Test.iFld = Test.byFld;
                        break;
                    case 60:
                        i12 += (i13 * i11);
                        break;
                    default:
                        Test.instanceCount += i12;
                    }
                } while (++i13 < 1);
            }
        }
        long meth_res = i2 + s + Float.floatToIntBits(f3) + i11 + i12 + Double.doubleToLongBits(d2) + i13 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, long l1, byte by) {

        int i=-8832, i1=-93, iArr[]=new int[N];
        float f=27.859F;
        short s1=-1068;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 254);
        FuzzerUtils.init(byArr, (byte)-88);

        i = 1;
        do {
            iArr[i] <<= (int)((i * (++i1)) * (byArr[i - 1] * Long.reverseBytes(Test.instanceCount)));
            f += (((i * i1) + i) - i);
            i1 += 145;
            i1 -= iMeth(i1, s1);
            Test.iFld += (i | Test.iFld);
            Test.iFld += i;
            Test.iFld += (int)l1;
            i1 = i1;
            Test.iFld = (int)2L;
        } while (++i < 155);
        iArr[(i1 >>> 1) % N] <<= i;
        vMeth_check_sum += l + l1 + by + i + i1 + Float.floatToIntBits(f) + s1 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        long l2=0L, lArr1[]=new long[N];
        int i14=161, i15=-10, i16=-9, i17=-238, i18=-89, i19=3, i20=-4;
        boolean b=false;
        double d3=0.97740, d4=52.5738;
        short s2=24148;
        float f4=-109.989F, fArr[]=new float[N];
        byte byArr1[]=new byte[N];

        FuzzerUtils.init(fArr, -2.353F);
        FuzzerUtils.init(byArr1, (byte)-65);
        FuzzerUtils.init(lArr1, -3329699234L);

        vMeth(-11L, Test.instanceCount, Test.byFld);
        Test.iFld *= (int)Test.fFld;
        Test.iFld = Test.iFld;
        for (l2 = 5; l2 < 183; ++l2) {
            if (b) break;
            i14 += (int)l2;
            for (i15 = 141; i15 > 4; --i15) {
                for (d3 = 1; d3 < 2; d3++) {
                    lArrFld[(int)(d3 + 1)] = l2;
                    Test.instanceCount *= Test.iFld;
                    i16 = (int)l2;
                }
                i14 = i15;
                switch ((int)(l2 + 49)) {
                case 49:
                    s2 = (short)i14;
                    Test.instanceCount = 7039;
                    break;
                case 50:
                    if (b) break;
                    Test.iArrFld[i15] = i15;
                    break;
                case 51:
                    Test.iArrFld[i15 + 1] &= (int)l2;
                    Test.byFld = (byte)Test.fFld;
                case 52:
                    Test.iFld -= i16;
                    break;
                case 53:
                    Test.instanceCount += (i15 * Test.iFld);
                    for (i18 = i15; i18 < 2; ++i18) {
                        i19 -= Test.iFld;
                        Test.instanceCount -= 37138;
                    }
                    s2 *= (short)-100;
                    for (f4 = 1; f4 < 2; ++f4) {
                        Test.fFld = i16;
                        i20 = -8;
                        fArr[(int)(f4)] += -44;
                        fArr[i15] += Test.fFld;
                    }
                    break;
                case 54:
                    Test.iArrFld[i15 - 1] += (int)191L;
                case 55:
                    i16 += (((i15 * i20) + i15) - l2);
                case 56:
                    d4 -= l2;
                    break;
                case 57:
                    Test.instanceCount <<= Test.iFld;
                case 58:
                    i20 += (((i15 * l2) + i19) - Test.byFld);
                    break;
                case 59:
                    Test.iFld += (i15 | i15);
                    break;
                case 60:
                    d4 += Test.instanceCount;
                    break;
                case 61:
                    Test.iArrFld[(int)(l2 + 1)] &= i17;
                    break;
                case 62:
                    i17 += (i15 + Test.instanceCount);
                    break;
                case 63:
                    b = b;
                    break;
                case 64:
                    Test.instanceCount -= i20;
                    break;
                case 65:
                    i16 = i14;
                    break;
                case 66:
                    Test.iArrFld[i15] >>= (int)Test.instanceCount;
                    break;
                case 67:
                    i19 += (i15 * i15);
                    break;
                case 68:
                    i14 *= (int)l2;
                case 69:
                case 70:
                    i20 >>= i16;
                    break;
                case 71:
                case 72:
                    fArr[i15 + 1] += l2;
                    break;
                case 73:
                    i19 >>= i16;
                    break;
                case 74:
                    i17 -= i15;
                case 75:
                    i16 *= Test.iFld;
                    break;
                case 76:
                    i16 = s2;
                case 77:
                    lArrFld[(int)(l2)] += i17;
                    break;
                case 78:
                    Test.fFld += (((i15 * i20) + Test.instanceCount) - i18);
                case 79:
                    s2 *= (short)i17;
                    break;
                case 80:
                    Test.iFld += (((i15 * f4) + f4) - i18);
                case 81:
                case 82:
                    i14 >>= i19;
                    break;
                case 83:
                    Test.fFld += (((i15 * i14) + i17) - i15);
                case 84:
                    i17 = 6;
                    break;
                case 85:
                case 86:
                    i16 += (i15 + Test.instanceCount);
                case 87:
                    Test.instanceCount += (((i15 * i17) + Test.byFld) - i17);
                case 88:
                    byArr1[i15 + 1] -= (byte)33062;
                    break;
                case 89:
                    i20 = i20;
                    break;
                case 90:
                    i19 *= (int)Test.instanceCount;
                    break;
                case 91:
                    Test.iArrFld[i15] *= i19;
                case 92:
                    s2 -= (short)f4;
                    break;
                case 93:
                    Test.lArrFld1 = Test.lArrFld1;
                    break;
                case 94:
                    Test.instanceCount += Test.instanceCount;
                    break;
                case 95:
                    Test.lArrFld1[i15 - 1][(int)(l2)] &= 26854;
                    break;
                case 96:
                    Test.instanceCount += i15;
                case 97:
                    i14 += (i15 ^ Test.instanceCount);
                case 98:
                    Test.instanceCount += (i15 - i18);
                    break;
                case 99:
                    lArr1[i15] -= (long)-31.380F;
                    break;
                case 100:
                    Test.iFld >>= (int)Test.instanceCount;
                    break;
                case 101:
                case 102:
                    if (b) continue;
                case 103:
                    Test.iFld = (int)254L;
                case 104:
                    Test.iArrFld[(int)(l2)] = i14;
                    break;
                case 105:
                    Test.instanceCount += (37832 + (i15 * i15));
                    break;
                case 106:
                    i17 = (int)-1.108825;
                    break;
                case 107:
                    i19 = Test.iFld;
                    break;
                case 108:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 109:
                    i16 += (((i15 * i20) + i20) - Test.byFld);
                    break;
                case 110:
                    b = b;
                    break;
                case 111:
                    Test.iArrFld[(int)(l2 + 1)] -= (int)Test.fFld;
                case 112:
                    i16 += (i15 + i14);
                case 113:
                case 114:
                    if (b) break;
                    break;
                case 115:
                    d4 = Test.instanceCount;
                    break;
                case 116:
                    i20 += i15;
                    break;
                case 117:
                    i14 = i15;
                    break;
                case 118:
                    Test.byFld = (byte)1;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("l2 i14 b = " + l2 + "," + i14 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i15 i16 d3 = " + i15 + "," + i16 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i17 s2 i18 = " + i17 + "," + s2 + "," + i18);
        FuzzerUtils.out.println("i19 f4 i20 = " + i19 + "," + Float.floatToIntBits(f4) + "," + i20);
        FuzzerUtils.out.println("d4 fArr byArr1 = " + Double.doubleToLongBits(d4) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(byArr1));
        FuzzerUtils.out.println("lArr1 = " + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.byFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld Test.iArrFld lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test.lArrFld1 = " + FuzzerUtils.checkSum(Test.lArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
