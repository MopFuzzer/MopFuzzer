// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:54 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=14L;
    public static float fFld=0.965F;
    public static long lFld=-1404715471L;
    public static float fArrFld[]=new float[N];
    public boolean bArrFld[]=new boolean[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 121.416F);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i4, int i5, long l1) {

        int i6=47934, i7=-54, i8=-17376, i9=254, iArr[][]=new int[N][N];
        long l2=162L, lArr1[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr1, -64521L);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, 112);

        for (i6 = 7; i6 < 128; i6++) {
            l1 = 181L;
            l2 = 1;
            do {
                Test.fFld -= Test.fFld;
                lArr1[(int)(l2)] += -44970;
                i4 -= i6;
                i4 = (int)l1;
                for (i8 = 1; 1 > i8; i8++) {
                    boolean b=true;
                    byte by=15;
                    i9 = (int)Test.instanceCount;
                    bArr[i6 - 1] = b;
                    iArr[(int)(l2 - 1)][i8 - 1] = (int)Test.lFld;
                    bArr[i6] = b;
                    i4 = i5;
                    by += (byte)(((i8 * i8) + i5) - i5);
                    i5 -= (int)Test.instanceCount;
                }
            } while (++l2 < 13);
        }
        long meth_res = i4 + i5 + l1 + i6 + i7 + l2 + i8 + i9 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(long l) {

        int i3=5;

        i3 = (int)(Test.fFld * ((-4855738793505949963L * lMeth1(i3, i3, Test.lFld)) << i3));
        long meth_res = l + i3;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i1, int i2) {

        int i10=11, i11=-128, i12=236, i13=-39628, i14=-12, i15=-143, iArr1[]=new int[N];
        boolean b1=false;
        short s=6165;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 9071245981598220092L);
        FuzzerUtils.init(iArr1, -227);

        i1 <<= (int)lArr[(i2 >>> 1) % N];
        i1 = (int)lMeth(12L);
        for (i10 = 6; 167 > i10; i10++) {
            if (b1) break;
            s += (short)Test.fFld;
        }
        iArr1[(i10 >>> 1) % N] = (int)-2173701128L;
        for (i12 = 12; i12 < 325; i12++) {
            lArr[(i10 >>> 1) % N] -= Test.lFld;
            i2 -= (int)Test.instanceCount;
            Test.lFld *= Test.instanceCount;
            i13 >>= i11;
            for (i14 = i12; i14 < 5; ++i14) {
                Test.instanceCount -= Test.instanceCount;
                Test.fArrFld[i12] += i11;
                i11 *= i10;
            }
        }
        vMeth_check_sum += i1 + i2 + i10 + i11 + (b1 ? 1 : 0) + s + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=14, i16=28813, i17=41284, i18=8, i19=-14, i20=9, i21=-3, iArr2[][]=new int[N][N];
        double d=0.102596;
        boolean b2=false;
        short s1=25342;

        FuzzerUtils.init(iArr2, 132);

        i = 1;
        do {
            d = Test.instanceCount;
            vMeth(i, i);
            if (false) continue;
        } while (++i < 243);
        iArr2[(i >>> 1) % N][(i >>> 1) % N] |= (int)Test.lFld;
        for (i16 = 15; i16 < 341; ++i16) {
            for (i18 = 4; i18 < 77; ++i18) {
                i19 += i18;
                bArrFld[i18] = b2;
                d *= s1;
                for (i20 = 2; i20 > 1; --i20) {
                    lArrFld = lArrFld;
                    Test.lFld += (long)d;
                    try {
                        i19 = (i19 % i20);
                        iArr2[i20][i18] = (i19 / -225);
                        i21 = (iArr2[i18][i18] / i19);
                    } catch (ArithmeticException a_e) {}
                    i19 = i20;
                    i17 += i20;
                    Test.instanceCount *= i18;
                    lArrFld[i16] -= i20;
                }
                i17 = i19;
                i21 += (((i18 * i21) + i18) - Test.instanceCount);
                i17 -= i19;
                d = i21;
                i19 += (int)d;
            }
            s1 = (short)12L;
            i19 *= i17;
            i21 = 8;
            Test.fFld += i16;
            if (b2) continue;
            Test.lFld = i19;
            if (b2) continue;
        }

        FuzzerUtils.out.println("i d i16 = " + i + "," + Double.doubleToLongBits(d) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("b2 s1 i20 = " + (b2 ? 1 : 0) + "," + s1 + "," + i20);
        FuzzerUtils.out.println("i21 iArr2 = " + i21 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.lFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.lFld);
        FuzzerUtils.out.println("Test.fArrFld bArrFld lArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(bArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
