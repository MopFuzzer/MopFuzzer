// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-35064L;
    public static double dFld=-22.109505;
    public static byte byFld=19;
    public static boolean bFld=true;
    public long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 7);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i7, int i8) {

        float f2=19.540F, f3=2.215F;
        int i9=7281, i10=55595, i11=-2689, i12=65260, i13=178;
        short s=25433;
        boolean b=true;
        double d1=109.127011;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1683949071017669063L);

        for (f2 = 388; 4 < f2; f2--) {
            i8 ^= i8;
            i9 += (int)f2;
            i10 = 1;
            do {
                lArr = lArr;
                l1 *= (long)f2;
                for (i11 = 1; i11 < 1; ++i11) {
                    i13 = s;
                    i9 += (i11 | i7);
                    if (b) break;
                    d1 = i9;
                    i7 &= i7;
                    i12 <<= i11;
                    d1 *= i12;
                    f3 = f2;
                }
            } while (++i10 < 4);
        }
        vMeth2_check_sum += l1 + i7 + i8 + Float.floatToIntBits(f2) + i9 + i10 + i11 + i12 + i13 + s + (b ? 1 : 0) +
            Double.doubleToLongBits(d1) + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        int i5=3, i6=-97, i14=-4, i15=-4802, i16=-35, i17=-129;

        for (i5 = 148; i5 > 2; i5--) {
            float f4=0.623F;
            boolean b1=false;
            vMeth2(Test.instanceCount, i6, 0);
            if (b1) {
                f4 *= i5;
                i6 = (int)1.57F;
                i6 = i6;
                i6 *= i5;
            } else {
                i6 = i6;
            }
            Test.iArrFld = Test.iArrFld;
            Test.instanceCount += i6;
        }
        for (i14 = 2; i14 < 150; ++i14) {
            for (i16 = 11; i16 > 1; --i16) {
                i15 -= i17;
                Test.dFld = i15;
                try {
                    i17 = (-1576857202 / i16);
                    i15 = (i16 % 42);
                    i17 = (i17 / i16);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth1_check_sum += i5 + i6 + i14 + i15 + i16 + i17;
    }

    public static void vMeth(int i3) {

        float f1=0.56F;
        int i4=-167, i18=-5, i19=152, i20=-111;
        long l2=-2118146509L;
        short s1=-12507;

        for (f1 = 7; f1 < 143; ++f1) {
            vMeth1();
            for (l2 = 1; l2 < 12; ++l2) {
                for (i19 = 1; i19 < 2; ++i19) {
                    Test.byFld += (byte)(((i19 * i19) + i19) - i4);
                    Test.instanceCount &= s1;
                    i20 += (i19 * Test.instanceCount);
                    i18 = i19;
                    Test.iArrFld = Test.iArrFld;
                    i3 += (((i19 * Test.instanceCount) + i18) - i3);
                    Test.instanceCount = (long)Test.dFld;
                    i20 -= i3;
                }
            }
            Test.instanceCount -= Test.instanceCount;
            Test.instanceCount += (long)f1;
            i3 += (int)f1;
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f1) + i4 + l2 + i18 + i19 + i20 + s1;
    }

    public void mainTest(String[] strArr1) {

        float f=-73.172F;
        int i=233, i1=-233, i2=14, i21=-49199, i22=37603, i23=-6, iArr[]=new int[N], iArr1[]=new int[N];
        double d=-2.81656, d2=97.41908;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)-11295);
        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(iArr1, -90);

        f = (i--);
        i *= (--i);
        sArr = (sArr = (sArr = sArr));
        for (long l : lArrFld) {
            for (i1 = 1; i1 < 63; i1 += 2) {
                i2 = (int)l;
                i2 += i1;
                Test.iArrFld[i1 - 1] = (int)(((f + -1289646438L) + (-33013 + (--Test.instanceCount))) + ((i + l) * (i *
                    d)));
                vMeth(i1);
            }
            i += (int)Test.instanceCount;
            for (d2 = 2; d2 < 63; ++d2) {
                for (i22 = 1; i22 < 2; ++i22) {
                    f += i2;
                    i21 = i1;
                    Test.iArrFld[i22] += (int)l;
                    Test.iArrFld[i22] ^= i;
                    f += -15340L;
                    i23 += -4;
                    i21 -= i23;
                    Test.instanceCount -= i;
                    iArr[i22 + 1] = i23;
                    Test.byFld = (byte)Test.instanceCount;
                }
                if (Test.bFld) {
                    i2 = (int)f;
                    Test.dFld = -8L;
                } else if (Test.bFld) {
                    iArr1[(int)(d2)] |= i23;
                }
                Test.instanceCount -= (long)-4.686F;
                f += (float)d2;
            }
            if (Test.bFld) continue;
            i >>= i23;
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 d d2 = " + i2 + "," + Double.doubleToLongBits(d) + "," +
            Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("sArr iArr iArr1 = " + FuzzerUtils.checkSum(sArr) + "," + FuzzerUtils.checkSum(iArr) +
            "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.bFld lArrFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
