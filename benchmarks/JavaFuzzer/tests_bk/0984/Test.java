// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1247726885025142690L;
    public static boolean bFld=true;
    public volatile double dFld=0.66722;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 68);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, float f2) {

        int i8=1, i9=11, i10=-6, i11=223;
        double d=-32.37449;
        short s=-10644;

        for (i8 = 13; 255 > i8; i8++) {
            i7 += i8;
            for (d = 1; 7 > d; ++d) {
                i9 -= i10;
                Test.instanceCount = i8;
                if (Test.bFld) continue;
                i11 = 1;
                do {
                    s = (short)-12;
                    Test.instanceCount -= i11;
                    Test.instanceCount = (long)d;
                    Test.instanceCount = Test.instanceCount;
                } while (++i11 < 2);
                i10 = i9;
                i7 |= i8;
                Test.instanceCount >>>= i10;
            }
            i9 += (i8 ^ (long)f2);
        }
        vMeth1_check_sum += i7 + Float.floatToIntBits(f2) + i8 + i9 + Double.doubleToLongBits(d) + i10 + i11 + s;
    }

    public static void vMeth(int i4, int i5, int i6) {

        float f3=60.221F;
        int i12=14, i13=77, i14=-2926, i15=-198, i16=-7, i17=-179, i18=-382;
        boolean b=true, bArr[]=new boolean[N];
        double d1=121.52640;

        FuzzerUtils.init(bArr, true);

        vMeth1(-10, f3);
        bArr[(i4 >>> 1) % N] = Test.bFld;
        i12 = 377;
        do {
            if (b) continue;
            i5 *= (int)Test.instanceCount;
        } while ((i12 -= 2) > 0);
        Test.instanceCount += Test.instanceCount;
        for (i13 = 5; i13 < 241; ++i13) {
            for (i15 = 1; 7 > i15; i15++) {
                for (i17 = 2; i17 > 1; --i17) {
                    if (i13 != 0) {
                        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f3) + i12 + (b ? 1 : 0) + i13 + i14 +
                            i15 + i16 + i17 + i18 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr);
                        return;
                    }
                    i6 -= i18;
                    i18 += i17;
                    i6 <<= (int)Test.instanceCount;
                    if (i12 != 0) {
                        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f3) + i12 + (b ? 1 : 0) + i13 + i14 +
                            i15 + i16 + i17 + i18 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr);
                        return;
                    }
                    d1 = i4;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f3) + i12 + (b ? 1 : 0) + i13 + i14 + i15 + i16 + i17 +
            i18 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr);
    }

    public int iMeth(long l1, float f1, int i3) {

        short s1=-13877;
        int i19=10, i20=-7, i21=-39377, i22=93, i23=57348, i24=175;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 1471243646L);

        i3 = (--Test.iArrFld[(i3 >>> 1) % N]);
        i3 >>= (int)(Test.instanceCount + Integer.reverseBytes(i3++));
        vMeth(i3, i3, i3);
        f1 = s1;
        i3 += i3;
        for (i19 = 4; i19 < 139; ++i19) {
            for (i21 = 12; i21 > 1; i21--) {
                i20 -= -136;
                f1 = Test.instanceCount;
                i22 += (i21 * i21);
                i3 = (int)-2.1002F;
                lArr[i19 + 1][i21 + 1] = i22;
                for (i23 = 1; i23 < 2; ++i23) {
                    Test.iArrFld[i21] += (int)dFld;
                }
                l1 += (3268420639L + (i21 * i21));
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f1) + i3 + s1 + i19 + i20 + i21 + i22 + i23 + i24 +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-64310, i1=5, i2=14, i25=38565, i26=-57479, i27=-249, i28=26108, i29=38733, i30=206, i31=-13195;
        long l=-13L;
        float f=-1.297F;
        byte by=51;

        for (i = 9; 259 > i; i++) {
            for (l = i; l < 101; l += 2) {
                f += Test.iArrFld[i + 1];
                i2 += (int)f;
                i1 = ((i1++) * (--i2));
            }
            i2 += (4 + (i * i));
            i1 -= iMeth(Test.instanceCount, f, i2);
        }
        for (i25 = 371; 1 < i25; --i25) {
            for (i27 = 3; i27 < 68; ++i27) {
                i28 = i26;
                Test.iArrFld = Test.iArrFld;
            }
            i29 = 1;
            while (++i29 < 68) {
                i2 += (i29 * i29);
                i1 -= i29;
                if (Test.bFld) continue;
                Test.instanceCount *= (long)dFld;
                i26 >>>= i;
                i2 <<= i26;
                i26 += by;
            }
            for (i30 = 2; i30 < 68; i30++) {
                i2 >>= i;
                i28 += (int)f;
                Test.iArrFld = FuzzerUtils.int1array(N, (int)6);
            }
            i2 += (i25 * i28);
            i26 = (int)Test.instanceCount;
            Test.instanceCount += (long)1.125F;
            i2 = -1;
        }
        i28 = i1;
        Test.iArrFld = Test.iArrFld;
        by >>= (byte)i31;

        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i2 f i25 = " + i2 + "," + Float.floatToIntBits(f) + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 by i30 = " + i29 + "," + by + "," + i30);
        FuzzerUtils.out.println("i31 = " + i31);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld dFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0)
            + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
