// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1778L;
    public static float fFld=-1.69F;
    public static int iFld=11;
    public byte byFld=110;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public static int iArrFld[][]=new int[N][N];
    public static boolean bArrFld[][]=new boolean[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1L);
        FuzzerUtils.init(Test.fArrFld, 0.133F);
        FuzzerUtils.init(Test.iArrFld, 5);
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(double d1, int i6, int i7) {

        double d2=-18.71460, d3=1.81385;
        int i8=-9, i9=2, iArr1[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 132);

        Test.instanceCount += 3048123348L;
        if (b) {
            Test.fFld *= 7;
            Test.instanceCount >>>= Test.instanceCount;
            i6 += 58530;
            if (b) {
                for (d2 = 2; d2 < 187; ++d2) {
                    i6 = (int)Test.instanceCount;
                    for (d3 = 1; d3 < 9; d3 += 3) {
                        iArr1[(int)(d2 - 1)] = i6;
                        Test.instanceCount += (long)d3;
                        i6 -= (int)Test.instanceCount;
                        Test.lArrFld[(int)(d2 - 1)] = Test.instanceCount;
                        i8 *= i6;
                    }
                    i6 = -86;
                }
            } else {
                i7 += i9;
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i6 + i7 + Double.doubleToLongBits(d2) + i8 +
            Double.doubleToLongBits(d3) + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(float f) {

        int i4=161, i5=-40806, i10=107, i11=1516, iArr[]=new int[N];
        boolean b1=false;
        byte by=-3;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.67961);
        FuzzerUtils.init(iArr, 62804);

        for (double d : dArr) {
            for (i4 = 4; i4 > 1; i4 -= 2) {
                iArr[i4] = (int)fMeth(d, i5, -9);
                if (b1) {
                    iArr[i4 + 1] = i5;
                }
                for (i10 = 1; 4 > i10; ++i10) {
                    Test.fArrFld[i10 - 1] *= i4;
                    i5 >>>= i4;
                    by += (byte)(i10 * i10);
                    i11 += i4;
                    switch ((i4 % 2) + 99) {
                    case 99:
                        i5 += (((i10 * i10) + i11) - i4);
                        break;
                    case 100:
                        Test.lArrFld[i10 + 1] -= -13;
                        i11 = i4;
                        Test.instanceCount -= i10;
                        break;
                    default:
                        i11 |= i5;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i4 + i5 + (b1 ? 1 : 0) + i10 + i11 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i2=-42119, i3=12, i12=173, i13=108, i14=-135, i15=-165, iArr2[]=new int[N];
        short s=9335;

        FuzzerUtils.init(iArr2, 95);

        for (i2 = 7; i2 < 127; ++i2) {
            Test.lArrFld[i2] <<= (++i3);
            vMeth1(Test.fFld);
            i3 += (int)Test.fFld;
            i3 = i2;
            i3 += i3;
            Test.instanceCount -= -14;
            Test.instanceCount += (i2 ^ s);
            for (i12 = 1; i12 < 13; i12++) {
                i3 &= i2;
                Test.iFld = Test.iFld;
                try {
                    iArr2[i2] = (i12 / -200627092);
                    i13 = (Test.iFld / 649520902);
                    i3 = (Test.iFld % i12);
                } catch (ArithmeticException a_e) {}
            }
            for (i14 = i2; 13 > i14; i14 += 2) {
                Test.iFld = i3;
                Test.instanceCount += (i14 * i14);
            }
        }
        vMeth_check_sum += i2 + i3 + s + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr3) {

        int i1=43571, i16=-29523, i17=3, i18=-160, i19=2;
        short s1=11907;
        float f1=-1.28F;
        boolean b2=true;
        double d4=-127.48382;
        long l=10L;

        i1 = 1;
        while (++i1 < 369) {
            vMeth();
            Test.iFld = s1;
            Test.lArrFld[i1] -= Test.instanceCount;
            Test.iFld -= Test.iFld;
            Test.instanceCount += (8434007245995425970L + (i1 * i1));
            byFld -= (byte)3111428774L;
            Test.iFld = (int)Test.instanceCount;
            Test.iFld = i1;
            Test.iArrFld[i1 - 1][i1] -= Test.iFld;
            f1 += i1;
        }
        for (i16 = 8; 183 > i16; ++i16) {
            Test.iArrFld[i16 + 1] = Test.iArrFld[i16];
            Test.iArrFld[(i1 >>> 1) % N][i16] = (int)Test.instanceCount;
            byFld += (byte)i1;
            Test.lArrFld[i16 + 1] = 24394;
            if (false) {
                f1 += i1;
                i17 += (i16 * i16);
            } else if (b2) {
                Test.instanceCount -= i1;
                Test.iFld += (37577 + (i16 * i16));
                f1 *= i17;
                s1 += (short)i16;
            }
            for (i18 = 143; i18 > i16; --i18) {
                Test.bArrFld[i16][i16 + 1] = b2;
                d4 = 11;
                Test.instanceCount = byFld;
                byFld = (byte)i18;
                Test.iArrFld[i16 - 1] = Test.iArrFld[i18 - 1];
                l += (i18 - i18);
            }
        }

        FuzzerUtils.out.println("i1 s1 f1 = " + i1 + "," + s1 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i16 i17 b2 = " + i16 + "," + i17 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i18 i19 d4 = " + i18 + "," + i19 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("l = " + l);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("byFld Test.lArrFld Test.fArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test.lArrFld)
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.iArrFld Test.bArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
