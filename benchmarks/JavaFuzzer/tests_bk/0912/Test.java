// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-77L;
    public static boolean bFld=true;
    public byte byFld=-110;
    public static int iFld=-97;
    public static volatile double dFld=18.68124;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -46.6526);
        FuzzerUtils.init(Test.iArrFld, -4803);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        int i4=77, i5=4;
        float f=1.309F;
        short s=19039;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)94);

        try {
            byArr[(i3 >>> 1) % N] = (byte)i3;
            for (double d2 : Test.dArrFld) {
                Test.instanceCount &= i3;
                if (Test.bFld) {
                    for (i4 = 1; i4 < 4; ++i4) {
                        i5 += i3;
                        Test.iArrFld[i4] = (int)f;
                        Test.iArrFld[i4 + 1] = (int)-8L;
                        Test.instanceCount += (i4 - s);
                        i5 = i4;
                    }
                    f += s;
                    i3 *= i3;
                } else if (Test.bFld) {
                    i3 <<= i5;
                    i3 *= i3;
                } else if (Test.bFld) {
                    d2 += i5;
                }
            }
        }
        catch (ArithmeticException exc1) {
            Test.instanceCount *= i3;
        }
        finally {
            Test.iArrFld[(i5 >>> 1) % N] -= 1862;
        }
        vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f) + s + FuzzerUtils.checkSum(byArr);
    }

    public static boolean bMeth(int i2, double d1, long l1) {

        long l2=227L;
        int i7=101, i8=-9, i9=-12, i10=-29858, i11=250;
        float f1=-2.185F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 51.400F);

        vMeth1(i2);
        for (l2 = 10; 311 > l2; ++l2) {
            for (i8 = 1; i8 < 5; i8++) {
                Test.dArrFld[(int)(l2 + 1)] /= (i8 | 1);
                fArr[i8 - 1] += 12;
                for (i10 = 1; i10 < 2; i10++) {
                    Test.instanceCount += i8;
                    f1 = f1;
                    l1 &= i8;
                    i9 += i10;
                }
                Test.instanceCount += (long)(28.935F + (i8 * i8));
            }
            d1 += 4;
            l1 >>>= i10;
            i7 += i2;
            f1 *= i11;
        }
        long meth_res = i2 + Double.doubleToLongBits(d1) + l1 + l2 + i7 + i8 + i9 + i10 + i11 +
            Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void vMeth(byte by, int i, double d) {

        long l=2469551158L;
        int i1=5, i12=104, i13=-20372;
        float f2=1.365F;

        for (l = 9; l < 331; ++l) {
            if (bMeth(31543, d, l)) continue;
            Test.instanceCount = 986257834L;
        }
        i12 = 1;
        while (++i12 < 246) {
            if (Test.bFld) continue;
            switch ((((i1 >>> 1) % 9) * 5) + 78) {
            case 106:
                i = (int)92.630F;
                Test.instanceCount -= i1;
                lArrFld[i12 + 1] = Test.instanceCount;
                i13 = 7;
                do {
                    i1 += (i13 * i13);
                    Test.iArrFld[i12] = i13;
                    i = i13;
                    i1 -= (int)l;
                    i = (int)d;
                } while (--i13 > 0);
            case 79:
                i1 >>= i12;
                break;
            case 92:
            case 121:
                Test.instanceCount >>= by;
                break;
            case 109:
                i1 = (int)f2;
                break;
            case 93:
                i += (int)l;
                break;
            case 90:
                Test.iArrFld[i12] = (int)125.596F;
            case 95:
                Test.instanceCount += (i12 ^ l);
                break;
            case 113:
                i += (int)l;
            default:
                f2 += Test.instanceCount;
            }
        }
        vMeth_check_sum += by + i + Double.doubleToLongBits(d) + l + i1 + i12 + i13 + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        short s1=9353;
        float f3=2.397F, f4=-85.659F, fArr1[]=new float[N];
        int i15=48134, i16=-58374, i17=2, i18=4, i19=1, i20=14, i21=62917, i22=34, i23=7270, i24=-6, i25=36912;

        FuzzerUtils.init(fArr1, -69.887F);

        vMeth(byFld, Test.iFld, Test.dFld);
        fArr1 = fArr1;
        s1 += (short)2.248F;
        Test.iFld += (int)f3;
        for (i15 = 5; i15 < 164; ++i15) {
            i16 ^= -10;
            Test.iFld += i15;
            for (i17 = i15; 158 > i17; ++i17) {
                Test.bFld = Test.bFld;
                Test.instanceCount = Test.instanceCount;
            }
            f3 += i18;
        }
        Test.instanceCount *= Test.iFld;
        for (i19 = 6; 203 > i19; ++i19) {
            i20 = -14;
            i20 += i19;
            for (f4 = 6; f4 < 127; ++f4) {
                i21 >>>= i20;
            }
            i20 += (int)Test.instanceCount;
            Test.iFld += i19;
            for (i22 = 4; i22 < 127; ++i22) {
                i23 += (i22 | byFld);
                Test.iArrFld[i22] >>>= i17;
                i20 <<= s1;
                for (i24 = 1; i24 < 2; ++i24) {
                    Test.iFld = i22;
                    i16 -= i17;
                    Test.iArrFld[i24] = (int)Test.instanceCount;
                }
                Test.bFld = Test.bFld;
                if (Test.bFld) break;
                Test.bFld = Test.bFld;
            }
        }

        FuzzerUtils.out.println("s1 f3 i15 = " + s1 + "," + Float.floatToIntBits(f3) + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 f4 = " + i19 + "," + i20 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 fArr1 = " + i24 + "," + i25 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld byFld = " + Test.instanceCount + "," + (Test.bFld ? 1 :
            0) + "," + byFld);
        FuzzerUtils.out.println("Test.iFld Test.dFld Test.dArrFld = " + Test.iFld + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.iArrFld lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
