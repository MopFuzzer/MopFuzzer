// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=9L;
    public int iFld=-6;
    public static float fFld=42.129F;
    public static double dFld=-54.43616;
    public static byte byFld=-41;
    public static int iFld1=29356;
    public static int iFld2=9;
    public static boolean bFld=true;
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i6) {

        int i7=-36060, i8=-48, i9=27606, i10=-52885, i11=200, i12=-75, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 2);

        for (i7 = 4; i7 < 367; i7 += 2) {
            iArr[i7] = (int)-236L;
            i6 -= i6;
            for (i9 = 1; i9 < 9; ++i9) {
                iArr[i7] <<= -5;
                try {
                    i6 = (33202 / iArr[i7]);
                    iArr[i7 - 1] = (-217 % i6);
                    iArr[i9 - 1] = (i8 % i7);
                } catch (ArithmeticException a_e) {}
                i6 -= 167;
                iArr = iArr;
                iArr[i9 - 1] *= -8;
                for (i11 = 1; i11 < 2; ++i11) {
                    Test.fFld += i10;
                    iArr = iArr;
                    Test.fFld = (float)Test.dFld;
                    Test.dFld -= 10391;
                    iArr[i11] -= (int)Test.dFld;
                }
            }
        }
        vMeth2_check_sum += l + i6 + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i, double d, int i1) {

        int i2=22, i3=33562, i4=7, i5=14, i13=10, i14=-61, i15=26, iArr1[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr1, -15);

        for (i2 = 18; i2 < 379; ++i2) {
            for (i4 = 1; i4 < 5; ++i4) {
                b = Test.bArrFld[(i >>> 1) % N];
                i1 += (i4 + i1);
            }
            i3 *= (-(++i1));
            switch (((i2 % 9) * 5) + 52) {
            case 90:
                vMeth2(Test.instanceCount, i);
                i1 += (((i2 * i4) + i1) - i2);
                break;
            case 85:
                if (b) {
                    Test.byFld -= (byte)i2;
                    i3 += (i2 + Test.instanceCount);
                    iArr1[i2] >>= (int)Test.instanceCount;
                    vMeth1_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) + i13 +
                        i14 + i15 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                for (i13 = 1; i13 < 5; i13++) {
                    i3 = -96;
                    Test.instanceCount -= 240;
                }
                break;
            case 93:
                i3 = (int)-1864903985375187605L;
                break;
            case 82:
                i1 *= -8;
                break;
            case 97:
                i5 *= i15;
                break;
            case 94:
            case 55:
                Test.byFld += (byte)Test.fFld;
                break;
            case 78:
                i15 += 1;
                break;
            case 60:
                i3 += i2;
                break;
            }
        }
        vMeth1_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + (b ? 1 : 0) + i13 + i14 + i15 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        byte by=47, byArr[]=new byte[N];
        int i16=0, i17=-33608, i18=43, i19=-18202, iArr2[]=new int[N];
        boolean b1=true;
        short s=-17753;

        FuzzerUtils.init(byArr, (byte)-26);
        FuzzerUtils.init(iArr2, -12390);

        by -= (byte)-1.43572;
        vMeth1(i16, Test.dFld, i16);
        for (byte by1 : byArr) {
            if (b1) {
                switch (((i16 >>> 1) % 6) + 51) {
                case 51:
                case 52:
                    for (i17 = 1; 4 > i17; i17++) {
                        Test.dFld += Test.instanceCount;
                        i19 = 1;
                        do {
                            iArr2[i19] += 14;
                            b1 = b1;
                            Test.instanceCount = -40858;
                            Test.instanceCount |= i19;
                            Test.instanceCount += i19;
                            Test.instanceCount *= 0;
                            i16 += (((i19 * i16) + Test.instanceCount) - i17);
                        } while (++i19 < 2);
                    }
                    break;
                case 53:
                    i18 = i18;
                case 54:
                    by1 >>>= (byte)i16;
                    break;
                case 55:
                    i18 *= s;
                    break;
                case 56:
                    Test.fFld = i17;
                    break;
                }
            } else {
                i18 = i18;
            }
        }
        vMeth_check_sum += by + i16 + i17 + i18 + i19 + (b1 ? 1 : 0) + s + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i20=16, i21=-13, i22=-14, i23=-51, i24=13, i25=-32674, i26=-157, i27=-3, iArr3[]=new int[N];
        float f=0.423F;

        FuzzerUtils.init(iArr3, 12);

        iFld >>>= iFld;
        vMeth();
        for (i20 = 4; i20 < 187; i20++) {
            iFld -= (int)Test.dFld;
            Test.instanceCount = Test.byFld;
            try {
                iFld = (227 / i22);
                Test.iFld1 = (i21 % i22);
                iArr3[i20 + 1] = (i20 % 1605750353);
            } catch (ArithmeticException a_e) {}
            for (i23 = 5; 137 > i23; ++i23) {
                Test.fFld += (i23 + Test.instanceCount);
                for (i25 = 1; i25 < 2; ++i25) {
                    i22 = i22;
                    Test.instanceCount += i25;
                    switch ((i25 % 7) + 115) {
                    case 115:
                        iFld >>= i22;
                        i22 *= iFld;
                        Test.instanceCount += (((i25 * Test.instanceCount) + Test.instanceCount) - Test.iFld1);
                    case 116:
                        if (true) {
                            iFld = Test.iFld2;
                            Test.instanceCount = Test.instanceCount;
                            iArr3[i25 - 1] = i27;
                        } else if (Test.bFld) {
                            Test.instanceCount = -81;
                        } else {
                            i27 = -50;
                        }
                        break;
                    case 117:
                        i26 -= Test.iFld2;
                        if (Test.bFld) continue;
                        i26 += i25;
                        break;
                    case 118:
                        Test.fFld = (float)Test.dFld;
                        Test.fFld *= i25;
                        Test.instanceCount += (i25 | (long)Test.fFld);
                        Test.instanceCount -= (long)Test.fFld;
                        break;
                    case 119:
                        Test.iFld1 = i23;
                        break;
                    case 120:
                        Test.fFld /= (i22 | 1);
                        break;
                    case 121:
                        Test.instanceCount += (((i25 * Test.iFld1) + i22) - f);
                        break;
                    default:
                        i26 -= i24;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 f = " + i26 + "," + i27 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.byFld Test.iFld1 = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.byFld + "," + Test.iFld1);
        FuzzerUtils.out.println("Test.iFld2 Test.bFld Test.bArrFld = " + Test.iFld2 + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
