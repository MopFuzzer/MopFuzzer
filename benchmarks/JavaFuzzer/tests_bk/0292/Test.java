// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=67L;
    public static int iFld=-34;
    public static double dFld=0.11278;

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i12, int i13, int i14) {

        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 42003L);

        lArr[(i13 >>> 1) % N] = (long)104.338F;
        long meth_res = i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i7, double d, int i8) {

        int i9=4, i10=59110, i11=-91, i15=-56543, iArr[]=new int[N];
        short s=-4665;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 5L);
        FuzzerUtils.init(iArr, 31729);

        for (i9 = 14; i9 < 265; ++i9) {
            i10 += (((i9 * Test.iFld) + i11) - i8);
            i10 = iMeth1(i9, -52585, -5);
            i11 -= (int)Test.instanceCount;
            Test.iFld &= i10;
            if (false) continue;
            Test.iFld *= s;
            lArr1[i9] += i9;
            i10 -= i10;
            lArr1[i9] += (long)d;
            i10 -= i7;
        }
        i15 = 1;
        do {
            i10 += i15;
            Test.iFld = (int)Test.instanceCount;
            Test.instanceCount = i15;
        } while (++i15 < 232);
        long meth_res = i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + s + i15 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i1, int i2) {

        int i3=-14640, i4=217, i5=-13, i6=-74, i17=-94, i18=-2, i19=6, i20=-54892;
        byte by=-79, byArr[][]=new byte[N][N];
        boolean b=false;

        FuzzerUtils.init(byArr, (byte)-37);

        byArr = (byArr = (byArr = (byArr = byArr)));
        for (i3 = 4; i3 < 147; i3++) {
            for (i5 = 1; 11 > i5; i5++) {
                i6 = iMeth(i2, Test.dFld, i5);
                Test.instanceCount = 30334L;
                Test.iFld = i3;
                i2 = i6;
                for (i17 = 1; i17 < 2; i17++) {
                    i6 += i17;
                    Test.instanceCount = Test.instanceCount;
                }
                for (i19 = i3; i19 < 2; i19++) {
                    Test.instanceCount = i2;
                    by = (byte)i20;
                    i18 += (i19 * i19);
                    if (b) continue;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + i17 + i18 + i19 + i20 + by + (b ? 1 : 0) +
            FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2;

        i = i;
        i -= (int)(i = (int)(Test.instanceCount + (i + Test.iFld)));
        i -= (int)lMeth(-32014, Test.iFld);

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
