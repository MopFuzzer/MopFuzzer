// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=8L;
    public static int iFld=33542;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        float f2=97.789F, f3=78.315F;
        int i4=8, i5=-18278;
        short s=28825;
        boolean b=true;

        Test.iFld += (int)119.633F;
        Test.iArrFld[(Test.iFld >>> 1) % N] -= (int)f2;
        Test.iArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        Test.instanceCount += -54611L;
        f3 = 1;
        while (++f3 < 301) {
            Test.instanceCount >>= Test.iFld;
            for (i4 = (int)(f3); i4 < 5; i4++) {
                Test.iFld += i4;
                Test.iFld = i5;
                Test.instanceCount -= s;
                f2 += i4;
                Test.iFld += i4;
                if (b) break;
            }
            Test.iFld = i5;
            Test.instanceCount += i4;
        }
        long meth_res = Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i4 + i5 + s + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f, float f1) {

        double d1=-49.37111;
        int i6=-63559;

        Test.instanceCount = (long)(d1 + (Test.iFld -= Test.iFld));
        iMeth();
        i6 = 1;
        do {
            Test.iFld = 40;
        } while (++i6 < 169);
        vMeth1_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i6;
    }

    public static void vMeth() {

        float f4=-106.694F;
        long l=-5325703056053086499L;
        int i7=-65339, i8=251, i9=36, i10=144, i11=-64;
        byte by=51;

        vMeth1(f4, f4);
        Test.iFld += Test.iFld;
        for (l = 2; l < 144; ++l) {
            i7 = Test.iFld;
        }
        for (i8 = 126; i8 > 2; i8--) {
            Test.iFld -= i8;
            f4 += 107.380F;
            switch (((i8 % 1) * 5) + 41) {
            case 46:
                i7 = (int)l;
                Test.iArrFld[i8 - 1] &= i7;
                Test.iFld ^= by;
                break;
            }
            Test.iArrFld[i8] -= i8;
            for (i10 = 13; 1 < i10; i10--) {
                Test.iArrFld = FuzzerUtils.int1array(N, (int)50865);
                by -= (byte)i7;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f4) + l + i7 + i8 + i9 + by + i10 + i11;
    }

    public void mainTest(String[] strArr1) {

        int i=-7133, i1=-76, i2=50882, i3=202, i12=-195, i13=8434, i14=104, i15=-109;
        double d=-84.65678;
        float f5=-44.674F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        Test.iFld -= (++Test.iFld);
        for (i = 9; i < 187; i++) {
            Test.iFld *= (int)(Test.instanceCount -= (long)Math.sqrt(d++));
            bFld = (bFld = bArr[i - 1]);
            for (i2 = 8; 141 > i2; i2++) {
                Test.instanceCount += (i2 * i2);
            }
            vMeth();
            for (i12 = 8; i12 < 141; i12++) {
                switch ((i % 2) + 58) {
                case 58:
                    i13 -= i1;
                    try {
                        Test.iFld = (i2 % i2);
                        i3 = (i1 % -97);
                        i13 = (Test.iArrFld[i] % Test.iArrFld[i12]);
                    } catch (ArithmeticException a_e) {}
                    i1 += i12;
                case 59:
                    Test.iFld = (int)Test.instanceCount;
                    i3 += (int)f5;
                    break;
                }
                i3 += 3;
                d -= i;
                switch (((i13 >>> 1) % 5) + 28) {
                case 28:
                    Test.iArrFld[i12 + 1] -= 3;
                    Test.instanceCount += i2;
                    f5 *= i12;
                case 29:
                    i3 ^= i2;
                    d += d;
                    for (i14 = 1; i14 < 2; ++i14) {
                        Test.instanceCount *= i;
                        Test.iFld >>>= i;
                        if (bFld) {
                            f5 -= i12;
                            if (bFld) {
                                i15 += i12;
                            }
                            Test.iFld *= -5;
                        } else if (false) {
                            d += i15;
                        } else if (bFld) {
                            Test.instanceCount |= Test.instanceCount;
                        }
                    }
                    break;
                case 30:
                case 31:
                    Test.instanceCount = i2;
                    break;
                case 32:
                    i15 += (int)d;
                    break;
                default:
                    i15 += (i12 | i);
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 i3 i12 = " + i2 + "," + i3 + "," + i12);
        FuzzerUtils.out.println("i13 f5 i14 = " + i13 + "," + Float.floatToIntBits(f5) + "," + i14);
        FuzzerUtils.out.println("i15 bArr = " + i15 + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld bFld = " + Test.instanceCount + "," + Test.iFld + "," +
            (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
