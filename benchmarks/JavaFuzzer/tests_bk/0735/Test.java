// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=13231L;
    public static double dFld=62.74599;
    public volatile int iFld=6361;
    public static byte byFld=31;
    public static int iFld1=-10;
    public volatile float fFld=-2.110F;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6) {

        int i7=-83, i8=-21, i9=6, i10=-56682, i11=-148, i12=-27, iArr2[]=new int[N];
        float f1=122.737F, fArr[]=new float[N];
        boolean b=false;
        byte by=-111, byArr[]=new byte[N];

        FuzzerUtils.init(iArr2, -14);
        FuzzerUtils.init(fArr, -32.629F);
        FuzzerUtils.init(byArr, (byte)-92);

        for (i7 = 4; i7 < 317; i7++) {
            if (i6 != 0) {
                vMeth2_check_sum += i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + (b ? 1 : 0) + by +
                    FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                    FuzzerUtils.checkSum(byArr);
                return;
            }
            Test.dFld = Test.instanceCount;
        }
        for (f1 = 7; f1 < 220; ++f1) {
            for (i10 = 1; i10 < 8; i10++) {
                i12 = 1;
                do {
                    if (b) break;
                    iArr2[i10 - 1] = i11;
                    fArr = fArr;
                    by += (byte)Test.instanceCount;
                    i9 -= i12;
                    i6 <<= i9;
                    i9 -= -13;
                } while (++i12 < 2);
                i8 += i10;
                byArr[i10 - 1] = (byte)i7;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + (b ? 1 : 0) + by +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(byArr);
    }

    public void vMeth1() {

        int i13=34032, i14=-52132, i15=35912, i16=5, iArr3[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr3, -16565);

        vMeth2(iFld);
        iFld |= iFld;
        Test.instanceCount = -14L;
        iFld <<= iFld;
        iFld = iFld;
        iFld &= -9336;
        for (i13 = 2; i13 < 295; i13++) {
            for (i15 = 6; i15 > 1; --i15) {
                i16 = i14;
            }
            i14 += (((i13 * Test.instanceCount) + i13) - Test.instanceCount);
            if (true) {
                try {
                    iFld = (i15 / -207);
                    i16 = (i14 / iFld);
                    iArr3[i13 - 1] = (iArr3[i13 - 1] / 52);
                } catch (ArithmeticException a_e) {}
            }
            if (b1) continue;
            iArr3[i13 - 1] += (int)774740071L;
            iFld <<= i13;
        }
        vMeth1_check_sum += i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
    }

    public void vMeth(int i1, int i2, int i3) {

        int i4=0, i5=86, i17=2999, i18=9, iArr1[]=new int[N];
        short s=10250;
        float f=2.263F;
        double d=-75.1137;

        FuzzerUtils.init(iArr1, -63);

        for (i4 = 4; i4 < 376; ++i4) {
            Test.instanceCount = (long)(((i5--) % (((long)(s + f)) | 1)) + ((i5++) + iArr1[i4 + 1]));
            try {
                i5 = (iFld % 11204);
                iArr1[i4] = (-80747943 % iArr1[i4]);
                i2 = (45705 % i4);
            } catch (ArithmeticException a_e) {}
            i5 >>= (iFld--);
            i2 = (int)Math.abs(lArrFld[i4 - 1]);
            vMeth1();
        }
        for (d = 7; d < 174; ++d) {
            Test.byFld -= (byte)i5;
            Test.instanceCount += i1;
            f -= i2;
            iArr1[(int)(d - 1)] <<= (int)-51764L;
        }
        iArr1[(i1 >>> 1) % N] = (int)d;
        i18 = 1;
        while (++i18 < 248) {
            Test.iFld1 += i18;
            fFld *= Test.instanceCount;
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + s + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i17 +
            i18 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i19=172, i20=27719, i21=-14, i22=-52037, i23=134, i24=52493, i25=6, i26=197, i27=-234, i28=61, iArr[]=new
            int[N];
        short s1=4734, sArr[]=new short[N];
        long l=-110L;
        boolean b2=true;

        FuzzerUtils.init(iArr, 129);
        FuzzerUtils.init(sArr, (short)7950);

        Test.dFld = (iFld++);
        for (int i : iArr) {
            vMeth(i, i, Test.iFld1);
            i19 = 1;
            while (++i19 < 63) {
                i += (i19 * i19);
                iFld += (((i19 * Test.iFld1) + Test.iFld1) - Test.byFld);
                Test.byFld -= (byte)Test.iFld1;
                iFld += (int)(-2323623391L + (i19 * i19));
                Test.instanceCount -= (long)fFld;
                for (i20 = 1; i20 < 1; ++i20) {
                    i21 += (i20 + fFld);
                    Test.instanceCount += (i20 ^ Test.iFld1);
                }
            }
            i22 ^= 114;
            i >>= -28101;
            sArr[(i20 >>> 1) % N] += (short)fFld;
            for (i23 = 2; i23 < 63; ++i23) {
                for (i25 = 1; i25 < 2; ++i25) {
                    i21 += (((i25 * Test.instanceCount) + Test.instanceCount) - i24);
                    iFld = Test.byFld;
                    Test.instanceCount >>= 88;
                    s1 = (short)-7;
                    Test.instanceCount += (i25 | i21);
                    try {
                        i26 = (iArr[i25] % 12016);
                        Test.iFld1 = (i24 / -15119411);
                        i24 = (i23 % i);
                    } catch (ArithmeticException a_e) {}
                    l = i25;
                    iArr[i23 - 1] = Test.iFld1;
                }
                i26 = 24;
                for (i27 = 1; i27 < 2; i27++) {
                    Test.instanceCount = (long)Test.dFld;
                    i22 = (int)-9821L;
                    if (b2) continue;
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 s1 = " + i25 + "," + i26 + "," + s1);
        FuzzerUtils.out.println("l i27 i28 = " + l + "," + i27 + "," + i28);
        FuzzerUtils.out.println("b2 iArr sArr = " + (b2 ? 1 : 0) + "," + FuzzerUtils.checkSum(iArr) + "," +
            FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + iFld);
        FuzzerUtils.out.println("Test.byFld Test.iFld1 fFld = " + Test.byFld + "," + Test.iFld1 + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
