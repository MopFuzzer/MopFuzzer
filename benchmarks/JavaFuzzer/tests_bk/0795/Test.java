// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=36719780454089321L;
    public int iFld=-151;
    public volatile byte byFld=127;
    public static boolean bFld=false;
    public static float fFld=0.17F;
    public static double dFld=-2.75560;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.794F);

        fArr = fArr;
        vMeth2_check_sum += Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth1() {

        int i10=19, i11=-10, i13=-13, i14=19531, i15=3;
        double d=43.61377, d1=111.116860;
        short s=32094;
        float f=0.166F;

        vMeth2();
        for (i10 = 6; i10 < 299; ++i10) {
            i11 = i11;
            Test.instanceCount += i10;
            Test.instanceCount = (long)d;
            i11 = i10;
            for (d1 = 1; d1 < 6; ++d1) {
                for (i14 = 1; i14 < 2; ++i14) {
                    if (i13 != 0) {
                        vMeth1_check_sum += i10 + i11 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i13
                            + i14 + i15 + s + Float.floatToIntBits(f);
                        return;
                    }
                    i13 = (int)Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                    iFld -= s;
                    iArrFld[(int)(d1 + 1)] -= (int)f;
                    byFld += (byte)f;
                    i11 = i15;
                }
            }
        }
        vMeth1_check_sum += i10 + i11 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i13 + i14 + i15 + s
            + Float.floatToIntBits(f);
    }

    public void vMeth() {

        int i6=-7, i7=-29, i8=11, i9=-13, i16=-121;
        double d2=0.12979;
        float f1=1.554F, f2=-1.341F;
        short s1=-19147;
        boolean bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr, 140L);

        for (i6 = 5; i6 < 275; i6++) {
            for (i8 = 1; i8 < 6; i8 += 3) {
                vMeth1();
                i9 = (int)Test.instanceCount;
                iFld -= (int)-3647356710435006396L;
                bArr[i8 - 1] = Test.bFld;
            }
            d2 += d2;
            f1 *= Test.fFld;
            switch (((i7 >>> 1) % 5) + 84) {
            case 84:
                Test.instanceCount -= Test.instanceCount;
                switch ((i6 % 10) + 1) {
                case 1:
                    for (f2 = 1; 6 > f2; f2++) {
                        f1 = i16;
                        lArr[(int)(f2 + 1)] = Test.instanceCount;
                        Test.instanceCount += (long)f2;
                    }
                    break;
                case 2:
                    iArrFld[i6] *= (int)Test.instanceCount;
                case 3:
                    Test.fFld -= i16;
                    break;
                case 4:
                    d2 = iFld;
                    break;
                case 5:
                    iArrFld[i6 - 1] -= s1;
                    break;
                case 6:
                    iArrFld[i6 + 1] -= -39933;
                    break;
                case 7:
                    Test.instanceCount *= i9;
                    break;
                case 8:
                    Test.instanceCount = iFld;
                    break;
                case 9:
                    byFld = (byte)iFld;
                    break;
                case 10:
                    iArrFld[i6 - 1] += (int)Test.instanceCount;
                    break;
                default:
                    byFld += (byte)i6;
                }
            case 85:
                if (i9 != 0) {
                    vMeth_check_sum += i6 + i7 + i8 + i9 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) +
                        Float.floatToIntBits(f2) + i16 + s1 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr);
                    return;
                }
            case 86:
            case 87:
                if (false) continue;
            case 88:
                Test.instanceCount = i9;
                break;
            default:
                if (Test.bFld) continue;
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + i9 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) +
            Float.floatToIntBits(f2) + i16 + s1 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        byte by=80;
        int i=-7, i1=4, i2=-1, i3=16343, i4=14, i5=-193, i17=13, i18=196, i19=-168, i20=-49443, iArr[]=new int[N];
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(iArr, 79);
        FuzzerUtils.init(bArr1, true);

        Test.instanceCount >>>= (by++);
        i *= iArr[(i >>> 1) % N];
        for (i1 = 12; i1 < 258; i1++) {
            if (Test.bFld) {
                i3 = 1;
                while (++i3 < 102) {
                    for (i4 = 1; i4 < 1; i4++) {
                        i5 += (int)(i = (int)((i2 * i2) * Math.min(1629596493L, -3777467266685439362L)));
                        i2 <<= i5;
                        vMeth();
                        Test.instanceCount = i3;
                    }
                    iFld += (i3 - i);
                    iArr[i3] = (int)Test.instanceCount;
                    if (Test.bFld) continue;
                    iArr[i3 + 1] += i4;
                    switch ((i3 % 7) + 101) {
                    case 101:
                        for (i17 = 1; i17 < 1; i17++) {
                            i2 += (211 + (i17 * i17));
                            i18 += (int)-5305L;
                            i2 = i4;
                            Test.fFld = 2489605200L;
                            iArrFld = iArr;
                            i5 = (int)Test.instanceCount;
                            iFld = (int)Test.instanceCount;
                            if (Test.bFld) continue;
                            i18 += i18;
                        }
                        for (i19 = 1; i19 < 1; i19++) {
                            Test.instanceCount += i19;
                            Test.fFld *= (float)Test.dFld;
                            i20 = (int)Test.instanceCount;
                            Test.fFld += (i19 * Test.fFld);
                        }
                        break;
                    case 102:
                        Test.instanceCount *= Test.instanceCount;
                        break;
                    case 103:
                        i18 >>= (int)Test.instanceCount;
                        break;
                    case 104:
                        i2 += i3;
                        break;
                    case 105:
                        i5 = i3;
                    case 106:
                        bArr1[i1] = Test.bFld;
                        break;
                    case 107:
                        iFld += i3;
                        break;
                    default:
                        i -= -25;
                    }
                }
            }
        }

        FuzzerUtils.out.println("by i i1 = " + by + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i5 i17 i18 = " + i5 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 iArr = " + i19 + "," + i20 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("bArr1 = " + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test.instanceCount iFld byFld = " + Test.instanceCount + "," + iFld + "," + byFld);
        FuzzerUtils.out.println("Test.bFld Test.fFld Test.dFld = " + (Test.bFld ? 1 : 0) + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
