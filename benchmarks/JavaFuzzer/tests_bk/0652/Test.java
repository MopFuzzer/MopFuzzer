// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2265924154L;
    public float fFld=-2.368F;
    public static float fFld1=22.787F;
    public static double dFld=2.53781;
    public static volatile boolean bFld=false;
    public static double dArrFld[]=new double[N];
    public long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.122455);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, long l1, long l2) {

        double d1=44.10571;
        int i7=-72, i8=-11, i9=-178, i10=23634, iArr[]=new int[N];
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -62630);
        FuzzerUtils.init(lArr, 177186878L);
        FuzzerUtils.init(bArr, true);

        l1 = i6;
        i6 = i6;
        d1 = 1;
        while (++d1 < 194) {
            Test.fFld1 = i6;
            Test.instanceCount = -14;
            for (i7 = 1; i7 < 8; i7++) {
                iArr[i7 + 1] = i6;
                i6 ^= 7;
                l2 = i7;
                i6 = -7275;
                for (i9 = (int)(d1); i9 < 2; ++i9) {
                    boolean b=false;
                    switch (((i9 % 10) * 5) + 49) {
                    case 90:
                        Test.fFld1 = 219;
                        break;
                    case 59:
                    case 69:
                        lArr[(int)(d1)] = i6;
                        b = b;
                    case 70:
                        i10 = (int)Test.instanceCount;
                        break;
                    case 61:
                        bArr[(int)(d1)] = b;
                    case 75:
                        Test.fFld1 = (float)d1;
                        break;
                    case 52:
                        Test.fFld1 += (i9 + i10);
                        break;
                    case 80:
                        i6 += (((i9 * i9) + i8) - i8);
                    case 84:
                        Test.fFld1 -= i10;
                        break;
                    case 67:
                        i8 <<= 28190;
                        break;
                    default:
                        l2 = i7;
                    }
                }
            }
        }
        vMeth1_check_sum += i6 + l1 + l2 + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth(int i4, int i5, long l) {

        int i11=13, i12=54200, i13=-197, i14=12567, i15=-7, i16=210, iArr1[]=new int[N];
        double d2=48.81478;
        boolean b1=true;

        FuzzerUtils.init(iArr1, -47114);

        vMeth1(i5, -30L, Test.instanceCount);
        iArr1[(i4 >>> 1) % N] -= (int)Test.instanceCount;
        for (i11 = 20; i11 < 347; ++i11) {
            i12 -= i11;
            d2 += l;
            for (i13 = 1; 5 > i13; i13 += 3) {
                Test.fFld1 *= i11;
                i5 += i14;
                i4 = i5;
                for (i15 = 1; i15 < 5; i15++) {
                    Test.dArrFld[i15] *= i13;
                    iArr1[i13] <<= 10287;
                    b1 = b1;
                    d2 -= i12;
                    l = 2489;
                }
            }
        }
        long meth_res = i4 + i5 + l + i11 + i12 + Double.doubleToLongBits(d2) + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1) {

        int i2=-131, i3=4, i17=6, i18=-167, i19=-3157, iArr2[]=new int[N];
        float f=-25.29F;

        FuzzerUtils.init(iArr2, 13);

        for (i2 = 4; i2 < 151; ++i2) {
            if (Long.reverseBytes(Test.instanceCount) == (iMeth(i3, i1, Test.instanceCount) & i3)) break;
            if (false) break;
            Test.instanceCount >>= i2;
            Test.fFld1 /= (Test.instanceCount | 1);
            if (i1 != 0) {
                vMeth_check_sum += i1 + i2 + i3 + i17 + i18 + Float.floatToIntBits(f) + i19 +
                    FuzzerUtils.checkSum(iArr2);
                return;
            }
            i1 &= (int)Test.instanceCount;
            iArr2[i2 + 1] = i2;
            switch (((i2 % 2) * 5) + 87) {
            case 95:
                if (true) break;
                for (i17 = 1; i17 < 11; i17++) {
                    i3 = (int)Test.dFld;
                    for (f = 1; f < 2; ++f) {
                        i18 += (int)Test.instanceCount;
                        i3 = -29772;
                    }
                }
                break;
            case 96:
                i18 *= (int)Test.fFld1;
                break;
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i17 + i18 + Float.floatToIntBits(f) + i19 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        double d=33.122387;
        int i=-23, i20=-7, i21=19131, i22=13, i23=8, i24=-31826, i25=-244, i26=61650, i27=-24;
        short s=-14440;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)30);

        d += i;
        s *= (short)(fFld + (i - Test.instanceCount));
        vMeth(i);
        for (i20 = 3; 194 > i20; i20++) {
            byte by=-117;
            Test.instanceCount += i;
            by += (byte)18026;
            i21 -= i;
        }
        for (i22 = 348; i22 > 15; --i22) {
            Test.bFld = Test.bFld;
            lArrFld[i22 - 1] = (long)Test.dFld;
            Test.instanceCount = -1;
        }
        i24 = 1;
        do {
            i25 = 1;
            while (++i25 < 124) {
                Test.instanceCount += (long)14.337F;
                Test.bFld = true;
                Test.instanceCount *= (long)d;
                lArrFld[i25 + 1] <<= 121L;
                for (i26 = 1; 1 > i26; i26++) {
                    if (Test.bFld) {
                        i *= i25;
                        i27 = i;
                        switch ((((i24 >>> 1) % 6) * 5) + 123) {
                        case 129:
                            Test.fFld1 = Test.instanceCount;
                            i21 = i27;
                            break;
                        case 152:
                            i27 += (int)(-117.207F + (i26 * i26));
                            break;
                        case 145:
                            Test.instanceCount &= i27;
                            break;
                        case 140:
                            byArr[i25 + 1] >>>= (byte)Test.instanceCount;
                            Test.instanceCount *= i22;
                            break;
                        case 130:
                            i <<= i24;
                            i21 -= i23;
                        case 127:
                            i21 *= -48761;
                            break;
                        default:
                            iArrFld[i26] = (int)100.84839;
                        }
                    }
                }
            }
        } while (++i24 < 203);

        FuzzerUtils.out.println("d i s = " + Double.doubleToLongBits(d) + "," + i + "," + s);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 byArr = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.fFld1 = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Float.floatToIntBits(Test.fFld1));
        FuzzerUtils.out.println("Test.dFld Test.bFld Test.dArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            (Test.bFld ? 1 : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("lArrFld iArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
