// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:11 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-186L;
    public static boolean bFld=false;
    public static byte byFld=125;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i6) {

        int i7=-48998, i8=-228, i9=-22120, iArr[]=new int[N], iArr1[]=new int[N];
        float f1=-47.911F, f2=46.84F;
        double d1=26.48186;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, -91);
        FuzzerUtils.init(byArr, (byte)-95);
        FuzzerUtils.init(iArr1, 55851);

        i7 = 216;
        do {
            try {
                i6 = (-58200 / i7);
                iArr[i7 + 1] = (i6 / -3125);
                i6 = (246 / i6);
            } catch (ArithmeticException a_e) {}
            f1 = 1;
            do {
                i6 += (int)f1;
                byArr[i7 - 1] = (byte)i7;
                i6 = i7;
                f2 -= l;
                for (d1 = 1; 1 > d1; ++d1) {
                    i8 = i6;
                    iArr[(int)(d1)] = i8;
                    if (Test.bFld) continue;
                    i9 >>= (int)Test.instanceCount;
                    iArr = iArr1;
                }
                if (Test.bFld) break;
            } while (++f1 < 14);
            l += (i7 | i7);
        } while ((i7 -= 2) > 0);
        vMeth2_check_sum += l + i6 + i7 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d1) + i8 + i9 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(double d, int i3) {

        int i4=52268, i5=3460, i10=666, i11=19099, i12=107, i13=7, i14=45300, iArr2[]=new int[N];
        float f=15.86F;
        byte by=85;

        FuzzerUtils.init(iArr2, -32068);

        for (i4 = 9; 200 > i4; i4++) {
            if (i5 != 0) {
                vMeth1_check_sum += Double.doubleToLongBits(d) + i3 + i4 + i5 + Float.floatToIntBits(f) + by + i10 +
                    i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2);
                return;
            }
            f += ((long)i4 | (long)i3);
        }
        f += (by *= (byte)Test.instanceCount);
        vMeth2(Test.instanceCount, i4);
        i5 += (int)-74.151F;
        iArr2[(i4 >>> 1) % N] = (int)1289049987L;
        for (i10 = 12; 279 > i10; i10++) {
            i5 *= i10;
            iArr2[i10] -= (int)d;
            f *= f;
            i12 += (int)f;
        }
        for (i13 = 8; 205 > i13; ++i13) {
            i12 -= (int)8109789387926571388L;
            i3 -= (int)f;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i3 + i4 + i5 + Float.floatToIntBits(f) + by + i10 + i11 + i12
            + i13 + i14 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i1, int i2, short s) {

        double d2=95.4745, d3=120.12533;
        int i15=36669, i16=-12, i17=-21374, i18=14, i19=11, iArr3[]=new int[N];
        float f3=-99.726F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr3, -1680);
        FuzzerUtils.init(bArr, false);

        vMeth1(d2, i2);
        for (i15 = 4; 219 > i15; ++i15) {
            Test.instanceCount >>>= Test.byFld;
            for (d3 = 1; d3 < 7; ++d3) {
                i16 *= (int)35L;
            }
            f3 = Test.byFld;
            i16 = (int)f3;
            try {
                i2 = (iArr3[i15 + 1] % -1028271977);
                iArr3[i15] = (-46028466 % iArr3[i15 - 1]);
                i16 = (i15 % -19737);
            } catch (ArithmeticException a_e) {}
            i2 += (i15 ^ i16);
            i2 = i15;
            for (i18 = 1; i18 < 7; ++i18) {
                i19 += (i18 | i18);
            }
            if (Test.bFld) continue;
        }
        d2 = i17;
        bArr[(i19 >>> 1) % N] = Test.bFld;
        vMeth_check_sum += i1 + i2 + s + Double.doubleToLongBits(d2) + i15 + i16 + Double.doubleToLongBits(d3) + i17 +
            Float.floatToIntBits(f3) + i18 + i19 + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i20=2, i21=172, i22=30100, i23=59605, i24=-5, i25=-12, i26=-127, i27=5, iArr4[]=new int[N];
        short s1=852;
        float f4=0.367F;
        long l1=3633516044L, lArr[]=new long[N];
        double d4=54.110750;

        FuzzerUtils.init(iArr4, -5);
        FuzzerUtils.init(lArr, 13L);

        i -= Math.abs(++i);
        vMeth(20452, i, s1);
        iArr4[(i >>> 1) % N] -= s1;
        f4 *= i;
        for (l1 = 11; l1 < 306; ++l1) {
            i21 = 1;
            while (++i21 < 85) {
                f4 *= i;
                if (Test.bFld) break;
                switch ((int)((l1 % 2) + 29)) {
                case 29:
                    i22 += i20;
                case 30:
                    for (i23 = 1; i23 < 1; i23++) {
                        i20 = i22;
                    }
                    for (i25 = 1; i25 < 1; ++i25) {
                        f4 = i21;
                        f4 -= f4;
                        i24 = Test.byFld;
                        iArr4[i21 + 1] *= i22;
                        i *= i;
                        f4 = i22;
                        lArr[i25 - 1] *= l1;
                        i26 >>>= s1;
                        if (false) {
                            lArr[i25 - 1] >>= i;
                        }
                    }
                    i26 = i;
                    for (d4 = 1; d4 < 1; ++d4) {
                        i26 += (int)d4;
                    }
                    break;
                default:
                    f4 = l1;
                    i26 = (int)f4;
                }
                i26 += (i21 * i24);
                iArr4[i21 + 1] -= (int)Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i s1 f4 = " + i + "," + s1 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("l1 i20 i21 = " + l1 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 d4 = " + i25 + "," + i26 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i27 iArr4 lArr = " + i27 + "," + FuzzerUtils.checkSum(iArr4) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.byFld = " + Test.instanceCount + "," + (Test.bFld ?
            1 : 0) + "," + Test.byFld);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
