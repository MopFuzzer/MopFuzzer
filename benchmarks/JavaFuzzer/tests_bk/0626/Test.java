// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4867L;
    public static short sFld=-293;
    public static byte byFld=-126;
    public static int iFld=35;
    public static int iFld1=-11;
    public static boolean bFld=true;
    public static float fFld=11.964F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -14013);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, int i8, int i9) {

        int i10=81, i11=-33070, i12=213, i13=145, i14=-1, i15=124, i16=127;
        float f=2.81F;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -6759520263587994871L);

        for (i10 = 22; 394 > i10; i10++) {
            for (i12 = 1; 5 > i12; ++i12) {
                for (i14 = 1; i14 < 2; ++i14) {
                    lArr = lArr;
                    Test.byFld |= (byte)i11;
                    i13 *= 2;
                    f += -176;
                    if (b2) {
                        i15 = i7;
                        i7 = i7;
                        i7 *= Test.byFld;
                    } else if (b2) {
                        i16 = i12;
                        i11 = (int)Test.instanceCount;
                        Test.iArrFld[i12 + 1] = (int)f;
                    } else if (b2) {
                        Test.instanceCount += Test.instanceCount;
                    }
                }
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f) + i16 + (b2 ? 1
            : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i6, boolean b1) {

        int i17=-175, i18=-6, i19=131, i20=55266, iArr1[][]=new int[N][N];
        double d2=0.26620, dArr[]=new double[N];
        float f1=-34.59F;
        long l=118L, lArr1[]=new long[N];
        short s=24854;

        FuzzerUtils.init(lArr1, -208L);
        FuzzerUtils.init(iArr1, -6240);
        FuzzerUtils.init(dArr, -29.27231);

        Test.byFld -= (byte)(-((--i6) * (i6 & i6)));
        vMeth2(i6, i6, i6);
        for (i17 = 6; i17 < 184; ++i17) {
            lArr1[i17 - 1] -= Test.instanceCount;
            Test.instanceCount %= (i17 | 1);
            i6 -= (int)d2;
            i6 <<= i17;
        }
        for (i19 = 1; i19 < 146; ++i19) {
            int i21=1;
            switch (i19 + 2) {
            case 2:
                Test.instanceCount += (((i19 * i17) + i20) - i17);
                if (b1) {
                    Test.instanceCount *= Test.instanceCount;
                } else if (true) {
                    i18 = i6;
                } else {
                    i20 = i19;
                    iArr1[i19 - 1][i19 + 1] = i19;
                }
                break;
            case 3:
                i21 += 184;
                break;
            case 4:
                i18 = (int)f1;
                break;
            case 5:
                Test.instanceCount += Test.sFld;
                break;
            case 6:
                Test.instanceCount >>= i20;
                break;
            case 7:
                i21 += (i19 + Test.iFld);
                break;
            case 8:
                i6 *= Test.iFld;
                break;
            case 9:
                i6 += i19;
                break;
            case 10:
                l += i17;
                break;
            case 11:
                if (Test.iFld != 0) {
                    vMeth1_check_sum += i6 + (b1 ? 1 : 0) + i17 + i18 + Double.doubleToLongBits(d2) + i19 + i20 +
                        Float.floatToIntBits(f1) + l + s + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
            case 12:
                i6 = (int)-628711854482603838L;
                break;
            case 13:
                i18 *= (int)f1;
                break;
            case 14:
                i6 += (i19 + i18);
            case 15:
            case 16:
                i6 += (i19 * i19);
            case 17:
                i6 = i20;
                break;
            case 18:
                i6 += (i19 * i19);
                break;
            case 19:
                Test.iFld = (int)Test.instanceCount;
                break;
            case 20:
                d2 -= Test.byFld;
                break;
            case 21:
                Test.instanceCount = Test.iFld;
                break;
            case 22:
                Test.iFld = (int)Test.instanceCount;
                break;
            case 23:
                i18 >>= (int)Test.instanceCount;
            case 24:
                iArr1[i19][i19 - 1] <<= Test.iFld;
            case 25:
                Test.instanceCount <<= l;
            case 26:
                b1 = true;
                break;
            case 27:
                i6 += (i19 * i19);
                break;
            case 28:
                Test.iFld += Test.iFld;
                break;
            case 29:
                lArr1[i19 - 1] -= (long)f1;
                break;
            case 30:
                i21 += i19;
            case 31:
                iArr1[i19 + 1][i19] += i6;
            case 32:
                Test.iArrFld[i19] = (int)f1;
                break;
            case 33:
            case 34:
                i21 *= Test.byFld;
                break;
            case 35:
                Test.sFld -= (short)250;
                break;
            case 36:
            case 37:
                dArr[i19 + 1] -= i17;
                break;
            case 38:
                Test.instanceCount -= (long)f1;
                break;
            case 39:
                if (b1) break;
            case 40:
                Test.sFld += (short)(i19 * i19);
            case 41:
                i18 >>= i17;
            case 42:
                lArr1 = lArr1;
                break;
            case 43:
                i6 = -60017;
                break;
            case 44:
                l >>>= i18;
                break;
            case 45:
                i18 <<= (int)l;
                break;
            case 46:
                l -= -2053259078561714230L;
                break;
            case 47:
                i21 -= i20;
                break;
            case 48:
                d2 -= -249;
            case 49:
                d2 -= i19;
                break;
            case 50:
                s += (short)i19;
            case 51:
                Test.iArrFld[i19] -= Test.iFld1;
                break;
            case 52:
                iArr1[i19][i19] -= i19;
                break;
            case 53:
                if (true) continue;
                break;
            case 54:
                d2 = f1;
                break;
            case 55:
                Test.iArrFld = Test.iArrFld;
                break;
            case 56:
                Test.iFld1 = i20;
                break;
            case 57:
                d2 += i20;
                break;
            case 58:
                if (b1) break;
                break;
            case 59:
                i21 = i21;
                break;
            case 60:
                i20 = i20;
                break;
            case 61:
                l -= (long)f1;
                break;
            case 62:
                i18 = (int)l;
                break;
            case 63:
                Test.iFld *= (int)2.36552;
                break;
            case 64:
                Test.iArrFld[i19] += s;
                break;
            case 65:
                Test.instanceCount = -16622;
                break;
            case 66:
                Test.bFld = Test.bFld;
                break;
            case 67:
                i6 += 49910;
                break;
            case 68:
                d2 += i17;
                break;
            case 69:
                Test.instanceCount += (i19 | i6);
                break;
            case 70:
                f1 += (((i19 * i18) + i21) - i20);
                break;
            case 71:
                Test.iFld1 -= (int)Test.instanceCount;
                break;
            default:
                l += i19;
            }
        }
        vMeth1_check_sum += i6 + (b1 ? 1 : 0) + i17 + i18 + Double.doubleToLongBits(d2) + i19 + i20 +
            Float.floatToIntBits(f1) + l + s + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i2=3, i3=48794, i4=-22149, i5=-4614, i22=-65369, i23=21148, i24=222, i25=-18364;
        double d1=77.13561;
        boolean b=true;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -134L);

        for (i2 = 6; i2 < 145; ++i2) {
            i3 &= (-Integer.reverseBytes((int)(d1 + -3)));
            for (i4 = 1; i4 < 11; ++i4) {
                b = b;
                i3 += (i4 * i4);
                vMeth1(59, true);
                for (i22 = 1; 2 > i22; i22++) {
                    Test.iFld1 ^= -27915;
                    i23 += i23;
                }
                Test.instanceCount *= Test.instanceCount;
                Test.iArrFld[i2 - 1] &= i2;
                lArr2 = lArr2;
                for (i24 = i4; i24 < 2; ++i24) {
                    float f2=-94.945F;
                    i25 += (((i24 * f2) + i5) - i23);
                    i23 = i2;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + Double.doubleToLongBits(d1) + i4 + i5 + (b ? 1 : 0) + i22 + i23 + i24 + i25 +
            FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=6, i26=48043, i27=-43870, i28=-362, i29=237, i30=-7264, i31=1, i32=9, iArr[][]=new int[N][N];
        double d=-8.69550;
        float fArr[]=new float[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 32);
        FuzzerUtils.init(fArr, 0.351F);
        FuzzerUtils.init(sArr, (short)-4027);

        for (i = 18; i < 318; i++) {
            i1 += (((i * i) + Test.instanceCount) - i);
            Test.sFld -= (short)(iArr[i][i - 1] + i1);
            d += Test.instanceCount;
            vMeth();
            Test.iFld1 = i;
            Test.byFld = (byte)Test.instanceCount;
            iArr[i - 1][i - 1] = Test.iFld;
        }
        Test.instanceCount += -53;
        Test.fFld = 149;
        for (i26 = 2; i26 < 122; ++i26) {
            Test.iArrFld[i26] += Test.sFld;
            fArr[(i27 >>> 1) % N] += Test.fFld;
            Test.fFld = (float)d;
        }
        iArr[(Test.iFld1 >>> 1) % N][(i >>> 1) % N] = Test.iFld1;
        for (i28 = 10; 351 > i28; ++i28) {
            d += Test.iFld;
            Test.iFld = -4;
            Test.iFld += (i28 * i28);
            i1 += Test.iFld1;
            i1 += i28;
            Test.instanceCount %= -54402;
        }
        iArr[(Test.iFld >>> 1) % N][(12 >>> 1) % N] |= i26;
        try {
            i30 = 1;
            while (++i30 < 379) {
                sArr[i30 - 1] /= (short)47760;
                for (i31 = 3; i31 < 66; i31++) {
                    Test.instanceCount -= i1;
                    i32 -= i;
                    Test.instanceCount += -142;
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            Test.fFld += i32;
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 iArr fArr = " + i32 + "," + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.iFld Test.iFld1 Test.bFld = " + Test.iFld + "," + Test.iFld1 + "," + (Test.bFld ?
            1 : 0));
        FuzzerUtils.out.println("Test.fFld Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
