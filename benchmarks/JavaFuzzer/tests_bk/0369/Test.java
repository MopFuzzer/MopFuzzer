// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3099676921L;
    public int iFld=23121;
    public static double dFld=-93.11356;
    public static float fFld=0.115F;
    public static boolean bFld=true;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public void vMeth1(int i4) {

        byte by1=2;
        int i5=227, i6=30509;
        float f=2.667F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)13958);

        Test.instanceCount += by1;
        i5 = 1;
        do {
            Test.instanceCount += (((i5 * i5) + i4) - i4);
            Test.instanceCount += i4;
            for (f = 1; f < 5; ++f) {
                sArr[(int)(f)] += (short)1.796F;
                Test.instanceCount <<= -120;
                iArrFld[i5 + 1] += i4;
                i6 += (int)(((f * i6) + i4) - i6);
                i6 += (int)(f + i4);
                Test.instanceCount = i4;
                i6 += (int)f;
            }
            iArrFld[i5] <<= (int)50097L;
            i4 += i5;
            i4 += i5;
        } while (++i5 < 314);
        vMeth1_check_sum += i4 + by1 + i5 + Float.floatToIntBits(f) + i6 + FuzzerUtils.checkSum(sArr);
    }

    public int iMeth(long l, long l1) {

        long l2=-2L;
        int i3=4, i7=-9, i8=-91, i9=-14, i10=28613;
        byte by=-88;
        short s=23161;

        for (l2 = 18; l2 < 318; ++l2) {
            by = (byte)(++Test.instanceCount);
            vMeth1(iFld);
            i3 += (int)Test.dFld;
            i7 = 1;
            do {
                iFld += (i7 | i7);
                Test.fFld = i3;
            } while (++i7 < 6);
            i8 = 1;
            do {
                s += (short)i8;
                Test.fFld = l2;
                iFld *= (int)l;
                for (i9 = 1; i9 < 1; i9++) {
                    i10 += i9;
                    Test.bFld = Test.bFld;
                    i10 += (-14 + (i9 * i9));
                }
            } while (++i8 < 6);
        }
        long meth_res = l + l1 + l2 + i3 + by + i7 + i8 + s + i9 + i10;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=58587, i1=-75, i2=-22995;
        short s1=-10273;
        byte by2=-73;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 14917L);

        for (i = 11; i < 282; ++i) {
            if (Test.bFld) {
                i2 = 6;
                do {
                    switch ((i2 % 2) + 39) {
                    case 39:
                        i1 -= (++i1);
                        lArr[i] += iMeth(Test.instanceCount, Test.instanceCount);
                        Test.bFld = Test.bFld;
                        iArrFld[i2 + 1] >>= i2;
                    case 40:
                        s1 *= (short)i2;
                        Test.fFld += 148;
                        iFld = i;
                        break;
                    }
                    iFld += iFld;
                    Test.instanceCount -= i2;
                    by2 = (byte)Test.instanceCount;
                    Test.instanceCount = (long)1.86909;
                } while (--i2 > 0);
            } else {
                i1 += (i * i);
            }
        }
        vMeth_check_sum += i + i1 + i2 + s1 + by2 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i11=-4440, i12=14, i13=-5, i14=32207, i15=218, i16=36423, i17=-45033, i18=1857;
        byte by3=104;
        long lArr1[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr1, -2285245686L);
        FuzzerUtils.init(fArr, -1.524F);

        vMeth();
        i11 = 1;
        do {
            if (Test.bFld) continue;
        } while (++i11 < 250);
        for (i12 = 156; i12 > 2; --i12) {
            iFld = (int)Test.dFld;
            i13 += (((i12 * iFld) + Test.fFld) - i12);
            i14 = 1;
            while ((i14 += 2) < 163) {
                iFld = i11;
                i13 += (i14 * i14);
                lArr1[i12 - 1] -= 15116;
                if (Test.bFld) continue;
                for (i15 = 3; 1 < i15; i15--) {
                    short s2=-22721;
                    Test.fFld = -5;
                    switch (((i15 % 5) * 5) + 57) {
                    case 64:
                        iArrFld[i15] -= (int)Test.fFld;
                        Test.instanceCount = i15;
                        i13 = s2;
                        break;
                    case 75:
                        if (true) break;
                    case 79:
                        lArr1[i12 + 1] <<= s2;
                        s2 = (short)Test.instanceCount;
                        break;
                    case 58:
                        Test.instanceCount *= by3;
                        break;
                    case 78:
                        iArrFld[i14 - 1] >>= i11;
                        break;
                    }
                    iFld += (i15 * i15);
                    Test.dFld += i16;
                }
            }
            iArrFld[i12 + 1] = i16;
            if (false) continue;
            for (i17 = 5; i17 < 163; i17++) {
                iArrFld[i17 - 1] *= i17;
                fArr[i17 + 1] += 64667;
            }
        }
        i16 += (int)4450763497007899152L;

        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("by3 i17 i18 = " + by3 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("lArr1 fArr = " + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.dFld = " + Test.instanceCount + "," + iFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.bFld iArrFld = " + Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ?
            1 : 0) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
