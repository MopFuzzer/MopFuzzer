// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i10, float f, int i11) {

        int i12=162, i13=-13, i14=-25968, i15=158, iArr[]=new int[N];
        double d=0.89403;
        float f1=22.988F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -213);
        FuzzerUtils.init(bArr, false);

        i12 = 1;
        while (++i12 < 193) {
            i11 += (i12 * i12);
            iArr[i12 + 1] *= (int)Test.instanceCount;
            i10 += (i12 * i12);
            d *= i11;
            for (f1 = 1; f1 < 8; f1 += 3) {
                i13 += (int)(((f1 * i13) + i10) - Test.instanceCount);
                i11 += (int)f1;
            }
            i11 += (int)Test.instanceCount;
            for (i14 = 1; 8 > i14; i14++) {
                i10 -= (int)f;
                Test.instanceCount /= (i12 | 1);
                Test.instanceCount = -15223;
                d = i14;
                bArr = bArr;
            }
        }
        vMeth2_check_sum += i10 + Float.floatToIntBits(f) + i11 + i12 + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f1) + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth1(int i4, int i5) {

        int i6=13, i7=-34092, i8=-3, i9=-7, i16=-18179, iArr1[]=new int[N];
        float f2=45.107F;

        FuzzerUtils.init(iArr1, 9);

        i4 = i5;
        for (i6 = 2; i6 < 178; i6++) {
            for (i8 = i6; i8 < 9; ++i8) {
                vMeth2(i4, f2, i4);
                try {
                    i4 = (137 % i9);
                    iArr1[i6] = (-107 % i6);
                    i9 = (26641 % i7);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += (((i8 * Test.instanceCount) + i16) - i6);
                iArr1[i6 + 1] -= i4;
            }
            iArr1[i6 - 1] *= 3;
            try {
                i16 = (i7 % -173843199);
                iArr1[i6 - 1] = (i8 % 90);
                i5 = (-862916628 % iArr1[i6]);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount &= i9;
            iArr1[i6 - 1] -= 14;
            iArr1[i6 - 1] *= i4;
            i5 += (i6 | i7);
            i16 += i7;
            i9 *= 193;
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f2) + i16 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i, boolean b, int i1) {

        int i2=-49, i3=-13, i18=179, i19=-7, i20=8, iArr2[]=new int[N];
        float f3=0.361F;
        double d1=-55.49054;
        short s=-21740;
        byte by=-110, byArr[]=new byte[N];
        long lArr[]=new long[N];
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(iArr2, -11);
        FuzzerUtils.init(lArr, -21181L);
        FuzzerUtils.init(byArr, (byte)87);
        FuzzerUtils.init(bArr1, false);

        for (i2 = 17; 328 > i2; ++i2) {
            vMeth1(i1, i);
            iArr2[i2] = (int)f3;
            for (i18 = i2; 5 > i18; i18++) {
                switch ((i2 % 9) + 26) {
                case 26:
                    i20 = 1;
                    while (++i20 < 1) {
                        Test.instanceCount += i20;
                        d1 += i2;
                        i += i20;
                        switch (((i18 % 6) * 5) + 33) {
                        case 46:
                            i >>>= i19;
                            i += s;
                        case 41:
                            i1 |= (int)Test.instanceCount;
                            i1 = i;
                            i19 *= by;
                            break;
                        case 37:
                            if (true) continue;
                            break;
                        case 43:
                            Test.instanceCount += (-76 + (i20 * i20));
                            break;
                        case 40:
                            iArr2[i18 + 1] *= s;
                            break;
                        case 44:
                            i19 -= i3;
                            break;
                        }
                    }
                    break;
                case 27:
                    Test.instanceCount += i20;
                case 28:
                    lArr[i2] *= i3;
                    break;
                case 29:
                    i3 -= (int)86.104F;
                case 30:
                    byArr[i2 + 1] >>>= (byte)i19;
                    break;
                case 31:
                    byArr[i18 + 1] -= (byte)i18;
                    break;
                case 32:
                    i19 += i18;
                case 33:
                    bArr1[i2 + 1] = false;
                    break;
                case 34:
                    Test.instanceCount += i18;
                    break;
                default:
                    if (i18 != 0) {
                        vMeth_check_sum += i + (b ? 1 : 0) + i1 + i2 + i3 + Float.floatToIntBits(f3) + i18 + i19 + i20
                            + Double.doubleToLongBits(d1) + s + by + FuzzerUtils.checkSum(iArr2) +
                            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(bArr1);
                        return;
                    }
                }
            }
        }
        vMeth_check_sum += i + (b ? 1 : 0) + i1 + i2 + i3 + Float.floatToIntBits(f3) + i18 + i19 + i20 +
            Double.doubleToLongBits(d1) + s + by + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(bArr1);
    }

    public void mainTest(String[] strArr1) {

        boolean b1=true;
        int i21=216, i22=0, i23=0, i24=7, i25=53961, i26=250, i27=-14742, i28=-75, iArr3[]=new int[N];
        double d2=0.86286;
        byte by1=-84;
        short sArr[]=new short[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(sArr, (short)-26361);
        FuzzerUtils.init(fArr, -14.602F);
        FuzzerUtils.init(iArr3, -132);

        vMeth(15433, b1, i21);
        Test.instanceCount = i21;
        Test.instanceCount = i21;
        i21 = i21;
        for (i22 = 22; i22 < 390; ++i22) {
            d2 -= -14;
            i24 = 1;
            do {
                i23 -= i24;
                by1 -= (byte)Test.instanceCount;
            } while (++i24 < 68);
            for (i25 = 4; i25 < 68; i25++) {
                for (i27 = 1; i27 < 2; i27++) {
                    i21 -= (int)-16.1008F;
                    i21 = (int)4126L;
                    i23 += i28;
                    sArr[i25 + 1] -= (short)i22;
                    d2 += i25;
                    if (b1) {
                        i23 >>>= i24;
                        d2 -= 37346;
                        i21 = by1;
                    } else {
                        d2 *= i26;
                        switch ((i27 % 2) + 99) {
                        case 99:
                            Test.instanceCount += (i27 - i27);
                            i21 += i27;
                            i26 = i27;
                            fArr[i27 - 1] = 77;
                            break;
                        case 100:
                            Test.instanceCount &= i27;
                            i23 |= by1;
                            iArr3[i25 + 1] += i27;
                        default:
                            i21 += (i27 + i22);
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("b1 i21 i22 = " + (b1 ? 1 : 0) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 d2 i24 = " + i23 + "," + Double.doubleToLongBits(d2) + "," + i24);
        FuzzerUtils.out.println("by1 i25 i26 = " + by1 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 sArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("fArr iArr3 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount = " + Test.instanceCount);

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
