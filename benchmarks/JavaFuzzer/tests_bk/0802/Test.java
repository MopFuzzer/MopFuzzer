// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1268887171L;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
        FuzzerUtils.init(Test.lArrFld, 190L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public int iMeth(int i) {

        double d=-73.20289;

        d = i;
        long meth_res = i + Double.doubleToLongBits(d);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f, int i4) {

        short s=13743;
        double d1=24.40519, d2=-124.127159;
        int i5=-44145, i6=-40992;
        byte by=67;
        boolean b=true;

        if (b) {
            s = (short)7068688016407260857L;
            i4 -= i4;
            d1 += i4;
            vMeth1_check_sum += Float.floatToIntBits(f) + i4 + s + Double.doubleToLongBits(d1) +
                Double.doubleToLongBits(d2) + i5 + by + (b ? 1 : 0) + i6;
            return;
        } else if (b) {
            if (true) {
                switch (((i4 >>> 1) % 2) + 122) {
                case 122:
                    i4 = i4;
                    break;
                case 123:
                    s = s;
                    Test.instanceCount += i4;
                    break;
                default:
                    for (d2 = 355; d2 > 19; d2 -= 3) {
                        by += (byte)(-218 + (d2 * d2));
                        i5 = (int)Test.instanceCount;
                        Test.instanceCount -= i5;
                        Test.instanceCount = -12;
                        i4 = 118;
                    }
                }
            } else if (b) {
                i5 = i5;
            } else {
                i4 = (int)8551502293900987163L;
            }
            vMeth1_check_sum += Float.floatToIntBits(f) + i4 + s + Double.doubleToLongBits(d1) +
                Double.doubleToLongBits(d2) + i5 + by + (b ? 1 : 0) + i6;
            return;
        } else if (b) {
            i5 = i6;
        } else {
            s = (short)i4;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i4 + s + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(d2) + i5 + by + (b ? 1 : 0) + i6;
    }

    public static int iMeth1(long l1) {

        int i7=5, i8=10, i9=-59521, i10=236, i11=40455, i12=45911;
        double d3=0.85294;
        boolean b1=false;

        for (int i3 : Test.iArrFld) {
            float f1=-1.786F;
            vMeth1(f1, 11);
            Test.instanceCount = i3;
            if (b1) {
                i3 -= (int)f1;
                for (i7 = 1; 4 > i7; i7++) {
                    d3 %= (Test.instanceCount | 1);
                    for (i9 = 2; 1 < i9; i9--) {
                        i8 %= (int)(Test.instanceCount | 1);
                    }
                    for (i11 = i7; 2 > i11; i11++) {
                        switch ((i11 % 1) + 117) {
                        case 117:
                            switch ((i7 % 8) + 110) {
                            case 110:
                                i10 >>= i3;
                                i8 += i12;
                                break;
                            case 111:
                                i8 += (((i11 * i9) + i10) - i12);
                                break;
                            case 112:
                                d3 -= f1;
                                break;
                            case 113:
                                try {
                                    Test.iArrFld[i7 - 1] = (i11 % -45039);
                                    i10 = (i8 % 1319348710);
                                    i3 = (-115 / i12);
                                } catch (ArithmeticException a_e) {}
                                break;
                            case 114:
                            case 115:
                                f1 = i8;
                            case 116:
                                f1 -= i10;
                                break;
                            case 117:
                                i10 += i11;
                                break;
                            }
                            break;
                        }
                    }
                }
            }
        }
        long meth_res = l1 + i7 + i8 + Double.doubleToLongBits(d3) + i9 + i10 + i11 + i12 + (b1 ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        long l=59900L, l2=50212L;
        int i2=5, i13=-44713, i14=-51049, i15=-3357;
        short s1=6774;
        float f2=1.857F;

        for (l = 17; 353 > l; l++) {
            i2 = i2;
            Test.iArrFld[(int)(l + 1)] -= (int)((i2 *= (i2 + i2)) * (iMeth1(l) * l));
            i2 += (int)(l * s1);
            try {
                i13 = (653587973 / i2);
                i13 = (-19940 / Test.iArrFld[(int)(l + 1)]);
                Test.iArrFld[(int)(l - 1)] = (-1711764463 % i2);
            } catch (ArithmeticException a_e) {}
            switch (((i13 >>> 1) % 2) + 49) {
            case 49:
                for (i14 = 1; i14 < 5; i14++) {
                    i15 += (int)(-76.525F + (i14 * i14));
                    l2 = 1;
                    do {
                        f2 = s1;
                        Test.instanceCount += l2;
                    } while ((l2 += 2) < 2);
                    Test.lArrFld[(int)(l - 1)] >>= -2;
                    Test.instanceCount = l2;
                    Test.iArrFld[(int)(l + 1)] = i13;
                    i2 = i14;
                }
                break;
            case 50:
                i13 >>= -9;
            }
        }
        vMeth_check_sum += l + i2 + s1 + i13 + i14 + i15 + l2 + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        int i1=34493, i16=-33803, i18=15916, i19=-236, i20=-782, i21=210, i22=-3, i23=33;
        boolean b2=true;
        double d4=109.33647;
        float f3=-42.309F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 50.29F);

        iMeth(i1);
        fArr[(i1 >>> 1) % N] -= (Test.instanceCount - Math.max(Test.iArrFld[(i1 >>> 1) % N], i1 - i1));
        vMeth();
        i1 -= i1;
        i16 = 1;
        do {
            Test.instanceCount += (i16 * i16);
        } while (++i16 < 199);
        b2 = b2;
        b2 = b2;
        for (int i17 : Test.iArrFld) {
            i1 |= i17;
            for (i18 = 1; i18 < 63; ++i18) {
                Test.instanceCount += i18;
            }
            Test.instanceCount *= i18;
            i20 = 1;
            do {
                i21 = 1;
                while (++i21 < 1) {
                    d4 = 79;
                }
                Test.iArrFld[i20 - 1] += i19;
                for (i22 = 1; i22 < 1; i22++) {
                    Test.instanceCount += (((i22 * i17) + f3) - i19);
                    Test.lArrFld[i20] >>= i18;
                    i23 += i17;
                    Test.iArrFld[i20] = (int)Test.instanceCount;
                    i19 *= (int)Test.instanceCount;
                    i23 <<= 3;
                }
                i19 += i20;
                i23 -= 179;
                i19 += (i20 ^ (long)f3);
                try {
                    i1 = (i18 / 62511);
                    i19 = (59259 / i20);
                    i23 = (i23 % i21);
                } catch (ArithmeticException a_e) {}
                d4 = -65.80233;
                if (b2) continue;
            } while (++i20 < 63);
        }

        FuzzerUtils.out.println("i1 i16 b2 = " + i1 + "," + i16 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 d4 i22 = " + i21 + "," + Double.doubleToLongBits(d4) + "," + i22);
        FuzzerUtils.out.println("i23 f3 fArr = " + i23 + "," + Float.floatToIntBits(f3) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.iArrFld Test.lArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
