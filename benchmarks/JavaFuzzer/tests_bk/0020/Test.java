// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-239L;
    public static float fFld=2.431F;
    public static int iArrFld[][]=new int[N][N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 10);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, long l) {


        i4 >>>= (int)Test.instanceCount;
        vMeth1_check_sum += i4 + l;
    }

    public static double dMeth() {

        int i5=-212;
        float f=0.134F;
        short s1=18909;

        vMeth1(16, Test.instanceCount);
        i5 <<= (int)Test.instanceCount;
        f *= i5;
        i5 = s1;
        f += i5;
        long meth_res = i5 + Float.floatToIntBits(f) + s1;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i, short s, int i1) {

        int i2=12, i3=2;
        float f1=-2.330F;
        boolean b=true;
        byte by=-93;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3287367096L);

        for (i2 = 7; i2 < 370; ++i2) {
            if (i3 != 0) {
                vMeth_check_sum += i + s + i1 + i2 + i3 + Float.floatToIntBits(f1) + (b ? 1 : 0) + by +
                    FuzzerUtils.checkSum(lArr);
                return;
            }
            i3 *= (int)Math.max(i3 - s, Test.instanceCount);
            dMeth();
            switch ((i2 % 3) + 109) {
            case 109:
                f1 -= Test.instanceCount;
                i1 <<= i2;
                if (b) continue;
                Test.instanceCount += -12;
            case 110:
                i <<= -8;
                break;
            case 111:
                lArr[i2] >>= i3;
                if (b) {
                    i3 += (i2 | by);
                    Test.instanceCount += (i2 * i2);
                    i += (((i2 * Test.instanceCount) + f1) - i1);
                } else {
                    Test.iArrFld[i2][i2 + 1] = (int)Test.instanceCount;
                }
                break;
            }
        }
        vMeth_check_sum += i + s + i1 + i2 + i3 + Float.floatToIntBits(f1) + (b ? 1 : 0) + by +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i6=8, i7=2, i8=-203, i9=-24729, i10=65102, i11=-10, i12=-88, i14=47, i15=-10, i16=-7, iArr[]=new int[N];
        boolean b1=true;
        byte by1=29;
        short s2=-1409;
        double d=33.71596;
        float f2=-1.15F, fArr[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, -31.324F);
        FuzzerUtils.init(iArr, -57652);
        FuzzerUtils.init(lArr1, 7542L);

        vMeth(i6, (short)(18590), i6);
        i7 = 1;
        do {
            i6 += (((i7 * Test.instanceCount) + Test.instanceCount) - i7);
            b1 = false;
            fArr[i7 - 1] -= i6;
            i6 += i7;
            for (i8 = 121; i8 > i7; --i8) {
                i6 = i6;
            }
            i10 = 1;
            while (++i10 < 121) {
                i11 += by1;
                i9 -= i12;
                s2 += (short)i10;
                Test.fFld = i11;
                switch (((i7 >>> 1) % 1) + 50) {
                case 50:
                    Test.instanceCount += i10;
                    break;
                }
            }
            Test.instanceCount *= (long)d;
            Test.instanceCount += i9;
            i9 = i7;
        } while (++i7 < 208);
        i9 = -19194;
        for (int i13 : iArr) {
            i12 -= (int)Test.instanceCount;
            Test.bArrFld[(i12 >>> 1) % N] = false;
            s2 *= (short)Test.instanceCount;
            switch ((((i7 >>> 1) % 8) * 5) + 51) {
            case 56:
                for (i14 = 63; i14 > 2; --i14) {
                    for (f2 = 1; f2 < 2; ++f2) {
                        i11 += (int)68.400F;
                        d *= 57229;
                        Test.iArrFld[i14][(int)(f2)] &= -12;
                        Test.fFld *= i9;
                    }
                }
                break;
            case 59:
                d -= Test.instanceCount;
            case 69:
                iArr[(-55590 >>> 1) % N] *= -9119;
                break;
            case 88:
                i11 = (int)Test.instanceCount;
                break;
            case 74:
                i16 -= i13;
                break;
            case 54:
                lArr1[(i12 >>> 1) % N] *= Test.instanceCount;
            case 62:
                Test.instanceCount -= -1074391040L;
            case 80:
                s2 = (short)-40449;
            default:
                i11 = 9437;
            }
        }

        FuzzerUtils.out.println("i6 i7 b1 = " + i6 + "," + i7 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i8 i9 i10 = " + i8 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 by1 i12 = " + i11 + "," + by1 + "," + i12);
        FuzzerUtils.out.println("s2 d i14 = " + s2 + "," + Double.doubleToLongBits(d) + "," + i14);
        FuzzerUtils.out.println("i15 f2 i16 = " + i15 + "," + Float.floatToIntBits(f2) + "," + i16);
        FuzzerUtils.out.println("fArr iArr lArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.bArrFld = " + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
