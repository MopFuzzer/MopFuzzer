// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1981709903266641876L;
    public static volatile int iFld=-1;
    public static byte byFld=-76;
    public static volatile short sFld=-29177;
    public int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, -5.5425);
        FuzzerUtils.init(Test.lArrFld, 14L);
        FuzzerUtils.init(Test.fArrFld, 45.446F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public long lMeth(long l1) {

        int i5=-233, i6=83, i7=80, i8=-160, i9=607, i10=-77, iArr[]=new int[N];
        float f=-125.794F, fArr[]=new float[N];
        byte by=106;

        FuzzerUtils.init(iArr, -48902);
        FuzzerUtils.init(fArr, -1.701F);

        iArr[(i5 >>> 1) % N] <<= -1;
        i6 = 1;
        while (++i6 < 321) {
            for (i7 = 1; 5 > i7; i7 += 3) {
                l1 -= i6;
                Test.instanceCount = i6;
                iArr[i6 - 1] = (int)Test.instanceCount;
                f = f;
                l1 += i5;
                for (i9 = 5; 1 < i9; i9 -= 2) {
                    i10 = by;
                    i5 = i6;
                    iArr[i9 - 1] += (int)f;
                    i10 <<= (int)l1;
                    fArr[i7 + 1] += i10;
                    i5 += i9;
                }
            }
        }
        long meth_res = l1 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + i9 + i10 + by + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth1(long l) {

        int i3=-10, i4=152, i11=6, i12=30110, i13=8379, i14=-24, i15=-41843, i16=4;
        long l2=-28L;

        for (i3 = 9; i3 < 312; i3++) {
            i4 -= (int)lMeth(Test.instanceCount);
            if (false) continue;
        }
        i4 = 17441;
        for (l2 = 14; l2 < 228; l2++) {
            i11 = i3;
            for (i12 = 1; i12 < 8; i12++) {
                i4 = i11;
                for (i14 = 1; i14 < 2; i14++) {
                    if (i12 != 0) {
                        vMeth1_check_sum += l + i3 + i4 + l2 + i11 + i12 + i13 + i14 + i15 + i16;
                        return;
                    }
                    iArrFld[(int)(l2)] = i11;
                    if (i16 != 0) {
                        vMeth1_check_sum += l + i3 + i4 + l2 + i11 + i12 + i13 + i14 + i15 + i16;
                        return;
                    }
                    iArrFld[(int)(l2 - 1)] *= i14;
                    i15 = (int)l;
                    i16 += (int)-5126315272917058810L;
                }
            }
        }
        vMeth1_check_sum += l + i3 + i4 + l2 + i11 + i12 + i13 + i14 + i15 + i16;
    }

    public void vMeth() {

        int i17=-146, i18=50084, i19=4083;
        float f1=-40.309F;
        byte by1=12;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 2906L);

        vMeth1(Test.instanceCount);
        i17 = 1;
        while (++i17 < 232) {
            switch (((i17 % 7) * 5) + 41) {
            case 73:
                Test.iFld += (i17 ^ (long)f1);
                for (i18 = 1; 7 > i18; ++i18) {
                    Test.instanceCount *= 10;
                    Test.instanceCount <<= i17;
                    i19 += (((i18 * Test.instanceCount) + Test.iFld) - Test.instanceCount);
                }
                Test.instanceCount += 9;
                i19 *= i18;
                break;
            case 46:
                Test.instanceCount = Test.instanceCount;
                f1 = -13;
                iArrFld[i17 - 1] += by1;
                Test.iFld += (i17 - Test.iFld);
                break;
            case 58:
                i19 *= 28625;
                break;
            case 64:
                lArr = lArr;
            case 42:
                Test.iFld += -16163;
            case 44:
                iArrFld[i17 + 1] = i19;
                break;
            case 54:
                i19 += (i17 * i17);
                break;
            default:
                Test.instanceCount *= i18;
            }
        }
        vMeth_check_sum += i17 + Float.floatToIntBits(f1) + i18 + i19 + by1 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=8610, i1=59772, i2=44654, i20=-12, i21=-217;
        float f2=60.204F;
        double d=62.49039;
        boolean b=false;

        for (i = 16; i < 352; ++i) {
            i2 = 1;
            while (++i2 < 75) {
                vMeth();
                i1 <<= i;
                i1 = (int)-67L;
                for (i20 = 1; i20 < 1; ++i20) {
                    i21 += (((i20 * i1) + Test.instanceCount) - i1);
                    switch (((i % 5) * 5) + 21) {
                    case 32:
                        Test.iFld = (int)Test.instanceCount;
                        i1 = (int)Test.instanceCount;
                        Test.dArrFld[i + 1] = f2;
                        i21 = (int)Test.instanceCount;
                    case 25:
                        i1 = (int)d;
                        i1 = Test.iFld;
                        break;
                    case 46:
                        Test.iFld -= i;
                        f2 *= Test.instanceCount;
                        break;
                    case 33:
                        d *= 1.772F;
                        break;
                    case 26:
                        b = b;
                        switch (((i20 % 9) * 5) + 46) {
                        case 62:
                            iArrFld[i2 + 1] *= (int)d;
                            break;
                        case 80:
                            i1 += i21;
                            Test.lArrFld[i20] = i20;
                            Test.instanceCount *= i;
                            break;
                        case 71:
                            i1 = Test.byFld;
                            Test.fArrFld[i20][i20] = Test.instanceCount;
                            Test.instanceCount -= -177;
                            i21 += (i20 * i1);
                            break;
                        case 82:
                            Test.byFld &= (byte)-30636L;
                        case 78:
                            i21 *= 37;
                            i1 ^= Test.sFld;
                            break;
                        case 83:
                            iArrFld[i20] = (int)Test.instanceCount;
                            break;
                        case 69:
                            if (b) break;
                            break;
                        case 74:
                            i1 += (72 + (i20 * i20));
                            break;
                        case 65:
                            f2 = -54.735F;
                        default:
                            Test.sFld *= (short)-1.694F;
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i20 i21 f2 = " + i20 + "," + i21 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("d b = " + Double.doubleToLongBits(d) + "," + (b ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.byFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.sFld iArrFld Test.dArrFld = " + Test.sFld + "," + FuzzerUtils.checkSum(iArrFld) +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.lArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
