// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-66L;
    public static boolean bFld=true;
    public static int iFld=9;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 63023);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1) {

        int i11=-2, i12=-42327, i13=8, i14=42585;
        float f=1.205F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 0L);

        for (long l2 : lArr) {
            for (i11 = 1; i11 < 4; i11++) {
                switch ((i11 % 1) + 97) {
                case 97:
                    i12 += (i11 * i11);
                    for (i13 = 1; 2 > i13; i13++) {
                        Test.bFld = Test.bFld;
                        if (Test.bFld) continue;
                        l2 = i12;
                        i12 = i11;
                        i14 += (((i13 * l2) + l1) - Test.instanceCount);
                        Test.instanceCount -= l2;
                        i14 = i12;
                        i14 = i11;
                        i12 |= i14;
                        f += Test.instanceCount;
                    }
                    break;
                }
            }
        }
        vMeth2_check_sum += l1 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i9, int i10, long l) {

        int i15=202, i16=-10013, i17=9, i18=50956, i19=-13;
        double d=1.111756;
        float f1=2.409F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2428498053L);

        vMeth2(l);
        for (i15 = 310; i15 > 2; --i15) {
            if (Test.bFld) continue;
            d -= i9;
            i16 <<= i15;
            for (i17 = 5; i17 > 1; --i17) {
                lArr1[i17] = i9;
                i10 -= i15;
                f1 *= Test.instanceCount;
            }
        }
        i19 = 1;
        do {
            Test.bFld = false;
            i18 = i10;
        } while (++i19 < 193);
        lArr1 = lArr1;
        Test.iArrFld[(-1 >>> 1) % N] *= (int)f1;
        i18 *= i18;
        vMeth1_check_sum += i9 + i10 + l + i15 + i16 + Double.doubleToLongBits(d) + i17 + i18 +
            Float.floatToIntBits(f1) + i19 + FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth() {

        int i4=85, i5=33287, i6=21668, i7=220, i8=9932, i20=-56861, i21=8901, i22=-25442;
        float f3=-21.321F;

        Test.iArrFld[(-56003 >>> 1) % N] += (int)(((i4--) + (i4 * -9744)) * ((i4 >> Test.instanceCount) * (-50372 -
            i4)));
        for (i5 = 5; i5 < 126; i5++) {
            for (i7 = 13; i7 > 1; i7 -= 2) {
                float f2=-1.831F;
                vMeth1(4, i4, -1457L);
                f2 = i6;
                i6 = (int)f2;
                for (f3 = 1; 3 > f3; ++f3) {
                    i4 -= i5;
                    i6 += (int)(20785L + (f3 * f3));
                    Test.instanceCount += (long)(f3 * f3);
                    i6 = i7;
                }
                for (i21 = i7; i21 < 3; ++i21) {
                    i20 -= (int)80.64237;
                    i20 += (((i21 * i20) + i5) - i5);
                    Test.instanceCount &= i6;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f3) + i20 + i21 + i22;
    }

    public void mainTest(String[] strArr1) {

        int i=8, i1=12, i2=-39507, i3=-9311, i23=7, i24=-1, i25=-4795, i26=-62802, i27=94;
        long l4=-13650L, lArr2[]=new long[N];
        double d1=2.19145;
        float f4=-1.124F;
        short sArr[]=new short[N];

        FuzzerUtils.init(lArr2, -1116948907L);
        FuzzerUtils.init(sArr, (short)-25935);

        i = 1;
        do {
            i1 += i;
            for (i2 = 4; i2 < 94; ++i2) {
                i1 -= (int)(Test.iArrFld[i2 - 1] = (int)((Test.instanceCount & Test.instanceCount) +
                    (Test.instanceCount >>= -3941154575L)));
                vMeth();
                i1 -= i1;
                i3 += (((i2 * i3) + i3) - i3);
                Test.instanceCount += i2;
                lArr2[i2 - 1] *= i3;
            }
            Test.iArrFld[i - 1] += i3;
            if (Test.bFld) break;
            Test.instanceCount += (i * i);
            Test.bFld = Test.bFld;
        } while (++i < 267);
        lArr2[(i >>> 1) % N] -= i2;
        Test.iArrFld = Test.iArrFld;
        for (l4 = 7; l4 < 142; ++l4) {
            for (i24 = (int)(l4); i24 < 186; ++i24) {
                for (i26 = (int)(l4); i26 < 1; i26++) {
                    d1 = i27;
                    i25 += (i26 * i25);
                    lArr2[i24 - 1] = i24;
                    f4 += i26;
                    i1 += (41 + (i26 * i26));
                    i3 -= i;
                    i23 = i;
                    Test.iFld <<= (int)l4;
                    i25 <<= i23;
                    i3 *= i1;
                }
                f4 += i;
                sArr[(int)(l4 + 1)] <<= (short)i2;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 l4 i23 = " + i3 + "," + l4 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 d1 f4 = " + i27 + "," + Double.doubleToLongBits(d1) + "," +
            Float.floatToIntBits(f4));
        FuzzerUtils.out.println("lArr2 sArr = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.iFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
