// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2101770483L;
    public static boolean bFld=true;
    public static volatile double dFld=1.64063;
    public static int iFld=-14;
    public static byte byFld=39;
    public double dArrFld[]=new double[N];
    public static volatile short sArrFld[]=new short[N];
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-15897);
        FuzzerUtils.init(Test.fArrFld, -1.208F);
        FuzzerUtils.init(Test.iArrFld, 13004);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1) {

        int i8=-144, i9=-22050, i10=1, i11=-3, i12=-63272, i13=5, iArr[]=new int[N];
        float f2=2.818F;
        short s1=15198;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -52);
        FuzzerUtils.init(lArr1, 3655871382310921034L);

        iArr[(i8 >>> 1) % N] -= (int)f1;
        Test.bFld = false;
        for (i9 = 4; 350 > i9; i9++) {
            for (f2 = 1; f2 < 5; ++f2) {
                byte by=-13;
                lArr1[i9 - 1] -= i9;
                i8 -= i10;
                iArr[(int)(f2 - 1)] = i10;
                by = (byte)s1;
                i10 *= (int)Test.instanceCount;
                iArr[i9] = i9;
                for (i12 = 1; i12 < 2; i12 += 2) {
                    i10 = i10;
                    i11 *= i10;
                    Test.dFld = -657557525L;
                    iArr[(int)(f2 - 1)] *= (int)Test.instanceCount;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + i8 + i9 + i10 + Float.floatToIntBits(f2) + i11 + s1 + i12 + i13
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1(int i5) {

        int i6=61100, i7=-8631, i14=-117, i15=-222, i16=-14401, iArr1[]=new int[N];
        double d=2.34231;
        float f3=2.726F, fArr[]=new float[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(fArr, 106.564F);
        FuzzerUtils.init(lArr2, -3239381513783752570L);
        FuzzerUtils.init(iArr1, -31126);

        for (i6 = 132; 5 < i6; i6--) {
            vMeth2(0.658F);
            fArr[i6] *= (float)Test.dFld;
            i7 = i5;
            for (i14 = i6; i14 < 12; ++i14) {
                for (d = i14; d < 1; ++d) {
                    Test.instanceCount *= i14;
                    lArr2 = FuzzerUtils.long1array(N, (long)63547L);
                    i15 += (int)1.818F;
                    Test.bFld = Test.bFld;
                    f3 %= -1;
                    i15 *= i14;
                    i16 = -13;
                    f3 += i15;
                }
            }
            try {
                i16 = (iArr1[i6] % 16399);
                i7 = (i5 % 23332);
                i16 = (55046 % i6);
            } catch (ArithmeticException a_e) {}
        }
        vMeth1_check_sum += i5 + i6 + i7 + i14 + i15 + Double.doubleToLongBits(d) + i16 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr2) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l, long l1) {

        int i3=30402, i4=-12849;
        byte by1=-104, byArr[]=new byte[N];
        float f5=-1.810F;
        long l2=44212L, lArr3[]=new long[N];
        short s2=31254;

        FuzzerUtils.init(lArr3, -5164163199239713443L);
        FuzzerUtils.init(byArr, (byte)-102);

        for (i3 = 7; i3 < 147; ++i3) {
            vMeth1(i4);
            i4 -= (int)Test.instanceCount;
            i4 += by1;
            lArr3[i3 - 1] = i4;
            Test.sArrFld[i3 - 1] = (short)-3;
            l += l1;
            Test.instanceCount += (i3 * f5);
            l2 += (((i3 * Test.iFld) + by1) - l);
            byArr[i3 - 1] = (byte)Test.iFld;
            i4 += (((i3 * s2) + i4) - i4);
        }
        vMeth_check_sum += l + l1 + i3 + i4 + by1 + Float.floatToIntBits(f5) + l2 + s2 + FuzzerUtils.checkSum(lArr3) +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr3) {

        int i1=-2, i2=7, i17=65095, i18=-5, i19=-151, i20=-208, i21=-38405, i22=3, i23=-8;
        float f=0.588F;
        short s=28855;
        double d1=0.15078;

        for (i1 = 13; i1 < 389; ++i1) {
            i2 = (int)f;
        }
        i2 = ((i2++) - (i2++));
        i2 >>>= (int)(((i2 + 142L) - (++Test.instanceCount)) + (dArrFld[(i2 >>> 1) % N] - (Test.instanceCount++)));
        s = (short)(((i2 = i1) + i2) + ((Test.instanceCount + s) + (f * f)));
        vMeth(Test.instanceCount, Test.instanceCount);
        Test.dFld = Test.iFld;
        for (i17 = 1; i17 < 212; i17++) {
            lArrFld[i17] -= (long)Test.dFld;
            for (i19 = i17; i19 < 119; i19++) {
                for (d1 = 1; d1 < 1; ++d1) {
                    i21 >>>= i17;
                    i20 += (int)(d1 * d1);
                    Test.instanceCount += (long)d1;
                    if (Test.bFld) continue;
                    i2 /= (int)(Test.instanceCount | 1);
                }
                Test.sArrFld[i17] -= (short)i19;
            }
            i20 *= (int)Test.instanceCount;
            i20 *= i20;
            Test.byFld += (byte)(i17 ^ i17);
            Test.iFld += (((i17 * i17) + f) - Test.iFld);
            i2 *= (int)1.9735;
        }
        i21 = (int)f;
        Test.iArrFld[(Test.iFld >>> 1) % N] += (int)-37.259F;
        i21 -= i18;
        i21 *= 5;
        for (i22 = 10; 193 > i22; i22 += 2) {
            i20 -= (int)Test.instanceCount;
            i2 += (((i22 * i19) + i2) - i23);
            Test.bFld = Test.bFld;
        }

        FuzzerUtils.out.println("i1 i2 f = " + i1 + "," + i2 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("s i17 i18 = " + s + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 d1 = " + i19 + "," + i20 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iFld Test.byFld dArrFld = " + Test.iFld + "," + Test.byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("Test.sArrFld Test.fArrFld lArrFld = " + FuzzerUtils.checkSum(Test.sArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
