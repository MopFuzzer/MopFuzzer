// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1037015452L;
    public static short sFld=-22292;
    public int iFld=229;
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -85.354F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i6=10, i7=13140, i8=-25, i9=-13, i10=-7785, iArr1[]=new int[N];
        double d1=36.109386;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)110);
        FuzzerUtils.init(iArr1, -3);

        i6 |= i6;
        d1 = 1;
        do {
            byArr[(int)(d1)] <<= (byte)Test.instanceCount;
        } while (++d1 < 226);
        for (i7 = 308; i7 > 12; --i7) {
            for (i9 = i7; i9 < 6; ++i9) {
                iArr1[i9 + 1] = i9;
            }
        }
        i10 -= i10;
        long meth_res = i6 + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(float f1) {

        int i5=44228, i11=-2;
        byte by1=-52;
        short s=-4254;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.475F);

        i5 >>= Integer.reverseBytes(iMeth1());
        i11 = 1;
        do {
            fArr[i11 + 1] *= i5;
            by1 *= (byte)f1;
            i5 >>= i11;
        } while (++i11 < 275);
        Test.instanceCount = s;
        vMeth_check_sum += Float.floatToIntBits(f1) + i5 + i11 + by1 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(int i4, byte by) {

        float f2=-31.66F;
        int i12=42101, iArr2[]=new int[N];
        boolean b=false;
        double d2=-75.65044;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr2, 212);
        FuzzerUtils.init(sArr, (short)2395);

        vMeth(-1.304F);
        iArr2[(i4 >>> 1) % N] >>>= 7;
        i4 = -5;
        if (false) {
            i4 = (int)f2;
        } else if (b) {
            Test.sFld = (short)Test.instanceCount;
            sArr[(i4 >>> 1) % N] -= (short)i4;
            i12 = 1;
            do {
                if (b) continue;
                i4 -= (int)f2;
                f2 += (i12 - i12);
                d2 -= f2;
                if (b) continue;
                i4 += i4;
                b = b;
            } while (++i12 < 219);
        }
        long meth_res = i4 + by + Float.floatToIntBits(f2) + i12 + (b ? 1 : 0) + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=24, i1=118, i2=-14, i3=-35557, i13=-12, i14=122, i15=46054, iArr[]=new int[N];
        double d=57.109841;
        float f=-35.929F;
        boolean b1=false;

        FuzzerUtils.init(iArr, 251);

        for (i = 9; 227 > i; ++i) {
            d = Math.max((int)((-(-(i1 * d))) + i), iArr[i + 1]);
            Test.instanceCount += (i * i);
            i1 += (((i * i) + f) - i);
            d -= (f * ((--d) % (i | 1)));
            for (i2 = i; 115 > i2; i2++) {
                i1 = (int)(iMeth(i1, (byte)(8)) - -55306L);
                for (i13 = 1; i13 < 1; i13 += 3) {
                    byte by2=70;
                    switch ((i2 % 5) + 28) {
                    case 28:
                        Test.fArrFld[i2 - 1] -= i;
                        i14 = i1;
                        if (b1) continue;
                        i3 = (int)Test.instanceCount;
                        break;
                    case 29:
                        i15 = (int)d;
                        break;
                    case 30:
                        switch ((i13 % 8) + 94) {
                        case 94:
                            iArr = FuzzerUtils.int1array(N, (int)137);
                            i14 -= by2;
                            switch (((i2 % 3) * 5) + 58) {
                            case 67:
                                Test.instanceCount = i;
                                iArr[i2 - 1] += (int)Test.instanceCount;
                                i3 += (((i13 * i2) + i2) - Test.instanceCount);
                                i1 += (((i13 * i13) + i1) - by2);
                                break;
                            case 65:
                                try {
                                    iArr[i2 - 1] = (-106 / i3);
                                    i15 = (i13 / i13);
                                    i1 = (i13 / -113);
                                } catch (ArithmeticException a_e) {}
                                break;
                            case 68:
                                i14 *= -8363;
                                Test.instanceCount += (((i13 * i14) + i14) - Test.instanceCount);
                                if (b1) {
                                    Test.instanceCount += (-89 + (i13 * i13));
                                    i3 *= (int)Test.instanceCount;
                                }
                                if (b1) continue;
                                break;
                            default:
                                i15 += (i13 | i15);
                            }
                            break;
                        case 95:
                            i1 ^= i14;
                            break;
                        case 96:
                            i14 = (int)Test.instanceCount;
                        case 97:
                        case 98:
                            i3 *= i2;
                            break;
                        case 99:
                            i15 &= Test.sFld;
                            break;
                        case 100:
                            Test.instanceCount += (((i13 * by2) + i15) - i2);
                            break;
                        case 101:
                            Test.instanceCount = i;
                            break;
                        }
                        break;
                    case 31:
                        Test.instanceCount <<= i2;
                    case 32:
                        iFld = (int)5L;
                    default:
                        i3 ^= 9;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("f i2 i3 = " + Float.floatToIntBits(f) + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i13 i14 b1 = " + i13 + "," + i14 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i15 iArr = " + i15 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld iFld = " + Test.instanceCount + "," + Test.sFld + "," +
            iFld);
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
