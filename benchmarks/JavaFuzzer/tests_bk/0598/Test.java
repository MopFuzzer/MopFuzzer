// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:08 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7320030306793539961L;
    public static boolean bFld=false;
    public static volatile double dFld=0.25735;
    public static short sFld=-20370;
    public static volatile float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 1.562F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i1, long l1, int i2) {

        byte by=11;
        int i3=50642, i4=-13, i5=15815, iArr[]=new int[N];
        boolean b=false;
        float fArr[]=new float[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(fArr, 34.387F);
        FuzzerUtils.init(iArr, -12401);
        FuzzerUtils.init(lArr, -4242052360L);

        for (float f : fArr) {
            iArr[(-17308 >>> 1) % N] += (int)1.78765;
            lArr[(i2 >>> 1) % N][(i1 >>> 1) % N] -= i2;
            i2 *= i2;
            f = f;
            try {
                iArr[(i2 >>> 1) % N] = (i1 % 996219711);
                i1 = (-1825404000 % i1);
                i2 = (198 % i2);
            } catch (ArithmeticException a_e) {}
            by = (byte)-17544L;
            i3 = 1;
            do {
                for (i4 = 1; i4 < 1; i4++) {
                    if (b) {
                        try {
                            iArr[i3 + 1] = (-184 / i5);
                            i5 = (i4 / 164);
                            iArr[i3 + 1] = (i3 % -23104);
                        } catch (ArithmeticException a_e) {}
                    }
                    Test.bFld = false;
                    i2 += (i4 * i5);
                    i5 += (i4 * Test.instanceCount);
                    i2 = i4;
                }
            } while (++i3 < 4);
        }
        long meth_res = i1 + l1 + i2 + by + i3 + i4 + i5 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        int i=190, i6=-10, i7=199, i8=17538, iArr1[][]=new int[N][N];
        float f1=0.383F, f2=-1.140F;

        FuzzerUtils.init(iArr1, -6);

        i += (iMeth(i, l, i) + i);
        for (f1 = 2; f1 < 359; ++f1) {
            iArr1 = iArr1;
            i -= i;
            i6 += -50340;
            Test.bFld = true;
            i6 += i;
            for (i7 = 1; i7 < 5; ++i7) {
                short s=12147;
                i -= i;
                i = -245;
                i8 <<= i;
                s *= (short)f1;
                i6 -= i8;
                f2 += i6;
                i += (4 + (i7 * i7));
            }
        }
        vMeth1_check_sum += l + i + Float.floatToIntBits(f1) + i6 + i7 + i8 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i9=-53836, i10=11, i11=39591, i12=98, i13=8883, i14=62667, i15=26, i16=6;
        byte by1=109;
        float f3=1.30F, fArr1[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -21969L);
        FuzzerUtils.init(fArr1, 94.293F);

        vMeth1(Test.instanceCount);
        lArr1[(-5 >>> 1) % N] = i9;
        Test.dFld = i9;
        fArr1[(13 >>> 1) % N] -= i9;
        Test.instanceCount = (long)81.114224;
        for (i10 = 9; i10 < 286; i10 += 2) {
            i9 = -3;
            for (i12 = 1; i12 < 11; ++i12) {
                i9 >>= by1;
                i11 += i12;
                for (i14 = 1; 2 > i14; ++i14) {
                    Test.instanceCount = (long)Test.dFld;
                    if (false) {
                        i16 -= i14;
                        f3 += (((i14 * f3) + i11) - i10);
                    } else {
                        Test.instanceCount = Test.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += i9 + i10 + i11 + i12 + i13 + by1 + i14 + i15 + i16 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i17=-39177, i18=178, i19=227, i20=146, i21=-8, i22=3297, i23=-9, i24=20169, i25=35522, iArr2[]=new int[N];
        float f4=-31.137F;
        double d=1.9699;

        FuzzerUtils.init(iArr2, 6);

        vMeth();
        Test.instanceCount = -45674;
        i17 = 1;
        while (++i17 < 211) {
            for (i18 = 119; i18 > 7; i18--) {
                i19 += i18;
                Test.instanceCount = (long)f4;
                Test.fArrFld[i17] = (float)Test.dFld;
                Test.instanceCount += (((i18 * i17) + i19) - Test.sFld);
                i19 = 7;
                lArrFld[i17 - 1] = 9;
                Test.sFld = (short)i17;
            }
        }
        for (d = 12; d < 260; d++) {
            for (i21 = 101; i21 > 2; --i21) {
                for (i23 = 1; i23 < 2; i23++) {
                    i19 = i17;
                    i20 = (int)f4;
                    i19 += i23;
                    f4 -= i18;
                    switch ((i23 % 3) + 86) {
                    case 86:
                        i25 *= -5;
                        Test.instanceCount += i17;
                        Test.dFld *= Test.instanceCount;
                        break;
                    case 87:
                        try {
                            i19 = (151 % i23);
                            i20 = (i22 / -177);
                            i25 = (-54583 % i21);
                        } catch (ArithmeticException a_e) {}
                        try {
                            i19 = (22961 % i17);
                            i22 = (i17 % 63948);
                            iArr2[i23 + 1] = (i22 % -10214);
                        } catch (ArithmeticException a_e) {}
                    case 88:
                        f4 = i19;
                        i25 -= -17182;
                        i24 >>= i25;
                        break;
                    }
                    i22 ^= (int)Test.instanceCount;
                    Test.instanceCount *= Test.instanceCount;
                    iArr2[i21] = i19;
                }
            }
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("f4 d i20 = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d) + "," +
            i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 iArr2 = " + i24 + "," + i25 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.sFld Test.fArrFld lArrFld = " + Test.sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
