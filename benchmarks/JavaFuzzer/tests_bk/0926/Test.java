// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5393234383578343450L;
    public static int iFld=1;
    public static int iFld1=-11;
    public static float fArrFld[]=new float[N];
    public static volatile float fArrFld1[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -2.640F);
        FuzzerUtils.init(Test.fArrFld1, 88.934F);
        FuzzerUtils.init(Test.iArrFld, -12);
        FuzzerUtils.init(Test.byArrFld, (byte)-30);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i, long l, int i1) {

        float f=-2.187F, fArr[]=new float[N];
        int i2=11, i3=8882, i4=15768, i5=-8, i6=-11, iArr[]=new int[N];
        short s=24164;
        double d=64.85991, dArr[]=new double[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 64818);
        FuzzerUtils.init(fArr, 0.27F);
        FuzzerUtils.init(dArr, 111.61057);

        iArr[(Test.iFld >>> 1) % N] = (int)f;
        if (b) {
            Test.fArrFld[(-115 >>> 1) % N] -= -11;
        } else if (b) {
            if (b) {
                Test.iFld = i1;
                for (i2 = 272; 16 < i2; i2--) {
                    i1 += s;
                    for (i4 = i2; i4 < 6; i4++) {
                        i = (int)Test.instanceCount;
                        i6 = 1;
                        do {
                            d *= i6;
                            f += (((i6 * f) + i6) - Test.iFld1);
                            f += (((i6 * s) + s) - s);
                        } while (++i6 < 1);
                        Test.instanceCount *= i2;
                        fArr[i2] += Test.instanceCount;
                    }
                }
            } else if (b) {
                i3 = i1;
            } else if (b) {
                dArr[(i >>> 1) % N] = Test.instanceCount;
            } else {
                Test.fArrFld1[(i1 >>> 1) % N] = -33;
                vMeth1_check_sum += i + l + i1 + Float.floatToIntBits(f) + i2 + i3 + s + i4 + i5 + i6 +
                    Double.doubleToLongBits(d) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
        } else if (false) {
            Test.iFld1 *= 7522;
        }
        vMeth1_check_sum += i + l + i1 + Float.floatToIntBits(f) + i2 + i3 + s + i4 + i5 + i6 +
            Double.doubleToLongBits(d) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static long lMeth() {


        Test.instanceCount += ((-(Test.iFld - Test.iFld)) * Test.instanceCount);
        vMeth1(Test.iFld1, Test.instanceCount, 65);
        long meth_res = 0;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {


        Test.iFld *= (int)((lMeth() + 148L) - Test.iFld);
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i7=-193, i8=-235, i9=10580, i10=18562, i11=-62, i12=-9, i13=92, i14=-57648;
        float f1=2.865F;
        boolean b1=false;
        double d1=56.16837;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 12L);

        vMeth();
        i7 = 1;
        while (++i7 < 208) {
            for (i8 = 2; i8 < 121; ++i8) {
                Test.iFld = i9;
            }
            for (i10 = 4; i10 < 121; i10++) {
                i11 += (int)Test.instanceCount;
                f1 = i9;
                for (i12 = 1; i12 < 2; ++i12) {
                    lArr[i7] >>= Test.instanceCount;
                    Test.iArrFld[i10 - 1] -= i10;
                    if (true) {
                        i11 += (((i12 * i14) + i9) - i12);
                    } else if (b1) {
                        Test.instanceCount += (((i12 * i8) + i9) - Test.instanceCount);
                        if (b1) {
                            lArr[i12 + 1] = 130;
                            Test.instanceCount += i12;
                            i11 = (int)f1;
                            Test.iFld1 = (int)Test.instanceCount;
                        } else if (b1) {
                            Test.instanceCount += (i12 - Test.instanceCount);
                            Test.instanceCount |= -45860L;
                            Test.instanceCount &= i12;
                            Test.iFld *= i9;
                        } else {
                            Test.instanceCount = i14;
                        }
                        Test.iFld = i12;
                    }
                    Test.iFld -= (int)f1;
                }
                lArr = lArr;
                Test.byArrFld[i10] = (byte)14;
                i11 -= i8;
            }
            Test.iFld1 += (((i7 * i7) + i9) - i13);
            d1 *= 199;
        }

        FuzzerUtils.out.println("i7 i8 i9 = " + i7 + "," + i8 + "," + i9);
        FuzzerUtils.out.println("i10 i11 f1 = " + i10 + "," + i11 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("b1 d1 lArr = " + (b1 ? 1 : 0) + "," + Double.doubleToLongBits(d1) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iFld1 = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.iFld1);
        FuzzerUtils.out.println("Test.fArrFld Test.fArrFld1 Test.iArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld1)) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
