// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3040559134L;
    public byte byFld=-29;
    public double dFld=-1.41872;
    public float fArrFld[]=new float[N];

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        int i6=-247, i7=-4, i8=-36, i9=92, i10=-9, i11=-3, i12=-44038, iArr[]=new int[N];
        short s=6607;

        FuzzerUtils.init(iArr, 135);

        i5 = i4;
        i4 = i5;
        for (i6 = 7; i6 < 264; ++i6) {
            s = (short)i4;
            Test.instanceCount -= i5;
        }
        i7 -= s;
        for (i8 = 205; i8 > 12; i8--) {
            i7 += (int)(-2.206F + (i8 * i8));
            iArr[i8 + 1] -= (int)Test.instanceCount;
            for (i10 = 1; i10 < 8; ++i10) {
                i5 = 4;
                i4 += (((i10 * i5) + i5) - i11);
                i12 = 1;
                while (++i12 < 2) {
                    float f1=-44.242F;
                    f1 += (i12 * i12);
                    i9 += (i12 * i12);
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + s + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(long l) {

        float f=-2.779F;
        int i3=12;

        f = i3;
        vMeth1(8, 221);
        i3 -= i3;
        i3 -= -47;
        i3 += (int)Test.instanceCount;
        long meth_res = l + Float.floatToIntBits(f) + i3;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i2) {

        double d=53.27067;
        int i13=-11, i14=34941, i15=40773;
        byte by=46;
        short s2=-25213, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-4714);

        d *= Math.abs(fMeth(-468316785L));
        for (short s1 : sArr) {
            Test.instanceCount = i2;
            i2 = -105;
            i2 -= (int)Test.instanceCount;
        }
        i2 = i2;
        i2 >>= (int)Test.instanceCount;
        for (i13 = 22; i13 < 380; i13++) {
            i14 ^= i2;
            i14 += (((i13 * by) + i13) - i2);
            i15 = 1;
            while (++i15 < 5) {
                float f2=81.520F;
                s2 += (short)i14;
                f2 = (float)d;
                Test.instanceCount *= by;
                i14 += i15;
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + i13 + i14 + by + i15 + s2 + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-130, i1=2, i16=194, i17=-4660, i18=-1, i19=12, iArr1[]=new int[N];
        long l1=-225L;
        short s3=-215;
        float f3=-23.181F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.106919);
        FuzzerUtils.init(iArr1, -44091);

        for (i = 269; i > 4; i -= 3) {
            vMeth(i1);
            switch (((i % 5) * 5) + 9) {
            case 28:
                for (i16 = 285; 5 < i16; --i16) {
                    fArrFld = fArrFld;
                    l1 += i16;
                    i1 = i;
                    for (i18 = 1; i18 < 2; i18++) {
                        i17 -= i16;
                        s3 = (short)4L;
                        Test.instanceCount += (i18 ^ i19);
                        i17 += i18;
                        i19 = (int)l1;
                        f3 -= 3;
                        byFld += (byte)(((i18 * f3) + f3) - i19);
                        l1 += (((i18 * i16) + i16) - Test.instanceCount);
                    }
                    l1 -= -10;
                    f3 = i17;
                    i19 = 240;
                    dArr = dArr;
                    i1 ^= i16;
                }
                switch (((i % 5) * 5) + 46) {
                case 53:
                    i19 = (int)f3;
                    f3 %= (float)-75.36055;
                    fArrFld[i] -= i16;
                    break;
                case 52:
                    switch (((i >>> 1) % 1) + 66) {
                    case 66:
                        iArr1[i - 1] = (int)dFld;
                        i19 = -219;
                        break;
                    }
                    i19 *= (int)f3;
                    i19 = byFld;
                case 55:
                    iArr1[i - 1] &= i17;
                    break;
                case 62:
                    i19 += (((i * f3) + i) - l1);
                case 54:
                    Test.instanceCount += (((i * Test.instanceCount) + l1) - byFld);
                }
                break;
            case 12:
                dFld -= i16;
                break;
            case 27:
            case 29:
                i19 += i17;
                break;
            case 23:
                dFld -= -11;
            }
        }

        FuzzerUtils.out.println("i i1 i16 = " + i + "," + i1 + "," + i16);
        FuzzerUtils.out.println("i17 l1 i18 = " + i17 + "," + l1 + "," + i18);
        FuzzerUtils.out.println("i19 s3 f3 = " + i19 + "," + s3 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("dArr iArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount byFld dFld = " + Test.instanceCount + "," + byFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
