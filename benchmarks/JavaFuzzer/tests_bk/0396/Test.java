// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:03 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=4L;
    public byte byFld=13;
    public double dFld=-2.36630;
    public static int iFld=99;
    public int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i12, int i13) {


        i12 = i12;
        vMeth1_check_sum += i12 + i13;
    }

    public static void vMeth(int i6, int i7, byte by) {

        int i8=-48, i9=-195, i10=17016, i11=-159, i14=64, i15=13, i16=30272, i17=-8, i18=-12, iArr[]=new int[N];
        boolean b=false;
        float f1=0.452F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -9958);
        FuzzerUtils.init(lArr, 1638548392L);

        for (i8 = 1; i8 < 249; i8++) {
            for (i10 = 1; i10 < 7; i10++) {
                i11 += i10;
                iArr[i8 - 1] += i6;
                lArr = FuzzerUtils.long1array(N, (long)-15357L);
                vMeth1(i10, i8);
                i14 = 1;
                while (++i14 < 2) {
                    i15 *= -145;
                    if (b) continue;
                }
                f1 += Test.instanceCount;
            }
            i16 = 1;
            while (++i16 < 7) {
                for (i17 = 1; i17 < 1; i17++) {
                    i15 += i8;
                    i6 -= i8;
                    Test.instanceCount += i17;
                }
            }
        }
        vMeth_check_sum += i6 + i7 + by + i8 + i9 + i10 + i11 + i14 + i15 + (b ? 1 : 0) + Float.floatToIntBits(f1) +
            i16 + i17 + i18 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public int iMeth(short s, short s1) {

        int i=-1, i1=-180, i2=13, i3=-14, i4=-16281, i5=50647, i19=-55638;
        float f=13.121F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 3845557841909541057L);

        for (i = 17; 322 > i; ++i) {
            f += i;
            for (i2 = 1; i2 < 5; i2++) {
                iArrFld[i - 1] <<= i2;
                for (i4 = 1; i4 < 2; ++i4) {
                    sArrFld[(i4 >>> 1) % N] = (short)(i4 - (++i1));
                    dFld *= (--f);
                    i1 ^= (int)((f * i4) * (Math.max(i, i4) + (f * i2)));
                    vMeth(i3, i19, byFld);
                    lArr1[(49 >>> 1) % N] += Test.instanceCount;
                    i19 = i19;
                }
            }
        }
        i3 = 62134;
        long meth_res = s + s1 + i + i1 + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i19 +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s2=8564;
        int i20=12, i21=-4558, i22=-5, i23=14, i24=-9, i25=-48408, i26=16986, i27=-6960, i28=-152, i29=-1;
        float f2=2.152F, f3=-56.763F, fArr[]=new float[N];
        boolean b1=false;
        double d=-119.92206;
        long lArr2[]=new long[N];

        FuzzerUtils.init(fArr, 0.363F);
        FuzzerUtils.init(lArr2, -45295L);

        byFld = (byte)iMeth(s2, s2);
        Test.instanceCount <<= -13;
        i20 = 1;
        do {
            Test.iFld += (((i20 * Test.iFld) + f2) - i20);
            f2 += (((i20 * i20) + Test.instanceCount) - i20);
            fArr[i20 - 1] = s2;
        } while ((i20 += 3) < 221);
        b1 = b1;
        for (i21 = 11; i21 < 241; i21++) {
            d = 1;
            while (++d < 109) {
                dFld *= Test.instanceCount;
                if (b1) {
                    Test.instanceCount -= Test.iFld;
                    f2 += 8444959570498155921L;
                } else if (b1) {
                    i22 *= (int)d;
                    for (i23 = 1; i23 < 1; i23++) {
                        i24 += (((i23 * i22) + f2) - Test.iFld);
                    }
                    i24 += (int)f2;
                } else {
                    i24 -= 234;
                    switch ((int)(((d % 2) * 5) + 80)) {
                    case 86:
                        i22 = Test.iFld;
                        for (i25 = (int)(d); i25 < 1; i25++) {
                            i26 += (int)Test.instanceCount;
                        }
                        break;
                    case 87:
                        iArrFld[(int)(d - 1)] = (int)f3;
                        for (i27 = 1; i27 < 1; i27 += 3) {
                            try {
                                Test.iFld = (Test.iFld / -22);
                                i26 = (-14221 / i26);
                                i24 = (-215 / i20);
                            } catch (ArithmeticException a_e) {}
                            switch (((i23 >>> 1) % 7) + 70) {
                            case 70:
                                lArr2[i21] = i29;
                                i26 += (i27 + i29);
                                i29 = -10;
                                break;
                            case 71:
                                iArrFld[(int)(d)] = -21326;
                                break;
                            case 72:
                                i26 += (int)-24488L;
                                break;
                            case 73:
                                dFld = 27;
                            case 74:
                                Test.instanceCount += (long)f2;
                                break;
                            case 75:
                                Test.instanceCount += (((i27 * i22) + Test.iFld) - i28);
                                break;
                            case 76:
                                i24 = i29;
                            default:
                                i22 -= (int)Test.instanceCount;
                            }
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("s2 i20 f2 = " + s2 + "," + i20 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("b1 i21 i22 = " + (b1 ? 1 : 0) + "," + i21 + "," + i22);
        FuzzerUtils.out.println("d i23 i24 = " + Double.doubleToLongBits(d) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 f3 = " + i25 + "," + i26 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("fArr lArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," +
            FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount byFld dFld = " + Test.instanceCount + "," + byFld + "," +
            Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("Test.iFld iArrFld sArrFld = " + Test.iFld + "," + FuzzerUtils.checkSum(iArrFld) + ","
            + FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
