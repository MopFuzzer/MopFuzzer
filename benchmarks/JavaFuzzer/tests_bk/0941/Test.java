// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=20172L;
    public static boolean bFld=false;
    public static short sFld=-2644;
    public static double dFld=1.120708;
    public static volatile float fFld=0.985F;
    public boolean bFld1=true;
    public static int iFld=12205;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static volatile float fArrFld1[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
        FuzzerUtils.init(Test.fArrFld, -113.20F);
        FuzzerUtils.init(Test.fArrFld1, -2.63F);
    }

    public static long bMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i11, long l, byte by) {

        double d=-67.46097;
        int i12=10940, i13=7, i14=7, i15=-2, i16=57, i17=-5, iArr[]=new int[N], iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr, 58);
        FuzzerUtils.init(iArr1, -4);

        for (d = 9; d < 242; ++d) {
            for (i13 = 1; i13 < 7; ++i13) {
                for (i15 = 2; i15 > i13; i15 -= 3) {
                    Test.dFld = 10;
                    i16 *= -4;
                    Test.dFld = i15;
                    iArr[(int)(d + 1)] >>= i15;
                }
            }
            i11 += (int)1.414F;
            switch (((i15 >>> 1) % 1) + 93) {
            case 93:
                i17 = 7;
                do {
                    Test.sFld *= (short)Test.instanceCount;
                    iArr[(int)(d)] -= i15;
                    iArr1 = iArr1;
                    l = i13;
                    i11 = i13;
                } while (--i17 > 0);
            }
        }
        long meth_res = i11 + l + by + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static long lMeth(int i10) {

        float f1=-1.434F;
        byte by1=-29;
        int i18=-155, i19=1, i20=27369, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, -50);

        i10 += (int)f1;
        byMeth(-71, Test.instanceCount, by1);
        Test.instanceCount = i10;
        i18 = 1;
        do {
            for (i19 = 1; i19 < 6; ++i19) {
                i20 -= (int)Test.instanceCount;
                iArr2[i19 + 1] = i20;
                iArr2[i19 + 1] *= i19;
                Test.instanceCount = i20;
                i20 += i19;
                if (true) break;
                f1 += (((i19 * i20) + i18) - Test.instanceCount);
                i20 ^= i18;
            }
            iArr2[i18 + 1] += Test.sFld;
            iArr2[i18] -= i10;
        } while (++i18 < 260);
        long meth_res = i10 + Float.floatToIntBits(f1) + by1 + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static boolean bMeth(float f) {

        int i4=51, i5=-96, i6=-12, i7=-3, i8=-6, i9=5;

        for (i4 = 13; 244 > i4; i4 += 2) {
            for (i6 = 1; 14 > i6; i6++) {
                i5 = (int)(Test.sFld + Test.dFld);
            }
        }
        for (i8 = 8; i8 < 379; i8++) {
            i7 *= (int)(i7 - ((i4 + i5) + (i6 - Test.dFld)));
            lMeth(-148);
            i5 += (int)(0.545F + (i8 * i8));
            i7 -= i8;
        }
        Test.iArrFld[(-5 >>> 1) % N] *= i5;
        Test.fArrFld[(i4 >>> 1) % N] -= Test.instanceCount;
        i5 = i8;
        long meth_res = Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + i9;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=-44673, i1=-250, i2=32807, i3=-415, i21=-149, i22=-69, i23=7;
        byte by2=16;
        boolean bArr[]=new boolean[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, 72.96107);

        for (i = 153; i > 4; --i) {
            for (i2 = 9; 168 > i2; i2++) {
                switch (((i2 % 2) * 5) + 3) {
                case 8:
                    if (bArr[i] = (Test.bFld = (bMeth(Test.fFld) || Test.bFld))) continue;
                    i1 = (int)Test.instanceCount;
                    break;
                case 6:
                    Test.iArrFld[i] = i3;
                    break;
                default:
                    Test.fFld = Test.instanceCount;
                }
                Test.instanceCount <<= i;
                Test.sFld = (short)Test.instanceCount;
            }
        }
        i3 += 11;
        i21 = 1;
        while (++i21 < 247) {
            i1 += (i21 ^ i3);
            Test.bFld = Test.bFld;
            if (bFld1) {
                Test.instanceCount = i21;
                Test.dFld *= 6;
            } else {
                Test.fFld += (16867 + (i21 * i21));
                for (i22 = 2; 102 > i22; ++i22) {
                    if (false) {
                        bArr[i21] = true;
                    } else {
                        dArr[i22] *= i23;
                    }
                    i3 += (i22 - by2);
                    Test.sFld = (short)i22;
                    Test.instanceCount -= Test.instanceCount;
                    Test.iArrFld[i22 - 1] += i23;
                    i23 <<= (int)Test.instanceCount;
                    i3 = i23;
                    i3 <<= Test.sFld;
                    Test.fArrFld1[i21][i21] += i;
                    Test.iFld += (((i22 * Test.instanceCount) + i3) - i2);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i21 i22 = " + i3 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 by2 bArr = " + i23 + "," + by2 + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.sFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld Test.fFld bFld1 = " + Double.doubleToLongBits(Test.dFld) + "," +
            Float.floatToIntBits(Test.fFld) + "," + (bFld1 ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld Test.iArrFld Test.fArrFld = " + Test.iFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.fArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld1)));

        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  lMeth ->  lMeth bMeth mainTest
//DEBUG  byMeth ->  byMeth lMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
