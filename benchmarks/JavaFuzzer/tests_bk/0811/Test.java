// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public float fFld=0.646F;
    public static short sFld=-27753;
    public static int iFld=42785;
    public static byte byFld=84;
    public static boolean bFld=true;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 8072663736914933318L);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i9) {

        int i10=-154, i11=-149, i12=55138, i13=201, i14=-11, i15=-33514, i16=-39467, iArr[][]=new int[N][N];
        float f=-73.632F;
        long l=6L;
        boolean b1=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(dArr, 18.2051);

        for (i10 = 3; i10 < 163; ++i10) {
            i11 += (((i10 * i9) + i12) - f);
            i13 = 1;
            while (++i13 < 10) {
                for (i14 = 1; i14 > 1; --i14) {
                    i15 >>= i15;
                    if (i10 != 0) {
                        vMeth_check_sum += i9 + i10 + i11 + i12 + Float.floatToIntBits(f) + i13 + i14 + i15 + l + i16 +
                            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    iArr[i10] = FuzzerUtils.int1array(N, (int)201);
                }
            }
            Test.instanceCount += Test.instanceCount;
        }
        i9 += (int)Test.instanceCount;
        i11 <<= i14;
        dArr = dArr;
        for (l = 18; l < 305; l++) {
            i9 >>>= -38226;
            if (b1) continue;
        }
        i16 = (int)Test.instanceCount;
        vMeth_check_sum += i9 + i10 + i11 + i12 + Float.floatToIntBits(f) + i13 + i14 + i15 + l + i16 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static long lMeth1(byte by1, int i6, int i7) {

        int i8=53844, i18=-5, i19=3, i21=0, iArr1[]=new int[N];
        float f1=-38.738F;

        FuzzerUtils.init(iArr1, -9);

        i8 = 1;
        while (++i8 < 318) {
            vMeth(i6);
            for (i18 = 1; i18 < 5; i18++) {
                Test.instanceCount += i18;
                i7 += (i18 + i8);
                i7 = (int)Test.instanceCount;
                i6 = Test.sFld;
                i19 = (int)f1;
                i6 += i18;
            }
            iArr1[i8 + 1] -= (int)f1;
            iArr1[i8] += i7;
            iArr1[i8 - 1] -= (int)Test.instanceCount;
        }
        for (int i20 : iArr1) {
            i21 = (int)-1898730374190473686L;
            Test.instanceCount = Test.iFld;
        }
        long meth_res = by1 + i6 + i7 + i8 + i18 + i19 + Float.floatToIntBits(f1) + i21 + FuzzerUtils.checkSum(iArr1);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i3) {

        int i4=69, i5=177, i22=-13, i23=-61257;
        boolean b=false, bArr[]=new boolean[N];
        short s=15247;

        FuzzerUtils.init(bArr, false);

        for (i4 = 2; i4 < 168; i4++) {
            float f2=33.248F;
            i3 += (i4 * i4);
            Test.instanceCount = i4;
            b = bArr[i4 - 1];
            i3 += (((i4 * Test.instanceCount) + s) - Test.instanceCount);
            if ((-lMeth1(Test.byFld, 93, i4)) != f2) continue;
            i3 = (int)Test.instanceCount;
            Test.instanceCount <<= 26;
            i3 >>>= (int)Test.instanceCount;
            for (i22 = 1; i22 < 10; i22++) {
                Test.iFld = i5;
                Test.lArrFld[i4] |= Test.instanceCount;
                f2 += Test.iFld;
                i3 += (int)(0.264F + (i22 * i22));
                if (b) continue;
            }
        }
        long meth_res = i3 + i4 + i5 + (b ? 1 : 0) + s + i22 + i23 + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i1=15315, i2=-12, i24=-2, i25=38039, i26=25, i27=-12, i28=125, i29=-5314, iArr2[][]=new int[N][N];
        byte by=-66;
        double d=-1.46520, dArr1[]=new double[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 19.852F);
        FuzzerUtils.init(iArr2, 2895);
        FuzzerUtils.init(dArr1, 1.6831);

        for (i = 4; i < 267; ++i) {
            i2 = 1;
            while (++i2 < 96) {
                i1 -= (int)(((i1 - -31.681F) - (i + -142)) + Test.lArrFld[i2 + 1]);
                fFld += (((fFld - 16) - by) * ((--i1) + (--Test.instanceCount)));
                d -= lMeth(i);
                if (Test.bFld) break;
                fArr[i] = i2;
                Test.iFld += i2;
                Test.iFld *= (int)fFld;
                iArr2[i - 1][i2 + 1] += (int)d;
                fFld += (i2 + fFld);
                i1 = 11702;
            }
            dArr1[i - 1] = Test.instanceCount;
            Test.iFld = Test.iFld;
            for (i24 = 2; i24 < 96; ++i24) {
                i25 = (int)Test.instanceCount;
                for (i26 = 1; i26 < 2; ++i26) {
                    i25 += Test.iFld;
                    i27 -= Test.iFld;
                    fFld += (i26 + fFld);
                    i25 -= -14913;
                    Test.sFld += (short)i26;
                    Test.bFld = Test.bFld;
                    iArr2[i26][i26 - 1] = i1;
                    fFld += Test.sFld;
                }
                for (i28 = 2; i < i28; i28 -= 3) {
                    Test.instanceCount = Test.sFld;
                    i29 -= Test.iFld;
                    iArr2[i - 1][i28] += Test.byFld;
                    Test.sFld += (short)(i28 * i1);
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("by d i24 = " + by + "," + Double.doubleToLongBits(d) + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 fArr = " + i28 + "," + i29 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("iArr2 dArr1 = " + FuzzerUtils.checkSum(iArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test.instanceCount fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld Test.byFld Test.bFld = " + Test.iFld + "," + Test.byFld + "," + (Test.bFld ?
            1 : 0));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth1_check_sum: " + lMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
