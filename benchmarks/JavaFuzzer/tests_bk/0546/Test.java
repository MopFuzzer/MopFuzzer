// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:07 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-267211077264883395L;
    public static byte byFld=98;
    public static boolean bFld=true;
    public static volatile float fFld=61.505F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 64468);
        FuzzerUtils.init(Test.lArrFld, -199L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float f=-116.507F;
        int i6=63408, i7=9, i9=-7, i10=-244, i11=215, i12=-23687;
        short s=-6449;

        Test.instanceCount = (long)f;
        for (i6 = 307; i6 > 17; i6--) {
            i7 /= (int)(i6 | 1);
            Test.byFld >>= (byte)-3873;
            i7 -= 225;
            Test.instanceCount = i6;
            i7 -= 26;
            Test.instanceCount -= (long)f;
            for (i9 = 1; i9 < 6; i9++) {
                i10 <<= i10;
            }
        }
        i10 >>= i10;
        i7 = i9;
        for (i11 = 20; 364 > i11; ++i11) {
            i12 += (i11 * i11);
            i7 += (i11 - s);
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i6 + i7 + i9 + i10 + i11 + i12 + s;
    }

    public static void vMeth1() {

        int i2=13, i3=101, i4=95, i5=-7, i13=-2;
        double d=-2.130793;
        byte by=69;
        short s1=-14294;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.252F);

        for (i2 = 5; i2 < 239; i2++) {
            for (i4 = 1; i4 < 7; i4++) {
                fArr = (fArr = (fArr = (fArr = FuzzerUtils.float1array(N, (float)1.481F))));
                try {
                    i5 = (i4 / i2);
                    i5 = (23252 / i3);
                    i3 = (-1425650023 % i5);
                } catch (ArithmeticException a_e) {}
                i5 += (i4 * i4);
                vMeth2();
                i3 *= (int)d;
                if (Test.bFld) continue;
                i3 += (int)d;
                i13 >>>= i2;
                Test.lArrFld[i4 - 1] = i3;
                i13 = by;
            }
            s1 -= (short)i13;
            Test.instanceCount = i13;
        }
        i3 = i13;
        vMeth1_check_sum += i2 + i3 + i4 + i5 + Double.doubleToLongBits(d) + i13 + by + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i) {

        int i1=173, i15=-20085, i16=-6, i17=-3421, i18=34744;
        short s2=-6165;
        float f1=1.961F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -13L);

        i1 = 1;
        while (++i1 < 339) {
            vMeth1();
            Test.iArrFld[i1 + 1] = i;
            lArr[i1] <<= 883;
            for (i15 = 1; 5 > i15; ++i15) {
                i16 += (((i15 * s2) + s2) - i1);
                f1 += (((i15 * i) + i15) - f1);
                for (i17 = i15; i17 < 2; ++i17) {
                    Test.bFld = Test.bFld;
                    i18 = (int)Test.instanceCount;
                    i18 = 10878;
                    Test.instanceCount <<= 8;
                    Test.iArrFld[i1 + 1] = (int)Test.instanceCount;
                }
                Test.iArrFld = Test.iArrFld;
                i = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i + i1 + i15 + i16 + s2 + Float.floatToIntBits(f1) + i17 + i18 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=-13, i20=0, i21=3999, i22=-3, i23=-6, i24=-54832, i25=27, i26=-47910, i27=-125;
        short s3=-5214, sArr[]=new short[N];
        long l1=7045069533006559747L;

        FuzzerUtils.init(sArr, (short)14501);

        vMeth(i19);
        i19 = 36790;
        for (i20 = 1; i20 < 362; ++i20) {
            if (Test.bFld) {
                switch (((i19 >>> 1) % 9) + 12) {
                case 12:
                    i19 += (i20 * i20);
                    i21 *= i19;
                    Test.iArrFld = Test.iArrFld;
                case 13:
                    for (i22 = 3; i22 < 70; i22++) {
                        double d1=-63.59506;
                        d1 = Test.instanceCount;
                        i23 += (i22 | (long)Test.fFld);
                        i23 = i19;
                        i21 += (i22 ^ i19);
                        for (i24 = 1; i24 < 2; ++i24) {
                            i19 = s3;
                            i19 &= (int)Test.instanceCount;
                            Test.instanceCount += -1;
                        }
                        i25 -= (int)Test.fFld;
                        i19 <<= s3;
                        for (i26 = 1; 2 > i26; i26++) {
                            sArr[i20 + 1] = (short)-32388;
                        }
                        i19 = (int)12L;
                        i27 >>= i25;
                    }
                    break;
                case 14:
                    l1 += (((i20 * Test.byFld) + i23) - Test.instanceCount);
                    Test.iArrFld[i20 + 1] += i20;
                    break;
                case 15:
                    i21 ^= i26;
                    Test.instanceCount += (((i20 * i24) + i21) - Test.fFld);
                    l1 += i25;
                    Test.bFld = Test.bFld;
                    break;
                case 16:
                    i27 <<= i19;
                case 17:
                case 18:
                    i23 -= 222;
                    break;
                case 19:
                    l1 += (((i20 * l1) + i26) - i24);
                    break;
                case 20:
                    i27 -= 186;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 s3 i26 = " + i25 + "," + s3 + "," + i26);
        FuzzerUtils.out.println("i27 l1 sArr = " + i27 + "," + l1 + "," + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld Test.iArrFld Test.lArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
