// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public boolean bFld=true;
    public static float fFld=-27.459F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(boolean b, long l, int i3) {

        int i4=-155, i5=43376, i6=-2, i7=4, i8=-91;
        short s=28676;
        float f2=0.375F;
        double d2=2.123044;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 3946191564L);

        if (b) {
            i4 = 1;
            do {
                switch ((i4 % 2) + 120) {
                case 120:
                    if (true) {
                        for (i5 = 1; 5 > i5; i5++) {
                            l = Test.instanceCount;
                            l = -32047;
                            i3 = s;
                            f2 = Test.instanceCount;
                            for (i7 = 1; i7 < 2; ++i7) {
                                i6 += (i7 | i6);
                            }
                            s = (short)i4;
                            i8 += 12;
                            lArr = lArr;
                        }
                        Test.iArrFld[i4] += (int)d2;
                    }
                    break;
                case 121:
                }
            } while (++i4 < 307);
        } else {
            Test.instanceCount += i3;
        }
        long meth_res = (b ? 1 : 0) + l + i3 + i4 + i5 + i6 + s + Float.floatToIntBits(f2) + i7 + i8 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i2) {

        float f1=29.64F;
        boolean b1=false;
        int i9=-94, i10=1450, i11=206, i12=-15008, i13=-23561;
        double d3=1.105237;
        byte by=-111;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 6688992524349051690L);

        f1 = (--i2);
        f1 %= (iMeth(b1, Test.instanceCount, i2) | 1);
        i9 = 1;
        do {
            for (i10 = 1; 5 > i10; i10++) {
                f1 += i10;
                i11 <<= (int)Test.instanceCount;
                for (i12 = i9; 2 > i12; i12++) {
                    i11 += i10;
                    i13 += i12;
                    d3 = by;
                    Test.instanceCount = i12;
                    try {
                        Test.iArrFld[i12 - 1] = (i11 / i9);
                        Test.iArrFld[i9 - 1] = (i13 % i11);
                        Test.iArrFld[i12] = (i12 / i9);
                    } catch (ArithmeticException a_e) {}
                    lArr1[i12 + 1] += (long)f1;
                    if (b1) break;
                }
                f1 = i13;
            }
        } while (++i9 < 344);
        vMeth1_check_sum += i2 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + i9 + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(d3) + by + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i1, double d1, float f) {

        short s1=13129;
        int i14=8, i15=-8, i16=-12084, i17=-216, i18=38, i19=-53754, i20=0;
        byte by1=109;

        vMeth1(i1);
        i1 = s1;
        for (i14 = 207; 10 < i14; i14 -= 3) {
            Test.iArrFld[i14 + 1] >>= i14;
            for (i16 = 1; i16 < 24; i16++) {
                Test.instanceCount |= i15;
                by1 <<= (byte)i15;
                i18 = 1;
                while (++i18 < 2) {
                    Test.instanceCount += (i18 * i18);
                }
            }
            Test.iArrFld[i14] >>= 162;
            i1 = (int)Test.instanceCount;
        }
        for (i19 = 21; i19 < 392; i19++) {
            i15 *= -50;
            Test.instanceCount *= Test.instanceCount;
            by1 = (byte)i19;
        }
        vMeth_check_sum += i1 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + s1 + i14 + i15 + i16 + i17 +
            by1 + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        double d=-40.116562, d4=45.113744;
        int i=4, i21=2, i22=54691, i23=-54711;

        for (d = 1; d < 204; d++) {
            Test.iArrFld[(int)(d - 1)] = i;
            bFld = bFld;
            vMeth(-61736, 31.79492, Test.fFld);
            Test.instanceCount = (long)d;
        }
        i21 = 1;
        while (++i21 < 345) {
            if (bFld) continue;
            bFld = bFld;
        }
        d4 = i;
        for (i22 = 10; i22 < 163; i22++) {
            i23 += (int)Test.instanceCount;
        }

        FuzzerUtils.out.println("d i i21 = " + Double.doubleToLongBits(d) + "," + i + "," + i21);
        FuzzerUtils.out.println("d4 i22 i23 = " + Double.doubleToLongBits(d4) + "," + i22 + "," + i23);

        FuzzerUtils.out.println("Test.instanceCount bFld Test.fFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
