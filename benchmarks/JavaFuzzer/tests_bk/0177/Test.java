// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2181404270102086945L;
    public static boolean bFld=true;
    public static float fFld=2.739F;
    public static byte byFld=83;
    public static volatile int iFld=42422;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2) {

        int i3=114, i4=-116, i5=-165, i6=6, i7=-48591;
        double d1=36.6361;

        for (i3 = 4; i3 < 208; ++i3) {
            i4 += i3;
            for (i5 = 1; i5 < 8; i5++) {
                i7 = -3;
            }
            Test.bFld = Test.bFld;
            d1 = i7;
        }
        l2 = i7;
        l2 = i5;
        vMeth1_check_sum += l2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1);
    }

    public static int iMeth(int i1, int i2, long l1) {

        int i8=25, i9=214, i10=36265, i11=-6891, iArr[][]=new int[N][N];
        short s=17198;

        FuzzerUtils.init(iArr, -60792);

        vMeth1(Test.instanceCount);
        for (i8 = 7; i8 < 177; ++i8) {
            if (Test.bFld) {
                s = (short)-233;
                iArr[i8 + 1][i8] = i1;
            }
            if (i2 != 0) {
            }
            for (i10 = 9; i10 > i8; i10 -= 3) {
                i11 *= 20962;
                l1 = (long)-121.121271;
            }
            i11 += (i8 | i1);
            Test.instanceCount += (((i8 * Test.instanceCount) + i1) - i10);
            Test.instanceCount += (-11 + (i8 * i8));
            Test.instanceCount <<= l1;
            i9 -= -2519;
            i9 <<= (int)Test.instanceCount;
        }
        long meth_res = i1 + i2 + l1 + i8 + i9 + s + i10 + i11 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d) {

        int i12=-10950, i13=57839, i14=13001, i15=-56140, i16=-38, i17=3, i18=-240, iArr1[][]=new int[N][N];
        short s1=17889;

        FuzzerUtils.init(iArr1, 2);

        if (true) {
            d += iMeth(i12, i12, 471459958341454185L);
            if (true) {
                for (i13 = 7; i13 < 236; i13++) {
                    i12 += i13;
                    if (i12 != 0) {
                        vMeth_check_sum += Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 + i18 + s1 +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    Test.instanceCount += (3 + (i13 * i13));
                    i12 += (int)Test.fFld;
                }
                for (i15 = 6; i15 < 230; ++i15) {
                    for (i17 = i15; i17 < 7; i17++) {
                        Test.instanceCount -= (long)d;
                    }
                    iArr1[i15][i15 - 1] >>= 63185;
                    i12 >>= (int)Test.instanceCount;
                    s1 += (short)i15;
                    i14 += i15;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 + i18 + s1 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        long l=-43219L, lArr[]=new long[N];
        int i=41555, i19=39461, i20=-79, i21=158, i22=39, iArr2[][]=new int[N][N];
        double d2=7.110929;

        FuzzerUtils.init(iArr2, 27004);
        FuzzerUtils.init(lArr, -14L);

        for (l = 1; 122 > l; l++) {
            vMeth(d2);
            for (i19 = (int)(l); i19 < 207; ++i19) {
                i += (i19 * i19);
                Test.instanceCount += (i19 * i20);
                i20 -= 52876;
                Test.instanceCount = i20;
                i21 = 1;
                do {
                    try {
                        i = (i21 % i21);
                        i20 = (i % 189);
                        i = (i / -6804);
                    } catch (ArithmeticException a_e) {}
                    iArrFld[(int)(l)] = -36809;
                    if (false) break;
                    i20 = i19;
                    try {
                        i20 = (i21 % -42);
                        i = (0 % iArrFld[i19 - 1]);
                        i = (iArrFld[(int)(l)] % 156);
                    } catch (ArithmeticException a_e) {}
                    i20 = Test.byFld;
                    i20 += i21;
                    Test.fFld += i;
                    Test.instanceCount ^= i;
                } while (++i21 < 1);
                i22 = 1;
                while (--i22 > 0) {
                    i20 += Test.iFld;
                    iArr2 = iArr2;
                    i <<= 51196;
                    lArr[(int)(l)] = i20;
                    Test.instanceCount &= i22;
                    Test.iFld >>= i22;
                    i20 += i22;
                    try {
                        i = (i % iArr2[i19][(int)(l)]);
                        i = (-33018 % i22);
                        Test.iFld = (i / i21);
                    } catch (ArithmeticException a_e) {}
                }
            }
            try {
                i20 = (-804747814 % i22);
                Test.iFld = (i / Test.iFld);
                i = (-1911958319 % i);
            } catch (ArithmeticException a_e) {}
            Test.fFld += Test.byFld;
            Test.byFld += (byte)(((l * i20) + i22) - i20);
            iArr2[(int)(l - 1)][(int)(l)] += i21;
        }

        FuzzerUtils.out.println("l i d2 = " + l + "," + i + "," + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 iArr2 lArr = " + i22 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.iFld iArrFld = " + Test.byFld + "," + Test.iFld + "," +
            FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
