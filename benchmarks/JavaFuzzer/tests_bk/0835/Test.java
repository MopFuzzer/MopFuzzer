// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3003471280L;
    public static float fFld=0.50F;
    public static double dArrFld[]=new double[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 85.54254);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(byte by, int i8) {

        int i9=8, i10=16, i11=-51571, i12=-16579, i13=-14, i14=-7, i15=-1217, iArr1[]=new int[N];
        float f1=-1.914F, f2=0.898F;
        boolean b=false;
        double d=1.127510;

        FuzzerUtils.init(iArr1, 32);

        for (i9 = 5; 327 > i9; ++i9) {
            Test.fFld -= (float)-111.54807;
        }
        for (i11 = 3; i11 < 162; i11++) {
            if (true) {
                i10 += (0 + (i11 * i11));
                f1 %= (i11 | 1);
                vMeth_check_sum += by + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
                    Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i13 + i14 + i15 +
                    FuzzerUtils.checkSum(iArr1);
                return;
            } else if (b) {
                iArr1[i11] = 3603;
                Test.instanceCount = -14;
            }
            d -= i9;
            i10 = 14;
            if (b) break;
            for (f2 = 10; f2 > 1; --f2) {
                for (i14 = 2; i14 > i11; i14--) {
                    i13 *= (int)f1;
                    i15 <<= i15;
                }
            }
        }
        vMeth_check_sum += by + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr1);
    }

    public static double dMeth(float f, int i2) {

        int i3=-10, i4=9, i5=61, i6=13, i7=-198, i16=-10, iArr[]=new int[N];
        long l=-3789224212001862209L;

        FuzzerUtils.init(iArr, -18677);

        for (i3 = 11; i3 < 247; i3++) {
            f -= (i2 + i4);
            for (i5 = 1; i5 < 7; ++i5) {
                iArr[i3 - 1] = (int)(Long.reverseBytes(47L) + (-iArr[i5 + 1]));
                i7 = 1;
                do {
                    vMeth((byte)(44), 65268);
                    i2 = (int)Test.fFld;
                    iArr = iArr;
                    Test.dArrFld[i7 - 1] -= i7;
                    if (i3 != 0) {
                    }
                    Test.instanceCount += (i7 | i5);
                } while (++i7 < 2);
                iArr[i5 - 1] <<= i5;
                for (l = 1; l < 2; l++) {
                    i4 += (int)(l * i2);
                    i2 -= (int)Test.instanceCount;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7 + l + i16 + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public int iMeth(int i1) {

        double d1=-2.10103;
        int i17=-21575, i18=-14, i19=1290, i20=-7, i21=-40816, iArr2[]=new int[N];
        long l1=9007364890231018334L;
        boolean b1=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)84);
        FuzzerUtils.init(iArr2, -14225);

        byArr[(i1 >>> 1) % N] -= (byte)dMeth(Test.fFld, i1);
        for (d1 = 8; 297 > d1; ++d1) {
            Test.instanceCount = i1;
            i17 ^= (int)l1;
            if (true) {
                i1 += i1;
                Test.instanceCount += (long)(d1 * d1);
                for (i18 = 1; i18 < 6; ++i18) {
                    iArr2[(int)(d1 - 1)] = i17;
                    i19 -= i17;
                    l1 >>= i17;
                    if (b1) {
                        for (i20 = 1; i20 < 2; i20++) {
                            i17 = (int)Test.fFld;
                            lArrFld[i18] = i20;
                        }
                    } else if (b1) {
                        i21 += (i18 * i18);
                    } else {
                        iArr2[i18] <<= i19;
                    }
                }
            } else {
                b1 = b1;
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d1) + i17 + l1 + i18 + i19 + i20 + i21 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=65104;

        i += (int)(Test.instanceCount - (iMeth(i) * i));

        FuzzerUtils.out.println("i = " + i);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
