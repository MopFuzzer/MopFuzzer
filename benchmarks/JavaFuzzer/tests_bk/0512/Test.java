// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2807256471L;
    public static double dFld=-1.96609;
    public static boolean bFld=true;
    public static volatile float fFld=2.446F;
    public byte byFld=-53;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 37944);
        FuzzerUtils.init(Test.sArrFld, (short)-22167);
        FuzzerUtils.init(Test.lArrFld, -13L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float f=118.781F;

        for (int i8 : Test.iArrFld) {
            i8 += (int)f;
            i8 = i8;
        }
        vMeth2_check_sum += Float.floatToIntBits(f);
    }

    public static void vMeth1(int i5, long l) {

        int i6=32089, i7=6, i9=5, i10=-54943, i11=-48002, i12=-40798, i13=5;

        for (i6 = 6; i6 < 248; ++i6) {
            vMeth2();
            i7 += (int)l;
            i5 = (int)Test.dFld;
            i5 -= -9;
            Test.bFld = Test.bFld;
            Test.instanceCount = Test.instanceCount;
            for (i9 = 1; i9 < 7; ++i9) {
                Test.dFld = i9;
                for (i11 = 2; i11 > 1; --i11) {
                    Test.iArrFld[i9] *= 27880;
                    Test.bFld = Test.bFld;
                    i13 = i7;
                    i7 -= -10;
                }
                Test.bFld = Test.bFld;
            }
        }
        vMeth1_check_sum += i5 + l + i6 + i7 + i9 + i10 + i11 + i12 + i13;
    }

    public static void vMeth(int i) {

        int i1=-73, i2=49, i3=11, i4=-126, i14=138, i15=-176, iArr[][]=new int[N][N];
        float fArr[]=new float[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, -3);
        FuzzerUtils.init(fArr, -97.528F);
        FuzzerUtils.init(lArr, 74161231L);

        iArr[(i1 >>> 1) % N][(i >>> 1) % N] = i1;
        Test.dFld -= (-(--fArr[(i1 >>> 1) % N]));
        i2 = 1;
        while (++i2 < 368) {
            for (i3 = 1; 5 > i3; i3 += 3) {
                lArr = FuzzerUtils.long2array(N, (long)4593L);
                iArr[i2] = iArr[i2 - 1];
                vMeth1(i4, 0L);
                for (i14 = 1; i14 < 5; i14++) {
                    Test.sArrFld = Test.sArrFld;
                    Test.fFld = (float)Test.dFld;
                    if (Test.bFld) continue;
                    i4 = i3;
                    i4 += (i14 + i15);
                    i = -121;
                    i1 = i3;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i14 + i15 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=0, i17=-6, i18=8, i19=99, i20=-36768, i21=-6, i22=-13080;
        long l1=-10L;
        boolean b=false;
        short s=-30789;

        vMeth(i16);
        Test.lArrFld[(i16 >>> 1) % N] %= (long)-1.58629;
        Test.instanceCount *= i16;
        i16 >>>= i16;
        if (Test.bFld) {
            for (i17 = 8; i17 < 232; ++i17) {
                i16 += i16;
                for (i19 = i17; i19 < 112; ++i19) {
                    i18 += (-3 + (i19 * i19));
                    Test.fFld += Test.instanceCount;
                    i18 += i18;
                    i21 = 1;
                    do {
                        Test.fFld = Test.instanceCount;
                        Test.iArrFld[i17] *= (int)-2.98007;
                        Test.instanceCount >>= i16;
                        i16 += -7;
                        Test.instanceCount <<= Test.instanceCount;
                        Test.instanceCount -= i16;
                        i16 = i21;
                        switch ((((-3 >>> 1) % 9) * 5) + 91) {
                        case 123:
                        case 134:
                            i16 += (i21 * i19);
                            i20 *= 100;
                            break;
                        case 93:
                            byFld >>= (byte)i16;
                            i22 += (i21 * i21);
                        case 118:
                            i20 = i16;
                        case 115:
                            Test.fFld -= i20;
                            switch (((i21 % 4) * 5) + 92) {
                            case 106:
                                i16 <<= i22;
                                Test.iArrFld[i17 - 1] = (int)Test.instanceCount;
                                if (Test.bFld) break;
                                break;
                            case 94:
                                l1 = Test.instanceCount;
                            case 109:
                                i18 >>= i21;
                                break;
                            case 102:
                                l1 -= (long)Test.dFld;
                                break;
                            }
                            break;
                        case 96:
                            if (b) continue;
                            break;
                        case 100:
                            if (true) break;
                            break;
                        case 108:
                            i16 = s;
                            break;
                        case 111:
                            Test.iArrFld[i17 + 1] ^= i20;
                            break;
                        default:
                            Test.fFld = (float)34.4817;
                        }
                    } while (++i21 < 1);
                }
            }
        } else {
            l1 = i18;
        }

        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 l1 b = " + i22 + "," + l1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("s = " + s);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fFld byFld Test.iArrFld = " + Float.floatToIntBits(Test.fFld) + "," + byFld + ","
            + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.sArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.sArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
