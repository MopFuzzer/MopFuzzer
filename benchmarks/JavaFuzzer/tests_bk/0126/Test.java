// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1846120198L;
    public static boolean bFld=false;
    public static float fFld=-100.283F;
    public static int iFld=-55148;
    public static short sFld=6911;
    public static long lFld=-50L;
    public int iArrFld[][]=new int[N][N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4, long l2, long l3) {

        int i5=5, i6=48903, i7=39709, i8=-13211, i9=-58, i10=12;
        byte byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-115);
        FuzzerUtils.init(lArr, 2525826155L);

        for (i5 = 311; i5 > 16; i5--) {
            i6 &= i5;
            for (i7 = 1; i7 < 6; i7++) {
                for (i9 = 2; i9 > i7; --i9) {
                    if (Test.bFld) break;
                    l3 += (i9 * i9);
                    switch ((i9 % 2) + 93) {
                    case 93:
                        Test.bFld = Test.bFld;
                        break;
                    case 94:
                        i6 >>>= -9;
                        i10 += i10;
                        if (i9 != 0) {
                        }
                        i8 -= i10;
                        break;
                    }
                    lArr[i5 - 1] = i5;
                    i10 *= (int)l3;
                }
                i10 = i9;
            }
        }
        long meth_res = i4 + l2 + l3 + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        double d1=25.80998;
        int i11=-14, i12=70, i13=26442, i14=240, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 52476);

        if (Test.bFld) {
            Test.instanceCount = iMeth1(i2, Test.instanceCount, Test.instanceCount);
            iArr[(-21 >>> 1) % N] += i2;
            Test.bFld = Test.bFld;
        }
        iArr[(29446 >>> 1) % N] += i2;
        i3 *= i2;
        i3 += i2;
        d1 = i2;
        i11 = 1;
        while (++i11 < 376) {
            i3 += (((i11 * i3) + Test.instanceCount) - Test.fFld);
            i2 *= i11;
            for (i12 = 1; i12 < 4; ++i12) {
                i14 = 1;
                while (++i14 < 2) {
                    i3 = i14;
                }
                if (i14 != 0) {
                    vMeth_check_sum += i2 + i3 + Double.doubleToLongBits(d1) + i11 + i12 + i13 + i14 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + Double.doubleToLongBits(d1) + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l, long l1) {

        int i15=-167;
        double d2=0.81007;

        vMeth(i15, i15);
        Test.fFld -= (float)d2;
        i15 += i15;
        i15 >>= (int)l1;
        long meth_res = l + l1 + i15 + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=9, i1=-20562, i16=13, i17=8, i18=-6, i19=13, i20=-39092, i21=-54531, i22=-44297, i23=22105, i24=96,
            i25=63;
        double d=0.95326;
        long l4=51L, lArr1[]=new long[N];
        byte by1=62;
        float f=-41.376F;

        FuzzerUtils.init(lArr1, 224L);

        for (i = 7; i < 187; ++i) {
            Test.bFld = (((Test.instanceCount - d) - i) < Test.instanceCount);
            i1 = iMeth(Test.instanceCount, Test.instanceCount);
            i1 <<= i1;
        }
        for (i16 = 20; i16 < 353; i16++) {
            if (Test.bFld) continue;
        }
        for (i18 = 143; 1 < i18; i18 -= 2) {
            i19 -= (int)d;
            i20 = 1;
            while (++i20 < 353) {
                i19 ^= i1;
                for (l4 = 1; 1 > l4; ++l4) {
                    Test.iFld += (int)(((l4 * i1) + i19) - i21);
                }
                Test.instanceCount = (long)d;
                i1 = Test.iFld;
                i22 = 1;
                while (++i22 < 1) {
                    i1 += (int)l4;
                }
                i19 += (int)5L;
                i17 -= (int)Test.instanceCount;
                for (i23 = 1; i23 < 1; i23++) {
                    int i26=58136;
                    d *= i18;
                    i1 -= i19;
                    i21 = (int)Test.fFld;
                    i24 >>= i19;
                    switch (((i25 >>> 1) % 3) + 64) {
                    case 64:
                        try {
                            i19 = (-58051 / i22);
                            i24 = (45312 / i23);
                            i26 = (iArrFld[i20 + 1][i23] / 43333);
                        } catch (ArithmeticException a_e) {}
                        lArr1[(i21 >>> 1) % N] += by1;
                        break;
                    case 65:
                        Test.sFld <<= (short)i19;
                        Test.lFld += (((i23 * i17) + Test.lFld) - Test.iFld);
                        break;
                    case 66:
                        if (Test.bFld) break;
                        f *= i1;
                    default:
                        Test.iFld &= 106;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 l4 = " + i19 + "," + i20 + "," + l4);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 by1 = " + i24 + "," + i25 + "," + by1);
        FuzzerUtils.out.println("f lArr1 = " + Float.floatToIntBits(f) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.sFld Test.lFld = " + Test.iFld + "," + Test.sFld + "," + Test.lFld);
        FuzzerUtils.out.println("iArrFld = " + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
