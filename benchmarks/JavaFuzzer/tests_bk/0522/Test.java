// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public static float fFld=-122.139F;
    public short sFld=28792;
    public static int iFld=131;
    public static double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -23.57418);
        FuzzerUtils.init(Test.lArrFld, 10675L);
        FuzzerUtils.init(Test.iArrFld, -91);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=6, i3=32834, i4=13, i5=8;
        byte by1=101, byArr[][]=new byte[N][N];
        double d1=2.51755;
        float f=-38.41F;

        FuzzerUtils.init(byArr, (byte)-28);

        Test.lArrFld[(i2 >>> 1) % N] = i2;
        for (i3 = 5; i3 < 172; i3 += 2) {
            Test.lArrFld[i3] >>= i3;
            i2 = -56048;
            Test.instanceCount += (i3 * i3);
            i4 *= 13;
            Test.iArrFld[i3 + 1] = by1;
            Test.instanceCount = i2;
            for (d1 = i3; d1 < 19; d1++) {
                i2 = (int)Test.instanceCount;
                i2 ^= -161;
                switch (((i4 >>> 1) % 6) + 125) {
                case 125:
                    i5 += (int)-6159122542189313802L;
                    f += (float)(d1 + i5);
                    Test.instanceCount -= Test.instanceCount;
                    break;
                case 126:
                    byArr[i3 + 1][i3 + 1] *= (byte)i3;
                    break;
                case 127:
                    Test.dArrFld[(int)(d1 - 1)] += -26974L;
                    break;
                case 128:
                    Test.instanceCount = (long)-2.70565;
                    break;
                case 129:
                    i5 += (int)(((d1 * i4) + i4) - i4);
                case 130:
                    i2 *= i5;
                default:
                    f += (float)(d1 * i5);
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + by1 + Double.doubleToLongBits(d1) + i5 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(byArr);
    }

    public static long lMeth(int i1) {

        short s1=-31078;
        byte by=50;

        Test.dArrFld[(i1 >>> 1) % N] -= ((--Test.dArrFld[(-6 >>> 1) % N]) - i1);
        s1 += by;
        vMeth1();
        Test.instanceCount |= -218;
        long meth_res = i1 + s1 + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d, short s) {

        int i=39;

        i *= (int)lMeth(i);
        vMeth_check_sum += Double.doubleToLongBits(d) + s + i;
    }

    public void mainTest(String[] strArr1) {

        double d2=-121.6034;
        int i6=-40, i7=-35, i8=-32, i9=-9, i10=-14, i11=64549, i12=114;
        boolean b=false;
        byte by2=-49;

        vMeth(d2, (short)(-1138));
        i6 = 1;
        do {
            Test.fFld = Test.instanceCount;
            i7 += (((i6 * i7) + i6) - Test.instanceCount);
            i7 -= (int)-443404775108357387L;
            sFld += (short)-8121L;
            switch (((i6 % 6) * 5) + 1) {
            case 8:
                i7 += i7;
                i7 += (((i6 * Test.instanceCount) + sFld) - i6);
                i7 <<= i7;
                Test.iFld -= i7;
                break;
            case 30:
                Test.instanceCount -= i6;
                break;
            case 28:
                i7 -= -4;
                d2 = Test.fFld;
                for (i8 = 9; i8 < 163; ++i8) {
                    d2 = i7;
                    Test.iArrFld[i6] += (int)Test.instanceCount;
                    Test.iFld = 8;
                    for (i10 = 1; i10 < 2; ++i10) {
                        Test.iFld += i10;
                        Test.instanceCount += i9;
                        Test.instanceCount = i11;
                        try {
                            Test.iArrFld[i6 + 1] = (i10 / i9);
                            i11 = (189 / Test.iFld);
                            i9 = (i9 / Test.iFld);
                        } catch (ArithmeticException a_e) {}
                        if (b) {
                            b = b;
                            i11 &= (int)Test.instanceCount;
                            i7 += (int)Test.instanceCount;
                            if (true) break;
                        } else if (false) {
                            i9 <<= by2;
                            Test.iArrFld[i8 - 1] -= i9;
                        } else {
                            Test.instanceCount = 229;
                        }
                    }
                }
            case 19:
                Test.iArrFld[i6 + 1] = i8;
                break;
            case 21:
                i11 += (int)Test.instanceCount;
            case 11:
                Test.iArrFld[i6] <<= i12;
                break;
            }
        } while (++i6 < 154);

        FuzzerUtils.out.println("d2 i6 i7 = " + Double.doubleToLongBits(d2) + "," + i6 + "," + i7);
        FuzzerUtils.out.println("i8 i9 i10 = " + i8 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 b by2 = " + i11 + "," + (b ? 1 : 0) + "," + by2);
        FuzzerUtils.out.println("i12 = " + i12);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + sFld);
        FuzzerUtils.out.println("Test.iFld Test.dArrFld Test.lArrFld = " + Test.iFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
