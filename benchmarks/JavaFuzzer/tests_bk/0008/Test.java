// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2591446950L;
    public static short sFld=3887;
    public static float fFld=-1.4F;
    public static int iFld=-14;
    public static double dFld=-90.69040;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -1);
        FuzzerUtils.init(Test.lArrFld, -1L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i5, boolean b) {

        int i6=3, i7=-7, i8=56331, i9=215, i10=13;
        byte by=-108;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -30364L);

        for (i6 = 1; 197 > i6; ++i6) {
            by = (byte)i7;
            i7 += i6;
            Test.sFld = (short)i7;
            lArr[i6 + 1][i6] <<= 10L;
            for (i8 = i6; i8 < 8; i8++) {
                switch (((-132 >>> 1) % 2) + 112) {
                case 112:
                    Test.instanceCount += i8;
                    i7 = -8;
                    break;
                case 113:
                    Test.instanceCount -= Test.instanceCount;
                    i7 = (int)Test.instanceCount;
                    i10 = 1;
                    while (++i10 < 1) {
                        i7 -= i5;
                        i7 -= i8;
                        Test.instanceCount += i7;
                    }
                    break;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i5 + (b ? 1 : 0) + i6 + i7 + by + i8 + i9 + i10 +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l, long l1, long l2) {

        boolean b1=true;
        int i11=-51864, i12=5, i13=67, i14=-4, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 17341);

        vMeth2(Test.fFld, 9, b1);
        Test.iFld <<= -133;
        for (i11 = 7; i11 < 370; ++i11) {
            i12 -= i11;
            Test.iFld >>= (int)2844309698183422879L;
            l1 = 61007;
        }
        for (i13 = 158; i13 > 7; --i13) {
            Test.iFld = 9;
            Test.instanceCount *= l;
            b1 = b1;
            Test.iFld += (i13 ^ i11);
        }
        for (int i15 : iArr1) {
            if (b1) break;
            iArr1[(-49184 >>> 1) % N] = 158;
            Test.fFld += -39668L;
        }
        vMeth1_check_sum += l + l1 + l2 + (b1 ? 1 : 0) + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i4, short s) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -8);

        i4 = (++i4);
        iArr[(i4 >>> 1) % N] -= (int)Test.instanceCount;
        vMeth1(Test.instanceCount, Test.instanceCount, Test.instanceCount);
        Test.iFld += (int)Test.dFld;
        Test.fFld *= Test.instanceCount;
        vMeth_check_sum += i4 + s + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i1=13182, i2=38814, i3=-2, i16=14, i17=12, i18=-11, i19=14, i20=-62, i21=-90, i22=1, i23=5;
        long l3=1787672419L;
        boolean b2=true;
        byte by1=54, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)70);

        for (i = 3; i < 275; ++i) {
            for (i2 = 4; i2 < 92; i2 += 2) {
                Test.instanceCount -= Math.abs(i);
                vMeth(48859, (short)(-12555));
                for (i16 = 1; i16 < 3; i16++) {
                    try {
                        i3 = (i3 % i3);
                        i1 = (Test.iArrFld[i] / i16);
                        i1 = (i % i16);
                    } catch (ArithmeticException a_e) {}
                }
                i17 &= (int)Test.instanceCount;
                Test.fFld += i2;
                i17 = Test.iFld;
            }
            fArrFld[i] += i;
            Test.sFld = (short)i16;
            for (i18 = 5; 92 > i18; i18 += 2) {
                Test.iFld = i2;
                Test.iArrFld[i + 1] -= i20;
                Test.iFld -= i16;
                switch (i18 + 51) {
                case 51:
                    if (false) {
                        i3 += (int)Test.fFld;
                        i19 = (int)Test.instanceCount;
                        Test.instanceCount += i18;
                    } else {
                        i3 -= i19;
                    }
                    break;
                case 52:
                    try {
                        i20 = (Test.iFld / -59291);
                        i3 = (i20 / 875082629);
                        i20 = (Test.iFld % i3);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount -= (long)Test.fFld;
                    break;
                case 53:
                    for (i21 = i18; i21 < 3; i21++) {
                        i22 = (int)Test.instanceCount;
                        l3 = i2;
                        switch (((i23 >>> 1) % 4) + 99) {
                        case 99:
                            i3 = i17;
                            b2 = b2;
                            i19 = (int)-118L;
                        case 100:
                            if (b2) break;
                            break;
                        case 101:
                            fArrFld[i18] -= i2;
                            break;
                        case 102:
                            b2 = b2;
                            break;
                        default:
                            Test.dFld *= Test.dFld;
                        }
                    }
                    break;
                case 54:
                    Test.fFld += (((i18 * i21) + i18) - Test.instanceCount);
                    break;
                case 55:
                    Test.iArrFld[i + 1] = i20;
                    break;
                case 56:
                    i3 -= i21;
                case 57:
                    Test.iArrFld[i] += i21;
                    break;
                case 58:
                    Test.instanceCount += 8527078379373830794L;
                case 59:
                    i23 >>>= Test.sFld;
                    break;
                case 60:
                    i17 -= i1;
                case 61:
                    Test.iArrFld[i18 - 1] += i;
                case 62:
                    Test.instanceCount = 232;
                    break;
                case 63:
                    Test.iFld >>= i20;
                    break;
                case 64:
                    Test.iArrFld[i] += i20;
                    break;
                case 65:
                    Test.sFld = (short)Test.iFld;
                    break;
                case 66:
                    Test.dFld += Test.fFld;
                    break;
                case 67:
                    b2 = false;
                case 68:
                    i23 -= (int)1.89650;
                    break;
                case 69:
                    Test.iArrFld[i] += i2;
                    break;
                case 70:
                    Test.dFld = -242;
                    break;
                case 71:
                    i23 *= -3;
                case 72:
                    i22 *= (int)Test.dFld;
                    break;
                case 73:
                case 74:
                    if (b2) continue;
                    break;
                case 75:
                    i23 = i18;
                case 76:
                    l3 *= Test.instanceCount;
                case 77:
                    Test.fFld += i3;
                    break;
                case 78:
                    l3 = i18;
                case 79:
                    i19 += i21;
                case 80:
                    if (b2) continue;
                    break;
                case 81:
                    if (b2) break;
                    break;
                case 82:
                    fArrFld = fArrFld;
                    break;
                case 83:
                    i3 += i19;
                    break;
                case 84:
                    i19 <<= i2;
                    break;
                case 85:
                    Test.sFld >>= (short)i1;
                    break;
                case 86:
                    Test.iArrFld[i18] >>= by1;
                case 87:
                    i3 += (((i18 * Test.iFld) + Test.instanceCount) - i17);
                    break;
                case 88:
                    i23 = i17;
                    break;
                case 89:
                    i1 += (i18 | Test.instanceCount);
                    break;
                case 90:
                case 91:
                    Test.iFld += i18;
                    break;
                case 92:
                    Test.fFld += Test.iFld;
                case 93:
                    Test.instanceCount -= i21;
                case 94:
                    b2 = b2;
                    break;
                case 95:
                    Test.instanceCount += (i18 | Test.instanceCount);
                    break;
                case 96:
                case 97:
                case 98:
                    i23 = Test.sFld;
                    break;
                case 99:
                    i17 += (((i18 * l3) + i17) - Test.fFld);
                    break;
                case 100:
                    i3 += i;
                    break;
                case 101:
                    if (b2) continue;
                    break;
                case 102:
                case 103:
                    i20 = i3;
                    break;
                case 104:
                    i19 += (i18 * i18);
                    break;
                case 105:
                    i17 -= i22;
                    break;
                case 106:
                    Test.lArrFld[i18 - 1] -= i18;
                    break;
                case 107:
                    Test.iArrFld = Test.iArrFld;
                case 108:
                    Test.iArrFld[i] -= i19;
                    break;
                case 109:
                    i22 = i20;
                    break;
                case 110:
                    i23 = (int)Test.dFld;
                    break;
                case 111:
                    Test.lArrFld[i18 - 1] = 48047L;
                    break;
                case 112:
                    Test.fFld = i18;
                    break;
                case 113:
                    i20 = 11;
                case 114:
                    Test.dFld += i2;
                case 115:
                    Test.fFld = Test.fFld;
                    break;
                case 116:
                    fArrFld[i] = i20;
                    break;
                case 117:
                    i22 += (i18 ^ i);
                    break;
                case 118:
                    i3 = 231;
                    break;
                case 119:
                    Test.iArrFld[i18] = -138;
                    break;
                case 120:
                    byArr[i - 1] = (byte)l3;
                    break;
                default:
                    l3 = i2;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i16 i17 = " + i3 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 l3 = " + i21 + "," + i22 + "," + l3);
        FuzzerUtils.out.println("i23 b2 by1 = " + i23 + "," + (b2 ? 1 : 0) + "," + by1);
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.dFld Test.iArrFld = " + Test.iFld + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("fArrFld Test.lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) +
            "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
