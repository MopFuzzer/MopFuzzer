// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-20L;
    public static volatile float fFld=-1.450F;
    public short sFld=6343;
    public double dFld=0.18955;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 63);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, int i8, int i9) {

        int i10=-3, i11=-3, i12=-1, i13=-25584, i14=59412, i15=-8, i16=-53565, i17=92;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -53.97206);

        for (i10 = 14; i10 < 322; ++i10) {
            for (i12 = 1; i12 < 5; ++i12) {
                for (i14 = 1; i14 < 2; i14++) {
                    i8 += (int)Test.instanceCount;
                    i7 += (((i14 * Test.instanceCount) + i11) - i12);
                    Test.iArrFld = Test.iArrFld;
                    Test.instanceCount -= -243;
                    i13 = i14;
                    i9 <<= 4;
                }
                for (i16 = 2; i16 > 1; i16 -= 3) {
                    dArr[i16] *= i7;
                    Test.instanceCount = i10;
                    i9 += i14;
                    Test.fFld = i17;
                    Test.instanceCount *= i8;
                }
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(int i4, double d2) {

        long l=8L, lArr[]=new long[N];
        int i5=34751, i6=-181, i18=-2, i19=-12;
        float f=0.448F;

        FuzzerUtils.init(lArr, 519920008683561319L);

        for (l = 359; l > 11; l -= 2) {
            Test.instanceCount += (((l * i4) + f) - i5);
            i4 += (int)(l * l);
            i4 -= Math.min((int)(19672 + (l + i4)), Test.iArrFld[(int)(l + 1)]);
            i6 = 9;
            do {
                vMeth2(i5, i5, i4);
                for (i18 = 1; i18 < 2; i18 += 2) {
                    i4 *= (int)Test.fFld;
                    d2 = -30227;
                    lArr[i18 - 1] += i6;
                    i19 += (((i18 * i6) + l) - l);
                    switch ((i6 % 5) + 58) {
                    case 58:
                        try {
                            i5 = (Test.iArrFld[(i5 >>> 1) % N] / i19);
                            i5 = (-1687254463 % Test.iArrFld[i6]);
                            i5 = (i18 % 39424);
                        } catch (ArithmeticException a_e) {}
                        i5 = 3468;
                        i4 += (i18 * i4);
                        break;
                    case 59:
                    case 60:
                        Test.instanceCount -= i18;
                        break;
                    case 61:
                        i19 += i18;
                        break;
                    case 62:
                        i19 += (((i18 * i4) + l) - i18);
                        break;
                    default:
                        i4 ^= i6;
                    }
                }
            } while ((i6 -= 2) > 0);
        }
        vMeth1_check_sum += i4 + Double.doubleToLongBits(d2) + l + i5 + Float.floatToIntBits(f) + i6 + i18 + i19 +
            FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(double d1, int i1) {

        int i2=-7, i3=4, i20=-1, i21=-38502, i22=-13, i23=3, i24=-57321, i25=-27069;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 51037L);

        for (i2 = 8; 320 > i2; ++i2) {
            vMeth1(4, d1);
            Test.instanceCount = (long)d1;
            lArr1[i2 + 1] -= i1;
            Test.instanceCount += i2;
            Test.instanceCount = sFld;
        }
        lArr1[(0 >>> 1) % N] = Test.instanceCount;
        for (i20 = 1; i20 < 338; ++i20) {
            for (i22 = i20; i22 < 5; i22++) {
                Test.instanceCount |= Test.instanceCount;
                for (i24 = 1; i24 < 1; ++i24) {
                    Test.instanceCount += -79;
                    if (i25 != 0) {
                        vMeth_check_sum += Double.doubleToLongBits(d1) + i1 + i2 + i3 + i20 + i21 + i22 + i23 + i24 +
                            i25 + FuzzerUtils.checkSum(lArr1);
                        return;
                    }
                    i25 -= (int)Test.instanceCount;
                    Test.iArrFld[i20] += i21;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i1 + i2 + i3 + i20 + i21 + i22 + i23 + i24 + i25 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=-2.51530;
        int i26=46, i27=192, i28=-13, i29=-7, i30=-37188, i31=-1, iArr[]=new int[N];
        byte by=0;
        boolean b=false;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, -25);
        FuzzerUtils.init(lArr2, -24L);

        d += 26356;
        for (int i : iArr) {
            d += i;
            switch (((((i - i) >>> 1) % 10) * 5) + 8) {
            case 30:
                i = (int)((Test.instanceCount + (--i)) + (i - (-(65 - (d + i)))));
                vMeth(d, 32);
                try {
                    iArr[(i >>> 1) % N] = (i / 26547);
                    i = (i % Test.iArrFld[(i >>> 1) % N]);
                    i = (i / i);
                } catch (ArithmeticException a_e) {}
                break;
            case 49:
                for (i26 = 3; i26 < 63; i26++) {
                    for (i28 = 1; i28 < 2; i28++) {
                        sFld += (short)(i28 + i26);
                        switch (((i26 % 4) * 5) + 112) {
                        case 128:
                        case 129:
                            Test.fFld += (((i28 * by) + i29) - Test.fFld);
                            dFld = Test.fFld;
                            d = i29;
                            Test.fFld += i29;
                            break;
                        case 126:
                            sFld += (short)(10 + (i28 * i28));
                            i29 = i29;
                            Test.fFld -= -189;
                            Test.instanceCount %= (Test.instanceCount | 1);
                            break;
                        case 121:
                            lArr2[i28 + 1] -= i29;
                            i29 <<= i29;
                            iArr[i26] %= (int)((long)(Test.fFld) | 1);
                            iArr[i26] += i;
                            break;
                        }
                        b = false;
                    }
                    i27 += (((i26 * i29) + i28) - i28);
                    sFld = (short)i29;
                    for (i30 = i26; i30 < 2; i30++) {
                        Test.fFld *= i28;
                        iArr[i26] -= sFld;
                        Test.fFld = Test.instanceCount;
                    }
                }
                break;
            case 35:
            case 26:
                Test.fFld = Test.instanceCount;
                break;
            case 36:
                dFld = dFld;
                break;
            case 27:
                i = i29;
                break;
            case 13:
                i %= (int)(i31 | 1);
                break;
            case 20:
                sFld *= (short)i28;
            case 34:
                Test.instanceCount = sFld;
                break;
            case 19:
                Test.instanceCount = i26;
                break;
            }
        }

        FuzzerUtils.out.println("d i26 i27 = " + Double.doubleToLongBits(d) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 by = " + i28 + "," + i29 + "," + by);
        FuzzerUtils.out.println("b i30 i31 = " + (b ? 1 : 0) + "," + i30 + "," + i31);
        FuzzerUtils.out.println("iArr lArr2 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + sFld);
        FuzzerUtils.out.println("dFld Test.iArrFld = " + Double.doubleToLongBits(dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
