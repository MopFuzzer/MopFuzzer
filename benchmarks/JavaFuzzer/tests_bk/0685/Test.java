// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-213L;
    public static short sFld=-11758;
    public int iFld=-185;
    public boolean bFld=false;
    public static boolean bArrFld[]=new boolean[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=-33098, i3=8;

        for (i2 = 324; i2 > 18; i2--) {
            i3 += (41964 + (i2 * i2));
        }
        Test.instanceCount = 113;
        Test.instanceCount *= i2;
        i3 -= (int)32.929F;
        Test.instanceCount = 210;
        vMeth2_check_sum += i2 + i3;
    }

    public static void vMeth1(float f1, int i1) {

        int i4=-197, i5=216, i6=59907, i7=-141, i8=14;
        double d=0.115951;

        vMeth2();
        i1 -= i1;
        i4 = 1;
        while (++i4 < 185) {
            for (i5 = 1; i5 < 9; i5++) {
                for (i7 = 1; i7 < 2; i7 += 2) {
                    i8 += (int)(-19L + (i7 * i7));
                    i6 += -15236;
                    i8 -= (int)f1;
                    switch ((i7 % 1) + 60) {
                    case 60:
                        i1 = i7;
                        i6 -= (int)1.25342;
                        break;
                    default:
                        Test.sFld += (short)d;
                    }
                    i8 -= i4;
                }
                i8 += i8;
                i1 += i4;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i1 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d);
    }

    public void vMeth(boolean b, int i) {

        float f=0.843F;
        long l=-4287728125952518341L;
        int i9=21, i11=63020;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)27);

        f -= (i++);
        vMeth1(f, i);
        for (l = 2; l < 284; l++) {
            int i10=-23;
            f = -52;
            i += (int)(l + i);
            byArr[(int)(l - 1)] = (byte)i9;
            i9 -= (int)-51306L;
            i10 += (int)(l * l);
        }
        i11 = 1;
        while (++i11 < 218) {
            i ^= 11665;
            i9 += 84;
            Test.instanceCount += Test.instanceCount;
            Test.bArrFld[i11] = b;
        }
        i9 += i;
        iArrFld = iArrFld;
        vMeth_check_sum += (b ? 1 : 0) + i + Float.floatToIntBits(f) + l + i9 + i11 + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i12=-171, i13=-12, i14=0, i15=-26581, i16=-2, i17=-37243;
        double d1=1.76681, dArr[]=new double[N];
        long l1=-6834705870330930308L;
        byte by=-59;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-24528);
        FuzzerUtils.init(dArr, -2.104975);

        vMeth(true, iFld);
        for (i12 = 6; 381 > i12; ++i12) {
            iFld -= i13;
            iArrFld[i12 - 1] -= (int)Test.instanceCount;
            if (false) continue;
            if (bFld) continue;
            iFld += iFld;
        }
        i13 += i13;
        sArr[(iFld >>> 1) % N] = (short)Test.instanceCount;
        i13 -= (int)2333357504L;
        for (i14 = 4; i14 < 309; i14++) {
            if (bFld) continue;
            i13 += (8 + (i14 * i14));
        }
        d1 = 1;
        do {
            Test.instanceCount *= -32825;
            i15 += (int)(((d1 * Test.instanceCount) + iFld) - i14);
            dArr[(int)(d1)] *= i14;
            bFld = bFld;
        } while (++d1 < 219);
        iFld -= i15;
        i15 *= (int)Test.instanceCount;
        for (l1 = 10; l1 < 182; l1++) {
            i17 = 1;
            while (++i17 < 146) {
                switch ((int)((l1 % 2) + 17)) {
                case 17:
                    if (bFld) continue;
                    break;
                case 18:
                    i15 = i13;
                    iFld >>= (int)Test.instanceCount;
                    Test.instanceCount &= i14;
                    break;
                }
                by -= (byte)iFld;
                Test.sFld <<= (short)Test.instanceCount;
                Test.instanceCount += (i17 * i17);
            }
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 d1 l1 = " + i15 + "," + Double.doubleToLongBits(d1) + "," + l1);
        FuzzerUtils.out.println("i16 i17 by = " + i16 + "," + i17 + "," + by);
        FuzzerUtils.out.println("sArr dArr = " + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld iFld = " + Test.instanceCount + "," + Test.sFld + "," +
            iFld);
        FuzzerUtils.out.println("bFld Test.bArrFld iArrFld = " + (bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.bArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
