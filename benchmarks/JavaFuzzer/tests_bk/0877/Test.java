// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static short sFld=16455;
    public static double dFld=71.11587;
    public static boolean bFld=true;
    public volatile int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static int iArrFld2[]=new int[N];
    public volatile byte byArrFld[][]=new byte[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 25546);
        FuzzerUtils.init(Test.iArrFld2, -4);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8, int i9) {

        byte by=82;
        int i10=43519, i11=6, i12=-1672, i13=-156;
        float f2=1.944F;
        boolean b=false;

        by >>>= (byte)Test.instanceCount;
        for (i10 = 346; i10 > 15; i10--) {
            i11 += i10;
            Test.dFld += i11;
            f2 += i8;
            i9 += i10;
            Test.instanceCount ^= i11;
            Test.instanceCount -= i7;
            Test.instanceCount = i10;
            i9 = (int)f2;
        }
        for (i12 = 362; 15 < i12; i12--) {
            i11 >>>= i13;
            Test.iArrFld1 = Test.iArrFld1;
            Test.instanceCount = -19960;
            b = b;
        }
        vMeth1_check_sum += i7 + i8 + i9 + by + i10 + i11 + Float.floatToIntBits(f2) + i12 + i13 + (b ? 1 : 0);
    }

    public static void vMeth(int i5, int i6) {


        vMeth1(i6, i5, i6);
        vMeth_check_sum += i5 + i6;
    }

    public static long lMeth(int i2) {

        int i3=16442, i4=-33, i14=0, i15=217, i16=92, i17=122, i18=12106;
        float f1=4.130F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -81L);

        i2 >>>= (int)((++lArr[(-60782 >>> 1) % N]) + (i2 + (Test.instanceCount * Test.instanceCount)));
        i2 = (int)Test.instanceCount;
        for (i3 = 6; i3 < 306; i3++) {
            Test.iArrFld1[i3 - 1] >>= (int)((Integer.reverseBytes(i2) / ((Test.instanceCount - 7) | 1)) * ((i2 *
                Test.sFld) - (++Test.instanceCount)));
            if (Test.bFld) {
                f1 *= Test.iArrFld1[i3];
                vMeth(i4, i4);
            } else if (Test.bFld) {
                i2 *= i2;
                for (i14 = i3; 6 > i14; ++i14) {
                    for (i16 = 1; i16 < 1; i16++) {
                        Test.instanceCount -= 56285;
                        i4 += (((i16 * f1) + i15) - Test.instanceCount);
                        try {
                            i15 = (i17 / -225);
                            i17 = (53930 / i4);
                            Test.iArrFld2[i16 + 1] = (Test.iArrFld1[i16 - 1] / 16523);
                        } catch (ArithmeticException a_e) {}
                        Test.instanceCount -= i2;
                    }
                    i18 += (i14 - i16);
                }
            }
        }
        long meth_res = i2 + i3 + i4 + Float.floatToIntBits(f1) + i14 + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-13, i1=-9, i19=198, i20=-20664, i21=4, i22=4, i23=8522, i24=-11, i25=-96;
        float f=-2.833F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 19862L);

        for (i = 16; 278 > i; i += 2) {
            Test.instanceCount += (i | (long)f);
            Test.instanceCount = (((i1 + 21141) - (i1++)) * i1);
            iArrFld[i] = (int)((++i1) % (lMeth(i1) | 1));
            Test.instanceCount += (i * i);
            for (i19 = 11; i19 < 191; ++i19) {
                i20 += i19;
                Test.instanceCount = i;
                i1 += i19;
                Test.instanceCount -= (long)Test.dFld;
            }
            iArrFld[i - 1] *= 139;
            i1 -= i19;
        }
        Test.instanceCount -= i;
        Test.instanceCount = Test.instanceCount;
        i20 += (int)Test.instanceCount;
        i1 -= (int)1.997F;
        for (i21 = 7; i21 < 227; ++i21) {
            byArrFld[i21 - 1][i21] = (byte)-8568;
            Test.dFld -= Test.instanceCount;
            i22 = i21;
            Test.iArrFld2[(i20 >>> 1) % N] = i1;
            for (i23 = i21; i23 < 114; i23 += 2) {
                i25 = 1;
                do {
                    Test.instanceCount *= i22;
                    switch (((i25 % 2) * 5) + 25) {
                    case 33:
                        i20 += (int)Test.instanceCount;
                        break;
                    case 30:
                        i20 += i24;
                        i20 >>= i22;
                        lArr1[i21] -= i22;
                        break;
                    }
                    i24 -= i;
                } while (++i25 < 1);
            }
        }

        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 lArr1 = " + i25 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld iArrFld Test.iArrFld1 = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("Test.iArrFld2 byArrFld = " + FuzzerUtils.checkSum(Test.iArrFld2) + "," +
            FuzzerUtils.checkSum(byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
