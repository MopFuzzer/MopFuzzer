// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:12 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=36L;
    public static volatile float fFld=-1.662F;
    public byte byFld=107;
    public static double dFld=1.85009;
    public boolean bFld=false;
    public static volatile int iFld=-12;
    public static int iArrFld[]=new int[N];
    public long lArrFld[][]=new long[N][N];
    public static long lArrFld1[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -55673);
        FuzzerUtils.init(Test.lArrFld1, 2101171186575381689L);
        FuzzerUtils.init(Test.fArrFld, -61.453F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        float f1=-66.397F;
        int i6=-16493, i7=67, i8=-2, i9=59, i10=-180, i11=3;
        double d=48.7855;
        boolean b=true;

        for (f1 = 290; f1 > 10; f1 -= 3) {
            if (b) {
                for (i7 = 1; i7 < 17; i7++) {
                    d *= Test.instanceCount;
                    Test.fFld -= i7;
                }
                i6 += (int)f1;
                i8 = i7;
                for (i9 = (int)(f1); i9 < 17; ++i9) {
                    b = b;
                    i11 = 1;
                    while (++i11 < 1) {
                        Test.lArrFld1[(int)(f1)] -= Test.instanceCount;
                        i8 *= (int)d;
                        i6 *= i5;
                        b = b;
                        if (i8 != 0) {
                            vMeth2_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 +
                                Double.doubleToLongBits(d) + i9 + i10 + (b ? 1 : 0) + i11;
                            return;
                        }
                    }
                }
                vMeth2_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 +
                    i10 + (b ? 1 : 0) + i11;
                return;
            }
        }
        vMeth2_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + (b ?
            1 : 0) + i11;
    }

    public void vMeth1(long l1, float f, int i4) {

        int i12=14, i13=82, i14=11, i15=-2, i16=-6484;
        double d1=101.74354;
        boolean b1=true;

        vMeth2(i4);
        Test.iArrFld[(i4 >>> 1) % N] = i4;
        i12 = 1;
        do {
            for (i13 = 1; i13 < 9; ++i13) {
                Test.iArrFld[i12 - 1] >>>= i13;
                for (i15 = 2; i15 > 1; i15--) {
                    Test.fFld = i13;
                    i14 = i14;
                    if (b1) {
                        Test.fFld += 48;
                        switch ((i15 % 6) + 9) {
                        case 9:
                            switch (((13 >>> 1) % 1) + 112) {
                            case 112:
                                i14 <<= i15;
                                i16 -= i4;
                                break;
                            default:
                                Test.iArrFld = FuzzerUtils.int1array(N, (int)242);
                            }
                            break;
                        case 10:
                            Test.iArrFld[i15 - 1] -= (int)f;
                            break;
                        case 11:
                            i16 += (i15 * i16);
                            break;
                        case 12:
                            d1 = l1;
                            break;
                        case 13:
                            Test.instanceCount -= -9;
                            break;
                        case 14:
                            Test.iArrFld[i15 + 1] += i15;
                            break;
                        default:
                            Test.fArrFld[i13 + 1] += byFld;
                        }
                    } else {
                        Test.iArrFld[i12] = i14;
                        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + i4 + i12 + i13 + i14 + i15 + i16 +
                            Double.doubleToLongBits(d1) + (b1 ? 1 : 0);
                        return;
                    }
                }
            }
        } while ((i12 += 2) < 345);
        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + i4 + i12 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(d1) + (b1 ? 1 : 0);
    }

    public void vMeth(int i2, long l, int i3) {

        int i17=684, i18=3, i19=151, i20=7, i21=-17, i22=-15306, i23=-10, i24=199;

        lArrFld[(i2 >>> 1) % N][(i2 >>> 1) % N] = i3;
        vMeth1(-1927605150L, Test.fFld, i2);
        Test.dFld -= i2;
        for (i17 = 9; i17 < 203; ++i17) {
            for (i19 = 1; i19 < 8; i19++) {
                for (i21 = i19; i21 < 2; ++i21) {
                    i3 = i22;
                    i3 -= i17;
                    i22 += (((i21 * i3) + Test.instanceCount) - Test.instanceCount);
                    i2 -= i18;
                }
                Test.fFld += (i19 * i19);
                for (i23 = 1; i23 < 2; ++i23) {
                    if (bFld) continue;
                    i20 = i18;
                    i18 *= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i2 + l + i3 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24;
    }

    public void mainTest(String[] strArr1) {

        int i=-60483, i1=-47238, i25=22973, i26=-59599, i27=110, i28=-9, i29=-185, i30=82, i31=227, i32=-11;
        short s=25688;
        long l2=-187L;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 2.33284);

        for (i = 2; 138 > i; i++) {
            Test.iArrFld[i + 1] -= Test.iArrFld[i - 1];
            i1 += (i * i);
            vMeth(i1, Test.instanceCount, i);
            dArr[i] += Test.instanceCount;
            i1 >>>= i1;
            for (i25 = 7; i25 < 184; ++i25) {
                Test.iFld = (int)1.271F;
                lArrFld[i25][i] -= i26;
                i27 = 1;
                while (++i27 < 2) {
                    Test.iFld = i26;
                    Test.fArrFld = FuzzerUtils.float1array(N, (float)58.180F);
                    Test.iFld = i27;
                    Test.iFld >>= (int)Test.instanceCount;
                }
                i1 -= byFld;
                s -= (short)-3;
                Test.iFld = i25;
            }
            Test.instanceCount += (i ^ byFld);
        }
        for (i28 = 6; i28 < 254; i28++) {
            for (l2 = 6; 101 > l2; l2++) {
                for (i31 = 1; i31 < 2; i31++) {
                    Test.instanceCount = i28;
                    Test.fFld += (i31 * i31);
                    Test.dFld += Test.iFld;
                    Test.iFld -= i31;
                    Test.iArrFld[i31 + 1] = -138;
                    switch (((-42879 >>> 1) % 7) + 64) {
                    case 64:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    case 65:
                        Test.instanceCount += l2;
                        Test.instanceCount = i29;
                    case 66:
                        i29 = i;
                        break;
                    case 67:
                        lArrFld[i31 + 1] = lArrFld[i28 + 1];
                        break;
                    case 68:
                        i29 -= i29;
                        break;
                    case 69:
                        i32 += (i31 ^ i29);
                        break;
                    case 70:
                        Test.iArrFld[i31 + 1] += (int)Test.instanceCount;
                        break;
                    default:
                        i32 = i1;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i25 = " + i + "," + i1 + "," + i25);
        FuzzerUtils.out.println("i26 i27 s = " + i26 + "," + i27 + "," + s);
        FuzzerUtils.out.println("i28 i29 l2 = " + i28 + "," + i29 + "," + l2);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld byFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + byFld);
        FuzzerUtils.out.println("Test.dFld bFld Test.iFld = " + Double.doubleToLongBits(Test.dFld) + "," + (bFld ? 1 :
            0) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.iArrFld lArrFld Test.lArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld1));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
