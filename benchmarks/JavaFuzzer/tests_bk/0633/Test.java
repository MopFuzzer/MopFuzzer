// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2154485676L;
    public static int iFld=14;
    public static short sFld=-6983;
    public static byte byFld=34;
    public static int iFld1=-227;
    public volatile int iFld2=133;
    public static boolean bFld=true;
    public long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=-37, i7=9813;
        boolean b=true;
        float f1=0.259F;
        double d1=0.53436;

        i6 = 1;
        do {
            i7 = 8;
            while (--i7 > 0) {
                b = b;
                Test.instanceCount -= -1;
                Test.iFld *= Test.sFld;
                Test.iFld += (i7 ^ Test.instanceCount);
                Test.iFld = i6;
                Test.sFld = (short)-10;
                Test.instanceCount += Test.iFld;
                b = b;
                f1 -= f1;
                Test.iFld = Test.iFld;
            }
            f1 *= (float)d1;
            Test.byFld += (byte)(((i6 * f1) + i7) - Test.instanceCount);
            Test.iFld = i7;
        } while (++i6 < 200);
        vMeth2_check_sum += i6 + i7 + (b ? 1 : 0) + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1);
    }

    public void vMeth1() {

        int i5=13, i8=7, i9=10, i10=-12;
        boolean b1=false;
        double d2=1.108654;

        i5 -= i5;
        vMeth2();
        switch (((Test.iFld >>> 1) % 8) + 48) {
        case 48:
            iArrFld[(i5 >>> 1) % N] = i5;
            iArrFld[(i5 >>> 1) % N] *= i5;
            lArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
            i5 -= (int)-86.718F;
        case 49:
            Test.instanceCount = Test.iFld;
            for (i8 = 4; 146 > i8; ++i8) {
                if (b1) {
                    Test.iFld -= i9;
                } else if (b1) {
                    i10 = 1;
                    while (++i10 < 11) {
                        Test.iFld >>= i8;
                        b1 = b1;
                    }
                    iArrFld[i8 - 1] -= (int)Test.instanceCount;
                }
            }
        case 50:
            Test.iFld = Test.iFld1;
            break;
        case 51:
            iArrFld[(i5 >>> 1) % N] ^= (int)-8L;
        case 52:
            iArrFld[(Test.iFld >>> 1) % N] *= (int)Test.instanceCount;
        case 53:
            Test.instanceCount *= -43196;
        case 54:
            Test.sFld = (short)Test.iFld1;
            break;
        case 55:
            i5 = (int)d2;
        }
        vMeth1_check_sum += i5 + i8 + i9 + i10 + (b1 ? 1 : 0) + Double.doubleToLongBits(d2);
    }

    public void vMeth(int i4, double d, float f) {

        int i11=-39100, i12=-174, i13=-60684, i14=-74, iArr[][]=new int[N][N];
        float f2=13.931F;

        FuzzerUtils.init(iArr, -84);

        i4 += (int)(Test.instanceCount++);
        i4 += 56856;
        i4 = (int)(iArr[(-18570 >>> 1) % N][(i4 >>> 1) % N] - ((d--) * (i4 - Test.instanceCount)));
        vMeth1();
        switch (((i4 >>> 1) % 5) + 70) {
        case 70:
            f = Test.iFld;
            for (i11 = 6; 122 > i11; ++i11) {
                i13 = 1;
                while ((i13 += 2) < 13) {
                    i4 -= -8;
                    Test.instanceCount |= -2736720182L;
                    for (f2 = 1; f2 < 3; ++f2) {
                        i12 ^= i12;
                        d = Test.instanceCount;
                        d = 1.6146;
                        Test.iFld1 >>= (int)Test.instanceCount;
                    }
                }
            }
            break;
        case 71:
        case 72:
            Test.instanceCount = i13;
            break;
        case 73:
            Test.instanceCount += 10;
            break;
        case 74:
            Test.instanceCount = Test.byFld;
            break;
        default:
            i12 = -119;
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i11 + i12 + i13 +
            Float.floatToIntBits(f2) + i14 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i1=0, i2=-8372, i3=-78;
        float f3=-1.743F;
        double d3=-36.40781;

        for (long l : lArrFld) {
            for (i = 2; i < 63; i++) {
                for (i2 = 2; i2 > 1; --i2) {
                    vMeth(iFld2, -22.87633, f3);
                    iArrFld[i + 1] *= Test.byFld;
                    switch ((i2 % 5) * 5) {
                    case 15:
                        Test.bFld = Test.bFld;
                        iArrFld[i2] *= (int)2417669511L;
                        try {
                            iFld2 = (i % -51339);
                            i1 = (Test.iFld % -1224097246);
                            iFld2 = (Test.iFld % -6669);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 24:
                        try {
                            i3 = (115 % iArrFld[i + 1]);
                            Test.iFld = (iArrFld[i2] / -10);
                            i3 = (i % Test.iFld);
                        } catch (ArithmeticException a_e) {}
                        iArrFld[i2 + 1] >>>= -149;
                        Test.bFld = Test.bFld;
                        iArrFld[i2] *= (int)-3824527315930926754L;
                        break;
                    case 3:
                    case 4:
                        Test.sFld = (short)i1;
                        break;
                    case 16:
                        Test.instanceCount += (i2 * i2);
                        Test.instanceCount -= Test.instanceCount;
                        f3 = (float)d3;
                        switch ((i2 % 2) + 89) {
                        case 89:
                        case 90:
                            Test.instanceCount += (i2 - l);
                            break;
                        default:
                            Test.instanceCount += Test.iFld;
                        }
                        break;
                    }
                    iFld2 >>>= i;
                    i3 *= (int)l;
                    switch ((((i >>> 1) % 6) * 5) + 49) {
                    case 58:
                        Test.instanceCount -= i3;
                        Test.instanceCount = Test.iFld;
                        break;
                    case 68:
                        try {
                            i1 = (iFld2 % -150);
                            i1 = (i3 % iArrFld[i2]);
                            iFld2 = (i2 / -44212);
                        } catch (ArithmeticException a_e) {}
                        i1 += iFld2;
                        Test.bFld = Test.bFld;
                        l += (i2 - Test.instanceCount);
                        break;
                    case 56:
                        d3 -= i3;
                        break;
                    case 50:
                        iArrFld[i] -= (int)36L;
                    case 62:
                        f3 = 0.668F;
                    case 78:
                        iFld2 += (((i2 * i2) + i3) - Test.instanceCount);
                        break;
                    default:
                        lArrFld[i + 1] = i3;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f3 d3 = " + i3 + "," + Float.floatToIntBits(f3) + "," +
            Double.doubleToLongBits(d3));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.byFld Test.iFld1 iFld2 = " + Test.byFld + "," + Test.iFld1 + "," + iFld2);
        FuzzerUtils.out.println("Test.bFld lArrFld iArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
