// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-107L;
    public static float fFld=-1.329F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        float f=-77.425F, f1=0.204F, fArr[]=new float[N];
        int i5=5, i6=-16623, i7=12, i8=7, i9=-115, i10=-56796, i11=13, iArr1[]=new int[N];
        double d=0.111403;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 14L);
        FuzzerUtils.init(fArr, -13.1003F);
        FuzzerUtils.init(iArr1, 31611);

        f *= i5;
        lArr1[(i5 >>> 1) % N] = i5;
        for (i6 = 4; i6 < 245; i6 += 3) {
            lArr1 = lArr1;
            for (f1 = 19; f1 > 1; f1 -= 3) {
                i7 = -3;
            }
            lArr1[i6] = i5;
            i8 += i6;
            for (i9 = 1; i9 < 19; i9++) {
                i7 += (int)d;
                i7 *= (int)f1;
                i11 = 1;
                do {
                    i8 = 31361;
                    i7 += (i11 * i11);
                    try {
                        i10 = (-57 / i11);
                        i10 = (i10 % i7);
                        iArr1[i6 - 1] = (i11 % i6);
                    } catch (ArithmeticException a_e) {}
                } while ((i11 += 2) < 2);
            }
        }
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 +
            Double.doubleToLongBits(d) + i11 + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1() {

        int i3=-9, i4=155, i12=42254;
        boolean b=true;
        short s1=27323;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 14604L);

        for (i3 = 1; i3 < 184; i3++) {
            double d1=2.114058;
            switch (((iMeth() >>> 1) % 5) + 39) {
            case 39:
                if (b) break;
                i4 += (((i3 * Test.fFld) + Test.fFld) - i4);
                i4 = (int)Test.instanceCount;
                i4 <<= s1;
                break;
            case 40:
                if (i4 != 0) {
                    vMeth1_check_sum += i3 + i4 + (b ? 1 : 0) + s1 + i12 + FuzzerUtils.checkSum(lArr2);
                    return;
                }
                Test.fFld *= i3;
                break;
            case 41:
                d1 -= i4;
                i12 = 1;
                do {
                    Test.fFld = Test.instanceCount;
                    lArr2[i12 - 1] += i12;
                    i4 |= -6297;
                    i4 = i3;
                    i4 -= i3;
                } while (++i12 < 9);
                break;
            case 42:
                i4 -= i12;
                break;
            case 43:
                Test.instanceCount += i3;
            default:
                i4 = (int)3935150303L;
            }
        }
        vMeth1_check_sum += i3 + i4 + (b ? 1 : 0) + s1 + i12 + FuzzerUtils.checkSum(lArr2);
    }

    public void vMeth(short s) {

        int i=43353, i1=12569, i2=-18397, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -77L);
        FuzzerUtils.init(iArr, -84);

        lArr[(41 >>> 1) % N] /= ((long)(Math.abs(iArr[(i >>> 1) % N] % ((i + 29361L) | 1))) | 1);
        i += (iArr[(i >>> 1) % N]--);
        for (i1 = 6; 139 > i1; ++i1) {
            vMeth1();
        }
        s = (short)11;
        vMeth_check_sum += s + i + i1 + i2 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        short s2=-11952;
        int i13=14, i14=-186, i15=-9, i16=29317, i17=-144, i18=-225, i19=7443, iArr2[]=new int[N];
        double d2=0.38824;
        byte by=-3, byArr[][]=new byte[N][N], byArr1[][]=new byte[N][N];
        long l=-14L;

        FuzzerUtils.init(byArr, (byte)125);
        FuzzerUtils.init(byArr1, (byte)10);
        FuzzerUtils.init(iArr2, 2);

        vMeth(s2);
        Test.instanceCount |= i13;
        for (i14 = 3; 398 > i14; i14++) {
            Test.instanceCount *= i14;
            switch ((i14 % 8) + 102) {
            case 102:
                s2 -= (short)Test.instanceCount;
                break;
            case 103:
                Test.instanceCount = i13;
                break;
            case 104:
                i15 += (((i14 * Test.fFld) + i15) - Test.fFld);
                break;
            case 105:
                i13 *= i13;
                byArr = byArr1;
                d2 -= i13;
                break;
            case 106:
                i16 = 64;
                do {
                    i13 ^= (int)Test.instanceCount;
                } while (--i16 > 0);
                d2 = i15;
            case 107:
                iArr2[i14] += (int)Test.instanceCount;
                i15 = i14;
                s2 = by;
                for (l = 4; l < 64; ++l) {
                    iArr2[i14] |= i15;
                    i17 += (int)(l * l);
                    for (i18 = 1; i18 < 2; i18++) {
                        i19 <<= s2;
                    }
                    i19 = (int)30928L;
                    i19 += (int)l;
                    Test.instanceCount = i19;
                }
                break;
            case 108:
                i13 += (int)l;
                Test.instanceCount = i19;
                Test.instanceCount ^= Test.instanceCount;
                break;
            case 109:
                Test.instanceCount += (((i14 * i17) + i16) - i16);
                Test.fFld += (((i14 * i18) + l) - i13);
                break;
            default:
                i15 >>>= 212;
            }
        }

        FuzzerUtils.out.println("s2 i13 i14 = " + s2 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 d2 i16 = " + i15 + "," + Double.doubleToLongBits(d2) + "," + i16);
        FuzzerUtils.out.println("by l i17 = " + by + "," + l + "," + i17);
        FuzzerUtils.out.println("i18 i19 byArr = " + i18 + "," + i19 + "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("byArr1 iArr2 = " + FuzzerUtils.checkSum(byArr1) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
