// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2867952579L;
    public static byte byFld=16;
    public int iFld=-44924;
    public volatile double dFld=56.39643;
    public static double dArrFld[]=new double[N];
    public volatile int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -1.120931);
        FuzzerUtils.init(Test.iArrFld1, -1);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, int i7, short s) {

        int i8=232, i9=-21206, i10=44502, i11=197, iArr[]=new int[N];
        float f=-1.1017F, f1=-68.653F;
        byte by=-76;
        boolean b=true;

        FuzzerUtils.init(iArr, 22436);

        i7 = 5;
        for (i8 = 13; 246 > i8; ++i8) {
            f *= i9;
            Test.instanceCount += (((i8 * by) + i6) - Test.instanceCount);
            i9 += (((i8 * f) + i6) - Test.instanceCount);
            i7 = (int)f;
            i9 += i9;
            Test.instanceCount += (i8 + i8);
            iArr[i8 + 1] = i8;
            by = (byte)i7;
            f1 += i9;
        }
        for (i10 = 13; i10 < 237; i10++) {
            b = true;
            i7 += (int)-132L;
            iArr[i10] *= (int)-6.10F;
        }
        vMeth2_check_sum += i6 + i7 + s + i8 + i9 + Float.floatToIntBits(f) + by + Float.floatToIntBits(f1) + i10 + i11
            + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i5, long l) {

        double d=2.57054;
        short s1=-31195;
        int i12=7, i13=41;
        boolean b1=false;
        float f2=1.448F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 1.326F);
        FuzzerUtils.init(lArr, -115L);

        d *= fArr[(i5 >>> 1) % N];
        vMeth2(i5, 188, s1);
        i5 >>= i5;
        for (i12 = 16; i12 < 310; ++i12) {
            l *= i13;
            i5 = (int)l;
            s1 = (short)-5060132115356792446L;
            if (b1) {
                lArr[i12 + 1] -= i13;
                if (b1) break;
                i13 = i12;
                Test.byFld += (byte)-3000883593L;
            } else {
                f2 += (137 + (i12 * i12));
                Test.instanceCount >>= Test.instanceCount;
                f2 += i12;
                vMeth1_check_sum += i5 + l + Double.doubleToLongBits(d) + s1 + i12 + i13 + (b1 ? 1 : 0) +
                    Float.floatToIntBits(f2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                    FuzzerUtils.checkSum(lArr);
                return;
            }
        }
        vMeth1_check_sum += i5 + l + Double.doubleToLongBits(d) + s1 + i12 + i13 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i, int i1, int i2) {

        int i3=-168, i4=-54, i14=202, i15=-91, i16=180;
        double d1=-1.45852;
        float f3=-80.420F;
        short s2=1405;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-38);

        for (i3 = 9; i3 < 304; i3++) {
            vMeth1(i, Test.instanceCount);
            for (d1 = 6; d1 > 1; --d1) {
                boolean b2=false;
                Test.dArrFld[(i4 >>> 1) % N] -= -14;
                i14 *= i14;
                b2 = false;
                i <<= 175;
                switch ((int)((d1 % 8) + 122)) {
                case 122:
                    byArr[(int)(d1)] -= (byte)62288;
                    break;
                case 123:
                    Test.instanceCount = i1;
                    for (i15 = 1; i15 < 2; ++i15) {
                        f3 += i1;
                        i2 += (i15 + i1);
                        if (b2) continue;
                        Test.byFld *= (byte)-11;
                    }
                    break;
                case 124:
                case 125:
                    i14 += (int)Test.instanceCount;
                case 126:
                    i16 += i2;
                case 127:
                    i14 |= i15;
                    break;
                case 128:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 129:
                    s2 = (short)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d1) + i14 + i15 + i16 +
            Float.floatToIntBits(f3) + s2 + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        float f4=0.377F;
        long l1=1254590250L, l2=-27669L;
        int i17=13, i18=13, i19=-114, i20=-10, i21=10, i22=4473, i23=-6;
        boolean b3=false;

        vMeth(iFld, iFld, iFld);
        dFld -= iFld;
        f4 += f4;
        l1 = 1;
        while (++l1 < 335) {
            for (i17 = 2; i17 < 75; ++i17) {
                l2 = l1;
                iFld = i18;
                dFld = i18;
            }
            i18 <<= (int)l1;
            Test.instanceCount = iFld;
            i18 = iFld;
        }
        iFld = iFld;
        i19 = 1;
        while (++i19 < 330) {
            iFld = i17;
        }
        iFld /= (int)(i19 | 1);
        dFld = -19606;
        iFld <<= Test.byFld;
        Test.instanceCount = (long)f4;
        for (i20 = 4; i20 < 245; ++i20) {
            i21 *= (int)l2;
            if (b3) continue;
            for (i22 = 1; i22 < 104; i22++) {
                iFld = (int)Test.instanceCount;
                iArrFld = Test.iArrFld1;
                iFld = (int)-61.61895;
                f4 = Test.byFld;
                switch ((i20 % 5) + 72) {
                case 72:
                    b3 = b3;
                    i23 = i23;
                case 73:
                    i18 = (int)l1;
                    break;
                case 74:
                    iFld += (19246 + (i22 * i22));
                case 75:
                    Test.iArrFld1[i22 - 1] *= i22;
                    break;
                case 76:
                    f4 += (float)dFld;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("f4 l1 i17 = " + Float.floatToIntBits(f4) + "," + l1 + "," + i17);
        FuzzerUtils.out.println("i18 l2 i19 = " + i18 + "," + l2 + "," + i19);
        FuzzerUtils.out.println("i20 i21 b3 = " + i20 + "," + i21 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i22 i23 = " + i22 + "," + i23);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld iFld = " + Test.instanceCount + "," + Test.byFld + "," +
            iFld);
        FuzzerUtils.out.println("dFld Test.dArrFld iArrFld = " + Double.doubleToLongBits(dFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
