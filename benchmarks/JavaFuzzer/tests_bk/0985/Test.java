// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static boolean bFld=true;
    public static int iFld=103;
    public static short sFld=-9849;
    public float fFld=0.796F;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -39130);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i7, int i8, int i9) {

        int i10=27726, i11=6, i12=-5, i13=-11, i14=17882, i15=-6, iArr[]=new int[N];
        float f1=101.99F, f2=1.976F, fArr[]=new float[N];
        double d=-114.123456;
        byte by=13;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 4);
        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(fArr, 15.415F);

        i7 += i10;
        i11 = 1;
        while (++i11 < 134) {
            switch ((i11 * 5) + 111) {
            case 305:
                f1 = 12;
                while (--f1 > 0) {
                    Test.bFld = Test.bFld;
                }
                switch ((((4 >>> 1) % 9) * 5) + 57) {
                case 71:
                    iArr[i11 + 1] -= (int)d;
                    for (i12 = i11; 12 > i12; i12++) {
                        f2 += i9;
                        i7 = (int)Test.instanceCount;
                        for (i14 = i11; i14 < 1; ++i14) {
                            i15 *= (int)Test.instanceCount;
                        }
                        Test.instanceCount -= (long)f2;
                        i15 = 3537;
                        i15 = (int)Test.instanceCount;
                    }
                    break;
                case 79:
                    Test.instanceCount = Test.iFld;
                case 87:
                    if (Test.bFld) continue;
                    break;
                case 60:
                    f2 -= i12;
                    break;
                case 83:
                    f2 -= Test.instanceCount;
                    break;
                case 64:
                    i7 |= -127;
                    break;
                case 93:
                    i15 |= i14;
                    break;
                case 62:
                    by >>= (byte)i15;
                    break;
                case 94:
                    iArr[i11 - 1] |= i13;
                    break;
                default:
                }
                break;
            case 134:
                f2 += (i11 * i7);
            case 431:
                iArr[i11] = 20115;
                break;
            case 188:
                i13 += (int)Test.instanceCount;
                break;
            case 332:
                f2 += (-16716 + (i11 * i11));
                break;
            case 441:
                by = (byte)Test.instanceCount;
            case 289:
                i7 *= (int)f1;
            case 328:
                f2 += (i11 * i11);
                break;
            case 323:
            case 426:
                Test.instanceCount += (((i11 * i14) + Test.instanceCount) - i15);
                break;
            case 324:
                iArr[i11] = i12;
                break;
            case 185:
                i10 += (i11 | Test.instanceCount);
            case 428:
                iArr[i11] >>= (int)2623737251918719569L;
                break;
            case 235:
            case 217:
                Test.iFld -= Test.sFld;
            case 237:
                i8 = i15;
            case 397:
                i15 <<= i14;
                break;
            case 142:
                f2 += 1.674F;
                break;
            case 187:
                i8 *= i9;
                break;
            case 306:
                Test.instanceCount = Test.iFld;
                break;
            case 166:
            case 157:
                f2 += (float)117.128032;
            case 401:
                i13 += (int)(4.340F + (i11 * i11));
                break;
            case 161:
                iArr[i11 + 1] -= i14;
                break;
            case 424:
                iArr = iArr;
            case 245:
                i15 >>= (int)Test.instanceCount;
                break;
            case 176:
                try {
                    Test.iFld = (i8 % i8);
                    i8 = (i15 / i9);
                    i8 = (837 % i9);
                } catch (ArithmeticException a_e) {}
            case 252:
                f2 += (((i11 * Test.instanceCount) + Test.iFld) - i15);
                break;
            case 287:
                iArr[i11 + 1] = Test.iFld;
                break;
            case 355:
                i7 = i11;
                break;
            case 322:
                Test.instanceCount = i11;
                break;
            case 251:
                iArr[i11] = i14;
                break;
            case 120:
            case 442:
                f2 += (((i11 * i9) + Test.instanceCount) - i11);
                break;
            case 169:
                iArr[i11] = i11;
                break;
            case 443:
                Test.instanceCount = i8;
                break;
            case 356:
                i8 += (i11 | i15);
                break;
            case 293:
                by += (byte)(i11 * i11);
                break;
            case 131:
                Test.iFld = i11;
                break;
            case 398:
                Test.instanceCount -= Test.instanceCount;
                break;
            case 268:
                i13 += (int)-2.57479;
                break;
            case 184:
                Test.iFld <<= Test.iFld;
                break;
            case 215:
                iArr = iArr;
            case 153:
                i9 |= i15;
                break;
            case 380:
                d = d;
                break;
            case 243:
                try {
                    i7 = (-190 % i11);
                    i7 = (iArr[(Test.iFld >>> 1) % N] % 68);
                    Test.iFld = (191 % Test.iFld);
                } catch (ArithmeticException a_e) {}
                break;
            case 213:
                i8 -= i12;
                break;
            case 207:
                i13 |= i14;
                break;
            case 368:
                i15 <<= -90;
                break;
            case 172:
                f2 *= f1;
                break;
            case 405:
                Test.instanceCount >>= i8;
                break;
            case 123:
                by += (byte)i9;
            case 361:
                i8 += (((i11 * i10) + i7) - i7);
            case 450:
                Test.instanceCount += -55342;
                break;
            case 267:
                i7 = i15;
                break;
            case 279:
                if (i13 != 0) {
                    vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d)
                        + i12 + i13 + Float.floatToIntBits(f2) + i14 + i15 + by + FuzzerUtils.checkSum(iArr) +
                        FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                break;
            case 130:
                i9 += (((i11 * Test.instanceCount) + Test.instanceCount) - i14);
            case 389:
                i15 >>= (int)-9L;
                break;
            case 348:
                f2 -= (float)d;
                break;
            case 269:
                d *= i10;
                break;
            case 128:
                Test.sFld += (short)(i11 - by);
            case 379:
                Test.instanceCount += i11;
                break;
            case 331:
                f2 += (-58 + (i11 * i11));
                break;
            case 434:
                fArr[i11] += -51030;
            case 435:
                Test.bFld = Test.bFld;
                break;
            case 138:
                Test.instanceCount += Test.sFld;
                break;
            case 282:
                Test.iFld += (i11 + i10);
                break;
            case 121:
                i13 = i8;
                break;
            case 253:
                fArr[i11] += -21;
                break;
            case 218:
                i8 += Test.iFld;
            }
        }
        vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i12 + i13
            + Float.floatToIntBits(f2) + i14 + i15 + by + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(int i3) {

        int i4=7293, i5=-24562, i6=-4, i18=30710, i19=-11;
        byte by1=-69;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -189L);

        for (i4 = 20; i4 < 341; ++i4) {
            i6 = 1;
            while (++i6 < 5) {
                vMeth(i4, Test.iFld, Test.iFld);
                if (i4 != 0) {
                }
                for (i18 = 1; i18 < 1; ++i18) {
                    lArr1[i18 - 1][i18] -= Test.instanceCount;
                    Test.iFld = i4;
                    i3 += (i18 - i19);
                    lArr1[i6 - 1][i6] *= -14;
                    i19 += i18;
                    i19 = (int)Test.instanceCount;
                    Test.instanceCount >>= i19;
                    if (Test.bFld) break;
                    i19 = i5;
                }
                by1 += (byte)Test.instanceCount;
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i18 + i19 + by1 + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l, short s) {

        int i1=-76, i2=-25, i20=-5, i21=-131, i22=12, i23=-42054, i24=-5169, i25=-2, i26=10;
        float f=-85.410F;

        for (i1 = 8; i1 < 193; ++i1) {
            f *= iMeth(Test.iFld);
            Test.sFld *= (short)Test.instanceCount;
        }
        for (i20 = 6; i20 < 358; i20++) {
            if (Test.bFld) {
                Test.iArrFld = Test.iArrFld;
                i21 >>= (int)56631L;
                for (i22 = 1; 5 > i22; ++i22) {
                    i23 += i22;
                    i23 >>= i20;
                    i24 = 1;
                    while (++i24 < 2) {
                        i2 = i20;
                    }
                    for (i25 = 1; i25 < 2; i25++) {
                        Test.iFld += -31826;
                        i23 += (i25 ^ Test.instanceCount);
                    }
                }
            } else {
                l >>= -1537;
            }
        }
        long meth_res = l + s + i1 + i2 + Float.floatToIntBits(f) + i20 + i21 + i22 + i23 + i24 + i25 + i26;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-139, i28=-49907, i29=54881, i30=65, i31=-14, i32=0, i33=-57;
        byte by2=-37;
        float f3=39.540F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        i -= (int)(lMeth(Test.instanceCount, Test.sFld) + i);
        Test.iArrFld[(-5 >>> 1) % N] ^= Test.iFld;
        Test.instanceCount -= i;
        i = by2;
        fFld = Test.iFld;
        for (int i27 : Test.iArrFld) {
            for (i28 = 2; i28 < 63; i28++) {
                i29 -= i28;
                Test.sFld += (short)fFld;
                f3 += i29;
            }
            f3 = i28;
            Test.iFld = i;
            Test.iArrFld[(i28 >>> 1) % N] += -8;
            bArr[(i27 >>> 1) % N] = true;
            switch (((i >>> 1) % 9) + 79) {
            case 79:
            case 80:
                Test.instanceCount = i;
                break;
            case 81:
                for (i30 = 2; i30 < 63; i30++) {
                    i27 += i27;
                    Test.iFld *= (int)Test.instanceCount;
                    i *= (int)Test.instanceCount;
                    for (i32 = 1; i32 < 2; i32++) {
                        int i34=-247;
                        i33 = (int)f3;
                        i29 += (int)f3;
                        i34 *= Test.sFld;
                        f3 = 2;
                        i29 = -208;
                        i31 = (int)Test.instanceCount;
                    }
                    fFld *= i27;
                    lArrFld = lArrFld;
                    Test.iFld += i31;
                }
                break;
            case 82:
                i27 += by2;
                break;
            case 83:
                Test.iArrFld[(i28 >>> 1) % N] += Test.iFld;
                break;
            case 84:
                Test.iFld = (int)Test.instanceCount;
                break;
            case 85:
                i29 = i27;
                break;
            case 86:
                i29 = (int)Test.instanceCount;
            case 87:
                i27 = i30;
                break;
            default:
                i -= i28;
            }
        }

        FuzzerUtils.out.println("i by2 i28 = " + i + "," + by2 + "," + i28);
        FuzzerUtils.out.println("i29 f3 i30 = " + i29 + "," + Float.floatToIntBits(f3) + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.iFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.sFld fFld Test.iArrFld = " + Test.sFld + "," + Float.floatToIntBits(fFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
