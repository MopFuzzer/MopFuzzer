// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2171412003L;
    public static short sFld=-28872;
    public static float fFld=21.782F;
    public static double dFld=116.115476;
    public volatile int iFld=166;
    public static short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-15232);
        FuzzerUtils.init(Test.iArrFld, -75);
        FuzzerUtils.init(Test.dArrFld, 1.89283);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i1=-4462, i2=124, i3=145, iArr[]=new int[N];
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3963665277L);
        FuzzerUtils.init(iArr, 49765);

        lArr[(i1 >>> 1) % N] = 0L;
        lArr[(i1 >>> 1) % N] -= 28;
        i1 %= (int)(i1 | 1);
        i2 = 1;
        do {
            i3 = 5;
            while ((i3 -= 2) > 0) {
                Test.instanceCount = i2;
                i1 *= 22963;
                Test.sFld += (short)(i3 - i1);
                i1 >>= i2;
                if (b) continue;
                i1 -= (int)Test.instanceCount;
                Test.fFld += (((i3 * Test.instanceCount) + i1) - i2);
                i1 -= (int)Test.instanceCount;
            }
        } while (++i2 < 339);
        iArr[(i1 >>> 1) % N] = (int)Test.instanceCount;
        i1 = i1;
        vMeth2_check_sum += i1 + i2 + i3 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l, long l1) {

        long l2=-1406803131661322693L, l3=-5890323025894254698L, lArr1[]=new long[N];
        int i4=-224, i5=-6, i6=12, i7=-3, i8=-43073;
        byte by=-127;

        FuzzerUtils.init(lArr1, 746211486L);

        vMeth2();
        for (l2 = 11; 184 > l2; l2++) {
            i4 = 25765;
            i4 = i4;
            i4 ^= by;
        }
        switch (((18706 >>> 1) % 9) + 84) {
        case 84:
            l3 = 1;
            do {
                i4 += (int)(((l3 * i4) + Test.fFld) - i4);
                for (i5 = (int)(l3); i5 < 8; ++i5) {
                    i6 *= (int)409364223L;
                    for (i7 = 1; i7 > 1; --i7) {
                        lArr1[i7 + 1] -= 15168;
                    }
                    Test.sFld = (short)l1;
                    Test.sArrFld[(int)(l3 + 1)] = (short)i4;
                    l += (i5 * Test.fFld);
                }
            } while (++l3 < 201);
            break;
        case 85:
        case 86:
            i6 /= (int)(i4 | 1);
            break;
        case 87:
            i6 *= i5;
            break;
        case 88:
            i6 -= (int)Test.dFld;
            break;
        case 89:
            i8 >>= -76;
            break;
        case 90:
            i8 *= by;
        case 91:
            Test.sFld &= (short)l3;
            break;
        case 92:
            i6 *= i7;
            break;
        }
        vMeth1_check_sum += l + l1 + l2 + i4 + by + l3 + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i) {

        float f=109.802F, f1=114.790F, f2=0.770F;
        int i9=-7, i10=-28480, i11=-12, i12=46, i13=45, i14=3;
        byte by1=-102;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 59.41153);

        vMeth1(Test.instanceCount, Test.instanceCount);
        f = i;
        switch ((((i >>> 1) % 2) * 5) + 70) {
        case 73:
            dArr[(i >>> 1) % N] -= Test.sFld;
            for (i9 = 2; i9 < 389; i9++) {
                i = by1;
                for (i11 = 1; i11 < 4; i11++) {
                    i13 = 1;
                    do {
                        if (i13 != 0) {
                            vMeth_check_sum += i + Float.floatToIntBits(f) + i9 + i10 + by1 + i11 + i12 + i13 +
                                Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i14 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                            return;
                        }
                        i12 += i12;
                    } while (++i13 < 2);
                    f1 *= Test.instanceCount;
                    for (f2 = i9; 2 > f2; f2++) {
                        i12 *= (int)f1;
                        Test.sFld = (short)Test.instanceCount;
                        if (i10 != 0) {
                            vMeth_check_sum += i + Float.floatToIntBits(f) + i9 + i10 + by1 + i11 + i12 + i13 +
                                Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i14 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                            return;
                        }
                    }
                }
            }
            break;
        case 72:
            i14 -= (int)Test.dFld;
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + i9 + i10 + by1 + i11 + i12 + i13 + Float.floatToIntBits(f1) +
            Float.floatToIntBits(f2) + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i15=-3, i16=-9, i17=-3454, i18=10466, i19=14, i20=13, i21=-39, i22=-65211, i23=21013, i24=-202, i25=58578,
            i26=3;
        float f3=76.395F, fArr[]=new float[N];
        boolean b1=false;
        byte by2=115;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 189L);
        FuzzerUtils.init(fArr, -54.702F);

        vMeth(i15);
        for (i16 = 299; i16 > 13; i16--) {
            long l4=-806842220966795394L;
            for (i18 = 3; i18 < 88; ++i18) {
                Test.instanceCount *= i18;
                try {
                    i15 = (i16 / 56);
                    i15 = (i17 / 41378);
                    i17 = (i18 % i16);
                } catch (ArithmeticException a_e) {}
                i19 ^= (int)Test.instanceCount;
                i15 = (int)Test.instanceCount;
                i17 += i18;
                Test.iArrFld[i18] = (int)Test.instanceCount;
                for (i20 = 1; i20 < 2; ++i20) {
                    lArr2 = FuzzerUtils.long1array(N, (long)7002438879340096077L);
                    i15 |= i19;
                    Test.dFld += Test.sFld;
                    i17 -= i15;
                    Test.sFld = Test.sFld;
                    Test.instanceCount += i20;
                }
            }
            for (i22 = 5; i22 < 88; ++i22) {
                for (f3 = i22; f3 < 2; f3++) {
                    b1 = false;
                    Test.iArrFld[i22 + 1] ^= i23;
                }
                i17 >>= by2;
            }
            switch (i16 + 123) {
            case 123:
            case 124:
                Test.instanceCount -= Test.instanceCount;
            case 125:
                i19 *= i24;
                i23 += (i16 * i23);
            case 126:
                Test.instanceCount += (7263606122017756470L + (i16 * i16));
                for (i25 = 4; i25 < 88; ++i25) {
                    fArr[i16 - 1] = i24;
                    i21 += i26;
                    Test.iArrFld[i25 + 1] += by2;
                }
            case 127:
                Test.fFld = i20;
                break;
            case 128:
                i19 += i16;
                break;
            case 129:
                i21 += (i16 | Test.instanceCount);
                break;
            case 130:
                l4 *= (long)-83.847F;
                break;
            case 131:
                l4 = -12L;
            case 132:
            case 133:
            case 134:
                l4 += (i16 ^ i21);
                break;
            case 135:
                iFld -= i24;
                break;
            case 136:
            case 137:
                i24 += (int)(-124.506F + (i16 * i16));
            case 138:
                i21 -= 7448;
                break;
            case 139:
                if (b1) break;
                break;
            case 140:
                lArr2[i16] *= iFld;
            case 141:
                i17 = i25;
                break;
            case 142:
                lArr2 = FuzzerUtils.long1array(N, (long)1L);
            case 143:
                if (b1) continue;
                break;
            case 144:
                Test.dArrFld[i16] = Test.fFld;
                break;
            case 145:
                Test.sFld = (short)5947302383402632232L;
                break;
            case 146:
                i26 -= -9;
                break;
            case 147:
                l4 += i16;
                break;
            case 148:
                Test.fFld += ((long)i16 ^ (long)i18);
                break;
            case 149:
                lArr2[i16 - 1] = by2;
                break;
            case 150:
            case 151:
                Test.iArrFld[i16] &= i22;
                break;
            case 152:
                i23 = (int)27.109976;
            case 153:
                l4 <<= i16;
                break;
            case 154:
                lArr2[i16 - 1] = l4;
                break;
            case 155:
                iFld += -12;
                break;
            case 156:
                Test.instanceCount += (((i16 * i21) + Test.fFld) - i19);
                break;
            case 157:
                Test.dFld *= iFld;
                break;
            case 158:
                Test.iArrFld[i16 + 1] >>= -221;
                break;
            case 159:
                Test.iArrFld[i16] += (int)l4;
                break;
            case 160:
                Test.instanceCount = i23;
                break;
            case 161:
                i17 = (int)Test.instanceCount;
                break;
            case 162:
                iFld -= i25;
                break;
            case 163:
                try {
                    i26 = (i25 % -45242);
                    i15 = (Test.iArrFld[i16 + 1] % i17);
                    iFld = (155 % i21);
                } catch (ArithmeticException a_e) {}
                break;
            case 164:
                by2 = (byte)i23;
                break;
            case 165:
                Test.fFld += (-176L + (i16 * i16));
                break;
            case 166:
                try {
                    Test.iArrFld[i16] = (i17 % -3);
                    i19 = (i15 % i23);
                    i21 = (-1375751156 / i26);
                } catch (ArithmeticException a_e) {}
                break;
            case 167:
                i17 = (int)f3;
                break;
            case 168:
                Test.iArrFld[i16] *= 188;
                break;
            case 169:
                l4 += (i16 | i25);
                break;
            case 170:
                Test.iArrFld[i16 - 1] = (int)l4;
                break;
            case 171:
                fArr[i16 + 1] += Test.instanceCount;
                break;
            case 172:
                i26 *= (int)f3;
                break;
            case 173:
                iFld >>>= 43;
                break;
            case 174:
                i21 = (int)l4;
                break;
            case 175:
                fArr[i16] = i24;
                break;
            case 176:
                i24 += (((i16 * i18) + i23) - Test.instanceCount);
                break;
            case 177:
                i24 += iFld;
                break;
            case 178:
                l4 = iFld;
                break;
            case 179:
                iFld += (i16 | i16);
                break;
            case 180:
                if (b1) break;
                break;
            case 181:
                i21 -= 252;
                break;
            case 182:
                i21 = i18;
                break;
            case 183:
                l4 += Test.instanceCount;
                break;
            case 184:
                b1 = b1;
            case 185:
                Test.sFld = (short)i24;
                break;
            case 186:
                i26 = i18;
                break;
            case 187:
                Test.dFld += Test.dFld;
                break;
            case 188:
                i17 ^= i26;
                break;
            case 189:
                if (b1) break;
            case 190:
                Test.fFld *= f3;
                break;
            case 191:
                l4 = 36;
            case 192:
                i21 -= i18;
                break;
            }
        }

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f3 i24 b1 = " + Float.floatToIntBits(f3) + "," + i24 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("by2 i25 i26 = " + by2 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("lArr2 fArr = " + FuzzerUtils.checkSum(lArr2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld iFld Test.sArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + iFld +
            "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
