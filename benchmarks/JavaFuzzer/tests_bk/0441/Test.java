// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=63L;
    public static volatile byte byFld=-49;
    public static float fFld=-43.470F;
    public short sFld=-3362;
    public volatile int iArrFld[]=new int[N];
    public volatile boolean bArrFld[]=new boolean[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=5, i4=5437, i5=52712, i6=94, i7=5, i8=14, i9=-62, iArr[][]=new int[N][N];
        long l=-6L;
        boolean b=false;

        FuzzerUtils.init(iArr, 3190);

        for (i3 = 7; i3 < 193; i3 += 3) {
            Test.instanceCount += (((i3 * Test.byFld) + i3) - Test.instanceCount);
            iArr[i3][i3] <<= i3;
            for (l = 1; 25 > l; l++) {
                iArr[(int)(l - 1)][(int)(l - 1)] *= -22849;
            }
            i4 -= i4;
        }
        if (b) {
            i4 <<= (int)Test.instanceCount;
            for (i6 = 1; i6 < 298; ++i6) {
                i7 += (i6 + i3);
                if (i4 != 0) {
                    vMeth1_check_sum += i3 + i4 + l + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                    return;
                }
            }
            for (i8 = 5; 298 > i8; ++i8) {
                Test.instanceCount -= i5;
                i5 <<= i7;
                i9 += i8;
            }
        } else if (false) {
            i9 += -4;
        }
        vMeth1_check_sum += i3 + i4 + l + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        int i10=102, i11=204, i12=61437, i13=-61720, i14=-12, i15=178, i16=-59633, i17=57598;
        short s1=-12230;
        double d=116.104164;
        boolean b1=true;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 0.97F);

        vMeth1();
        for (i10 = 11; i10 < 192; i10++) {
            s1 += (short)i10;
            d *= Test.instanceCount;
            for (i12 = 1; i12 < 9; ++i12) {
                fArr[i12][i12] -= 14;
                i11 <<= i13;
            }
            for (i14 = 1; i14 < 9; i14++) {
                for (i16 = 1; i16 < 2; ++i16) {
                    Test.fFld -= i13;
                    i17 = 45;
                    iArrFld[i10 + 1] = i13;
                }
                i11 *= i16;
            }
            bArrFld[i10] = b1;
            iArrFld[i10] -= Test.byFld;
        }
        vMeth_check_sum += i10 + i11 + s1 + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 + (b1 ? 1 :
            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(short s, byte by, int i2) {


        vMeth();
        i2 = (int)Test.fFld;
        long meth_res = s + by + i2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=19, i1=53726, i18=3, i19=13, i20=-227, i21=-138, i22=2238, i23=-162, i24=1584;
        double d1=7.40880;
        boolean b2=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 42853L);

        i = 1;
        while (++i < 313) {
            i1 = (int)((iMeth((short)(7453), Test.byFld, i1) / -104) + Test.instanceCount);
        }
        d1 = 1;
        do {
            for (i18 = 3; i18 < 180; ++i18) {
                i1 = 27821;
                for (i20 = 1; i20 < 2; ++i20) {
                    i1 >>>= (int)Test.instanceCount;
                    Test.instanceCount -= i19;
                    lArr[(int)(d1)] ^= i21;
                    Test.fFld = i1;
                    sFld += (short)i20;
                    lArr[i18 + 1] = i;
                }
                i21 = i18;
                iArrFld[(int)(d1 + 1)] = Test.byFld;
                if (b2) continue;
                i19 = i;
                if (b2) {
                    i19 = i18;
                    i21 |= i22;
                    i21 = (int)Test.instanceCount;
                    for (i23 = 1; i23 < 2; i23++) {
                        Test.instanceCount = i21;
                        i22 = (int)Test.instanceCount;
                        i22 += i22;
                        Test.instanceCount <<= Test.byFld;
                        Test.fFld = i19;
                        i19 += i18;
                        i24 ^= i19;
                        i22 += i23;
                    }
                } else {
                    Test.fFld -= -173;
                }
            }
        } while (++d1 < 139);

        FuzzerUtils.out.println("i i1 d1 = " + i + "," + i1 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 b2 i22 = " + i21 + "," + (b2 ? 1 : 0) + "," + i22);
        FuzzerUtils.out.println("i23 i24 lArr = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.fFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("sFld iArrFld bArrFld = " + sFld + "," + FuzzerUtils.checkSum(iArrFld) + "," +
            FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
