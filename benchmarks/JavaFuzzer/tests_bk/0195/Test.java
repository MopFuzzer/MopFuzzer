// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:52:57 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-64663L;
    public static volatile double dFld=27.81615;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -43382);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=-29842, i6=14, i7=108, i8=-161, i9=0, i10=-49962, iArr1[]=new int[N];
        double d=-24.11964;
        float f2=-1.620F;
        boolean b=false;
        byte by1=103;

        FuzzerUtils.init(iArr1, -124);

        for (i5 = 10; 189 > i5; ++i5) {
            i6 -= (int)d;
            for (i7 = 1; i7 < 9; ++i7) {
                d *= Test.instanceCount;
                i9 = 2;
                do {
                    f2 = (float)1.125089;
                    if (b) break;
                    i6 = by1;
                    Test.instanceCount >>= i7;
                    i6 *= by1;
                } while ((i9 -= 3) > 0);
                i10 = 1;
                while ((i10 += 3) < 2) {
                    d -= 197;
                    i6 -= (int)-1.482F;
                    try {
                        i8 = (26394 / iArr1[i5 + 1]);
                        iArr1[i10] = (i7 % -31215);
                        i6 = (i7 / 49183);
                    } catch (ArithmeticException a_e) {}
                    iArr1 = iArr1;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + Double.doubleToLongBits(d) + i7 + i8 + i9 + Float.floatToIntBits(f2) + (b ? 1 :
            0) + by1 + i10 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l1, float f1, int i2) {

        int i3=1, i11=26308, i12=50997, i13=13, i14=-30598, i15=-7640, i16=-10285, iArr[]=new int[N];
        boolean b1=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(dArr, 2.32072);

        i3 += Integer.reverseBytes((--i3) + (i2 + i3));
        for (int i4 : iArr) {
            vMeth2();
            for (i11 = 1; i11 < 4; ++i11) {
                dArr[i11 + 1] -= i11;
            }
            Test.instanceCount += 9;
        }
        i13 = 1;
        while (++i13 < 284) {
            i14 = 1;
            while (++i14 < 6) {
                for (i15 = 1; i15 < 1; ++i15) {
                    switch ((((11 >>> 1) % 8) * 5) + 28) {
                    case 63:
                        l1 *= -45137L;
                        try {
                            i16 = (i12 / i3);
                            i3 = (i11 % i14);
                            i2 = (iArr[i15 - 1] % 131);
                        } catch (ArithmeticException a_e) {}
                    case 54:
                        dArr[i15 - 1] += Test.instanceCount;
                        i3 += (i15 + i12);
                        i2 = i2;
                        break;
                    case 58:
                        f1 += (float)Test.dFld;
                    case 60:
                        if (b1) continue;
                        break;
                    case 34:
                        try {
                            i16 = (iArr[i15] / i14);
                            i12 = (-215 % i16);
                            iArr[i13] = (iArr[(i14 >>> 1) % N] % 1499439914);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 30:
                        i16 = i11;
                    case 44:
                        i2 *= i16;
                        break;
                    case 29:
                    default:
                        i2 = -7;
                    }
                }
            }
        }
        vMeth1_check_sum += l1 + Float.floatToIntBits(f1) + i2 + i3 + i11 + i12 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0)
            + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l, byte by, float f) {

        int i17=24870, i18=-60738, i19=0;
        short s=-10382;
        boolean b2=false;

        vMeth1(47300L, f, i17);
        for (i18 = 5; i18 < 332; ++i18) {
            s *= (short)74;
            Test.instanceCount += (i18 * i18);
            if (b2) break;
        }
        i19 = (int)Test.instanceCount;
        by = (byte)Test.instanceCount;
        i19 += i18;
        vMeth_check_sum += l + by + Float.floatToIntBits(f) + i17 + i18 + i19 + s + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=-13, i1=9, i20=3, i21=-1, i22=43320, i23=-212, i24=7261;
        float f3=0.677F, f4=-125.365F;
        double d1=-73.16243;

        for (i = 5; i < 153; i += 3) {
            i1 = 5;
            vMeth(Test.instanceCount, (byte)(-30), -19.70F);
            i1 *= i;
        }
        Test.instanceCount += Test.instanceCount;
        for (i20 = 3; i20 < 198; ++i20) {
            i1 &= (int)Test.instanceCount;
            i1 = i21;
            i1 += (int)Test.instanceCount;
            Test.instanceCount = -13;
            i21 = i;
            i1 += 42891;
            Test.instanceCount *= i;
            i21 -= i;
            i1 -= i20;
            i21 += (int)Test.dFld;
        }
        f3 = i;
        d1 = 1;
        do {
            i1 = i;
            i1 += (int)(d1 + i20);
            i21 >>= -39504;
            if (false) break;
            Test.dFld += 566L;
            i22 = 1;
            while (++i22 < 69) {
                Test.iArrFld[(int)(d1 - 1)] = (int)Test.instanceCount;
            }
            i1 -= (int)f3;
            i21 += (int)d1;
        } while (++d1 < 363);
        for (i23 = 10; i23 < 305; i23++) {
            f3 += Test.instanceCount;
            f4 = Test.instanceCount;
        }

        FuzzerUtils.out.println("i i1 i20 = " + i + "," + i1 + "," + i20);
        FuzzerUtils.out.println("i21 f3 d1 = " + i21 + "," + Float.floatToIntBits(f3) + "," +
            Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("f4 = " + Float.floatToIntBits(f4));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iArrFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
