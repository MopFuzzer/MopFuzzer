// Generated by Java* Fuzzer test generator (1.0.001). Mon Jul  3 17:53:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3L;
    public static byte byFld=-43;
    public static boolean bFld=false;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 65);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(boolean b, int i4, byte by) {

        int i5=141, i6=-27, i7=5, i8=16855, i9=3334, i10=-3, i11=-3, i12=-87, iArr[]=new int[N];
        short s=31777;
        float f=-65.159F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 47608L);
        FuzzerUtils.init(iArr, 3);

        for (i5 = 14; i5 < 316; i5++) {
            for (i7 = 1; i7 < 5; i7++) {
                i4 >>= i6;
                s *= (short)i8;
                lArr[i7] ^= -109;
                for (i9 = i5; i9 < 2; i9++) {
                    Test.byFld -= (byte)112;
                    if (Test.bFld) break;
                }
                switch ((i7 % 9) + 113) {
                case 113:
                    i4 = i7;
                    if (Test.bFld) break;
                    for (i11 = 2; i11 > 1; --i11) {
                        if (b) break;
                        try {
                            i12 = (i11 / 120);
                            iArr[i5] = (245 / iArr[i7 + 1]);
                            i12 = (i5 / 142);
                        } catch (ArithmeticException a_e) {}
                    }
                    i12 -= i10;
                case 114:
                    i8 = (int)f;
                    break;
                case 115:
                    s += (short)i9;
                    break;
                case 116:
                    by <<= (byte)Test.instanceCount;
                    break;
                case 117:
                    Test.instanceCount -= Test.instanceCount;
                    break;
                case 118:
                    i10 -= i8;
                    break;
                case 119:
                case 120:
                    i4 = -12229;
                    break;
                case 121:
                    i6 += (((i7 * f) + Test.instanceCount) - by);
                    break;
                default:
                    Test.instanceCount = i10;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i4 + by + i5 + i6 + i7 + i8 + s + i9 + i10 + i11 + i12 + Float.floatToIntBits(f)
            + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth(long l1, int i1, double d) {

        int i2=-18754, i3=26, i13=2, i14=5, i15=10531, i16=29, i17=-79;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -28L);

        for (i2 = 6; i2 < 225; i2++) {
            Test.byFld *= (byte)((sMeth(Test.bFld, i1, Test.byFld) - i1) & i1);
            i13 = 1;
            do {
                l1 = i13;
                i1 = (int)d;
                Test.instanceCount = (long)d;
                l1 = i1;
            } while (++i13 < 7);
        }
        for (i14 = 12; i14 < 201; ++i14) {
            i1 = (int)d;
            i3 *= i2;
            for (i16 = 1; 8 > i16; i16++) {
                short s1=-8398;
                s1 += (short)i16;
                i1 -= Test.byFld;
                if (Test.bFld) continue;
                Test.iArrFld[i14] = i16;
            }
        }
        long meth_res = l1 + i1 + Double.doubleToLongBits(d) + i2 + i3 + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i) {

        double d1=-79.95850, dArr[]=new double[N];
        int i18=-20976, i19=-60402, i20=-25, i21=38137, i22=-7604;

        FuzzerUtils.init(dArr, 96.62014);

        i *= Integer.reverseBytes(iMeth(Test.instanceCount, i, d1));
        i = (int)Test.instanceCount;
        if (false) {
            i18 = 1;
            while ((i18 += 2) < 271) {
                float f1=-54.770F;
                for (i19 = i18; i19 < 12; i19++) {
                    Test.instanceCount -= i19;
                    i21 = 1;
                    do {
                        Test.iArrFld[i21 - 1] >>= i20;
                        i20 *= i18;
                        dArr[i19] = i19;
                        i = i19;
                    } while (++i21 < 1);
                    Test.iArrFld[i19 - 1] += (int)Test.instanceCount;
                }
                i22 = 1;
                while (++i22 < 12) {
                    Test.bFld = false;
                }
                f1 *= i18;
            }
        } else if (Test.bFld) {
            i = (int)l;
        } else if (Test.bFld) {
            Test.iArrFld = Test.iArrFld;
        }
        vMeth_check_sum += l + i + Double.doubleToLongBits(d1) + i18 + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i23=10, i24=-1, i25=-24485, i26=-2, i27=-31242, i28=23288;
        double d2=45.18733, dArr1[][]=new double[N][N];
        long l3=3L;
        short s2=29556;
        float f2=-5.276F;

        FuzzerUtils.init(dArr1, 9.58794);

        vMeth(Test.instanceCount, -81);
        i23 = 94;
        i24 = 1;
        do {
            for (i25 = 5; i25 < 96; ++i25) {
                Test.iArrFld[i24] -= (int)d2;
                for (l3 = 1; l3 < 2; ++l3) {
                    i27 -= (int)d2;
                    i26 += i25;
                    s2 = (short)i23;
                    i26 -= (int)l3;
                    i27 &= 162;
                    i26 >>>= (int)Test.instanceCount;
                    i27 += (int)l3;
                    i23 <<= 15313;
                    if (Test.bFld) continue;
                }
            }
            i27 += i24;
            Test.byFld >>= (byte)s2;
            i28 = 1;
            while (++i28 < 96) {
                i27 += (((i28 * l3) + i28) - i27);
                Test.instanceCount -= (long)f2;
                Test.instanceCount += i26;
                if (false) continue;
                d2 = i28;
                i26 += (int)-74.39F;
                i27 = Test.byFld;
            }
            if (Test.bFld) break;
            dArr1[i24] = dArr1[i24];
            i26 += (i24 ^ i23);
            i26 = (int)l3;
        } while (++i24 < 262);
        Test.instanceCount |= 10510;

        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 d2 l3 = " + i26 + "," + Double.doubleToLongBits(d2) + "," + l3);
        FuzzerUtils.out.println("i27 s2 i28 = " + i27 + "," + s2 + "," + i28);
        FuzzerUtils.out.println("f2 dArr1 = " + Float.floatToIntBits(f2) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("sMeth_check_sum: " + sMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
